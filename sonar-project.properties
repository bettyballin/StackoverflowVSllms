sonar.projectKey=bettyballin_StackoverflowVSllms
sonar.projectName=StackoverflowVSllms
sonar.projectVersion=1.0
sonar.organization=fraunhofer-sit
sonar.sourceEncoding=UTF-8
sonar.sources=java_code_files_dbrx
sonar.java.binaries=java_compiled_dbrx

#sonar.cfamily.compile-commands=cpp_code_files_stackoverflow/build/compile_commands.json
# sonar.language=c
# sonar.c.file.suffixes=.c
# sonar.sources=.
#sonar.language=c  # Set the language to C/C++
#sonar.cfamily.build-wrapper=build_wrapper_output_directory
# sonar.sources=qwen25-coder/java_code_files_qwen25-coder
# sonar.java.binaries=qwen25-coder/java_compiled_qwen25-coder
# sonar.exclusions=**/*.c, **/*.cpp
# Set a multiline custom preprocessor to disable C++ exceptions and define a `custom_macro` to 1
#sonar.cfamily.customPreprocessor=#undef __cpp_exceptions\n#define custom_macro 1\n

# Set custom targets, possible values are listed in the UI
# This is equivalent to Clang command line argument: "-target aarch64-pc-linux-gnu"
# sonar.cfamily.customTargetArch=aarch64
# sonar.cfamily.customTargetVendor=pc
# sonar.cfamily.customTargetSystem=linux
# sonar.cfamily.customTargetEnv=gnu

# # Override the default C++ language standard with c++14
# sonar.cfamily.reportingCppStandardOverride=c++14
