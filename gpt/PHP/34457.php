<?php\nrequire 'vendor/autoload.php'; // Assuming you're using Composer for dependencies\n\nuse Aws\S3\S3Client;\nuse Intervention\Image\ImageManagerStatic as Image;\n\n// Initialize S3 client\n$s3 = new S3Client([\n    'version' => 'latest',\n    'region'  => 'your-region',\n    'credentials' => [\n        'key'    => 'your-key',\n        'secret' => 'your-secret',\n    ],\n]);\n\n// Function to process and cache image\nfunction processAndCacheImage($imagePath, $width, $height) {\n    $cacheKey = md5($imagePath . $width . $height);\n    $cachePath = '/path/to/cache/' . $cacheKey . '.jpg';\n\n    if (file_exists($cachePath)) {\n        return $cachePath;\n    }\n\n    $image = Image::make($imagePath)->resize($width, $height);\n    $image->save($cachePath);\n\n    return $cachePath;\n}\n\n// Handle image request\nfunction handleImageRequest($s3, $bucket, $key, $width, $height) {\n    $imagePath = '/path/to/temp/' . basename($key);\n    \n    // Download the original image from S3\n    $result = $s3->getObject([\n        'Bucket' => $bucket,\n        'Key'    => $key,\n        'SaveAs' => $imagePath,\n    ]);\n\n    $cachedImagePath = processAndCacheImage($imagePath, $width, $height);\n\n    header('Content-Type: image/jpeg');\n    readfile($cachedImagePath);\n}\n\n// Example usage\n$bucket = 'your-bucket';\n$key = 'path/to/image.jpg';\n$width = 200;\n$height = 200;\n\nhandleImageRequest($s3, $bucket, $key, $width, $height);\n?>