class MySQL {\n    private $conn;\n\n    function __construct() {\n        $this->conn = new mysqli(DB_SERVER, DB_USER, DB_PASSWORD, DB_NAME);\n        if ($this->conn->connect_errno) {\n            trigger_error('Error connecting to host. ' . $this->conn->connect_error, E_USER_ERROR);\n        }\n    }\n\n    function extracting_data($table, $fields, $condition, $order, $limit) {\n        // Use only allowed table names and fields to prevent SQL injection\n        $allowedTables = ['tablename']; // Add allowed table names here\n        $allowedFields = ['id', 'name', 'points']; // Add allowed fields here\n        $allowedOrderFields = ['date'];\n\n        // Validate table name\n        if (!in_array($table, $allowedTables)) {\n            trigger_error('Invalid table name.', E_USER_ERROR);\n        }\n\n        // Validate fields\n        foreach (explode(',', $fields) as $field) {\n            if (!in_array(trim($field), $allowedFields)) {\n                trigger_error('Invalid field name.', E_USER_ERROR);\n            }\n        }\n\n        // Validate order field\n        list($orderField, $orderDirection) = explode(' ', $order);\n        if (!in_array(trim($orderField), $allowedOrderFields) || !in_array(strtoupper($orderDirection), ['ASC', 'DESC'])) {\n            trigger_error('Invalid order clause.', E_USER_ERROR);\n        }\n\n        // Prepare the query\n        $query = "SELECT $fields FROM $table WHERE id = ? ORDER BY $order LIMIT ?";\n        if ($stmt = $this->conn->prepare($query)) {\n            // Bind parameters\n            $stmt->bind_param('ii', $condition, $limit);\n            $stmt->execute();\n\n            $result = $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n\n            $stmt->close();\n            return $result;\n        } else {\n            trigger_error('Query preparation failed: ' . $this->conn->error, E_USER_ERROR);\n        }\n    }\n}\n\n// Usage\n$connection = new MySQL();\n$extract = $connection->extracting_data("tablename", "id,name,points", $_GET['id'], "date DESC", 10);