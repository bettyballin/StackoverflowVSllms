class SomeClass {\n    private $dispatch;\n\n    public function __construct() {\n        $this->dispatch = array(\n            1 => array($this, 'someFunction'),\n            2 => array($this, 'anotherFunction')\n        );\n    }\n\n    private function someFunction() {\n        echo "someFunction called";\n    }\n\n    private function anotherFunction() {\n        echo "anotherFunction called";\n    }\n\n    public function execute($key) {\n        if (isset($this->dispatch[$key]) && is_callable($this->dispatch[$key])) {\n            call_user_func($this->dispatch[$key]);\n        } else {\n            echo "No valid function found for key $key";\n        }\n    }\n}\n\n// Usage\n$instance = new SomeClass();\n$instance->execute(1);  // Outputs: someFunction called\n$instance->execute(2);  // Outputs: anotherFunction called