<?php\nclass NeighborArray {\n    private $items = [];\n\n    public function __construct(array $items) {\n        $this->items = $items;\n        $this->setNeighbors();\n    }\n\n    private function setNeighbors() {\n        $count = count($this->items);\n        for ($i = 0; $i < $count; $i++) {\n            if ($i > 0) {\n                $this->items[$i]->prev = $this->items[$i - 1];\n            } else {\n                $this->items[$i]->prev = null;\n            }\n\n            if ($i < $count - 1) {\n                $this->items[$i]->next = $this->items[$i + 1];\n            } else {\n                $this->items[$i]->next = null;\n            }\n        }\n    }\n\n    public function getItems() {\n        return $this->items;\n    }\n}\n\nclass Item {\n    public $data;\n    public $prev;\n    public $next;\n\n    public function __construct($data) {\n        $this->data = $data;\n    }\n}\n\n// Example usage:\n\n$items = [\n    new Item('Item 1'),\n    new Item('Item 2'),\n    new Item('Item 3'),\n];\n\n$neighborArray = new NeighborArray($items);\n$itemsWithNeighbors = $neighborArray->getItems();\n\nforeach ($itemsWithNeighbors as $item) {\n    echo 'Current: ' . $item->data . "\n";\n    echo 'Previous: ' . ($item->prev ? $item->prev->data : 'None') . "\n";\n    echo 'Next: ' . ($item->next ? $item->next->data : 'None') . "\n\n";\n}\n?>