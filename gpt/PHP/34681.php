interface OtherClassInterface {\n    public function someMethod();\n}\n\nclass OtherClass implements OtherClassInterface {\n    public function someMethod() {\n        // Implementation\n    }\n}\n\nclass MyClass {\n    private $otherClass;\n\n    public function __construct(OtherClassInterface $otherClass) {\n        $this->otherClass = $otherClass;\n    }\n\n    public function myMethod() {\n        $var1 = $this->otherMethod1();\n        $var2 = $this->otherMethod2();\n        $var3 = $this->otherMethod3();\n        $var4 = $this->otherClass->someMethod();\n\n        // some processing with these 4 variables\n        // then the method returns something else\n\n        return $var5;\n    }\n\n    private function otherMethod1() {\n        // Implementation\n    }\n\n    private function otherMethod2() {\n        // Implementation\n    }\n\n    private function otherMethod3() {\n        // Implementation\n    }\n}