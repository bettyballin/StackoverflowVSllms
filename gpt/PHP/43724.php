interface PaymentGateway {\n        public function charge($amount);\n    }\n\n    class StripePaymentGateway implements PaymentGateway {\n        public function charge($amount) {\n            // Stripe-specific implementation\n        }\n    }\n\n    class PaymentProcessor {\n        protected $gateway;\n\n        public function __construct(PaymentGateway $gateway) {\n            $this->gateway = $gateway;\n        }\n\n        public function processPayment($amount) {\n            $this->gateway->charge($amount);\n        }\n    }\n\n    // Usage\n    $gateway = new StripePaymentGateway();\n    $processor = new PaymentProcessor($gateway);\n    $processor->processPayment(100);