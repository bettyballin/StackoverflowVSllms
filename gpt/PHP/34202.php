function validate_password($plain, $encrypted) {\n    // Check if the password is in the old osCommerce format\n    $stack = explode(':', $encrypted);\n    if (sizeof($stack) == 2) {\n        // Validate using osCommerce method\n        if (md5($stack[1] . $plain) == $stack[0]) {\n            // Password is valid, rehash using new method\n            $new_hashed_password = md5($plain);\n            // Update the password in the database\n            update_password_in_database($plain, $new_hashed_password);\n            return true;\n        }\n    } else {\n        // Validate using new method\n        if (md5($plain) == $encrypted) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction update_password_in_database($username, $new_hashed_password) {\n    // Update the user's password in the database with the new hashed password\n    // Example query (assuming you have a database connection set up):\n    $query = "UPDATE users SET password = '$new_hashed_password' WHERE username = '$username'";\n    mysqli_query($connection, $query);\n}\n\n// Example usage\n$password_from_user = 'password_entered_by_user';\n$stored_password = 'retrieved_from_database';\n\nif (validate_password($password_from_user, $stored_password)) {\n    echo "Password is valid!";\n} else {\n    echo "Invalid password!";\n}