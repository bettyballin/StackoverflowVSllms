function http_digest_parse($txt)\n{\n    // Protect against missing data\n    $needed_parts = ['nonce' => 1, 'nc' => 1, 'cnonce' => 1, 'qop' => 1, 'realm' => 1, 'opaque' => 1];\n    $data = [];\n\n    preg_match_all('@(\w+)=(?:(?:")([^"]+)"|([^\s,]+))@', $txt, $matches, PREG_SET_ORDER);\n\n    foreach ($matches as $m) {\n        $data[$m[1]] = $m[2] ? $m[2] : $m[3];\n        unset($needed_parts[$m[1]]);\n    }\n\n    return $needed_parts ? false : $data;\n}\n\nfunction generate_digest_response($username, $password, $uri, $method, $www_authenticate_header)\n{\n    $data = http_digest_parse($www_authenticate_header);\n    if (!$data) {\n        return false;\n    }\n\n    $A1 = md5("{$username}:{$data['realm']}:{$password}");\n    $A2 = md5("{$method}:{$uri}");\n    $nonce = $data['nonce'];\n    $nc = '00000001';\n    $cnonce = uniqid();\n    $qop = $data['qop'];\n    \n    $response = md5("{$A1}:{$nonce}:{$nc}:{$cnonce}:{$qop}:{$A2}");\n\n    $authorization = 'Digest ';\n    $authorization .= 'username="' . $username . '", ';\n    $authorization .= 'realm="' . $data['realm'] . '", ';\n    $authorization .= 'nonce="' . $nonce . '", ';\n    $authorization .= 'uri="' . $uri . '", ';\n    $authorization .= 'qop=' . $qop . ', ';\n    $authorization .= 'nc=' . $nc . ', ';\n    $authorization .= 'cnonce="' . $cnonce . '", ';\n    $authorization .= 'response="' . $response . '", ';\n    if (!empty($data['opaque'])) {\n        $authorization .= 'opaque="' . $data['opaque'] . '", ';\n    }\n    $authorization = rtrim($authorization, ', ');  // Remove trailing comma and space\n\n    return $authorization;\n}\n\n// Example usage\n$www_authenticate_header = 'WWW-Authenticate: Digest realm="example.com", qop="auth", nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093", opaque="5ccc069c403ebaf9f0171e9517f40e41"';\n$username = 'your_username';\n$password = 'your_password';\n$uri = '/protected/resource';\n$method = 'GET';\n\n$auth_header = generate_digest_response($username, $password, $uri, $method, $www_authenticate_header);\necho $auth_header;