/**\n * Implements hook_form().\n */\nfunction mymodule_form($form, &$form_state) {\n  $form['csv_file'] = array(\n    '#type' => 'file',\n    '#title' => t('Upload CSV file'),\n    '#description' => t('Upload a CSV file containing email addresses.'),\n    '#required' => TRUE,\n  );\n\n  $form['submit'] = array(\n    '#type' => 'submit',\n    '#value' => t('Submit'),\n  );\n\n  return $form;\n}\n\n/**\n * Implements hook_form_submit().\n */\nfunction mymodule_form_submit($form, &$form_state) {\n  $file = file_save_upload('csv_file', array(\n    'file_validate_extensions' => array('csv'),\n  ));\n\n  if ($file) {\n    // Move the file to the public file system.\n    $file = file_move($file, 'public://csv_uploads/' . $file->filename, FILE_EXISTS_REPLACE);\n    if ($file) {\n      // Parse the CSV file.\n      $csv_data = array();\n      if (($handle = fopen($file->uri, "r")) !== FALSE) {\n        while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {\n          $csv_data[] = $data[0]; // Assuming email addresses are in the first column.\n        }\n        fclose($handle);\n      }\n\n      // Create a temporary table.\n      $table_name = 'temporary_emails_' . time();\n      db_query("CREATE TEMPORARY TABLE {$table_name} (email VARCHAR(255) NOT NULL)");\n\n      // Insert CSV data into the temporary table.\n      foreach ($csv_data as $email) {\n        db_insert($table_name)\n          ->fields(array('email' => $email))\n          ->execute();\n      }\n\n      // Perform the SQL join.\n      $query = db_select('users', 'u')\n        ->fields('u', array('mail'))\n        ->condition('u.mail', db_select($table_name, 't')\n          ->fields('t', array('email')), 'IN')\n        ->distinct(TRUE);\n\n      $result = $query->execute();\n\n      // Output the result.\n      foreach ($result as $record) {\n        drupal_set_message(t('Email: @mail', array('@mail' => $record->mail)));\n      }\n\n      // Cleanup the temporary table.\n      db_query("DROP TABLE {$table_name}");\n    }\n  }\n}