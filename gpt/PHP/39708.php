<?php\nfunction createDynamicPNG($width, $height, $color, $shape, $transparency) {\n    // Create a blank image\n    $image = imagecreatetruecolor($width, $height);\n\n    // Convert color to RGB format\n    list($r, $g, $b) = sscanf($color, "#%02x%02x%02x");\n\n    // Allocate colors\n    $bgColor = imagecolorallocatealpha($image, 255, 255, 255, 127);\n    $shapeColor = imagecolorallocatealpha($image, $r, $g, $b, 127 * (1 - $transparency));\n\n    // Fill the background with transparent color\n    imagefill($image, 0, 0, $bgColor);\n    imagesavealpha($image, true);\n\n    // Draw shapes\n    switch ($shape) {\n        case 'circle':\n            $radius = min($width, $height) / 2;\n            imagefilledellipse($image, $width / 2, $height / 2, $radius * 2, $radius * 2, $shapeColor);\n            break;\n        case 'rectangle':\n            imagefilledrectangle($image, 0, 0, $width, $height, $shapeColor);\n            break;\n        case 'triangle':\n            $points = [\n                $width / 2, 0,\n                0, $height,\n                $width, $height\n            ];\n            imagefilledpolygon($image, $points, 3, $shapeColor);\n            break;\n        default:\n            // If no valid shape is provided, draw a rectangle by default\n            imagefilledrectangle($image, 0, 0, $width, $height, $shapeColor);\n            break;\n    }\n\n    // Output the image\n    header("Content-Type: image/png");\n    imagepng($image);\n    imagedestroy($image);\n}\n\n// Example usage\ncreateDynamicPNG(200, 200, '#ff5733', 'circle', 0.5);\n?>