<?php\n\nclass Database\n{\n    public function FetchRow($query)\n    {\n        // Simulate fetching result from the database\n        $result = $this->executeQuery($query);\n        return new DatabaseStatement($result);\n    }\n\n    private function executeQuery($query)\n    {\n        // Dummy data for demonstration\n        if ($query == 'SELECT * FROM users WHERE id = 1;') {\n            return [\n                'id' => 1,\n                'username' => 'john_doe',\n                'email' => 'john@example.com'\n            ];\n        } else {\n            return null;\n        }\n    }\n}\n\nclass DatabaseStatement implements ArrayAccess\n{\n    private $result;\n\n    public function __construct($result)\n    {\n        $this->result = $result;\n    }\n\n    public function __get($column)\n    {\n        return $this->result[$column] ?? null;\n    }\n\n    public function offsetExists($offset)\n    {\n        return isset($this->result[$offset]);\n    }\n\n    public function offsetGet($offset)\n    {\n        return $this->result[$offset] ?? null;\n    }\n\n    public function offsetSet($offset, $value)\n    {\n        $this->result[$offset] = $value;\n    }\n\n    public function offsetUnset($offset)\n    {\n        unset($this->result[$offset]);\n    }\n\n    public function toArray()\n    {\n        return $this->result;\n    }\n}\n\n$db = new Database;\n$result = $db->FetchRow('SELECT * FROM users WHERE id = 1;');\n\nif ($result != null) {\n    echo $result->username; // Calls the __get method\n    echo '<pre>' . print_r($result->toArray(), true) . '</pre>'; // Converts the result to an array and prints it\n}