function customError($level, $message, $file, $line, $context) {\n    echo "Sorry, an error has occurred on line $line.<br />";\n    echo "The function that caused the error says: $message.<br />";\n    die();\n}\n\nfunction customException($exception) {\n    echo "Sorry, an exception has occurred: " . $exception->getMessage() . "<br />";\n    die();\n}\n\nfunction shutdownHandler() {\n    $error = error_get_last();\n    if ($error !== null) {\n        echo "A fatal error has occurred:<br />";\n        echo "Error: " . $error['message'] . "<br />";\n        echo "File: " . $error['file'] . "<br />";\n        echo "Line: " . $error['line'] . "<br />";\n        die();\n    }\n}\n\nset_error_handler("customError");\nset_exception_handler("customException");\nregister_shutdown_function("shutdownHandler");\n\n// Test with an undefined function\nimAFakeFunction(); // This will now be caught by the shutdown handler