<?php\n$archivalie_id = $_GET['archivalie_id'];\n$no_data = '<span class="no-data">No data</span>';\n\n// Use parameterized query to prevent SQL injection\n$query = "SELECT \n            a.*, \n            ip.description AS internal_project,\n            o.description AS origin,\n            to_char(ad.origin_date,'YYYY') AS origin_date  \n          FROM archivalie AS a \n          LEFT JOIN archivalie_dating AS ad ON a.id = ad.archivalie_id                \n          LEFT JOIN internal_project AS ip ON a.internal_project_id = ip.id\n          LEFT JOIN origin AS o ON a.origin_id = o.id               \n          WHERE a.id = $1";\n\n// Prepare and execute the query\n$result = pg_query_params($db, $query, array($archivalie_id));\n\n// Fetch the result and handle default values\nwhile ($row = pg_fetch_object($result)) {\n    $fields = ['internal_project', 'incoming_date', 'origin'];\n    \n    foreach ($fields as $field) {\n        $$field = (!empty($row->$field)) ? $row->$field : $no_data;\n    }\n\n    // Now you can use $internal_project, $incoming_date, and $origin\n}\n?>