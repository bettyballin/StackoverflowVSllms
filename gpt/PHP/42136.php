<?php\n\ninterface MyInterface {\n    public function someMethod();\n}\n\nclass MyClass implements MyInterface {\n    public function someMethod() {\n        echo "This is MyClass implementing MyInterface.";\n    }\n}\n\nclass TypedArray extends ArrayObject {\n    private $type;\n\n    public function __construct(string $type, array $array = []) {\n        $this->type = $type;\n        parent::__construct();\n        foreach ($array as $item) {\n            $this->offsetSet(null, $item);\n        }\n    }\n\n    public function offsetSet($index, $newval) {\n        if (!$newval instanceof $this->type) {\n            throw new InvalidArgumentException('Value must be of type ' . $this->type);\n        }\n        parent::offsetSet($index, $newval);\n    }\n}\n\n// Usage\ntry {\n    $typedArray = new TypedArray(MyInterface::class);\n    $typedArray[] = new MyClass(); // This is valid\n    $typedArray[] = new stdClass(); // This will throw an InvalidArgumentException\n} catch (InvalidArgumentException $e) {\n    echo $e->getMessage();\n}\n?>