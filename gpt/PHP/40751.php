<?php\n// Database connection function using PDO\nfunction getDatabaseConnection() {\n    try {\n        $dsn = 'mysql:host=your_host;dbname=your_db';\n        $username = 'your_username';\n        $password = 'your_password';\n        $options = [\n            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,\n        ];\n        return new PDO($dsn, $username, $password, $options);\n    } catch (PDOException $e) {\n        handleError('Database connection failed: ' . $e->getMessage());\n    }\n}\n\n// Custom error handling function\nfunction handleError($errorMessage) {\n    // Log the error (consider using a logging library like Monolog)\n    error_log($errorMessage);\n\n    // Determine the interface (web or email)\n    if (php_sapi_name() == 'cli') {\n        echo "Internal Error: Please contact support.\n";\n    } else {\n        echo "<p>Internal Error: Please contact support.</p>";\n    }\n    exit;\n}\n\n// Function to check for duplicate email\nfunction isDuplicateEmail($email) {\n    try {\n        $pdo = getDatabaseConnection();\n        $stmt = $pdo->prepare('SELECT COUNT(*) FROM users WHERE email = :email');\n        $stmt->execute(['email' => $email]);\n        $count = $stmt->fetchColumn();\n\n        return $count > 0;\n    } catch (PDOException $e) {\n        handleError('Query execution failed: ' . $e->getMessage());\n    }\n}\n\n// Example usage\n$email = 'test@example.com';\nif (isDuplicateEmail($email)) {\n    echo "Email is already registered.";\n} else {\n    echo "Email is available.";\n}\n?>