function buildTree(array $elements, $parentId = 0) {\n    $branch = array();\n\n    foreach ($elements as $element) {\n        if ($element['parent'] == $parentId) {\n            $children = buildTree($elements, $element['id']);\n            if ($children) {\n                $element['children'] = $children;\n            }\n            $branch[] = $element;\n        }\n    }\n\n    return $branch;\n}\n\nfunction flattenTree(array $tree) {\n    $flat = array();\n\n    foreach ($tree as $node) {\n        $children = !empty($node['children']) ? $node['children'] : [];\n        unset($node['children']);\n        $flat[] = $node;\n        $flat = array_merge($flat, flattenTree($children));\n    }\n\n    return $flat;\n}\n\n$array = [\n    ['id' => 1, 'name' => 'Kompetenser', 'parent' => 0, 'depth' => 0],\n    ['id' => 2, 'name' => 'Administration', 'parent' => 1, 'depth' => 1],\n    ['id' => 11, 'name' => 'Organisation', 'parent' => 2, 'depth' => 2],\n    ['id' => 4, 'name' => 'Arbetsledning', 'parent' => 2, 'depth' => 2],\n    ['id' => 17, 'name' => 'Planering', 'parent' => 2, 'depth' => 2],\n    ['id' => 9, 'name' => 'Hantverke', 'parent' => 1, 'depth' => 1],\n    ['id' => 10, 'name' => 'Snickeri', 'parent' => 9, 'depth' => 2],\n    ['id' => 12, 'name' => 'SprÃ¥k', 'parent' => 1, 'depth' => 1],\n    ['id' => 13, 'name' => 'Tolk', 'parent' => 12, 'depth' => 2],\n    ['id' => 15, 'name' => 'Arabiska', 'parent' => 13, 'depth' => 3],\n    ['id' => 14, 'name' => 'Persiska', 'parent' => 13, 'depth' => 3],\n    ['id' => 16, 'name' => 'Polska', 'parent' => 13, 'depth' => 3],\n    ['id' => 18, 'name' => 'Apotekare', 'parent' => 1, 'depth' => 1],\n    ['id' => 19, 'name' => 'Dotkorand', 'parent' => 1, 'depth' => 1],\n    ['id' => 21, 'name' => 'Atomfysik', 'parent' => 19, 'depth' => 2],\n    ['id' => 20, 'name' => 'Fysik', 'parent' => 19, 'depth' => 2],\n    ['id' => 22, 'name' => 'Ekonom', 'parent' => 1, 'depth' => 1],\n    ['id' => 23, 'name' => 'Industriell ekonomi', 'parent' => 22, 'depth' => 2],\n    ['id' => 24, 'name' => 'Filosofi', 'parent' => 22, 'depth' => 2]\n];\n\n$tree = buildTree($array);\n$sortedArray = flattenTree($tree);\n\nprint_r($sortedArray);