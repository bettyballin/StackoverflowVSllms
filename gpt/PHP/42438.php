public function query($sql, $params = [], $multi = false)\n{\n    // Prepare the statement\n    if ($stmt = $this->db->prepare($sql)) {\n        \n        // Bind parameters if provided\n        if (!empty($params)) {\n            // Dynamically create the types string for bind_param\n            $types = str_repeat('s', count($params)); // assuming all parameters are strings, adjust as needed\n            $stmt->bind_param($types, ...$params);\n        }\n\n        // Execute the statement\n        if ($stmt->execute()) {\n            // Handle fetch operation\n            if ($multi) {\n                $result = $stmt->get_result();\n                $obj = [];\n                while ($d = $result->fetch_object()) {\n                    $obj[] = $d;\n                }\n            } else {\n                $result = $stmt->get_result();\n                $obj = $result->fetch_object();\n            }\n            $stmt->close();\n            return $obj;\n        } else {\n            // Execution failed\n            echo $stmt->error;\n            $stmt->close();\n            return false;\n        }\n    } else {\n        // Preparation failed\n        echo $this->db->error;\n        return false;\n    }\n}\n\n// Example of usage\n// Insert\n$sql = "INSERT INTO users (username, password) VALUES (?, ?)";\n$params = ['user', 'pass'];\n$this->query($sql, $params);\n\n// Delete\n$sql = "DELETE FROM users WHERE id = ?";\n$params = [1];\n$this->query($sql, $params);\n\n// Update\n$sql = "UPDATE users SET password = ? WHERE username = ?";\n$params = ['newpass', 'user'];\n$this->query($sql, $params);