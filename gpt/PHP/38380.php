$soapResponse = <<<XML\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://example.org">\n    <SOAP-ENV:Body>\n        <ns1:MyResponse>\n            <ns1:MyResult>true</ns1:MyResult>\n        </ns1:MyResponse>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>\nXML;\n\n// Load the SOAP response into a DOMDocument\n$dom = new DOMDocument();\n$dom->loadXML($soapResponse);\n\n// Create a new namespace for the payload\n$xpath = new DOMXPath($dom);\n$xpath->registerNamespace('SOAP-ENV', 'http://schemas.xmlsoap.org/soap/envelope/');\n$xpath->registerNamespace('ns1', 'http://example.org');\n\n// Locate the node where the namespace should be moved\n$nodes = $xpath->query('//SOAP-ENV:Body/*');\n\nforeach ($nodes as $node) {\n    $node->setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:ns1', 'http://example.org');\n}\n\n// Remove the namespace declaration from the root node\n$envelope = $xpath->query('/SOAP-ENV:Envelope')->item(0);\n$envelope->removeAttributeNS('http://www.w3.org/2000/xmlns/', 'ns1');\n\n// Output modified SOAP response\n$newSoapResponse = $dom->saveXML();\necho $newSoapResponse;