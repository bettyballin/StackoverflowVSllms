class StringManipulator {\n    private $value;\n\n    public function __construct($value) {\n        $this->value = $value;\n    }\n\n    public function trim() {\n        $this->value = trim($this->value);\n        return $this;\n    }\n\n    public function toLower() {\n        $this->value = strtolower($this->value);\n        return $this;\n    }\n\n    public function repeat($times) {\n        $this->value = str_repeat($this->value, $times);\n        return $this;\n    }\n\n    public function get() {\n        return $this->value;\n    }\n}\n\n// Usage:\n$manipulatedString = (new StringManipulator("  Hello World  "))\n                    ->trim()\n                    ->toLower()\n                    ->repeat(2)\n                    ->get();\n\necho $manipulatedString; // Outputs: "hello worldhello world"