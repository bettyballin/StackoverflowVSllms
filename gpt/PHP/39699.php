function selectivelyFlattenArray($array, $pattern) {\n    $result = [];\n\n    foreach ($array as $key => $value) {\n        // Check if the key matches the pattern\n        if (strpos($key, $pattern) !== false) {\n            // If it's a match, flatten all sub elements\n            flattenSubElements($value, $result);\n        } elseif (is_array($value)) {\n            // If the value is an array, recursively check its elements\n            $result = array_merge($result, selectivelyFlattenArray($value, $pattern));\n        }\n    }\n\n    return $result;\n}\n\nfunction flattenSubElements($array, &$result) {\n    foreach ($array as $key => $value) {\n        if (is_array($value)) {\n            flattenSubElements($value, $result);\n        } else {\n            $result[] = $value;\n        }\n    }\n}\n\n// Example usage\n$musicCatalogue = [\n    'Sunshine Band' => [\n        'album1' => ['song1', 'song2'],\n        'album2' => ['song3', 'song4']\n    ],\n    'Moonlight Artists' => [\n        'sunnyAlbum' => ['song5', 'song6'],\n        'album3' => ['song7', 'song8']\n    ],\n    'Starry Night' => [\n        'album4' => ['song9', 'song10']\n    ]\n];\n\n$pattern = 'sun';\n$flattenedArray = selectivelyFlattenArray($musicCatalogue, $pattern);\nprint_r($flattenedArray);