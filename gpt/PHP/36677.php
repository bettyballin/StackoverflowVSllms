// Model class with validation logic\nclass UserModel {\n    private $data = array();\n\n    public function setData(array $data) {\n        // Perform validation\n        if (empty($data['username'])) {\n            throw new Exception('Username is required');\n        }\n        if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {\n            throw new Exception('Invalid email address');\n        }\n\n        $this->data = $data;\n    }\n\n    public function save() {\n        // Code to save the data to the database\n    }\n\n    public function getData() {\n        return $this->data;\n    }\n}\n\n// Form class for handling form-specific logic\nclass UserForm extends Zend_Form {\n    public function init() {\n        // Add form elements and form-specific validations\n        $this->addElement('text', 'username', array('label' => 'Username'));\n        $this->addElement('text', 'email', array('label' => 'Email'));\n        $this->addElement('submit', 'submit', array('label' => 'Submit'));\n    }\n}\n\n// Controller action\npublic function createAction() {\n    $form = new UserForm();\n    $model = new UserModel();\n    \n    if ($this->getRequest()->isPost()) {\n        if ($form->isValid($this->getRequest()->getPost())) {\n            try {\n                $model->setData($form->getValues());\n                $model->save();\n                // Redirect or success message\n            } catch (Exception $e) {\n                $form->addError($e->getMessage());\n            }\n        }\n    }\n    \n    $this->view->form = $form;\n}