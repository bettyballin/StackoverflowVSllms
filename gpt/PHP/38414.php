class Container {\n    protected $bindings = [];\n\n    public function set($key, $value) {\n        $this->bindings[$key] = $value;\n    }\n\n    public function get($key) {\n        if (isset($this->bindings[$key])) {\n            return $this->bindings[$key];\n        }\n\n        throw new Exception("No binding found for key: " . $key);\n    }\n}\n\nclass Controller {\n    protected $container;\n\n    public function __construct($container) {\n        $this->container = $container;\n    }\n\n    public function someAction() {\n        $service = $this->container->get('someService');\n        $service->execute();\n    }\n}\n\n// Usage\n$container = new Container();\n$container->set('someService', new SomeService());\n\n$controller = new Controller($container);\n$controller->someAction();