abstract class LP_Model {\n    protected $gateway;\n    protected $class;\n\n    public function __construct(GatewayInterface $gateway, $class) {\n        $this->gateway = $gateway;\n        $this->class = $class;\n    }\n\n    public function get($param) {\n        if ($param instanceof Zend_Db_Table_Row_Abstract) {\n            $row = $param;\n        } elseif (is_numeric($param)) {\n            $row = $this->gateway->find($param)->current();\n        }\n\n        return new $this->class($row);\n    }\n\n    public function getCollection($param = null) {\n        if ($param instanceof Zend_Db_Table_Rowset_Abstract) {\n            $rowset = $param;\n        } elseif (!$param) {\n            $rowset = $this->gateway->fetchAll();\n        }\n\n        $array = array();\n\n        foreach ($rowset as $row) {\n            $array[] = new $this->class($row);\n        }\n\n        return $array;\n    }\n}