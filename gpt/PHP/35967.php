<?php\n// Hex string from input\n$hexString = '742713478fb3c36e014d004100440041004e0041004e00000060f347d15798c90100606b899c5a98c9014d007900470072006f007500700000002f0000001f7691944b9a3306295fb5f1f57ca52090d35b50060606060606';\n\n// Convert hex string to binary\n$binaryData = hex2bin($hexString);\n\n// Extract the part of the data to hash (excluding the last 20 bytes)\n$dataToHash = substr($binaryData, 0, -20);\n\n// Calculate SHA1 hash\n$calculatedHash = sha1($dataToHash);\n\n// Convert the last 20 bytes to hex for comparison\n$providedHashHex = substr($hexString, -40);\n\n// Output results\necho "Calculated SHA1 Hash: " . $calculatedHash . PHP_EOL;\necho "Provided SHA1 Hash: " . $providedHashHex . PHP_EOL;\n\n// Compare hashes\nif ($calculatedHash == $providedHashHex) {\n    echo "The SHA1 hash matches." . PHP_EOL;\n} else {\n    echo "The SHA1 hash does not match." . PHP_EOL;\n}\n?>