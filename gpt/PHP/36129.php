<?php\n\nclass PhpFileFilter extends FilterIterator {\n    public function accept() {\n        $file = $this->current();\n        return $file->isFile() && $file->getExtension() === 'php';\n    }\n}\n\nclass ClassDetector extends IteratorIterator {\n    private $regex = '/class\s+([a-zA-Z0-9_]+)/'; // Simplified regex to match class names\n\n    public function current() {\n        $file = parent::current();\n        $classes = [];\n        \n        if (preg_match_all($this->regex, file_get_contents($file->getRealPath()), $matches)) {\n            foreach ($matches[1] as $className) {\n                $classes[$className] = $file->getRealPath();\n            }\n        }\n        \n        return $classes;\n    }\n}\n\n$dir = '/path/to/your/directory';\n\n$phpFiles = new PhpFileFilter(new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir)));\n$classDetector = new ClassDetector($phpFiles);\n\n$masterArray = [];\nforeach ($classDetector as $classArray) {\n    $masterArray = array_merge($masterArray, $classArray);\n}\n\nforeach ($masterArray as $class => $file) {\n    echo "{$class} => {$file}\n";\n}\n?>