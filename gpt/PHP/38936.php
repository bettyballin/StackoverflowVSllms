<?php\nfunction parseXmlWithDetailedErrors($xmlString) {\n    // Enable user error handling\n    libxml_use_internal_errors(true);\n\n    $dom = new DOMDocument();\n    $isLoaded = $dom->loadXML($xmlString);\n\n    if (!$isLoaded) {\n        // Collecting errors\n        $errors = libxml_get_errors();\n        libxml_clear_errors();\n\n        $errorMessages = [];\n        foreach ($errors as $error) {\n            $errorMessages[] = formatLibxmlError($error);\n        }\n\n        // Return errors\n        return ['success' => false, 'errors' => $errorMessages];\n    }\n\n    // Return DOMDocument if successful\n    return ['success' => true, 'dom' => $dom];\n}\n\nfunction formatLibxmlError($error) {\n    return "Error {$error->code} at line {$error->line}, column {$error->column}: {$error->message}";\n}\n\n// Example usage\n$xmlString = '<your_xml_here>'; // replace with your XML string\n$result = parseXmlWithDetailedErrors($xmlString);\n\nif ($result['success']) {\n    $dom = $result['dom'];\n    // Perform your DOM operations here, for example:\n    $xpath = new DOMXPath($dom);\n    // Your XPath queries\n} else {\n    foreach ($result['errors'] as $error) {\n        echo $error . PHP_EOL;\n    }\n}\n?>