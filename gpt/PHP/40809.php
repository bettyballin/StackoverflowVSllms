$page = isset($_GET['page']) ? (int)$_GET['page'] : 1;\n$max = 5;\n\n// If $page is less than 1, set page number to 1\nif ($page < 1) $page = 1;\n\n$limit = ($page - 1) * $max;\n$tid = 1;  // Assuming tid is 1 as per the original query\n\n// Get the total number of posts\n$totalresQuery = "SELECT COUNT(id) AS tot FROM posts WHERE tid = ?";\n$stmt = $mysqli->prepare($totalresQuery);\n$stmt->bind_param("i", $tid);\n$stmt->execute();\n$result = $stmt->get_result();\n$row = $result->fetch_assoc();\n$totalres = $row['tot'];\n$totalpages = ceil($totalres / $max);\n\n// Get the oldest post\n$oldestPostQuery = "SELECT * FROM posts WHERE tid = ? ORDER BY date ASC LIMIT 1";\n$stmt = $mysqli->prepare($oldestPostQuery);\n$stmt->bind_param("i", $tid);\n$stmt->execute();\n$oldestPostResult = $stmt->get_result();\n\n$oldestPost = $oldestPostResult->fetch_assoc();\n$oldestPostId = $oldestPost['id'];\n\n// Get the rest of the posts with pagination, excluding the oldest post\n$paginationQuery = "SELECT * FROM posts WHERE tid = ? AND id != ? ORDER BY date DESC LIMIT ?, ?";\n$stmt = $mysqli->prepare($paginationQuery);\n$stmt->bind_param("iiii", $tid, $oldestPostId, $limit, $max);\n$stmt->execute();\n$paginationResult = $stmt->get_result();\n\n$posts = [];\nif ($page == 1) {\n    // If it's the first page, include the oldest post at the top\n    $posts[] = $oldestPost;\n}\nwhile ($row = $paginationResult->fetch_assoc()) {\n    $posts[] = $row;\n}\n\n$stmt->close();\n$mysqli->close();\n\n// Now $posts contains the result, with the oldest post always on top if it's the first page