class CostCountingData {\n    private $numbers;\n    private $contacts;\n    private $groups;\n    private $campaigns;\n    private $user;\n    private $text;\n    private $totalQuantity;\n    \n    // Private constructor to enforce the use of the builder\n    private function __construct() {}\n\n    public static function builder() {\n        return new class {\n            private $data;\n\n            public function __construct() {\n                $this->data = new CostCountingData();\n            }\n\n            public function setNumbers($numbers) {\n                $this->data->numbers = $numbers;\n                return $this;\n            }\n\n            public function setContacts($contacts) {\n                $this->data->contacts = $contacts;\n                return $this;\n            }\n\n            public function setGroups($groups) {\n                $this->data->groups = $groups;\n                return $this;\n            }\n\n            public function setCampaigns($campaigns) {\n                $this->data->campaigns = $campaigns;\n                return $this;\n            }\n\n            public function setUser($user) {\n                $this->data->user = $user;\n                return $this;\n            }\n\n            public function setText($text) {\n                $this->data->text = $text;\n                return $this;\n            }\n\n            public function setTotalQuantity($totalQuantity) {\n                $this->data->totalQuantity = $totalQuantity;\n                return $this;\n            }\n\n            public function build() {\n                return $this->data;\n            }\n        };\n    }\n\n    // Getters can be added here\n}\n\n// Usage of the builder\n$costData = CostCountingData::builder()\n    ->setNumbers($numbers)\n    ->setContacts($contacts)\n    ->setGroups($groups)\n    ->setCampaigns($campaigns)\n    ->setUser($user)\n    ->setText($text)\n    ->setTotalQuantity($totalQuantity)\n    ->build();\n\n$costCounter = new TemplateReccurentSendingCostCounter($costData);\n$totalCost = $costCounter->count();