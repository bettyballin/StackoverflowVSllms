<?php\n// Load the XML file\n$xmlFile = 'path/to/your/xmlfile.xml';\n$xml = simplexml_load_file($xmlFile);\n\n// Function to remove markers based on type value\nfunction removeMarkersByType($xml, $type) {\n    foreach ($xml->marker as $index => $marker) {\n        if ((string) $marker->type === $type) {\n            unset($xml->marker[$index]);\n        }\n    }\n}\n\n// Function to add a new marker\nfunction addMarker($xml, $type, $title, $address, $latitude, $longitude) {\n    $newMarker = $xml->addChild('marker');\n    $newMarker->addChild('type', $type);\n    $newMarker->addChild('title', $title);\n    $newMarker->addChild('address', $address);\n    $newMarker->addChild('latitude', $latitude);\n    $newMarker->addChild('longitude', $longitude);\n}\n\n// Example search queries\n$searchQuery = 'hotels'; // Change this as needed\n\n// Remove markers of the same type as the search query\nremoveMarkersByType($xml, $searchQuery);\n\n// Example data to add (in a real scenario, this would come from your search results)\n$newMarkers = [\n    [\n        'type' => 'hotels',\n        'title' => 'Hotel Example',\n        'address' => '123 Hotel St',\n        'latitude' => '40.7128',\n        'longitude' => '-74.0060'\n    ],\n    // Add more markers as needed\n];\n\n// Add new markers to the XML\nforeach ($newMarkers as $markerData) {\n    addMarker($xml, $markerData['type'], $markerData['title'], $markerData['address'], $markerData['latitude'], $markerData['longitude']);\n}\n\n// Save the modified XML back to the file\n$xml->asXML($xmlFile);\n\necho "XML file updated successfully.";\n?>