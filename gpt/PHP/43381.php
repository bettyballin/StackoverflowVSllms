function findBounds($array, $n) {\n    $low = 0;\n    $high = count($array) - 1;\n\n    // Edge cases\n    if ($n < $array[$low]) {\n        return [null, $array[$low]];\n    }\n    if ($n > $array[$high]) {\n        return [$array[$high], null];\n    }\n\n    while ($low <= $high) {\n        $mid = intval(($low + $high) / 2);\n\n        if ($array[$mid] == $n) {\n            return [$array[$mid], $array[$mid]];\n        } elseif ($array[$mid] < $n) {\n            if ($array[$mid + 1] > $n) {\n                return [$array[$mid], $array[$mid + 1]];\n            }\n            $low = $mid + 1;\n        } else {\n            if ($array[$mid - 1] < $n) {\n                return [$array[$mid - 1], $array[$mid]];\n            }\n            $high = $mid - 1;\n        }\n    }\n\n    return [null, null]; // This should never be reached if input is within array bounds\n}\n\n$ar = [5, 10, 15, 20];\n$n = 8;\n$result = findBounds($ar, $n);\necho "n = $n is between $result[0] and $result[1]";