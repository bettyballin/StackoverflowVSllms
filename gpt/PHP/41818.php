class Main\n{\n    private $connections = [];\n\n    public function dbconnect($db)\n    {\n        if (!isset($this->connections[$db])) {\n            $connection = null;\n            switch ($db) {\n                case "users":\n                    $connection = new mysqli('host', 'username', 'password', 'users_db');\n                    break;\n                case "ads":\n                    $connection = new mysqli('host', 'username', 'password', 'ads_db');\n                    break;\n                default:\n                    throw new Exception("$db is not a recognized database.");\n            }\n\n            if ($connection->connect_error) {\n                throw new Exception("Connection failed: " . $connection->connect_error);\n            }\n\n            $this->connections[$db] = $connection;\n        }\n\n        return $this->connections[$db];\n    }\n\n    public function create($class, $params = null)\n    {\n        if (!class_exists($class) && !$this->load($class)) {\n            throw new Exception("$class is not a recognized class.");\n        }\n        return new $class($this, $params);\n    }\n\n    private function load($file)\n    {\n        $filePath = $_SERVER['DOCUMENT_ROOT'] . "/classes/" . $file . ".class.php";\n        if (file_exists($filePath)) {\n            require_once($filePath);\n            return true;\n        }\n        return false;\n    }\n}\n\nclass Secondary\n{\n    private $connection;\n    private $mainObj;\n    private $params;\n\n    public function __construct(Main $mainObj, $params)\n    {\n        $this->mainObj = $mainObj;\n        $this->params = $params;\n        $this->connection = $mainObj->dbconnect('users');\n    }\n}