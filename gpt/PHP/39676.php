<?php\n// Command to run your script\n$command = 'sh your_script.sh';\n\n// Start the process\n$descriptorspec = [\n    0 => ["pipe", "r"], // stdin\n    1 => ["pipe", "w"], // stdout\n    2 => ["pipe", "w"]  // stderr\n];\n\n$process = proc_open($command, $descriptorspec, $pipes);\n\nif (is_resource($process)) {\n    // Get the process status\n    $status = proc_get_status($process);\n    $pid = $status['pid'];\n\n    // Save the PID to a file or database\n    file_put_contents('/path/to/process.pid', $pid);\n\n    // Close the pipes\n    fclose($pipes[0]);\n    fclose($pipes[1]);\n    fclose($pipes[2]);\n\n    // Close the process resource\n    proc_close($process);\n}\n\n// Function to check the process status\nfunction isProcessRunning($pid) {\n    $result = shell_exec(sprintf("ps %d", $pid));\n    if (count(preg_split("/\n/", $result)) > 2) {\n        return true;\n    }\n    return false;\n}\n\n// Function to stop the process\nfunction stopProcess($pid) {\n    shell_exec(sprintf("kill %d", $pid));\n}\n\n// Usage example\n$pid = file_get_contents('/path/to/process.pid');\nif (isProcessRunning($pid)) {\n    echo "Process is running";\n    // Optionally stop the process\n    // stopProcess($pid);\n} else {\n    echo "Process is not running";\n}\n?>