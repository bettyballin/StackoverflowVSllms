<?php\n// Define an interface\ninterface Logger {\n    public function log($message);\n}\n\n// Define an abstract class\nabstract class AbstractLogger implements Logger {\n    protected $logFile;\n\n    public function __construct($logFile) {\n        $this->logFile = $logFile;\n    }\n\n    abstract public function log($message);\n}\n\n// Concrete implementation of the abstract class\nclass FileLogger extends AbstractLogger {\n    public function log($message) {\n        file_put_contents($this->logFile, $message . PHP_EOL, FILE_APPEND);\n    }\n}\n\n// Usage\n$logger = new FileLogger('/path/to/log.txt');\n$logger->log('This is a log message.');\n?>