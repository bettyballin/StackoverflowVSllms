class View\n{\n    private $_vars = array();\n    private $_file;\n\n    public function __construct($file)\n    {\n        $this->_file = 'views/' . $file . '.php';\n    }\n\n    public function set($var, $value = null)\n    {\n        if (is_array($var)) {\n            $this->_vars = array_merge($var, $this->_vars);\n        } else {\n            $this->_vars[$var] = $value;\n        }\n\n        return $this;\n    }\n\n    public function output($additionalVars = array())\n    {\n        // Merge additional variables with the current scope variables\n        $vars = array_merge($this->_vars, $additionalVars);\n        if (count($vars)) {\n            extract($vars, EXTR_REFS);\n        }\n        require($this->_file);\n    }\n\n    public static function factory($file)\n    {\n        return new self($file);\n    }\n}