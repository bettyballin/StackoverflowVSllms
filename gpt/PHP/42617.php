<?php\n$flv = 'filename';\n\n$ch = curl_init($flv);\ncurl_setopt($ch, CURLOPT_NOBODY, true);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($ch, CURLOPT_HEADER, true);\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // not necessary unless the file redirects\n$data = curl_exec($ch);\n\ncurl_close($ch);\n\nif ($data === false) {\n    echo 'cURL failed';\n    exit;\n}\n\n$contentLength = 'unknown';\nif (preg_match('/Content-Length: (\d+)/', $data, $matches)) {\n    $contentLength = (int)$matches[1];\n}\n\nheader('Content-Description: File Transfer');\nheader('Content-Type: application/octet-stream');\nheader('Content-Disposition: attachment; filename=' . basename($flv));\nheader('Content-Transfer-Encoding: binary');\nheader('Expires: 0');\nheader('Cache-Control: must-revalidate, post-check=0, pre-check=0');\nheader('Pragma: public');\nheader('Content-Length: ' . $contentLength);\nob_clean();\nflush();\n\n// Serve the file in chunks to avoid blocking\n$handle = fopen($flv, 'rb');\nif ($handle === false) {\n    echo 'Error opening the file';\n    exit;\n}\n\nwhile (!feof($handle)) {\n    echo fread($handle, 8192);\n    flush();\n}\n\nfclose($handle);\n?>