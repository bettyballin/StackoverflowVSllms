<?php\nuse PHPUnit\Framework\TestCase;\n\nclass MyClass {\n    private $properties = [];\n\n    public function __get($name) {\n        return $this->properties[$name] ?? null;\n    }\n\n    public function __set($name, $value) {\n        $this->properties[$name] = $value;\n    }\n}\n\nclass MyClassTest extends TestCase {\n    public function testMagicGet() {\n        $mock = $this->getMockBuilder(MyClass::class)\n                     ->setMethods(['__get'])\n                     ->getMock();\n\n        $mock->expects($this->any())\n             ->method('__get')\n             ->with($this->equalTo('test'))\n             ->willReturn('value');\n\n        $this->assertEquals('value', $mock->test);\n    }\n\n    public function testMagicSet() {\n        $mock = $this->getMockBuilder(MyClass::class)\n                     ->setMethods(['__set'])\n                     ->getMock();\n\n        $mock->expects($this->any())\n             ->method('__set')\n             ->with($this->equalTo('test'), $this->equalTo('value'));\n\n        $mock->test = 'value';\n    }\n}