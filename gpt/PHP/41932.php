function function1() {\n    // Simulate a long-running process\n    sleep(10);\n    echo "Function1 completed\n";\n}\n\nfunction doSomething() {\n    //..code here..\n    \n    $pid = pcntl_fork();\n    if ($pid == -1) {\n        // Fork failed\n        die('Could not fork');\n    } elseif ($pid) {\n        // Parent process\n        pcntl_signal(SIGALRM, function() use ($pid) {\n            posix_kill($pid, SIGKILL);\n            echo "Function1 timed out\n";\n        });\n\n        // Set time limit for function1 (e.g., 5 seconds)\n        pcntl_alarm(5);\n\n        // Wait for child process to complete\n        pcntl_wait($status);\n        \n        // Reset alarm\n        pcntl_alarm(0);\n    } else {\n        // Child process\n        function1();\n        exit(0); // Exit child process\n    }\n\n    //.. some code here..\n}\n\n// Ensure pcntl functions are available\nif (function_exists('pcntl_fork') && function_exists('pcntl_alarm')) {\n    doSomething();\n} else {\n    die("PCNTL functions are not available on this system.\n");\n}