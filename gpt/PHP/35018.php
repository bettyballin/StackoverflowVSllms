class SQLReformatter {\n    protected $dbType;\n\n    public function __construct($dbType) {\n        $this->dbType = $dbType;\n    }\n\n    public function reformat($query) {\n        // Parse and reformat the SQL query based on $this->dbType\n        // This is a simplified example\n        if ($this->dbType == 'mysql') {\n            // Convert to MySQL specific syntax\n            return str_replace('LIMIT', 'LIMIT', $query);\n        } elseif ($this->dbType == 'mssql') {\n            // Convert to MSSQL specific syntax\n            return str_replace('LIMIT', 'TOP', $query);\n        }\n        // Add more database types as needed\n        return $query;\n    }\n}\n\n// Usage\n$reformatter = new SQLReformatter('mysql');\n$query = "SELECT * FROM table WHERE id = 4 ORDER BY id DESC LIMIT 0, 30";\n$formattedQuery = $reformatter->reformat($query);\n// Execute the formatted query using PDO or similar\n// PDO::query($formattedQuery);