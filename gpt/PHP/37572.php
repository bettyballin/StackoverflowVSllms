// Function to build the tree structure\nfunction buildTree(array &$elements, $parentId = 0) {\n    $branch = [];\n    foreach ($elements as &$element) {\n        if ($element['parent_id'] == $parentId) {\n            $children = buildTree($elements, $element['id']);\n            if ($children) {\n                $element['children'] = $children;\n            }\n            $branch[] = $element;\n            unset($element);\n        }\n    }\n    return $branch;\n}\n\n// Function to render the tree as a nested list\nfunction renderTree(array $tree) {\n    echo "<ul>";\n    foreach ($tree as $element) {\n        echo "<li>" . htmlspecialchars($element['title']);\n        if (!empty($element['children'])) {\n            renderTree($element['children']);\n        }\n        echo "</li>";\n    }\n    echo "</ul>";\n}\n\n// Example usage\n$pages = [\n    ['id' => 1, 'title' => 'Home', 'parent_id' => 0],\n    ['id' => 2, 'title' => 'News', 'parent_id' => 1],\n    ['id' => 3, 'title' => 'Sub-news', 'parent_id' => 2],\n    ['id' => 4, 'title' => 'Articles', 'parent_id' => 1],\n    ['id' => 5, 'title' => 'Article', 'parent_id' => 4]\n];\n\n// Build the tree from the flat array\n$tree = buildTree($pages);\n\n// Render the tree as a nested list\nrenderTree($tree);