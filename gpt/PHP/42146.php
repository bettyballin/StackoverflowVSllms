class MyClass implements ArrayAccess {\n    private $container = [];\n\n    public function __construct() {\n        $this->container = [\n            "first" => "value1",\n            "second" => "value2",\n        ];\n    }\n\n    public function offsetSet($offset, $value) {\n        if (is_null($offset)) {\n            $this->container[] = $value;\n        } else {\n            $this->container[$offset] = $value;\n        }\n    }\n\n    public function offsetExists($offset) {\n        return isset($this->container[$offset]);\n    }\n\n    public function offsetUnset($offset) {\n        unset($this->container[$offset]);\n    }\n\n    public function offsetGet($offset) {\n        return isset($this->container[$offset]) ? $this->container[$offset] : null;\n    }\n\n    public function getArray() {\n        return $this->container;\n    }\n}\n\n$obj = new MyClass();\n$value = $obj['first']; // Accessing like an array\necho $value; // Outputs: value1