class Database {\n    private $connection;\n\n    // Assuming you have a method to establish a connection\n    public function __construct($host, $user, $password, $database) {\n        $this->connection = new mysqli($host, $user, $password, $database);\n        if ($this->connection->connect_error) {\n            die('Connect Error (' . $this->connection->connect_errno . ') ' . $this->connection->connect_error);\n        }\n    }\n\n    // Escape method using mysqli_real_escape_string\n    public function escape($value) {\n        return $this->connection->real_escape_string($value);\n    }\n\n    // Execute method to run the query\n    public function exec($sql) {\n        return $this->connection->query($sql);\n    }\n\n    // Helper method to prepare escaped SQL query\n    public function prepareQuery($query, $params) {\n        foreach ($params as $key => $value) {\n            $escapedValue = $this->escape($value);\n            $query = str_replace(":$key", "'$escapedValue'", $query);\n        }\n        return $query;\n    }\n}\n\n// Usage example\n$DB = new Database('localhost', 'user', 'password', 'database');\n\n// User inputs\n$var_x = $_POST['var_x'];\n$another_var = $_POST['another_var'];\n$some_string = $_POST['some_string'];\n\n// Prepare the query with placeholders\n$query = "SELECT * FROM table WHERE var_x = :var_x AND another_var = :another_var AND some_string = :some_string";\n\n// Prepare and execute the query\n$preparedQuery = $DB->prepareQuery($query, [\n    'var_x' => $var_x,\n    'another_var' => $another_var,\n    'some_string' => $some_string\n]);\n$result = $DB->exec($preparedQuery);\n\n// Fetch results (if needed)\nwhile ($row = $result->fetch_assoc()) {\n    print_r($row);\n}