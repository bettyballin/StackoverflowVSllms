class Logger {\n    private static $instance = null;\n\n    private function __construct() {\n        // Private constructor to prevent direct instantiation\n    }\n\n    public static function getInstance() {\n        if (self::$instance === null) {\n            self::$instance = &Log::singleton('file', 'logfile.log', 'ident', [], PEAR_LOG_DEBUG);\n        }\n        return self::$instance;\n    }\n}\n\n// Usage in your functions\nfunction someFunction() {\n    $logger = Logger::getInstance();\n    $logger->log('This is a log message from someFunction.');\n}\n\nfunction anotherFunction() {\n    $logger = Logger::getInstance();\n    $logger->log('This is a log message from anotherFunction.');\n}\n\n// Example of usage in your script\nsomeFunction();\nanotherFunction();