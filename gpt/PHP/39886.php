<?php\nfunction encryptArray($array, $key) {\n    // Serialize the array\n    $data = serialize($array);\n\n    // Generate an initialization vector\n    $iv_length = openssl_cipher_iv_length('aes-256-cbc');\n    $iv = openssl_random_pseudo_bytes($iv_length);\n\n    // Encrypt the data\n    $encrypted = openssl_encrypt($data, 'aes-256-cbc', $key, 0, $iv);\n\n    // Encode the result for cookie storage\n    return base64_encode($encrypted . '::' . $iv);\n}\n\nfunction decryptArray($encryptedData, $key) {\n    // Decode the base64-encoded data\n    list($encrypted, $iv) = explode('::', base64_decode($encryptedData), 2);\n\n    // Decrypt the data\n    $decrypted = openssl_decrypt($encrypted, 'aes-256-cbc', $key, 0, $iv);\n\n    // Unserialize the array\n    return unserialize($decrypted);\n}\n\n// Example usage\n$key = 'your-encryption-key';\n$array = array('foo' => 'bar', 'baz' => 'qux');\n\n// Encrypt the array\n$encryptedData = encryptArray($array, $key);\n\n// Store the encrypted data in a cookie\nsetcookie('encryptedData', $encryptedData);\n\n// Retrieve and decrypt the array\nif (isset($_COOKIE['encryptedData'])) {\n    $decryptedArray = decryptArray($_COOKIE['encryptedData'], $key);\n    print_r($decryptedArray);\n}\n?>