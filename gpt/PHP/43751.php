function makeThumbnail($sourcefile, $endfile, $thumbwidth, $thumbheight, $quality) {\n    // Create a new Imagick object\n    $img = new Imagick($sourcefile);\n    \n    // Get the image dimensions\n    $width = $img->getImageWidth();\n    $height = $img->getImageHeight();\n    \n    // Calculate the new dimensions while maintaining aspect ratio\n    if ($width > $height) {\n        $newwidth = $thumbwidth;\n        $divisor = $width / $thumbwidth;\n        $newheight = floor($height / $divisor);\n    } else {\n        $newheight = $thumbheight;\n        $divisor = $height / $thumbheight;\n        $newwidth = floor($width / $divisor);\n    }\n    \n    // Resize the image\n    $img->resizeImage($newwidth, $newheight, Imagick::FILTER_LANCZOS, 1);\n    \n    // Set the compression quality\n    $img->setImageCompressionQuality($quality);\n    \n    // Save the thumbnail\n    $img->writeImage($endfile);\n    \n    // Clear the Imagick object to free memory\n    $img->clear();\n    $img->destroy();\n}\n\n// Example usage\nmakeThumbnail('path/to/source.jpg', 'path/to/thumb.jpg', 700, 700, 85);