class ExceptionHandler {\n    public function handleException($exception) {\n        // Log the exception\n        $this->logException($exception);\n        \n        // Generate user-friendly error view\n        $this->generateErrorView($exception);\n    }\n\n    private function logException($exception) {\n        // Implement your logging logic here\n        error_log($exception->getMessage());\n    }\n\n    private function generateErrorView($exception) {\n        // Implement your error view generation logic here\n        echo "An error occurred: " . $exception->getMessage();\n        // You can also render a custom error page or template\n    }\n}\n\n// Create an instance of your handler\n$exceptionHandler = new ExceptionHandler();\n\n// Set the global exception handler to the handleException method of your instance\nset_exception_handler([$exceptionHandler, 'handleException']);\n\n// Example of throwing an exception to test the handler\nthrow new Exception("Test exception");