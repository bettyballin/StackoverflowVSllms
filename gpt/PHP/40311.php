function get_date($month, $year, $week, $day, $direction) {\n    // Convert day to a format that strtotime can understand\n    $day = ucfirst(strtolower($day)); // Ensure first letter is uppercase\n    $firstDayOfMonth = strtotime("$year-$month-01");\n    \n    if ($direction == 'forward') {\n        // Find the first occurrence of the day in the month\n        $firstOccurrence = strtotime("first $day of " . date('F Y', $firstDayOfMonth));\n        // Add ($week - 1) weeks to the first occurrence\n        $desiredDate = strtotime("+".($week - 1)." week", $firstOccurrence);\n    } elseif ($direction == 'backward') {\n        // Find the last occurrence of the day in the month\n        $lastDayOfMonth = strtotime("last day of " . date('F Y', $firstDayOfMonth));\n        $lastOccurrence = strtotime("last $day of " . date('F Y', $firstDayOfMonth));\n        // Subtract ($week - 1) weeks from the last occurrence\n        $desiredDate = strtotime("-".($week - 1)." week", $lastOccurrence);\n    } else {\n        // Invalid direction\n        return false;\n    }\n\n    // Check if the desiredDate is still within the same month\n    if (date('n', $desiredDate) == $month) {\n        return date('Y-m-d', $desiredDate);\n    } else {\n        // If the calculated date goes out of the month bounds, return false\n        return false;\n    }\n}\n\n// Examples\necho get_date(5, 2009, 1, 'Sun', 'forward');   // Output: 2009-05-03\necho get_date(5, 2009, 2, 'Sun', 'backward');  // Output: 2009-05-24