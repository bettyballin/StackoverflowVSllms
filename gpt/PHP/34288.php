class SchedulerFactory {\n    public function create($type, SchedulerOptions $options) {\n        switch ($type) {\n            case "monthly":\n                $scheduler = new MonthlyScheduler();\n                break;\n            case "weekly":\n                $scheduler = new WeeklyScheduler();\n                break;\n            case "daily":\n                $scheduler = new DailyScheduler();\n                break;\n            default:\n                throw new Exception("Unknown scheduler type");\n        }\n\n        $scheduler->setSendDateAndTime($options->sendDate, $options->sendTime);\n\n        switch ($options->endByType) {\n            case 'by_date':\n                $scheduler->setEndByDate($options->endByDate);\n                break;\n            case 'by_occurrences_limit':\n                $scheduler->setOccurrencesLimit($options->occurrencesLimit);\n                break;\n        }\n\n        $scheduler->addTaskOccurringEvery($options->repeatEvery);\n\n        if ($type == "weekly" && !empty($options->weekDays)) {\n            $scheduler->setWeekDayForRepeating($options->weekDays);\n        }\n\n        return $scheduler;\n    }\n}