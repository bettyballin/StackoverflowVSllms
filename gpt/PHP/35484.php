class Singleton {\n    // Hold the class instance.\n    private static $instance = null;\n\n    // The constructor is private to prevent initiation with outer code.\n    private function __construct() {\n        // Initialization code here.\n    }\n\n    // Prevent the instance from being cloned.\n    private function __clone() {}\n\n    // Prevent from being unserialized.\n    private function __wakeup() {}\n\n    // The single method to get the instance of the class.\n    public static function getInstance() {\n        if (self::$instance == null) {\n            self::$instance = new Singleton();\n        }\n\n        return self::$instance;\n    }\n}\n\n// Usage\n$instance = Singleton::getInstance();