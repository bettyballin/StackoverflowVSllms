<?php\n/* config for the script */\n$download_path = "content"; /* path to your files, NB: no slash at the end */\n$sort = "asort"; /* array sorting - alphabetical sorting for the array */\n\n/* start the script... no more editing from here on... */\n\n/* get a list of the files + dirs and turn the list into an array */\nfunction file_list($dir) {\n    global $sort;\n    global $file_file_count;\n    if (is_dir($dir)) {\n        $fd = @opendir($dir);\n        while (($part = @readdir($fd)) == true) {\n            clearstatcache();\n            if ($part != "." && $part != "..") {\n                $file_array[] = $part;\n            }\n        }\n        if ($fd == true) {\n            closedir($fd);\n        }\n        if (is_array($file_array)) {\n            $sort($file_array);\n            $file_file_count = count($file_array);\n            return $file_array;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\n/* function to convert to Mb, Kb and bytes */\nfunction file_size($size) {\n    $megabyte = 1024 * 1024;\n    if ($size > $megabyte) { /* literal.float */\n        $re_sized = sprintf("%01.2f", $size / $megabyte) . " Mb";\n    } elseif ($size > 1024) {\n        $re_sized = sprintf("%01.2f", $size / 1024) . " Kb";\n    } else {\n        $re_sized = $size . " bytes";\n    }\n    return $re_sized;\n}\n\n/* get a list of the files/dirs, put them into a table. */\nfunction generate_file_list($path) {\n    global $download_path;\n    global $PHP_SELF;\n    $final_path = str_replace("//","/",str_replace("..","",urldecode($path)));\n    $file_array = file_list("$download_path/$final_path/");\n    echo "$final_path/\n";\n    echo "\n\n";\n    if ($file_array == false) { /* check if the dir is an array before we process it to foreach(); */\n        echo "directory empty\n";\n    }\n}\n?>