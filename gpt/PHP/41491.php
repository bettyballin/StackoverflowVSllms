// Data Mapper for Users\nclass UserMapper {\n    protected $_dbTable;\n\n    public function setDbTable($dbTable) {\n        if (is_string($dbTable)) {\n            $dbTable = new $dbTable();\n        }\n        if (!$dbTable instanceof Zend_Db_Table_Abstract) {\n            throw new Exception('Invalid table data gateway provided');\n        }\n        $this->_dbTable = $dbTable;\n        return $this;\n    }\n\n    public function getDbTable() {\n        if (null === $this->_dbTable) {\n            $this->setDbTable('UserTable');\n        }\n        return $this->_dbTable;\n    }\n\n    public function save(User $user) {\n        $data = array(\n            'username' => $user->getUsername(),\n            'email' => $user->getEmail(),\n            'status' => $user->getStatus(),\n        );\n\n        if (null === ($id = $user->getId())) {\n            unset($data['id']);\n            $this->getDbTable()->insert($data);\n        } else {\n            $this->getDbTable()->update($data, array('id = ?' => $id));\n        }\n    }\n\n    public function find($id, User $user) {\n        $result = $this->getDbTable()->find($id);\n        if (0 == count($result)) {\n            return;\n        }\n        $row = $result->current();\n        $user->setId($row->id)\n             ->setUsername($row->username)\n             ->setEmail($row->email)\n             ->setStatus($row->status);\n    }\n\n    // Additional methods...\n}\n\n// User entity\nclass User {\n    protected $_id;\n    protected $_username;\n    protected $_email;\n    protected $_status;\n\n    // Getters and setters...\n\n    public function getId() {\n        return $this->_id;\n    }\n\n    public function setId($id) {\n        $this->_id = $id;\n        return $this;\n    }\n\n    // Additional getters and setters...\n}\n\n// Usage in a controller\n$user = new User();\n$userMapper = new UserMapper();\n$userMapper->find(1, $user);