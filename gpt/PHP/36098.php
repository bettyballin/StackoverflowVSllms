<?php\nfunction getSubdomain($url) {\n    // Use parse_url to parse the URL and extract the host\n    $host = parse_url($url, PHP_URL_HOST);\n\n    // Define the regular expression to match the subdomain\n    $pattern = '/^(?<subdomain>[^.]+)\.domain\.com$/';\n\n    // Apply the regular expression\n    if (preg_match($pattern, $host, $matches)) {\n        return $matches['subdomain'];\n    }\n\n    // In case there is no subdomain, return null\n    return null;\n}\n\n// Test cases\n$urls = [\n    'token.domain.com',\n    'token.domain.com/',\n    'token.domain.com/index.php',\n    'token.domain.com/folder/index.php',\n    'token.domain.com/folder/subfolder',\n    'token.domain.com/folder/subfolder/index.php',\n    'domain.com',\n    'domain.com/'\n];\n\nforeach ($urls as $url) {\n    echo 'URL: ' . $url . ' - Subdomain: ' . getSubdomain($url) . PHP_EOL;\n}\n?>