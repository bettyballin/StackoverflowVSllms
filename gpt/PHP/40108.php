class Bootstrap extends Zend_Application_Bootstrap_Bootstrap\n{\n    protected function _initDoctrine()\n    {\n        // Set up Doctrine autoloading\n        require_once 'Doctrine/Common/ClassLoader.php';\n        $autoloader = Zend_Loader_Autoloader::getInstance();\n        \n        $doctrineLoader = new \Doctrine\Common\ClassLoader('Doctrine', APPLICATION_PATH . '/../library');\n        $autoloader->pushAutoloader([$doctrineLoader, 'loadClass'], 'Doctrine');\n        \n        // Set up Doctrine configuration\n        $config = new \Doctrine\ORM\Configuration();\n        $cache = new \Doctrine\Common\Cache\ArrayCache();\n        $config->setMetadataCacheImpl($cache);\n        $config->setQueryCacheImpl($cache);\n        $config->setProxyDir(APPLICATION_PATH . '/models/Proxies');\n        $config->setProxyNamespace('Proxies');\n        \n        $driverImpl = $config->newDefaultAnnotationDriver(APPLICATION_PATH . '/models/Entities');\n        $config->setMetadataDriverImpl($driverImpl);\n        \n        // Database connection parameters\n        $conn = [\n            'driver'   => 'pdo_mysql',\n            'user'     => 'dbuser',\n            'password' => 'dbpassword',\n            'dbname'   => 'dbname',\n        ];\n        \n        // Create EntityManager\n        $entityManager = \Doctrine\ORM\EntityManager::create($conn, $config);\n        \n        // Store EntityManager in registry for later use\n        Zend_Registry::set('entityManager', $entityManager);\n    }\n}