<?php\n\nclass ToolHandler {\n    public function __call($name, $arguments) {\n        if ($name == 'turn') {\n            $object = $arguments[0];\n            if ($object instanceof Screwdriver) {\n                return $this->turnScrewdriver($object);\n            } elseif ($object instanceof SteeringWheel) {\n                return $this->turnSteeringWheel($object);\n            } else {\n                throw new InvalidArgumentException("Unsupported object type");\n            }\n        }\n        throw new BadMethodCallException("Method $name does not exist");\n    }\n\n    private function turnScrewdriver(Screwdriver $screwdriver) {\n        echo "Turning the screwdriver\n";\n    }\n\n    private function turnSteeringWheel(SteeringWheel $steeringWheel) {\n        echo "Turning the steering wheel\n";\n    }\n}\n\nclass Screwdriver {\n    // Screwdriver-specific methods and properties\n}\n\nclass SteeringWheel {\n    // SteeringWheel-specific methods and properties\n}\n\n// Example usage\n$handler = new ToolHandler();\n$handler->turn(new Screwdriver());       // Output: Turning the screwdriver\n$handler->turn(new SteeringWheel());     // Output: Turning the steering wheel\n?>