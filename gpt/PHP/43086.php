<?php\n\n// Function to run a command in the background and return the process ID (PID)\nfunction run_in_background($command, $priority = 0) {\n    if ($priority) {\n        $pid = shell_exec("nohup nice -n $priority $command > /dev/null 2>&1 & echo $!");\n    } else {\n        $pid = shell_exec("nohup $command > /dev/null 2>&1 & echo $!");\n    }\n    return trim($pid);\n}\n\n// Function to check if a process is running by its PID\nfunction is_process_running($pid) {\n    exec("ps $pid", $processState);\n    return count($processState) >= 2;\n}\n\n// Example usage\n$inputFile = '/path/to/input/video.mp4';\n$outputFile = '/path/to/output/video.flv';\n$ffmpegCommand = "ffmpeg -i $inputFile -f flv $outputFile";\n\n// Run the ffmpeg command in the background\n$pid = run_in_background($ffmpegCommand);\n\nif ($pid) {\n    echo "Process started with PID: $pid\n";\n\n    // Optionally, you can check if the process is running\n    if (is_process_running($pid)) {\n        echo "The process is currently running.\n";\n    } else {\n        echo "The process is not running.\n";\n    }\n} else {\n    echo "Failed to start the process.\n";\n}\n?>