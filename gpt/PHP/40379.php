class Database {\n    // Database class methods and properties\n}\n\nclass Cache {\n    // Cache class methods and properties\n}\n\nclass Article {\n    protected $database;\n    protected $cache;\n\n    public function __construct(Database $database, Cache $cache) {\n        $this->database = $database;\n        $this->cache = $cache;\n    }\n\n    // Article class methods that use $this->database and $this->cache\n}\n\nclass User {\n    protected $database;\n    protected $cache;\n\n    public function __construct(Database $database, Cache $cache) {\n        $this->database = $database;\n        $this->cache = $cache;\n    }\n\n    // User class methods that use $this->database and $this->cache\n}\n\n$database = new Database();\n$cache = new Cache();\n\n$article = new Article($database, $cache);\n$user = new User($database, $cache);\n\n// Now $article and $user both share the same instances of $database and $cache