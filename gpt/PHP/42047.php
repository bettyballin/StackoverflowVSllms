class Thing {\n    private $value;\n\n    public function __construct($value) {\n        $this->setValue($value);\n    }\n\n    private function setValue($value) {\n        if ($this->validate($value)) {\n            $this->value = $this->transform($value);\n        } else {\n            throw new InvalidArgumentException('Invalid value provided');\n        }\n    }\n\n    private function validate($value) {\n        // Perform validation logic\n        return true;\n    }\n\n    private function transform($value) {\n        // Perform transformation logic\n        return $value;\n    }\n\n    public function getValue() {\n        return $this->value;\n    }\n}