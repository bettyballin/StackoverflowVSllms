<?php\nfunction customErrorHandler($errno, $errstr, $errfile, $errline)\n{\n    // Error types to be handled\n    $errorTypes = array(\n        E_ERROR => 'Error',\n        E_WARNING => 'Warning',\n        E_PARSE => 'Parsing Error',\n        E_NOTICE => 'Notice',\n        E_CORE_ERROR => 'Core Error',\n        E_CORE_WARNING => 'Core Warning',\n        E_COMPILE_ERROR => 'Compile Error',\n        E_COMPILE_WARNING => 'Compile Warning',\n        E_USER_ERROR => 'User Error',\n        E_USER_WARNING => 'User Warning',\n        E_USER_NOTICE => 'User Notice',\n        E_STRICT => 'Runtime Notice',\n        E_RECOVERABLE_ERROR => 'Catchable Fatal Error'\n    );\n\n    // Construct the error message\n    $errorMessage = "[" . date("Y-m-d H:i:s") . "] ";\n    $errorMessage .= $errorTypes[$errno] . ": $errstr in $errfile on line $errline\n";\n\n    // Log the error\n    error_log($errorMessage, 3, "/path/to/your/error.log");\n\n    // Optionally, send an email notification (be cautious with this to avoid flooding)\n    // mail('your-email@example.com', 'Site Error', $errorMessage);\n\n    // Suppress display of the error in the browser\n    return true;\n}\n\n// Set the custom error handler\nset_error_handler('customErrorHandler');\n\n// Ensure that errors are not displayed to users\nini_set('display_errors', 0);\nini_set('log_errors', 1);\nerror_reporting(E_ALL);\n?>