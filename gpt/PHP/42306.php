<?php\n\nuse App\Kernel;\nuse Doctrine\ORM\EntityManagerInterface;\nuse Symfony\Component\Dotenv\Dotenv;\nuse Symfony\Component\HttpFoundation\Request;\n\n/**\n * Change the paths below according to your application structure\n */\nrequire_once __DIR__ . '/path/to/your/symfony-app/vendor/autoload.php';\nrequire_once __DIR__ . '/path/to/your/symfony-app/config/bootstrap.php';\n\n// Initialize Dotenv if not already done (if Symfony < 4.2)\nif (file_exists(dirname(__DIR__) . '/config/bootstrap.php')) {\n    (new Dotenv())->bootEnv(dirname(__DIR__) . '/.env');\n}\n\n// Boot Symfony kernel\n$kernel = new Kernel($_SERVER['APP_ENV'], (bool) $_SERVER['APP_DEBUG']);\n$request = Request::createFromGlobals();\n$kernel->boot();\n\n// Get the container\n$container = $kernel->getContainer();\n\n// Get the entity manager from the container\n/** @var EntityManagerInterface $entityManager */\n$entityManager = $container->get('doctrine.orm.entity_manager');\n\n// Now you can use the entityManager to interact with your database\n// Example: Fetching all records from a repository\n$repository = $entityManager->getRepository(App\Entity\YourEntity::class);\n$results = $repository->findAll();\n\nforeach ($results as $result) {\n    // Do something with each result\n    echo $result->getSomeProperty();\n}\n\n// Always close the kernel to avoid memory leaks\n$kernel->terminate($request, $response);