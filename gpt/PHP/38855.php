class My_Controller_Front extends Zend_Controller_Front\n{\n    protected $_defaultModule;\n\n    public function setDynamicDefaultModule($module)\n    {\n        $this->_defaultModule = $module;\n    }\n\n    public function getControllerDirectory($module = null)\n    {\n        if (null === $module) {\n            $module = $this->getDefaultModule();\n        }\n\n        if ($module === $this->_defaultModule) {\n            $controllerDir = $this->_controllerDirectory[$module];\n        } else {\n            $controllerDir = parent::getControllerDirectory($module);\n        }\n\n        return $controllerDir;\n    }\n}\n\n// Usage example\n$modules = new Modules();\n$activeModules = $modules->fetchActive();\n$loadedModules = [];\n\nforeach ($activeModules as $mod) {\n    $loadedModules[$mod->name] = '..application/modules/' . $mod->name . '/controllers';\n    if ($mod->default) {\n        $defaultModule = $mod->name;\n    }\n}\n\n$frontController = My_Controller_Front::getInstance();\n$frontController->setControllerDirectory($loadedModules);\n$frontController->setDefaultModule($defaultModule);\n$frontController->setDynamicDefaultModule($defaultModule);\n\n// Proceed with the rest of your bootstrap logic