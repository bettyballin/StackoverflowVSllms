function base64_decode_file($input, $output) {\n    $inputHandle = fopen($input, 'r');\n    $outputHandle = fopen($output, 'wb');\n\n    if (!$inputHandle || !$outputHandle) {\n        throw new Exception("Unable to open input or output file.");\n    }\n\n    $bufferSize = 8192; // Read 8KB at a time\n    $encodedData = '';\n\n    while (!feof($inputHandle)) {\n        $encodedData .= fread($inputHandle, $bufferSize);\n        if (strlen($encodedData) >= $bufferSize * 1.33) { // Base64 expands data by ~33%\n            $decodedData = base64_decode($encodedData, true);\n            if ($decodedData === false) {\n                throw new Exception("Failed to decode base64 data.");\n            }\n            fwrite($outputHandle, $decodedData);\n            $encodedData = '';\n        }\n    }\n\n    // Final write for any remaining data\n    if (!empty($encodedData)) {\n        $decodedData = base64_decode($encodedData, true);\n        if ($decodedData === false) {\n            throw new Exception("Failed to decode base64 data.");\n        }\n        fwrite($outputHandle, $decodedData);\n    }\n\n    fclose($inputHandle);\n    fclose($outputHandle);\n}\n\n// Usage example\n$inputBase64String = 'path/to/your/base64_encoded_input.txt';\n$outputFilePath = 'path/to/your/decoded_output_file.dat';\n\ntry {\n    base64_decode_file($inputBase64String, $outputFilePath);\n    echo "File decoded successfully.";\n} catch (Exception $e) {\n    echo "Error: " . $e->getMessage();\n}