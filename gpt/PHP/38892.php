<?php\nfunction yahoo_geo($location) {\n    $q = 'http://api.local.yahoo.com/MapsService/V1/geocode';\n    $q .= '?appid=rlerdorf&location=' . rawurlencode($location);\n    echo $q;\n    libxml_use_internal_errors(true);\n    $xml = @simplexml_load_file($q); // Suppress warnings with @\n    \n    if (!$xml) {\n        // Handle errors and return false\n        foreach(libxml_get_errors() as $error) {\n            // Log the error message if needed\n            // error_log($error->message);\n        }\n        libxml_clear_errors();\n        return false;\n    }\n\n    $ret = [];\n    $ret['precision'] = (string)$xml->Result['precision'];\n    foreach($xml->Result->children() as $key => $val) {\n        if (strlen($val)) {\n            $ret[(string)$key] = (string)$val;\n        }\n    }\n    return $ret;\n}\n\n$_REQUEST['location'] = 32744; // Example zip code\n$a = yahoo_geo($_REQUEST['location']);\n\n// Set returned data to some variables for storage into MySQL\nif ($a) {\n    $latitude = $a['Latitude'];\n    $longitude = $a['Longitude'];\n} else {\n    // Set default values if geocoding fails\n    $latitude = '0.0000';\n    $longitude = '0.0000';\n}\n\n// MySQL code will go here\n\n// Output for demo\necho 'Latitude: ' . $latitude . '<br><br>';\necho 'Longitude: ' . $longitude . '<br><br>';\n?>