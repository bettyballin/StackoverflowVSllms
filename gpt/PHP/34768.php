class XmlHelper\n{\n    private $dom;\n    private $xpath;\n    private $results;\n\n    public function __construct()\n    {\n        $this->dom = new DOMDocument();\n    }\n\n    public function load($source)\n    {\n        $this->dom->loadXML($source);\n        $this->xpath = new DOMXPath($this->dom);\n        return $this;\n    }\n\n    public function path($query)\n    {\n        $this->results = $this->xpath->query($query);\n        return $this;\n    }\n\n    public function replace($Content)\n    {\n        foreach ($this->results as $Element) {\n            $newNode = $Content->cloneNode(true);\n            $Element->parentNode->replaceChild($newNode, $Element);\n        }\n        return $this;\n    }\n\n    public function getDocument()\n    {\n        return $this->dom;\n    }\n}\n\n// Example usage:\n$xmlHelper = new XmlHelper();\n$source = '<root><items>Item1</items><items>Item2</items></root>';\n$newContent = new DOMElement('foo', 'bar');\n\n$xmlHelper->load($source)\n          ->path('//root/items')\n          ->replace($newContent);\n\necho $xmlHelper->getDocument()->saveXML();