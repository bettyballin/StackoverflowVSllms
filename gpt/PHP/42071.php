<?php\n// Define the dimensions of the canvas\n$r_max = 240;\n$c_max = 320;\n\n// Create a function to convert binary data to RGB values\nfunction binaryToRGB($binary) {\n    $r = bindec(substr($binary, 0, 8));\n    $g = bindec(substr($binary, 8, 8));\n    $b = bindec(substr($binary, 16, 8));\n    return "rgb($r, $g, $b)";\n}\n\n// Generate pixel data\n$pixels = [];\nfor ($row = 0; $row < $r_max; $row++) {\n    for ($column = 0; $column < $c_max; $column++) {\n        // Replace this with your binary data\n        $binaryData = str_pad(decbin(rand(0, 16777215)), 24, '0', STR_PAD_LEFT);\n        $color = binaryToRGB($binaryData);\n        $pixels[] = ['x' => $column, 'y' => $row, 'color' => $color];\n    }\n}\n\n// Output the JavaScript to draw pixels on the canvas\necho '<script>\ndocument.addEventListener("DOMContentLoaded", function() {\n    var canvas = document.createElement("canvas");\n    canvas.width = ' . $c_max . ';\n    canvas.height = ' . $r_max . ';\n    var ctx = canvas.getContext("2d");\n    document.body.appendChild(canvas);\n';\n\nforeach ($pixels as $pixel) {\n    echo 'ctx.fillStyle = "' . $pixel['color'] . '";';\n    echo 'ctx.fillRect(' . $pixel['x'] . ',' . $pixel['y'] . ',1,1);';\n}\n\necho '});\n</script>';\n?>