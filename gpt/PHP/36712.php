// Instance of the testObject\n$number = new testObject();\n$number->setNumber((double)200000);\n\n// Construct TestExcel class\n$excel = new TestExcel($number);\n\n// Class TestObject   \nclass testObject {\n    private $number;\n\n    public function setNumber($number){\n        $this->number = $number;\n    }\n\n    public function getNumber(){\n        return $this->number;\n    }\n}\n\n// Class TestExcel extends from PHPExcel (http://www.codeplex.com/PHPExcel) \nclass TestExcel extends PHPExcel {\n    private $number;\n\n    public function __construct($number){\n        parent::__construct();\n\n        $this->number = $number;\n        $this->handleNumber();\n    }\n\n    private function handleNumber() {\n        // Retrieve the number from the object\n        $value = $this->number->getNumber();\n\n        // You can format the value explicitly if you are dealing with cells\n        $sheet = $this->getActiveSheet();\n        $sheet->setCellValue('A1', $value);\n        $sheet->getStyle('A1')->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);\n\n        // Print the formatted value for debugging\n        echo $sheet->getCell('A1')->getFormattedValue();\n        exit();\n    }\n}