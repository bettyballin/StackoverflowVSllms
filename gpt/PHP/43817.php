function DB($query, $params = [])\n{\n    static $db = null;\n\n    if (is_file($query) === true) {\n        $db = new PDO('sqlite:' . $query, null, null, array(PDO::ATTR_ERRMODE => PDO::ERRMODE_WARNING));\n        return true;\n    }\n\n    if (is_a($db, 'PDO') === true) {\n        $result = $db->prepare($query);\n\n        if (is_a($result, 'PDOStatement') === true) {\n            if ($result->execute($params) === true) {\n                if (stripos($query, 'INSERT') === 0) {\n                    return $db->lastInsertId();\n                }\n\n                if (stripos($query, 'SELECT') === 0) {\n                    return $result->fetchAll(PDO::FETCH_ASSOC);\n                }\n\n                return $result->rowCount();\n            }\n        }\n\n        return false;\n    }\n\n    return true;\n}\n\n// Connect to SQLite DB\nDB('/path/to/sqlite.db');\n\nDB('BEGIN TRANSACTION;');\n\n// Prepare the statement once\n$insertQuery = 'INSERT INTO "test" ("id", "name") VALUES (?, ?)';\n$statement = DB($insertQuery);\n\nfor ($i = 1; $i <= 10000; $i++) {\n    for ($j = 1; $j <= 100; $j++) {\n        DB($insertQuery, [$i, 'Testing ' . $j]);\n    }\n}\n\nDB('END TRANSACTION;');