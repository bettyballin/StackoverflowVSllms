<?php\nrequire 'vendor/autoload.php';\n\nuse Google\Client;\nuse Google\Service\Calendar;\n\n// Initialize the Google Client\n$client = new Client();\n$client->setApplicationName('Your Application Name');\n$client->setAuthConfig('path_to_your_credentials.json');\n$client->setScopes(Calendar::CALENDAR);\n$client->setAccessType('offline');\n\n// Load the token from storage\n$tokenPath = 'path_to_your_token.json';\nif (file_exists($tokenPath)) {\n    $accessToken = json_decode(file_get_contents($tokenPath), true);\n    $client->setAccessToken($accessToken);\n}\n\n// Refresh the token if it's expired\nif ($client->isAccessTokenExpired()) {\n    $client->fetchAccessTokenWithRefreshToken($client->getRefreshToken());\n    file_put_contents($tokenPath, json_encode($client->getAccessToken()));\n}\n\n$service = new Calendar($client);\n\n// Fetch events from your database\n$events = fetchEventsFromDatabase();\n\nforeach ($events as $event) {\n    // Prepare the Google Calendar event\n    $googleEvent = new Calendar\Event([\n        'summary' => $event['title'],\n        'start' => ['dateTime' => $event['start_time']],\n        'end' => ['dateTime' => $event['end_time']],\n    ]);\n\n    // Insert or update the event in Google Calendar\n    try {\n        if (isset($event['google_event_id'])) {\n            $service->events->update('primary', $event['google_event_id'], $googleEvent);\n        } else {\n            $createdEvent = $service->events->insert('primary', $googleEvent);\n            updateEventWithGoogleEventId($event['id'], $createdEvent->getId());\n        }\n    } catch (Exception $e) {\n        error_log('Failed to sync event: ' . $e->getMessage());\n    }\n}