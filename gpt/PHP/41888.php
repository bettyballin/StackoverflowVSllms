class Command {\n    protected $command;\n    protected $options = [];\n    protected $arguments = [];\n\n    public function __construct($command) {\n        $this->command = $command;\n    }\n\n    public function addOption($option) {\n        $this->options[] = $option;\n    }\n\n    public function addArgument($argument) {\n        $this->arguments[] = $argument;\n    }\n\n    public function getCommand() {\n        return $this->command . ' ' . implode(' ', $this->options) . ' ' . implode(' ', $this->arguments);\n    }\n}\n\nclass ScpCommand extends Command {\n    public function __construct() {\n        parent::__construct('scp');\n        // Add default options for SCP here, if any\n    }\n\n    // You can add SCP-specific methods here if needed\n}\n\n// Usage\n$scp = new ScpCommand();\n$scp->addOption('-r'); // Recursive option for scp\n$scp->addArgument('source');\n$scp->addArgument('destination');\necho $scp->getCommand(); // Outputs: scp -r source destinatio