<?php\n\nclass TagFS\n{\n    public $FS = null;\n\n    function __construct($FS)\n    {\n        if (is_dir($FS) === true) {\n            $this->FS = $this->Path($FS);\n        }\n    }\n\n    function Add($path, $tag)\n    {\n        if (is_dir($path) === true) {\n            $files = array_slice(scandir($path), 2);\n\n            foreach ($files as $file) {\n                $this->Add($this->Path($path) . $file, $tag);\n            }\n\n            return true;\n        } else if (is_file($path) === true) {\n            $file = md5_file($path);\n            $destination = $this->FS . $file;\n\n            if (is_file($destination) === false) {\n                if (copy($path, $destination) === false) {\n                    return false;\n                }\n            }\n\n            return $this->Link($destination, $this->FS . '+' . $this->Tag($tag) . '+' . $file . '.' . strtolower(pathinfo($path, PATHINFO_EXTENSION)));\n        }\n\n        return false;\n    }\n\n    function Get($tag)\n    {\n        return glob($this->FS . '*+' . str_replace('+', '{+,+*+}', $this->Tag($tag)) . '+*', GLOB_BRACE);\n    }\n\n    function Link($source, $destination)\n    {\n        if (is_file($source) === true) {\n            if (function_exists('link') === true) {\n                return link($source, $destination);\n            }\n\n            if (is_file($destination) === false) {\n                exec('fsutil hardlink create "' . $destination . '" "' . $source . '"');\n\n                if (is_file($destination) === true) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    function Path($path)\n    {\n        if (file_exists($path) === true) {\n            $path = str_replace('\\', '/', realpath($path));\n\n            if ((is_dir($path) === true) && ($path[strlen($path) - 1] != '/')) {\n                $path .= '/';\n            }\n\n            return $path;\n        }\n\n        return false;\n    }\n\n    function Tag($string)\n    {\n        // Replace invalid characters\n        $string = preg_replace('/[\/:*?"<>|+{}-]/', '', $string);\n        \n        // Truncate string to avoid exceeding the maximum length\n        $maxLength = 255 - strlen(md5('')) - 5; // 5 for separators and extension\n        if (strlen($string) > $maxLength) {\n            $string = substr($string, 0, $maxLength);\n        }\n\n        return $string;\n    }\n}