<?php\n\nclass HtmlTag {\n    protected $tag;\n    protected $content;\n    protected $attributes;\n\n    public function __construct($tag, $content = '', $attributes = array()) {\n        $this->tag = $tag;\n        $this->content = $content;\n        $this->attributes = $attributes;\n    }\n\n    public function render() {\n        $attrString = '';\n        foreach ($this->attributes as $key => $value) {\n            $attrString .= " $key=\"$value\"";\n        }\n        return "<{$this->tag}{$attrString}>{$this->content}</{$this->tag}>";\n    }\n}\n\nclass HtmlFactory {\n    public static function __callStatic($name, $arguments) {\n        return new HtmlTag($name, ...$arguments);\n    }\n}\n\n// Usage\n$pTag = HtmlFactory::p('It works', array('id' => 'helloworld', 'class' => 'somecssclass'));\necho $pTag->render();\n\n$aTag = HtmlFactory::a('Click me', array('href' => 'https://example.com'));\necho $aTag->render();\n?>