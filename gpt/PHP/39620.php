function intvalEquivalent($number) {\n    // Convert the input to a string to handle very large numbers\n    $number = (string)$number;\n    \n    // Use bc math functions to handle the number\n    if (bccomp($number, '0') == 0) {\n        return '0';\n    }\n\n    // Remove decimal part if any\n    if (strpos($number, '.') !== false) {\n        $number = strstr($number, '.', true);\n    }\n\n    // Check if the resulting number is a valid integer\n    if (ctype_digit($number) || (strpos($number, '-') === 0 && ctype_digit(substr($number, 1)))) {\n        return $number;\n    }\n\n    return '0';\n}\n\n// Usage example\n$inputNumber = 3147483647.37;\n$intNumber = intvalEquivalent($inputNumber);\necho $intNumber; // output: 3147483647