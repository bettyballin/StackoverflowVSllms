class TestClass {\n    private static $instance;\n    private static $currentValue;\n\n    private function __construct() {}\n\n    public static function getInstance() {\n        if (self::$instance === null) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n\n    public static function toValue($value) {\n        self::$currentValue = $value;\n        return self::getInstance();\n    }\n\n    public function add($value) {\n        self::$currentValue += $value;\n        return $this;\n    }\n\n    public function subtract($value) {\n        self::$currentValue -= $value;\n        return $this;\n    }\n\n    public function result() {\n        return self::$currentValue;\n    }\n}\n\n// Usage:\n$value = TestClass::toValue(5)->add(3)->subtract(2)->add(8)->result();\necho $value; // Outputs: 14