<?php\n\nrequire 'vendor/autoload.php';\n\nuse DI\ContainerBuilder;\n\n// Define some classes and interfaces\ninterface LoggerInterface {\n    public function log($message);\n}\n\nclass FileLogger implements LoggerInterface {\n    public function log($message) {\n        echo "Logging to file: $message";\n    }\n}\n\nclass UserService {\n    private $logger;\n\n    public function __construct(LoggerInterface $logger) {\n        $this->logger = $logger;\n    }\n\n    public function register($username) {\n        // Registration logic\n        $this->logger->log("User $username registered.");\n    }\n}\n\n// Set up the container\n$containerBuilder = new ContainerBuilder();\n$containerBuilder->addDefinitions([\n    LoggerInterface::class => \DI\create(FileLogger::class),\n]);\n\n$container = $containerBuilder->build();\n\n// Get an instance of UserService with dependencies injected\n$userService = $container->get(UserService::class);\n$userService->register('john_doe');