require 'vendor/autoload.php';\n\nuse net\authorize\api\contract\v1 as AnetAPI;\nuse net\authorize\api\controller as AnetController;\n\nfunction authorizeCreditCard($amount, $cardNumber, $expirationDate, $cardCode) {\n    $merchantAuthentication = new AnetAPI\MerchantAuthenticationType();\n    $merchantAuthentication->setName("your_api_login_id");\n    $merchantAuthentication->setTransactionKey("your_transaction_key");\n\n    $creditCard = new AnetAPI\CreditCardType();\n    $creditCard->setCardNumber($cardNumber);\n    $creditCard->setExpirationDate($expirationDate);\n    $creditCard->setCardCode($cardCode);\n\n    $payment = new AnetAPI\PaymentType();\n    $payment->setCreditCard($creditCard);\n\n    $order = new AnetAPI\OrderType();\n    $order->setDescription("Order Description");\n\n    $transactionRequestType = new AnetAPI\TransactionRequestType();\n    $transactionRequestType->setTransactionType("authOnlyTransaction");\n    $transactionRequestType->setAmount($amount);\n    $transactionRequestType->setPayment($payment);\n    $transactionRequestType->setOrder($order);\n\n    $request = new AnetAPI\CreateTransactionRequest();\n    $request->setMerchantAuthentication($merchantAuthentication);\n    $request->setTransactionRequest($transactionRequestType);\n\n    $controller = new AnetController\CreateTransactionController($request);\n    $response = $controller->executeWithApiResponse(\net\authorize\api\constants\ANetEnvironment::SANDBOX);\n\n    if ($response != null) {\n        if ($response->getMessages()->getResultCode() == "Ok") {\n            $tresponse = $response->getTransactionResponse();\n            if ($tresponse != null && $tresponse->getMessages() != null) {\n                return $tresponse->getTransId();\n            }\n        }\n    }\n    return false;\n}\n\n$transactionId = authorizeCreditCard("100.00", "4111111111111111", "2025-12", "123");\nif ($transactionId) {\n    echo "Transaction ID: " . $transactionId;\n} else {\n    echo "Transaction Authorization Failed";\n}