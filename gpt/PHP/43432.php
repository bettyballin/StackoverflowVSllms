public function exportTableAction()\n{\n    // Disable the layout and view rendering\n    $this->_helper->layout->disableLayout();\n    $this->_helper->viewRenderer->setNoRender(true);\n\n    // Retrieve parameters\n    $fileName = $this->_getParam('fileName', 'export.csv');\n    $tableName = $this->_getParam('tableName');\n\n    // Validate parameters\n    if (empty($tableName)) {\n        throw new Exception('Table name is required');\n    }\n\n    // Generate CSV content\n    $csvContent = $this->getCsv($tableName);\n\n    // Set headers for file download\n    header('Content-Type: text/csv');\n    header('Content-Disposition: attachment;filename="' . $fileName . '"');\n    header('Cache-Control: max-age=0');\n    \n    // Output CSV content\n    echo $csvContent;\n    exit;\n}\n\nprivate function getCsv($tableName)\n{\n    // Assuming you have a method to fetch data from the table\n    $data = $this->fetchDataFromTable($tableName);\n\n    // Open a memory stream\n    $fp = fopen('php://temp', 'r+');\n\n    // Write headers (assuming the first row contains headers)\n    if (!empty($data)) {\n        fputcsv($fp, array_keys($data[0]));\n    }\n\n    // Write data rows\n    foreach ($data as $row) {\n        fputcsv($fp, $row);\n    }\n\n    // Rewind the stream\n    rewind($fp);\n\n    // Fetch the CSV content\n    $csvContent = stream_get_contents($fp);\n\n    // Close the memory stream\n    fclose($fp);\n\n    return $csvContent;\n}\n\nprivate function fetchDataFromTable($tableName)\n{\n    // Assuming you have a method to get the database adapter\n    $dbAdapter = $this->getDbAdapter();\n    \n    // Build and execute the query\n    $select = $dbAdapter->select()->from($tableName);\n    $result = $dbAdapter->fetchAll($select);\n\n    return $result;\n}\n\nprivate function getDbAdapter()\n{\n    // Get the database adapter (assuming it is configured in your Zend application)\n    return Zend_Db_Table::getDefaultAdapter();\n}