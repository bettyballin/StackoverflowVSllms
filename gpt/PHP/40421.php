class myLibrary_Item extends myLibrary\n{\n    // Public constructor to initialize properties\n    public function __construct($vars)\n    {\n        foreach ($vars as $var => $val) {\n            $this->__set($var, $val);\n        }\n    }\n\n    // Magic setter method\n    public function __set($var, $val)\n    {\n        $this->$var = $val;\n    }\n\n    // Magic getter method\n    public function __get($var)\n    {\n        return isset($this->$var) ? $this->$var : null;\n    }\n}\n\n// Example usage with PDO\ntry {\n    $dsn = "mysql:host=your_host;dbname=your_db";\n    $username = "your_username";\n    $password = "your_password";\n    $options = [\n        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,\n    ];\n\n    $pdo = new PDO($dsn, $username, $password, $options);\n\n    $stmt = $pdo->query("SELECT firstName, lastName FROM your_table WHERE id = :id");\n    $stmt->execute(['id' => $your_id]);\n    $row = $stmt->fetch();\n\n    if ($row) {\n        $myObject = new myLibrary_Item($row);\n        echo $myObject->firstName; // Outputs the first name\n    } else {\n        echo "No data found.";\n    }\n} catch (PDOException $e) {\n    echo "Database error: " . $e->getMessage();\n}