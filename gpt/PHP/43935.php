class SessionManager\n{\n    private static $session_id;\n\n    private function __construct()\n    {\n        if (!$this->headersSent())\n        {\n            $this->startSession();\n            self::$session_id = session_id();\n        }\n    }\n\n    protected function headersSent()\n    {\n        return headers_sent();\n    }\n\n    protected function startSession()\n    {\n        session_start();\n    }\n}\n\nclass SessionManagerTest extends \PHPUnit\Framework\TestCase\n{\n    public function testSessionManagerStartsSession()\n    {\n        $sessionManagerMock = $this->getMockBuilder(SessionManager::class)\n            ->setMethods(['headersSent', 'startSession'])\n            ->getMock();\n        \n        $sessionManagerMock->expects($this->once())\n            ->method('headersSent')\n            ->willReturn(false);\n\n        $sessionManagerMock->expects($this->once())\n            ->method('startSession');\n\n        $sessionManagerMock->__construct();\n        $this->assertNotEmpty(session_id());\n    }\n}