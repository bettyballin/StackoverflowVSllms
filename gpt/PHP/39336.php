<?php\nclass Creatives {\n    private $creatives;\n\n    public function run() {\n        $auth_token = 'mypassword';\n        $id = 123123;\n        $this->retry_till_success([$this, 'getCreatives'], [$auth_token, $id]);\n        print $this->creatives; \n    }\n\n    public function getCreatives($auth_token, $id) {\n        // Assuming $this->campaign is properly initialized somewhere else in the class\n        $this->creatives = $this->campaign->get($auth_token, $id);     \n    }\n\n    private function retry_till_success($method, $args, $max_retries = 5) {\n        $attempt = 0;\n        do {\n            $try_again = false;\n            $attempt++;\n            try {\n                call_user_func_array($method, $args);\n                // If there is no exception, success!\n                return;\n            } catch (SoapFault $fault) {\n                if ($fault->faultstring == 'couldnt connect to host' && $attempt < $max_retries) {\n                    $try_again = true;\n                    sleep(1); // Optional: add delay before retrying\n                } else {\n                    throw $fault; // Rethrow the exception if it should not retry\n                }\n            }\n        } while ($try_again);\n    }\n}\n?>