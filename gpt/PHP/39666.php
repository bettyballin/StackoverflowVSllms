<?php\necho "entered db-com.php";\n\nclass DBCom {\n    /**\n     * @var string Holds the query string.\n     * If the blank constructor is used, make sure to use the parametrized functions.\n     */\n    var $queryString;\n\n    /**\n     * @var mysqli_result Holds the MySQLi Result returned by mysqli_query function\n     */\n    var $queryResult;\n\n    /**\n     * @var array Holds the entire array of the result.\n     */\n    var $queryArray;\n\n    function __construct($qS = '') {\n        $this->queryString = $qS;\n        $this->queryArray = [];\n        \n        if ($this->queryString != '') {\n            $this->execute_query();\n        }\n    }\n\n    function execute_query() {\n        $conn = new mysqli("your_host", "your_username", "your_password", "your_database");\n\n        if ($conn->connect_error) {\n            die("Connection failed: " . $conn->connect_error);\n        }\n\n        $this->queryResult = $conn->query($this->queryString);\n\n        if ($this->queryResult === false) {\n            die("Query failed: " . $conn->error);\n        }\n\n        $conn->close();\n    }\n\n    /**\n     * @return array An array containing all the elements of the requested query.\n     */\n    function get_query_array() {\n        if ($this->queryString == '') {\n            die("Query String is Empty. Cannot Proceed.");\n        }\n\n        while ($fetchedArray = $this->queryResult->fetch_array(MYSQLI_ASSOC)) {\n            $this->queryArray[] = $fetchedArray;\n        }\n\n        return $this->queryArray;\n    }\n}\n?>