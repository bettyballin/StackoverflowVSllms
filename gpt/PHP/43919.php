<?php\nfunction getLetterCombinations($digits) {\n    $digitToLetters = [\n        '0' => ['N'],\n        '1' => ['L'],\n        '2' => ['T'],\n        '3' => ['D'],\n        '4' => ['R'],\n        '5' => ['V', 'F'],\n        '6' => ['B', 'P'],\n        '7' => ['Z'],\n        '8' => ['H', 'CH', 'J'],\n        '9' => ['G'],\n    ];\n\n    // Recursive function to generate combinations\n    function generateCombinations($prefix, $remainingDigits, $digitToLetters, &$results) {\n        if (empty($remainingDigits)) {\n            $results[] = $prefix;\n            return;\n        }\n        \n        $currentDigit = $remainingDigits[0];\n        $remainingDigits = substr($remainingDigits, 1);\n        \n        foreach ($digitToLetters[$currentDigit] as $letter) {\n            generateCombinations($prefix . $letter, $remainingDigits, $digitToLetters, $results);\n        }\n    }\n\n    $results = [];\n    generateCombinations("", $digits, $digitToLetters, $results);\n    return $results;\n}\n\n// Example usage\n$inputNumber = "051";\n$combinations = getLetterCombinations($inputNumber);\n\nforeach ($combinations as $combination) {\n    echo $combination . "\n";\n}\n?>