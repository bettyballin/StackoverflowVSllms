<?php\nclass Service1 {\n    public function method1($param) {\n        return "Service1: " . $param;\n    }\n}\n\nclass Service2 {\n    public function method2($param) {\n        return "Service2: " . $param;\n    }\n}\n\nclass MasterService {\n    private $service1;\n    private $service2;\n\n    public function __construct() {\n        $this->service1 = new Service1();\n        $this->service2 = new Service2();\n    }\n\n    public function __call($method, $arguments) {\n        if (method_exists($this->service1, $method)) {\n            return call_user_func_array([$this->service1, $method], $arguments);\n        } elseif (method_exists($this->service2, $method)) {\n            return call_user_func_array([$this->service2, $method], $arguments);\n        } else {\n            throw new SoapFault("Server", "Unknown method");\n        }\n    }\n}\n\n$options = ['uri' => 'http://example.com/soap'];\n$server = new SoapServer(null, $options);\n$server->setClass('MasterService');\n$server->handle();