<?php\n\nfunction parseApacheErrorLog($filePath) {\n    if (!file_exists($filePath)) {\n        die("Log file does not exist.");\n    }\n\n    $errors = [];\n    $handle = fopen($filePath, "r");\n    if ($handle) {\n        while (($line = fgets($handle)) !== false) {\n            // Assuming the log format is: [Date] [Level] [Client] Message\n            if (preg_match('/^\[(.*?)\]\s\[(.*?)\]\s\[(.*?)\]\s(.*)$/', $line, $matches)) {\n                $errors[] = [\n                    'date' => $matches[1],\n                    'level' => $matches[2],\n                    'client' => $matches[3],\n                    'message' => $matches[4]\n                ];\n            }\n        }\n        fclose($handle);\n    } else {\n        die("Unable to open log file.");\n    }\n\n    return $errors;\n}\n\nfunction getMostRecentError($errors) {\n    if (empty($errors)) {\n        return null;\n    }\n\n    usort($errors, function($a, $b) {\n        return strtotime($b['date']) - strtotime($a['date']);\n    });\n\n    return $errors[0];\n}\n\n$logPath = '/path/to/apache/error.log';\n$errors = parseApacheErrorLog($logPath);\n$mostRecentError = getMostRecentError($errors);\n\nif ($mostRecentError) {\n    echo "Most Recent Error:\n";\n    echo "Date: " . $mostRecentError['date'] . "\n";\n    echo "Level: " . $mostRecentError['level'] . "\n";\n    echo "Client: " . $mostRecentError['client'] . "\n";\n    echo "Message: " . $mostRecentError['message'] . "\n";\n} else {\n    echo "No errors found.";\n}\n?>