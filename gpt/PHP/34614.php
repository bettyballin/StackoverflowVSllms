<?php\nclass Lang {\n    private $translations;\n    private static $instance = null;\n\n    public function __construct($language) {\n        // Load translations based on the language\n        $this->translations = $this->loadTranslations($language);\n        self::$instance = $this;\n    }\n\n    public function setCurrent($filename) {\n        // Assume loadTranslationsFromFile loads additional translations from a file\n        $this->translations = array_merge($this->translations, $this->loadTranslationsFromFile($filename));\n    }\n\n    public function _(string $text): string {\n        return $this->translations[$text] ?? $text;\n    }\n\n    private function loadTranslations($language): array {\n        // Load the language translations\n        // This is a dummy array for example purposes\n        return [\n            'Source input' => 'Zdroj vstupního'\n        ];\n    }\n\n    private function loadTranslationsFromFile($filename): array {\n        // Dummy function to simulate loading from a file\n        // This should contain actual file loading logic\n        return [];\n    }\n\n    public static function translate(string $text): string {\n        if (self::$instance === null) {\n            throw new Exception("Lang instance not initialized.");\n        }\n        return self::$instance->_($text);\n    }\n}\n\n// Initialize the Lang object\n$lang = new Lang('Czech');\n$lang->setCurrent('contact_us');\n\nfunction _($text) {\n    return Lang::translate($text);\n}\n\n// Now you can use the shortcut function\n?>\n<p>\n   <?php print _('Source input'); ?> <!-- Output: "Zdroj vstupního" -->\n</p>