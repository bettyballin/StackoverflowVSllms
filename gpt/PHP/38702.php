class Security {\n    public function encodeForHTML($string) {\n        return htmlspecialchars($string, ENT_QUOTES, 'UTF-8');\n    }\n}\n\n// This could be handled by a service container to ensure a single instance\n$securityService = new Security();\necho $securityService->encodeForHTML('<script>alert("test");</script>');\n\n// Non-singleton class example\nclass Form {\n    public function create($action, $method) {\n        return "<form action='$action' method='$method'></form>";\n    }\n}\n\n// Creating multiple instances as needed\n$form1 = new Form();\n$form2 = new Form();\necho $form1->create('submit.php', 'post');\necho $form2->create('register.php', 'post');