<?php\n\ninterface MyInterface {\n    public function myMethod();\n}\n\nclass MyClass implements MyInterface, Iterator, Countable {\n    private $data = [];\n    private $position = 0;\n\n    public function __construct(array $data) {\n        $this->data = $data;\n        $this->position = 0;\n    }\n\n    // MyInterface method\n    public function myMethod() {\n        // Implementation\n    }\n\n    // Iterator methods\n    public function current() {\n        return $this->data[$this->position];\n    }\n\n    public function key() {\n        return $this->position;\n    }\n\n    public function next() {\n        ++$this->position;\n    }\n\n    public function rewind() {\n        $this->position = 0;\n    }\n\n    public function valid() {\n        return isset($this->data[$this->position]);\n    }\n\n    // Countable method\n    public function count() {\n        return count($this->data);\n    }\n}\n\n// Usage\n$myInstance = new MyClass([1, 2, 3]);\n$myInstance->myMethod();\nforeach ($myInstance as $value) {\n    echo $value . PHP_EOL;\n}\necho count($myInstance);\n?>