class data_abstract\n{\n    protected $data = [];\n\n    public function __construct()\n    {\n        $this->loadData();\n    }\n\n    protected function loadData()\n    {\n        $name = strtolower((new \ReflectionClass($this))->getShortName());\n        $table = 'table_' . $name;\n\n        // Assuming DB is a database instance with a query method\n        $this->data = DB->query('SELECT * FROM ' . $table)->fetchAll(PDO::FETCH_ASSOC);\n    }\n\n    public function getData()\n    {\n        return $this->data;\n    }\n}\n\nclass person extends data_abstract\n{\n    protected $data = [];\n\n    public function __construct()\n    {\n        parent::__construct();\n        $this->loadData();\n    }\n\n    protected function loadData()\n    {\n        parent::loadData(); // Load parent data\n        $name = strtolower((new \ReflectionClass($this))->getShortName());\n        $table = 'table_' . $name;\n\n        // Assuming DB is a database instance with a query method\n        $this->data = array_merge($this->data, DB->query('SELECT * FROM ' . $table)->fetchAll(PDO::FETCH_ASSOC));\n    }\n}\n\nclass student extends person\n{\n    protected $data = [];\n\n    public function __construct()\n    {\n        parent::__construct();\n        $this->loadData();\n    }\n\n    protected function loadData()\n    {\n        parent::loadData(); // Load parent data\n        $name = strtolower((new \ReflectionClass($this))->getShortName());\n        $table = 'table_' . $name;\n\n        // Assuming DB is a database instance with a query method\n        $this->data = array_merge($this->data, DB->query('SELECT * FROM ' . $table)->fetchAll(PDO::FETCH_ASSOC));\n    }\n}\n\n// Example usage\n$student = new student();\nprint_r($student->getData());