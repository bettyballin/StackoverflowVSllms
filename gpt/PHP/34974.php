function validateCCValues($input) {\n    // Step 1: Explode the input string by semicolon\n    $values = explode(';', $input);\n\n    // Step 2: Validate the format (ensure no empty values)\n    foreach ($values as $value) {\n        if (empty($value)) {\n            return "Error: Invalid format. Empty values are not allowed.";\n        }\n        if (!ctype_digit($value)) {\n            return "Error: All values must be numeric.";\n        }\n    }\n\n    // Step 3: Query the database to get valid numbers (assuming a function getValidNumbers() exists)\n    $validNumbers = getValidNumbers(); // This should return an array of valid numbers\n\n    // Step 4: Use in_array to verify each value\n    foreach ($values as $value) {\n        if (!in_array($value, $validNumbers)) {\n            return "Error: Value {$value} is not valid.";\n        }\n    }\n\n    return "All values are valid.";\n}\n\n// Example usage\n$input = "1;2;3;4";\necho validateCCValues($input);\n\n// Function to get valid numbers from the database (example)\nfunction getValidNumbers() {\n    // Assuming you have a database connection setup\n    // $db is your database connection\n\n    // Example query to get valid numbers\n    // $result = $db->query("SELECT number FROM valid_numbers");\n\n    // Simulating database result\n    $result = [1, 2, 3, 4, 5]; // Replace this with actual database query result\n\n    return $result;\n}