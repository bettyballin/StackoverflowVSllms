<?php\nfunction sanitizeTags($input) {\n    // Split the input string by comma\n    $tags = explode(',', $input);\n\n    // Trim whitespace and remove empty tags\n    $tags = array_filter(array_map('trim', $tags));\n\n    // Define a regular expression for valid tags (e.g., alphanumeric and spaces only)\n    $validTagPattern = '/^[a-zA-Z0-9 ]+$/';\n\n    // Filter tags using the regular expression\n    $validTags = array_filter($tags, function($tag) use ($validTagPattern) {\n        return preg_match($validTagPattern, $tag);\n    });\n\n    return $validTags;\n}\n\n// Example usage\n$userInput = 'battleship, strategy, games,, sea war,,,';\n$validTags = sanitizeTags($userInput);\n\n// Print valid tags\nprint_r($validTags);\n\n// Insert valid tags into the database\n// Assuming you have a PDO instance $pdo and a table 'tags' with a column 'tag_name'\nforeach ($validTags as $tag) {\n    $stmt = $pdo->prepare("INSERT INTO tags (tag_name) VALUES (:tag)");\n    $stmt->execute(['tag' => $tag]);\n}\n?>