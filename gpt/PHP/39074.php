<?php\n    require 'vendor/autoload.php';\n\n    use Ratchet\MessageComponentInterface;\n    use Ratchet\ConnectionInterface;\n\n    class MyWebSocket implements MessageComponentInterface {\n        public function onOpen(ConnectionInterface $conn) {\n            // Store the new connection to send messages to later\n            $this->clients[$conn->resourceId] = $conn;\n            echo "New connection! ({$conn->resourceId})\n";\n        }\n\n        public function onMessage(ConnectionInterface $from, $msg) {\n            foreach ($this->clients as $client) {\n                if ($from !== $client) {\n                    $client->send($msg);\n                }\n            }\n        }\n\n        public function onClose(ConnectionInterface $conn) {\n            unset($this->clients[$conn->resourceId]);\n            echo "Connection {$conn->resourceId} has disconnected\n";\n        }\n\n        public function onError(ConnectionInterface $conn, \Exception $e) {\n            echo "An error has occurred: {$e->getMessage()}\n";\n            $conn->close();\n        }\n    }\n\n    $server = IoServer::factory(\n        new HttpServer(\n            new WsServer(\n                new MyWebSocket()\n            )\n        ),\n        8080\n    );\n\n    $server->run();