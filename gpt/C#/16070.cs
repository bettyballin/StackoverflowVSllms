// Model for Server\npublic class ServerModel\n{\n    public bool IsOnline { get; set; }\n    public int ClientCount { get; set; }\n\n    private List<StudentModel> students = new List<StudentModel>();\n\n    public event Action<StudentModel> StudentChanged;\n\n    public void AddStudent(StudentModel student)\n    {\n        students.Add(student);\n        NotifyStudentChanged(student);\n    }\n\n    public void UpdateStudent(StudentModel student)\n    {\n        // Logic to update student\n        NotifyStudentChanged(student);\n    }\n\n    private void NotifyStudentChanged(StudentModel student)\n    {\n        StudentChanged?.Invoke(student);\n    }\n}\n\n// Model for Student\npublic class StudentModel\n{\n    public string Name { get; set; }\n    public int Id { get; set; }\n    // Other student-related properties\n}\n\n// Controller\npublic class ServerController\n{\n    private ServerModel serverModel;\n\n    public ServerController(ServerModel model)\n    {\n        serverModel = model;\n    }\n\n    public void OnStudentChanged(StudentModel student)\n    {\n        // Validate and update student in the model\n        serverModel.UpdateStudent(student);\n    }\n}\n\n// View (pseudo code)\npublic class ServerView\n{\n    private ServerController controller;\n\n    public ServerView(ServerController ctrl)\n    {\n        controller = ctrl;\n    }\n\n    public void StudentChanged(StudentModel student)\n    {\n        // Notify the controller about the change\n        controller.OnStudentChanged(student);\n    }\n}