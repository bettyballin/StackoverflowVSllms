using Microsoft.AspNetCore.Mvc;\nusing System.Collections.Generic;\n\nnamespace MyApi.Controllers\n{\n    [Route("api/[controller]")]\n    [ApiController]\n    public class ProductsController : ControllerBase\n    {\n        private static readonly List<Product> Products = new List<Product>\n        {\n            new Product { Id = 1, Name = "Product1", Price = 100 },\n            new Product { Id = 2, Name = "Product2", Price = 200 }\n        };\n\n        [HttpGet]\n        public ActionResult<IEnumerable<Product>> Get()\n        {\n            return Ok(Products);\n        }\n\n        [HttpGet("{id}")]\n        public ActionResult<Product> Get(int id)\n        {\n            var product = Products.Find(p => p.Id == id);\n            if (product == null)\n            {\n                return NotFound();\n            }\n            return Ok(product);\n        }\n\n        [HttpPost]\n        public ActionResult Post([FromBody] Product product)\n        {\n            Products.Add(product);\n            return CreatedAtAction(nameof(Get), new { id = product.Id }, product);\n        }\n\n        [HttpPut("{id}")]\n        public ActionResult Put(int id, [FromBody] Product product)\n        {\n            var existingProduct = Products.Find(p => p.Id == id);\n            if (existingProduct == null)\n            {\n                return NotFound();\n            }\n            existingProduct.Name = product.Name;\n            existingProduct.Price = product.Price;\n            return NoContent();\n        }\n\n        [HttpDelete("{id}")]\n        public ActionResult Delete(int id)\n        {\n            var product = Products.Find(p => p.Id == id);\n            if (product == null)\n            {\n                return NotFound();\n            }\n            Products.Remove(product);\n            return NoContent();\n        }\n    }\n\n    public class Product\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n        public decimal Price { get; set; }\n    }\n}