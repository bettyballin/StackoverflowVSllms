using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main()\n    {\n        foreach (var perm in Permute(new List<int> { 1, 2, 3 }))\n        {\n            Console.WriteLine(string.Join(", ", perm));\n        }\n    }\n\n    static IEnumerable<List<T>> Permute<T>(List<T> xs, List<T> pre = null)\n    {\n        if (pre == null) pre = new List<T>();\n        if (xs.Count == 0)\n        {\n            yield return pre;\n        }\n        else\n        {\n            for (int i = 0; i < xs.Count; i++)\n            {\n                var newXs = new List<T>(xs);\n                newXs.RemoveAt(i);\n                var newPre = new List<T>(pre) { xs[i] };\n                foreach (var y in Permute(newXs, newPre))\n                {\n                    yield return y;\n                }\n            }\n        }\n    }\n}