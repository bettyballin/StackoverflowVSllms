using System;\nusing System.Windows.Forms;\n\npublic partial class Form1 : Form\n{\n    public Form1()\n    {\n        InitializeComponent();\n        webBrowser1.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(webBrowser1_DocumentCompleted);\n        webBrowser1.Navigating += new WebBrowserNavigatingEventHandler(webBrowser1_Navigating);\n        webBrowser1.NavigateError += new WebBrowserNavigateErrorEventHandler(webBrowser1_NavigateError);\n    }\n\n    private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)\n    {\n        if (webBrowser1.ReadyState == WebBrowserReadyState.Complete)\n        {\n            // Check if the page has loaded successfully\n            if (webBrowser1.Document != null && webBrowser1.Document.Title.Contains("Cannot display webpage"))\n            {\n                MessageBox.Show("Cannot display webpage");\n            }\n            else if (webBrowser1.Document != null && webBrowser1.Document.Title.Contains("Page not found"))\n            {\n                MessageBox.Show("Page not found");\n            }\n        }\n    }\n\n    private void webBrowser1_Navigating(object sender, WebBrowserNavigatingEventArgs e)\n    {\n        // Handle navigating event if needed\n    }\n\n    private void webBrowser1_NavigateError(object sender, WebBrowserNavigateErrorEventArgs e)\n    {\n        // Handle navigate error event\n        MessageBox.Show("Navigation error occurred: " + e.StatusCode);\n    }\n}\n\n// To use the NavigateError event, you need to extend the WebBrowser class as follows:\npublic class ExtendedWebBrowser : WebBrowser\n{\n    AxHost.ConnectionPointCookie cookie;\n    WebBrowserExtendedEvents events;\n\n    protected override void CreateSink()\n    {\n        base.CreateSink();\n        events = new WebBrowserExtendedEvents(this);\n        cookie = new AxHost.ConnectionPointCookie(this.ActiveXInstance, events, typeof(DWebBrowserEvents2));\n    }\n\n    protected override void DetachSink()\n    {\n        if (cookie != null)\n        {\n            cookie.Disconnect();\n            cookie = null;\n        }\n        base.DetachSink();\n    }\n\n    public event WebBrowserNavigateErrorEventHandler NavigateError;\n\n    protected void OnNavigateError(object sender, WebBrowserNavigateErrorEventArgs e)\n    {\n        NavigateError?.Invoke(sender, e);\n    }\n\n    class WebBrowserExtendedEvents : StandardOleMarshalObject, DWebBrowserEvents2\n    {\n        ExtendedWebBrowser _Browser;\n        public WebBrowserExtendedEvents(ExtendedWebBrowser browser) { _Browser = browser; }\n\n        public void NavigateError(object pDisp, ref object URL, ref object Frame, ref object StatusCode, ref bool Cancel)\n        {\n            _Browser.OnNavigateError(_Browser, new WebBrowserNavigateErrorEventArgs(URL.ToString(), Frame.ToString(), (int)StatusCode, Cancel));\n        }\n    }\n}\n\npublic delegate void WebBrowserNavigateErrorEventHandler(object sender, WebBrowserNavigateErrorEventArgs e);\n\npublic class WebBrowserNavigateErrorEventArgs : EventArgs\n{\n    public string Url { get; private set; }\n    public string Frame { get; private set; }\n    public int StatusCode { get; private set; }\n    public bool Cancel { get; private set; }\n\n    public WebBrowserNavigateErrorEventArgs(string url, string frame, int statusCode, bool cancel)\n    {\n        Url = url;\n        Frame = frame;\n        StatusCode = statusCode;\n        Cancel = cancel;\n    }\n}\n\n[System.Runtime.InteropServices.ComImport, System.Runtime.InteropServices.Guid("D30C1661-CDAF-11d0-8A3E-00C04FC9E26E"), System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch), System.Runtime.InteropServices.TypeLibType(System.Runtime.InteropServices.TypeLibTypeFlags.FHidden)]\npublic interface DWebBrowserEvents2\n{\n    [System.Runtime.InteropServices.DispId(271)]\n    void NavigateError([System.Runtime.InteropServices.In, System.Runtime.InteropServices.MarshalAs(System.Runtime.InteropServices.UnmanagedType.IDispatch)] object pDisp, [System.Runtime.InteropServices.In] ref object URL, [System.Runtime.InteropServices.In] ref object Frame, [System.Runtime.InteropServices.In] ref object StatusCode, [System.Runtime.InteropServices.In, System.Runtime.InteropServices.Out] ref bool Cancel);\n}