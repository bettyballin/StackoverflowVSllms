public IEnumerable<X> GetSortedData(DataContext db, string sortColumn, bool sortDesc)\n{\n    var query = db.Table<X>().AsQueryable();\n\n    if (!string.IsNullOrEmpty(sortColumn))\n    {\n        var param = Expression.Parameter(typeof(X), "x");\n        var property = Expression.Property(param, sortColumn);\n        var lambda = Expression.Lambda(property, param);\n\n        var methodName = sortDesc ? "OrderByDescending" : "OrderBy";\n        var result = typeof(Queryable).GetMethods()\n            .Where(method => method.Name == methodName && method.GetParameters().Length == 2)\n            .Single()\n            .MakeGenericMethod(typeof(X), property.Type)\n            .Invoke(null, new object[] { query, lambda });\n\n        query = (IQueryable<X>)result;\n    }\n\n    return query.ToList();\n}