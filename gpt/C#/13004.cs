// Base Info class\npublic abstract class Info \n{\n    // Common properties for all Info types\n}\n\n// Derived Info classes\npublic class EmployeeInfo : Info \n{\n    // Specific properties for EmployeeInfo\n}\n\npublic class ManagerInfo : Info \n{\n    // Specific properties for ManagerInfo\n}\n\n// Generic InformationReturn class\npublic class InformationReturn<T> where T : Info\n{\n    public InformationReturn(Employee employee, List<T> infoList) \n    {\n        // Initialization code\n    }\n}\n\n// Base repository class\npublic abstract class Repository<T> where T : Info\n{\n    public abstract void Save(InformationReturn<T> informationReturn);\n}\n\n// Derived repository classes\npublic class EmployeeInfoRepository : Repository<EmployeeInfo>\n{\n    public override void Save(InformationReturn<EmployeeInfo> informationReturn)\n    {\n        // Save EmployeeInfo to DB\n    }\n}\n\npublic class ManagerInfoRepository : Repository<ManagerInfo>\n{\n    public override void Save(InformationReturn<ManagerInfo> informationReturn)\n    {\n        // Save ManagerInfo to DB\n    }\n}