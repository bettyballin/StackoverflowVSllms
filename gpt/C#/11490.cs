public DataSet RetrieveDiagnosisCodes()\n{\n    string tableName = "tblDiagnosisCues";\n    string strSQL = @"\n        select tblDiagnosisCues.*, \n               tblDiagnosisCategory.Description as CategoryDesc,   \n               tblDiagnosisSubCategory.Description as SubCategoryDesc \n        FROM dbo.tblDiagnosisCategory \n        INNER JOIN dbo.tblDiagnosisSubCategory \n        ON dbo.tblDiagnosisCategory.Category = dbo.tblDiagnosisSubCategory.Category \n        INNER JOIN dbo.tblDiagnosisCues ON dbo.tblDiagnosisSubCategory.SubCategory = dbo.tblDiagnosisCues.SubCategoryID \n        where effectivedate <= getdate() and (termdate >= getdate() or termdate is null) \n        order by tblDiagnosisCues.Description";\n\n    DataSet ds = new DataSet();\n    SqlConnection cnn = new SqlConnection(Settings.Default.CMOSQLConn);\n    SqlCommand cmd = new SqlCommand(strSQL, cnn) { CommandType = CommandType.Text };\n    SqlDataAdapter da = new SqlDataAdapter(cmd);\n\n    try\n    {\n        cnn.Open(); // Ensure the connection is open\n        da.Fill(ds); // Fill the DataSet\n    }\n    catch (Exception ex)\n    {\n        // Log the exception message\n        Console.WriteLine("Error: " + ex.Message);\n        throw;\n    }\n    finally\n    {\n        cmd.Dispose();\n        da.Dispose();\n        cnn.Close();\n        cnn.Dispose();\n    }\n\n    // Ensure the DataSet has at least one table and rows\n    if (ds.Tables.Count == 0 || ds.Tables[0].Rows.Count == 0)\n    {\n        Console.WriteLine("DataSet is empty or contains no rows.");\n    }\n\n    return ds;\n}