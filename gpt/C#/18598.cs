using System;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Linq;\nusing System.Collections.Generic;\n\npublic void InsertLargeNumberOfRecords()\n{\n    string[] lines = File.ReadAllLines("C:\\Temp\\Data.dat");\n    const int batchSize = 1000; // Adjust the batch size as needed\n\n    List<MyDataObject> dataObjects = new List<MyDataObject>();\n\n    foreach (string line in lines)\n    {\n        MyDataObject obj = ParseObject(line);\n        dataObjects.Add(obj);\n\n        if (dataObjects.Count >= batchSize)\n        {\n            InsertBatch(dataObjects);\n            dataObjects.Clear();\n        }\n    }\n\n    if (dataObjects.Any())\n    {\n        InsertBatch(dataObjects);\n    }\n}\n\nprivate void InsertBatch(List<MyDataObject> dataObjects)\n{\n    using (var myDataContext = new MyDataContext())\n    {\n        myDataContext.MyDataObjects.AddRange(dataObjects); // Assuming you have a method to add range\n        myDataContext.SubmitChanges();\n    }\n}\n\nprivate MyDataObject ParseObject(string line)\n{\n    // Implement parsing logic here\n    return new MyDataObject();\n}\n\npublic void SqlBulkInsert(List<MyDataObject> dataObjects)\n{\n    using (var bulkCopy = new SqlBulkCopy("your_connection_string"))\n    {\n        bulkCopy.DestinationTableName = "MyDataObjects";\n\n        // Create a DataTable and fill it with dataObjects\n        var dataTable = new DataTable();\n        // Fill dataTable with dataObjects\n\n        bulkCopy.WriteToServer(dataTable);\n    }\n}