public class Blog\n{\n    public int Id { get; private set; }\n    public string Url { get; private set; }\n\n    // Read-only property\n    public string Name { get; private set; }\n\n    // Constructor that EF Core will use\n    public Blog(string url, string name)\n    {\n        Url = url;\n        Name = name;\n    }\n}\n\n// DbContext configuration\npublic class BloggingContext : DbContext\n{\n    public DbSet<Blog> Blogs { get; set; }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<Blog>()\n            .HasKey(b => b.Id);\n\n        // Configure EF Core to use the constructor\n        modelBuilder.Entity<Blog>()\n            .Property(b => b.Url)\n            .HasField("_url")\n            .UsePropertyAccessMode(PropertyAccessMode.Field);\n\n        modelBuilder.Entity<Blog>()\n            .Property(b => b.Name)\n            .HasField("_name")\n            .UsePropertyAccessMode(PropertyAccessMode.Field);\n    }\n}