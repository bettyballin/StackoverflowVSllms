public class YourRemotingClass : MarshalByRefObject\n{\n    // Assuming a SessionFactory is available\n    private ISessionFactory sessionFactory;\n\n    public YourRemotingClass(ISessionFactory sessionFactory)\n    {\n        this.sessionFactory = sessionFactory;\n    }\n\n    public YourReturnType YourMethod()\n    {\n        using (ISession session = sessionFactory.OpenSession())\n        {\n            using (ITransaction transaction = session.BeginTransaction())\n            {\n                try\n                {\n                    // Perform NHibernate query\n                    var result = session.Query<YourEntity>().ToList();\n                    \n                    // Commit the transaction\n                    transaction.Commit();\n\n                    // Optionally initialize proxies if needed\n                    NHibernateUtil.Initialize(result);\n\n                    return result;\n                }\n                catch (Exception ex)\n                {\n                    transaction.Rollback();\n                    // Handle exception if needed\n                    throw;\n                }\n            }\n        }\n    }\n}