using iTextSharp.text;\nusing iTextSharp.text.pdf;\nusing System.Xml;\n\npublic void ConvertHtmlToPdf(string htmlContent, string pdfPath)\n{\n    // Create a new PDF document\n    Document document = new Document();\n    PdfWriter.GetInstance(document, new FileStream(pdfPath, FileMode.Create));\n    document.Open();\n\n    // Manually parse HTML and add content to the PDF\n    XmlDocument htmlDoc = new XmlDocument();\n    htmlDoc.LoadXml(htmlContent);\n\n    foreach (XmlNode node in htmlDoc.DocumentElement.ChildNodes)\n    {\n        if (node.Name == "table")\n        {\n            PdfPTable pdfTable = new PdfPTable(GetColumnCount(node));\n            foreach (XmlNode row in node.SelectNodes("tbody/tr"))\n            {\n                foreach (XmlNode cell in row.ChildNodes)\n                {\n                    PdfPCell pdfCell = new PdfPCell(new Phrase(cell.InnerText, FontFactory.GetFont(FontFactory.TIMES, 12)));\n                    // Apply styles manually\n                    if (cell.Attributes["style"] != null)\n                    {\n                        ApplyStyles(pdfCell, cell.Attributes["style"].Value);\n                    }\n                    pdfTable.AddCell(pdfCell);\n                }\n            }\n            document.Add(pdfTable);\n        }\n        // Handle other HTML elements as needed\n    }\n\n    document.Close();\n}\n\nprivate int GetColumnCount(XmlNode tableNode)\n{\n    // Calculate the number of columns based on the first row\n    XmlNode firstRow = tableNode.SelectSingleNode("tbody/tr");\n    return firstRow.ChildNodes.Count;\n}\n\nprivate void ApplyStyles(PdfPCell cell, string styles)\n{\n    // Parse and apply styles to the cell\n    string[] styleArray = styles.Split(';');\n    foreach (string style in styleArray)\n    {\n        string[] stylePair = style.Split(':');\n        if (stylePair.Length == 2)\n        {\n            string styleName = stylePair[0].Trim().ToLower();\n            string styleValue = stylePair[1].Trim().ToLower();\n\n            switch (styleName)\n            {\n                case "text-align":\n                    if (styleValue == "center")\n                    {\n                        cell.HorizontalAlignment = Element.ALIGN_CENTER;\n                    }\n                    else if (styleValue == "right")\n                    {\n                        cell.HorizontalAlignment = Element.ALIGN_RIGHT;\n                    }\n                    else\n                    {\n                        cell.HorizontalAlignment = Element.ALIGN_LEFT;\n                    }\n                    break;\n                case "font-weight":\n                    if (styleValue == "bold")\n                    {\n                        cell.Phrase.Font.SetStyle(Font.BOLD);\n                    }\n                    break;\n                // Add more styles as needed\n            }\n        }\n    }\n}