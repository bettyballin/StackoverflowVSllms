using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("user32.dll")]\n    private static extern IntPtr GetConsoleWindow();\n\n    [DllImport("user32.dll", SetLastError = true)]\n    private static extern bool SendMessage(IntPtr hWnd, uint Msg, IntPtr wParam, IntPtr lParam);\n\n    private const uint WM_SETICON = 0x0080;\n    private const int ICON_SMALL = 0;\n    private const int ICON_BIG = 1;\n\n    [DllImport("user32.dll", SetLastError = true)]\n    private static extern IntPtr LoadIcon(IntPtr hInstance, IntPtr lpIconName);\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern IntPtr GetModuleHandle(string lpModuleName);\n\n    static void Main()\n    {\n        IntPtr hWnd = GetConsoleWindow();\n        IntPtr hInstance = GetModuleHandle(null);\n\n        // Load an icon (this example uses a system icon)\n        IntPtr hIcon = LoadIcon(hInstance, new IntPtr(32512)); // 32512 is the ID for the application icon\n\n        // Set the icon for the console window\n        SendMessage(hWnd, WM_SETICON, new IntPtr(ICON_SMALL), hIcon);\n        SendMessage(hWnd, WM_SETICON, new IntPtr(ICON_BIG), hIcon);\n\n        Console.WriteLine("Console icon changed!");\n        Console.ReadLine();\n    }\n}