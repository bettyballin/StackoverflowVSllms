using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Xml.Linq;\n\npublic class EncryptedXmlHandler\n{\n    private static readonly byte[] Key = Encoding.UTF8.GetBytes("YourEncryptionKey0123456789"); // 32 bytes for AES-256\n    private static readonly byte[] IV = Encoding.UTF8.GetBytes("YourIV0123456789"); // 16 bytes for AES\n\n    public static XDocument ReadEncryptedXml(string filePath)\n    {\n        using (var fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read))\n        using (var cryptoStream = new CryptoStream(fileStream, new AesManaged().CreateDecryptor(Key, IV), CryptoStreamMode.Read))\n        using (var reader = new StreamReader(cryptoStream))\n        {\n            string decryptedXml = reader.ReadToEnd();\n            return XDocument.Parse(decryptedXml);\n        }\n    }\n\n    public static void WriteEncryptedXml(string filePath, XDocument document)\n    {\n        using (var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write))\n        using (var cryptoStream = new CryptoStream(fileStream, new AesManaged().CreateEncryptor(Key, IV), CryptoStreamMode.Write))\n        using (var writer = new StreamWriter(cryptoStream))\n        {\n            writer.Write(document.ToString());\n        }\n    }\n\n    public static void Main()\n    {\n        string filePath = "encrypted.xml";\n        \n        // Read the encrypted XML file\n        XDocument xmlDoc = ReadEncryptedXml(filePath);\n        Console.WriteLine("Decrypted XML:");\n        Console.WriteLine(xmlDoc);\n\n        // Manipulate the XML document\n        // Example: Add a new element\n        xmlDoc.Root.Add(new XElement("NewElement", "NewValue"));\n\n        // Write the XML document back to the file, encrypted\n        WriteEncryptedXml(filePath, xmlDoc);\n    }\n}