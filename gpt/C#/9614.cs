public class ProductRepositoryTests\n{\n    private readonly Mock<IProductRepository> _mockRepo;\n    private readonly List<Product> _products;\n\n    public ProductRepositoryTests()\n    {\n        _mockRepo = new Mock<IProductRepository>();\n        _products = new List<Product>\n        {\n            new Product { Id = 1, Name = "Product1", Price = 10.0M },\n            new Product { Id = 2, Name = "Product2", Price = 20.0M }\n        };\n\n        _mockRepo.Setup(repo => repo.GetAll()).Returns(_products);\n        _mockRepo.Setup(repo => repo.GetById(It.IsAny<int>())).Returns((int id) => _products.FirstOrDefault(p => p.Id == id));\n    }\n\n    [Fact]\n    public void GetAllProducts_ReturnsAllProducts()\n    {\n        var products = _mockRepo.Object.GetAll();\n        Assert.Equal(2, products.Count());\n    }\n\n    [Fact]\n    public void GetProductById_ReturnsCorrectProduct()\n    {\n        var product = _mockRepo.Object.GetById(1);\n        Assert.Equal("Product1", product.Name);\n    }\n}