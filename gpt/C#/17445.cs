using System;\nusing System.Collections.Generic;\nusing YamlDotNet.Serialization;\nusing YamlDotNet.Serialization.NamingConventions;\n\npublic class TagItem\n{\n    public string name { get; set; }\n    public string value { get; set; }\n}\n\npublic class TagGroup\n{\n    public string id { get; set; }\n    public List<TagItem> tag { get; set; }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var yaml = @"\n- id: tagid\n  tag:\n  - name: tagname\n    value: tagvalue\n";\n\n        var deserializer = new DeserializerBuilder()\n            .WithNamingConvention(CamelCaseNamingConvention.Instance)\n            .Build();\n\n        var tagGroups = deserializer.Deserialize<List<TagGroup>>(yaml);\n\n        foreach (var group in tagGroups)\n        {\n            foreach (var tag in group.tag)\n            {\n                Console.WriteLine($"Name: {tag.name}, Value: {tag.value}");\n            }\n        }\n    }\n}