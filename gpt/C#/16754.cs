using Microsoft.ReportingServices.Interfaces;\nusing System.Net.Mail;\nusing System.IO;\n\npublic class CustomDeliveryExtension : IExtension, IDeliveryExtension\n{\n    public string LocalizedName => "Custom Delivery Extension";\n\n    public void Deliver(Notification notification, SubscriptionData subscriptionData, Report report)\n    {\n        // Render the report\n        byte[] reportBytes = RenderReport(report);\n\n        // Check if the report is empty\n        bool isEmpty = IsReportEmpty(reportBytes);\n\n        // Create email message\n        MailMessage message = new MailMessage();\n        message.To.Add(notification.Recipient);\n        message.Subject = "Your Report";\n\n        if (isEmpty)\n        {\n            message.Body = "The report is empty.";\n        }\n        else\n        {\n            message.Body = "Please find the attached report.";\n            Attachment attachment = new Attachment(new MemoryStream(reportBytes), "Report.xlsx");\n            message.Attachments.Add(attachment);\n        }\n\n        // Send email\n        SmtpClient client = new SmtpClient("your.smtp.server");\n        client.Send(message);\n    }\n\n    private byte[] RenderReport(Report report)\n    {\n        // Implement report rendering logic here\n        // Return the rendered report as a byte array\n    }\n\n    private bool IsReportEmpty(byte[] reportBytes)\n    {\n        // Implement logic to check if the report is empty\n        // Return true if empty, false otherwise\n    }\n\n    public void SetConfiguration(string configuration)\n    {\n        // Implement configuration logic if needed\n    }\n}