using System;\nusing System.Runtime.InteropServices;\n\npublic class BatteryStatus\n{\n    [DllImport("coredll.dll")]\n    private static extern bool GetSystemPowerStatusEx(ref SYSTEM_POWER_STATUS_EX lpSystemPowerStatus, bool fUpdate);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct SYSTEM_POWER_STATUS_EX\n    {\n        public byte ACLineStatus;\n        public byte BatteryFlag;\n        public byte BatteryLifePercent;\n        public byte Reserved1;\n        public uint BatteryLifeTime;\n        public uint BatteryFullLifeTime;\n        public byte Reserved2;\n        public byte BackupBatteryFlag;\n        public byte BackupBatteryLifePercent;\n        public byte Reserved3;\n        public uint BackupBatteryLifeTime;\n        public uint BackupBatteryFullLifeTime;\n    }\n\n    public static int GetBatteryLevel()\n    {\n        SYSTEM_POWER_STATUS_EX status = new SYSTEM_POWER_STATUS_EX();\n        if (GetSystemPowerStatusEx(ref status, true))\n        {\n            return status.BatteryLifePercent;\n        }\n        else\n        {\n            throw new InvalidOperationException("Unable to get battery status.");\n        }\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        try\n        {\n            int batteryLevel = BatteryStatus.GetBatteryLevel();\n            Console.WriteLine("Current Battery Level: " + batteryLevel + "%");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n}