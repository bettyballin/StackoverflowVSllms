using System;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\nclass Program\n{\n    private static TcpClient client;\n    private static NetworkStream stream;\n    private static bool running = true;\n\n    static void Main(string[] args)\n    {\n        client = new TcpClient("server_address", 12345); // Replace with your server address and port\n        stream = client.GetStream();\n        \n        Thread listenerThread = new Thread(ListenForMessages);\n        listenerThread.Start();\n\n        while (running)\n        {\n            string messageToSend = Console.ReadLine();\n            if (messageToSend.Equals("quit", StringComparison.OrdinalIgnoreCase))\n            {\n                running = false;\n                break;\n            }\n            byte[] data = Encoding.UTF8.GetBytes(messageToSend);\n            stream.Write(data, 0, data.Length);\n        }\n\n        listenerThread.Join();\n        stream.Close();\n        client.Close();\n    }\n\n    private static void ListenForMessages()\n    {\n        byte[] buffer = new byte[1024];\n        while (running)\n        {\n            int bytesRead = stream.Read(buffer, 0, buffer.Length);\n            if (bytesRead > 0)\n            {\n                string message = Encoding.UTF8.GetString(buffer, 0, bytesRead);\n                WriteMessage(message);\n            }\n        }\n    }\n\n    private static void WriteMessage(string message)\n    {\n        int cursorLeft = Console.CursorLeft;\n        int cursorTop = Console.CursorTop;\n\n        Console.SetCursorPosition(0, Console.CursorTop);\n        Console.WriteLine(message);\n\n        Console.SetCursorPosition(cursorLeft, cursorTop);\n    }\n}