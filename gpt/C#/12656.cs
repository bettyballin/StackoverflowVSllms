protected void ManagerList_GV_RowCommand(object sender, GridViewCommandEventArgs e)\n{\n    if (e.CommandName == "DeleteRow")\n    {\n        // Determine the row index of the command\n        int rowIndex = Convert.ToInt32(e.CommandArgument);\n        \n        // Retrieve the ManagerID from the DataKeys collection\n        int managerID = Convert.ToInt32(ManagerList_GV.DataKeys[rowIndex].Value);\n        \n        // Call your delete method and pass the managerID\n        DeleteManager(managerID);\n        \n        // Rebind the GridView to reflect the changes\n        BindGridView();\n    }\n}\n\nprotected void DeleteManager(int managerID)\n{\n    // Your logic to delete the manager from the database\n    // Example: using a stored procedure or a direct database call\n}\n\nprotected void BindGridView()\n{\n    // Your logic to bind the GridView with data\n    // Example: ManagerList_GV.DataSource = GetData();\n    // ManagerList_GV.DataBind();\n}