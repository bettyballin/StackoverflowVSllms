using System;\nusing System.Runtime.InteropServices;\n\nclass HardDriveStatus\n{\n    private const uint IOCTL_STORAGE_QUERY_PROPERTY = 0x2D1400;\n    \n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern IntPtr CreateFile(\n        string lpFileName,\n        uint dwDesiredAccess,\n        uint dwShareMode,\n        IntPtr lpSecurityAttributes,\n        uint dwCreationDisposition,\n        uint dwFlagsAndAttributes,\n        IntPtr hTemplateFile);\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool DeviceIoControl(\n        IntPtr hDevice,\n        uint dwIoControlCode,\n        IntPtr lpInBuffer,\n        uint nInBufferSize,\n        IntPtr lpOutBuffer,\n        uint nOutBufferSize,\n        ref uint lpBytesReturned,\n        IntPtr lpOverlapped);\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool CloseHandle(IntPtr hObject);\n\n    public static void Main()\n    {\n        string driveLetter = @"\\.\PhysicalDrive0"; // Change as necessary\n        IntPtr driveHandle = CreateFile(driveLetter, 0, 3, IntPtr.Zero, 3, 0, IntPtr.Zero);\n\n        if (driveHandle == IntPtr.Zero)\n        {\n            Console.WriteLine("Failed to get drive handle.");\n            return;\n        }\n\n        try\n        {\n            uint bytesReturned = 0;\n            IntPtr query = Marshal.AllocHGlobal(1024);\n            bool result = DeviceIoControl(driveHandle, IOCTL_STORAGE_QUERY_PROPERTY, IntPtr.Zero, 0, query, 1024, ref bytesReturned, IntPtr.Zero);\n\n            if (result)\n            {\n                // Interpret the result to determine if the drive is sleeping\n                // Note: This part is highly dependent on the specific drive and its response behavior\n                Console.WriteLine("Drive status queried successfully.");\n            }\n            else\n            {\n                Console.WriteLine("Failed to query drive status.");\n            }\n\n            Marshal.FreeHGlobal(query);\n        }\n        finally\n        {\n            CloseHandle(driveHandle);\n        }\n    }\n}