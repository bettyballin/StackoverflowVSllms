using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing Microsoft.Win32.SafeHandles;\n\npublic class NtfsCompression\n{\n    private const int FSCTL_SET_COMPRESSION = 0x9C040;\n    private const short COMPRESSION_FORMAT_DEFAULT = 1;\n\n    [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    private static extern SafeFileHandle CreateFile(\n        string lpFileName,\n        uint dwDesiredAccess,\n        uint dwShareMode,\n        IntPtr lpSecurityAttributes,\n        uint dwCreationDisposition,\n        uint dwFlagsAndAttributes,\n        IntPtr hTemplateFile);\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool DeviceIoControl(\n        SafeFileHandle hDevice,\n        uint dwIoControlCode,\n        ref short lpInBuffer,\n        int nInBufferSize,\n        IntPtr lpOutBuffer,\n        int nOutBufferSize,\n        ref int lpBytesReturned,\n        IntPtr lpOverlapped);\n\n    public static void CompressFolder(string folderPath)\n    {\n        SafeFileHandle handle = CreateFile(\n            folderPath,\n            0x40000000, // GENERIC_WRITE\n            0x00000001 | 0x00000002, // FILE_SHARE_READ | FILE_SHARE_WRITE\n            IntPtr.Zero,\n            3, // OPEN_EXISTING\n            0x02000000, // FILE_FLAG_BACKUP_SEMANTICS\n            IntPtr.Zero);\n\n        if (handle.IsInvalid)\n        {\n            throw new IOException("Unable to open directory.", Marshal.GetLastWin32Error());\n        }\n\n        try\n        {\n            short compressionFormat = COMPRESSION_FORMAT_DEFAULT;\n            int bytesReturned = 0;\n\n            bool result = DeviceIoControl(\n                handle,\n                FSCTL_SET_COMPRESSION,\n                ref compressionFormat,\n                sizeof(short),\n                IntPtr.Zero,\n                0,\n                ref bytesReturned,\n                IntPtr.Zero);\n\n            if (!result)\n            {\n                throw new IOException("Unable to compress directory.", Marshal.GetLastWin32Error());\n            }\n        }\n        finally\n        {\n            handle.Close();\n        }\n    }\n\n    public static void Main(string[] args)\n    {\n        string folderPath = @"C:\Path\To\Your\Folder";\n        CompressFolder(folderPath);\n        Console.WriteLine("Folder compressed successfully.");\n    }\n}