using System;\nusing System.Reflection;\n\npublic class AssemblyChecker\n{\n    private static readonly byte[] AllowedPublicKeyToken = { /* Your public key token bytes here */ };\n\n    public static void EnsureCallerIsAllowed()\n    {\n        Assembly callingAssembly = Assembly.GetCallingAssembly();\n        byte[] publicKeyToken = callingAssembly.GetName().GetPublicKeyToken();\n\n        if (!IsPublicKeyTokenAllowed(publicKeyToken))\n        {\n            throw new UnauthorizedAccessException("Unauthorized calling assembly.");\n        }\n    }\n\n    private static bool IsPublicKeyTokenAllowed(byte[] publicKeyToken)\n    {\n        if (publicKeyToken == null || publicKeyToken.Length != AllowedPublicKeyToken.Length)\n        {\n            return false;\n        }\n\n        for (int i = 0; i < publicKeyToken.Length; i++)\n        {\n            if (publicKeyToken[i] != AllowedPublicKeyToken[i])\n            {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}