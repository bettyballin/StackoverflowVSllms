using System;\nusing System.Text;\nusing System.Web;\nusing System.Security.Principal;\nusing System.Threading;\n\npublic class BasicAuthHttpModule : IHttpModule\n{\n    public void Init(HttpApplication context)\n    {\n        context.AuthenticateRequest += new EventHandler(OnAuthenticateRequest);\n    }\n\n    public void Dispose() { }\n\n    private void OnAuthenticateRequest(object sender, EventArgs e)\n    {\n        HttpApplication application = (HttpApplication)sender;\n        HttpContext context = application.Context;\n\n        string authHeader = context.Request.Headers["Authorization"];\n        if (authHeader != null && authHeader.StartsWith("Basic"))\n        {\n            string encodedCredentials = authHeader.Substring(6);\n            string decodedCredentials = Encoding.UTF8.GetString(Convert.FromBase64String(encodedCredentials));\n            string[] split = decodedCredentials.Split(':');\n            string username = split[0];\n            string password = split[1];\n\n            if (username == "foo" && password == "bar")\n            {\n                IIdentity identity = new GenericIdentity(username, "Basic");\n                IPrincipal principal = new GenericPrincipal(identity, null);\n                context.User = principal;\n                Thread.CurrentPrincipal = principal;\n            }\n            else\n            {\n                DenyAccess(context);\n            }\n        }\n        else\n        {\n            DenyAccess(context);\n        }\n    }\n\n    private void DenyAccess(HttpContext context)\n    {\n        context.Response.StatusCode = 401;\n        context.Response.StatusDescription = "Unauthorized";\n        context.Response.AddHeader("WWW-Authenticate", "Basic realm=\"MyRealm\"");\n        context.Response.End();\n    }\n}