using System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        ProcessStartInfo startInfo = new ProcessStartInfo\n        {\n            FileName = "path_to_your_executable.exe",\n            RedirectStandardInput = true,\n            RedirectStandardOutput = true,\n            UseShellExecute = false,\n            CreateNoWindow = true\n        };\n\n        Process process = new Process { StartInfo = startInfo };\n\n        process.Start();\n\n        StreamWriter inputWriter = process.StandardInput;\n        StreamReader outputReader = process.StandardOutput;\n\n        // Simulate sending a script to the process\n        await inputWriter.WriteLineAsync("for i in 1 to 10\n{\n    print i\n    BP\n}");\n\n        // Read the output asynchronously\n        Task readOutputTask = Task.Run(async () =>\n        {\n            while (!outputReader.EndOfStream)\n            {\n                string output = await outputReader.ReadLineAsync();\n                Console.WriteLine(output);\n\n                // Check for breakpoints or specific output\n                if (output.Contains("BP"))\n                {\n                    Console.WriteLine("Breakpoint hit. Type CNT to continue...");\n                    string command = Console.ReadLine();\n\n                    // Send continue command to the process\n                    if (command == "CNT")\n                    {\n                        await inputWriter.WriteLineAsync("CNT");\n                    }\n                }\n            }\n        });\n\n        await readOutputTask;\n\n        process.WaitForExit();\n    }\n}