using System;\nusing System.Configuration;\nusing System.ServiceModel;\nusing System.ServiceModel.Configuration;\n\npublic class ServiceClientFactory\n{\n    public static T CreateClient<T>(string configPath, string endpointName) where T : class\n    {\n        // Load the configuration file\n        ExeConfigurationFileMap configFile = new ExeConfigurationFileMap\n        {\n            ExeConfigFilename = configPath\n        };\n        Configuration config = ConfigurationManager.OpenMappedExeConfiguration(configFile, ConfigurationUserLevel.None);\n\n        // Get the endpoint configuration\n        ServiceModelSectionGroup serviceModel = ServiceModelSectionGroup.GetSectionGroup(config);\n        if (serviceModel == null)\n        {\n            throw new ConfigurationErrorsException("ServiceModel section not found in config file.");\n        }\n\n        ClientSection clientSection = serviceModel.Client;\n        ChannelEndpointElement endpointElement = null;\n        foreach (ChannelEndpointElement endpoint in clientSection.Endpoints)\n        {\n            if (endpoint.Name == endpointName)\n            {\n                endpointElement = endpoint;\n                break;\n            }\n        }\n\n        if (endpointElement == null)\n        {\n            throw new ConfigurationErrorsException($"Endpoint '{endpointName}' not found in config file.");\n        }\n\n        // Create the binding\n        Binding binding = CreateBinding(endpointElement.Binding, endpointElement.BindingConfiguration, config);\n\n        // Create the endpoint address\n        EndpointAddress endpointAddress = new EndpointAddress(endpointElement.Address);\n\n        // Create and initialize the client\n        ChannelFactory<T> factory = new ChannelFactory<T>(binding, endpointAddress);\n        return factory.CreateChannel();\n    }\n\n    private static Binding CreateBinding(string bindingName, string bindingConfiguration, Configuration config)\n    {\n        BindingsSection bindingsSection = (BindingsSection)config.GetSection("system.serviceModel/bindings");\n        if (bindingsSection == null)\n        {\n            throw new ConfigurationErrorsException("Bindings section not found in config file.");\n        }\n\n        // Find the binding configuration\n        BindingCollectionElement bindingCollectionElement = bindingsSection[bindingName];\n        if (bindingCollectionElement == null)\n        {\n            throw new ConfigurationErrorsException($"Binding '{bindingName}' not found in config file.");\n        }\n\n        IBindingConfigurationElement bindingConfigElement = bindingCollectionElement[bindingConfiguration];\n        if (bindingConfigElement == null)\n        {\n            throw new ConfigurationErrorsException($"Binding configuration '{bindingConfiguration}' not found in config file.");\n        }\n\n        // Create and return the binding\n        Binding binding = (Binding)Activator.CreateInstance(bindingConfigElement.BindingType);\n        bindingConfigElement.ApplyConfiguration(binding);\n        return binding;\n    }\n}