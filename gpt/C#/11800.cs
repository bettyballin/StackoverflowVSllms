using System;\nusing System.Collections.Generic;\n\n// Define a base delegate type\npublic delegate void BaseDelegate();\n\npublic class EventQueue<T> where T : BaseDelegate\n{\n    private Queue<T> eventQueue = new Queue<T>();\n\n    public void Enqueue(T eventItem)\n    {\n        eventQueue.Enqueue(eventItem);\n    }\n\n    public T Dequeue()\n    {\n        return eventQueue.Dequeue();\n    }\n\n    public int Count => eventQueue.Count;\n}\n\n// Example usage\npublic class Program\n{\n    public static void Main()\n    {\n        EventQueue<BaseDelegate> queue = new EventQueue<BaseDelegate>();\n\n        queue.Enqueue(() => Console.WriteLine("Hello, World!"));\n        queue.Enqueue(() => Console.WriteLine("Another event"));\n\n        while (queue.Count > 0)\n        {\n            BaseDelegate eventItem = queue.Dequeue();\n            eventItem();\n        }\n    }\n}