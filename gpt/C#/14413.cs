using System;\nusing System.Configuration;\nusing System.IO;\nusing System.Reflection;\n\npublic class ConfigLoader\n{\n    private static Configuration _config;\n\n    public static void LoadConfig(string configFilePath)\n    {\n        var map = new ExeConfigurationFileMap { ExeConfigFilename = configFilePath };\n        _config = ConfigurationManager.OpenMappedExeConfiguration(map, ConfigurationUserLevel.None);\n    }\n\n    public static string GetAppSetting(string key)\n    {\n        if (_config == null)\n        {\n            throw new InvalidOperationException("Configuration file is not loaded.");\n        }\n\n        return _config.AppSettings.Settings[key]?.Value;\n    }\n}\n\n// Example usage in your COM wrapper\npublic class Wrapper\n{\n    public Wrapper()\n    {\n        string configFilePath = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "Wrapper.dll.config");\n        ConfigLoader.LoadConfig(configFilePath);\n\n        // Example: Reading a setting from the config file\n        string logPath = ConfigLoader.GetAppSetting("LogPath");\n        // Initialize log4net or other configurations using the settings\n    }\n}