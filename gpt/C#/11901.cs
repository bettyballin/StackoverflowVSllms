using System;\nusing System.Web;\nusing IManage;\n\npublic static class DMSHelper\n{\n    private static readonly object lockObject = new object();\n\n    public static IManDMS GetDMS()\n    {\n        IManDMS dms = HttpContext.Current.Application["DMS"] as IManDMS;\n        if (dms == null)\n        {\n            dms = new ManDMSClass();\n            HttpContext.Current.Application["DMS"] = dms;\n        }\n        return dms;\n    }\n\n    public static IManSession GetSession(string serverName)\n    {\n        IManDMS dms = GetDMS();\n        IManSession session = null;\n\n        lock (lockObject)\n        {\n            try\n            {\n                session = dms.Sessions.Add(serverName);\n                session.TrustedLogin();\n            }\n            catch (Exception ex)\n            {\n                // Handle exception\n                Console.WriteLine("Error adding session: " + ex.Message);\n            }\n        }\n\n        return session;\n    }\n\n    public static void ReleaseSession(IManSession session)\n    {\n        IManDMS dms = GetDMS();\n\n        lock (lockObject)\n        {\n            try\n            {\n                session.Logout();\n                dms.Sessions.RemoveByObject(session);\n            }\n            catch (Exception ex)\n            {\n                // Handle exception\n                Console.WriteLine("Error releasing session: " + ex.Message);\n            }\n        }\n    }\n}\n\n// Usage example\nIManSession session = DMSHelper.GetSession("myServer");\n\nif (session != null)\n{\n    // Do something with the session object, like retrieve documents.\n    \n    DMSHelper.ReleaseSession(session);\n}