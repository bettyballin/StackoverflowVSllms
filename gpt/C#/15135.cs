public class ObservableList<T> : IList<T>\n{\n    private readonly List<T> _innerList = new List<T>();\n\n    public void Add(T item)\n    {\n        Console.WriteLine("Adding item");\n        _innerList.Add(item);\n    }\n\n    public bool Remove(T item)\n    {\n        Console.WriteLine("Removing item");\n        return _innerList.Remove(item);\n    }\n\n    // Implement other IList<T> members and delegate to _innerList, logging as appropriate\n\n    public IEnumerator<T> GetEnumerator()\n    {\n        return _innerList.GetEnumerator();\n    }\n\n    IEnumerator IEnumerable.GetEnumerator()\n    {\n        return ((IEnumerable)_innerList).GetEnumerator();\n    }\n\n    // Implement other IList<T> members...\n}