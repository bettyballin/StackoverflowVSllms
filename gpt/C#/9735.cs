public interface IEngine\n{\n    void Start();\n}\n\npublic interface ICar\n{\n    void Drive();\n}\n\npublic class Car : ICar\n{\n    private readonly IEngine _engine;\n\n    public Car(IEngine engine)\n    {\n        _engine = engine ?? throw new ArgumentNullException(nameof(engine));\n    }\n\n    public void Drive()\n    {\n        _engine.Start();\n        // Implementation of driving\n    }\n}\n\npublic static class CarFactory\n{\n    public static ICar CreateCar(IEngine engine)\n    {\n        return new Car(engine);\n    }\n}