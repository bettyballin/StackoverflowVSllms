using System;\nusing System.IdentityModel.Claims;\nusing System.IdentityModel.Policy;\nusing System.Security.Principal;\n\npublic class CustomAuthorizationPolicy : IAuthorizationPolicy\n{\n    private readonly IIdentity _identity;\n\n    public CustomAuthorizationPolicy(IIdentity identity)\n    {\n        _identity = identity;\n        Id = Guid.NewGuid().ToString();\n    }\n\n    public string Id { get; }\n\n    public ClaimSet Issuer => ClaimSet.System;\n\n    public bool Evaluate(EvaluationContext evaluationContext, ref object state)\n    {\n        evaluationContext.AddClaimSet(this, new DefaultClaimSet(ClaimSet.System, new Claim(ClaimTypes.Name, _identity.Name)));\n        evaluationContext.Properties["Principal"] = new CustomPrincipal(_identity);\n        return true;\n    }\n}\n\npublic class CustomPrincipal : IPrincipal\n{\n    public CustomPrincipal(IIdentity identity)\n    {\n        Identity = identity;\n    }\n\n    public IIdentity Identity { get; }\n\n    public bool IsInRole(string role)\n    {\n        return false;\n    }\n}