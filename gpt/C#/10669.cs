using RazorLight;\n   using System.Threading.Tasks;\n\n   public class HtmlRenderer\n   {\n       public async Task<string> RenderToHtml(Product product)\n       {\n           var engine = new RazorLightEngineBuilder()\n               .UseEmbeddedResourcesProject(typeof(HtmlRenderer))\n               .UseMemoryCachingProvider()\n               .Build();\n\n           string template = // Load your template here, e.g., from a file or embedded resource\n           string result = await engine.CompileRenderAsync("ProductTemplate", product);\n           return result;\n       }\n   }\n\n   // Example usage:\n   public class Product\n   {\n       public string Name { get; set; }\n       public string Description { get; set; }\n       public decimal Price { get; set; }\n       // Other properties...\n   }\n\n   public async Task Main()\n   {\n       var product = new Product\n       {\n           Name = "Sample Product",\n           Description = "This is a sample product.",\n           Price = 9.99m\n       };\n\n       var renderer = new HtmlRenderer();\n       string html = await renderer.RenderToHtml(product);\n\n       // Output or use the HTML as needed\n       Console.WriteLine(html);\n   }