public async Task<IActionResult> Login(LoginViewModel model)\n{\n    if (ModelState.IsValid)\n    {\n        var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, model.RememberMe, lockoutOnFailure: false);\n        if (result.Succeeded)\n        {\n            // Fetch the user's secret key from the database\n            var user = await _userManager.FindByEmailAsync(model.Email);\n            byte[] secretKey = Base32Encoder.Decode(user.TotpSecret);\n\n            // Validate the TOTP code\n            Totp totp = new Totp(secretKey);\n            bool isValid = totp.VerifyTotp(model.TotpCode, out long timeStepMatched, VerificationWindow.RfcSpecifiedNetworkDelay);\n            if (isValid)\n            {\n                // Proceed to the secured area\n                return RedirectToAction("Index", "Home");\n            }\n            else\n            {\n                ModelState.AddModelError(string.Empty, "Invalid TOTP code.");\n            }\n        }\n        ModelState.AddModelError(string.Empty, "Invalid login attempt.");\n    }\n\n    // If we got this far, something failed, redisplay form\n    return View(model);\n}