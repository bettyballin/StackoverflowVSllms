using EnvDTE;\nusing EnvDTE80;\nusing System;\nusing System.Linq;\n\npublic class ProjectBuildChecker\n{\n    private DTE2 _dte;\n\n    public ProjectBuildChecker(DTE2 dte)\n    {\n        _dte = dte;\n    }\n\n    public bool IsProjectUpToDate(Project project)\n    {\n        // Ensure that configuration is set to Release or Debug (or other configuration you are using)\n        var configManager = project.ConfigurationManager;\n        if (configManager == null)\n        {\n            return false; // Unable to determine the configuration, assume out of date\n        }\n\n        var activeConfiguration = configManager.ActiveConfiguration;\n        var projectName = project.UniqueName;\n\n        // Use SolutionBuild2 to check the project's build state\n        SolutionBuild2 solutionBuild = (SolutionBuild2)_dte.Solution.SolutionBuild;\n        var buildDependencies = solutionBuild.BuildDependencies.Cast<BuildDependency>()\n            .FirstOrDefault(dep => dep.Project.UniqueName == projectName);\n\n        if (buildDependencies == null)\n        {\n            return false; // Unable to find build dependencies, assume out of date\n        }\n\n        return buildDependencies.NeedsBuilding;\n    }\n}