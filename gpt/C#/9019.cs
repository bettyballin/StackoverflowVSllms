using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\n\n[DirectorySchema("C4User"), DirectoryRoot("o=c4, ou=users")]\nclass User\n{\n    [DirectoryAttribute("cn")]\n    public string Username { get; set; }\n\n    [DirectoryAttribute("userpassword")]\n    public string Password { get; set; }\n\n    [DirectoryAttribute("C4-Parent")]\n    public string Parent { get; set; }\n}\n\n[AttributeUsage(AttributeTargets.Property, AllowMultiple = false)]\npublic class DirectoryAttributeAttribute : Attribute\n{\n    public string Attribute { get; }\n    public DirectoryAttributeType Type { get; }\n\n    public DirectoryAttributeAttribute(string attribute, DirectoryAttributeType type = DirectoryAttributeType.Ldap)\n    {\n        Attribute = attribute;\n        Type = type;\n    }\n}\n\npublic enum DirectoryAttributeType\n{\n    Ldap,\n    ActiveDs\n}\n\npublic class LdapMapper\n{\n    private readonly Dictionary<string, PropertyInfo> _propertyMap;\n\n    public LdapMapper(Type type)\n    {\n        _propertyMap = BuildPropertyMap(type);\n    }\n\n    private Dictionary<string, PropertyInfo> BuildPropertyMap(Type type)\n    {\n        var map = new Dictionary<string, PropertyInfo>();\n        foreach (var prop in type.GetProperties())\n        {\n            var attr = prop.GetCustomAttributes(typeof(DirectoryAttributeAttribute), false)\n                           .FirstOrDefault() as DirectoryAttributeAttribute;\n            if (attr != null)\n            {\n                map[attr.Attribute] = prop;\n            }\n        }\n        return map;\n    }\n\n    public void MapLdapResultToUser(Dictionary<string, string> ldapResult, object obj)\n    {\n        foreach (var kvp in ldapResult)\n        {\n            if (_propertyMap.TryGetValue(kvp.Key, out var prop))\n            {\n                prop.SetValue(obj, Convert.ChangeType(kvp.Value, prop.PropertyType));\n            }\n        }\n    }\n}\n\n// Usage example\nclass Program\n{\n    static void Main()\n    {\n        var ldapResult = new Dictionary<string, string>\n        {\n            {"cn", "JohnDoe"},\n            {"userpassword", "password123"},\n            {"C4-Parent", "ParentValue"}\n        };\n\n        var user = new User();\n        var mapper = new LdapMapper(typeof(User));\n        mapper.MapLdapResultToUser(ldapResult, user);\n\n        Console.WriteLine($"Username: {user.Username}");\n        Console.WriteLine($"Password: {user.Password}");\n        Console.WriteLine($"Parent: {user.Parent}");\n    }\n}