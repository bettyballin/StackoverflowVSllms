using System;\nusing System.Web;\n\npublic class SSLModule : IHttpModule\n{\n    public void Init(HttpApplication context)\n    {\n        context.PreRequestHandlerExecute += new EventHandler(OnPreRequestHandlerExecute);\n    }\n\n    private void OnPreRequestHandlerExecute(object sender, EventArgs e)\n    {\n        HttpContext ctx = HttpContext.Current;\n        if (ctx == null) return;\n\n        bool requestRequiresSSL = RequiresSSL(ctx.Request);\n        bool isSecureConnection = ctx.Request.IsSecureConnection;\n        string pathAndQuery = ctx.Request.Url.PathAndQuery;\n\n        if (requestRequiresSSL && !isSecureConnection)\n        {\n            ctx.Response.Redirect("https://www.myurl.com" + pathAndQuery);\n        }\n        else if (!requestRequiresSSL && isSecureConnection)\n        {\n            ctx.Response.Redirect("http://www.myurl.com" + pathAndQuery);\n        }\n    }\n\n    private bool RequiresSSL(HttpRequest request)\n    {\n        // Implement your custom logic to determine if SSL is required for the request.\n        // For example, you might check the request path or query string.\n        string path = request.Url.AbsolutePath.ToLower();\n        return path.StartsWith("/secure"); // Example logic\n    }\n\n    public void Dispose()\n    {\n        // Clean-up code here.\n    }\n}