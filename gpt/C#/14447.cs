using System;\nusing System.IO;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        // Create a new FileSystemWatcher and set its properties.\n        FileSystemWatcher watcher = new FileSystemWatcher();\n        watcher.Path = @"C:\Path\To\Watch";\n\n        // Watch for changes in LastWrite times, and the renaming of files or directories.\n        watcher.NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.FileName | NotifyFilters.DirectoryName;\n\n        // Only watch text files.\n        watcher.Filter = "*.txt";\n\n        // Add event handlers.\n        watcher.Changed += OnChanged;\n        watcher.Created += OnChanged;\n        watcher.Deleted += OnChanged;\n        watcher.Renamed += OnRenamed;\n\n        // Begin watching.\n        watcher.EnableRaisingEvents = true;\n\n        // Use a ManualResetEvent to keep the program running.\n        ManualResetEvent resetEvent = new ManualResetEvent(false);\n        resetEvent.WaitOne();\n    }\n\n    // Define the event handlers.\n    private static void OnChanged(object source, FileSystemEventArgs e)\n    {\n        // Specify what is done when a file is changed, created, or deleted.\n        Console.WriteLine($"File: {e.FullPath} {e.ChangeType}");\n    }\n\n    private static void OnRenamed(object source, RenamedEventArgs e)\n    {\n        // Specify what is done when a file is renamed.\n        Console.WriteLine($"File: {e.OldFullPath} renamed to {e.FullPath}");\n    }\n}