using System;\nusing System.IO;\nusing System.IO.Compression;\nusing System.Web;\n\npublic class CompressionModule : IHttpModule\n{\n    public void Init(HttpApplication context)\n    {\n        context.BeginRequest += new EventHandler(OnBeginRequest);\n    }\n\n    private void OnBeginRequest(object sender, EventArgs e)\n    {\n        HttpApplication app = (HttpApplication)sender;\n        HttpRequest request = app.Context.Request;\n        HttpResponse response = app.Context.Response;\n\n        string acceptEncoding = request.Headers["Accept-Encoding"];\n        if (!string.IsNullOrEmpty(acceptEncoding))\n        {\n            acceptEncoding = acceptEncoding.ToLowerInvariant();\n            if (acceptEncoding.Contains("gzip"))\n            {\n                response.Filter = new GZipStream(response.Filter, CompressionMode.Compress);\n                response.AppendHeader("Content-Encoding", "gzip");\n            }\n            else if (acceptEncoding.Contains("deflate"))\n            {\n                response.Filter = new DeflateStream(response.Filter, CompressionMode.Compress);\n                response.AppendHeader("Content-Encoding", "deflate");\n            }\n        }\n    }\n\n    public void Dispose()\n    {\n        // Clean-up code here if needed.\n    }\n}