// Domain Model\npublic class PurchaseOrder\n{\n    public int Id { get; set; }\n    public string Factory { get; set; }\n    // Other properties...\n}\n\n// Service Layer\npublic class PurchaseOrderService\n{\n    private readonly IPurchaseOrderRepository _purchaseOrderRepository;\n\n    public PurchaseOrderService(IPurchaseOrderRepository purchaseOrderRepository)\n    {\n        _purchaseOrderRepository = purchaseOrderRepository;\n    }\n\n    public bool UpdateFactory(int purchaseOrderId, string newFactory)\n    {\n        var purchaseOrder = _purchaseOrderRepository.GetById(purchaseOrderId);\n        if (purchaseOrder == null)\n        {\n            throw new Exception("Purchase order not found.");\n        }\n\n        if (IsFactoryValid(newFactory, purchaseOrder))\n        {\n            purchaseOrder.Factory = newFactory;\n            _purchaseOrderRepository.Update(purchaseOrder);\n            return true;\n        }\n\n        return false;\n    }\n\n    private bool IsFactoryValid(string factory, PurchaseOrder purchaseOrder)\n    {\n        // Perform validation logic here, possibly including database queries\n        // For example:\n        var factoryProducesProduct = _purchaseOrderRepository.FactoryProducesProduct(factory, purchaseOrder.ProductId);\n        var hasPricing = _purchaseOrderRepository.FactoryHasPricing(factory, purchaseOrder.ProductId);\n        var meetsMinimumQuantity = _purchaseOrderRepository.FactoryMeetsMinimumQuantity(factory, purchaseOrder.Quantity);\n\n        return factoryProducesProduct && hasPricing && meetsMinimumQuantity;\n    }\n}\n\n// Data Access Layer (Repository Pattern)\npublic interface IPurchaseOrderRepository\n{\n    PurchaseOrder GetById(int id);\n    void Update(PurchaseOrder purchaseOrder);\n    bool FactoryProducesProduct(string factory, int productId);\n    bool FactoryHasPricing(string factory, int productId);\n    bool FactoryMeetsMinimumQuantity(string factory, int quantity);\n}\n\npublic class PurchaseOrderRepository : IPurchaseOrderRepository\n{\n    // Implement data access methods here\n}\n\n// Usage\nvar purchaseOrderService = new PurchaseOrderService(new PurchaseOrderRepository());\nbool updated = purchaseOrderService.UpdateFactory(purchaseOrderId, newFactory);