public class TriggerService\n{\n    private readonly Timer _timer;\n    private readonly string _connectionString;\n\n    public TriggerService(string connectionString)\n    {\n        _connectionString = connectionString;\n        _timer = new Timer(CheckTriggers, null, TimeSpan.Zero, TimeSpan.FromMinutes(1)); // Adjust interval as needed\n    }\n\n    private void CheckTriggers(object state)\n    {\n        using (SqlConnection conn = new SqlConnection(_connectionString))\n        {\n            conn.Open();\n            \n            // Process time-based triggers\n            string timeBasedQuery = "SELECT * FROM TriggerTable WHERE trigger_type = 'time-based' AND trigger_time <= GETDATE() AND is_processed = 0";\n            using (SqlCommand cmd = new SqlCommand(timeBasedQuery, conn))\n            using (SqlDataReader reader = cmd.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    // Process each trigger\n                    ProcessTrigger(reader);\n                }\n            }\n\n            // Process manual triggers\n            string manualQuery = "SELECT * FROM TriggerTable WHERE trigger_type = 'manual' AND is_processed = 0";\n            using (SqlCommand cmd = new SqlCommand(manualQuery, conn))\n            using (SqlDataReader reader = cmd.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    // Process each trigger\n                    ProcessTrigger(reader);\n                }\n            }\n        }\n    }\n\n    private void ProcessTrigger(SqlDataReader reader)\n    {\n        // Implement your trigger processing logic here\n\n        // Mark trigger as processed\n        int triggerId = reader.GetInt32(reader.GetOrdinal("trigger_id"));\n        MarkTriggerAsProcessed(triggerId);\n    }\n\n    private void MarkTriggerAsProcessed(int triggerId)\n    {\n        using (SqlConnection conn = new SqlConnection(_connectionString))\n        {\n            conn.Open();\n            string updateQuery = "UPDATE TriggerTable SET is_processed = 1 WHERE trigger_id = @triggerId";\n            using (SqlCommand cmd = new SqlCommand(updateQuery, conn))\n            {\n                cmd.Parameters.AddWithValue("@triggerId", triggerId);\n                cmd.ExecuteNonQuery();\n            }\n        }\n    }\n}