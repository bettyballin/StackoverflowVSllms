using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\nclass SimpleProxyServer\n{\n    private static void Main(string[] args)\n    {\n        int localPort = 8888; // Port to listen on\n        string remoteHost = "example.com"; // Destination server\n        int remotePort = 80; // Destination server port\n\n        TcpListener listener = new TcpListener(IPAddress.Any, localPort);\n        listener.Start();\n        Console.WriteLine($"Proxy server started on port {localPort}");\n\n        while (true)\n        {\n            TcpClient client = listener.AcceptTcpClient();\n            Console.WriteLine("Client connected");\n\n            Thread thread = new Thread(() => HandleClient(client, remoteHost, remotePort));\n            thread.Start();\n        }\n    }\n\n    private static void HandleClient(TcpClient client, string remoteHost, int remotePort)\n    {\n        TcpClient server = null;\n\n        try\n        {\n            server = new TcpClient(remoteHost, remotePort);\n            NetworkStream clientStream = client.GetStream();\n            NetworkStream serverStream = server.GetStream();\n\n            // Start two threads for bidirectional communication\n            Thread clientToServer = new Thread(() => ForwardData(clientStream, serverStream));\n            Thread serverToClient = new Thread(() => ForwardData(serverStream, clientStream));\n\n            clientToServer.Start();\n            serverToClient.Start();\n\n            clientToServer.Join();\n            serverToClient.Join();\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error: {ex.Message}");\n        }\n        finally\n        {\n            client.Close();\n            server?.Close();\n        }\n    }\n\n    private static void ForwardData(NetworkStream input, NetworkStream output)\n    {\n        byte[] buffer = new byte[4096];\n        int bytesRead;\n\n        try\n        {\n            while ((bytesRead = input.Read(buffer, 0, buffer.Length)) > 0)\n            {\n                output.Write(buffer, 0, bytesRead);\n                output.Flush();\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error during data forwarding: {ex.Message}");\n        }\n    }\n}