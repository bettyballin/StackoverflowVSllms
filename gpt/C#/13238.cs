using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\n\npublic class NetworkShareAccess : IDisposable\n{\n    private WindowsImpersonationContext _impersonationContext;\n\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    private static extern bool LogonUser(string lpszUsername, string lpszDomain, string lpszPassword, \n                                         int dwLogonType, int dwLogonProvider, out IntPtr phToken);\n\n    public NetworkShareAccess(string username, string domain, string password)\n    {\n        IntPtr tokenHandle = IntPtr.Zero;\n        bool returnValue = LogonUser(username, domain, password, 2, 0, out tokenHandle);\n        if (returnValue)\n        {\n            WindowsIdentity identity = new WindowsIdentity(tokenHandle);\n            _impersonationContext = identity.Impersonate();\n        }\n        else\n        {\n            throw new UnauthorizedAccessException("Logon failed for user " + username);\n        }\n    }\n\n    public void Dispose()\n    {\n        _impersonationContext?.Undo();\n    }\n}\n\n// Usage\npublic bool CheckFileExists(string networkFilePath)\n{\n    string username = "yourUsername";\n    string domain = "yourDomain";\n    string password = "yourPassword";\n\n    using (new NetworkShareAccess(username, domain, password))\n    {\n        return File.Exists(networkFilePath);\n    }\n}