using System;\nusing VixCOM;\n\nnamespace ConsoleApplication48\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var lib = new VixLibClass();\n            object results = null;\n\n            var job = lib.Connect(Constants.VIX_API_VERSION, Constants.VIX_SERVICEPROVIDER_VMWARE_WORKSTATION, null, 0,\n            null, null, 0, null, null);\n\n            var err = job.Wait(new[] {Constants.VIX_PROPERTY_JOB_RESULT_HANDLE}, ref results);\n            \n            if (lib.ErrorIndicatesFailure(err))\n            {\n                Console.WriteLine("Error: " + err);\n                return;\n            }\n\n            var host = (IHost)((object[])results)[0];\n\n            job = host.FindItems(Constants.VIX_FIND_REGISTERED_VMS, null, -1, new DiscoveryCallback(lib));\n            job.WaitWithoutResults();\n\n            host.Disconnect();\n        }\n    }\n\n    internal class DiscoveryCallback : ICallback\n    {\n        protected VixLibClass lib;\n\n        public DiscoveryCallback(VixLibClass lib)\n        {\n            this.lib = lib;\n        }\n\n        #region ICallback Members\n\n        public void OnVixEvent(IJob job, int eventType, IVixHandle moreEventInfo)\n        {\n            Console.WriteLine("Event Received: Type=" + eventType);\n            // Handle events here\n        }\n\n        #endregion\n    }\n}