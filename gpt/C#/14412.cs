public class EmployeeMap : ClassMap<Employees>\n{\n    public EmployeeMap()\n    {\n        Id(x => x.EmployeeID);\n        Map(x => x.FirstName);\n        Map(x => x.LastName);\n        Map(x => x.City);\n        Map(x => x.HireDate);\n        Map(x => x.Title);\n        HasMany(x => x.Orders)\n            .KeyColumn("EmployeeID")\n            .Inverse()\n            .Cascade.All()\n            .AsBag();\n    }\n}\n\npublic class OrdersMap : ClassMap<Orders>\n{\n    public OrdersMap()\n    {\n        Id(x => x.OrderID);\n        Map(x => x.OrderDate);\n        Map(x => x.RequiredDate);\n        Map(x => x.ShippedDate);\n        References(x => x.Employee, "EmployeeID");\n        HasManyToMany(x => x.Products)\n            .Cascade.All()\n            .Table("OrderDetails") // Correct table name\n            .ParentKeyColumn("OrderID") // Ensure correct column names\n            .ChildKeyColumn("ProductID"); // Ensure correct column names\n    }\n}\n\npublic class ProductsMap : ClassMap<Products>\n{\n    public ProductsMap()\n    {\n        Id(x => x.ProductID);\n        Map(x => x.ProductName);\n        Map(x => x.UnitPrice);\n        HasManyToMany(x => x.Orders)\n            .Cascade.All()\n            .Inverse()\n            .Table("OrderDetails") // Correct table name\n            .ParentKeyColumn("ProductID") // Ensure correct column names\n            .ChildKeyColumn("OrderID"); // Ensure correct column names\n    }\n}