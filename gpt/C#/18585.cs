public class IpWhitelistMiddleware\n{\n    private readonly RequestDelegate _next;\n    private readonly HashSet<string> _whitelistedIps;\n\n    public IpWhitelistMiddleware(RequestDelegate next, IConfiguration configuration)\n    {\n        _next = next;\n        _whitelistedIps = configuration.GetSection("WhitelistedIps").Get<HashSet<string>>();\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        var remoteIp = context.Connection.RemoteIpAddress?.ToString();\n        if (!_whitelistedIps.Contains(remoteIp))\n        {\n            context.Response.StatusCode = StatusCodes.Status403Forbidden;\n            await context.Response.WriteAsync("Forbidden.");\n            return;\n        }\n\n        await _next(context);\n    }\n}\n\npublic static class IpWhitelistMiddlewareExtensions\n{\n    public static IApplicationBuilder UseIpWhitelist(this IApplicationBuilder builder)\n    {\n        return builder.UseMiddleware<IpWhitelistMiddleware>();\n    }\n}