using System;\nusing System.IO;\n\npublic class BigEndianBinaryReader : BinaryReader\n{\n    public BigEndianBinaryReader(Stream input) : base(input) { }\n\n    public override short ReadInt16()\n    {\n        var data = base.ReadBytes(2);\n        Array.Reverse(data);\n        return BitConverter.ToInt16(data, 0);\n    }\n\n    public override int ReadInt32()\n    {\n        var data = base.ReadBytes(4);\n        Array.Reverse(data);\n        return BitConverter.ToInt32(data, 0);\n    }\n\n    public override long ReadInt64()\n    {\n        var data = base.ReadBytes(8);\n        Array.Reverse(data);\n        return BitConverter.ToInt64(data, 0);\n    }\n\n    public override ushort ReadUInt16()\n    {\n        var data = base.ReadBytes(2);\n        Array.Reverse(data);\n        return BitConverter.ToUInt16(data, 0);\n    }\n\n    public override uint ReadUInt32()\n    {\n        var data = base.ReadBytes(4);\n        Array.Reverse(data);\n        return BitConverter.ToUInt32(data, 0);\n    }\n\n    public override ulong ReadUInt64()\n    {\n        var data = base.ReadBytes(8);\n        Array.Reverse(data);\n        return BitConverter.ToUInt64(data, 0);\n    }\n}\n\npublic class BigEndianBinaryWriter : BinaryWriter\n{\n    public BigEndianBinaryWriter(Stream output) : base(output) { }\n\n    public override void Write(short value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n\n    public override void Write(int value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n\n    public override void Write(long value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n\n    public override void Write(ushort value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n\n    public override void Write(uint value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n\n    public override void Write(ulong value)\n    {\n        var data = BitConverter.GetBytes(value);\n        Array.Reverse(data);\n        base.Write(data);\n    }\n}