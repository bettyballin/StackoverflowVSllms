using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic static class ListExtensions\n{\n    public static T ElementAtOrCustomDefault<T>(this IEnumerable<T> source, int index, T defaultValue)\n    {\n        if (source == null)\n        {\n            throw new ArgumentNullException(nameof(source));\n        }\n\n        if (index < 0)\n        {\n            throw new ArgumentOutOfRangeException(nameof(index));\n        }\n\n        // Use ElementAtOrDefault to get the element or default(T)\n        T result = source.ElementAtOrDefault(index);\n\n        // If the result is default(T), return the custom default value\n        return EqualityComparer<T>.Default.Equals(result, default(T)) ? defaultValue : result;\n    }\n}