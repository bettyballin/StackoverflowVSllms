using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Event\n{\n    public DateTime StartTime { get; set; }\n    public string Description { get; set; }\n}\n\npublic class EventExtractor\n{\n    private List<Event> events;\n\n    public EventExtractor(List<Event> events)\n    {\n        // Ensure the list is sorted by StartTime\n        this.events = events.OrderBy(e => e.StartTime).ToList();\n    }\n\n    public List<Event> GetEventsInRange(DateTime start, DateTime end)\n    {\n        // Find the start index using binary search\n        int startIndex = events.BinarySearch(new Event { StartTime = start }, new EventComparer());\n        if (startIndex < 0) startIndex = ~startIndex; // If not found, BinarySearch returns the bitwise complement of the next larger element's index\n\n        // Find the end index using binary search\n        int endIndex = events.BinarySearch(new Event { StartTime = end }, new EventComparer());\n        if (endIndex < 0) endIndex = ~endIndex; // If not found, BinarySearch returns the bitwise complement of the next larger element's index\n        else endIndex++; // Include the element at endIndex if it matches exactly\n\n        // Return the subset of events within the specified range\n        return events.Skip(startIndex).Take(endIndex - startIndex).ToList();\n    }\n\n    private class EventComparer : IComparer<Event>\n    {\n        public int Compare(Event x, Event y)\n        {\n            return x.StartTime.CompareTo(y.StartTime);\n        }\n    }\n}\n\n// Example usage\npublic class Program\n{\n    public static void Main()\n    {\n        List<Event> events = new List<Event>\n        {\n            new Event { StartTime = new DateTime(2023, 1, 1), Description = "New Year Celebration" },\n            new Event { StartTime = new DateTime(2023, 2, 14), Description = "Valentine's Day" },\n            new Event { StartTime = new DateTime(2023, 4, 1), Description = "April Fool's Day" },\n            // Add more events here\n        };\n\n        EventExtractor extractor = new EventExtractor(events);\n\n        DateTime start = new DateTime(2023, 1, 1);\n        DateTime end = new DateTime(2023, 3, 1);\n\n        List<Event> subset = extractor.GetEventsInRange(start, end);\n\n        foreach (var ev in subset)\n        {\n            Console.WriteLine($"{ev.StartTime}: {ev.Description}");\n        }\n    }\n}