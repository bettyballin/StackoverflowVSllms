using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryption\n{\n    public static string Decrypt(string cipherText, byte[] key, byte[] iv)\n    {\n        // Check arguments.\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException(nameof(cipherText));\n        if (key == null || key.Length <= 0)\n            throw new ArgumentNullException(nameof(key));\n        if (iv == null || iv.Length <= 0)\n            throw new ArgumentNullException(nameof(iv));\n\n        // Prepare the buffer.\n        byte[] buffer = Convert.FromBase64String(cipherText);\n\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = key;\n            aes.IV = iv;\n            aes.Padding = PaddingMode.PKCS7;\n\n            // Create a decryptor to perform the stream transform.\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n\n            using (MemoryStream memoryStream = new MemoryStream(buffer))\n            {\n                using (CryptoStream cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader streamReader = new StreamReader(cryptoStream))\n                    {\n                        // Read the decrypted bytes from the decrypting stream\n                        // and place them in a string.\n                        return streamReader.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}