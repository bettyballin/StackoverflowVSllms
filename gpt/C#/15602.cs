// Prism Module\npublic class PaintModule : IModule\n{\n    public void Initialize()\n    {\n        // Module initialization logic\n    }\n}\n\n// MEF Export (e.g., a new shape)\n[Export(typeof(IShape))]\npublic class RectangleShape : IShape\n{\n    public void Draw()\n    {\n        // Drawing logic for rectangle\n    }\n}\n\n// MEF Import in a Prism ViewModel\npublic class CanvasViewModel\n{\n    [ImportMany]\n    public IEnumerable<IShape> Shapes { get; set; }\n    \n    // Constructor\n    public CanvasViewModel()\n    {\n        // Compose parts using MEF\n        var catalog = new AggregateCatalog();\n        catalog.Catalogs.Add(new AssemblyCatalog(typeof(CanvasViewModel).Assembly));\n        var container = new CompositionContainer(catalog);\n        container.ComposeParts(this);\n    }\n\n    // Use the imported shapes\n    public void DrawShapes()\n    {\n        foreach (var shape in Shapes)\n        {\n            shape.Draw();\n        }\n    }\n}\n\n// IShape Interface\npublic interface IShape\n{\n    void Draw();\n}