<%@ WebHandler Language="C#" Class="Proxy" %>\n\nusing System;\nusing System.IO;\nusing System.Net;\nusing System.Web;\n\npublic class Proxy : IHttpHandler {\n\n    public void ProcessRequest (HttpContext context) {\n        string url = context.Request["url"];\n        if (string.IsNullOrEmpty(url))\n        {\n            context.Response.StatusCode = 400; // Bad Request\n            context.Response.StatusDescription = "URL parameter is missing.";\n            return;\n        }\n\n        try\n        {\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n            request.UserAgent = context.Request.UserAgent;\n            request.ContentType = context.Request.ContentType;\n            request.Method = context.Request.HttpMethod;\n\n            if (request.Method.ToUpper() == "POST")\n            {\n                using (Stream requestStream = request.GetRequestStream())\n                {\n                    context.Request.InputStream.CopyTo(requestStream);\n                }\n            }\n\n            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n            {\n                context.Response.ContentType = response.ContentType;\n\n                using (Stream receiveStream = response.GetResponseStream())\n                {\n                    receiveStream.CopyTo(context.Response.OutputStream);\n                }\n            }\n        }\n        catch (Exception ex)\n        {\n            context.Response.StatusCode = 500; // Internal Server Error\n            context.Response.StatusDescription = ex.Message;\n        }\n        finally\n        {\n            context.Response.Flush();\n            context.Response.End();\n        }\n    }\n\n    public bool IsReusable {\n        get {\n            return false;\n        }\n    }\n}