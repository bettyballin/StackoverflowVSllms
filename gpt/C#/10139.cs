using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class RSAEncryptionExample\n{\n    public static void Main()\n    {\n        try\n        {\n            // Generate RSA keys\n            using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider(2048))\n            {\n                string publicKey = rsa.ToXmlString(false); // Export public key\n                string privateKey = rsa.ToXmlString(true); // Export private key\n\n                // Encrypt data\n                string dataToEncrypt = "Sensitive Data";\n                byte[] encryptedData = EncryptData(Encoding.UTF8.GetBytes(dataToEncrypt), publicKey);\n\n                // Decrypt data\n                byte[] decryptedData = DecryptData(encryptedData, privateKey);\n                string decryptedText = Encoding.UTF8.GetString(decryptedData);\n\n                Console.WriteLine("Original Data: " + dataToEncrypt);\n                Console.WriteLine("Decrypted Data: " + decryptedText);\n            }\n        }\n        catch (CryptographicException ex)\n        {\n            Console.WriteLine("RSA encryption failed with error code: " + ex.HResult);\n        }\n    }\n\n    public static byte[] EncryptData(byte[] data, string publicKey)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            rsa.FromXmlString(publicKey);\n            return rsa.Encrypt(data, false);\n        }\n    }\n\n    public static byte[] DecryptData(byte[] data, string privateKey)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            rsa.FromXmlString(privateKey);\n            return rsa.Decrypt(data, false);\n        }\n    }\n}