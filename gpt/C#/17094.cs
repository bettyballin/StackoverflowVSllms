public class MyEntity\n{\n    public int Id { get; set; } // Surrogate Key\n    public string UniqueValue { get; set; } // Alternate Key\n    \n    // Navigation properties\n    public virtual ICollection<RelatedEntity> RelatedEntities { get; set; }\n}\n\npublic class RelatedEntity\n{\n    public int Id { get; set; } // Surrogate Key\n    public string MyEntityUniqueValue { get; set; } // FK to MyEntity.UniqueValue\n    \n    // Navigation properties\n    public virtual MyEntity MyEntity { get; set; }\n}\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<MyEntity> MyEntities { get; set; }\n    public DbSet<RelatedEntity> RelatedEntities { get; set; }\n    \n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<MyEntity>()\n            .HasIndex(e => e.UniqueValue)\n            .IsUnique();\n\n        modelBuilder.Entity<RelatedEntity>()\n            .HasOne(re => re.MyEntity)\n            .WithMany(me => me.RelatedEntities)\n            .HasForeignKey(re => re.MyEntityUniqueValue)\n            .HasPrincipalKey(me => me.UniqueValue);\n    }\n}