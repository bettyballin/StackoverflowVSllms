// On user login\npublic void LoginUser(int userId)\n{\n    // Generate a GUID\n    string guid = Guid.NewGuid().ToString();\n\n    // Store the GUID in the database with the user ID\n    StoreGuidInDatabase(userId, guid);\n\n    // Create a cookie with the GUID\n    HttpCookie authCookie = new HttpCookie("AuthCookie", guid)\n    {\n        Expires = DateTime.Now.AddYears(1), // Set far future expiration date\n        HttpOnly = true, // Mitigate XSS attacks\n        Secure = true // Use only with HTTPS\n    };\n    HttpContext.Current.Response.Cookies.Add(authCookie);\n\n    // Set the session\n    HttpContext.Current.Session["UserId"] = userId;\n}\n\n// On each request\npublic void CheckAuthCookie()\n{\n    if (HttpContext.Current.Session["UserId"] == null)\n    {\n        HttpCookie authCookie = HttpContext.Current.Request.Cookies["AuthCookie"];\n        if (authCookie != null)\n        {\n            // Get the GUID from the cookie\n            string guid = authCookie.Value;\n\n            // Validate the GUID against the database\n            int? userId = GetUserIdByGuid(guid);\n            if (userId.HasValue)\n            {\n                // Set the session\n                HttpContext.Current.Session["UserId"] = userId.Value;\n\n                // Optionally, renew the cookie expiration\n                authCookie.Expires = DateTime.Now.AddYears(1);\n                HttpContext.Current.Response.Cookies.Add(authCookie);\n            }\n        }\n    }\n}\n\n// Helper methods to interact with the database\nprivate void StoreGuidInDatabase(int userId, string guid)\n{\n    // Code to store the GUID and user ID in the database\n}\n\nprivate int? GetUserIdByGuid(string guid)\n{\n    // Code to get the user ID from the database using the GUID\n    return userId;\n}