using System;\nusing System.ServiceModel.Dispatcher;\nusing System.ServiceModel.Channels;\nusing System.ServiceModel;\n\npublic class IPFilterMessageInspector : IDispatchMessageInspector\n{\n    private readonly string[] allowedIPs;\n\n    public IPFilterMessageInspector(string[] allowedIPs)\n    {\n        this.allowedIPs = allowedIPs;\n    }\n\n    public object AfterReceiveRequest(ref Message request, IClientChannel channel, InstanceContext instanceContext)\n    {\n        var remoteEndpoint = request.Properties[RemoteEndpointMessageProperty.Name] as RemoteEndpointMessageProperty;\n        if (remoteEndpoint != null && !IsAllowedIP(remoteEndpoint.Address))\n        {\n            throw new FaultException("Access denied.");\n        }\n        return null;\n    }\n\n    public void BeforeSendReply(ref Message reply, object correlationState) { }\n\n    private bool IsAllowedIP(string ipAddress)\n    {\n        foreach (var allowedIP in allowedIPs)\n        {\n            if (ipAddress == allowedIP)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n}