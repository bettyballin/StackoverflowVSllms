public void LoginUser(string username, string password)\n   {\n       // Validate user credentials\n       if (ValidateUser(username, password))\n       {\n           string userId = GetUserId(username);\n           string newSessionId = HttpContext.Current.Session.SessionID;\n\n           using (SqlConnection conn = new SqlConnection(connectionString))\n           {\n               conn.Open();\n               SqlCommand checkSessionCmd = new SqlCommand("SELECT SessionId FROM UserSessions WHERE UserId = @UserId", conn);\n               checkSessionCmd.Parameters.AddWithValue("@UserId", userId);\n               object existingSessionId = checkSessionCmd.ExecuteScalar();\n\n               if (existingSessionId != null)\n               {\n                   // Option 1: Prevent new login\n                   // return "User is already logged in.";\n\n                   // Option 2: Invalidate existing session\n                   InvalidateSession(existingSessionId.ToString());\n               }\n\n               // Update or insert the new session\n               SqlCommand upsertSessionCmd = new SqlCommand(\n                   "IF EXISTS (SELECT 1 FROM UserSessions WHERE UserId = @UserId) " +\n                   "UPDATE UserSessions SET SessionId = @SessionId, LastActivityDate = @LastActivityDate WHERE UserId = @UserId " +\n                   "ELSE " +\n                   "INSERT INTO UserSessions (UserId, SessionId, LastActivityDate) VALUES (@UserId, @SessionId, @LastActivityDate)", \n                   conn);\n               upsertSessionCmd.Parameters.AddWithValue("@UserId", userId);\n               upsertSessionCmd.Parameters.AddWithValue("@SessionId", newSessionId);\n               upsertSessionCmd.Parameters.AddWithValue("@LastActivityDate", DateTime.Now);\n               upsertSessionCmd.ExecuteNonQuery();\n           }\n\n           // Proceed with the login\n           FormsAuthentication.SetAuthCookie(username, false);\n       }\n   }\n\n   private void InvalidateSession(string sessionId)\n   {\n       // Logic to invalidate the session (e.g., remove from memory, update database, etc.)\n   }