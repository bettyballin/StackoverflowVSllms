// Controller\npublic class ProductController : Controller\n{\n    private readonly IProductService _productService;\n\n    public ProductController(IProductService productService)\n    {\n        _productService = productService;\n    }\n\n    public IActionResult Index()\n    {\n        var products = _productService.GetAllProducts();\n        return View(products);\n    }\n\n    // Other action methods\n}\n\n// Service interface\npublic interface IProductService\n{\n    IEnumerable<Product> GetAllProducts();\n    // Other service methods\n}\n\n// Service implementation\npublic class ProductService : IProductService\n{\n    private readonly IProductRepository _productRepository;\n\n    public ProductService(IProductRepository productRepository)\n    {\n        _productRepository = productRepository;\n    }\n\n    public IEnumerable<Product> GetAllProducts()\n    {\n        return _productRepository.GetAll();\n    }\n\n    // Other service methods\n}\n\n// Repository interface\npublic interface IProductRepository\n{\n    IEnumerable<Product> GetAll();\n    // Other repository methods\n}\n\n// Repository implementation\npublic class ProductRepository : IProductRepository\n{\n    private readonly ApplicationDbContext _context;\n\n    public ProductRepository(ApplicationDbContext context)\n    {\n        _context = context;\n    }\n\n    public IEnumerable<Product> GetAll()\n    {\n        return _context.Products.ToList();\n    }\n\n    // Other repository methods\n}