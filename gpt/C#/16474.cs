public interface IUnitOfWork : IDisposable\n{\n    IProductRepository Products { get; }\n    void Commit();\n}\n\npublic class UnitOfWork : IUnitOfWork\n{\n    private readonly DataContext _context;\n    private IProductRepository _productRepository;\n\n    public UnitOfWork(DataContext context)\n    {\n        _context = context;\n    }\n\n    public IProductRepository Products\n    {\n        get\n        {\n            return _productRepository ??= new ProductRepository(_context);\n        }\n    }\n\n    public void Commit()\n    {\n        _context.SubmitChanges();\n    }\n\n    public void Dispose()\n    {\n        _context.Dispose();\n    }\n}