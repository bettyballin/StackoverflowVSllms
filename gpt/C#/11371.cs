using System;\nusing System.Diagnostics;\nusing System.Management;\nusing System.ServiceProcess;\n\npublic partial class MyService : ServiceBase\n{\n    private ManagementEventWatcher processStartWatcher;\n\n    public MyService()\n    {\n        InitializeComponent();\n    }\n\n    protected override void OnStart(string[] args)\n    {\n        StartProcessWatcher();\n    }\n\n    protected override void OnStop()\n    {\n        StopProcessWatcher();\n    }\n\n    private void StartProcessWatcher()\n    {\n        string queryString = "SELECT * FROM Win32_ProcessStartTrace";\n        processStartWatcher = new ManagementEventWatcher(new WqlEventQuery(queryString));\n        processStartWatcher.EventArrived += new EventArrivedEventHandler(OnProcessStarted);\n        processStartWatcher.Start();\n    }\n\n    private void StopProcessWatcher()\n    {\n        if (processStartWatcher != null)\n        {\n            processStartWatcher.Stop();\n            processStartWatcher.EventArrived -= new EventArrivedEventHandler(OnProcessStarted);\n            processStartWatcher.Dispose();\n            processStartWatcher = null;\n        }\n    }\n\n    private void OnProcessStarted(object sender, EventArrivedEventArgs e)\n    {\n        string processName = e.NewEvent.Properties["ProcessName"].Value.ToString();\n        if (processName.Equals("YourGame.exe", StringComparison.OrdinalIgnoreCase))\n        {\n            var currentDay = DateTime.Now.DayOfWeek;\n            if (currentDay != DayOfWeek.Friday && currentDay != DayOfWeek.Saturday && currentDay != DayOfWeek.Sunday)\n            {\n                foreach (var process in Process.GetProcessesByName("YourGame"))\n                {\n                    process.Kill();\n                }\n            }\n        }\n    }\n}