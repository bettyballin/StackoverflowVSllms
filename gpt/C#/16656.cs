using System.Web;\nusing System.Web.Mvc;\nusing Moq;\nusing Xunit;\n\npublic class RememberUrlFilterTests\n{\n    [Fact]\n    public void OnActionExecuted_ShouldSaveCurrentUrlInSession()\n    {\n        // Arrange\n        var httpContextMock = new Mock<HttpContextBase>();\n        var sessionMock = new Mock<HttpSessionStateBase>();\n        var requestMock = new Mock<HttpRequestBase>();\n        var responseMock = new Mock<HttpResponseBase>();\n\n        httpContextMock.Setup(ctx => ctx.Session).Returns(sessionMock.Object);\n        httpContextMock.Setup(ctx => ctx.Request).Returns(requestMock.Object);\n        httpContextMock.Setup(ctx => ctx.Response).Returns(responseMock.Object);\n\n        var actionExecutedContext = new ActionExecutedContext\n        {\n            HttpContext = httpContextMock.Object,\n            RouteData = new System.Web.Routing.RouteData(),\n            ActionDescriptor = new Mock<ActionDescriptor>().Object\n        };\n\n        requestMock.Setup(req => req.Url).Returns(new Uri("http://test.com/current-url"));\n\n        var filter = new RememberUrlFilter();\n\n        // Act\n        filter.OnActionExecuted(actionExecutedContext);\n\n        // Assert\n        sessionMock.Verify(s => s["PreviousUrl"] = "http://test.com/current-url", Times.Once);\n    }\n}\n\npublic class RememberUrlFilter : ActionFilterAttribute\n{\n    public override void OnActionExecuted(ActionExecutedContext filterContext)\n    {\n        if (filterContext.HttpContext.Request.Url != null)\n        {\n            filterContext.HttpContext.Session["PreviousUrl"] = filterContext.HttpContext.Request.Url.ToString();\n        }\n    }\n}