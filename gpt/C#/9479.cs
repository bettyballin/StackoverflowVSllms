using System;\nusing System.Data.SqlClient;\nusing System.Xml;\nusing System.Xml.Schema;\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = "your_connection_string";\n        string schemaCollectionName = "YourSchemaCollectionName";\n\n        string xsdText = GetXmlSchemaFromDatabase(connectionString, schemaCollectionName);\n\n        XmlSchemaSet schemaSet = new XmlSchemaSet();\n        XmlReader schemaReader = XmlReader.Create(new System.IO.StringReader(xsdText));\n        schemaSet.Add(null, schemaReader);\n\n        XmlReaderSettings settings = new XmlReaderSettings();\n        settings.Schemas.Add(schemaSet);\n        settings.ValidationType = ValidationType.Schema;\n        settings.ValidationEventHandler += new ValidationEventHandler(ValidationEventHandler);\n\n        string xmlToValidate = "your_xml_data";\n\n        XmlReader reader = XmlReader.Create(new System.IO.StringReader(xmlToValidate), settings);\n        while (reader.Read()) { }\n\n        Console.WriteLine("XML is valid.");\n    }\n\n    static string GetXmlSchemaFromDatabase(string connectionString, string schemaCollectionName)\n    {\n        string xsdText = string.Empty;\n        using (SqlConnection conn = new SqlConnection(connectionString))\n        {\n            conn.Open();\n            using (SqlCommand cmd = new SqlCommand(@"\n                SELECT CAST(xsn.xml_component as XML) AS SchemaDefinition\n                FROM sys.xml_schema_collections xsc\n                INNER JOIN sys.xml_schema_namespaces xsn \n                ON xsc.xml_collection_id = xsn.xml_collection_id\n                WHERE xsc.name = @SchemaCollectionName", conn))\n            {\n                cmd.Parameters.AddWithValue("@SchemaCollectionName", schemaCollectionName);\n\n                using (SqlDataReader reader = cmd.ExecuteReader())\n                {\n                    if (reader.Read())\n                    {\n                        xsdText = reader["SchemaDefinition"].ToString();\n                    }\n                }\n            }\n        }\n        return xsdText;\n    }\n\n    static void ValidationEventHandler(object sender, ValidationEventArgs e)\n    {\n        if (e.Severity == XmlSeverityType.Error || e.Severity == XmlSeverityType.Warning)\n        {\n            Console.WriteLine("Validation error: " + e.Message);\n        }\n    }\n}