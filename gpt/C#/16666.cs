using System;\nusing System.IO;\nusing System.IO.Pipes;\nusing System.Text;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        if (args.Length > 0 && args[0] == "server")\n        {\n            await StartServer();\n        }\n        else\n        {\n            await StartClient();\n        }\n    }\n\n    static async Task StartServer()\n    {\n        var server = new NamedPipeServerStream("mypipe", PipeDirection.InOut, 1, PipeTransmissionMode.Byte, PipeOptions.Asynchronous);\n        Console.WriteLine("Server waiting for connection...");\n        await server.WaitForConnectionAsync();\n\n        using (StreamReader reader = new StreamReader(server, Encoding.UTF8))\n        {\n            string message = await reader.ReadLineAsync();\n            Console.WriteLine("Received from client: " + message);\n        }\n    }\n\n    static async Task StartClient()\n    {\n        var client = new NamedPipeClientStream(".", "mypipe", PipeDirection.Out, PipeOptions.Asynchronous);\n        await client.ConnectAsync();\n\n        using (StreamWriter writer = new StreamWriter(client, Encoding.UTF8))\n        {\n            await writer.WriteLineAsync("Hello from client!");\n            await writer.FlushAsync();\n        }\n    }\n}