using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class CryptoHelper\n{\n    private static readonly byte[] Key = Encoding.UTF8.GetBytes("YourEncryptionKey123"); // Use a secure key\n    private static readonly byte[] IV = Encoding.UTF8.GetBytes("YourIV1234567890"); // Use a secure IV\n\n    public static byte[] EncryptData(string plainText)\n    {\n        using (Aes aes = new AesManaged())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n                    return ms.ToArray();\n                }\n            }\n        }\n    }\n\n    public static string DecryptData(byte[] cipherText)\n    {\n        using (Aes aes = new AesManaged())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream(cipherText))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}