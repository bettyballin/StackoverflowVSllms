using System;\nusing System.Diagnostics;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var process = new Process\n        {\n            StartInfo = new ProcessStartInfo\n            {\n                FileName = "your_external_program.exe", // Replace with your external program\n                RedirectStandardOutput = true,\n                RedirectStandardError = true,\n                UseShellExecute = false,\n                CreateNoWindow = true\n            }\n        };\n\n        process.Start();\n\n        // Start reading output and error streams asynchronously\n        var outputTask = ReadStreamAsync(process.StandardOutput);\n        var errorTask = ReadStreamAsync(process.StandardError);\n\n        // Wait for the process to exit\n        await Task.Run(() => process.WaitForExit());\n\n        // Await until all output has been read\n        await Task.WhenAll(outputTask, errorTask);\n\n        // Indicate that the process has finished\n        Console.WriteLine("Process has finished.");\n    }\n\n    static async Task ReadStreamAsync(System.IO.StreamReader reader)\n    {\n        string line;\n        while ((line = await reader.ReadLineAsync()) != null)\n        {\n            Console.WriteLine(line);\n        }\n    }\n}