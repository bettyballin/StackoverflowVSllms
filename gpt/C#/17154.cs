using System;\nusing System.Diagnostics;\nusing System.Timers;\n\nclass Program\n{\n    private static Timer checkProcessTimer;\n    private const string processName = "yourProcessName"; // Change this to the name of the process you want to monitor\n\n    static void Main(string[] args)\n    {\n        SetTimer();\n        Console.WriteLine("Press [Enter] to exit the program.");\n        Console.ReadLine();\n        checkProcessTimer.Stop();\n        checkProcessTimer.Dispose();\n    }\n\n    private static void SetTimer()\n    {\n        checkProcessTimer = new Timer(10000); // Set the timer interval to 10 seconds (10000 milliseconds)\n        checkProcessTimer.Elapsed += OnTimedEvent;\n        checkProcessTimer.AutoReset = true;\n        checkProcessTimer.Enabled = true;\n    }\n\n    private static void OnTimedEvent(Object source, ElapsedEventArgs e)\n    {\n        if (IsProcessRunning(processName))\n        {\n            Console.WriteLine($"Process {processName} is running. Initializing the program...");\n            // Place your initialization code here\n        }\n        else\n        {\n            Console.WriteLine($"Process {processName} is not running.");\n        }\n    }\n\n    private static bool IsProcessRunning(string name)\n    {\n        Process[] processList = Process.GetProcessesByName(name);\n        return processList.Length > 0;\n    }\n}