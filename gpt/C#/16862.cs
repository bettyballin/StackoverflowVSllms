public class CustomAuthorizeAttribute : AuthorizeAttribute\n{\n    protected override bool AuthorizeCore(HttpContextBase httpContext)\n    {\n        if (!httpContext.User.Identity.IsAuthenticated)\n        {\n            return false;\n        }\n\n        var username = httpContext.User.Identity.Name;\n        var hasPermission = CheckUserPermission(username);\n\n        return hasPermission;\n    }\n\n    private bool CheckUserPermission(string username)\n    {\n        // Implement your azman-like permission check here\n        // Return true if the user has permission, otherwise false\n        return PermissionService.UserHasPermission(username, "RequiredPermission");\n    }\n\n    protected override void HandleUnauthorizedRequest(AuthorizationContext filterContext)\n    {\n        filterContext.Result = new RedirectResult("/Account/Login");\n    }\n}\n\n// Usage\n[CustomAuthorize]\npublic ActionResult SecurePage()\n{\n    return View();\n}