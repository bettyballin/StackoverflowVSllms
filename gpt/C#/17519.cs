// Assuming you have a SqlDataAdapter instance named adapter and a SqlConnection instance named connection\n\n// UpdateCommand\nadapter.UpdateCommand = new SqlCommand(\n    "UPDATE Table1 SET CharField1 = @CharField1, CharField2 = @CharField2 WHERE IntForeignKeyField1 = @IntForeignKeyField1", \n    connection);\nadapter.UpdateCommand.Parameters.Add("@CharField1", SqlDbType.VarChar, 50, "CharField1");\nadapter.UpdateCommand.Parameters.Add("@CharField2", SqlDbType.VarChar, 50, "CharField2");\nadapter.UpdateCommand.Parameters.Add("@IntForeignKeyField1", SqlDbType.Int, 0, "IntForeignKeyField1");\n\n// DeleteCommand\nadapter.DeleteCommand = new SqlCommand(\n    "DELETE FROM Table1 WHERE IntForeignKeyField1 = @IntForeignKeyField1", \n    connection);\nadapter.DeleteCommand.Parameters.Add("@IntForeignKeyField1", SqlDbType.Int, 0, "IntForeignKeyField1");\n\n// InsertCommand\nadapter.InsertCommand = new SqlCommand(\n    "INSERT INTO Table1 (CharField1, CharField2, IntForeignKeyField1) VALUES (@CharField1, @CharField2, @IntForeignKeyField1)", \n    connection);\nadapter.InsertCommand.Parameters.Add("@CharField1", SqlDbType.VarChar, 50, "CharField1");\nadapter.InsertCommand.Parameters.Add("@CharField2", SqlDbType.VarChar, 50, "CharField2");\nadapter.InsertCommand.Parameters.Add("@IntForeignKeyField1", SqlDbType.Int, 0, "IntForeignKeyField1");