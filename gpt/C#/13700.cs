using Antlr4.Runtime;\nusing System;\nusing System.IO;\n\npublic class SqlParser\n{\n    public static void Parse(string sql)\n    {\n        var inputStream = new AntlrInputStream(sql);\n        var lexer = new TSqlLexer(inputStream);\n        var commonTokenStream = new CommonTokenStream(lexer);\n        var parser = new TSqlParser(commonTokenStream);\n\n        // Parse the query using the start rule (e.g., tsql_file)\n        var context = parser.tsql_file();\n\n        // Implement a visitor or listener to extract table and column information.\n        var visitor = new SqlVisitor();\n        visitor.Visit(context);\n    }\n}\n\npublic class SqlVisitor : TSqlParserBaseVisitor<object>\n{\n    public override object VisitSelect_element(TSqlParser.Select_elementContext context)\n    {\n        var columnName = context.GetText();\n        // Logic to determine the source table and column\n        Console.WriteLine($"Column: {columnName}");\n        return base.VisitSelect_element(context);\n    }\n\n    // Override other visit methods as needed to extract table and column info\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        string sql = @"\n            select b.FirstName As Name, c.Address \n            from BusinessOwner b\n            left join ContactLocation c on b.ID = c.OwnerID\n        ";\n        SqlParser.Parse(sql);\n    }\n}