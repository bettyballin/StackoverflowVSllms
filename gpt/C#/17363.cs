using System;\nusing System.Collections.Generic;\nusing System.Runtime.InteropServices;\n\npublic class CredentialManager\n{\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]\n    public static extern bool CredEnumerate(string filter, int flag, out int count, out IntPtr pCredentials);\n\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]\n    public static extern void CredFree([In] IntPtr buffer);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct CREDENTIAL\n    {\n        public uint Flags;\n        public uint Type;\n        public string TargetName;\n        public string Comment;\n        public System.Runtime.InteropServices.ComTypes.FILETIME LastWritten;\n        public uint CredentialBlobSize;\n        public IntPtr CredentialBlob;\n        public uint Persist;\n        public uint AttributeCount;\n        public IntPtr Attributes;\n        public string TargetAlias;\n        public string UserName;\n    }\n\n    public static List<CREDENTIAL> GetCredentials()\n    {\n        int count;\n        IntPtr pCredentials;\n        List<CREDENTIAL> credentialsList = new List<CREDENTIAL>();\n\n        bool ret = CredEnumerate(null, 0, out count, out pCredentials);\n        if (ret)\n        {\n            try\n            {\n                for (int i = 0; i < count; i++)\n                {\n                    IntPtr credPtr = Marshal.ReadIntPtr(pCredentials, i * IntPtr.Size);\n                    CREDENTIAL cred = (CREDENTIAL)Marshal.PtrToStructure(credPtr, typeof(CREDENTIAL));\n                    credentialsList.Add(cred);\n                }\n            }\n            finally\n            {\n                CredFree(pCredentials);\n            }\n        }\n        else\n        {\n            int lastError = Marshal.GetLastWin32Error();\n            throw new System.ComponentModel.Win32Exception(lastError);\n        }\n\n        return credentialsList;\n    }\n\n    public static void Main()\n    {\n        try\n        {\n            List<CREDENTIAL> credentials = GetCredentials();\n            foreach (var cred in credentials)\n            {\n                Console.WriteLine("TargetName: " + cred.TargetName);\n                Console.WriteLine("UserName: " + cred.UserName);\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n}