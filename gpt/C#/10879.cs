using System;\nusing TestStack.White;\nusing TestStack.White.UIItems;\nusing TestStack.White.UIItems.Finders;\nusing TestStack.White.UIItems.WindowItems;\nusing TestStack.White.UIItems.WindowStripControls;\nusing TestStack.White.UIItems.MenuItems;\nusing TestStack.White.UIItems.TabItems;\nusing TestStack.White.InputDevices;\nusing TestStack.White.WindowsAPI;\nusing TestStack.White.Factory;\nusing NUnit.Framework;\n\nnamespace WindowsFormsAutomation\n{\n    [TestFixture]\n    public class WinFormsAutomationTests\n    {\n        private Application _application;\n        private Window _mainWindow;\n\n        [SetUp]\n        public void Setup()\n        {\n            string appPath = @"path\to\your\winforms\application.exe";\n            _application = Application.Launch(appPath);\n            _mainWindow = _application.GetWindow("Main Window Title", InitializeOption.NoCache);\n        }\n\n        [Test]\n        public void TestButtonClick()\n        {\n            Button button = _mainWindow.Get<Button>(SearchCriteria.ByText("Button Text"));\n            button.Click();\n\n            // Assert expected outcome after button click\n            Label resultLabel = _mainWindow.Get<Label>(SearchCriteria.ByAutomationId("ResultLabelId"));\n            Assert.AreEqual("Expected Result", resultLabel.Text);\n        }\n\n        [TearDown]\n        public void TearDown()\n        {\n            _application.Close();\n        }\n    }\n}