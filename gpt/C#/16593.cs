using System;\nusing System.Collections.Generic;\nusing System.Text.RegularExpressions;\n\npublic class Program\n{\n    public static void Main()\n    {\n        string sql = @"Update Employees\n                       Set FirstName = 'Jim', [LastName] = 'Smith', CodeNum = codes.Num\n                       From Employees as em\n                       Join CodeNumbers as codes on codes.EmployeeID = em.EmployeeID";\n\n        List<string> columns = ExtractUpdateColumns(sql);\n\n        foreach (var column in columns)\n        {\n            Console.WriteLine(column);\n        }\n    }\n\n    public static List<string> ExtractUpdateColumns(string sql)\n    {\n        List<string> columns = new List<string>();\n\n        string pattern = @"Set\s+((?:\[[^\]]+\]|[^\[,])+)\s*=\s*[^,]+(?:,\s*(\[[^\]]+\]|[^\[,]+)\s*=\s*[^,]+)*";\n        Match match = Regex.Match(sql, pattern, RegexOptions.IgnoreCase);\n\n        if (match.Success)\n        {\n            string[] assignments = match.Value.Substring(4).Split(',');\n\n            foreach (var assignment in assignments)\n            {\n                string columnPattern = @"(\[[^\]]+\]|[^\[]+)\s*=";\n                Match columnMatch = Regex.Match(assignment, columnPattern);\n                if (columnMatch.Success)\n                {\n                    string column = columnMatch.Groups[1].Value.Trim();\n                    columns.Add(column.Trim('[', ']'));\n                }\n            }\n        }\n\n        return columns;\n    }\n}