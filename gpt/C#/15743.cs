List<File> files = new List<File>();\nSqlConnection active_connection = new SqlConnection(m_connection_string);\nSqlCommand cmd = new SqlCommand();\nSqlDataReader dr = null;\n\ntry\n{\n    active_connection.Open();\n    cmd.Connection = active_connection;\n    cmd.CommandType = CommandType.StoredProcedure;\n    cmd.CommandText = "dalsp_Select_Organization_Files";\n\n    SqlParameter param;\n\n    param = cmd.Parameters.Add("@p_organization_guid", SqlDbType.UniqueIdentifier);\n    param.Value = new Guid(organization_guid);\n\n    param = cmd.Parameters.Add("@p_file_type", SqlDbType.NVarChar, 50);\n    param.Value = file_type;\n\n    dr = cmd.ExecuteReader(CommandBehavior.CloseConnection);\n\n    if (dr.HasRows)                    \n    {                    \n        while (dr.Read())\n        {\n            File file = new File();\n            file.OrganizationGuid = dr["OrganizationGuid"] != DBNull.Value ? dr["OrganizationGuid"].ToString() : string.Empty;\n            file.FileGuid = dr["FileGuid"] != DBNull.Value ? dr["FileGuid"].ToString() : string.Empty;\n            file.FileLocation = dr["FileLocation"] != DBNull.Value ? dr["FileLocation"].ToString() : string.Empty;\n            file.FileName = dr["FileName"] != DBNull.Value ? dr["FileName"].ToString() : string.Empty;\n            file.FileType = dr["FileType"] != DBNull.Value ? (FileTypeEnum)Enum.Parse(typeof(FileTypeEnum), dr["FileType"].ToString()) : default(FileTypeEnum);\n            file.FileExtension = dr["FileExtension"] != DBNull.Value ? dr["FileExtension"].ToString() : string.Empty;\n            file.FileDescription = dr["FileDescription"] != DBNull.Value ? dr["FileDescription"].ToString() : string.Empty;\n            file.ThumbnailPath = dr["ThumbnailPath"] != DBNull.Value ? dr["ThumbnailPath"].ToString() : string.Empty;\n\n            // Debugging output\n            Console.WriteLine($"Read file: {file.FileGuid}, {file.FileName}");\n\n            files.Add(file);\n        }       \n    }\n    dr.Close();\n    dr = null;\n\n    active_connection.Close();\n    cmd = null;\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($"Error: {ex.Message}");\n    throw;\n}\nfinally\n{\n    if (active_connection.State != ConnectionState.Closed)\n    {\n        active_connection.Close();\n        active_connection.Dispose();\n    }\n}\n\nreturn files;