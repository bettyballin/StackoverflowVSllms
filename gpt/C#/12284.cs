using System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.IO;\n\npublic void CaptureCanvasArea(Canvas canvas, Rect captureArea, string filePath, string format)\n{\n    // Create a RenderTargetBitmap\n    RenderTargetBitmap rtb = new RenderTargetBitmap((int)captureArea.Width, (int)captureArea.Height, 96, 96, PixelFormats.Pbgra32);\n    \n    // Create a VisualBrush of the canvas\n    VisualBrush vb = new VisualBrush(canvas);\n    DrawingVisual dv = new DrawingVisual();\n    \n    using (DrawingContext dc = dv.RenderOpen())\n    {\n        dc.DrawRectangle(vb, null, new Rect(new Point(-captureArea.X, -captureArea.Y), new Size(canvas.ActualWidth, canvas.ActualHeight)));\n    }\n    \n    // Render the visual to the RenderTargetBitmap\n    rtb.Render(dv);\n    \n    // Choose an appropriate encoder\n    BitmapEncoder encoder;\n    if (format.Equals("bmp", StringComparison.OrdinalIgnoreCase))\n    {\n        encoder = new BmpBitmapEncoder();\n    }\n    else if (format.Equals("gif", StringComparison.OrdinalIgnoreCase))\n    {\n        encoder = new GifBitmapEncoder();\n    }\n    else\n    {\n        throw new ArgumentException("Unsupported format");\n    }\n    \n    encoder.Frames.Add(BitmapFrame.Create(rtb));\n    \n    // Save to file\n    using (FileStream fs = new FileStream(filePath, FileMode.Create, FileAccess.Write))\n    {\n        encoder.Save(fs);\n    }\n}