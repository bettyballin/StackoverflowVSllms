using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("kernel32.dll")]\n    private static extern bool AllocConsole();\n\n    [DllImport("kernel32.dll")]\n    private static extern bool FreeConsole();\n\n    static void Main(string[] args)\n    {\n        bool debugMode = false;\n\n        // Check for the debug argument\n        foreach (var arg in args)\n        {\n            if (arg.Equals("-debug", StringComparison.OrdinalIgnoreCase))\n            {\n                debugMode = true;\n                break;\n            }\n        }\n\n        if (debugMode)\n        {\n            // Attach a console window\n            AllocConsole();\n            Console.WriteLine("Debug mode activated. Console window attached.");\n\n            // Redirect stdout and stderr to the console\n            Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = true });\n            Console.SetError(new System.IO.StreamWriter(Console.OpenStandardError()) { AutoFlush = true });\n\n            // Handle console window close event\n            AppDomain.CurrentDomain.ProcessExit += (s, e) => FreeConsole();\n        }\n\n        // Your application code here\n\n        if (debugMode)\n        {\n            Console.WriteLine("Press any key to exit...");\n            Console.ReadKey();\n        }\n    }\n}