using System;\nusing System.Management;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string remoteComputerName = "RemoteComputerName";\n        string username = "AdminUsername";\n        string password = "AdminPassword";\n        string shareName = "ShareName";\n        string sharePath = @"C:\PathToShare";\n        string description = "This is a network share";\n\n        ConnectionOptions options = new ConnectionOptions\n        {\n            Username = username,\n            Password = password,\n            Impersonation = ImpersonationLevel.Impersonate,\n            Authentication = AuthenticationLevel.PacketPrivacy\n        };\n\n        ManagementScope scope = new ManagementScope($@"\\{remoteComputerName}\root\cimv2", options);\n\n        try\n        {\n            scope.Connect();\n\n            ManagementClass managementClass = new ManagementClass(scope, new ManagementPath("Win32_Share"), null);\n\n            ManagementBaseObject inParams = managementClass.GetMethodParameters("Create");\n            inParams["Description"] = description;\n            inParams["Name"] = shareName;\n            inParams["Path"] = sharePath;\n            inParams["Type"] = 0x0; // Disk Drive\n\n            ManagementBaseObject outParams = managementClass.InvokeMethod("Create", inParams, null);\n\n            uint returnValue = (uint)outParams.Properties["ReturnValue"].Value;\n            if (returnValue == 0)\n            {\n                Console.WriteLine("Share created successfully.");\n            }\n            else\n            {\n                Console.WriteLine($"Failed to create share. Error code: {returnValue}");\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n}