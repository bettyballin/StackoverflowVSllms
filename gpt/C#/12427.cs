public class WindsorContainerSetup\n{\n    public static IWindsorContainer Initialize()\n    {\n        var container = new WindsorContainer();\n        \n        // Register the handler selector\n        container.Kernel.AddHandlerSelector(new RailsEngineContextHandlerSelector());\n\n        // Register the IRailsEngineContext\n        container.Register(Component.For<IRailsEngineContext>()\n                                    .UsingFactoryMethod(() => MyRailsEngineContextFactoryMethod())\n                                    .LifestyleTransient());\n\n        // Register other components\n        // container.Register(Component.For<MyService>().LifestyleTransient());\n\n        return container;\n    }\n\n    // Factory method to resolve the current IRailsEngineContext\n    private static IRailsEngineContext MyRailsEngineContextFactoryMethod()\n    {\n        // Logic to retrieve the current IRailsEngineContext\n        return (IRailsEngineContext)HttpContext.Current.Items["CurrentRailsEngineContext"];\n    }\n}