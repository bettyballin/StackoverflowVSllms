using System;\nusing System.Data;\nusing Oracle.ManagedDataAccess.Client;\n\nclass Program\n{\n    static string connectionString = "<your connection string>";\n\n    static void Main(string[] args)\n    {\n        string textBefore = "Τι κάνεις;";\n\n        DeleteAll();\n        SaveToDatabase(textBefore);\n        string textAfter = GetFromDatabase();\n\n        string beforeData = String.Format("Before: {0}, ({1})", textBefore, ToHex(textBefore));\n        string afterData = String.Format("After: {0}, ({1})", textAfter, ToHex(textAfter));\n\n        Console.WriteLine(beforeData);\n        Console.WriteLine(afterData);\n\n        Console.ReadLine();\n    }\n\n    static void DeleteAll()\n    {\n        using (var oraConnection = new OracleConnection(connectionString))\n        {\n            oraConnection.Open();\n            var command = oraConnection.CreateCommand();\n\n            command.CommandText = "DELETE FROM UNICODEDATA";\n            command.ExecuteNonQuery();\n        }\n    }\n\n    static void SaveToDatabase(string stringToSave)\n    {\n        using (var oraConnection = new OracleConnection(connectionString))\n        {\n            oraConnection.Open();\n            var command = oraConnection.CreateCommand();\n\n            command.CommandText = "INSERT INTO UNICODEDATA (ID, UNICODESTRING) VALUES (11, :UnicodeString)";\n            command.Parameters.Add(new OracleParameter(":UnicodeString", OracleDbType.NVarchar2)).Value = stringToSave;\n            command.ExecuteNonQuery();\n        }\n    }\n\n    static string GetFromDatabase()\n    {\n        using (var oraConnection = new OracleConnection(connectionString))\n        {\n            oraConnection.Open();\n\n            var command = oraConnection.CreateCommand();\n            command.CommandText = "SELECT UNICODESTRING FROM UNICODEDATA";\n            var erpReader = command.ExecuteReader();\n\n            string s = String.Empty;\n            while (erpReader.Read())\n            {\n                string text = erpReader.GetString(0);\n                s += text + ", ";\n            }\n\n            return s.TrimEnd(',', ' ');\n        }\n    }\n\n    static string ToHex(string input)\n    {\n        string bytes = String.Empty;\n        foreach (var c in input)\n            bytes += ((int)c).ToString("X4") + " ";\n\n        return bytes;\n    }\n}