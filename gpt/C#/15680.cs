using System;\nusing System.IO;\nusing System.Net.Sockets;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Security.Authentication;\nusing System.Net.Security;\n\nclass SslTcpClient\n{\n    public static void RunClient(string serverName)\n    {\n        TcpClient client = new TcpClient(serverName, 443);\n        SslStream sslStream = new SslStream(client.GetStream(), false, new RemoteCertificateValidationCallback(ValidateServerCertificate), null);\n\n        try\n        {\n            sslStream.AuthenticateAsClient(serverName);\n            // Communication with the server goes here.\n        }\n        catch (AuthenticationException e)\n        {\n            Console.WriteLine("Exception: {0}", e.Message);\n            if (e.InnerException != null)\n            {\n                Console.WriteLine("Inner exception: {0}", e.InnerException.Message);\n            }\n            Console.WriteLine("Authentication failed - closing the connection.");\n            client.Close();\n            return;\n        }\n    }\n\n    public static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\n    {\n        if (sslPolicyErrors == SslPolicyErrors.None)\n            return true;\n\n        Console.WriteLine("Certificate error: {0}", sslPolicyErrors);\n        return false;\n    }\n}