using System;\nusing System.Reflection;\nusing Castle.Components.Validator;\n\npublic static class ValidatorHelper\n{\n    public static object[] GetCustomAttributesFromOriginalType(object proxy, Type attributeType)\n    {\n        // Get the actual type of the proxy\n        Type actualType = NHibernateProxyHelper.GetClassWithoutInitializingProxy(proxy);\n        \n        // Iterate over the properties of the actual type\n        foreach (PropertyInfo property in actualType.GetProperties())\n        {\n            // Fetch the custom attributes from the property\n            object[] attributes = property.GetCustomAttributes(attributeType, true);\n            if (attributes.Length > 0)\n            {\n                return attributes;\n            }\n        }\n        return new object[0];\n    }\n}