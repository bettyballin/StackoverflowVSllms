public class ImageHandler : IHttpHandler\n     {\n         public void ProcessRequest(HttpContext context)\n         {\n             var token = context.Request.QueryString["token"];\n             var secretKey = "your_secret_key";\n\n             if (!ValidateToken(token, secretKey))\n             {\n                 context.Response.StatusCode = 403;\n                 return;\n             }\n\n             var filePath = context.Server.MapPath("~/images/" + context.Request.QueryString["file"]);\n             if (File.Exists(filePath))\n             {\n                 context.Response.ContentType = "image/jpeg"; // Set appropriate content type\n                 context.Response.WriteFile(filePath);\n             }\n             else\n             {\n                 context.Response.StatusCode = 404;\n             }\n         }\n\n         public bool IsReusable => false;\n\n         private bool ValidateToken(string token, string secretKey)\n         {\n             var parts = token.Split(':');\n             if (parts.Length != 2) return false;\n\n             var hmac = new System.Security.Cryptography.HMACSHA256(System.Text.Encoding.UTF8.GetBytes(secretKey));\n             var expectedSignature = Convert.ToBase64String(hmac.ComputeHash(System.Text.Encoding.UTF8.GetBytes(parts[0])));\n\n             return expectedSignature == parts[1];\n         }\n     }