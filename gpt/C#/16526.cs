using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form, IMultiLanguage\n{\n    private CancellationTokenSource cts;\n\n    // This method is subscribed to the event of pressing the 'Abort' button\n    private void StopCurrentAnalisis()\n    {\n        if (cts != null)\n        {\n            cts.Cancel();\n            MessageBox.Show("Analisis has been cancelled by user", "Analisis Interrupted", MessageBoxButtons.OK, MessageBoxIcon.Stop);\n            CerrarNowLoadingForm();\n        }\n    }\n\n    //..\n}\n\npublic class AnalisisManager : IAnalisisManagerController\n{\n    private Thread analisisThread;\n    public Thread AnalisisThread { get { return this.analisisThread; } }\n\n    public void MakePadrobAnalisis(TipoAnalisis tipoAnalisis, Dictionary<string, Dictionary<int, double>> parametros, CancellationToken token)\n    {\n        object[] arregloParams = new object[] { tipoAnalisis, parametros, token };\n        analisisThread = new Thread(new ParameterizedThreadStart(MakeAnalisisInOtherThread));\n        analisisThread.Start(arregloParams);\n    }\n\n    private void MakeAnalisisInOtherThread(object o)\n    {\n        object[] arregloParams = o as object[];\n        TipoAnalisis tipoAnalisis = (TipoAnalisis)arregloParams[0];\n        Dictionary<string, Dictionary<int, double>> parametros = arregloParams[1] as Dictionary<string, Dictionary<int, double>>;\n        CancellationToken token = (CancellationToken)arregloParams[2];\n\n        // This launches an event telling the GUI the unstable analisis has started.\n        // The method that makes the 'Abort' button to appear on the GUI is subscribed to this event\n        StartAnalisis();\n\n        // Check for cancellation\n        if (token.IsCancellationRequested)\n        {\n            return;\n        }\n\n        // The Thread executes DLL functions according to tipoAnalisis, for example:\n        switch (tipoAnalisis)\n        {\n            case TipoAnalisis.InvKinematicsMinTorque:\n                if (!token.IsCancellationRequested)\n                {\n                    WrapperPadirob.InverseKinematicsMinTorqueConfigAnalisis();\n                }\n                break;\n            //..\n        }\n\n        // Check for cancellation regularly within your long-running operations\n        if (token.IsCancellationRequested)\n        {\n            // Perform any necessary cleanup here\n            return;\n        }\n    }\n}