using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace MyNameSpace\n{\n    public class RSAcrypt\n    {\n        private string _encryptedData;\n        private string _decryptedData;\n\n        public string EncryptedData\n        {\n            get { return _encryptedData; }\n            set { _encryptedData = value; }\n        }\n\n        public string DecryptedData\n        {\n            get { return _decryptedData; }\n            set { _decryptedData = value; }\n        }\n\n        public RSAcrypt()\n        {\n        }\n\n        public RSAcrypt(string CryptAction, string StringToCrypt)\n        {\n            RSACryptoServiceProvider thisRSACryptoServiceProvider = new RSACryptoServiceProvider();\n            byte[] _stringToCrypt = Encoding.UTF8.GetBytes(StringToCrypt);\n\n            switch (CryptAction)\n            {\n                case "Encrypt":\n                    byte[] encryptedData = Encrypt(_stringToCrypt, thisRSACryptoServiceProvider.ExportParameters(false));\n                    _encryptedData = Convert.ToBase64String(encryptedData);\n                    break;\n\n                case "Decrypt":\n                    byte[] encryptedBytes = Convert.FromBase64String(StringToCrypt);\n                    byte[] decryptedData = Decrypt(encryptedBytes, thisRSACryptoServiceProvider.ExportParameters(true));\n                    _decryptedData = Encoding.UTF8.GetString(decryptedData);\n                    break;\n\n                default:\n                    throw new ArgumentException("Invalid CryptAction. Use 'Encrypt' or 'Decrypt'.");\n            }\n        }\n\n        private static byte[] Encrypt(byte[] DataToEncrypt, RSAParameters keyInfo)\n        {\n            using (RSACryptoServiceProvider RSA = new RSACryptoServiceProvider())\n            {\n                RSA.ImportParameters(keyInfo);\n                return RSA.Encrypt(DataToEncrypt, false);\n            }\n        }\n\n        private static byte[] Decrypt(byte[] DataToDecrypt, RSAParameters keyInfo)\n        {\n            using (RSACryptoServiceProvider RSA = new RSACryptoServiceProvider())\n            {\n                RSA.ImportParameters(keyInfo);\n                return RSA.Decrypt(DataToDecrypt, false);\n            }\n        }\n    }\n}