using System;\nusing System.Reflection;\n\npublic class YourFixture\n{\n    private object _providerInstance;\n\n    public void InitProviderFromDll(string className, string dllName)\n    {\n        try\n        {\n            // Load the assembly from the specified DLL file\n            Assembly assembly = Assembly.LoadFrom(dllName);\n\n            // Get the type of the class from the assembly\n            Type type = assembly.GetType(className);\n\n            if (type == null)\n            {\n                throw new InvalidOperationException($"Class {className} not found in DLL {dllName}.");\n            }\n\n            // Create an instance of the class\n            _providerInstance = Activator.CreateInstance(type);\n        }\n        catch (Exception ex)\n        {\n            // Handle exceptions (e.g., log the error)\n            throw new InvalidOperationException($"Error loading class {className} from DLL {dllName}: {ex.Message}", ex);\n        }\n    }\n\n    // Other fixture methods that use _providerInstance\n}