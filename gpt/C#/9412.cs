using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass AESExample\n{\n    static byte[] encryptStringToBytes_AES(string plainText, byte[] Key, byte[] IV)\n    {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException(nameof(plainText));\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException(nameof(Key));\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException(nameof(IV));\n\n        using (var aesAlg = new RijndaelManaged { Key = Key, IV = IV })\n        {\n            var encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n            using (var msEncrypt = new MemoryStream())\n            {\n                using (var csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (var swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                }\n                return msEncrypt.ToArray();\n            }\n        }\n    }\n\n    static void Main()\n    {\n        string plainText = "Here is some data to encrypt!";\n\n        // Example for AES-256\n        string keyString = "0123456789abcdef0123456789abcdef"; // 32 chars for 256 bits\n        string ivString = "abcdef9876543210"; // 16 chars for 128 bits\n\n        byte[] key = Encoding.ASCII.GetBytes(keyString);\n        byte[] iv = Encoding.ASCII.GetBytes(ivString);\n\n        byte[] encrypted = encryptStringToBytes_AES(plainText, key, iv);\n        Console.WriteLine("Encrypted data: " + Convert.ToBase64String(encrypted));\n    }\n}