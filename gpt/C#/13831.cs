using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\npublic class PeerToPeer\n{\n    private const int Port = 11000;\n    private UdpClient udpClient;\n    private IPEndPoint remoteEndPoint;\n\n    public PeerToPeer()\n    {\n        udpClient = new UdpClient(Port);\n        remoteEndPoint = new IPEndPoint(IPAddress.Broadcast, Port);\n    }\n\n    public void StartListening()\n    {\n        Thread listenerThread = new Thread(new ThreadStart(Listen));\n        listenerThread.IsBackground = true;\n        listenerThread.Start();\n    }\n\n    private void Listen()\n    {\n        IPEndPoint groupEP = new IPEndPoint(IPAddress.Any, Port);\n        try\n        {\n            while (true)\n            {\n                byte[] bytes = udpClient.Receive(ref groupEP);\n                Console.WriteLine($"Received broadcast from {groupEP} : {Encoding.ASCII.GetString(bytes, 0, bytes.Length)}");\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.ToString());\n        }\n    }\n\n    public void SendMessage(string message)\n    {\n        byte[] sendBytes = Encoding.ASCII.GetBytes(message);\n        udpClient.Send(sendBytes, sendBytes.Length, remoteEndPoint);\n    }\n\n    public static void Main(string[] args)\n    {\n        PeerToPeer peer = new PeerToPeer();\n        peer.StartListening();\n\n        while (true)\n        {\n            string message = Console.ReadLine();\n            peer.SendMessage(message);\n        }\n    }\n}