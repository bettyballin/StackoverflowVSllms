using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Doctor\n{\n    public string OfficeName { get; set; }\n    public string DoctorName { get; set; }\n}\n\npublic class OfficeWithDoctors\n{\n    public string OfficeName { get; set; }\n    public List<string> DoctorNames { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        var doctors = new List<Doctor>\n        {\n            new Doctor { OfficeName = "Office1", DoctorName = "Doctor A" },\n            new Doctor { OfficeName = "Office1", DoctorName = "Doctor B" },\n            new Doctor { OfficeName = "Office2", DoctorName = "Doctor C" },\n        };\n\n        var aggregatedData = doctors\n            .GroupBy(d => d.OfficeName)\n            .Select(g => new OfficeWithDoctors\n            {\n                OfficeName = g.Key,\n                DoctorNames = g.Select(d => d.DoctorName).ToList()\n            })\n            .ToList();\n\n        // Bind aggregatedData to your repeater control\n        // repeaterControl.DataSource = aggregatedData;\n        // repeaterControl.DataBind();\n        \n        // For demonstration purposes, print the aggregated data\n        foreach (var office in aggregatedData)\n        {\n            Console.WriteLine($"Office: {office.OfficeName}");\n            Console.WriteLine("Doctors: " + string.Join(", ", office.DoctorNames));\n        }\n    }\n}