using System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Threading;\nusing System.Windows.Forms;\n\npublic class ProcessOutputReader\n{\n    private Process p1;\n    private TextBox richTextBox1; // Assuming this is your output TextBox\n\n    public void StartProcess(string basepath, TextBox outputTextBox)\n    {\n        this.richTextBox1 = outputTextBox;\n\n        p1 = new Process();\n        p1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;\n        p1.StartInfo.CreateNoWindow = true;\n        p1.StartInfo.UseShellExecute = false;\n        p1.StartInfo.FileName = Path.Combine(basepath, "abc.exe");\n        p1.StartInfo.Arguments = "/pn abc.exe /f \"temp1.txt\"";\n        p1.StartInfo.RedirectStandardError = true;\n        p1.StartInfo.RedirectStandardInput = true;\n        p1.StartInfo.RedirectStandardOutput = true;\n        p1.Start();\n\n        Thread outputReaderThread = new Thread(ReadOutput);\n        outputReaderThread.Start();\n    }\n\n    private void ReadOutput()\n    {\n        string line;\n        while ((line = p1.StandardOutput.ReadLine()) != null)\n        {\n            UpdateOutput(line);\n        }\n    }\n\n    private void UpdateOutput(string text)\n    {\n        if (richTextBox1.InvokeRequired)\n        {\n            richTextBox1.Invoke(new Action<string>(UpdateOutput), text);\n        }\n        else\n        {\n            richTextBox1.AppendText(text + Environment.NewLine);\n        }\n    }\n}