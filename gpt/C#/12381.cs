using System.Windows;\nusing System.Windows.Media;\nusing System.Windows.Input;\n\npublic class TextHitTesting\n{\n    private FormattedText _formattedText;\n    private Geometry _textGeometry;\n\n    public TextHitTesting(string text, Typeface typeface, double fontSize, Brush brush)\n    {\n        _formattedText = new FormattedText(\n            text,\n            System.Globalization.CultureInfo.CurrentCulture,\n            FlowDirection.LeftToRight,\n            typeface,\n            fontSize,\n            brush,\n            VisualTreeHelper.GetDpi(new Visual()).PixelsPerDip);\n\n        _textGeometry = _formattedText.BuildGeometry(new Point(0, 0));\n    }\n\n    public int HitTest(Point point)\n    {\n        if (_textGeometry.FillContains(point))\n        {\n            double x = 0;\n            for (int i = 0; i < _formattedText.Text.Length; i++)\n            {\n                double charWidth = _formattedText.GetDistanceFromCharacterHit(new CharacterHit(i));\n                if (point.X < x + charWidth)\n                {\n                    return i;\n                }\n                x += charWidth;\n            }\n        }\n        return -1; // No hit\n    }\n}\n\n// Usage\npublic partial class MainWindow : Window\n{\n    private TextHitTesting _textHitTesting;\n\n    public MainWindow()\n    {\n        InitializeComponent();\n        _textHitTesting = new TextHitTesting("Hello, World!", new Typeface("Arial"), 16, Brushes.Black);\n    }\n\n    private void Canvas_MouseDown(object sender, MouseButtonEventArgs e)\n    {\n        Point clickPoint = e.GetPosition(MyCanvas);\n\n        int hitIndex = _textHitTesting.HitTest(clickPoint);\n\n        if (hitIndex != -1)\n        {\n            MessageBox.Show($"Character at index {hitIndex} was hit.");\n        }\n        else\n        {\n            MessageBox.Show("No hit detected.");\n        }\n    }\n}