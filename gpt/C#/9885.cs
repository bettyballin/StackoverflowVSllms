using System;\nusing System.IO;\nusing System.Net;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class Program\n{\n    public static void Main()\n    {\n        // Path to the certificate file\n        string certFilePath = "C:\\mycert.cer";\n        X509Certificate cert;\n\n        // Open the file with shared read access\n        using (FileStream fs = new FileStream(certFilePath, FileMode.Open, FileAccess.Read, FileShare.Read))\n        {\n            cert = new X509Certificate(fs);\n        }\n\n        // Handle any certificate errors on the certificate from the server.\n        ServicePointManager.ServerCertificateValidationCallback = new System.Net.Security.RemoteCertificateValidationCallback((sender, certificate, chain, sslPolicyErrors) => true);\n\n        // You must change the URL to point to your web server.\n        HttpWebRequest request = (HttpWebRequest)WebRequest.Create("https://YourServer/sample.asp");\n        request.ClientCertificates.Add(cert);\n        request.UserAgent = "Client Cert Sample";\n        request.Method = "GET";\n        \n        using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n        {\n            // Print the response headers.\n            Console.WriteLine("{0}", response.Headers);\n            Console.WriteLine();\n\n            // Get the certificate data.\n            using (StreamReader sr = new StreamReader(response.GetResponseStream(), System.Text.Encoding.Default))\n            {\n                char[] readBuf = new char[1024];\n                int count;\n                do\n                {\n                    count = sr.Read(readBuf, 0, 1024);\n                    if (count != 0)\n                    {\n                        Console.WriteLine(new string(readBuf, 0, count));\n                    }\n                } while (count > 0);\n            }\n        }\n    }\n}