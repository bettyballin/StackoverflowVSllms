public class MyRepository\n{\n    private readonly DataContext _context;\n    private readonly IModelConverter<MyModel, LinqToSqlModel> _converter;\n\n    public MyRepository(DataContext context, IModelConverter<MyModel, LinqToSqlModel> converter)\n    {\n        _context = context;\n        _converter = converter;\n    }\n\n    public IEnumerable<MyModel> GetAll()\n    {\n        var linqModels = _context.LinqToSqlModels.ToList();\n        return linqModels.Select(item => _converter.ConvertToDomain(item));\n    }\n\n    public MyModel GetById(int id)\n    {\n        var linqModel = _context.LinqToSqlModels.SingleOrDefault(m => m.Id == id);\n        return _converter.ConvertToDomain(linqModel);\n    }\n\n    public void Add(MyModel model)\n    {\n        var linqModel = _converter.ConvertToLinq(model);\n        _context.LinqToSqlModels.InsertOnSubmit(linqModel);\n        _context.SubmitChanges();\n    }\n\n    public void Update(MyModel model)\n    {\n        var linqModel = _context.LinqToSqlModels.SingleOrDefault(m => m.Id == model.Id);\n        if (linqModel != null)\n        {\n            linqModel.Name = model.Name;\n            // Update other properties as needed\n            _context.SubmitChanges();\n        }\n    }\n\n    public void Delete(int id)\n    {\n        var linqModel = _context.LinqToSqlModels.SingleOrDefault(m => m.Id == id);\n        if (linqModel != null)\n        {\n            _context.LinqToSqlModels.DeleteOnSubmit(linqModel);\n            _context.SubmitChanges();\n        }\n    }\n}