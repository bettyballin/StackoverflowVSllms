public List<Item> GetTwoRandomItems(int userId)\n{\n    string query = @"\n        SELECT TOP 1 ac.Item1Id, ac.Item2Id\n        FROM AllCombinations ac\n        LEFT JOIN Ratings r\n        ON (ac.Item1Id = r.BetterObjectId AND ac.Item2Id = r.WorseObjectId AND r.UserId = @userId)\n        OR (ac.Item1Id = r.WorseObjectId AND ac.Item2Id = r.BetterObjectId AND r.UserId = @userId)\n        WHERE r.UserId IS NULL\n        ORDER BY NEWID();"; // Random order\n\n    using (SqlConnection conn = new SqlConnection("YourConnectionString"))\n    {\n        SqlCommand cmd = new SqlCommand(query, conn);\n        cmd.Parameters.AddWithValue("@userId", userId);\n        conn.Open();\n        \n        using (SqlDataReader reader = cmd.ExecuteReader())\n        {\n            if (reader.Read())\n            {\n                int item1Id = reader.GetInt32(0);\n                int item2Id = reader.GetInt32(1);\n\n                // Assuming you have a method to fetch items by their Id\n                Item item1 = GetItemById(item1Id);\n                Item item2 = GetItemById(item2Id);\n\n                return new List<Item> { item1, item2 };\n            }\n        }\n    }\n\n    return null; // No combination found\n}\n\nprivate Item GetItemById(int itemId)\n{\n    // Implement your logic to fetch an item by its Id\n    // Example:\n    using (SqlConnection conn = new SqlConnection("YourConnectionString"))\n    {\n        SqlCommand cmd = new SqlCommand("SELECT * FROM Items WHERE Id = @itemId", conn);\n        cmd.Parameters.AddWithValue("@itemId", itemId);\n        \n        conn.Open();\n        using (SqlDataReader reader = cmd.ExecuteReader())\n        {\n            if (reader.Read())\n            {\n                // Map reader to Item object\n                return new Item\n                {\n                    Id = reader.GetInt32("Id"),\n                    // Map other fields\n                };\n            }\n        }\n    }\n\n    return null;\n}