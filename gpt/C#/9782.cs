using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\n\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            // get the bytes from our PDF\n            Byte[] pdfBytes = File.ReadAllBytes("c:\\temp\\Test.pdf");\n\n            // build xml containing our base64 encoded pdf data and put it in hidden field\n            pdfData.Value = buildDocumentXML(pdfBytes, "TestDoc");\n\n            // call js function to add the src to the iframe\n            String scriptText = "loadIFrameFromHiddenField()";\n            ClientScript.RegisterStartupScript(this.GetType(), "loadIFrameFromHiddenField", scriptText, true);\n        }\n    }\n\n    private string buildDocumentXML(Byte[] pdfBytes, string documentName) \n    {\n        StringBuilder documentsString = new StringBuilder();\n        XmlWriterSettings documentsXmlSettings = new XmlWriterSettings\n        {\n            Indent = false,\n            OmitXmlDeclaration = true,\n            ConformanceLevel = ConformanceLevel.Fragment,\n            NewLineHandling = NewLineHandling.None\n        };\n\n        using (XmlWriter documentsXmlWriter = XmlWriter.Create(documentsString, documentsXmlSettings))\n        {\n            documentsXmlWriter.WriteStartElement("DOCUMENTS");\n            documentsXmlWriter.WriteStartElement("FILENAME");\n            documentsXmlWriter.WriteString(documentName);\n            documentsXmlWriter.WriteEndElement();\n            documentsXmlWriter.WriteStartElement("PDF");\n            documentsXmlWriter.WriteBase64(pdfBytes, 0, pdfBytes.Length);\n            documentsXmlWriter.WriteEndElement();\n            documentsXmlWriter.WriteEndElement();\n        }\n\n        return documentsString.ToString();\n    }\n}