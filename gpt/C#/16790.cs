using MQTTnet;\n    using MQTTnet.Client;\n    using System;\n    using System.Text;\n    using System.Threading.Tasks;\n\n    class Program\n    {\n        static async Task Main(string[] args)\n        {\n            var factory = new MqttFactory();\n            var client = factory.CreateMqttClient();\n\n            client.UseConnectedHandler(async e =>\n            {\n                Console.WriteLine("Connected to broker");\n                await client.SubscribeAsync("Lobby.English");\n            });\n\n            client.UseApplicationMessageReceivedHandler(e =>\n            {\n                Console.WriteLine($"Received: {Encoding.UTF8.GetString(e.ApplicationMessage.Payload)}");\n            });\n\n            var options = new MqttClientOptionsBuilder()\n                .WithClientId("CSharpClient")\n                .WithTcpServer("localhost")\n                .Build();\n\n            await client.ConnectAsync(options);\n            Console.ReadLine();\n        }\n    }