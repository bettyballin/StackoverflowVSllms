using System;\nusing System.Data;\nusing System.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        // Create a DataSet\n        DataSet dataSet = new DataSet();\n\n        // Create Parent Table\n        DataTable parentTable = new DataTable("Parent");\n        parentTable.Columns.Add("ParentID", typeof(int));\n        parentTable.Columns.Add("ParentName", typeof(string));\n        parentTable.Rows.Add(1, "Parent1");\n        parentTable.Rows.Add(2, "Parent2");\n\n        // Create Child Table\n        DataTable childTable = new DataTable("Child");\n        childTable.Columns.Add("ChildID", typeof(int));\n        childTable.Columns.Add("ParentID", typeof(int));\n        childTable.Columns.Add("ChildName", typeof(string));\n        childTable.Rows.Add(1, 1, "Child1");\n        childTable.Rows.Add(2, 1, "Child2");\n        childTable.Rows.Add(3, 2, "Child3");\n\n        // Add tables to the DataSet\n        dataSet.Tables.Add(parentTable);\n        dataSet.Tables.Add(childTable);\n\n        // Create a DataRelation\n        DataRelation relation = new DataRelation(\n            "ParentChildRelation",\n            parentTable.Columns["ParentID"],\n            childTable.Columns["ParentID"]);\n        dataSet.Relations.Add(relation);\n\n        // Use LINQ to query the DataSet\n        var query = from parentRow in dataSet.Tables["Parent"].AsEnumerable()\n                    join childRow in dataSet.Tables["Child"].AsEnumerable()\n                    on parentRow.Field<int>("ParentID") equals childRow.Field<int>("ParentID")\n                    select new\n                    {\n                        ParentName = parentRow.Field<string>("ParentName"),\n                        ChildName = childRow.Field<string>("ChildName")\n                    };\n\n        // Display the results\n        foreach (var item in query)\n        {\n            Console.WriteLine("Parent: {0}, Child: {1}", item.ParentName, item.ChildName);\n        }\n    }\n}