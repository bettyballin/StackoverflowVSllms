using System;\nusing System.Collections.Generic;\nusing System.IO;\n\nclass Program\n{\n    static void Main()\n    {\n        string rootPath = @"C:\your\path\here";\n        TraverseDirectory(rootPath);\n    }\n\n    static void TraverseDirectory(string rootPath)\n    {\n        HashSet<string> visitedDirectories = new HashSet<string>(StringComparer.OrdinalIgnoreCase);\n        Queue<string> directoriesToVisit = new Queue<string>();\n\n        directoriesToVisit.Enqueue(rootPath);\n\n        while (directoriesToVisit.Count > 0)\n        {\n            string currentDirectory = directoriesToVisit.Dequeue();\n            if (visitedDirectories.Contains(currentDirectory))\n            {\n                continue;\n            }\n\n            visitedDirectories.Add(currentDirectory);\n\n            try\n            {\n                foreach (var directory in Directory.GetDirectories(currentDirectory))\n                {\n                    if (!IsReparsePoint(directory))\n                    {\n                        directoriesToVisit.Enqueue(directory);\n                    }\n                }\n\n                foreach (var file in Directory.GetFiles(currentDirectory))\n                {\n                    Console.WriteLine(file);\n                }\n            }\n            catch (UnauthorizedAccessException) { }\n            catch (PathTooLongException) { }\n            catch (IOException) { }\n        }\n    }\n\n    static bool IsReparsePoint(string path)\n    {\n        var dirInfo = new DirectoryInfo(path);\n        return dirInfo.Attributes.HasFlag(FileAttributes.ReparsePoint);\n    }\n}