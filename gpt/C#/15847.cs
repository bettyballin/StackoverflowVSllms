using System;\nusing System.Data;\n\npublic void SynchronizeDataSet(DataSet boundDataSet, string connectionString, string selectCommandText)\n{\n    // Load the latest data into a shadow DataSet\n    DataSet shadowDataSet = new DataSet();\n    using (var connection = new SqlConnection(connectionString))\n    {\n        var adapter = new SqlDataAdapter(selectCommandText, connection);\n        adapter.Fill(shadowDataSet);\n    }\n    \n    // Assume the primary DataTable in both DataSets has the same structure and primary key\n    DataTable boundTable = boundDataSet.Tables[0];\n    DataTable shadowTable = shadowDataSet.Tables[0];\n\n    // Iterate through the shadow DataSet and update the bound DataSet\n    foreach (DataRow shadowRow in shadowTable.Rows)\n    {\n        DataRow boundRow = boundTable.Rows.Find(shadowRow["ID"]);\n        if (boundRow != null)\n        {\n            // Compare and update each column\n            foreach (DataColumn column in shadowTable.Columns)\n            {\n                if (!boundRow[column.ColumnName].Equals(shadowRow[column.ColumnName]))\n                {\n                    boundRow[column.ColumnName] = shadowRow[column.ColumnName];\n                }\n            }\n        }\n        else\n        {\n            // Row does not exist in bound DataSet, add it\n            boundTable.ImportRow(shadowRow);\n        }\n    }\n\n    // Remove rows that are no longer in the shadow DataSet\n    for (int i = boundTable.Rows.Count - 1; i >= 0; i--)\n    {\n        DataRow boundRow = boundTable.Rows[i];\n        if (shadowTable.Rows.Find(boundRow["ID"]) == null)\n        {\n            boundTable.Rows.Remove(boundRow);\n        }\n    }\n}