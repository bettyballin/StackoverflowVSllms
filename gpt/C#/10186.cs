using System;\nusing System.IO.MemoryMappedFiles;\nusing System.Runtime.InteropServices;\nusing System.Text;\n\npublic class Resources\n{\n    private const string MemoryFileName = "Global\\MySharedResources";\n    private const int MemoryFileSize = 1024;\n\n    private static readonly Lazy<Resources> m_instance = new Lazy<Resources>(() => new Resources());\n\n    public string Data;\n\n    private Resources()\n    {\n        using (var mmf = MemoryMappedFile.CreateOrOpen(MemoryFileName, MemoryFileSize))\n        {\n            using (var accessor = mmf.CreateViewAccessor(0, MemoryFileSize))\n            {\n                byte[] buffer = new byte[MemoryFileSize];\n                accessor.ReadArray(0, buffer, 0, buffer.Length);\n\n                string storedData = Encoding.UTF8.GetString(buffer).TrimEnd('\0');\n                if (string.IsNullOrEmpty(storedData))\n                {\n                    Data = DateTime.Now.ToString();\n                    byte[] dataToWrite = Encoding.UTF8.GetBytes(Data);\n                    accessor.WriteArray(0, dataToWrite, 0, dataToWrite.Length);\n                }\n                else\n                {\n                    Data = storedData;\n                }\n            }\n        }\n    }\n\n    public static Resources Instance => m_instance.Value;\n}