using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading.Tasks;\n\nclass SimpleHttpProxy\n{\n    private static readonly string[] BlockedUrls = { "http://www.blockedwebsite.com", "http://www.anotherblockedwebsite.com" };\n\n    public static void Main()\n    {\n        // Start the proxy server\n        TcpListener listener = new TcpListener(IPAddress.Any, 8888);\n        listener.Start();\n        Console.WriteLine("Proxy server started on port 8888");\n\n        while (true)\n        {\n            TcpClient client = listener.AcceptTcpClient();\n            Task.Run(() => HandleClient(client));\n        }\n    }\n\n    private static async Task HandleClient(TcpClient client)\n    {\n        using (NetworkStream clientStream = client.GetStream())\n        using (StreamReader reader = new StreamReader(clientStream))\n        using (StreamWriter writer = new StreamWriter(clientStream) { AutoFlush = true })\n        {\n            // Read the request line\n            string requestLine = await reader.ReadLineAsync();\n            if (string.IsNullOrEmpty(requestLine))\n                return;\n\n            // Parse the URL from the request line\n            string[] tokens = requestLine.Split(' ');\n            if (tokens.Length < 2)\n                return;\n\n            string url = tokens[1];\n            Console.WriteLine($"Request for: {url}");\n\n            // Log the request\n            LogRequest(url);\n\n            // Check if the URL is blocked\n            if (IsBlocked(url))\n            {\n                // Send a simple block response\n                await writer.WriteLineAsync("HTTP/1.1 403 Forbidden");\n                await writer.WriteLineAsync("Content-Type: text/plain");\n                await writer.WriteLineAsync();\n                await writer.WriteLineAsync("This website is blocked.");\n                return;\n            }\n\n            // Forward the request to the actual server\n            await ForwardRequest(url, clientStream);\n        }\n    }\n\n    private static void LogRequest(string url)\n    {\n        // Log the requested URL (to a file or database)\n        Console.WriteLine($"Logging URL: {url}");\n        // Implement your logging logic here\n    }\n\n    private static bool IsBlocked(string url)\n    {\n        // Check if the URL is in the blocked list\n        foreach (var blockedUrl in BlockedUrls)\n        {\n            if (url.Contains(blockedUrl))\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static async Task ForwardRequest(string url, NetworkStream clientStream)\n    {\n        try\n        {\n            // Create a request to the actual server\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n            HttpWebResponse response = (HttpWebResponse)await request.GetResponseAsync();\n\n            // Forward the response headers to the client\n            using (Stream responseStream = response.GetResponseStream())\n            {\n                await responseStream.CopyToAsync(clientStream);\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error forwarding request: {ex.Message}");\n        }\n    }\n}