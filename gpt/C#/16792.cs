using System;\nusing System.Data.Linq.Mapping;\nusing System.Linq;\nusing System.Reflection;\n\npublic class Program\n{\n    public static void Main()\n    {\n        // Assuming 'YourDataContext' is your LINQ to SQL DataContext\n        // and 'YourTable' is the table class with a varchar(50) column\n        Type tableType = typeof(YourDataContext).GetProperty("YourTable").PropertyType.GetGenericArguments()[0];\n        \n        // Replace 'YourColumnName' with the actual column name\n        PropertyInfo property = tableType.GetProperty("YourColumnName");\n        var columnAttribute = property.GetCustomAttributes(typeof(ColumnAttribute), false).FirstOrDefault() as ColumnAttribute;\n        \n        if (columnAttribute != null)\n        {\n            // Print the size of the varchar column\n            Console.WriteLine("Size of varchar column: " + columnAttribute.DbType);\n        }\n        else\n        {\n            Console.WriteLine("Column attribute not found.");\n        }\n    }\n}