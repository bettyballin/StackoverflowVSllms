using System;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Threading;\n\npublic class SQLInstaller\n{\n    private volatile bool WasCancelled = false;\n\n    public void InstallSQLServer()\n    {\n        // Start the SQL Server Express installer\n        Process setupProcess = new Process();\n        setupProcess.StartInfo.FileName = "sqlexpr32.exe";\n        setupProcess.StartInfo.Arguments = " a bunch of command line args here";\n        setupProcess.StartInfo.UseShellExecute = false;\n        setupProcess.Start();\n\n        // Monitor the process on 2-second intervals\n        while (!setupProcess.WaitForExit(2000))\n        {\n            if (WasCancelled)\n            {\n                // Try to get the child process\n                Process childProcess = GetChildProcess(setupProcess.Id);\n                if (childProcess != null)\n                {\n                    // Attempt to close the child process gracefully\n                    childProcess.CloseMainWindow();\n                    if (!childProcess.WaitForExit(5000)) // wait up to 5 seconds for the process to exit\n                    {\n                        // If the process doesn't exit, force kill it (not recommended if avoidable)\n                        childProcess.Kill();\n                    }\n                }\n                else\n                {\n                    setupProcess.CloseMainWindow();\n                    if (!setupProcess.WaitForExit(5000))\n                    {\n                        setupProcess.Kill();\n                    }\n                }\n                break;\n            }\n        }\n\n        // After this point, build a results report for the user.\n    }\n\n    private Process GetChildProcess(int parentId)\n    {\n        Process parentProcess = Process.GetProcessById(parentId);\n        foreach (Process process in Process.GetProcesses())\n        {\n            try\n            {\n                if (process.StartInfo.UseShellExecute == false &&\n                    process.StartInfo.EnvironmentVariables["PROCESS_PARENT_ID"] == parentId.ToString())\n                {\n                    return process;\n                }\n            }\n            catch { }\n        }\n        return null;\n    }\n\n    public void CancelInstallation()\n    {\n        WasCancelled = true;\n    }\n}