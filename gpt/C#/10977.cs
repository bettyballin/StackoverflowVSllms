using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class HybridEncryption\n{\n    public static (byte[] EncryptedData, byte[] EncryptedKey, byte[] IV) Encrypt(string input)\n    {\n        // Generate a new AES key and IV\n        using (Aes aes = Aes.Create())\n        {\n            aes.GenerateKey();\n            aes.GenerateIV();\n\n            byte[] encryptedData = EncryptAes(input, aes.Key, aes.IV);\n            byte[] encryptedKey = EncryptRsa(aes.Key);\n\n            return (encryptedData, encryptedKey, aes.IV);\n        }\n    }\n\n    private static byte[] EncryptAes(string input, byte[] key, byte[] iv)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = key;\n            aes.IV = iv;\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n            using (var ms = new System.IO.MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                using (var sw = new System.IO.StreamWriter(cs))\n                {\n                    sw.Write(input);\n                }\n                return ms.ToArray();\n            }\n        }\n    }\n\n    private static byte[] EncryptRsa(byte[] data)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            return rsa.Encrypt(data, false);\n        }\n    }\n\n    public static void Main()\n    {\n        string input = "12345678";\n        var (encryptedData, encryptedKey, iv) = Encrypt(input);\n\n        Console.WriteLine("Encrypted Data: " + Convert.ToBase64String(encryptedData));\n        Console.WriteLine("Encrypted Key: " + Convert.ToBase64String(encryptedKey));\n        Console.WriteLine("IV: " + Convert.ToBase64String(iv));\n    }\n}