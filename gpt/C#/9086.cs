using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class FileEncryptor\n{\n    public static void EncryptFile(string inputFile, string outputFile, string password)\n    {\n        using (FileStream fsCrypt = new FileStream(outputFile, FileMode.Create))\n        {\n            using (Aes aes = Aes.Create())\n            {\n                byte[] key, iv;\n                GenerateKeyFromPassword(password, aes.KeySize / 8, aes.BlockSize / 8, out key, out iv);\n                aes.Key = key;\n                aes.IV = iv;\n\n                fsCrypt.Write(aes.IV, 0, aes.IV.Length);\n\n                using (CryptoStream cs = new CryptoStream(fsCrypt, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (FileStream fsIn = new FileStream(inputFile, FileMode.Open))\n                    {\n                        int data;\n                        while ((data = fsIn.ReadByte()) != -1)\n                        {\n                            cs.WriteByte((byte)data);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public static void DecryptFile(string inputFile, string outputFile, string password)\n    {\n        using (FileStream fsCrypt = new FileStream(inputFile, FileMode.Open))\n        {\n            using (Aes aes = Aes.Create())\n            {\n                byte[] iv = new byte[aes.BlockSize / 8];\n                fsCrypt.Read(iv, 0, iv.Length);\n\n                byte[] key;\n                GenerateKeyFromPassword(password, aes.KeySize / 8, aes.BlockSize / 8, out key, out iv);\n                aes.Key = key;\n                aes.IV = iv;\n\n                using (CryptoStream cs = new CryptoStream(fsCrypt, aes.CreateDecryptor(), CryptoStreamMode.Read))\n                {\n                    using (FileStream fsOut = new FileStream(outputFile, FileMode.Create))\n                    {\n                        int data;\n                        while ((data = cs.ReadByte()) != -1)\n                        {\n                            fsOut.WriteByte((byte)data);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static void GenerateKeyFromPassword(string password, int keySize, int blockSize, out byte[] key, out byte[] iv)\n    {\n        using (var deriveBytes = new Rfc2898DeriveBytes(password, keySize))\n        {\n            key = deriveBytes.GetBytes(keySize);\n            iv = deriveBytes.GetBytes(blockSize);\n        }\n    }\n\n    public static void Main()\n    {\n        string password = "your_password";\n        EncryptFile("path_to_input_file", "path_to_encrypted_file", password);\n        DecryptFile("path_to_encrypted_file", "path_to_decrypted_file", password);\n    }\n}