// Define common interfaces\npublic interface IContext\n{\n    IRequest Request { get; }\n    IResponse Response { get; }\n}\n\npublic interface IRequest\n{\n    // Common properties and methods\n    string HttpMethod { get; }\n    Uri Url { get; }\n}\n\npublic interface IResponse\n{\n    // Common properties and methods\n    void Write(string content);\n}\n\n// Implement wrappers for HttpContext\npublic class HttpContextWrapper : IContext\n{\n    private readonly HttpContext _context;\n    \n    public HttpContextWrapper(HttpContext context)\n    {\n        _context = context;\n    }\n\n    public IRequest Request => new HttpRequestWrapper(_context.Request);\n    public IResponse Response => new HttpResponseWrapper(_context.Response);\n}\n\npublic class HttpRequestWrapper : IRequest\n{\n    private readonly HttpRequest _request;\n    \n    public HttpRequestWrapper(HttpRequest request)\n    {\n        _request = request;\n    }\n\n    public string HttpMethod => _request.HttpMethod;\n    public Uri Url => _request.Url;\n}\n\npublic class HttpResponseWrapper : IResponse\n{\n    private readonly HttpResponse _response;\n    \n    public HttpResponseWrapper(HttpResponse response)\n    {\n        _response = response;\n    }\n\n    public void Write(string content)\n    {\n        _response.Write(content);\n    }\n}\n\n// Implement wrappers for HttpListenerContext\npublic class HttpListenerContextWrapper : IContext\n{\n    private readonly HttpListenerContext _context;\n    \n    public HttpListenerContextWrapper(HttpListenerContext context)\n    {\n        _context = context;\n    }\n\n    public IRequest Request => new HttpListenerRequestWrapper(_context.Request);\n    public IResponse Response => new HttpListenerResponseWrapper(_context.Response);\n}\n\npublic class HttpListenerRequestWrapper : IRequest\n{\n    private readonly HttpListenerRequest _request;\n    \n    public HttpListenerRequestWrapper(HttpListenerRequest request)\n    {\n        _request = request;\n    }\n\n    public string HttpMethod => _request.HttpMethod;\n    public Uri Url => _request.Url;\n}\n\npublic class HttpListenerResponseWrapper : IResponse\n{\n    private readonly HttpListenerResponse _response;\n    \n    public HttpListenerResponseWrapper(HttpListenerResponse response)\n    {\n        _response = response;\n    }\n\n    public void Write(string content)\n    {\n        using (var writer = new StreamWriter(_response.OutputStream, Encoding.UTF8))\n        {\n            writer.Write(content);\n        }\n    }\n}