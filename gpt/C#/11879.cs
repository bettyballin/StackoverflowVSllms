using System;\nusing System.ComponentModel;\nusing System.IO;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form\n{\n    private BackgroundWorker backgroundWorker;\n\n    public MainForm()\n    {\n        InitializeComponent();\n        backgroundWorker = new BackgroundWorker();\n        backgroundWorker.WorkerReportsProgress = true;\n        backgroundWorker.DoWork += BackgroundWorker_DoWork;\n        backgroundWorker.ProgressChanged += BackgroundWorker_ProgressChanged;\n    }\n\n    private void CopyFileButton_Click(object sender, EventArgs e)\n    {\n        string sourceFile = "path_to_source_file";\n        string destinationFile = "path_to_destination_file";\n\n        backgroundWorker.RunWorkerAsync(new string[] { sourceFile, destinationFile });\n    }\n\n    private void BackgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        string[] files = (string[])e.Argument;\n        string sourceFile = files[0];\n        string destinationFile = files[1];\n\n        const int bufferSize = 1024 * 1024; // 1MB buffer size\n        byte[] buffer = new byte[bufferSize];\n        long totalBytes = new FileInfo(sourceFile).Length;\n        long totalReadBytes = 0;\n\n        using (FileStream sourceStream = new FileStream(sourceFile, FileMode.Open, FileAccess.Read))\n        using (FileStream destinationStream = new FileStream(destinationFile, FileMode.Create, FileAccess.Write))\n        {\n            int bytesRead;\n            while ((bytesRead = sourceStream.Read(buffer, 0, bufferSize)) > 0)\n            {\n                destinationStream.Write(buffer, 0, bytesRead);\n                totalReadBytes += bytesRead;\n                int progressPercentage = (int)((double)totalReadBytes / totalBytes * 100);\n                backgroundWorker.ReportProgress(progressPercentage);\n            }\n        }\n    }\n\n    private void BackgroundWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n    {\n        progressBar.Value = e.ProgressPercentage;\n    }\n}