public static string CompareLists<T1, T2>(List<T1> list1, List<T2> list2)\n    where T1 : class\n    where T2 : class\n{\n    if (list1 == null || list2 == null)\n        throw new ArgumentNullException("Both lists must be instantiated.");\n    \n    if (list1.Count != list2.Count)\n        throw new ArgumentException("Both lists must have the same number of items.");\n\n    var differences = new StringBuilder();\n\n    for (int i = 0; i < list1.Count; i++)\n    {\n        var difference = CompareTwoClass_ReturnDifferences(list1[i], list2[i]);\n        if (!string.IsNullOrEmpty(difference))\n        {\n            differences.AppendLine($"Difference at index {i}:");\n            differences.AppendLine(difference);\n        }\n    }\n\n    return differences.ToString();\n}\n\npublic static string CompareTwoClass_ReturnDifferences<T1, T2>(T1 Orig, T2 Dest)\n    where T1 : class\n    where T2 : class\n{\n    if (Dest == null) throw new ArgumentNullException("Dest", "Destination class must first be instantiated.");\n\n    var Differences = string.Empty;\n\n    foreach (var DestProp in Dest.GetType().GetProperties())\n    {\n        foreach (var OrigProp in Orig.GetType().GetProperties())\n        {\n            if (OrigProp.Name != DestProp.Name || OrigProp.PropertyType != DestProp.PropertyType) continue;\n            if (OrigProp.GetValue(Orig, null)?.ToString() != DestProp.GetValue(Dest, null)?.ToString())\n            {\n                Differences = string.IsNullOrEmpty(Differences) \n                    ? string.Format("{0}: {1} -> {2}", OrigProp.Name,\n                                                       OrigProp.GetValue(Orig, null),\n                                                       DestProp.GetValue(Dest, null)) \n                    : string.Format("{0} {1}{2}: {3} -> {4}", Differences,\n                                                              Environment.NewLine,\n                                                              OrigProp.Name,\n                                                              OrigProp.GetValue(Orig, null),\n                                                              DestProp.GetValue(Dest, null));\n            }\n        }\n    }\n    return Differences;\n}