using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        string key = "12345678901234567890123456789012"; // 32 bytes key for AES-256\n        string encryptedBase64 = "ENCRYPTED_MESSAGE_HERE"; // Replace with the encrypted message from Perl\n\n        byte[] keyBytes = Encoding.UTF8.GetBytes(key);\n        byte[] encryptedBytes = Convert.FromBase64String(encryptedBase64);\n\n        string decryptedMessage = DecryptStringFromBytes_Aes(encryptedBytes, keyBytes);\n        Console.WriteLine($"Decrypted message: {decryptedMessage}");\n    }\n\n    static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] key)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = key;\n            aesAlg.Mode = CipherMode.ECB; // Ensure compatibility with Perl's default mode\n            aesAlg.Padding = PaddingMode.PKCS7; // Ensure compatibility with Perl's default padding\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n            using (System.IO.MemoryStream msDecrypt = new System.IO.MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (System.IO.StreamReader srDecrypt = new System.IO.StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}