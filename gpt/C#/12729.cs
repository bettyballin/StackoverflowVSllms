using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing Microsoft.Win32.SafeHandles;\n\nclass Program\n{\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool SetFileValidData(SafeFileHandle hFile, long validDataLength);\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern SafeFileHandle CreateFile(\n        string lpFileName,\n        FileAccess dwDesiredAccess,\n        FileShare dwShareMode,\n        IntPtr lpSecurityAttributes,\n        FileMode dwCreationDisposition,\n        FileAttributes dwFlagsAndAttributes,\n        IntPtr hTemplateFile);\n\n    static void Main()\n    {\n        string filename = "path_to_your_file";\n        long fileSize = 1024 * 1024 * 1024; // 1GB\n\n        SafeFileHandle fileHandle = CreateFile(\n            filename,\n            FileAccess.Write,\n            FileShare.None,\n            IntPtr.Zero,\n            FileMode.Create,\n            FileAttributes.Normal,\n            IntPtr.Zero);\n\n        if (fileHandle.IsInvalid)\n        {\n            throw new IOException("Unable to create file", Marshal.GetLastWin32Error());\n        }\n\n        using (FileStream outFile = new FileStream(fileHandle, FileAccess.Write))\n        {\n            outFile.SetLength(fileSize);\n\n            if (!SetFileValidData(fileHandle, fileSize))\n            {\n                throw new IOException("Unable to set file valid data", Marshal.GetLastWin32Error());\n            }\n        }\n    }\n}