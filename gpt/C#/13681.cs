using System;\nusing Microsoft.Win32;\n\nclass Program\n{\n    static void Main()\n    {\n        // Define the registry key to watch\n        string registryKeyPath = @"HKEY_CURRENT_USER\Software\YourSoftware";\n\n        // Open the registry key\n        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\YourSoftware", true);\n\n        if (registryKey != null)\n        {\n            // Add the event handler for value changes\n            registryKey.ValueChanged += new EventHandler(OnRegistryValueChanged);\n\n            // Keep the application running to listen for events\n            Console.WriteLine("Watching registry key: " + registryKeyPath);\n            Console.WriteLine("Press Enter to exit...");\n            Console.ReadLine();\n        }\n        else\n        {\n            Console.WriteLine("Registry key not found.");\n        }\n    }\n\n    // Event handler for registry value changes\n    private static void OnRegistryValueChanged(object sender, EventArgs e)\n    {\n        // Retrieve the old and new value (you might need to customize this part)\n        // For demonstration, we assume the key and value name are known\n        string valueName = "YourValueName";\n        RegistryKey registryKey = (RegistryKey)sender;\n        object newValue = registryKey.GetValue(valueName);\n\n        // Display the old and new value (customize as needed)\n        Console.WriteLine($"Registry value changed. New value: {newValue}");\n    }\n}