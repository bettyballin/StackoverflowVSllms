using System.ComponentModel.Composition;\n\n// Define the common interface for configuration\npublic interface ITransporterConfig { }\n\n// Implement specific configuration classes\npublic class ComPortConfig : ITransporterConfig\n{\n    public int BaudRate { get; set; }\n    public int StartBits { get; set; }\n    public int StopBits { get; set; }\n}\n\npublic class TcpConfig : ITransporterConfig\n{\n    public string IpAddress { get; set; }\n    public int Port { get; set; }\n}\n\n// Define the IDataTransporter interface\npublic interface IDataTransporter\n{\n    void Configure(ITransporterConfig config);\n}\n\n// Implement the transporters\n[Export(typeof(IDataTransporter))]\npublic class ComPortDataTransporter : IDataTransporter\n{\n    public void Configure(ITransporterConfig config)\n    {\n        var comConfig = config as ComPortConfig;\n        if (comConfig != null)\n        {\n            // Configure the ComPortDataTransporter with comConfig\n        }\n    }\n}\n\n[Export(typeof(IDataTransporter))]\npublic class TcpDataTransporter : IDataTransporter\n{\n    public void Configure(ITransporterConfig config)\n    {\n        var tcpConfig = config as TcpConfig;\n        if (tcpConfig != null)\n        {\n            // Configure the TcpDataTransporter with tcpConfig\n        }\n    }\n}\n\n// Usage\nclass Program\n{\n    [ImportMany]\n    public IEnumerable<IDataTransporter> Transporters { get; set; }\n\n    static void Main(string[] args)\n    {\n        var catalog = new AggregateCatalog();\n        catalog.Catalogs.Add(new AssemblyCatalog(typeof(Program).Assembly));\n        var container = new CompositionContainer(catalog);\n\n        var program = new Program();\n        container.SatisfyImportsOnce(program);\n\n        // Example configuration\n        var comPortConfig = new ComPortConfig { BaudRate = 9600, StartBits = 1, StopBits = 1 };\n        var tcpConfig = new TcpConfig { IpAddress = "192.168.1.1", Port = 8080 };\n\n        foreach (var transporter in program.Transporters)\n        {\n            if (transporter is ComPortDataTransporter)\n            {\n                transporter.Configure(comPortConfig);\n            }\n            else if (transporter is TcpDataTransporter)\n            {\n                transporter.Configure(tcpConfig);\n            }\n        }\n    }\n}