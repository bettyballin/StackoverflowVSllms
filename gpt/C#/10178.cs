using System;\nusing System.Runtime.InteropServices;\nusing System.Threading;\n\nclass Program\n{\n    const int TIMERR_NOERROR = 0;\n    const int TIME_PERIODIC = 1;\n\n    delegate void TimerCallback(uint id, uint msg, IntPtr user, IntPtr param1, IntPtr param2);\n\n    [DllImport("winmm.dll")]\n    static extern uint timeSetEvent(uint msDelay, uint msResolution, TimerCallback callback, IntPtr user, uint eventType);\n\n    [DllImport("winmm.dll")]\n    static extern uint timeKillEvent(uint uTimerId);\n\n    static void Main(string[] args)\n    {\n        int frequency = 50; // Desired frequency in Hz\n        uint interval = (uint)(1000 / frequency); // Interval in milliseconds\n\n        TimerCallback timerCallback = TimerTick;\n        uint timerId = timeSetEvent(interval, 1, timerCallback, IntPtr.Zero, TIME_PERIODIC);\n\n        if (timerId == 0)\n        {\n            Console.WriteLine("Failed to create multimedia timer");\n            return;\n        }\n\n        Console.WriteLine("Collecting measurements for 10 seconds...");\n        Thread.Sleep(10000);\n\n        timeKillEvent(timerId);\n        Console.WriteLine("Timer stopped");\n    }\n\n    static void TimerTick(uint id, uint msg, IntPtr user, IntPtr param1, IntPtr param2)\n    {\n        // Code to collect measurements here\n        Console.WriteLine("Timer tick at {0}", DateTime.Now);\n    }\n}