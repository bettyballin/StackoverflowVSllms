using System.Web;\n\n   public class SecureImageHandler : IHttpHandler\n   {\n       public void ProcessRequest(HttpContext context)\n       {\n           string imagePath = context.Request.PhysicalPath;\n           string userId = context.User.Identity.Name; // Assuming you use some form of authentication\n\n           if (IsUserAuthorizedToAccessImage(userId, imagePath))\n           {\n               context.Response.ContentType = "image/jpeg";\n               context.Response.WriteFile(imagePath);\n           }\n           else\n           {\n               context.Response.StatusCode = 403; // Forbidden\n               context.Response.End();\n           }\n       }\n\n       public bool IsReusable\n       {\n           get { return false; }\n       }\n\n       private bool IsUserAuthorizedToAccessImage(string userId, string imagePath)\n       {\n           // Implement your authorization logic here\n           // For example, check if the image path contains the user's unique ID\n           return imagePath.Contains(userId);\n       }\n   }