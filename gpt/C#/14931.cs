using System;\nusing System.Data;\nusing System.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        // Create and fill the DataTable\n        DataTable table = new DataTable();\n        table.Columns.Add("Id", typeof(uint));\n        table.Columns.Add("AddressA", typeof(string));\n        table.Columns.Add("AddressB", typeof(string));\n        table.Columns.Add("Bytes", typeof(uint));\n\n        table.Rows.Add(1, "192.168.0.1", "192.168.0.10", 300);\n        table.Rows.Add(2, "192.168.0.1", "192.168.0.20", 400);\n        table.Rows.Add(3, "192.168.0.1", "192.168.0.30", 300);\n        table.Rows.Add(4, "10.152.0.13", "167.10.2.187", 80);\n\n        // Query the DataTable\n        var groupedData = from row in table.AsEnumerable()\n                          group row by row.Field<string>("AddressA") into g\n                          select new\n                          {\n                              AddressA = g.Key,\n                              Bytes = g.Sum(r => r.Field<uint>("Bytes"))\n                          };\n\n        // Create a new DataTable to store the result\n        DataTable resultTable = new DataTable();\n        resultTable.Columns.Add("Id", typeof(uint));\n        resultTable.Columns.Add("AddressA", typeof(string));\n        resultTable.Columns.Add("Bytes", typeof(uint));\n\n        uint id = 1;\n        foreach (var item in groupedData)\n        {\n            resultTable.Rows.Add(id++, item.AddressA, item.Bytes);\n        }\n\n        // Display the result for verification\n        foreach (DataRow row in resultTable.Rows)\n        {\n            Console.WriteLine($"{row["Id"]}, {row["AddressA"]}, {row["Bytes"]}");\n        }\n    }\n}