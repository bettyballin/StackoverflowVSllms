using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Linq;\n\npublic class DataTableHelper\n{\n    public static DataTable GetDistinctRecords(DataTable importDataTable)\n    {\n        // Create a HashSet to store unique records based on a concatenated string of all column values\n        HashSet<string> uniqueRecords = new HashSet<string>(StringComparer.OrdinalIgnoreCase);\n        // Create a DataTable to store distinct records\n        DataTable distinctTable = importDataTable.Clone();\n\n        foreach (DataRow row in importDataTable.Rows)\n        {\n            // Create a unique key for the current row based on all column values\n            string rowKey = string.Join("|", row.ItemArray.Select(field => field.ToString()));\n\n            // If the rowKey is not in the HashSet, it's a distinct record\n            if (uniqueRecords.Add(rowKey))\n            {\n                distinctTable.ImportRow(row);\n            }\n        }\n\n        return distinctTable;\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        DataTable importDataTable = new DataTable();\n        // Assume importDataTable is populated with data\n\n        DataTable distinctTable = DataTableHelper.GetDistinctRecords(importDataTable);\n\n        // distinctTable now contains only distinct records\n    }\n}