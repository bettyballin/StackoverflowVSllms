using System;\nusing System.Net;\nusing System.Net.Security;\nusing System.Security.Cryptography.X509Certificates;\nusing System.ServiceModel.Description;\nusing System.ServiceModel;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Bypass SSL certificate validation\n        ServicePointManager.ServerCertificateValidationCallback = new RemoteCertificateValidationCallback(IgnoreCertificateErrorsHandler);\n\n        // URL of the service\n        string serviceUrl = "https://your-service-url?wsdl";\n\n        // Create the WSDL importer\n        MetadataExchangeClient mexClient = new MetadataExchangeClient(new Uri(serviceUrl), MetadataExchangeClientMode.HttpGet);\n        mexClient.ResolveMetadataReferences = true;\n        MetadataSet metaDocs = mexClient.GetMetadata();\n        WsdlImporter importer = new WsdlImporter(metaDocs);\n\n        // Generate code\n        ServiceContractGenerator generator = new ServiceContractGenerator();\n        foreach (ContractDescription contract in importer.ImportAllContracts())\n        {\n            generator.GenerateServiceContractType(contract);\n        }\n\n        if (generator.Errors.Count != 0)\n        {\n            throw new Exception("There were errors during code compilation.");\n        }\n\n        // Write the code to a file\n        System.CodeDom.Compiler.CodeGeneratorOptions options = new System.CodeDom.Compiler.CodeGeneratorOptions();\n        options.BracingStyle = "C";\n        using (System.CodeDom.Compiler.IndentedTextWriter writer = new System.CodeDom.Compiler.IndentedTextWriter(System.IO.File.CreateText("GeneratedProxy.cs"), "    "))\n        {\n            System.CodeDom.Compiler.CodeDomProvider.CreateProvider("CSharp").GenerateCodeFromCompileUnit(generator.TargetCompileUnit, writer, options);\n        }\n\n        Console.WriteLine("Proxy class generated successfully.");\n    }\n\n    private static bool IgnoreCertificateErrorsHandler(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\n    {\n        // Ignore all SSL certificate errors\n        return true;\n    }\n}