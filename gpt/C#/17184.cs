using Microsoft.WindowsAzure.Storage;\nusing Microsoft.WindowsAzure.Storage.Blob;\nusing System;\nusing System.IO;\nusing System.Threading.Tasks;\n\npublic class AzureBlobStorageHelper\n{\n    private CloudBlobContainer _blobContainer;\n\n    public AzureBlobStorageHelper(string storageAccountName, string storageAccountKey, string containerName)\n    {\n        var storageAccount = new CloudStorageAccount(\n            new StorageCredentials(storageAccountName, storageAccountKey), true);\n        var blobClient = storageAccount.CreateCloudBlobClient();\n        _blobContainer = blobClient.GetContainerReference(containerName);\n    }\n\n    public async Task UploadFileAsync(string localFilePath, string blobName)\n    {\n        await _blobContainer.CreateIfNotExistsAsync();\n\n        var blockBlob = _blobContainer.GetBlockBlobReference(blobName);\n        using (var fileStream = File.OpenRead(localFilePath))\n        {\n            await blockBlob.UploadFromStreamAsync(fileStream);\n        }\n    }\n\n    public async Task<string> GetBlobUriAsync(string blobName)\n    {\n        var blockBlob = _blobContainer.GetBlockBlobReference(blobName);\n\n        if (await blockBlob.ExistsAsync())\n        {\n            return blockBlob.Uri.ToString();\n        }\n\n        return null;\n    }\n}\n\n// Usage example\npublic async Task ExampleUsage()\n{\n    var storageHelper = new AzureBlobStorageHelper("your_storage_account_name", "your_storage_account_key", "your_container_name");\n    await storageHelper.UploadFileAsync("path_to_your_local_file", "desired_blob_name");\n\n    string blobUri = await storageHelper.GetBlobUriAsync("desired_blob_name");\n    Console.WriteLine($"Blob URI: {blobUri}");\n}