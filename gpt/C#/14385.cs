using Newtonsoft.Json.Linq;\nusing Newtonsoft.Json.Schema;\nusing System;\nusing Xunit;\n\npublic class ApiTests\n{\n    [Fact]\n    public void TestApiResponseSchema()\n    {\n        // Example JSON response\n        string jsonResponse = @"\n        {\n            'videos': [{'id': 230482394920, 'name': 'foobarrr', 'shortDescription': 'foo'}],\n            'page_number': 0,\n            'page_size': 100,\n            'total_count': 0\n        }";\n\n        // Define the expected schema\n        string schemaJson = @"\n        {\n            'type': 'object',\n            'properties': {\n                'videos': {\n                    'type': 'array',\n                    'items': {\n                        'type': 'object',\n                        'properties': {\n                            'id': {'type': 'integer'},\n                            'name': {'type': 'string'},\n                            'shortDescription': {'type': 'string'}\n                        },\n                        'required': ['id', 'name', 'shortDescription']\n                    }\n                },\n                'page_number': {'type': 'integer'},\n                'page_size': {'type': 'integer'},\n                'total_count': {'type': 'integer'}\n            },\n            'required': ['videos', 'page_number', 'page_size', 'total_count']\n        }";\n\n        JSchema schema = JSchema.Parse(schemaJson);\n        JObject jsonObject = JObject.Parse(jsonResponse);\n\n        bool isValid = jsonObject.IsValid(schema, out IList<string> errorMessages);\n\n        Assert.True(isValid, string.Join(Environment.NewLine, errorMessages));\n    }\n}