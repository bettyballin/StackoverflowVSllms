using NHibernate;\nusing NHibernate.Criterion;\n\n// Assuming you have two classes: ClassA and ClassB\npublic class ClassA\n{\n    public virtual int SomeID { get; set; }\n    // Other properties\n}\n\npublic class ClassB\n{\n    public virtual int ID { get; set; }\n    // Other properties\n}\n\n// Create the criteria for ClassA\nICriteria criteria = session.CreateCriteria<ClassA>("a");\n\n// Create an alias for ClassB and define the join condition\ncriteria.CreateAlias("ClassBTable", "b", NHibernate.SqlCommand.JoinType.InnerJoin, Restrictions.EqProperty("a.SomeID", "b.ID"));\n\n// Add projections or select specific fields if needed\ncriteria.SetProjection(Projections.ProjectionList()\n    .Add(Projections.Property("a.SomeID"), "SomeID")\n    .Add(Projections.Property("b.ID"), "ID")\n    // Add more projections as needed\n);\n\n// Execute the query and get the result\nIList result = criteria.List();