using System;\nusing System.Linq;\nusing SubSonic;\n\npublic static class SqlQueryExtensions\n{\n    public static string ToPlainSql(this SqlQuery query)\n    {\n        string sql = query.BuildSqlStatement();\n        var parameters = query.Parameters;\n\n        foreach (var param in parameters)\n        {\n            string placeholder = param.ParameterName;\n            string value = GetFormattedValue(param.Value);\n            sql = sql.Replace(placeholder, value);\n        }\n\n        return sql;\n    }\n\n    private static string GetFormattedValue(object value)\n    {\n        if (value == null)\n        {\n            return "NULL";\n        }\n\n        if (value is string || value is DateTime)\n        {\n            return $"'{value}'";\n        }\n\n        if (value is bool)\n        {\n            return (bool)value ? "1" : "0";\n        }\n\n        return value.ToString();\n    }\n}\n\n// Usage\nclass Program\n{\n    static void Main()\n    {\n        SqlQuery qry = DB.Select().From<Product>()\n                           .Where(Products.Columns.Name).IsEqualTo("Productname");\n\n        string plainSql = qry.ToPlainSql();\n        Console.WriteLine(plainSql);\n    }\n}