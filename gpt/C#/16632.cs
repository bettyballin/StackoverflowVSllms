using System;\n   using Net.Pkcs11Interop.Common;\n   using Net.Pkcs11Interop.HighLevelAPI;\n   using Net.Pkcs11Interop.HighLevelAPI.Factories;\n   using Net.Pkcs11Interop.HighLevelAPI.MechanismParams;\n\n   class Program\n   {\n       static void Main(string[] args)\n       {\n           string pkcs11LibraryPath = @"/path/to/pkcs11/library"; // Ensure to set the correct path to the PKCS#11 library\n\n           // Initialize PKCS#11 library\n           using (IPkcs11Library pkcs11Library = new Pkcs11Library(pkcs11LibraryPath))\n           {\n               pkcs11Library.Initialize();\n\n               // Find the first available slot with a token present\n               ISlot slot = pkcs11Library.GetSlotList(SlotsType.WithTokenPresent)[0];\n\n               // Open a read-write session\n               using (ISession session = slot.OpenSession(SessionType.ReadWrite))\n               {\n                   // Login as normal user\n                   session.Login(CKU.CKU_USER, "your-pin");\n\n                   // Perform cryptographic operations\n                   // Example: Generate a random number\n                   byte[] randomData = session.GenerateRandom(16);\n                   Console.WriteLine(BitConverter.ToString(randomData));\n\n                   // Logout and close the session\n                   session.Logout();\n               }\n\n               pkcs11Library.Finalize();\n           }\n       }\n   }