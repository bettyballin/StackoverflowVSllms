using System;\nusing System.Diagnostics;\nusing System.Management;\nusing System.Security.Principal;\n\nnamespace KillProcessByUser\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string currentUserName = WindowsIdentity.GetCurrent().Name;\n            string processName = "rdpclip";\n\n            try\n            {\n                string query = $"SELECT * FROM Win32_Process WHERE Name = '{processName}.exe'";\n                ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);\n\n                foreach (ManagementObject obj in searcher.Get())\n                {\n                    string[] processOwner = new string[2];\n                    obj.InvokeMethod("GetOwner", (object[])processOwner);\n\n                    string owner = $"{processOwner[1]}\\{processOwner[0]}"; // Domain\User format\n\n                    if (string.Equals(owner, currentUserName, StringComparison.OrdinalIgnoreCase))\n                    {\n                        int processId = Convert.ToInt32(obj["ProcessId"]);\n                        Process.GetProcessById(processId).Kill();\n                        Console.WriteLine($"Killed process {processName} with ID {processId} for user {currentUserName}");\n                    }\n                }\n\n                // Restart the process\n                Process.Start(processName);\n                Console.WriteLine($"Restarted process {processName} for user {currentUserName}");\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($"Error: {ex.Message}");\n            }\n        }\n    }\n}