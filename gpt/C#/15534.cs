using System;\nusing System.Net.Http;\nusing System.Text.Json;\nusing System.Threading.Tasks;\n\npublic class RestClient\n{\n    private static readonly HttpClient client = new HttpClient();\n\n    public async Task<T> GetAsync<T>(string uri)\n    {\n        HttpResponseMessage response = await client.GetAsync(uri);\n        response.EnsureSuccessStatusCode();\n        string responseBody = await response.Content.ReadAsStringAsync();\n        \n        return JsonSerializer.Deserialize<T>(responseBody);\n    }\n\n    public async Task PostAsync<T>(string uri, T data)\n    {\n        string jsonString = JsonSerializer.Serialize(data);\n        HttpContent content = new StringContent(jsonString, System.Text.Encoding.UTF8, "application/json");\n        \n        HttpResponseMessage response = await client.PostAsync(uri, content);\n        response.EnsureSuccessStatusCode();\n    }\n}\n\n// Example usage\npublic class Example\n{\n    public async Task Run()\n    {\n        RestClient restClient = new RestClient();\n        \n        // GET request\n        var result = await restClient.GetAsync<MyDataType>("https://api.example.com/data");\n        \n        // POST request\n        await restClient.PostAsync("https://api.example.com/data", new MyDataType { Property = "Value" });\n    }\n}\n\npublic class MyDataType\n{\n    public string Property { get; set; }\n}