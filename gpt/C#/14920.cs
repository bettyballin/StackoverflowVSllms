using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic static class EncryptionUtility\n{\n    private static readonly string EncryptionKey = "your-encryption-key"; // Ensure this key is stored securely\n\n    public static string Encrypt(string plainText)\n    {\n        byte[] plainBytes = Encoding.UTF8.GetBytes(plainText);\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(EncryptionKey);\n            aes.IV = new byte[16]; // Initialize to zero\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    cs.Write(plainBytes, 0, plainBytes.Length);\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public static string Decrypt(string encryptedText)\n    {\n        byte[] encryptedBytes = Convert.FromBase64String(encryptedText);\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(EncryptionKey);\n            aes.IV = new byte[16]; // Initialize to zero\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Write))\n                {\n                    cs.Write(encryptedBytes, 0, encryptedBytes.Length);\n                }\n                return Encoding.UTF8.GetString(ms.ToArray());\n            }\n        }\n    }\n}