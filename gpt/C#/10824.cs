using System;\nusing System.Threading;\nusing DigitalPersona.Standards;\nusing DPFP;\nusing DPFP.Capture;\n\npublic class FingerprintReader : DPFP.Capture.EventHandler\n{\n    private Capture _capturer;\n\n    public FingerprintReader()\n    {\n        _capturer = new Capture();\n        if (_capturer != null)\n            _capturer.EventHandler = this;\n        else\n            throw new Exception("Can't initiate capture operation.");\n    }\n\n    public void Start()\n    {\n        if (_capturer != null)\n            _capturer.StartCapture();\n    }\n\n    public void Stop()\n    {\n        if (_capturer != null)\n            _capturer.StopCapture();\n    }\n\n    public void OnComplete(object capture, string readerSerialNumber, Sample sample)\n    {\n        // Handle the fingerprint sample here.\n        Console.WriteLine("Fingerprint captured.");\n    }\n\n    public void OnFingerGone(object capture, string readerSerialNumber)\n    {\n        Console.WriteLine("Finger removed.");\n    }\n\n    public void OnFingerTouch(object capture, string readerSerialNumber)\n    {\n        Console.WriteLine("Finger touched.");\n    }\n\n    public void OnReaderConnect(object capture, string readerSerialNumber)\n    {\n        Console.WriteLine("Reader connected.");\n    }\n\n    public void OnReaderDisconnect(object capture, string readerSerialNumber)\n    {\n        Console.WriteLine("Reader disconnected.");\n    }\n\n    public void OnSampleQuality(object capture, string readerSerialNumber, CaptureFeedback captureFeedback)\n    {\n        if (captureFeedback == CaptureFeedback.Good)\n            Console.WriteLine("Good quality sample.");\n        else\n            Console.WriteLine("Poor quality sample.");\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        FingerprintReader reader = new FingerprintReader();\n        reader.Start();\n\n        Console.WriteLine("Press Enter to terminate...");\n        Console.ReadLine();\n\n        reader.Stop();\n    }\n}