using System;\nusing System.Threading;\n\nclass Program\n{\n    static Timer timer;\n    static bool paused = false;\n\n    static void Main(string[] args)\n    {\n        // Create a timer to simulate background work\n        timer = new Timer(TimerCallback, null, 0, 1000);\n\n        while (true)\n        {\n            // Read a key without echoing it to the console\n            ConsoleKeyInfo keyInfo = Console.ReadKey(true);\n            char command = keyInfo.KeyChar;\n\n            switch (command)\n            {\n                case 'P':\n                case 'p':\n                    Pause();\n                    break;\n                case 'C':\n                case 'c':\n                    Continue();\n                    break;\n                case 'Q':\n                case 'q':\n                    Quit();\n                    return;\n                default:\n                    Console.WriteLine("Invalid command.");\n                    break;\n            }\n        }\n    }\n\n    static void TimerCallback(Object o)\n    {\n        if (!paused)\n        {\n            Console.WriteLine($"Background work at {DateTime.Now}");\n        }\n    }\n\n    static void Pause()\n    {\n        paused = true;\n        Console.WriteLine("Paused.");\n    }\n\n    static void Continue()\n    {\n        paused = false;\n        Console.WriteLine("Continued.");\n    }\n\n    static void Quit()\n    {\n        timer.Dispose();\n        Console.WriteLine("Quitting.");\n    }\n}