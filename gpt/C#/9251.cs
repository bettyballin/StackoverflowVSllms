using System;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class ControlSettings\n{\n    public Control Control { get; set; }\n    public Func<bool> ValidateInput { get; set; }\n    public string ErrorMessage { get; set; }\n\n    public ControlSettings(Control control, Func<bool> validateInput, string errorMessage)\n    {\n        Control = control;\n        ValidateInput = validateInput;\n        ErrorMessage = errorMessage;\n    }\n}\n\npublic class SettingsManager\n{\n    private List<ControlSettings> controlSettingsList = new List<ControlSettings>();\n    private ErrorProvider errorProvider;\n\n    public SettingsManager(ErrorProvider errorProvider)\n    {\n        this.errorProvider = errorProvider;\n    }\n\n    public void AddControl(Control control, Func<bool> validateInput, string errorMessage)\n    {\n        controlSettingsList.Add(new ControlSettings(control, validateInput, errorMessage));\n    }\n\n    public bool ValidateControls()\n    {\n        bool allValid = true;\n        foreach (var controlSettings in controlSettingsList)\n        {\n            if (!controlSettings.ValidateInput())\n            {\n                errorProvider.SetError(controlSettings.Control, controlSettings.ErrorMessage);\n                allValid = false;\n            }\n            else\n            {\n                errorProvider.SetError(controlSettings.Control, string.Empty);\n            }\n        }\n        return allValid;\n    }\n\n    public void SaveSettings()\n    {\n        if (ValidateControls())\n        {\n            // Logic to save settings\n            MessageBox.Show("Settings saved successfully.");\n        }\n        else\n        {\n            MessageBox.Show("Please correct the errors before saving.");\n        }\n    }\n\n    public void LoadSettings()\n    {\n        // Logic to load settings\n        // Set the values of the controls\n    }\n}\n\n// Usage in a Form\npublic partial class MainForm : Form\n{\n    private SettingsManager settingsManager;\n\n    public MainForm()\n    {\n        InitializeComponent();\n        settingsManager = new SettingsManager(errorProvider1);\n\n        // Add controls to the SettingsManager with their validation logic\n        settingsManager.AddControl(textBox1, () => textBox1.Text.Length <= 10, "Max length is 10.");\n        settingsManager.AddControl(textBox2, () => textBox2.Text == textBox2.Text.ToUpper(), "Only uppercase letters allowed.");\n    }\n\n    private void btnSaveSettings_Click(object sender, EventArgs e)\n    {\n        settingsManager.SaveSettings();\n    }\n\n    private void MainForm_Load(object sender, EventArgs e)\n    {\n        settingsManager.LoadSettings();\n    }\n}