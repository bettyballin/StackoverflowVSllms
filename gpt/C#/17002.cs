using System;\nusing System.Text;\n\npublic class Utf8StringReverser\n{\n    public static void ReverseUtf8String(byte[] utf8Bytes)\n    {\n        if (utf8Bytes == null || utf8Bytes.Length <= 1)\n        {\n            return;\n        }\n\n        int start = 0;\n        int end = utf8Bytes.Length - 1;\n\n        while (start < end)\n        {\n            // Find the next character from the start\n            int startCharLength = GetUtf8CharLength(utf8Bytes[start]);\n            // Find the next character from the end\n            int endCharLength = GetUtf8CharLength(utf8Bytes[end]);\n\n            // Swap the characters\n            Swap(utf8Bytes, start, startCharLength, end, endCharLength);\n\n            // Move the pointers\n            start += startCharLength;\n            end -= endCharLength;\n        }\n    }\n\n    private static int GetUtf8CharLength(byte firstByte)\n    {\n        if ((firstByte & 0x80) == 0)\n        {\n            return 1; // 1-byte character\n        }\n        else if ((firstByte & 0xE0) == 0xC0)\n        {\n            return 2; // 2-byte character\n        }\n        else if ((firstByte & 0xF0) == 0xE0)\n        {\n            return 3; // 3-byte character\n        }\n        else if ((firstByte & 0xF8) == 0xF0)\n        {\n            return 4; // 4-byte character\n        }\n        else\n        {\n            throw new ArgumentException("Invalid UTF-8 character");\n        }\n    }\n\n    private static void Swap(byte[] bytes, int start1, int length1, int start2, int length2)\n    {\n        if (length1 != length2)\n        {\n            throw new ArgumentException("Characters of different lengths cannot be swapped in place");\n        }\n\n        for (int i = 0; i < length1; i++)\n        {\n            byte temp = bytes[start1 + i];\n            bytes[start1 + i] = bytes[start2 + i];\n            bytes[start2 + i] = temp;\n        }\n    }\n\n    public static void Main(string[] args)\n    {\n        string str = "Hello, 世界!";\n        byte[] utf8Bytes = Encoding.UTF8.GetBytes(str);\n        ReverseUtf8String(utf8Bytes);\n        string reversedStr = Encoding.UTF8.GetString(utf8Bytes);\n        Console.WriteLine(reversedStr); // Output: !界世 ,olleH\n    }\n}