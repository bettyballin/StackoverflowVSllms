using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class LicenseManager\n{\n    private static readonly byte[] Key = Encoding.UTF8.GetBytes("your-32-byte-long-key-here");\n    private static readonly byte[] IV = Encoding.UTF8.GetBytes("your-16-byte-long-iv-here");\n\n    public static string EncryptLicense(string plainText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n\n            using (var encryptor = aes.CreateEncryptor(aes.Key, aes.IV))\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                using (var sw = new StreamWriter(cs))\n                {\n                    sw.Write(plainText);\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public static string DecryptLicense(string cipherText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n\n            using (var decryptor = aes.CreateDecryptor(aes.Key, aes.IV))\n            using (var ms = new MemoryStream(Convert.FromBase64String(cipherText)))\n            using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n            using (var sr = new StreamReader(cs))\n            {\n                return sr.ReadToEnd();\n            }\n        }\n    }\n\n    public static string ComputeHMAC(string data)\n    {\n        using (var hmac = new HMACSHA256(Key))\n        {\n            byte[] hash = hmac.ComputeHash(Encoding.UTF8.GetBytes(data));\n            return Convert.ToBase64String(hash);\n        }\n    }\n\n    public static bool VerifyHMAC(string data, string hmacToVerify)\n    {\n        string computedHmac = ComputeHMAC(data);\n        return hmacToVerify == computedHmac;\n    }\n}\n\n// Example usage\nclass Program\n{\n    static void Main()\n    {\n        string licenseData = "Your license data here";\n        string encryptedLicense = LicenseManager.EncryptLicense(licenseData);\n        string hmac = LicenseManager.ComputeHMAC(encryptedLicense);\n\n        Console.WriteLine("Encrypted License: " + encryptedLicense);\n        Console.WriteLine("HMAC: " + hmac);\n\n        // To verify and decrypt\n        if (LicenseManager.VerifyHMAC(encryptedLicense, hmac))\n        {\n            string decryptedLicense = LicenseManager.DecryptLicense(encryptedLicense);\n            Console.WriteLine("Decrypted License: " + decryptedLicense);\n        }\n        else\n        {\n            Console.WriteLine("License file has been tampered with.");\n        }\n    }\n}