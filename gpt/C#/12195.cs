using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Class\n{\n    public int IDLinea { get; set; }\n    public int Posizione { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        List<List<Class>> L = new List<List<Class>>();\n\n        var A = new List<Class>\n        {\n            new Class { IDLinea = 1, Posizione = 5 },\n            new Class { IDLinea = 2, Posizione = 1 }\n        };\n\n        var B = new List<Class>\n        {\n            new Class { IDLinea = 1, Posizione = 3 },\n            new Class { IDLinea = 2, Posizione = 1 }\n        };\n\n        var D = new List<Class>\n        {\n            new Class { IDLinea = 4, Posizione = 1 },\n            new Class { IDLinea = 2, Posizione = 4 }\n        };\n\n        L.Add(A);\n        L.Add(B);\n        L.Add(D);\n\n        var result = GetDistinctLists(L);\n\n        // Print result to verify\n        foreach (var list in result)\n        {\n            Console.WriteLine("List:");\n            foreach (var item in list)\n            {\n                Console.WriteLine($"IDLinea: {item.IDLinea}, Posizione: {item.Posizione}");\n            }\n        }\n    }\n\n    public static List<List<Class>> GetDistinctLists(List<List<Class>> inputList)\n    {\n        var uniqueRows = new HashSet<string>();\n        var result = new List<List<Class>>();\n\n        foreach (var list in inputList)\n        {\n            var uniqueIds = string.Join(",", list.Select(c => c.IDLinea));\n            if (!uniqueRows.Contains(uniqueIds))\n            {\n                uniqueRows.Add(uniqueIds);\n                result.Add(list);\n            }\n        }\n\n        return result;\n    }\n}