using System;\nusing System.Windows.Forms;\n\npublic class MyForm : Form\n{\n    private NotifyIcon trayIcon;\n    private ContextMenu trayMenu;\n\n    public MyForm()\n    {\n        // Create a simple tray menu with only one item.\n        trayMenu = new ContextMenu();\n        trayMenu.MenuItems.Add("Exit", OnExit);\n\n        // Create a tray icon.\n        trayIcon = new NotifyIcon();\n        trayIcon.Text = "My Application";\n        trayIcon.Icon = new System.Drawing.Icon(SystemIcons.Application, 40, 40);\n\n        // Add menu to the tray icon.\n        trayIcon.ContextMenu = trayMenu;\n\n        // Make the tray icon visible.\n        trayIcon.Visible = true;\n\n        // Ensure the form is hidden at startup.\n        this.WindowState = FormWindowState.Minimized;\n        this.ShowInTaskbar = false;\n    }\n\n    protected override void OnLoad(EventArgs e)\n    {\n        base.OnLoad(e);\n        // Minimize and hide the form on load.\n        this.Hide();\n    }\n\n    private void OnExit(object sender, EventArgs e)\n    {\n        // Hide tray icon, otherwise it will remain shown until user mouses over it.\n        trayIcon.Visible = false;\n\n        Application.Exit();\n    }\n\n    protected override void Dispose(bool disposing)\n    {\n        if (disposing)\n        {\n            // Clean up any components being used.\n            if (trayIcon != null)\n            {\n                trayIcon.Dispose();\n            }\n        }\n        base.Dispose(disposing);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.Run(new MyForm());\n    }\n}