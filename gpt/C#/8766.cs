using System;\nusing System.IO;\nusing Org.BouncyCastle.Pkcs;\nusing Org.BouncyCastle.Crypto;\nusing Org.BouncyCastle.Security;\nusing Org.BouncyCastle.Crypto.Parameters;\nusing iTextSharp.text.pdf;\nusing iTextSharp.text.pdf.security;\n\npublic class PdfSigner\n{\n    public static void SignPdf(string inputPdfPath, string outputPdfPath, string pfxFilePath, string pfxPassword)\n    {\n        // Load the certificate\n        Pkcs12Store pkcs12 = new Pkcs12Store(new FileStream(pfxFilePath, FileMode.Open, FileAccess.Read), pfxPassword.ToCharArray());\n        string alias = null;\n        foreach (string tAlias in pkcs12.Aliases)\n        {\n            if (pkcs12.IsKeyEntry(tAlias))\n            {\n                alias = tAlias;\n                break;\n            }\n        }\n        AsymmetricKeyEntry keyEntry = pkcs12.GetKey(alias);\n        X509CertificateEntry[] certificateChain = pkcs12.GetCertificateChain(alias);\n\n        // Sign the PDF\n        using (FileStream input = new FileStream(inputPdfPath, FileMode.Open, FileAccess.Read))\n        using (FileStream output = new FileStream(outputPdfPath, FileMode.Create, FileAccess.Write))\n        {\n            PdfReader reader = new PdfReader(input);\n            PdfStamper stamper = PdfStamper.CreateSignature(reader, output, '\0');\n            PdfSignatureAppearance appearance = stamper.SignatureAppearance;\n\n            appearance.Reason = "Document signing";\n            appearance.Location = "Location";\n            appearance.SetVisibleSignature("Signature");\n\n            IExternalSignature pks = new PrivateKeySignature(keyEntry.Key as RsaKeyParameters, DigestAlgorithms.SHA256);\n            MakeSignature.SignDetached(appearance, pks, certificateChain, null, null, null, 0, CryptoStandard.CMS);\n        }\n    }\n\n    public static void Main()\n    {\n        string inputPdfPath = "input.pdf";\n        string outputPdfPath = "signed_output.pdf";\n        string pfxFilePath = "certificate.pfx";\n        string pfxPassword = "password";\n\n        SignPdf(inputPdfPath, outputPdfPath, pfxFilePath, pfxPassword);\n        Console.WriteLine("PDF signed successfully.");\n    }\n}