using System;\nusing System.Threading;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Subscribe to the CancelKeyPress event\n        Console.CancelKeyPress += new ConsoleCancelEventHandler(OnExit);\n\n        // Main loop\n        while (true)\n        {\n            string x = Console.ReadLine();\n            StartLongRunningTaskOnSeparateThread(x);\n        }\n    }\n\n    static void OnExit(object sender, ConsoleCancelEventArgs args)\n    {\n        // Display a warning message\n        Console.WriteLine("Hey, I'm not done yet. Are you sure you want to close the application?");\n\n        // Set the Cancel property to true to prevent the process from terminating.\n        args.Cancel = true;\n\n        // Perform any necessary cleanup here\n        // For example, signal to the long-running tasks to wrap up\n    }\n\n    static void StartLongRunningTaskOnSeparateThread(string input)\n    {\n        // Simulate a long-running task\n        new Thread(() =>\n        {\n            Console.WriteLine($"Started long-running task with input: {input}");\n            Thread.Sleep(10000); // Simulate work\n            Console.WriteLine("Long-running task completed.");\n        }).Start();\n    }\n}