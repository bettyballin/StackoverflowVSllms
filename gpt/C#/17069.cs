using System;\nusing System.Linq;\nusing System.Reflection;\n\npublic static class ValidationHelper\n{\n    public static bool ValidateMaxLengths<T>(T entity, out string errorMessage)\n    {\n        errorMessage = string.Empty;\n        var properties = typeof(T).GetProperties().Where(prop => Attribute.IsDefined(prop, typeof(MaxLengthAttribute)));\n\n        foreach (var property in properties)\n        {\n            var value = property.GetValue(entity) as string;\n            if (value != null)\n            {\n                var maxLengthAttribute = (MaxLengthAttribute)property.GetCustomAttributes(typeof(MaxLengthAttribute), false).First();\n                if (value.Length > maxLengthAttribute.Length)\n                {\n                    errorMessage = $"The field {property.Name} exceeds the maximum length of {maxLengthAttribute.Length}.";\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}