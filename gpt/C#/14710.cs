using System.IO;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic class MediaController : Controller\n{\n    // This example assumes you have a method to check user permissions\n    private bool UserHasPermission(string userId, string mediaId)\n    {\n        // Implement your permission logic here\n        return true; // Placeholder for actual permission check\n    }\n\n    public ActionResult GetMedia(string mediaId)\n    {\n        var userId = User.Identity.Name;\n\n        if (!UserHasPermission(userId, mediaId))\n        {\n            return new HttpStatusCodeResult(403); // Forbidden\n        }\n\n        var filePath = GetMediaFilePath(mediaId);\n\n        if (!System.IO.File.Exists(filePath))\n        {\n            return HttpNotFound();\n        }\n\n        var fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read);\n        var mimeType = MimeMapping.GetMimeMapping(filePath);\n        return File(fileStream, mimeType);\n    }\n\n    private string GetMediaFilePath(string mediaId)\n    {\n        // Map mediaId to actual file path\n        // Example: return Path.Combine(Server.MapPath("~/App_Data/Media"), mediaId);\n        return Path.Combine(Server.MapPath("~/SecureMedia"), mediaId);\n    }\n}