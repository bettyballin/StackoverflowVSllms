using System;\nusing System.Text;\nusing System.Security.Cryptography;\n\nnamespace GenApp.Utils.Security\n{\n    /// <summary>\n    /// Summary description for Encrypter\n    /// </summary>\n    public class Encrypter\n    {\n        /// <summary>\n        /// Encrypts according to the passed plain name for hashing algorithm.\n        /// See CryptoConfig class from MSDN for more details.\n        /// </summary>\n        /// <param name="strPlainTxt">The plain text to encrypt</param>\n        /// <param name="strAlgorithmName">The plain name of the hashing algorithm</param>\n        /// <returns>The encrypted string</returns>\n        public static string Encrypt(string strPlainTxt, string strAlgorithmName)\n        {\n            string strHashedTxt = String.Empty;\n            byte[] bytPlain = Encoding.UTF8.GetBytes(strPlainTxt);\n\n            using (HashAlgorithm objAlgorithm = HashAlgorithm.Create(strAlgorithmName))\n            {\n                if (objAlgorithm == null)\n                {\n                    throw new ArgumentException("Invalid algorithm name", nameof(strAlgorithmName));\n                }\n\n                byte[] bytHash = objAlgorithm.ComputeHash(bytPlain);\n                strHashedTxt = Convert.ToBase64String(bytHash);\n            }\n\n            return strHashedTxt;\n        }\n    }\n}\n\n// Example usage:\n// string myNewEncryptedString = Encrypter.Encrypt("StringToEncrypt", "SHA256");