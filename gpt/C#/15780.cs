// Foo.Services.UserService\n    public class UserService\n    {\n        public ICollection<KeyValuePair<string, string>> ValidateLogon(string username, string password)\n        {\n            var errors = new List<KeyValuePair<string, string>>();\n\n            if (string.IsNullOrWhiteSpace(username))\n            {\n                errors.Add(new KeyValuePair<string, string>("Username", "Username is required."));\n            }\n\n            if (string.IsNullOrWhiteSpace(password))\n            {\n                errors.Add(new KeyValuePair<string, string>("Password", "Password is required."));\n            }\n\n            return errors;\n        }\n    }\n\n    // Foo.Controllers.AccountController\n    public class AccountController : Controller\n    {\n        private readonly UserService _userService;\n\n        public AccountController(UserService userService)\n        {\n            _userService = userService;\n        }\n\n        [HttpPost]\n        public ActionResult Logon(string username, string password)\n        {\n            var validationErrors = _userService.ValidateLogon(username, password);\n            if (validationErrors.Any())\n            {\n                foreach (var error in validationErrors)\n                {\n                    ModelState.AddModelError(error.Key, error.Value);\n                }\n                return View();\n            }\n\n            // Proceed with user logon\n            return RedirectToAction("Index", "Home");\n        }\n    }