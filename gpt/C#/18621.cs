using Google.Apis.Analytics.v3;\nusing Google.Apis.Analytics.v3.Data;\nusing Google.Apis.Auth.OAuth2;\nusing Google.Apis.Services;\nusing System;\nusing System.IO;\nusing System.Threading.Tasks;\n\npublic class GoogleAnalyticsService\n{\n    private static readonly string[] Scopes = { AnalyticsService.Scope.AnalyticsReadonly };\n    private const string ApplicationName = "Your Application Name";\n    private const string KeyFilePath = "path/to/your-service-account-key.json";\n    private const string ViewId = "your-view-id";\n\n    public async Task GetAnalyticsData()\n    {\n        GoogleCredential credential;\n\n        using (var stream = new FileStream(KeyFilePath, FileMode.Open, FileAccess.Read))\n        {\n            credential = GoogleCredential.FromStream(stream).CreateScoped(Scopes);\n        }\n\n        // Create the Analytics service.\n        var analyticsService = new AnalyticsService(new BaseClientService.Initializer()\n        {\n            HttpClientInitializer = credential,\n            ApplicationName = ApplicationName,\n        });\n\n        // Define the date range.\n        var dateRange = new DateRange\n        {\n            StartDate = "30daysAgo",\n            EndDate = "today"\n        };\n\n        // Define the metrics.\n        var sessions = new Metric\n        {\n            Expression = "ga:sessions",\n            Alias = "Sessions"\n        };\n\n        // Create the request.\n        var request = analyticsService.Data.Ga.Get($"ga:{ViewId}", dateRange.StartDate, dateRange.EndDate, sessions.Expression);\n        request.Dimensions = "ga:pageTitle";\n\n        // Execute the request.\n        GaData response = await request.ExecuteAsync();\n\n        // Process the response.\n        foreach (var row in response.Rows)\n        {\n            Console.WriteLine($"Page Title: {row[0]}, Sessions: {row[1]}");\n        }\n    }\n}