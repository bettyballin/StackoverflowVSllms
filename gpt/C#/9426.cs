public class WcfProxyFactory<T> where T : class\n{\n    private readonly object _lock = new object();\n    private T _proxy;\n\n    public T GetProxy()\n    {\n        lock (_lock)\n        {\n            if (_proxy == null || ((ICommunicationObject)_proxy).State == CommunicationState.Faulted)\n            {\n                _proxy = CreateProxy();\n            }\n            return _proxy;\n        }\n    }\n\n    private T CreateProxy()\n    {\n        // Implement proxy creation logic here\n        // Example: return new ChannelFactory<T>("EndpointConfig").CreateChannel();\n        return default(T); // Replace with actual creation logic\n    }\n\n    public void CloseProxy()\n    {\n        lock (_lock)\n        {\n            if (_proxy != null)\n            {\n                try\n                {\n                    ((ICommunicationObject)_proxy).Close();\n                }\n                catch\n                {\n                    ((ICommunicationObject)_proxy).Abort();\n                }\n                finally\n                {\n                    _proxy = null;\n                }\n            }\n        }\n    }\n}