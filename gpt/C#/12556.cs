using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Linq;\n\npublic class NewsInserter\n{\n    private readonly string _connectionString;\n    private readonly Dictionary<string, int> _tagCache;\n\n    public NewsInserter(string connectionString)\n    {\n        _connectionString = connectionString;\n        _tagCache = LoadTags();\n    }\n\n    private Dictionary<string, int> LoadTags()\n    {\n        var tags = new Dictionary<string, int>();\n\n        using (var connection = new SqlConnection(_connectionString))\n        {\n            connection.Open();\n            using (var command = new SqlCommand("SELECT ID, Tag FROM Tags", connection))\n            using (var reader = command.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    tags[reader.GetString(1)] = reader.GetInt32(0);\n                }\n            }\n        }\n\n        return tags;\n    }\n\n    public void InsertNews(List<(string Title, string Tag)> newsList)\n    {\n        var newTags = new List<string>();\n\n        foreach (var news in newsList)\n        {\n            if (!_tagCache.ContainsKey(news.Tag) && !newTags.Contains(news.Tag))\n            {\n                newTags.Add(news.Tag);\n            }\n        }\n\n        if (newTags.Any())\n        {\n            InsertNewTags(newTags);\n        }\n\n        using (var bulkCopy = new SqlBulkCopy(_connectionString))\n        {\n            var dataTable = new DataTable();\n            dataTable.Columns.Add("Title", typeof(string));\n            dataTable.Columns.Add("TagID", typeof(int));\n\n            foreach (var news in newsList)\n            {\n                dataTable.Rows.Add(news.Title, _tagCache[news.Tag]);\n            }\n\n            bulkCopy.DestinationTableName = "News";\n            bulkCopy.WriteToServer(dataTable);\n        }\n    }\n\n    private void InsertNewTags(List<string> newTags)\n    {\n        using (var connection = new SqlConnection(_connectionString))\n        {\n            connection.Open();\n\n            foreach (var tag in newTags)\n            {\n                using (var command = new SqlCommand("INSERT INTO Tags (Tag) OUTPUT INSERTED.ID VALUES (@Tag)", connection))\n                {\n                    command.Parameters.AddWithValue("@Tag", tag);\n                    var tagId = (int)command.ExecuteScalar();\n                    _tagCache[tag] = tagId;\n                }\n            }\n        }\n    }\n}