using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        string textToEncrypt = "TEST STRING";\n\n        int keySize = 256;\n        string hashAlgorithm = "SHA1";\n        string passPhrase = "AH!PSB0%FGHR$";\n        string saltValue = "LRT%YUR#VBNL@1";\n        string initVector = "HR$2pIjHR$2pIj12"; // Ensure this is 16 bytes long\n\n        byte[] initVectorBytes = Encoding.ASCII.GetBytes(initVector);\n        byte[] saltValueBytes = Encoding.ASCII.GetBytes(saltValue);\n\n        byte[] plainTextBytes = Encoding.UTF8.GetBytes(textToEncrypt);\n\n        var password = new PasswordDeriveBytes(passPhrase, saltValueBytes, hashAlgorithm, 2);\n\n        byte[] keyBytes = password.GetBytes(keySize / 8);\n\n        RijndaelManaged symmetricKey = new RijndaelManaged();\n\n        symmetricKey.Mode = CipherMode.CBC;\n\n        ICryptoTransform encryptor = symmetricKey.CreateEncryptor(keyBytes, initVectorBytes);\n\n        MemoryStream memoryStream = new MemoryStream();\n\n        var cryptoStream = new CryptoStream(memoryStream, encryptor, CryptoStreamMode.Write);\n        cryptoStream.Write(plainTextBytes, 0, plainTextBytes.Length);\n\n        cryptoStream.FlushFinalBlock();\n\n        byte[] cipherTextBytes = memoryStream.ToArray();\n\n        memoryStream.Close();\n        cryptoStream.Close();\n\n        string cipherText = Convert.ToBase64String(cipherTextBytes);\n\n        Console.WriteLine("Encrypted text: " + cipherText);\n    }\n}