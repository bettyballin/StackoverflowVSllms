using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AESEncryption\n{\n    private static readonly string key = "your-encryption-key"; // 32 bytes for AES-256\n    private static readonly string iv = "your-encryption-iv"; // 16 bytes for AES\n\n    public static string Encrypt(string plainText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    return Convert.ToBase64String(msEncrypt.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string cipherText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}