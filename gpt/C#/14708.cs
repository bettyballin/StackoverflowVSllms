using System;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form\n{\n    private BackgroundWorker backgroundWorker;\n    private clsDownload download;\n\n    public MainForm()\n    {\n        InitializeComponent();\n        InitializeBackgroundWorker();\n        download = new clsDownload();\n    }\n\n    private void InitializeBackgroundWorker()\n    {\n        backgroundWorker = new BackgroundWorker\n        {\n            WorkerReportsProgress = true,\n            WorkerSupportsCancellation = true\n        };\n        backgroundWorker.DoWork += new DoWorkEventHandler(backgroundWorker_DoWork);\n        backgroundWorker.ProgressChanged += new ProgressChangedEventHandler(backgroundWorker_ProgressChanged);\n        backgroundWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker_RunWorkerCompleted);\n    }\n\n    private void startDownloadButton_Click(object sender, EventArgs e)\n    {\n        if (dataGridView.SelectedRows.Count > 0 && !backgroundWorker.IsBusy)\n        {\n            string fileUrl = dataGridView.SelectedRows[0].Cells["FileUrlColumn"].Value.ToString();\n            backgroundWorker.RunWorkerAsync(fileUrl);\n        }\n    }\n\n    private void backgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        string fileUrl = (string)e.Argument;\n        download.ProgressChanged += (s, progress) => backgroundWorker.ReportProgress(progress);\n        download.StartDownload(fileUrl);\n    }\n\n    private void backgroundWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n    {\n        progressBar.Value = e.ProgressPercentage;\n    }\n\n    private void backgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        MessageBox.Show("Download completed!");\n    }\n}