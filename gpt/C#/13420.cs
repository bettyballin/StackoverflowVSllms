using System;\nusing System.Runtime.InteropServices;\nusing System.Runtime.InteropServices.ComTypes;\n\n[ComVisible(true)]\n[Guid("YOUR_GUID_HERE")]\n[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\npublic interface ICustomEvents\n{\n    void SomeEvent(object sender, EventArgs e);\n}\n\n[ComVisible(true)]\n[Guid("YOUR_GUID_HERE")]\n[ClassInterface(ClassInterfaceType.None)]\npublic class EventSource : IConnectionPointContainer\n{\n    private class ConnectionPoint : IConnectionPoint\n    {\n        private readonly Guid _eventInterfaceId;\n        private readonly EventSource _parent;\n        private int _cookieCounter;\n        private readonly Dictionary<int, ICustomEvents> _sinks = new();\n\n        public ConnectionPoint(EventSource parent, Guid eventInterfaceId)\n        {\n            _parent = parent;\n            _eventInterfaceId = eventInterfaceId;\n        }\n\n        public void Advise(object pUnkSink, out int pdwCookie)\n        {\n            if (pUnkSink is ICustomEvents sink)\n            {\n                _cookieCounter++;\n                _sinks[_cookieCounter] = sink;\n                pdwCookie = _cookieCounter;\n            }\n            else\n            {\n                throw new InvalidCastException("Sink must implement ICustomEvents.");\n            }\n        }\n\n        public void Unadvise(int dwCookie)\n        {\n            if (_sinks.ContainsKey(dwCookie))\n            {\n                _sinks.Remove(dwCookie);\n            }\n        }\n\n        public void GetConnectionInterface(out Guid pIID)\n        {\n            pIID = _eventInterfaceId;\n        }\n\n        public void GetConnectionPointContainer(out IConnectionPointContainer ppCPC)\n        {\n            ppCPC = _parent;\n        }\n\n        public void EnumConnections(out IEnumConnections ppEnum)\n        {\n            throw new NotImplementedException();\n        }\n\n        public void FireEvent(object sender, EventArgs e)\n        {\n            foreach (var sink in _sinks.Values)\n            {\n                sink.SomeEvent(sender, e);\n            }\n        }\n    }\n\n    private readonly ConnectionPoint _connectionPoint;\n\n    public EventSource()\n    {\n        _connectionPoint = new ConnectionPoint(this, typeof(ICustomEvents).GUID);\n    }\n\n    public void FireEvent(object sender, EventArgs e)\n    {\n        _connectionPoint.FireEvent(sender, e);\n    }\n\n    public void EnumConnectionPoints(out IEnumConnectionPoints ppEnum)\n    {\n        throw new NotImplementedException();\n    }\n\n    public void FindConnectionPoint(ref Guid riid, out IConnectionPoint ppCP)\n    {\n        if (riid == typeof(ICustomEvents).GUID)\n        {\n            ppCP = _connectionPoint;\n        }\n        else\n        {\n            ppCP = null;\n        }\n    }\n}