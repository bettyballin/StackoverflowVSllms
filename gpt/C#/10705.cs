using System;\nusing System.Data;\nusing System.Data.SqlClient; // For SQL Server\nusing Oracle.ManagedDataAccess.Client; // For Oracle\n\npublic class DataSetExample\n{\n    public static void Main()\n    {\n        string sqlConnectionString = "Your SQL Server connection string here";\n        string oracleConnectionString = "Your Oracle connection string here";\n\n        // Choose which connection string to use at runtime\n        string chosenConnectionString = ChooseConnectionString();\n\n        using (IDbConnection connection = CreateConnection(chosenConnectionString))\n        {\n            DataSet dataSet = new DataSet();\n            \n            IDbDataAdapter dataAdapter = CreateDataAdapter(connection, dataSet);\n\n            connection.Open();\n            dataAdapter.Fill(dataSet);\n            connection.Close();\n\n            // Work with the DataSet\n        }\n    }\n\n    private static string ChooseConnectionString()\n    {\n        // Implement logic to choose between SQL Server or Oracle connection string\n        // For example, based on a configuration setting or application state\n        return sqlConnectionString; // Or return oracleConnectionString;\n    }\n\n    private static IDbConnection CreateConnection(string connectionString)\n    {\n        if (connectionString.Contains("User Id")) // Basic check to differentiate Oracle connection string\n        {\n            return new OracleConnection(connectionString);\n        }\n        else\n        {\n            return new SqlConnection(connectionString);\n        }\n    }\n\n    private static IDbDataAdapter CreateDataAdapter(IDbConnection connection, DataSet dataSet)\n    {\n        if (connection is OracleConnection)\n        {\n            return new OracleDataAdapter("SELECT * FROM YourTable", (OracleConnection)connection);\n        }\n        else\n        {\n            return new SqlDataAdapter("SELECT * FROM YourTable", (SqlConnection)connection);\n        }\n    }\n}