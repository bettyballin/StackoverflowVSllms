using System;\nusing System.Collections.Generic;\nusing System.Threading;\n\npublic class MonitoringApp\n{\n    private Dictionary<string, List<string>> companyServices;\n    private ServiceMonitor serviceMonitor;\n\n    public MonitoringApp()\n    {\n        companyServices = new Dictionary<string, List<string>>();\n        serviceMonitor = new ServiceMonitor();\n    }\n\n    public void AddService(string company, string serviceUrl)\n    {\n        if (!companyServices.ContainsKey(company))\n        {\n            companyServices[company] = new List<string>();\n        }\n        companyServices[company].Add(serviceUrl);\n    }\n\n    public void StartMonitoring()\n    {\n        while (true)\n        {\n            foreach (var company in companyServices.Keys)\n            {\n                Console.WriteLine($"Company: {company}");\n                foreach (var serviceUrl in companyServices[company])\n                {\n                    bool isAlive = serviceMonitor.IsServiceAlive(serviceUrl);\n                    string status = isAlive ? "Green" : "Red";\n                    Console.WriteLine($"> {serviceUrl} - {status}");\n                    \n                    if (!isAlive)\n                    {\n                        // Send notification (email/SMS)\n                        SendNotification(company, serviceUrl);\n                    }\n                }\n                Console.WriteLine();\n            }\n            Thread.Sleep(60000); // Check every minute\n        }\n    }\n\n    private void SendNotification(string company, string serviceUrl)\n    {\n        // Implement email/SMS notification logic here\n        Console.WriteLine($"Sending notification: {company} - {serviceUrl} is down!");\n    }\n}