using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EncryptionHelper\n{\n    public static string DecryptString(string cipherText, string key)\n    {\n        byte[] keyBytes = Encoding.UTF8.GetBytes(key);\n        byte[] cipherBytes = Convert.FromBase64String(cipherText);\n\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = keyBytes;\n            aesAlg.IV = new byte[16]; // Assuming initialization vector is zeros\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherBytes))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Usage\nstring key = "your-encryption-key";\nstring encryptedData = "ciphertext-from-client";\nstring decryptedData = EncryptionHelper.DecryptString(encryptedData, key);\nConsole.WriteLine("Decrypted Data: " + decryptedData);