public class PluginLoader\n{\n    public List<IPlugin> LoadPlugins(string folderPath)\n    {\n        var plugins = new List<IPlugin>();\n        var dllFiles = Directory.GetFiles(folderPath, "*.dll");\n\n        foreach (var dll in dllFiles)\n        {\n            var assembly = Assembly.LoadFrom(dll);\n            var types = assembly.GetTypes();\n\n            foreach (var type in types)\n            {\n                if (typeof(IPlugin).IsAssignableFrom(type) && !type.IsInterface)\n                {\n                    var plugin = (IPlugin)Activator.CreateInstance(type);\n                    plugins.Add(plugin);\n                }\n            }\n        }\n\n        return plugins;\n    }\n}