using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class MyCustomObj\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public int SortOrder { get; set; }\n}\n\npublic class SortManager\n{\n    private IList<MyCustomObj> _items;\n\n    public SortManager(IList<MyCustomObj> items)\n    {\n        _items = items;\n        InitializeSortOrder();\n    }\n\n    private void InitializeSortOrder()\n    {\n        int order = 1;\n        foreach (var item in _items)\n        {\n            item.SortOrder = order++;\n        }\n    }\n\n    public void MoveUp(int id)\n    {\n        var item = _items.SingleOrDefault(x => x.Id == id);\n        if (item == null || item.SortOrder == 1) return;\n\n        var previousItem = _items.SingleOrDefault(x => x.SortOrder == item.SortOrder - 1);\n        if (previousItem == null) return;\n\n        // Swap sort orders\n        int temp = item.SortOrder;\n        item.SortOrder = previousItem.SortOrder;\n        previousItem.SortOrder = temp;\n    }\n\n    public void MoveDown(int id)\n    {\n        var item = _items.SingleOrDefault(x => x.Id == id);\n        if (item == null || item.SortOrder == _items.Count) return;\n\n        var nextItem = _items.SingleOrDefault(x => x.SortOrder == item.SortOrder + 1);\n        if (nextItem == null) return;\n\n        // Swap sort orders\n        int temp = item.SortOrder;\n        item.SortOrder = nextItem.SortOrder;\n        nextItem.SortOrder = temp;\n    }\n\n    public IList<MyCustomObj> GetSortedItems()\n    {\n        return _items.OrderBy(x => x.SortOrder).ToList();\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        IList<MyCustomObj> items = new List<MyCustomObj>\n        {\n            new MyCustomObj { Id = 1, Name = "Apples" },\n            new MyCustomObj { Id = 2, Name = "Oranges" },\n            new MyCustomObj { Id = 3, Name = "Pears" },\n            new MyCustomObj { Id = 4, Name = "Banana" },\n            new MyCustomObj { Id = 5, Name = "Pineapples" }\n        };\n\n        var sortManager = new SortManager(items);\n\n        Console.WriteLine("Initial Order:");\n        foreach (var item in sortManager.GetSortedItems())\n        {\n            Console.WriteLine($"{item.SortOrder}: {item.Name}");\n        }\n\n        sortManager.MoveUp(3); // Move "Pears" up\n        sortManager.MoveDown(1); // Move "Apples" down\n\n        Console.WriteLine("\nUpdated Order:");\n        foreach (var item in sortManager.GetSortedItems())\n        {\n            Console.WriteLine($"{item.SortOrder}: {item.Name}");\n        }\n    }\n}