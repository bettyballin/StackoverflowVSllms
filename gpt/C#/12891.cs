public class Minesweeper\n     {\n         private int[,] board;\n         private bool[,] revealed;\n         private int rows, cols;\n\n         public Minesweeper(int rows, int cols, int mines)\n         {\n             this.rows = rows;\n             this.cols = cols;\n             board = new int[rows, cols];\n             revealed = new bool[rows, cols];\n             PlaceMines(mines);\n             CalculateNumbers();\n         }\n\n         private void PlaceMines(int mines)\n         {\n             Random rand = new Random();\n             for (int i = 0; i < mines; i++)\n             {\n                 int r, c;\n                 do\n                 {\n                     r = rand.Next(rows);\n                     c = rand.Next(cols);\n                 } while (board[r, c] == -1);\n                 board[r, c] = -1;\n             }\n         }\n\n         private void CalculateNumbers()\n         {\n             for (int r = 0; r < rows; r++)\n             {\n                 for (int c = 0; c < cols; c++)\n                 {\n                     if (board[r, c] == -1) continue;\n                     board[r, c] = CountAdjacentMines(r, c);\n                 }\n             }\n         }\n\n         private int CountAdjacentMines(int row, int col)\n         {\n             int count = 0;\n             for (int r = row - 1; r <= row + 1; r++)\n             {\n                 for (int c = col - 1; c <= col + 1; c++)\n                 {\n                     if (r >= 0 && r < rows && c >= 0 && c < cols && board[r, c] == -1)\n                         count++;\n                 }\n             }\n             return count;\n         }\n     }