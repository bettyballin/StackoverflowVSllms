public class SpaceQuadrant : PersistentObject\n{\n    public SpaceQuadrant()\n    {\n        Space = new Dictionary<SpaceCoordinate, SpaceObject>();\n    }\n\n    public virtual Dictionary<SpaceCoordinate, SpaceObject> Space { get; set; }\n}\n\n// Assume SpaceCoordinate and SpaceObject are defined elsewhere\n\npublic void LoadSpaceQuadrant(int quadrantId)\n{\n    var spaceQuadrant = new SpaceQuadrant();\n    \n    // Assuming you have a method to execute SQL and map results to objects\n    var mappings = ExecuteQuery<SpaceMapping>(\n        "SELECT CoordinateID, ObjectID FROM SpaceMapping WHERE QuadrantID = @QuadrantID", \n        new { QuadrantID = quadrantId });\n\n    foreach (var mapping in mappings)\n    {\n        var coordinate = ExecuteQuery<SpaceCoordinate>(\n            "SELECT * FROM SpaceCoordinate WHERE ID = @ID", \n            new { ID = mapping.CoordinateID }).FirstOrDefault();\n        \n        var spaceObject = ExecuteQuery<SpaceObject>(\n            "SELECT * FROM SpaceObject WHERE ID = @ID", \n            new { ID = mapping.ObjectID }).FirstOrDefault();\n        \n        spaceQuadrant.Space.Add(coordinate, spaceObject);\n    }\n}