using System;\nusing NMock;\nusing NMock.Actions;\n\npublic class SetByRefAction : IAction\n{\n    private readonly int _parameterIndex;\n    private readonly object _value;\n\n    public SetByRefAction(int parameterIndex, object value)\n    {\n        _parameterIndex = parameterIndex;\n        _value = value;\n    }\n\n    public void Invoke(Invocation invocation)\n    {\n        invocation.Parameters[_parameterIndex] = _value;\n    }\n\n    public void DescribeTo(System.IO.TextWriter writer)\n    {\n        writer.Write($"set parameter at index {_parameterIndex} to {_value}");\n    }\n}\n\npublic interface IMyApi\n{\n    void MyMethod(ref int byRefParam);\n}\n\npublic class MyTest\n{\n    public void TestMyMethod()\n    {\n        MockFactory mockFactory = new MockFactory();\n        Mock<IMyApi> mockApi = mockFactory.CreateMock<IMyApi>();\n\n        int expectedValue = 42;\n        \n        mockApi.Expects.One.Method(x => x.MyMethod(ref expectedValue))\n                      .Will(new SetByRefAction(0, expectedValue));\n\n        int actualValue = 0;\n        mockApi.MockObject.MyMethod(ref actualValue);\n\n        Console.WriteLine(actualValue); // Should print 42\n    }\n}