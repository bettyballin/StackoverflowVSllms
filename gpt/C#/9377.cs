using System;\nusing System.IO;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        string host = "example.com";\n        int port = 80;\n        string request = "GET / HTTP/1.1\r\n" +\n                         "Host: " + host + "\r\n" +\n                         "Connection: close\r\n\r\n";\n\n        using (TcpClient client = new TcpClient(host, port))\n        using (NetworkStream stream = client.GetStream())\n        using (StreamWriter writer = new StreamWriter(stream, Encoding.ASCII))\n        using (StreamReader reader = new StreamReader(stream, Encoding.ASCII))\n        {\n            // Send the request\n            writer.Write(request);\n            writer.Flush();\n\n            // Read the response headers\n            string responseLine;\n            while (!string.IsNullOrWhiteSpace(responseLine = reader.ReadLine()))\n            {\n                Console.WriteLine(responseLine);\n                \n                // Stop reading headers once an empty line is reached\n                if (responseLine == "\r\n" || responseLine == "")\n                    break;\n            }\n\n            // Read the chunked response body\n            while (true)\n            {\n                // Read the chunk size in hex\n                string chunkSizeLine = reader.ReadLine();\n                if (string.IsNullOrEmpty(chunkSizeLine))\n                    break;\n\n                int chunkSize = int.Parse(chunkSizeLine, System.Globalization.NumberStyles.HexNumber);\n                if (chunkSize == 0)\n                    break;\n\n                // Read the chunk data\n                char[] chunkData = new char[chunkSize];\n                int bytesRead = 0;\n                while (bytesRead < chunkSize)\n                {\n                    int read = reader.Read(chunkData, bytesRead, chunkSize - bytesRead);\n                    if (read <= 0)\n                        throw new EndOfStreamException("Unexpected end of stream");\n                    bytesRead += read;\n                }\n\n                // Output the chunk data\n                Console.Write(new string(chunkData));\n\n                // Read the trailing CRLF\n                reader.ReadLine();\n            }\n        }\n    }\n}