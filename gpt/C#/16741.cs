using System;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.ScriptManager;\n\nnamespace CustomControls\n{\n    [ToolboxData("<{0}:AjaxButton runat=server></{0}:AjaxButton>")]\n    public class AjaxButton : WebControl, ICallbackEventHandler\n    {\n        private string _callbackResult;\n\n        protected override void OnPreRender(EventArgs e)\n        {\n            base.OnPreRender(e);\n            if (!Page.ClientScript.IsClientScriptBlockRegistered("AjaxButtonScript"))\n            {\n                string script = @"\n                    function CallServerMethod(arg, context) {\n                        var prm = Sys.WebForms.PageRequestManager.getInstance();\n                        prm._doPostBack(arg, context);\n                    }";\n                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "AjaxButtonScript", script, true);\n            }\n\n            string clientScript = Page.ClientScript.GetCallbackEventReference(this, "arg", "ReceiveServerData", "context");\n            string callbackScript = $"function CallServer(arg, context) {{ {clientScript}; }}";\n\n            Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "CallServerScript", callbackScript, true);\n        }\n\n        protected override void Render(HtmlTextWriter writer)\n        {\n            writer.AddAttribute(HtmlTextWriterAttribute.Onclick, "CallServer('Hello', '');");\n            writer.RenderBeginTag(HtmlTextWriterTag.Button);\n            writer.Write("Click Me");\n            writer.RenderEndTag();\n        }\n\n        public void RaiseCallbackEvent(string eventArgument)\n        {\n            _callbackResult = $"Server received: {eventArgument}";\n        }\n\n        public string GetCallbackResult()\n        {\n            return _callbackResult;\n        }\n    }\n}