using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EncryptionHelper\n{\n    public static string Decrypt(string cipherText, string key)\n    {\n        byte[] fullCipher = Convert.FromBase64String(cipherText);\n        using (Aes aesAlg = Aes.Create())\n        {\n            byte[] iv = new byte[aesAlg.BlockSize / 8];\n            byte[] cipher = new byte[fullCipher.Length - iv.Length];\n\n            Buffer.BlockCopy(fullCipher, 0, iv, 0, iv.Length);\n            Buffer.BlockCopy(fullCipher, iv.Length, cipher, 0, cipher.Length);\n\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = iv;\n\n            using (var decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV))\n            {\n                using (var msDecrypt = new System.IO.MemoryStream(cipher))\n                {\n                    using (var csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                    {\n                        using (var srDecrypt = new System.IO.StreamReader(csDecrypt))\n                        {\n                            return srDecrypt.ReadToEnd();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}