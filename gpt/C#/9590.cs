using System;\nusing System.Collections.Generic;\n\npublic static class IListExtensions\n{\n    public static int BinarySearch<T>(this IList<T> list, T value) where T : IComparable<T>\n    {\n        if (list == null)\n            throw new ArgumentNullException(nameof(list));\n\n        int left = 0;\n        int right = list.Count - 1;\n\n        while (left <= right)\n        {\n            int middle = left + (right - left) / 2;\n            int comparison = list[middle].CompareTo(value);\n\n            if (comparison == 0)\n                return middle;\n            if (comparison < 0)\n                left = middle + 1;\n            else\n                right = middle - 1;\n        }\n\n        return ~left; // If not found, ~left will be the insertion point\n    }\n}