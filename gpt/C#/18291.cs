using DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Spreadsheet;\nusing System.Linq;\n\npublic static void UpdateCell(string docName, string sheetName, string text, uint rowIndex, string columnName)\n{\n    // Open the document for editing.\n    using (SpreadsheetDocument spreadSheet = SpreadsheetDocument.Open(docName, true))\n    {\n        // Retrieve a reference to the workbook part.\n        WorkbookPart workbookPart = spreadSheet.WorkbookPart;\n\n        // Find the sheet with the supplied name, and then get the associated worksheet part.\n        Sheet sheet = workbookPart.Workbook.Descendants<Sheet>().FirstOrDefault(s => s.Name == sheetName);\n        if (sheet == null)\n        {\n            throw new ArgumentException("The specified sheet does not exist.");\n        }\n\n        WorksheetPart worksheetPart = (WorksheetPart)(workbookPart.GetPartById(sheet.Id));\n        SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();\n\n        // If the worksheet does not contain a row with the specified row index, insert one.\n        Row row;\n        if (sheetData.Elements<Row>().Where(r => r.RowIndex == rowIndex).Count() != 0)\n        {\n            row = sheetData.Elements<Row>().Where(r => r.RowIndex == rowIndex).First();\n        }\n        else\n        {\n            row = new Row() { RowIndex = rowIndex };\n            sheetData.Append(row);\n        }\n\n        // If there is not a cell with the specified column name, insert one.\n        Cell cell;\n        if (row.Elements<Cell>().Where(c => c.CellReference.Value == columnName + rowIndex).Count() > 0)\n        {\n            cell = row.Elements<Cell>().Where(c => c.CellReference.Value == columnName + rowIndex).First();\n        }\n        else\n        {\n            Cell refCell = null;\n            foreach (Cell c in row.Elements<Cell>())\n            {\n                if (string.Compare(c.CellReference.Value, columnName + rowIndex, true) > 0)\n                {\n                    refCell = c;\n                    break;\n                }\n            }\n\n            cell = new Cell() { CellReference = columnName + rowIndex };\n            row.InsertBefore(cell, refCell);\n        }\n\n        // Set the cell value.\n        cell.CellValue = new CellValue(text);\n        cell.DataType = new EnumValue<CellValues>(CellValues.String);\n\n        // Save the worksheet.\n        worksheetPart.Worksheet.Save();\n    }\n}