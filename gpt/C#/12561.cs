using System;\nusing System.Threading;\nusing NUnit.Framework;\n\n[TestFixture]\npublic class MultiThreadedTests\n{\n    private object _lock = new object();\n    private int _sharedResource;\n\n    [SetUp]\n    public void SetUp()\n    {\n        _sharedResource = 0;\n    }\n\n    [Test]\n    public void TestMultiThreadedAccess()\n    {\n        int threadCount = 10;\n        Thread[] threads = new Thread[threadCount];\n\n        for (int i = 0; i < threadCount; i++)\n        {\n            threads[i] = new Thread(new ThreadStart(IncrementSharedResource));\n            threads[i].Start();\n        }\n\n        foreach (Thread thread in threads)\n        {\n            thread.Join();\n        }\n\n        Assert.AreEqual(threadCount * 1000, _sharedResource);\n    }\n\n    private void IncrementSharedResource()\n    {\n        for (int i = 0; i < 1000; i++)\n        {\n            lock (_lock)\n            {\n                _sharedResource++;\n            }\n        }\n    }\n}