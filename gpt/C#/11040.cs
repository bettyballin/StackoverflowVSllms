using Disruptor;\nusing Disruptor.Dsl;\nusing System;\n\npublic class ExampleEvent\n{\n    public long Value { get; set; }\n}\n\npublic class ExampleEventHandler : IEventHandler<ExampleEvent>\n{\n    public void OnEvent(ExampleEvent data, long sequence, bool endOfBatch)\n    {\n        Console.WriteLine($"Processed: {data.Value}");\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var disruptor = new Disruptor<ExampleEvent>(() => new ExampleEvent(), 1024);\n        disruptor.HandleEventsWith(new ExampleEventHandler());\n        disruptor.Start();\n\n        var ringBuffer = disruptor.RingBuffer;\n        var sequence = ringBuffer.Next();\n        var evt = ringBuffer[sequence];\n        evt.Value = 42;\n        ringBuffer.Publish(sequence);\n\n        disruptor.Shutdown();\n    }\n}