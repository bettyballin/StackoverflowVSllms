using System;\nusing System.ComponentModel;\nusing System.IO;\n\npublic class YourClass\n{\n    private BackgroundWorker worker = new BackgroundWorker();\n\n    public YourClass()\n    {\n        worker.DoWork += new DoWorkEventHandler(worker_DoWork);\n        worker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(worker_RunWorkerCompleted);\n    }\n\n    public void StartWorker()\n    {\n        worker.RunWorkerAsync();\n    }\n\n    private void worker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        try\n        {\n            Log("BackgroundWorker started.");\n            // Your long-running code here\n            UpdateDatabaseSchema();\n            Log("BackgroundWorker completed successfully.");\n        }\n        catch (Exception ex)\n        {\n            Log($"Exception in BackgroundWorker: {ex.Message}");\n        }\n    }\n\n    private void worker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        if (e.Error != null)\n        {\n            Log($"RunWorkerCompleted encountered an error: {e.Error.Message}");\n        }\n        else\n        {\n            Log("RunWorkerCompleted finished without error.");\n        }\n    }\n\n    private void UpdateDatabaseSchema()\n    {\n        // Your database update logic here\n    }\n\n    private void Log(string message)\n    {\n        string path = @"C:\Logs\WorkerLog.txt";\n        using (StreamWriter sw = File.AppendText(path))\n        {\n            sw.WriteLine($"{DateTime.Now}: {message}");\n        }\n    }\n}