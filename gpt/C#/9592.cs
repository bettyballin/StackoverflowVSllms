using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryptionService\n{\n    private readonly byte[] Key;\n    private readonly byte[] IV;\n\n    public AesEncryptionService(string key, string iv)\n    {\n        Key = Convert.FromBase64String(key);\n        IV = Convert.FromBase64String(iv);\n    }\n\n    public string Encrypt(string plainText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n\n                    return Convert.ToBase64String(ms.ToArray());\n                }\n            }\n        }\n    }\n\n    public string Decrypt(string cipherText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Usage\nvar key = "your-base64-encoded-key"; // Use a secure method to generate and store this key\nvar iv = "your-base64-encoded-iv";   // Use a secure method to generate and store this IV\nvar encryptionService = new AesEncryptionService(key, iv);\n\nstring password = "user-password";\nstring encryptedPassword = encryptionService.Encrypt(password);\nstring decryptedPassword = encryptionService.Decrypt(encryptedPassword);\n\nConsole.WriteLine($"Original: {password}");\nConsole.WriteLine($"Encrypted: {encryptedPassword}");\nConsole.WriteLine($"Decrypted: {decryptedPassword}");