public static class QueryExtensions\n{\n    public static void SetInt32(this IQuery query, int position, int? val)\n    {\n        if (val.HasValue)\n        {\n            query.SetInt32(position, val.Value);\n        }\n        else\n        {\n            query.SetParameter(position, null, NHibernateUtil.Int32);\n        }\n    }\n\n    public static void SetInt32(this IQuery query, string name, int? val)\n    {\n        if (val.HasValue)\n        {\n            query.SetInt32(name, val.Value);\n        }\n        else\n        {\n            query.SetParameter(name, null, NHibernateUtil.Int32);\n        }\n    }\n\n    public static void SetDateTime(this IQuery query, int position, DateTime? val)\n    {\n        if (val.HasValue)\n        {\n            query.SetDateTime(position, val.Value);\n        }\n        else\n        {\n            query.SetParameter(position, null, NHibernateUtil.DateTime);\n        }\n    }\n\n    public static void SetDateTime(this IQuery query, string name, DateTime? val)\n    {\n        if (val.HasValue)\n        {\n            query.SetDateTime(name, val.Value);\n        }\n        else\n        {\n            query.SetParameter(name, null, NHibernateUtil.DateTime);\n        }\n    }\n\n    // You can add similar methods for other types as needed\n}