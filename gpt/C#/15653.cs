using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Security.Authentication;\nusing System.Net.Security;\n\nclass SslTcpServer\n{\n    static X509Certificate serverCertificate = null;\n\n    public static void RunServer(string certificatePath, string certificatePassword)\n    {\n        serverCertificate = new X509Certificate2(certificatePath, certificatePassword);\n\n        TcpListener listener = new TcpListener(IPAddress.Any, 443);\n        listener.Start();\n        while (true)\n        {\n            Console.WriteLine("Waiting for a client to connect...");\n            TcpClient client = listener.AcceptTcpClient();\n            ProcessClient(client);\n        }\n    }\n\n    static void ProcessClient(TcpClient client)\n    {\n        SslStream sslStream = new SslStream(client.GetStream(), false);\n        try\n        {\n            sslStream.AuthenticateAsServer(serverCertificate, clientCertificateRequired: false, checkCertificateRevocation: true);\n            // Communication with the client goes here.\n        }\n        catch (AuthenticationException e)\n        {\n            Console.WriteLine("Exception: {0}", e.Message);\n            if (e.InnerException != null)\n            {\n                Console.WriteLine("Inner exception: {0}", e.InnerException.Message);\n            }\n            Console.WriteLine("Authentication failed - closing the connection.");\n            sslStream.Close();\n            client.Close();\n            return;\n        }\n    }\n}