using System;\nusing System.Collections.Concurrent;\nusing System.Reflection;\n\npublic class ReflectionCache\n{\n    private static ConcurrentDictionary<string, PropertyInfo> propertyCache = new ConcurrentDictionary<string, PropertyInfo>();\n\n    public static PropertyInfo GetPropertyInfo(Type type, string propertyName)\n    {\n        string key = $"{type.FullName}.{propertyName}";\n        return propertyCache.GetOrAdd(key, _ => type.GetProperty(propertyName));\n    }\n}\n\npublic class Example\n{\n    public int MyProperty { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        Example example = new Example();\n        PropertyInfo propInfo = ReflectionCache.GetPropertyInfo(typeof(Example), "MyProperty");\n        propInfo.SetValue(example, 42);\n        Console.WriteLine(example.MyProperty); // Output: 42\n    }\n}