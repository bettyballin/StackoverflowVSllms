using System;\nusing System.Windows.Forms;\nusing System.Diagnostics;\nusing System.Threading;\n\nnamespace TestMessageBox\n{\n    class Program\n    {\n        private WindowWrapper notepad;\n        private static MessageBoxForm messageBoxForm;\n\n        Program(IntPtr handle)\n        { \n            notepad = new WindowWrapper(handle); \n        }\n\n        static void Main(string[] args)\n        {\n            Process[] procs = Process.GetProcessesByName("notepad");\n            if (procs.Length > 0)\n            {\n                Console.WriteLine("Notepad detected...");\n                Program program = new Program(procs[0].MainWindowHandle);\n                AppDomain.CurrentDomain.ProcessExit += new EventHandler(CurrentDomain_ProcessExit);\n                Thread thread = new Thread(new ThreadStart(program.ShowMessage));\n                thread.IsBackground = true;\n                thread.Start();\n                Console.Write("Press any key to end the program and lock notepad...");\n                Console.ReadKey();\n            }\n        }\n\n        void ShowMessage()\n        { \n            messageBoxForm = new MessageBoxForm(notepad, "If this is open when the program ends\nit will lock up notepad...");\n            Application.Run(messageBoxForm);\n        }\n\n        static void CurrentDomain_ProcessExit(object sender, EventArgs e)\n        {\n            if (messageBoxForm != null && messageBoxForm.InvokeRequired)\n            {\n                messageBoxForm.Invoke(new MethodInvoker(() => messageBoxForm.Close()));\n            }\n            else\n            {\n                messageBoxForm?.Close();\n            }\n        }\n    }\n\n    /// <summary>\n    /// Wrapper class so that we can return an IWin32Window given a hwnd\n    /// </summary>\n    public class WindowWrapper : System.Windows.Forms.IWin32Window\n    {\n        public WindowWrapper(IntPtr handle)\n        { \n            _hwnd = handle; \n        }\n\n        public IntPtr Handle\n        { \n            get { return _hwnd; } \n        }\n\n        private IntPtr _hwnd;\n    }\n\n    public class MessageBoxForm : Form\n    {\n        public MessageBoxForm(IWin32Window owner, string message)\n        {\n            this.FormBorderStyle = FormBorderStyle.None;\n            this.Shown += (s, e) => MessageBox.Show(owner, message);\n        }\n    }\n}