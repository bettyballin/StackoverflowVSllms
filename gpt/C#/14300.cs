using System;\nusing System.Collections.Generic;\n\npublic class WiFiPositioning\n{\n    private Dictionary<string, List<int>> radioMap = new Dictionary<string, List<int>>();\n\n    public void AddFingerprint(string location, List<int> signalStrengths)\n    {\n        radioMap[location] = signalStrengths;\n    }\n\n    public string EstimateLocation(List<int> currentSignalStrengths)\n    {\n        double minDistance = double.MaxValue;\n        string estimatedLocation = null;\n\n        foreach (var entry in radioMap)\n        {\n            double distance = CalculateEuclideanDistance(entry.Value, currentSignalStrengths);\n            if (distance < minDistance)\n            {\n                minDistance = distance;\n                estimatedLocation = entry.Key;\n            }\n        }\n\n        return estimatedLocation;\n    }\n\n    private double CalculateEuclideanDistance(List<int> a, List<int> b)\n    {\n        double sum = 0;\n        for (int i = 0; i < a.Count; i++)\n        {\n            sum += Math.Pow(a[i] - b[i], 2);\n        }\n        return Math.Sqrt(sum);\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        WiFiPositioning positioning = new WiFiPositioning();\n        \n        // Adding fingerprints\n        positioning.AddFingerprint("Room 101", new List<int>{ -50, -60, -70 });\n        positioning.AddFingerprint("Room 102", new List<int>{ -80, -70, -60 });\n\n        // Estimating location\n        List<int> currentSignals = new List<int>{ -55, -65, -75 };\n        string location = positioning.EstimateLocation(currentSignals);\n        Console.WriteLine("Estimated Location: " + location);\n    }\n}