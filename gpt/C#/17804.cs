using System;\nusing System.Drawing;\nusing System.Threading;\nusing System.Windows.Forms;\n\npublic class MyForm : Form\n{\n    private Rectangle innerRectangle = new Rectangle(50, 50, 100, 100);\n    private bool drawRectangle = true;\n\n    public MyForm()\n    {\n        this.Paint += new PaintEventHandler(this.MyForm_Paint);\n    }\n\n    private void MyForm_Paint(object sender, PaintEventArgs e)\n    {\n        if (drawRectangle)\n        {\n            using (Pen p = new Pen(Color.Black))\n            {\n                e.Graphics.DrawRectangle(p, innerRectangle);\n            }\n        }\n        else\n        {\n            // Redraw the background or the underlying graphic here\n            e.Graphics.FillRectangle(new SolidBrush(this.BackColor), innerRectangle);\n        }\n    }\n\n    protected override void OnShown(EventArgs e)\n    {\n        base.OnShown(e);\n\n        using (Graphics graphics = this.CreateGraphics())\n        {\n            using (Pen p = new Pen(Color.Black))\n            {\n                graphics.DrawRectangle(p, innerRectangle);\n            }\n        }\n\n        Thread.Sleep(75);\n\n        drawRectangle = false;\n        this.Invalidate(innerRectangle);\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.Run(new MyForm());\n    }\n}