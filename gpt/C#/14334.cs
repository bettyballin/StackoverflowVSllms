using System;\nusing System.Collections.Generic;\n\npublic class PrimeGenerator\n{\n    public static List<int> GeneratePrimes(int n)\n    {\n        if (n < 2)\n            throw new ArgumentException("n must be greater than 1");\n\n        List<int> primes = new List<int>();\n        int limit = GetApproximateNthPrime(n);\n        bool[] isPrime = new bool[limit + 1];\n        for (int i = 2; i <= limit; i++) isPrime[i] = true;\n\n        for (int i = 2; i <= limit; i++)\n        {\n            if (isPrime[i])\n            {\n                primes.Add(i);\n                if (primes.Count == n) break;\n                for (int j = i * 2; j <= limit; j += i)\n                {\n                    isPrime[j] = false;\n                }\n            }\n        }\n\n        return primes;\n    }\n\n    private static int GetApproximateNthPrime(int n)\n    {\n        if (n < 6) return 15;\n        return (int)(n * (Math.Log(n) + Math.Log(Math.Log(n))));\n    }\n}\n\n// Example usage\nclass Program\n{\n    static void Main()\n    {\n        var primes = PrimeGenerator.GeneratePrimes(5);\n        Console.WriteLine(string.Join(", ", primes));\n    }\n}