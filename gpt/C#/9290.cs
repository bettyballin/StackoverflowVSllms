using System;\nusing PacketDotNet;\nusing SharpPcap;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Get the list of devices\n        var devices = CaptureDeviceList.Instance;\n\n        if (devices.Count < 1)\n        {\n            Console.WriteLine("No devices were found on this machine");\n            return;\n        }\n\n        // Use the first device\n        var device = devices[0];\n\n        // Register our handler function to the "packet arrival" event\n        device.OnPacketArrival += new PacketArrivalEventHandler(OnPacketArrival);\n\n        // Open the device for capturing\n        device.Open(DeviceMode.Promiscuous, 1000);\n        \n        // Start capturing packets\n        device.StartCapture();\n\n        Console.WriteLine("Press Enter to stop capturing...");\n        Console.ReadLine();\n\n        // Stop capturing packets\n        device.StopCapture();\n        device.Close();\n    }\n\n    private static void OnPacketArrival(object sender, CaptureEventArgs e)\n    {\n        var packet = Packet.ParsePacket(e.Packet.LinkLayerType, e.Packet.Data);\n        var tcpPacket = packet.Extract<TcpPacket>();\n\n        if (tcpPacket != null)\n        {\n            // Example: Check for packets to a specific website or IP\n            string targetIpAddress = "93.184.216.34"; // example.com IP address\n            if (tcpPacket.DestinationAddress.ToString() == targetIpAddress)\n            {\n                Console.WriteLine($"Blocked packet to {targetIpAddress}");\n                // Logic to block the packet would go here\n                // Note: For actual blocking, you would need to use a different method/API\n            }\n            else\n            {\n                Console.WriteLine($"Captured TCP packet: {tcpPacket}");\n            }\n        }\n    }\n}