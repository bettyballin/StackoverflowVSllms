public class WidgetCollection\n{\n    private Dictionary<string, Widget> pathToWidgetMap;\n    private HashSet<Widget> widgets;\n\n    public WidgetCollection()\n    {\n        pathToWidgetMap = new Dictionary<string, Widget>();\n        widgets = new HashSet<Widget>();\n    }\n\n    public void AddWidget(string filePath, Widget widget)\n    {\n        if (pathToWidgetMap.ContainsKey(filePath))\n        {\n            throw new InvalidOperationException("A widget with this file path already exists.");\n        }\n        pathToWidgetMap[filePath] = widget;\n        widgets.Add(widget);\n    }\n\n    public Widget GetWidgetByFilePath(string filePath)\n    {\n        if (pathToWidgetMap.TryGetValue(filePath, out var widget))\n        {\n            return widget;\n        }\n        return null;\n    }\n\n    public void ChangeFilePath(Widget widget, string newFilePath)\n    {\n        if (!widgets.Contains(widget))\n        {\n            throw new InvalidOperationException("The widget does not exist in the collection.");\n        }\n\n        // Find the old file path\n        var oldFilePath = pathToWidgetMap.FirstOrDefault(kv => kv.Value == widget).Key;\n        if (oldFilePath != null)\n        {\n            pathToWidgetMap.Remove(oldFilePath);\n        }\n\n        pathToWidgetMap[newFilePath] = widget;\n    }\n\n    public string GetFilePath(Widget widget)\n    {\n        var filePath = pathToWidgetMap.FirstOrDefault(kv => kv.Value == widget).Key;\n        return filePath ?? string.Empty;\n    }\n}\n\npublic class Widget\n{\n    // Widget implementation\n}