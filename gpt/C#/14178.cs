using System;\nusing System.Threading;\n\nclass ConditionSynchronizationExample\n{\n    private static readonly object _lock = new object();\n    private static bool _conditionMet = false;\n\n    static void Main()\n    {\n        Thread thread1 = new Thread(WaitForCondition);\n        Thread thread2 = new Thread(MeetCondition);\n\n        thread1.Start();\n        thread2.Start();\n\n        thread1.Join();\n        thread2.Join();\n    }\n\n    private static void WaitForCondition()\n    {\n        lock (_lock)\n        {\n            while (!_conditionMet)\n            {\n                Console.WriteLine("Thread 1: Waiting for condition to be met...");\n                Monitor.Wait(_lock); // Wait and release the lock\n            }\n            Console.WriteLine("Thread 1: Condition met, proceeding...");\n        }\n    }\n\n    private static void MeetCondition()\n    {\n        lock (_lock)\n        {\n            Console.WriteLine("Thread 2: Meeting the condition...");\n            _conditionMet = true;\n            Monitor.Pulse(_lock); // Signal that the condition is met\n        }\n    }\n}