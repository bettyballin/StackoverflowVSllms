public class UserViewModel : INotifyPropertyChanged, IDataErrorInfo\n{\n    private string _username;\n    private string _email;\n\n    public string Username\n    {\n        get { return _username; }\n        set\n        {\n            _username = value;\n            OnPropertyChanged(nameof(Username));\n        }\n    }\n\n    public string Email\n    {\n        get { return _email; }\n        set\n        {\n            _email = value;\n            OnPropertyChanged(nameof(Email));\n        }\n    }\n\n    public string this[string columnName]\n    {\n        get\n        {\n            string result = string.Empty;\n            switch (columnName)\n            {\n                case nameof(Username):\n                    if (string.IsNullOrWhiteSpace(Username))\n                    {\n                        result = "Username is required.";\n                    }\n                    break;\n                case nameof(Email):\n                    if (string.IsNullOrWhiteSpace(Email))\n                    {\n                        result = "Email is required.";\n                    }\n                    else if (!IsValidEmail(Email))\n                    {\n                        result = "Invalid email format.";\n                    }\n                    break;\n            }\n            return result;\n        }\n    }\n\n    public string Error => null;\n\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    protected void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    private bool IsValidEmail(string email)\n    {\n        try\n        {\n            var addr = new System.Net.Mail.MailAddress(email);\n            return addr.Address == email;\n        }\n        catch\n        {\n            return false;\n        }\n    }\n}