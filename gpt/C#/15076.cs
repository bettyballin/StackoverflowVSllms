public class SqlQueryHandler\n{\n    private readonly string _connectionString;\n\n    public SqlQueryHandler(string connectionString)\n    {\n        _connectionString = connectionString;\n    }\n\n    public DataTable ExecuteUserQuery(string userQuery)\n    {\n        // Validate the query\n        if (!IsValidQuery(userQuery))\n        {\n            throw new InvalidOperationException("Invalid SQL query.");\n        }\n\n        // Execute the query\n        using (SqlConnection connection = new SqlConnection(_connectionString))\n        {\n            using (SqlCommand command = new SqlCommand(userQuery, connection))\n            {\n                connection.Open();\n                SqlDataAdapter adapter = new SqlDataAdapter(command);\n                DataTable resultTable = new DataTable();\n                adapter.Fill(resultTable);\n                return resultTable;\n            }\n        }\n    }\n\n    private bool IsValidQuery(string query)\n    {\n        // Basic checks\n        if (string.IsNullOrWhiteSpace(query))\n            return false;\n\n        // Ensure the query starts with "SELECT" or "UPDATE"\n        string upperQuery = query.Trim().ToUpper();\n        if (!upperQuery.StartsWith("SELECT") && !upperQuery.StartsWith("UPDATE"))\n            return false;\n\n        // Ensure no semicolons outside of quotes\n        if (ContainsSemicolonsOutsideQuotes(query))\n            return false;\n\n        // Further validation with a SQL parser or custom logic\n        // ...\n\n        return true;\n    }\n\n    private bool ContainsSemicolonsOutsideQuotes(string query)\n    {\n        bool insideQuotes = false;\n        for (int i = 0; i < query.Length; i++)\n        {\n            if (query[i] == '\'')\n                insideQuotes = !insideQuotes;\n            else if (query[i] == ';' && !insideQuotes)\n                return true;\n        }\n        return false;\n    }\n}