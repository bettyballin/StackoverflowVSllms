using System;\nusing System.Collections.Generic;\nusing System.Net.Sockets;\nusing System.Net.Security;\nusing System.Security.Authentication;\nusing System.Security.Cryptography.X509Certificates;\n\nnamespace Node\n{\n    public static class SSLCommunicator\n    {\n        static TcpClient client = null;\n        static SslStream sslStream = null;\n        static List<byte> networkStreamInput = new List<byte>();\n\n        public static void connect(string server, Int32 port)\n        {\n            try\n            {\n                client = new TcpClient(server, port);\n                sslStream = new SslStream(client.GetStream(), false);\n                sslStream.AuthenticateAsClient(server);\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n        }\n\n        public static List<DataBlock> getServerInput()\n        {\n            List<DataBlock> ret = new List<DataBlock>();\n            try\n            {\n                if (sslStream.CanRead)\n                {\n                    NetworkStream networkStream = client.GetStream();\n                    if (networkStream.DataAvailable)\n                    {\n                        byte[] readBuffer = new byte[1024];\n                        int numberOfBytesRead = 0;\n                        do\n                        {\n                            numberOfBytesRead = sslStream.Read(readBuffer, 0, readBuffer.Length);\n                            byte[] tmp = new byte[numberOfBytesRead];\n                            Array.Copy(readBuffer, tmp, numberOfBytesRead);\n                            networkStreamInput.AddRange(tmp);\n                        } while (networkStream.DataAvailable);\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n            return ret;\n        }\n    }\n\n    public class DataBlock\n    {\n        // Define your DataBlock class here\n    }\n}