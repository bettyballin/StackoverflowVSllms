using System;\nusing System.Collections.Generic;\n\npublic class Product\n{\n    public double Price { get; set; }\n    public int Energy { get; set; }\n}\n\npublic class Knapsack\n{\n    public static (List<Product>, int) FindBestCombination(List<Product> products, int maxItems, double maxPrice)\n    {\n        int n = products.Count;\n        int[][] dp = new int[maxItems + 1][];\n        for (int i = 0; i <= maxItems; i++)\n            dp[i] = new int[(int)(maxPrice * 100) + 1];\n\n        for (int i = 0; i < n; i++)\n        {\n            int productPrice = (int)(products[i].Price * 100);\n            for (int j = maxItems; j >= 1; j--)\n            {\n                for (int k = (int)(maxPrice * 100); k >= productPrice; k--)\n                {\n                    dp[j][k] = Math.Max(dp[j][k], dp[j - 1][k - productPrice] + products[i].Energy);\n                }\n            }\n        }\n\n        List<Product> selectedProducts = new List<Product>();\n        int totalEnergy = dp[maxItems][(int)(maxPrice * 100)];\n        for (int j = maxItems, k = (int)(maxPrice * 100); j > 0; j--)\n        {\n            if (dp[j][k] != dp[j - 1][k])\n            {\n                foreach (var product in products)\n                {\n                    int productPrice = (int)(product.Price * 100);\n                    if (k >= productPrice && dp[j][k] == dp[j - 1][k - productPrice] + product.Energy)\n                    {\n                        selectedProducts.Add(product);\n                        k -= productPrice;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return (selectedProducts, totalEnergy);\n    }\n\n    public static void Main(string[] args)\n    {\n        List<Product> products = new List<Product>\n        {\n            new Product { Price = 0.5, Energy = 100 },\n            new Product { Price = 1.2, Energy = 300 },\n            new Product { Price = 2.0, Energy = 200 },\n            // add more products as needed\n        };\n\n        var (selectedProducts, totalEnergy) = FindBestCombination(products, 15, 10.0);\n\n        Console.WriteLine("Selected Products:");\n        foreach (var product in selectedProducts)\n        {\n            Console.WriteLine($"Price: {product.Price}, Energy: {product.Energy}");\n        }\n        Console.WriteLine($"Total Energy: {totalEnergy}");\n    }\n}