using System;\nusing System.Diagnostics;\nusing System.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        string serviceName = "TheService"; // Name of your service\n        string childProcessName = "process.exe"; // Name of the child processes\n\n        // Find the service process\n        Process serviceProcess = Process.GetProcessesByName(serviceName).FirstOrDefault();\n\n        if (serviceProcess != null)\n        {\n            // Get all child processes of the service\n            var childProcesses = Process.GetProcesses()\n                .Where(p => p.ProcessName.Equals(childProcessName, StringComparison.OrdinalIgnoreCase) && IsChildProcess(serviceProcess, p))\n                .ToList();\n\n            Console.WriteLine($"Number of '{childProcessName}' instances: {childProcesses.Count}");\n        }\n        else\n        {\n            Console.WriteLine($"Service '{serviceName}' not found.");\n        }\n    }\n\n    static bool IsChildProcess(Process parent, Process child)\n    {\n        try\n        {\n            using (var searcher = new ManagementObjectSearcher($"SELECT ParentProcessId FROM Win32_Process WHERE ProcessId={child.Id}"))\n            using (var results = searcher.Get())\n            {\n                var query = from p in results.Cast<ManagementObject>()\n                            let parentId = (uint)p["ParentProcessId"]\n                            where parentId == parent.Id\n                            select p;\n                return query.Any();\n            }\n        }\n        catch\n        {\n            return false;\n        }\n    }\n}