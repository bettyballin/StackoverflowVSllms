using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Net;\n\npublic class RestClient\n{\n    private static Dictionary<string, CachedResponse> cache = new Dictionary<string, CachedResponse>();\n\n    public static string GetResponse(string url)\n    {\n        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n\n        // Check if the URL is in the cache\n        if (cache.ContainsKey(url))\n        {\n            var cachedResponse = cache[url];\n            request.Headers["If-None-Match"] = cachedResponse.ETag;\n        }\n\n        try\n        {\n            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n            {\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    string responseBody;\n                    using (StreamReader reader = new StreamReader(response.GetResponseStream()))\n                    {\n                        responseBody = reader.ReadToEnd();\n                    }\n\n                    // Store the new response in the cache\n                    cache[url] = new CachedResponse\n                    {\n                        ETag = response.Headers["ETag"],\n                        ResponseBody = responseBody\n                    };\n\n                    return responseBody;\n                }\n            }\n        }\n        catch (WebException ex)\n        {\n            if (ex.Response is HttpWebResponse response && response.StatusCode == HttpStatusCode.NotModified)\n            {\n                // Return cached response\n                return cache[url].ResponseBody;\n            }\n            else\n            {\n                throw;\n            }\n        }\n\n        return null;\n    }\n\n    private class CachedResponse\n    {\n        public string ETag { get; set; }\n        public string ResponseBody { get; set; }\n    }\n}