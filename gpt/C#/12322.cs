using System.Web.Hosting;\n\npublic class EmbeddedResourceVirtualPathProvider : VirtualPathProvider\n{\n    public override bool FileExists(string virtualPath)\n    {\n        // Check if the file exists as an embedded resource.\n        string resourcePath = GetResourcePath(virtualPath);\n        return Assembly.GetExecutingAssembly().GetManifestResourceStream(resourcePath) != null || base.FileExists(virtualPath);\n    }\n\n    public override VirtualFile GetFile(string virtualPath)\n    {\n        if (FileExists(virtualPath))\n        {\n            string resourcePath = GetResourcePath(virtualPath);\n            Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(resourcePath);\n            if (resourceStream != null)\n            {\n                return new EmbeddedResourceVirtualFile(virtualPath, resourceStream);\n            }\n        }\n        return base.GetFile(virtualPath);\n    }\n\n    private string GetResourcePath(string virtualPath)\n    {\n        // Convert the virtual path to the embedded resource path.\n        return "YourNamespace.EmbeddedResources" + virtualPath.Replace("/", ".");\n    }\n}\n\npublic class EmbeddedResourceVirtualFile : VirtualFile\n{\n    private readonly Stream _resourceStream;\n\n    public EmbeddedResourceVirtualFile(string virtualPath, Stream resourceStream) : base(virtualPath)\n    {\n        _resourceStream = resourceStream;\n    }\n\n    public override Stream Open()\n    {\n        return _resourceStream;\n    }\n}