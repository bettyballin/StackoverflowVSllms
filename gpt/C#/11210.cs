using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class RijndaelExample\n{\n    public static void Main()\n    {\n        string original = "Here is some data to encrypt!";\n        \n        using (Rijndael myRijndael = Rijndael.Create())\n        {\n            byte[] encrypted = EncryptStringToBytes(original, myRijndael.Key, myRijndael.IV);\n            string roundtrip = DecryptStringFromBytes(encrypted, myRijndael.Key, myRijndael.IV);\n            \n            Console.WriteLine("Original:   {0}", original);\n            Console.WriteLine("Round Trip: {0}", roundtrip);\n        }\n    }\n\n    static byte[] EncryptStringToBytes(string plainText, byte[] Key, byte[] IV)\n    {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException("plainText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n        byte[] encrypted;\n        using (Rijndael rijAlg = Rijndael.Create())\n        {\n            rijAlg.Key = Key;\n            rijAlg.IV = IV;\n\n            ICryptoTransform encryptor = rijAlg.CreateEncryptor(rijAlg.Key, rijAlg.IV);\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    encrypted = msEncrypt.ToArray();\n                }\n            }\n        }\n        return encrypted;\n    }\n\n    static string DecryptStringFromBytes(byte[] cipherText, byte[] Key, byte[] IV)\n    {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException("cipherText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        string plaintext = null;\n        using (Rijndael rijAlg = Rijndael.Create())\n        {\n            rijAlg.Key = Key;\n            rijAlg.IV = IV;\n\n            ICryptoTransform decryptor = rijAlg.CreateDecryptor(rijAlg.Key, rijAlg.IV);\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        plaintext = srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n        return plaintext;\n    }\n}