public class HeavyProcessingService : System.Web.Services.WebService\n{\n    private static Dictionary<string, int> progressDictionary = new Dictionary<string, int>();\n\n    [WebMethod]\n    public string StartHeavyProcessing()\n    {\n        string taskId = Guid.NewGuid().ToString();\n        Task.Run(() => ProcessFiles(taskId));\n        return taskId;\n    }\n\n    private void ProcessFiles(string taskId)\n    {\n        int totalFiles = 100; // Example number of files to process\n        for (int i = 0; i < totalFiles; i++)\n        {\n            // Simulate file processing\n            System.Threading.Thread.Sleep(100);\n\n            // Update progress\n            lock (progressDictionary)\n            {\n                progressDictionary[taskId] = (i + 1) * 100 / totalFiles;\n            }\n        }\n    }\n\n    [WebMethod]\n    public int GetProgressStatus(string taskId)\n    {\n        lock (progressDictionary)\n        {\n            if (progressDictionary.ContainsKey(taskId))\n            {\n                return progressDictionary[taskId];\n            }\n            else\n            {\n                return 0; // Task not found or not started\n            }\n        }\n    }\n}