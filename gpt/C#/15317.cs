using Microsoft.Win32;\nusing System;\nusing System.Collections.Generic;\n\npublic class RegistryHelper\n{\n    public static object ReadRegistryValue(string keyPath, string valueName)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            return key?.GetValue(valueName);\n        }\n    }\n\n    public static void WriteRegistryValue(string keyPath, string valueName, object value, RegistryValueKind valueKind)\n    {\n        using (RegistryKey key = Registry.LocalMachine.CreateSubKey(keyPath))\n        {\n            key?.SetValue(valueName, value, valueKind);\n        }\n    }\n\n    public static List<string> EnumerateRegistryKeys(string keyPath)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            if (key == null)\n                return null;\n\n            return new List<string>(key.GetSubKeyNames());\n        }\n    }\n\n    public static List<string> EnumerateRegistryValues(string keyPath)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            if (key == null)\n                return null;\n\n            return new List<string>(key.GetValueNames());\n        }\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        string keyPath = @"SOFTWARE\ODBC\ODBC.INI\ODBC Data Sources";\n\n        // Read a value\n        var value = RegistryHelper.ReadRegistryValue(keyPath, "SomeValueName");\n        Console.WriteLine(value);\n\n        // Write a value\n        RegistryHelper.WriteRegistryValue(keyPath, "NewValueName", "NewValueData", RegistryValueKind.String);\n\n        // Enumerate subkeys\n        var subKeys = RegistryHelper.EnumerateRegistryKeys(keyPath);\n        foreach (var subKey in subKeys)\n        {\n            Console.WriteLine(subKey);\n        }\n\n        // Enumerate values\n        var values = RegistryHelper.EnumerateRegistryValues(keyPath);\n        foreach (var val in values)\n        {\n            Console.WriteLine(val);\n        }\n    }\n}