public bool TryDeleteSection(int sectionId)\n{\n    using (var context = new YourDbContext())\n    {\n        // Check for references in a single query\n        bool hasReferences = context.Projects.Any(p => p.SectionId == sectionId) ||\n                             context.Categories.Any(c => c.SectionId == sectionId) ||\n                             context.SomeOtherTable.Any(t => t.SectionId == sectionId) ||\n                             context.YetAnotherTable.Any(y => y.SectionId == sectionId);\n\n        if (hasReferences)\n        {\n            // Inform the user or handle accordingly\n            return false;\n        }\n\n        try\n        {\n            // Proceed with the delete operation\n            var sectionToDelete = context.Sections.Find(sectionId);\n            if (sectionToDelete != null)\n            {\n                context.Sections.Remove(sectionToDelete);\n                context.SaveChanges();\n            }\n        }\n        catch (SqlException ex) when (ex.Number == 547) // Foreign key constraint violation\n        {\n            // Handle exception (e.g., log it and inform the user)\n            return false;\n        }\n    }\n\n    return true;\n}