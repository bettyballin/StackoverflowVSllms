using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        // Read the text from a file (replace "path_to_file.txt" with your actual file path)\n        string text = File.ReadAllText("path_to_file.txt");\n\n        // Tokenize the text\n        var words = Tokenize(text);\n\n        // Count word frequencies\n        var wordFrequencies = CountFrequencies(words);\n\n        // Sort by frequency and take the top 10,000 words\n        var topWords = wordFrequencies.OrderByDescending(wf => wf.Value)\n                                      .Take(10000)\n                                      .ToList();\n\n        // Output the top words with their frequencies\n        foreach (var word in topWords)\n        {\n            Console.WriteLine($"{word.Key}: {word.Value}");\n        }\n    }\n\n    static List<string> Tokenize(string text)\n    {\n        // Remove punctuation and convert to lowercase\n        var cleanedText = new string(text.Where(c => !char.IsPunctuation(c)).ToArray()).ToLower();\n        \n        // Split the text into words\n        return cleanedText.Split(new char[] { ' ', '\n', '\r', '\t' }, StringSplitOptions.RemoveEmptyEntries).ToList();\n    }\n\n    static Dictionary<string, int> CountFrequencies(List<string> words)\n    {\n        var wordFrequencies = new Dictionary<string, int>();\n\n        foreach (var word in words)\n        {\n            if (wordFrequencies.ContainsKey(word))\n            {\n                wordFrequencies[word]++;\n            }\n            else\n            {\n                wordFrequencies[word] = 1;\n            }\n        }\n\n        return wordFrequencies;\n    }\n}