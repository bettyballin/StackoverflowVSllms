using System;\n    using System.Security.Cryptography;\n    using Microsoft.AspNetCore.Cryptography.KeyDerivation;\n\n    public class PasswordHelper\n    {\n        public static (string hashedPassword, string salt) HashPassword(string password)\n        {\n            // Generate a 128-bit salt using a secure PRNG\n            byte[] salt = new byte[128 / 8];\n            using (var rng = RandomNumberGenerator.Create())\n            {\n                rng.GetBytes(salt);\n            }\n\n            // Derive a 256-bit subkey (use HMACSHA256 with 10000 iterations)\n            string hashed = Convert.ToBase64String(KeyDerivation.Pbkdf2(\n                password: password,\n                salt: salt,\n                prf: KeyDerivationPrf.HMACSHA256,\n                iterationCount: 10000,\n                numBytesRequested: 256 / 8));\n\n            return (hashed, Convert.ToBase64String(salt));\n        }\n    }