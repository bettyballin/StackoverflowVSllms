using System;\nusing Microsoft.Win32;\n\npublic class IISVersionChecker\n{\n    public static bool SupportsApplicationPools()\n    {\n        try\n        {\n            string iisVersionString = Registry.GetValue(@"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InetStp", "VersionString", null) as string;\n            \n            if (!string.IsNullOrEmpty(iisVersionString))\n            {\n                // Extract the version number from the version string\n                Version iisVersion = new Version(iisVersionString.Split('/')[1].Trim());\n                return iisVersion.Major >= 6;\n            }\n        }\n        catch (Exception ex)\n        {\n            // Handle exceptions as necessary\n            Console.WriteLine("Error checking IIS version: " + ex.Message);\n        }\n\n        // Default to false if unable to determine version\n        return false;\n    }\n}\n\n// Usage example\npublic class Installer\n{\n    public void Install()\n    {\n        if (IISVersionChecker.SupportsApplicationPools())\n        {\n            // Proceed with creating Application Pool\n        }\n        else\n        {\n            // Handle the case where Application Pools are not supported\n        }\n    }\n}