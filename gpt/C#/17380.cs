using System;\nusing System.Threading;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\n[TestClass]\npublic class EventHandlingTests\n{\n    private class EventRaiser\n    {\n        public event EventHandler SomethingHappened;\n        \n        public void RaiseEvent()\n        {\n            SomethingHappened?.Invoke(this, EventArgs.Empty);\n        }\n    }\n\n    [TestMethod]\n    public void TestEventHandling()\n    {\n        // Arrange\n        var eventRaiser = new EventRaiser();\n        var eventHandled = new ManualResetEvent(false);\n\n        eventRaiser.SomethingHappened += (sender, args) =>\n        {\n            eventHandled.Set();\n        };\n\n        // Act\n        eventRaiser.RaiseEvent();\n\n        // Assert\n        var eventWasHandled = eventHandled.WaitOne(5000); // Wait up to 5 seconds for the event\n        Assert.IsTrue(eventWasHandled, "The expected event was not handled within the timeout period.");\n    }\n}