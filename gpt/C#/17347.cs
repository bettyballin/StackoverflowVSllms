using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text.RegularExpressions;\n\npublic class NaturalFileInfoComparer : IComparer<FileInfo>\n{\n    public int Compare(FileInfo x, FileInfo y)\n    {\n        return NaturalSortComparer.CompareStrings(x.Name, y.Name);\n    }\n}\n\npublic static class NaturalSortComparer\n{\n    public static int CompareStrings(string a, string b)\n    {\n        if (a == b)\n        {\n            return 0;\n        }\n\n        string[] aParts = Regex.Split(a.Replace(" ", ""), "([0-9]+)");\n        string[] bParts = Regex.Split(b.Replace(" ", ""), "([0-9]+)");\n\n        for (int i = 0; i < aParts.Length && i < bParts.Length; i++)\n        {\n            if (aParts[i] != bParts[i])\n            {\n                bool aIsNumber = int.TryParse(aParts[i], out int aNumber);\n                bool bIsNumber = int.TryParse(bParts[i], out int bNumber);\n\n                if (aIsNumber && bIsNumber)\n                {\n                    return aNumber.CompareTo(bNumber);\n                }\n\n                return string.Compare(aParts[i], bParts[i], StringComparison.Ordinal);\n            }\n        }\n\n        return aParts.Length.CompareTo(bParts.Length);\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        DirectoryInfo dir = new DirectoryInfo(@"C:\YourDirectory");\n        FileInfo[] files = dir.GetFiles();\n\n        Array.Sort(files, new NaturalFileInfoComparer());\n\n        foreach (FileInfo file in files)\n        {\n            Console.WriteLine(file.Name);\n        }\n    }\n}