using System;\n\npublic static class CustomConverter\n{\n    public static object ChangeType(object value, Type conversionType)\n    {\n        if (value is Guid && conversionType == typeof(byte[]))\n        {\n            return ((Guid)value).ToByteArray();\n        }\n\n        if (value is byte[] && conversionType == typeof(Guid))\n        {\n            return new Guid((byte[])value);\n        }\n\n        // Add more custom conversions as needed\n\n        // Fallback to default conversion\n        return Convert.ChangeType(value, conversionType);\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        Guid g = Guid.NewGuid();\n        object o1 = g;\n        byte[] b = (byte[])CustomConverter.ChangeType(o1, typeof(byte[]));\n        Console.WriteLine(BitConverter.ToString(b));\n\n        byte[] byteArray = g.ToByteArray();\n        Guid newGuid = (Guid)CustomConverter.ChangeType(byteArray, typeof(Guid));\n        Console.WriteLine(newGuid);\n    }\n}