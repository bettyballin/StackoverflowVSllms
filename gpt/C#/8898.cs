using System;\nusing System.Net.Mail;\nusing System.Text.RegularExpressions;\n\npublic class Global : System.Web.HttpApplication\n{\n    protected void Application_Error(Object sender, EventArgs e)\n    {\n        // Get the last exception.\n        Exception objException = Server.GetLastError();\n\n        // Work out the error details based on the exception.\n        string errorType = "";\n        string errorDescription = "";\n        string errorHtml = "";\n\n        if (objException == null)\n        {\n            // This should never occur.\n            errorType = "Unknown Error";\n            errorDescription = "Unknown Error";\n        }\n        else if (objException.GetType() == typeof(HttpException))\n        {\n            // This will occur when the ASP.NET engine throws a HttpException.\n            HttpException objHttpException = objException as HttpException;\n            errorType = "HTTP Exception";\n            errorDescription = objHttpException.Message;\n        }\n        else\n        {\n            // Handle other exception types.\n            errorType = objException.GetType().ToString();\n            errorDescription = objException.Message;\n        }\n\n        // Construct the error message.\n        errorHtml = $"<html><body><h1>{errorType}</h1><p>{errorDescription}</p></body></html>";\n\n        // Define the recipients.\n        string[] developers = { "dev1@example.com", "dev2@example.com" };\n\n        // Validate email addresses.\n        foreach (string email in developers)\n        {\n            if (!IsValidEmail(email))\n            {\n                // Log and return if email is invalid.\n                // Note: You should also log the invalid email for review.\n                return;\n            }\n        }\n\n        // Send the email.\n        SendErrorEmail(developers, "Error Notification", errorHtml);\n    }\n\n    private bool IsValidEmail(string email)\n    {\n        // Simple email validation.\n        string pattern = @"^[^@\s]+@[^@\s]+\.[^@\s]+$";\n        return Regex.IsMatch(email, pattern);\n    }\n\n    private void SendErrorEmail(string[] toAddresses, string subject, string body)\n    {\n        MailMessage mail = new MailMessage();\n\n        foreach (string toAddress in toAddresses)\n        {\n            mail.To.Add(toAddress);\n        }\n\n        mail.Subject = subject;\n        mail.Body = body;\n        mail.IsBodyHtml = true;\n\n        using (SmtpClient smtp = new SmtpClient("smtp.example.com"))\n        {\n            smtp.Send(mail);\n        }\n    }\n}