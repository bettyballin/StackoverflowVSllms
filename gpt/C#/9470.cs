using System;\nusing PostSharp.Aspects;\nusing PostSharp.Serialization;\n\n[PSerializable]\npublic class LogAspect : OnMethodBoundaryAspect\n{\n    public override void OnEntry(MethodExecutionArgs args)\n    {\n        Console.WriteLine($"Entering: {args.Method.Name}");\n        for (int i = 0; i < args.Arguments.Count; i++)\n        {\n            Console.WriteLine($"Argument {i}: {args.Arguments[i]}");\n        }\n    }\n\n    public override void OnSuccess(MethodExecutionArgs args)\n    {\n        Console.WriteLine($"Method {args.Method.Name} executed successfully.");\n    }\n\n    public override void OnException(MethodExecutionArgs args)\n    {\n        Console.WriteLine($"Exception in {args.Method.Name}: {args.Exception.Message}");\n    }\n\n    public override void OnExit(MethodExecutionArgs args)\n    {\n        Console.WriteLine($"Exiting: {args.Method.Name}");\n    }\n}