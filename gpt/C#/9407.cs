public interface IContactRepository\n{\n    void Delete(int contactId, DateTime contactTimestamp);\n}\n\npublic class ContactRepository : IContactRepository\n{\n    private readonly MyDbContext _context;\n\n    public ContactRepository(MyDbContext context)\n    {\n        _context = context;\n    }\n\n    public void Delete(int contactId, DateTime contactTimestamp)\n    {\n        var contact = _context.Contacts.Find(contactId);\n        if (contact != null && contact.Timestamp == contactTimestamp)\n        {\n            _context.Contacts.Remove(contact);\n        }\n    }\n}\n\npublic interface IUnitOfWork\n{\n    Task CompleteAsync();\n}\n\npublic class UnitOfWork : IUnitOfWork\n{\n    private readonly MyDbContext _context;\n\n    public UnitOfWork(MyDbContext context)\n    {\n        _context = context;\n    }\n\n    public async Task CompleteAsync()\n    {\n        await _context.SaveChangesAsync();\n    }\n}