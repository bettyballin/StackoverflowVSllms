using System;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n\n[ToolboxData("<{0}:Frame runat=server></{0}:Frame>")]\npublic class Frame : CompositeControl, INamingContainer\n{\n    private ITemplate _template;\n    private Panel _panel;\n\n    [PersistenceMode(PersistenceMode.InnerProperty)]\n    public ITemplate Template\n    {\n        get { return _template; }\n        set { _template = value; }\n    }\n\n    protected override void CreateChildControls()\n    {\n        Controls.Clear();\n\n        _panel = new Panel();\n        Controls.Add(_panel);\n\n        if (_template != null)\n        {\n            _template.InstantiateIn(_panel);\n        }\n\n        // Add validation controls here as needed\n        var requiredFieldValidator = new RequiredFieldValidator\n        {\n            ControlToValidate = "SomeControl", // Set the ID of the control to validate\n            ErrorMessage = "This field is required.",\n            Display = ValidatorDisplay.Dynamic\n        };\n        _panel.Controls.Add(requiredFieldValidator);\n\n        base.CreateChildControls();\n    }\n\n    protected override void OnPreRender(EventArgs e)\n    {\n        EnsureChildControls();\n        base.OnPreRender(e);\n    }\n}