using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass SimpleHttpProxy\n{\n    public static void Main()\n    {\n        TcpListener listener = new TcpListener(IPAddress.Loopback, 8888); // Listen on localhost:8888\n        listener.Start();\n        Console.WriteLine("Proxy started on 127.0.0.1:8888");\n\n        while (true)\n        {\n            TcpClient client = listener.AcceptTcpClient();\n            NetworkStream clientStream = client.GetStream();\n            StreamReader clientReader = new StreamReader(clientStream);\n\n            // Read request from client\n            string requestLine = clientReader.ReadLine();\n            if (string.IsNullOrEmpty(requestLine))\n            {\n                client.Close();\n                continue;\n            }\n\n            Console.WriteLine("Received request: " + requestLine);\n\n            // Parse the target URL from the request\n            string[] tokens = requestLine.Split(' ');\n            if (tokens.Length < 2)\n            {\n                client.Close();\n                continue;\n            }\n\n            string url = tokens[1];\n            Uri uri = new Uri(url);\n            string host = uri.Host;\n            int port = uri.Port == -1 ? 80 : uri.Port;\n\n            // Connect to the target server\n            TcpClient server = new TcpClient(host, port);\n            NetworkStream serverStream = server.GetStream();\n            StreamWriter serverWriter = new StreamWriter(serverStream);\n\n            // Forward the client request to the server\n            serverWriter.WriteLine(requestLine);\n            string line;\n            while (!string.IsNullOrEmpty(line = clientReader.ReadLine()))\n            {\n                serverWriter.WriteLine(line);\n            }\n            serverWriter.WriteLine();\n            serverWriter.Flush();\n\n            // Read the server response\n            StreamReader serverReader = new StreamReader(serverStream);\n            string responseLine;\n            StringBuilder response = new StringBuilder();\n            while ((responseLine = serverReader.ReadLine()) != null)\n            {\n                response.AppendLine(responseLine);\n            }\n\n            // Send the server response back to the client\n            byte[] responseBytes = Encoding.ASCII.GetBytes(response.ToString());\n            clientStream.Write(responseBytes, 0, responseBytes.Length);\n            clientStream.Flush();\n\n            // Close connections\n            client.Close();\n            server.Close();\n        }\n    }\n}