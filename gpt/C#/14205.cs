using System;\nusing System.Web;\n\npublic class BasePage : System.Web.UI.Page\n{\n    protected override void OnLoad(EventArgs e)\n    {\n        base.OnLoad(e);\n        CheckUserZoneAccess();\n    }\n\n    private void CheckUserZoneAccess()\n    {\n        // Assume GetUserZone() retrieves the user's zone from the session or database\n        string userZone = GetUserZone();\n        string requiredZone = GetRequiredZoneForPage();\n\n        if (userZone != requiredZone)\n        {\n            // Redirect to an access denied page\n            Response.Redirect("~/AccessDenied.aspx");\n        }\n    }\n\n    private string GetUserZone()\n    {\n        // Replace with your logic to get the user's zone\n        return HttpContext.Current.Session["UserZone"] as string;\n    }\n\n    private string GetRequiredZoneForPage()\n    {\n        // Replace with your logic to get the required zone for the current page\n        // This could be hardcoded, read from attributes, configuration, etc.\n        return "Financials"; // Example zone\n    }\n}