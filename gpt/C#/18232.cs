public abstract class BaseController<T> : Controller where T : class\n   {\n       protected readonly IRepository<T> repository;\n\n       public BaseController(IRepository<T> repository)\n       {\n           this.repository = repository;\n       }\n\n       public virtual ActionResult Index()\n       {\n           var items = repository.GetAll();\n           return View(items);\n       }\n\n       public virtual ActionResult Details(int id)\n       {\n           var item = repository.GetById(id);\n           if (item == null)\n           {\n               return HttpNotFound();\n           }\n           return View(item);\n       }\n\n       // Other CRUD methods...\n   }