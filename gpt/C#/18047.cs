using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Xml.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        string xml = @"\n        <topNode>\n            <middleNode filteringAttribute='filterValue'>\n                <penultimateNode anotherFilterAttribute='somethingElse'>\n                    <nodesIWantReturned>Value1</nodesIWantReturned>\n                </penultimateNode>\n                <penultimateNode anotherFilterAttribute='differentValue'>\n                    <nodesIWantReturned>Value2</nodesIWantReturned>\n                </penultimateNode>\n            </middleNode>\n            <middleNode filteringAttribute='differentFilterValue'>\n                <penultimateNode anotherFilterAttribute='somethingElse'>\n                    <nodesIWantReturned>Value3</nodesIWantReturned>\n                </penultimateNode>\n            </middleNode>\n        </topNode>";\n\n        XDocument xdoc = XDocument.Parse(xml);\n\n        IEnumerable<XElement> nodesIWantReturned = xdoc.Descendants("topNode")\n            .Descendants("middleNode")\n            .Where(mn => (string)mn.Attribute("filteringAttribute") == "filterValue")\n            .Descendants("penultimateNode")\n            .Where(pn => (string)pn.Attribute("anotherFilterAttribute") == "somethingElse")\n            .Descendants("nodesIWantReturned");\n\n        foreach (var node in nodesIWantReturned)\n        {\n            Console.WriteLine(node);\n        }\n    }\n}