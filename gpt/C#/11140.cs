using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing ProtoBuf;\n\n[ProtoContract]\npublic class DataEntity\n{\n    [ProtoMember(1)]\n    public string Name { get; set; }\n    [ProtoMember(2)]\n    public string Address { get; set; }\n    [ProtoMember(3)]\n    public string NINumber { get; set; }\n}\n\npublic class EncryptionHelper\n{\n    private static readonly byte[] Key = Convert.FromBase64String("your-base64-key-here");\n    private static readonly byte[] IV = Convert.FromBase64String("your-base64-iv-here");\n\n    public static byte[] Encrypt(byte[] data)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            using (var encryptor = aes.CreateEncryptor(aes.Key, aes.IV))\n            {\n                using (var ms = new MemoryStream())\n                {\n                    using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                    {\n                        cs.Write(data, 0, data.Length);\n                        cs.Close();\n                    }\n                    return ms.ToArray();\n                }\n            }\n        }\n    }\n\n    public static byte[] Decrypt(byte[] data)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            using (var decryptor = aes.CreateDecryptor(aes.Key, aes.IV))\n            {\n                using (var ms = new MemoryStream(data))\n                {\n                    using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                    {\n                        using (var resultStream = new MemoryStream())\n                        {\n                            cs.CopyTo(resultStream);\n                            return resultStream.ToArray();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        DataEntity entity = new DataEntity\n        {\n            Name = "John Doe",\n            Address = "123 Main St",\n            NINumber = "AB123456C"\n        };\n\n        // Serialize the data\n        byte[] serializedData;\n        using (var ms = new MemoryStream())\n        {\n            Serializer.Serialize(ms, entity);\n            serializedData = ms.ToArray();\n        }\n\n        // Encrypt the serialized data\n        byte[] encryptedData = EncryptionHelper.Encrypt(serializedData);\n\n        // Write the encrypted data to a file\n        File.WriteAllBytes("data.bin", encryptedData);\n\n        // Read the encrypted data from the file\n        byte[] encryptedDataFromFile = File.ReadAllBytes("data.bin");\n\n        // Decrypt the data\n        byte[] decryptedData = EncryptionHelper.Decrypt(encryptedDataFromFile);\n\n        // Deserialize the data\n        DataEntity deserializedEntity;\n        using (var ms = new MemoryStream(decryptedData))\n        {\n            deserializedEntity = Serializer.Deserialize<DataEntity>(ms);\n        }\n\n        Console.WriteLine($"Name: {deserializedEntity.Name}, Address: {deserializedEntity.Address}, NI Number: {deserializedEntity.NINumber}");\n    }\n}