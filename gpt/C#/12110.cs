using System;\nusing System.ServiceProcess;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string serviceName = "YourServiceName";\n        string servicePath = @"C:\Path\To\YourService.exe";\n\n        try\n        {\n            // Check if the service already exists\n            if (!ServiceExists(serviceName))\n            {\n                // Register the service\n                RegisterService(serviceName, servicePath);\n                Console.WriteLine("Service registered successfully.");\n            }\n            else\n            {\n                Console.WriteLine("Service already exists.");\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error: {ex.Message}");\n        }\n    }\n\n    static bool ServiceExists(string serviceName)\n    {\n        ServiceController[] services = ServiceController.GetServices();\n        foreach (ServiceController service in services)\n        {\n            if (service.ServiceName == serviceName)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static void RegisterService(string serviceName, string servicePath)\n    {\n        string command = $"create {serviceName} binpath= \"{servicePath}\"";\n\n        System.Diagnostics.ProcessStartInfo processInfo = new System.Diagnostics.ProcessStartInfo("sc.exe", command)\n        {\n            RedirectStandardOutput = true,\n            UseShellExecute = false,\n            CreateNoWindow = true\n        };\n\n        using (System.Diagnostics.Process process = System.Diagnostics.Process.Start(processInfo))\n        {\n            process.WaitForExit();\n            string result = process.StandardOutput.ReadToEnd();\n            Console.WriteLine(result);\n        }\n    }\n}