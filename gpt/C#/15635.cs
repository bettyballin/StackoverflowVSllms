using System;\nusing System.Security;\nusing System.Security.Principal;\nusing System.Security.Permissions;\n\npublic class SecurityExample\n{\n    static void Main()\n    {\n        IntPtr token = IntPtr.Zero; // Assume this is your valid token for impersonation\n\n        WindowsImpersonationContext context = WindowsIdentity.Impersonate(token);\n\n        Console.WriteLine("Calling LocalTestGroupOnly() as {0}", WindowsIdentity.GetCurrent().Name);\n        LocalTestGroupOnly();\n\n        context.Undo();\n\n        try\n        {\n            Console.WriteLine("Calling LocalTestGroupOnly() as {0}", WindowsIdentity.GetCurrent().Name);\n            LocalTestGroupOnly();\n        }\n        catch (SecurityException ex)\n        {\n            Console.WriteLine("Your account lacks permission to that function.");\n        }\n    }\n    \n    static void LocalTestGroupOnly()\n    {\n        // Manually perform the security check instead of using attribute\n        PrincipalPermission principalPerm = new PrincipalPermission(@"DJPITER-PC\Test", "LocalTestGroup");\n        principalPerm.Demand();\n\n        Console.WriteLine("Inside LocalTestGroupOnly() - {0}", WindowsIdentity.GetCurrent().Name);\n    }\n}