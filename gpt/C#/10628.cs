amespace MyApp.DelegateManagement\n{\n    public class DelegateDictionaryManager\n    {\n        public Dictionary<string, Action> ActionDelegates { get; private set; }\n        public Dictionary<string, Func<int, int>> FunctionDelegates { get; private set; }\n        \n        public DelegateDictionaryManager()\n        {\n            ActionDelegates = new Dictionary<string, Action>();\n            FunctionDelegates = new Dictionary<string, Func<int, int>>();\n        }\n        \n        public void AddActionDelegate(string key, Action action)\n        {\n            if (!ActionDelegates.ContainsKey(key))\n            {\n                ActionDelegates.Add(key, action);\n            }\n        }\n        \n        public void AddFunctionDelegate(string key, Func<int, int> function)\n        {\n            if (!FunctionDelegates.ContainsKey(key))\n            {\n                FunctionDelegates.Add(key, function);\n            }\n        }\n        \n        // Other management methods as needed\n    }\n}