using System;\nusing System.Windows.Forms;\n\npublic class MyToolTip : ToolTip\n{\n    private bool isToolTipVisible = false;\n\n    public MyToolTip() : base() \n    {\n        this.Popup += new PopupEventHandler(OnToolTipPopup);\n        this.Draw += new DrawToolTipEventHandler(OnToolTipDraw);\n    }\n\n    private void OnToolTipPopup(object sender, PopupEventArgs e)\n    {\n        isToolTipVisible = true;\n    }\n\n    private void OnToolTipDraw(object sender, DrawToolTipEventArgs e)\n    {\n        isToolTipVisible = false;\n    }\n\n    public bool IsToolTipVisible\n    {\n        get { return isToolTipVisible; }\n    }\n}\n\n// Usage example\npublic class MainForm : Form\n{\n    private Button button;\n    private MyToolTip myToolTip;\n\n    public MainForm()\n    {\n        button = new Button();\n        button.Text = "Hover me";\n        button.Location = new Point(50, 50);\n        this.Controls.Add(button);\n\n        myToolTip = new MyToolTip();\n        myToolTip.SetToolTip(button, "This is a tooltip");\n\n        button.MouseHover += new EventHandler(Button_MouseHover);\n    }\n\n    private void Button_MouseHover(object sender, EventArgs e)\n    {\n        myToolTip.Show("Tooltip is visible", button);\n        var isVisible = myToolTip.IsToolTipVisible;\n        MessageBox.Show("Tooltip Visible: " + isVisible);\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.Run(new MainForm());\n    }\n}