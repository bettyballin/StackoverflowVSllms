using System;\nusing System.Xml;\nusing System.Xml.XPath;\n\npublic class CustomXPathNavigable : IXPathNavigable\n{\n    public XPathNavigator CreateNavigator()\n    {\n        return new CustomXPathNavigator();\n    }\n}\n\npublic class CustomXPathNavigator : XPathNavigator\n{\n    // Implement necessary members and keep track of calls\n    public override XPathNavigator Clone()\n    {\n        // Return a clone of the current navigator\n        return new CustomXPathNavigator();\n    }\n\n    public override bool MoveToFirstChild()\n    {\n        // Track the move and always succeed\n        Console.WriteLine("Move to first child");\n        return true;\n    }\n\n    public override bool MoveToNext()\n    {\n        // Track the move and always succeed\n        Console.WriteLine("Move to next node");\n        return true;\n    }\n\n    // Implement other required abstract members\n    public override string BaseURI => string.Empty;\n    public override bool IsEmptyElement => false;\n    public override bool MoveToAttribute(string localName, string namespaceURI) => false;\n    public override bool MoveToFirstAttribute() => false;\n    public override bool MoveToNextAttribute() => false;\n    public override bool MoveToId(string id) => false;\n    public override bool MoveToParent() => true;\n    public override bool MoveToPrevious() => false;\n    public override string Name => string.Empty;\n    public override XmlNameTable NameTable => null;\n    public override XPathNodeType NodeType => XPathNodeType.Element;\n    public override string LocalName => string.Empty;\n    public override string NamespaceURI => string.Empty;\n    public override string Prefix => string.Empty;\n    public override string Value => string.Empty;\n    public override bool MoveTo(XPathNavigator other) => false;\n}\n\nclass Program\n{\n    static void Main()\n    {\n        IXPathNavigable navigable = new CustomXPathNavigable();\n        XPathNavigator navigator = navigable.CreateNavigator();\n\n        XPathExpression expr = XPathExpression.Compile("/customers/customer");\n        navigator.Select(expr);\n\n        // Output will show the tracked movements\n    }\n}