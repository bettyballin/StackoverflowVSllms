bool flutter(bool[] swoop_map);\n\nvoid findCustards(int start, int end, bool[] swoop_map, List<Integer> custard_positions) {\n    if (start > end) {\n        return;\n    }\n\n    // Create a test sequence for the current range\n    bool[] test_seq = new bool[swoop_map.length];\n    for (int i = start; i <= end; i++) {\n        test_seq[i] = true;  // Set swoop positions to true (low swoop)\n    }\n\n    if (!flutter(test_seq)) {\n        // If flutter returns false, there is at least one custard in this range\n        if (start == end) {\n            // We've narrowed it down to a single position\n            custard_positions.add(start);\n        } else {\n            // Split the range and test each half\n            int mid = start + (end - start) / 2;\n            findCustards(start, mid, swoop_map, custard_positions);\n            findCustards(mid + 1, end, swoop_map, custard_positions);\n        }\n    }\n}\n\nList<Integer> findCustardIslands(int size) {\n    bool[] swoop_map = new bool[size];\n    List<Integer> custard_positions = new ArrayList<>();\n    findCustards(0, size - 1, swoop_map, custard_positions);\n    return custard_positions;\n}