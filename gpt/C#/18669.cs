using System.Windows;\nusing System.Windows.Input;\n\npublic partial class Shell : Window\n{\n    public static readonly DependencyProperty IsMainMenuVisibleProperty;\n\n    static Shell()\n    {\n        FrameworkPropertyMetadata metadata = new FrameworkPropertyMetadata();\n        metadata.DefaultValue = Visibility.Collapsed;\n\n        IsMainMenuVisibleProperty = DependencyProperty.Register(\n            "IsMainMenuVisible", typeof(Visibility), typeof(Shell), metadata);\n    }\n\n    public Shell()\n    {\n        InitializeComponent();\n        this.PreviewKeyUp += new KeyEventHandler(Shell_PreviewKeyUp);\n    }\n\n    void Shell_PreviewKeyUp(object sender, KeyEventArgs e)\n    {\n        if (e.SystemKey == Key.LeftAlt || e.SystemKey == Key.RightAlt)\n        {\n            if (IsMainMenuVisible == Visibility.Visible)\n                IsMainMenuVisible = Visibility.Collapsed;\n            else\n                IsMainMenuVisible = Visibility.Visible;\n        }\n    }\n\n    public Visibility IsMainMenuVisible\n    {\n        get { return (Visibility)GetValue(IsMainMenuVisibleProperty); }\n        set { SetValue(IsMainMenuVisibleProperty, value); }\n    }\n}