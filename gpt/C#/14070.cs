using System;\nusing System.Collections.Generic;\nusing System.Data.Entity;\nusing System.Linq;\n\npublic class User\n{\n    public int UserId { get; set; }\n    public string UserName { get; set; }\n    public virtual ICollection<Post> Posts { get; set; }\n    public virtual ICollection<Photo> Photos { get; set; }\n    public virtual ICollection<Vote> Votes { get; set; }\n}\n\npublic class Post\n{\n    public int PostId { get; set; }\n    public string Title { get; set; }\n    public string Description { get; set; }\n    public virtual User User { get; set; }\n    public virtual ICollection<Vote> Votes { get; set; }\n}\n\npublic class Photo\n{\n    public int PhotoId { get; set; }\n    public string Url { get; set; }\n    public virtual User User { get; set; }\n}\n\npublic class Vote\n{\n    public int VoteId { get; set; }\n    public int Value { get; set; }\n    public virtual User User { get; set; }\n    public virtual Post Post { get; set; }\n}\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<User> Users { get; set; }\n    public DbSet<Post> Posts { get; set; }\n    public DbSet<Photo> Photos { get; set; }\n    public DbSet<Vote> Votes { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        using (var context = new MyDbContext())\n        {\n            // Example query to get all posts with their user and votes\n            var posts = context.Posts\n                .Include(p => p.User)\n                .Include(p => p.Votes)\n                .ToList();\n            \n            foreach (var post in posts)\n            {\n                Console.WriteLine($"Post Title: {post.Title}, User: {post.User.UserName}");\n                foreach (var vote in post.Votes)\n                {\n                    Console.WriteLine($"Vote Value: {vote.Value}");\n                }\n            }\n        }\n    }\n}