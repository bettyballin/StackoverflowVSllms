[WebMethod]\npublic XmlDocument UpdateSomeItem(Int32 ItemIdNmb, String Foo)\n{\n    try\n    {\n        // Create the Database object, using the default database service.\n        Database db = DatabaseFactory.CreateDatabase();\n        DbParameter param;\n\n        string sqlCommand = "updateSomeItem";\n        DbCommand dbCommand = db.GetStoredProcCommand(sqlCommand);\n\n        db.AddInParameter(dbCommand, "ItemIdNmb", DbType.Int32, ItemIdNmb);\n        db.AddInParameter(dbCommand, "Foo", DbType.String, Foo);\n        db.AddInParameter(dbCommand, "UpdateLoginIdNmb", DbType.Int32, SessionLoginIdNmb);\n\n        #region Return Parameter\n        param = dbCommand.CreateParameter();\n        param.ParameterName = "Return";\n        param.Direction = ParameterDirection.ReturnValue;\n        param.DbType = DbType.Int32;\n\n        dbCommand.Parameters.Add(param);\n        #endregion\n\n        // Execute the Command\n        db.ExecuteNonQuery(dbCommand);\n\n        DataSet myDataSet = new DataSet();\n\n        myDataSet.DataSetName = "DataSet";\n        myDataSet.Tables.Add(errorDataTable);\n\n        DataRow statusDataRow = statusDataTable.NewRow();\n        statusDataRow["Status"] = "Success";\n        statusDataTable.Rows.Add(statusDataRow);\n        myDataSet.Tables.Add(statusDataTable);\n\n        DataRow returncodeDataRow = returncodeDataTable.NewRow();\n        returncodeDataRow["ReturnCode"] = dbCommand.Parameters["Return"].Value;\n        returncodeDataTable.Rows.Add(returncodeDataRow);\n        myDataSet.Tables.Add(returncodeDataTable);\n\n        XmlDocument xmlReturnDoc = new XmlDocument();\n        xmlReturnDoc.LoadXml(myDataSet.GetXml());\n\n        return xmlReturnDoc;\n    }\n    // Catch the SQL exception\n    catch (SqlException e)\n    {\n        return ReturnClientError(e, "SQL error: " + e.Message);\n    }\n    // Catch any general exceptions\n    catch (Exception e)\n    {\n        return ReturnClientError(e, "Some error occurred");\n    }\n}