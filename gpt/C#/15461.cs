public class CustomAuthorizationManager : ServiceAuthorizationManager\n{\n    protected override bool CheckAccessCore(OperationContext operationContext)\n    {\n        // Extract the Authorization header\n        var authHeader = WebOperationContext.Current.IncomingRequest.Headers["Authorization"];\n\n        if (authHeader != null && authHeader.StartsWith("Basic"))\n        {\n            // Decode the Base64 encoded credentials\n            var encodedCredentials = authHeader.Substring(6);\n            var credentialBytes = Convert.FromBase64String(encodedCredentials);\n            var credentials = Encoding.ASCII.GetString(credentialBytes).Split(':');\n\n            var username = credentials[0];\n            var password = credentials[1];\n\n            // Validate the username and password (this example uses hardcoded values)\n            if (username == "testuser" && password == "testpassword")\n            {\n                return true;\n            }\n        }\n\n        // If the credentials are invalid, return false\n        return false;\n    }\n}