using System;\n   using System.Security.Cryptography;\n   using System.Text;\n\n   public class AsymmetricEncryptionHelper\n   {\n       public static (string PublicKey, string PrivateKey) GenerateKeys()\n       {\n           using (var rsa = new RSACryptoServiceProvider(2048))\n           {\n               return (rsa.ToXmlString(false), rsa.ToXmlString(true));\n           }\n       }\n\n       public static string EncryptString(string input, string publicKey)\n       {\n           using (var rsa = new RSACryptoServiceProvider())\n           {\n               rsa.FromXmlString(publicKey);\n               var encryptedData = rsa.Encrypt(Encoding.UTF8.GetBytes(input), true);\n               return Convert.ToBase64String(encryptedData);\n           }\n       }\n\n       public static string DecryptString(string encryptedInput, string privateKey)\n       {\n           using (var rsa = new RSACryptoServiceProvider())\n           {\n               rsa.FromXmlString(privateKey);\n               var decryptedData = rsa.Decrypt(Convert.FromBase64String(encryptedInput), true);\n               return Encoding.UTF8.GetString(decryptedData);\n           }\n       }\n   }