public interface ICustomerRepository\n{\n    IEnumerable<Customer> GetAllCustomers();\n    Customer GetCustomerById(int id);\n    void AddCustomer(Customer customer);\n    void DeleteCustomer(int id);\n}\n\npublic class CustomerRepository : ICustomerRepository\n{\n    private readonly MyDataContext _context;\n\n    public CustomerRepository(MyDataContext context)\n    {\n        _context = context;\n    }\n\n    public IEnumerable<Customer> GetAllCustomers()\n    {\n        return _context.Customers.ToList();\n    }\n\n    public Customer GetCustomerById(int id)\n    {\n        return _context.Customers.FirstOrDefault(c => c.Id == id);\n    }\n\n    public void AddCustomer(Customer customer)\n    {\n        _context.Customers.InsertOnSubmit(customer);\n        _context.SubmitChanges();\n    }\n\n    public void DeleteCustomer(int id)\n    {\n        var customer = _context.Customers.FirstOrDefault(c => c.Id == id);\n        if (customer != null)\n        {\n            _context.Customers.DeleteOnSubmit(customer);\n            _context.SubmitChanges();\n        }\n    }\n}