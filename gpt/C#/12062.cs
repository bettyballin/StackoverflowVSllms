using Microsoft.Win32;\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class RegistryDecryption\n{\n    private static readonly string Key = "your-encryption-key"; // Must be the same as used for encryption\n    private static readonly string IV = "your-encryption-iv"; // Must be the same as used for encryption\n\n    public static string Decrypt(string encryptedText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(Key);\n            aes.IV = Encoding.UTF8.GetBytes(IV);\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n            using (MemoryStream ms = new MemoryStream(Convert.FromBase64String(encryptedText)))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    public static string ReadFromRegistry()\n    {\n        using (RegistryKey key = Registry.CurrentUser.OpenSubKey(@"Software\YourApp"))\n        {\n            if (key != null)\n            {\n                Object o = key.GetValue("EncryptedData");\n                if (o != null)\n                {\n                    return o.ToString();\n                }\n            }\n        }\n        return null;\n    }\n}\n\n// Usage\nstring encryptedData = RegistryDecryption.ReadFromRegistry();\nif (encryptedData != null)\n{\n    string decryptedData = RegistryDecryption.Decrypt(encryptedData);\n    Console.WriteLine($"Decrypted Data: {decryptedData}");\n}