using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Text;\nusing System.Web.UI;\n\npublic partial class HierarchicalList : Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            string connectionString = "YourConnectionStringHere";\n            DataTable dataTable = GetData(connectionString);\n\n            StringBuilder html = new StringBuilder();\n            BuildNestedList(html, dataTable, null, 0);\n            LiteralControl literalControl = new LiteralControl(html.ToString());\n            this.Controls.Add(literalControl);\n        }\n    }\n\n    private DataTable GetData(string connectionString)\n    {\n        using (SqlConnection conn = new SqlConnection(connectionString))\n        {\n            using (SqlCommand cmd = new SqlCommand("GetHierarchy", conn))\n            {\n                cmd.CommandType = CommandType.StoredProcedure;\n                SqlDataAdapter adapter = new SqlDataAdapter(cmd);\n                DataTable dataTable = new DataTable();\n                adapter.Fill(dataTable);\n                return dataTable;\n            }\n        }\n    }\n\n    private void BuildNestedList(StringBuilder html, DataTable dataTable, int? parentId, int level)\n    {\n        DataRow[] rows = dataTable.Select(parentId.HasValue ? $"ParentId = {parentId.Value}" : "ParentId IS NULL");\n\n        if (rows.Length > 0)\n        {\n            if (level > 0)\n            {\n                html.Append("<ul>");\n            }\n\n            foreach (DataRow row in rows)\n            {\n                html.AppendFormat("<li>{0}</li>", row["Title"]);\n                BuildNestedList(html, dataTable, Convert.ToInt32(row["PageID"]), level + 1);\n            }\n\n            if (level > 0)\n            {\n                html.Append("</ul>");\n            }\n        }\n    }\n}