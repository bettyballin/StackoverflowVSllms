[Serializable]\npublic class MyClass : IXmlSerializable\n{\n    public int? Age { get; set; }\n    public MyClassB MyClassB { get; set; }\n\n    public System.Xml.Schema.XmlSchema GetSchema()\n    {\n        return null;\n    }\n\n    public void ReadXml(XmlReader reader)\n    {\n        reader.MoveToContent();\n        if (reader.IsEmptyElement)\n        {\n            reader.ReadStartElement();\n            return;\n        }\n\n        reader.ReadStartElement();\n        while (reader.NodeType != XmlNodeType.EndElement)\n        {\n            if (reader.NodeType == XmlNodeType.Element)\n            {\n                switch (reader.Name)\n                {\n                    case "Age":\n                        string ageText = reader.ReadElementContentAsString();\n                        Age = string.IsNullOrEmpty(ageText) ? (int?)null : int.Parse(ageText);\n                        break;\n                    case "MyClassB":\n                        MyClassB = new MyClassB();\n                        MyClassB.ReadXml(reader);\n                        break;\n                    default:\n                        reader.Skip();\n                        break;\n                }\n            }\n            else\n            {\n                reader.Skip();\n            }\n        }\n        reader.ReadEndElement();\n    }\n\n    public void WriteXml(XmlWriter writer)\n    {\n        if (Age.HasValue && Age.Value >= 0)\n        {\n            writer.WriteElementString("Age", Age.Value.ToString());\n        }\n        MyClassB?.WriteXml(writer);\n    }\n}\n\n[Serializable]\npublic class MyClassB : IXmlSerializable\n{\n    public int RandomNumber { get; set; }\n\n    public System.Xml.Schema.XmlSchema GetSchema()\n    {\n        return null;\n    }\n\n    public void ReadXml(XmlReader reader)\n    {\n        reader.MoveToContent();\n        if (reader.IsEmptyElement)\n        {\n            reader.ReadStartElement();\n            return;\n        }\n\n        reader.ReadStartElement();\n        while (reader.NodeType != XmlNodeType.EndElement)\n        {\n            if (reader.NodeType == XmlNodeType.Element && reader.Name == "RandomNumber")\n            {\n                RandomNumber = reader.ReadElementContentAsInt();\n            }\n            else\n            {\n                reader.Skip();\n            }\n        }\n        reader.ReadEndElement();\n    }\n\n    public void WriteXml(XmlWriter writer)\n    {\n        writer.WriteElementString("RandomNumber", RandomNumber.ToString());\n    }\n}