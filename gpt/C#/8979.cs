using System;\nusing System.Drawing;\nusing System.Drawing.Text;\nusing System.Runtime.InteropServices;\n\npublic class CustomFontLoader\n{\n    // Import the AddFontResourceEx function from gdi32.dll\n    [DllImport("gdi32.dll", SetLastError = true)]\n    private static extern int AddFontResourceEx(string lpszFilename, uint fl, IntPtr pdv);\n\n    // Constants for AddFontResourceEx\n    private const uint FR_PRIVATE = 0x10;\n\n    public static PrivateFontCollection LoadCustomFont(string fontFilePath)\n    {\n        // Load the font using PrivateFontCollection for GDI+\n        PrivateFontCollection privateFontCollection = new PrivateFontCollection();\n        privateFontCollection.AddFontFile(fontFilePath);\n\n        // Add the font resource for COM objects\n        int result = AddFontResourceEx(fontFilePath, FR_PRIVATE, IntPtr.Zero);\n        if (result == 0)\n        {\n            throw new InvalidOperationException("Failed to load font resource.");\n        }\n\n        return privateFontCollection;\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        try\n        {\n            string fontPath = "path_to_your_custom_font.ttf";\n            PrivateFontCollection pfc = CustomFontLoader.LoadCustomFont(fontPath);\n\n            // Example usage with GDI+\n            foreach (FontFamily family in pfc.Families)\n            {\n                Console.WriteLine("Loaded font family: " + family.Name);\n            }\n\n            // Example usage with a COM object (assuming you have a COM object that uses stdole.IFontDisp)\n            // Note: This part is conceptual as actual COM object usage will vary.\n            // stdole.IFontDisp comFont = ...;\n            // comFont.Name = "Your Custom Font Name";\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error loading custom font: " + ex.Message);\n        }\n    }\n}