private static readonly Random rand = new Random();\n\npublic List<string> GetRandomKeys(int requestedNumberToGet)\n{\n    List<string> keysToReturn = new List<string>();\n    int numberPossibleToGet = (cachedKeys.Length <= requestedNumberToGet) ? \n                              cachedKeys.Length : requestedNumberToGet;\n    HashSet<string> keysSet = new HashSet<string>();\n\n    DateTime breakoutTime = DateTime.Now.AddMilliseconds(50); // Increased breakout time\n\n    while (DateTime.Now < breakoutTime\n           && keysToReturn.Count < numberPossibleToGet\n           && cachedKeys.Length >= numberPossibleToGet)\n    {\n        string randomKey = cachedKeys[rand.Next(0, cachedKeys.Length)];\n        if (keysSet.Add(randomKey))\n        {\n            keysToReturn.Add(randomKey);\n        }\n    }\n\n    if (keysToReturn.Count != numberPossibleToGet)\n    {\n        Debugger.Break();\n    }\n\n    return keysToReturn;\n}