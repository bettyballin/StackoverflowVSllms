using System;\nusing System.ServiceProcess;\nusing System.IO;\n\npublic class ListenerSVC : ServiceBase\n{\n    private FileSystemWatcher watcher;\n\n    public ListenerSVC()\n    {\n        this.ServiceName = "ListenerSVC";\n    }\n\n    protected override void OnStart(string[] args)\n    {\n        Log("Service starting.");\n        try\n        {\n            watcher = new FileSystemWatcher();\n            watcher.Path = @"C:\Path\To\Watch";\n            watcher.Created += new FileSystemEventHandler(OnChanged);\n            watcher.EnableRaisingEvents = true;\n            Log("Watcher started.");\n        }\n        catch (Exception ex)\n        {\n            Log($"Error in OnStart: {ex.Message}");\n        }\n    }\n\n    protected override void OnStop()\n    {\n        Log("Service stopping.");\n        if (watcher != null)\n        {\n            watcher.EnableRaisingEvents = false;\n            watcher.Dispose();\n        }\n    }\n\n    private void OnChanged(object source, FileSystemEventArgs e)\n    {\n        Log($"File: {e.FullPath} {e.ChangeType}");\n    }\n\n    private void Log(string message)\n    {\n        string path = @"C:\Path\To\Log.txt";\n        using (StreamWriter sw = new StreamWriter(path, true))\n        {\n            sw.WriteLine($"{DateTime.Now}: {message}");\n        }\n    }\n\n    static void Main()\n    {\n        if (Environment.UserInteractive)\n        {\n            ListenerSVC service = new ListenerSVC();\n            service.OnStart(null);\n            Console.WriteLine("Press any key to stop program");\n            Console.Read();\n            service.OnStop();\n        }\n        else\n        {\n            ServiceBase[] ServicesToRun;\n            ServicesToRun = new ServiceBase[] { new ListenerSVC() };\n            ServiceBase.Run(ServicesToRun);\n        }\n    }\n}