public class AuditInterceptor : EmptyInterceptor\n{\n    public override bool OnSave(object entity, object id, object[] state, string[] propertyNames, IType[] types)\n    {\n        // Add your audit logic here\n        if (entity is IAuditable)\n        {\n            var auditEntity = entity as IAuditable;\n            auditEntity.CreatedAt = DateTime.Now;\n            auditEntity.CreatedBy = GetCurrentUserId();\n        }\n        return base.OnSave(entity, id, state, propertyNames, types);\n    }\n\n    public override bool OnFlushDirty(object entity, object id, object[] currentState, object[] previousState, string[] propertyNames, IType[] types)\n    {\n        // Add your audit logic here\n        if (entity is IAuditable)\n        {\n            var auditEntity = entity as IAuditable;\n            auditEntity.UpdatedAt = DateTime.Now;\n            auditEntity.UpdatedBy = GetCurrentUserId();\n        }\n        return base.OnFlushDirty(entity, id, currentState, previousState, propertyNames, types);\n    }\n\n    private string GetCurrentUserId()\n    {\n        // Implement logic to retrieve the current user ID\n        return "currentUserId";\n    }\n}