using System;\nusing System.IO;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\n[TestClass]\npublic class YourClassTests\n{\n    [TestMethod]\n    public void TestInitializeWithStream()\n    {\n        // Arrange\n        var testData = "Test data";\n        var byteArray = System.Text.Encoding.UTF8.GetBytes(testData);\n        using (var testStream = new MemoryStream(byteArray))\n        {\n            var yourClassInstance = new YourClass();\n\n            // Act\n            yourClassInstance.Initialize(testStream);\n\n            // Assert\n            // Add assertions to verify the behavior of your Initialize method\n            // For example, if Initialize method writes to the stream, you could verify the stream content\n            testStream.Position = 0;\n            using (var reader = new StreamReader(testStream))\n            {\n                var result = reader.ReadToEnd();\n                Assert.AreEqual("Expected result", result);\n            }\n        }\n    }\n}\n\npublic class YourClass\n{\n    public void Initialize(Stream uploadStream)\n    {\n        // Logic using uploadStream\n        // For demonstration purposes, let's write some data to the stream\n        using (var writer = new StreamWriter(uploadStream))\n        {\n            writer.Write("Expected result");\n            writer.Flush();\n        }\n    }\n}