public class NHibernateUnitOfWork : IUnitOfWork\n{\n    private readonly ITransaction _transaction;\n    public ISession Session { get; }\n\n    public NHibernateUnitOfWork(ISessionFactory sessionFactory)\n    {\n        Session = sessionFactory.OpenSession();\n        _transaction = Session.BeginTransaction();\n    }\n\n    public void Commit()\n    {\n        _transaction.Commit();\n    }\n\n    public void Rollback()\n    {\n        _transaction.Rollback();\n    }\n\n    public void Dispose()\n    {\n        if (_transaction.IsActive)\n        {\n            Rollback();\n        }\n        Session.Dispose();\n    }\n}