public class PersonService\n{\n    private readonly PersonRepository _personRepository;\n\n    public PersonService(PersonRepository personRepository)\n    {\n        _personRepository = personRepository;\n    }\n\n    public ValidationResult AddPerson(Person person)\n    {\n        var validationResult = ValidatePerson(person);\n        if (!validationResult.IsValid)\n        {\n            return validationResult;\n        }\n\n        if (_personRepository.PersonExists(person))\n        {\n            validationResult.IsValid = false;\n            validationResult.Errors.Add("Person already exists in the repository.");\n            return validationResult;\n        }\n\n        _personRepository.AddPerson(person);\n        return new ValidationResult(true, new List<string>());\n    }\n\n    private ValidationResult ValidatePerson(Person person)\n    {\n        var errors = new List<string>();\n\n        if (string.IsNullOrWhiteSpace(person.FirstName))\n        {\n            errors.Add("First name cannot be empty.");\n        }\n\n        if (string.IsNullOrWhiteSpace(person.LastName))\n        {\n            errors.Add("Last name cannot be empty.");\n        }\n\n        return new ValidationResult(errors.Count == 0, errors);\n    }\n}