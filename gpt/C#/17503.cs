public class FailoverEndpointBehavior : IEndpointBehavior\n{\n    private readonly string _primaryAddress;\n    private readonly string _secondaryAddress;\n\n    public FailoverEndpointBehavior(string primaryAddress, string secondaryAddress)\n    {\n        _primaryAddress = primaryAddress;\n        _secondaryAddress = secondaryAddress;\n    }\n\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters) { }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n    {\n        clientRuntime.ClientMessageInspectors.Add(new FailoverMessageInspector(_primaryAddress, _secondaryAddress));\n    }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher) { }\n\n    public void Validate(ServiceEndpoint endpoint) { }\n}\n\npublic class FailoverMessageInspector : IClientMessageInspector\n{\n    private readonly string _primaryAddress;\n    private readonly string _secondaryAddress;\n\n    public FailoverMessageInspector(string primaryAddress, string secondaryAddress)\n    {\n        _primaryAddress = primaryAddress;\n        _secondaryAddress = secondaryAddress;\n    }\n\n    public void AfterReceiveReply(ref Message reply, object correlationState) { }\n\n    public object BeforeSendRequest(ref Message request, IClientChannel channel)\n    {\n        try\n        {\n            // Attempt to send request to primary endpoint\n            return null;\n        }\n        catch (Exception)\n        {\n            // If primary fails, switch to secondary\n            channel.Endpoint.Address = new EndpointAddress(_secondaryAddress);\n            return null;\n        }\n    }\n}\n\n// Usage\nvar primaryAddress = "net.tcp://primaryserver:8080/MyService";\nvar secondaryAddress = "net.tcp://secondaryserver:8080/MyService";\n\nvar endpointAddress = new EndpointAddress(primaryAddress);\nvar binding = new NetTcpBinding();\n\nvar channelFactory = new ChannelFactory<IMyService>(binding, endpointAddress);\nchannelFactory.Endpoint.EndpointBehaviors.Add(new FailoverEndpointBehavior(primaryAddress, secondaryAddress));\n\nIMyService client = channelFactory.CreateChannel();\nclient.MyServiceOperation();