using System;\nusing System.Web;\n\npublic class ImageHandler : IHttpHandler\n{\n    public void ProcessRequest(HttpContext context)\n    {\n        // Check if session is valid\n        if (context.Session["User"] == null)\n        {\n            context.Response.StatusCode = 403; // Forbidden\n            return;\n        }\n\n        // Fetch user details from the session\n        var user = (User)context.Session["User"];\n        \n        // Validate the user's access to the image\n        string imageId = context.Request.QueryString["imageId"];\n        if (!UserHasAccessToImage(user, imageId))\n        {\n            context.Response.StatusCode = 403; // Forbidden\n            return;\n        }\n\n        // Fetch image from database\n        byte[] imageData = GetImageFromDatabase(imageId);\n\n        // Set content type and write the image data to response\n        context.Response.ContentType = "image/jpeg"; // or appropriate image type\n        context.Response.BinaryWrite(imageData);\n    }\n\n    private bool UserHasAccessToImage(User user, string imageId)\n    {\n        // Implement your logic to check if the user has access to the image\n        return true; // Placeholder\n    }\n\n    private byte[] GetImageFromDatabase(string imageId)\n    {\n        // Implement your logic to fetch image data from the database\n        return new byte[0]; // Placeholder\n    }\n\n    public bool IsReusable\n    {\n        get { return false; }\n    }\n}