using System.ComponentModel;\n\npublic class LoginViewModel : INotifyPropertyChanged\n{\n    private string _username;\n    private string _password;\n    private string _server;\n    private bool _isLoginEnabled;\n\n    public string Username\n    {\n        get => _username;\n        set\n        {\n            _username = value;\n            OnPropertyChanged(nameof(Username));\n            UpdateIsLoginEnabled();\n        }\n    }\n\n    public string Password\n    {\n        get => _password;\n        set\n        {\n            _password = value;\n            OnPropertyChanged(nameof(Password));\n            UpdateIsLoginEnabled();\n        }\n    }\n\n    public string Server\n    {\n        get => _server;\n        set\n        {\n            _server = value;\n            OnPropertyChanged(nameof(Server));\n            UpdateIsLoginEnabled();\n        }\n    }\n\n    public bool IsLoginEnabled\n    {\n        get => _isLoginEnabled;\n        private set\n        {\n            _isLoginEnabled = value;\n            OnPropertyChanged(nameof(IsLoginEnabled));\n        }\n    }\n\n    private void UpdateIsLoginEnabled()\n    {\n        IsLoginEnabled = !string.IsNullOrEmpty(Username) &&\n                         !string.IsNullOrEmpty(Password) &&\n                         !string.IsNullOrEmpty(Server);\n    }\n\n    public event PropertyChangedEventHandler PropertyChanged;\n    protected void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n}