using System;\nusing System.Drawing;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class CustomForm : Form\n{\n    private const int WM_NCPAINT = 0x85;\n    private const int WM_NCACTIVATE = 0x86;\n\n    protected override void WndProc(ref Message m)\n    {\n        base.WndProc(ref m);\n\n        if (m.Msg == WM_NCPAINT || m.Msg == WM_NCACTIVATE)\n        {\n            CustomDrawButtons();\n        }\n    }\n\n    private void CustomDrawButtons()\n    {\n        IntPtr hdc = GetWindowDC(this.Handle);\n        if (hdc != IntPtr.Zero)\n        {\n            using (Graphics g = Graphics.FromHdc(hdc))\n            {\n                Rectangle minButtonRect = GetButtonRectangle(NativeMethods.DFCS_CAPTIONMIN);\n                Rectangle maxButtonRect = GetButtonRectangle(NativeMethods.DFCS_CAPTIONMAX);\n\n                // Customize background color\n                using (Brush brush = new SolidBrush(Color.Yellow))\n                {\n                    g.FillRectangle(brush, minButtonRect);\n                    g.FillRectangle(brush, maxButtonRect);\n                }\n\n                // Draw default minimize and maximize buttons\n                ControlPaint.DrawCaptionButton(g, minButtonRect, CaptionButton.Minimize, ButtonState.Normal);\n                ControlPaint.DrawCaptionButton(g, maxButtonRect, CaptionButton.Maximize, ButtonState.Normal);\n            }\n\n            ReleaseDC(this.Handle, hdc);\n        }\n    }\n\n    private Rectangle GetButtonRectangle(int dfcsFlag)\n    {\n        // This method should calculate the correct button rectangle based on the form's size and style\n        // This is a simplified example\n        Rectangle rect = new Rectangle();\n        if (dfcsFlag == NativeMethods.DFCS_CAPTIONMIN)\n        {\n            // Example position for minimize button\n            rect = new Rectangle(this.Width - 60, 0, 30, 30);\n        }\n        else if (dfcsFlag == NativeMethods.DFCS_CAPTIONMAX)\n        {\n            // Example position for maximize button\n            rect = new Rectangle(this.Width - 90, 0, 30, 30);\n        }\n        return rect;\n    }\n\n    // PInvoke declarations\n    [DllImport("user32.dll")]\n    private static extern IntPtr GetWindowDC(IntPtr hwnd);\n\n    [DllImport("user32.dll")]\n    private static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);\n\n    private static class NativeMethods\n    {\n        public const int DFCS_CAPTIONMIN = 0x0001;\n        public const int DFCS_CAPTIONMAX = 0x0002;\n    }\n}