using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static List<string> GetDataFromDatabase()\n    {\n        // Simulate fetching data from a database\n        return new List<string> { "command1", "command2", "command3", "command4", "command5" };\n    }\n\n    private static void RunPowerShellCommand(string command)\n    {\n        // Simulate running a PowerShell command\n        Console.WriteLine($"Running {command}");\n        Thread.Sleep(2000); // Simulate intensive work\n        Console.WriteLine($"{command} completed");\n    }\n\n    static async Task Main(string[] args)\n    {\n        List<string> commands = GetDataFromDatabase();\n        SemaphoreSlim semaphore = new SemaphoreSlim(3); // Limit to 3 concurrent threads\n        List<Task> tasks = new List<Task>();\n\n        foreach (var command in commands)\n        {\n            await semaphore.WaitAsync();\n            tasks.Add(Task.Run(() =>\n            {\n                try\n                {\n                    RunPowerShellCommand(command);\n                }\n                finally\n                {\n                    semaphore.Release();\n                }\n            }));\n        }\n\n        await Task.WhenAll(tasks);\n        Console.WriteLine("All commands completed.");\n    }\n}