using System;\nusing System.IO;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Xml;\n\npublic class XmlSanitizer\n{\n    // Regular expression to match invalid hexadecimal characters\n    private static readonly Regex InvalidHexChars = new Regex(@"[\x00-\x08\x0B\x0C\x0E-\x1F\xFFFD]", RegexOptions.Compiled);\n\n    public static XmlReader CreateSanitizedXmlReader(Stream xmlStream, Encoding encoding)\n    {\n        // Read the XML data as a string with the specified encoding\n        string xmlContent;\n        using (StreamReader reader = new StreamReader(xmlStream, encoding))\n        {\n            xmlContent = reader.ReadToEnd();\n        }\n\n        // Remove invalid hexadecimal characters\n        string sanitizedXmlContent = InvalidHexChars.Replace(xmlContent, string.Empty);\n\n        // Convert the sanitized string back to a Stream\n        MemoryStream sanitizedStream = new MemoryStream(encoding.GetBytes(sanitizedXmlContent));\n\n        // Create and return the XmlReader\n        return XmlReader.Create(sanitizedStream);\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        string xmlInput = @"<root>Invalid char: &#x07;</root>";\n        MemoryStream xmlStream = new MemoryStream(Encoding.UTF8.GetBytes(xmlInput));\n\n        using (XmlReader reader = XmlSanitizer.CreateSanitizedXmlReader(xmlStream, Encoding.UTF8))\n        {\n            // Use the XmlReader as needed\n            while (reader.Read())\n            {\n                Console.WriteLine($"{reader.NodeType}: {reader.Name}");\n            }\n        }\n    }\n}