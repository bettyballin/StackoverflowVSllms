using System;\nusing System.Runtime.InteropServices;\nusing System.Security;\n\nclass Program\n{\n    static void Main()\n    {\n        SecureString secureString = new SecureString();\n        secureString.AppendChar('P');\n        secureString.AppendChar('a');\n        secureString.AppendChar('s');\n        secureString.AppendChar('s');\n        secureString.AppendChar('w');\n        secureString.AppendChar('o');\n        secureString.AppendChar('r');\n        secureString.AppendChar('d');\n        secureString.MakeReadOnly();\n\n        string plainString = ConvertToUnsecureString(secureString);\n        Console.WriteLine(plainString);\n    }\n\n    private static string ConvertToUnsecureString(SecureString secureString)\n    {\n        if (secureString == null)\n            throw new ArgumentNullException(nameof(secureString));\n\n        IntPtr unmanagedString = IntPtr.Zero;\n        try\n        {\n            unmanagedString = Marshal.SecureStringToBSTR(secureString);\n            return Marshal.PtrToStringBSTR(unmanagedString);\n        }\n        finally\n        {\n            Marshal.ZeroFreeBSTR(unmanagedString);\n        }\n    }\n}