using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class MyObject\n{\n    public List<MyObjectProperty> MyObjectProperties { get; set; }\n}\n\npublic class MyObjectProperty\n{\n    public string Name { get; set; }\n    public string Value { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        var theSortProperty = "YourPropertyName"; // Set your property name here\n        var isNumeric = true; // Change this based on your type determination logic\n        \n        // Sample data\n        List<MyObject> myObjects = new List<MyObject>\n        {\n            new MyObject { MyObjectProperties = new List<MyObjectProperty> { new MyObjectProperty { Name = "YourPropertyName", Value = "13" } } },\n            new MyObject { MyObjectProperties = new List<MyObjectProperty> { new MyObjectProperty { Name = "YourPropertyName", Value = "131" } } },\n            new MyObject { MyObjectProperties = new List<MyObjectProperty> { new MyObjectProperty { Name = "YourPropertyName", Value = "14" } } },\n            new MyObject { MyObjectProperties = new List<MyObjectProperty> { new MyObjectProperty { Name = "YourPropertyName", Value = "15" } } }\n        };\n\n        IEnumerable<MyObject> sortedObjects;\n        \n        if (isNumeric)\n        {\n            sortedObjects = myObjects.OrderBy(p => int.Parse(p.MyObjectProperties.Find(s => s.Name == theSortProperty).Value));\n        }\n        else\n        {\n            sortedObjects = myObjects.OrderBy(p => p.MyObjectProperties.Find(s => s.Name == theSortProperty).Value);\n        }\n        \n        foreach (var obj in sortedObjects)\n        {\n            Console.WriteLine(obj.MyObjectProperties.Find(s => s.Name == theSortProperty).Value);\n        }\n    }\n}