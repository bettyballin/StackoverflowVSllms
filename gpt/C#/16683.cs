using System;\nusing System.Collections.Generic;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Threading;\n\nnamespace MultiThreadedImport\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string filePath = "path\\to\\your\\file.csv";\n            string connectionString = "Your SQL Server Connection String";\n\n            string[] lines = File.ReadAllLines(filePath);\n            int numThreads = 4; // Set the number of threads you want to use\n            int rowsPerThread = lines.Length / numThreads;\n\n            List<Thread> threads = new List<Thread>();\n\n            for (int i = 0; i < numThreads; i++)\n            {\n                int start = i * rowsPerThread;\n                int end = (i == numThreads - 1) ? lines.Length : start + rowsPerThread;\n\n                Thread t = new Thread(() => ImportData(lines, start, end, connectionString));\n                threads.Add(t);\n                t.Start();\n            }\n\n            foreach (Thread t in threads)\n            {\n                t.Join();\n            }\n        }\n\n        static void ImportData(string[] lines, int start, int end, string connectionString)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n                for (int i = start; i < end; i++)\n                {\n                    string[] fields = lines[i].Split(',');\n                    SqlCommand cmd = new SqlCommand("INSERT INTO YourTable (Column1, Column2) VALUES (@Field1, @Field2)", connection);\n                    cmd.Parameters.AddWithValue("@Field1", fields[0]);\n                    cmd.Parameters.AddWithValue("@Field2", fields[1]);\n                    cmd.ExecuteNonQuery();\n                }\n            }\n        }\n    }\n}