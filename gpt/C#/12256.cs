using Moq;\nusing NUnit.Framework;\nusing System.Web.Mvc;\n\n[TestFixture]\npublic class EmployeeControllerTests\n{\n    private Mock<IEmployeeService> _mockEmployeeService;\n    private EmployeeController _controller;\n\n    [SetUp]\n    public void SetUp()\n    {\n        _mockEmployeeService = new Mock<IEmployeeService>();\n        _controller = new EmployeeController(_mockEmployeeService.Object);\n    }\n\n    [Test]\n    public void Index_ReturnsViewModel_WithEmployeeDetails()\n    {\n        // Arrange\n        var employeeId = 1;\n        var employee = new Employee\n        {\n            Id = employeeId,\n            Name = "John Doe",\n            Position = "Developer"\n        };\n        _mockEmployeeService.Setup(service => service.GetEmployeeById(employeeId)).Returns(employee);\n\n        // Act\n        var result = _controller.Index(employeeId) as ViewResult;\n        var viewModel = result?.Model as EmployeeController.EmployeeViewModel;\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.IsNotNull(viewModel);\n        Assert.AreEqual(employeeId, viewModel.Id);\n        Assert.AreEqual("John Doe", viewModel.Name);\n        Assert.AreEqual("Developer", viewModel.Position);\n    }\n}