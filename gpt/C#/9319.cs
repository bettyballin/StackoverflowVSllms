using System;\n\npublic class GapBuffer\n{\n    private char[] buffer;\n    private int gapStart;\n    private int gapEnd;\n\n    public GapBuffer(int initialCapacity = 1024)\n    {\n        buffer = new char[initialCapacity];\n        gapStart = 0;\n        gapEnd = initialCapacity;\n    }\n\n    public void Insert(char c, int position)\n    {\n        MoveGap(position);\n        buffer[gapStart++] = c;\n    }\n\n    public void Delete(int position)\n    {\n        MoveGap(position);\n        if (gapStart < buffer.Length)\n        {\n            gapStart++;\n        }\n    }\n\n    private void MoveGap(int position)\n    {\n        if (position < gapStart)\n        {\n            int delta = gapStart - position;\n            Array.Copy(buffer, position, buffer, gapEnd - delta, delta);\n            gapStart = position;\n            gapEnd -= delta;\n        }\n        else if (position > gapStart)\n        {\n            int delta = position - gapStart;\n            Array.Copy(buffer, gapEnd, buffer, gapStart, delta);\n            gapStart += delta;\n            gapEnd += delta;\n        }\n    }\n\n    public string GetText()\n    {\n        char[] newBuffer = new char[buffer.Length - (gapEnd - gapStart)];\n        Array.Copy(buffer, 0, newBuffer, 0, gapStart);\n        Array.Copy(buffer, gapEnd, newBuffer, gapStart, buffer.Length - gapEnd);\n        return new string(newBuffer);\n    }\n\n    public override string ToString()\n    {\n        return GetText();\n    }\n}