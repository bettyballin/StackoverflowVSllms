public class Contact\n   {\n       public string Name { get; set; }\n       public string Email { get; set; }\n   }\n\n   public class ContactMap : ClassMap<Contact>\n   {\n       public ContactMap(string delimiter)\n       {\n           AutoMap(CultureInfo.InvariantCulture);\n           Map(m => m.Name).Name("Name", "Full Name", "First Name", "Last Name");\n           Map(m => m.Email).Name("Email", "Email Address", "E-Mail");\n       }\n   }\n\n   public List<Contact> ImportContacts(string filePath)\n   {\n       var contacts = new List<Contact>();\n       string delimiter = DetermineDelimiter(filePath);\n\n       var config = new CsvConfiguration(CultureInfo.InvariantCulture)\n       {\n           Delimiter = delimiter,\n           IgnoreBlankLines = true,\n           TrimOptions = TrimOptions.Trim,\n           BadDataFound = context => { /* Handle bad data */ }\n       };\n\n       using (var reader = new StreamReader(filePath))\n       using (var csv = new CsvReader(reader, config))\n       {\n           csv.Context.RegisterClassMap(new ContactMap(delimiter));\n           contacts = csv.GetRecords<Contact>().ToList();\n       }\n\n       return contacts;\n   }\n\n   private string DetermineDelimiter(string filePath)\n   {\n       using (var reader = new StreamReader(filePath))\n       {\n           var headerLine = reader.ReadLine();\n           if (headerLine.Contains("\t")) return "\t";\n           if (headerLine.Contains(",")) return ",";\n           // Add more delimiters if necessary\n           throw new Exception("Unknown delimiter in CSV file.");\n       }\n   }