using System.ComponentModel;\n   using System.Configuration.Install;\n   using System.Runtime.InteropServices;\n\n   [RunInstaller(true)]\n   public class MyComInstaller : Installer\n   {\n       public override void Install(IDictionary stateSaver)\n       {\n           base.Install(stateSaver);\n           RegisterAssembly();\n       }\n\n       public override void Uninstall(IDictionary savedState)\n       {\n           base.Uninstall(savedState);\n           UnregisterAssembly();\n       }\n\n       private void RegisterAssembly()\n       {\n           string assemblyPath = this.GetType().Assembly.Location;\n           RegistrationServices regAsm = new RegistrationServices();\n           if (!regAsm.RegisterAssembly(this.GetType().Assembly, AssemblyRegistrationFlags.SetCodeBase))\n           {\n               throw new InstallException("Failed to register assembly for COM interop.");\n           }\n       }\n\n       private void UnregisterAssembly()\n       {\n           string assemblyPath = this.GetType().Assembly.Location;\n           RegistrationServices regAsm = new RegistrationServices();\n           if (!regAsm.UnregisterAssembly(this.GetType().Assembly))\n           {\n               throw new InstallException("Failed to unregister assembly for COM interop.");\n           }\n       }\n   }