public class UpdateStats : IHttpHandler\n{\n    private static readonly object _lockObject = new object();\n    private HttpContext _context;\n\n    public const String UpdateInProgressCacheKey = "FAHLeagueWebUpdateInProgress";\n\n    public void ProcessRequest(HttpContext context)\n    {\n        lock (_lockObject)\n        {\n            // Use a Cache variable to ensure we don't call multiple updates\n            Object inprogress = context.Cache[UpdateInProgressCacheKey];\n            if (inprogress != null)\n            {\n                // Already updating\n                context.Response.Redirect("Default.aspx");\n                return;\n            }\n            else\n            {\n                // Set the Cache variable so we know an Update is happening\n                context.Cache.Insert(UpdateInProgressCacheKey, true, null, DateTime.Now.AddMinutes(10), Cache.NoSlidingExpiration);\n            }\n\n            context.Response.Clear();\n            context.Response.ContentType = "text/html";\n            this._context = context;\n\n            context.Response.Write("<pre>Please wait while we Update our Statistics, you will be automatically redirected when this finishes...\n\n");\n\n            // Get the Stats\n            Statistics stats = new Statistics(context.Server);\n\n            // Subscribe to Update Progress Events\n            stats.UpdateProgress += this.HandleUpdateProgress;\n\n            try\n            {\n                // Update\n                String force = context.Request.QueryString["force"];\n                stats.UpdateStats((force != null));\n            }\n            finally\n            {\n                // Remove the Cache variable\n                context.Cache.Remove(UpdateInProgressCacheKey);\n            }\n\n            context.Response.Write("</pre>");\n            context.Response.Write("<meta http-equiv=\"refresh\" content=\"0;URL=Default.aspx\" />");\n            context.Response.Write("<p>If you are not automatically redirected please click <a href=\"Default.aspx\">here</a></p>");\n        }\n    }\n\n    private void HandleUpdateProgress(String message)\n    {\n        this._context.Response.Write(message + "\n");\n        this._context.Response.Flush();\n    }\n\n    public bool IsReusable\n    {\n        get\n        {\n            return false;\n        }\n    }\n}