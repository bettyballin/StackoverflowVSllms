using System;\nusing System.Data;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Xml.Serialization;\n\npublic class EncryptionHelper\n{\n    public static string Decrypt(string cipherText, string key, string iv)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    public static DataSet XMLToDataSet(string xmlData)\n    {\n        DataSet ds = new DataSet();\n        using (StringReader sr = new StringReader(xmlData))\n        {\n            ds.ReadXml(sr);\n        }\n        return ds;\n    }\n}\n\n// Usage\nstring encryptedData = "received-encrypted-data"; // Received from client\nstring key = "your-encryption-key"; // 32 bytes for AES-256\nstring iv = "your-initialization-vector"; // 16 bytes for AES\n\nstring decryptedData = EncryptionHelper.Decrypt(encryptedData, key, iv);\nDataSet ds = EncryptionHelper.XMLToDataSet(decryptedData);\n\n// Now you can use `ds` to update the database