using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Reflection;\n\npublic class ListToDataSetConverter\n{\n    public static DataSet ConvertToDataSet<T>(List<T> list)\n    {\n        DataSet dataSet = new DataSet();\n        DataTable dataTable = new DataTable(typeof(T).Name);\n\n        // Get all the properties of the object type\n        PropertyInfo[] properties = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);\n\n        // Create the columns in the DataTable\n        foreach (var property in properties)\n        {\n            dataTable.Columns.Add(property.Name, property.PropertyType);\n        }\n\n        // Populate the DataTable with the list data\n        foreach (var item in list)\n        {\n            DataRow dataRow = dataTable.NewRow();\n            foreach (var property in properties)\n            {\n                dataRow[property.Name] = property.GetValue(item) ?? DBNull.Value;\n            }\n            dataTable.Rows.Add(dataRow);\n        }\n\n        dataSet.Tables.Add(dataTable);\n        return dataSet;\n    }\n}\n\n// Example usage\npublic class Example\n{\n    public static void Main()\n    {\n        List<Person> people = new List<Person>\n        {\n            new Person { Id = 1, Name = "John", Age = 30 },\n            new Person { Id = 2, Name = "Jane", Age = 25 },\n        };\n\n        DataSet dataSet = ListToDataSetConverter.ConvertToDataSet(people);\n\n        // Display the DataSet (for testing purposes)\n        foreach (DataTable table in dataSet.Tables)\n        {\n            foreach (DataRow row in table.Rows)\n            {\n                foreach (DataColumn column in table.Columns)\n                {\n                    Console.Write($"{column.ColumnName}: {row[column]} ");\n                }\n                Console.WriteLine();\n            }\n        }\n    }\n}\n\npublic class Person\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public int Age { get; set; }\n}