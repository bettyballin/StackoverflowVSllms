using System;\nusing System.Linq;\nusing System.Collections.Generic;\n\npublic class ComputerAttribute\n{\n    public int ComputerID { get; set; }\n    public string Attribute { get; set; }\n    public string Value { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        // Assume db.ComputerAttributes is your data source\n        List<ComputerAttribute> computerAttributes = new List<ComputerAttribute>\n        {\n            new ComputerAttribute { ComputerID = 1, Attribute = "MEMORY", Value = "2GB" },\n            new ComputerAttribute { ComputerID = 1, Attribute = "CPU", Value = "3.0GHz" },\n            new ComputerAttribute { ComputerID = 2, Attribute = "MEMORY", Value = "1GB" },\n            new ComputerAttribute { ComputerID = 2, Attribute = "CPU", Value = "2.5GHz" }\n            // Add more items as needed\n        };\n\n        var db = new { ComputerAttributes = computerAttributes.AsQueryable() };\n\n        // Step 1: Filter by MEMORY\n        var resultsList = from results in db.ComputerAttributes\n                          where results.Attribute == "MEMORY" && Convert.ToInt32(results.Value.Replace("GB", "")) >= 1\n                          select results.ComputerID;\n\n        // Step 2: Filter by CPU\n        resultsList = from results in db.ComputerAttributes\n                      where results.Attribute == "CPU" && Convert.ToDouble(results.Value.Replace("GHz", "")) > 2.8\n                      && resultsList.Contains(results.ComputerID)\n                      select results.ComputerID;\n\n        // Further steps can be added similarly\n\n        // Output the filtered ComputerIDs\n        foreach (var id in resultsList)\n        {\n            Console.WriteLine(id);\n        }\n    }\n}