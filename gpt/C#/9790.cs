using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Reflection;\n\npublic static class DataReaderExtensions\n{\n    public static List<T> ToList<T>(this IDataReader dataReader) where T : new()\n    {\n        List<T> list = new List<T>();\n        PropertyInfo[] properties = typeof(T).GetProperties();\n\n        while (dataReader.Read())\n        {\n            T obj = new T();\n            foreach (PropertyInfo property in properties)\n            {\n                if (!dataReader.IsDBNull(dataReader.GetOrdinal(property.Name)))\n                {\n                    Type propertyType = Nullable.GetUnderlyingType(property.PropertyType) ?? property.PropertyType;\n                    object value = Convert.ChangeType(dataReader[property.Name], propertyType);\n                    property.SetValue(obj, value, null);\n                }\n            }\n            list.Add(obj);\n        }\n\n        return list;\n    }\n}