using System;\nusing System.Collections.Concurrent;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Http;\n\npublic class HeartbeatController : ApiController\n{\n    private static ConcurrentDictionary<string, DateTime> _connectionStatuses = new ConcurrentDictionary<string, DateTime>();\n\n    [HttpPost]\n    [Route("heartbeat")]\n    public IHttpActionResult Heartbeat()\n    {\n        var connectionId = HttpContext.Current.Session.SessionID;\n        _connectionStatuses[connectionId] = DateTime.UtcNow;\n        return Ok();\n    }\n\n    public static void MonitorConnections()\n    {\n        var threshold = DateTime.UtcNow.AddSeconds(-60); // 1-minute threshold\n        var inactiveConnections = _connectionStatuses\n            .Where(kvp => kvp.Value < threshold)\n            .Select(kvp => kvp.Key)\n            .ToList();\n\n        foreach (var connectionId in inactiveConnections)\n        {\n            _connectionStatuses.TryRemove(connectionId, out _);\n            // Handle inactive connection (e.g., clean up resources)\n        }\n    }\n}