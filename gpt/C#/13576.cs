using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Comment\n{\n    public int CommentID { get; set; }\n    public int? ParentCommentID { get; set; }\n    public string Content { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        List<Comment> comments = new List<Comment>\n        {\n            new Comment { CommentID = 1, ParentCommentID = null, Content = "Blah" },\n            new Comment { CommentID = 2, ParentCommentID = 1, Content = "Blah Blah" },\n            new Comment { CommentID = 3, ParentCommentID = 2, Content = "Blah Blah Blah" },\n            new Comment { CommentID = 4, ParentCommentID = 3, Content = "Blah Blah Blah Blah" },\n            new Comment { CommentID = 5, ParentCommentID = 2, Content = "Blah Blah Blah Again" },\n            new Comment { CommentID = 6, ParentCommentID = 1, Content = "Blah Blah Again" }\n        };\n\n        List<Comment> sortedComments = new List<Comment>();\n        BuildThreadedComments(comments, sortedComments, null, 0);\n\n        foreach (var comment in sortedComments)\n        {\n            Console.WriteLine(new string('-', comment.ParentCommentID.HasValue ? comment.ParentCommentID.Value * 4 : 0) + comment.Content);\n        }\n    }\n\n    public static void BuildThreadedComments(List<Comment> comments, List<Comment> result, int? parentId, int level)\n    {\n        foreach (var comment in comments.Where(c => c.ParentCommentID == parentId))\n        {\n            result.Add(comment);\n            BuildThreadedComments(comments, result, comment.CommentID, level + 1);\n        }\n    }\n}