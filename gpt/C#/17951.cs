using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecureStorage\n{\n    public static void StoreEncryptedData(string data, string filePath)\n    {\n        byte[] dataBytes = Encoding.UTF8.GetBytes(data);\n        \n        // Encrypt data with CurrentUser scope\n        byte[] encryptedData = ProtectedData.Protect(dataBytes, null, DataProtectionScope.CurrentUser);\n        \n        // Store the encrypted data to a file\n        File.WriteAllBytes(filePath, encryptedData);\n    }\n\n    public static string RetrieveEncryptedData(string filePath)\n    {\n        // Read the encrypted data from the file\n        byte[] encryptedData = File.ReadAllBytes(filePath);\n        \n        // Decrypt data with CurrentUser scope\n        byte[] decryptedData = ProtectedData.Unprotect(encryptedData, null, DataProtectionScope.CurrentUser);\n        \n        return Encoding.UTF8.GetString(decryptedData);\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        string dataToStore = "Sensitive data that needs to be encrypted";\n        string filePath = "path_to_store_encrypted_data.dat";\n        \n        // Store encrypted data\n        SecureStorage.StoreEncryptedData(dataToStore, filePath);\n        \n        // Retrieve encrypted data\n        string retrievedData = SecureStorage.RetrieveEncryptedData(filePath);\n        \n        Console.WriteLine("Retrieved Data: " + retrievedData);\n    }\n}