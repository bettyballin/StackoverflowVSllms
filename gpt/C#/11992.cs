using Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\n\nnamespace RestApiExample\n{\n    public class Startup\n    {\n        public void ConfigureServices(IServiceCollection services)\n        {\n            services.AddControllers();\n        }\n\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            if (env.IsDevelopment())\n            {\n                app.UseDeveloperExceptionPage();\n            }\n\n            app.UseRouting();\n\n            app.UseEndpoints(endpoints =>\n            {\n                endpoints.MapControllers();\n            });\n        }\n    }\n\n    public class User\n    {\n        public int Id { get; set; }\n        public string Name { get; set; }\n    }\n\n    [ApiController]\n    [Route("api/v1/[controller]")]\n    public class UsersController : ControllerBase\n    {\n        private static readonly List<User> Users = new List<User>\n        {\n            new User { Id = 1, Name = "John Doe" },\n            new User { Id = 2, Name = "Jane Doe" }\n        };\n\n        [HttpGet]\n        public IActionResult Get()\n        {\n            return Ok(Users);\n        }\n\n        [HttpGet("{id}")]\n        public IActionResult Get(int id)\n        {\n            var user = Users.FirstOrDefault(u => u.Id == id);\n            if (user == null)\n            {\n                return NotFound();\n            }\n            return Ok(user);\n        }\n\n        [HttpPost]\n        public IActionResult Post(User user)\n        {\n            user.Id = Users.Max(u => u.Id) + 1;\n            Users.Add(user);\n            return CreatedAtAction(nameof(Get), new { id = user.Id }, user);\n        }\n\n        [HttpPut("{id}")]\n        public IActionResult Put(int id, User updatedUser)\n        {\n            var user = Users.FirstOrDefault(u => u.Id == id);\n            if (user == null)\n            {\n                return NotFound();\n            }\n            user.Name = updatedUser.Name;\n            return NoContent();\n        }\n\n        [HttpDelete("{id}")]\n        public IActionResult Delete(int id)\n        {\n            var user = Users.FirstOrDefault(u => u.Id == id);\n            if (user == null)\n            {\n                return NotFound();\n            }\n            Users.Remove(user);\n            return NoContent();\n        }\n    }\n}