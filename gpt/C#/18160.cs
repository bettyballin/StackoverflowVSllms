using System;\nusing System.Runtime.InteropServices;\n\npublic class ProxySettings\n{\n    [DllImport("wininet.dll", SetLastError = true)]\n    private static extern bool InternetSetOption(IntPtr hInternet, int dwOption, IntPtr lpBuffer, int dwBufferLength);\n\n    private const int INTERNET_OPTION_REFRESH = 37;\n    private const int INTERNET_OPTION_SETTINGS_CHANGED = 39;\n    private const int INTERNET_OPTION_PROXY = 38;\n\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]\n    public struct INTERNET_PROXY_INFO\n    {\n        public int dwAccessType;\n        public IntPtr lpszProxy;\n        public IntPtr lpszProxyBypass;\n    }\n\n    private const int INTERNET_OPEN_TYPE_PROXY = 3;\n    \n    public static void SetProxy(string proxyServer)\n    {\n        INTERNET_PROXY_INFO proxyInfo = new INTERNET_PROXY_INFO();\n        proxyInfo.dwAccessType = INTERNET_OPEN_TYPE_PROXY;\n        proxyInfo.lpszProxy = Marshal.StringToHGlobalAnsi(proxyServer);\n        proxyInfo.lpszProxyBypass = Marshal.StringToHGlobalAnsi("local");\n\n        IntPtr proxyInfoPtr = Marshal.AllocCoTaskMem(Marshal.SizeOf(proxyInfo));\n        Marshal.StructureToPtr(proxyInfo, proxyInfoPtr, true);\n\n        bool result = InternetSetOption(IntPtr.Zero, INTERNET_OPTION_PROXY, proxyInfoPtr, Marshal.SizeOf(proxyInfo));\n        if (!result)\n        {\n            throw new InvalidOperationException("Failed to set proxy settings");\n        }\n        \n        // Notify the system that the settings have changed and refresh\n        InternetSetOption(IntPtr.Zero, INTERNET_OPTION_SETTINGS_CHANGED, IntPtr.Zero, 0);\n        InternetSetOption(IntPtr.Zero, INTERNET_OPTION_REFRESH, IntPtr.Zero, 0);\n\n        // Free allocated memory\n        Marshal.FreeHGlobal(proxyInfo.lpszProxy);\n        Marshal.FreeHGlobal(proxyInfo.lpszProxyBypass);\n        Marshal.FreeCoTaskMem(proxyInfoPtr);\n    }\n}