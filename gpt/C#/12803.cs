using (var session = sessionFactory.OpenSession())\n{\n    using (var transaction = session.BeginTransaction())\n    {\n        try\n        {\n            var booking = session.QueryOver<Booking>()\n                                 .Where(b => b.BookingStart < desiredEndDate && b.BookingEnd > desiredStartDate)\n                                 .Take(1)\n                                 .SingleOrDefault();\n\n            if (booking == null)\n            {\n                var newBooking = new Booking\n                {\n                    BookingStart = desiredStartDate,\n                    BookingEnd = desiredEndDate\n                };\n                session.Save(newBooking);\n            }\n            else\n            {\n                throw new InvalidOperationException("Booking conflict detected.");\n            }\n\n            transaction.Commit();\n        }\n        catch (StaleObjectStateException ex)\n        {\n            transaction.Rollback();\n            // Handle optimistic concurrency exception\n            throw;\n        }\n        catch (Exception ex)\n        {\n            transaction.Rollback();\n            // Handle other exceptions\n            throw;\n        }\n    }\n}