using System;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\npublic class IsDirtyProvider : Component, IExtenderProvider\n{\n    private readonly Dictionary<Control, bool> isDirtyValues = new Dictionary<Control, bool>();\n\n    public IsDirtyProvider()\n    {\n    }\n\n    public bool CanExtend(object extendee)\n    {\n        return extendee is Control; // This will add the property to all controls\n    }\n\n    [DefaultValue(false)]\n    public bool GetIsDirty(Control control)\n    {\n        if (isDirtyValues.TryGetValue(control, out bool isDirty))\n        {\n            return isDirty;\n        }\n        return false;\n    }\n\n    public void SetIsDirty(Control control, bool value)\n    {\n        if (control != null)\n        {\n            isDirtyValues[control] = value;\n        }\n    }\n}\n\n// Usage in a Form\npublic partial class MyForm : Form\n{\n    private IsDirtyProvider isDirtyProvider = new IsDirtyProvider();\n\n    public MyForm()\n    {\n        InitializeComponent();\n        // Example of setting the IsDirty property\n        isDirtyProvider.SetIsDirty(textBox1, true);\n    }\n}