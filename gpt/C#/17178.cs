using System;\nusing System.IO;\n\nclass Program\n{\n    static void Main()\n    {\n        string pathToWatch = @"C:\path\to\your\file";\n        string fileName = "yourfile.txt";\n        string targetDirectory = @"C:\path\to\backup";\n\n        using (FileSystemWatcher watcher = new FileSystemWatcher())\n        {\n            watcher.Path = pathToWatch;\n            watcher.Filter = fileName;\n\n            watcher.NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.FileName | NotifyFilters.Size;\n\n            watcher.Changed += (source, e) => OnChanged(e, targetDirectory);\n            watcher.Created += (source, e) => OnChanged(e, targetDirectory);\n            watcher.Renamed += (source, e) => OnChanged(e, targetDirectory);\n\n            watcher.EnableRaisingEvents = true;\n\n            Console.WriteLine($"Monitoring changes to {Path.Combine(pathToWatch, fileName)}...");\n            Console.WriteLine("Press 'q' to quit the sample.");\n\n            while (Console.Read() != 'q') ;\n        }\n    }\n\n    private static void OnChanged(FileSystemEventArgs e, string targetDirectory)\n    {\n        string backupFilePath = Path.Combine(targetDirectory, Path.GetFileName(e.FullPath));\n        \n        try\n        {\n            File.Copy(e.FullPath, backupFilePath, true);\n            Console.WriteLine($"File copied to {backupFilePath} at {DateTime.Now}");\n        }\n        catch (IOException ex)\n        {\n            Console.WriteLine($"Error copying file: {ex.Message}");\n        }\n    }\n}