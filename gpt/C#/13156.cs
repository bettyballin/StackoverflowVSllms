using System;\nusing System.Collections.Generic;\n\npublic class BinaryHeap<T> where T : IComparable<T>\n{\n    private List<T> heap = new List<T>();\n\n    public int Count => heap.Count;\n\n    public void Insert(T value)\n    {\n        heap.Add(value);\n        HeapifyUp(heap.Count - 1);\n    }\n\n    public T ExtractMin()\n    {\n        if (heap.Count == 0)\n            throw new InvalidOperationException("Heap is empty");\n\n        T min = heap[0];\n        heap[0] = heap[heap.Count - 1];\n        heap.RemoveAt(heap.Count - 1);\n        HeapifyDown(0);\n        return min;\n    }\n\n    private void HeapifyUp(int index)\n    {\n        while (index > 0)\n        {\n            int parentIndex = (index - 1) / 2;\n            if (heap[index].CompareTo(heap[parentIndex]) >= 0)\n                break;\n\n            Swap(index, parentIndex);\n            index = parentIndex;\n        }\n    }\n\n    private void HeapifyDown(int index)\n    {\n        while (true)\n        {\n            int leftChild = 2 * index + 1;\n            int rightChild = 2 * index + 2;\n            int smallest = index;\n\n            if (leftChild < heap.Count && heap[leftChild].CompareTo(heap[smallest]) < 0)\n                smallest = leftChild;\n            if (rightChild < heap.Count && heap[rightChild].CompareTo(heap[smallest]) < 0)\n                smallest = rightChild;\n            if (smallest == index)\n                break;\n\n            Swap(index, smallest);\n            index = smallest;\n        }\n    }\n\n    private void Swap(int index1, int index2)\n    {\n        T temp = heap[index1];\n        heap[index1] = heap[index2];\n        heap[index2] = temp;\n    }\n}\n\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        BinaryHeap<int> minHeap = new BinaryHeap<int>();\n        minHeap.Insert(3);\n        minHeap.Insert(1);\n        minHeap.Insert(6);\n        minHeap.Insert(5);\n        minHeap.Insert(2);\n        minHeap.Insert(4);\n\n        Console.WriteLine("Extracted Min: " + minHeap.ExtractMin());\n        Console.WriteLine("Extracted Min: " + minHeap.ExtractMin());\n        Console.WriteLine("Extracted Min: " + minHeap.ExtractMin());\n    }\n}