// Set up the font\nfuenteActual = new FTFont(fuentes.FontMap[fuente], out ultimoError);\nfuenteActual.ftRenderToTexture(64, 96);\nfuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_CENTERED;\n\nvoid RenderText(Texto texto)\n{\n    // Reset the modelview matrix\n    Gl.glLoadIdentity();\n\n    // Calculate the angle in degrees\n    float angulo = (float)(Math.Atan2(texto.Orientacion.Y, texto.Orientacion.X) * (180.0 / Math.PI));\n\n    // Set the text color\n    Gl.glColor3f(texto.getRFloat(), texto.getGFloat(), texto.getBFloat());\n\n    // Apply transformations: Translate first, then rotate, then scale\n    Gl.glTranslatef((float)texto.Posicion.X, (float)texto.Posicion.Y, (float)texto.Posicion.Z);\n    Gl.glRotatef(angulo, 0, 0, 1); // Rotate around the Z-axis for 2D text\n    Gl.glScalef(texto.Tamaño, texto.Tamaño, texto.Tamaño);\n\n    // Set alignment\n    switch (texto.Alineacion)\n    {\n        case Align.left:\n            fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_LEFT;\n            break;\n        case Align.center:\n            fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_CENTERED;\n            break;\n        case Align.right:\n            fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_RIGHT;\n            break;\n    }\n\n    // Render the text\n    fuenteActual.ftBeginFont();\n    fuenteActual.ftWrite(texto.Text);\n    fuenteActual.ftEndFont();\n}