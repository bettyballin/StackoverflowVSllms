using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]\n    public static extern bool CreateProcessWithLogonW(\n        string userName,\n        string domain,\n        string password,\n        int logonFlags,\n        string applicationName,\n        string commandLine,\n        int creationFlags,\n        IntPtr environment,\n        string currentDirectory,\n        ref STARTUPINFO startupInfo,\n        out PROCESS_INFORMATION processInformation);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct STARTUPINFO\n    {\n        public int cb;\n        public string lpReserved;\n        public string lpDesktop;\n        public string lpTitle;\n        public int dwX;\n        public int dwY;\n        public int dwXSize;\n        public int dwYSize;\n        public int dwXCountChars;\n        public int dwYCountChars;\n        public int dwFillAttribute;\n        public int dwFlags;\n        public short wShowWindow;\n        public short cbReserved2;\n        public IntPtr lpReserved2;\n        public IntPtr hStdInput;\n        public IntPtr hStdOutput;\n        public IntPtr hStdError;\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct PROCESS_INFORMATION\n    {\n        public IntPtr hProcess;\n        public IntPtr hThread;\n        public int dwProcessId;\n        public int dwThreadId;\n    }\n\n    public const int LOGON_NETCREDENTIALS_ONLY = 0x00000002;\n    public const int CREATE_NO_WINDOW = 0x08000000;\n\n    static void Main(string[] args)\n    {\n        string domain = "DOMAIN";\n        string username = "user";\n        string password = "password";\n        string applicationName = "YourApplication.exe";\n        string commandLine = null;\n\n        STARTUPINFO si = new STARTUPINFO();\n        si.cb = Marshal.SizeOf(si);\n        PROCESS_INFORMATION pi;\n\n        bool result = CreateProcessWithLogonW(\n            username,\n            domain,\n            password,\n            LOGON_NETCREDENTIALS_ONLY,\n            applicationName,\n            commandLine,\n            CREATE_NO_WINDOW,\n            IntPtr.Zero,\n            null,\n            ref si,\n            out pi);\n\n        if (result)\n        {\n            Console.WriteLine("Process started successfully.");\n        }\n        else\n        {\n            Console.WriteLine("Error: " + Marshal.GetLastWin32Error());\n        }\n    }\n}