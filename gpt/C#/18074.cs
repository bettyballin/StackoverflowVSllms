using System;\nusing System.Reflection;\n\npublic class Program\n{\n    public static void Main()\n    {\n        string dll = "ProjectA.dll"; // Example\n        string className = "ProjectA.A`2[enuT,enuJ]"; // Example\n\n        // Load the assembly\n        Assembly assembly = Assembly.LoadFrom(dll);\n\n        // Get the type of the class\n        Type type = assembly.GetType(className);\n\n        // Create an instance of the class\n        object obj = Activator.CreateInstance(type);\n\n        // Get the BASE type\n        Type baseType = type.BaseType;\n\n        // Get the method from the BASE class you want to invoke\n        MethodInfo method = baseType.GetMethod("YourMethodName");\n\n        // Check if the method is found and then invoke it\n        if (method != null)\n        {\n            // Invoke the method on the object instance\n            method.Invoke(obj, new object[] { /* method parameters if any */ });\n        }\n        else\n        {\n            Console.WriteLine("Method not found.");\n        }\n    }\n}