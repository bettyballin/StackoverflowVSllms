[ServiceContract]\npublic interface IServerService\n{\n    [OperationContract]\n    void GiveTheServerMyServiceUri(string uri);\n\n    [OperationContract]\n    void TellAllClientsSomething(string message);\n}\n\n// THIS IS THE INTERFACE I WANT TO INCLUDE IN THE WSDL\n[ServiceContract]\npublic interface IClientService\n{\n    [OperationContract]\n    void ReceiveMessageFromServer(string message);\n}\n\npublic class ServerService : IServerService\n{\n    private List<string> knownClients;\n\n    public void GiveTheServerMyServiceUri(string uri)\n    { \n        knownClients.Add(uri);\n    }\n\n    public void TellAllClientsSomething(string message)\n    {\n        foreach (string clientUri in knownClients)\n        {\n            // 1. Create instance of ClientServiceProxy using client's uri\n            // 2. Call proxy.ReceiveMessageFromServer(message)\n        }\n    }\n}\n\npublic class ServerServiceHostFactory : ServiceHostFactory\n{\n    protected override ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses)\n    {\n        ServiceHost host = new ServiceHost(serviceType, baseAddresses);\n        foreach (ServiceEndpoint endpoint in host.Description.Endpoints)\n        {\n            endpoint.Behaviors.Add(new WsdlExporterBehavior());\n        }\n        return host;\n    }\n}\n\npublic class WsdlExporterBehavior : IEndpointBehavior\n{\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters) { }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime) { }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher) { }\n\n    public void Validate(ServiceEndpoint endpoint) { }\n\n    public void ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext context)\n    {\n        exporter.ExportEndpointExtensions.Add(new CustomWsdlExportExtension());\n    }\n}