using System;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    private static int sharedResource = 0;\n    private static object lockObject = new object();\n\n    static void Main(string[] args)\n    {\n        int numberOfThreads = 100;\n        Task[] tasks = new Task[numberOfThreads];\n\n        for (int i = 0; i < numberOfThreads; i++)\n        {\n            tasks[i] = Task.Run(() =>\n            {\n                for (int j = 0; j < 1000; j++)\n                {\n                    IncrementResource();\n                }\n            });\n        }\n\n        Task.WaitAll(tasks);\n        Console.WriteLine($"Final value of sharedResource: {sharedResource}");\n    }\n\n    private static void IncrementResource()\n    {\n        lock (lockObject)\n        {\n            sharedResource++;\n        }\n    }\n}