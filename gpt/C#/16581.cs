using System;\nusing System.Data.SQLite;\nusing System.IO;\nusing System.Reflection;\n\npublic class DatabaseHelper\n{\n    private static readonly string DbResourceName = "YourNamespace.Title.Storage.storage.db3";\n    private static readonly string TempDbPath = Path.Combine(Path.GetTempPath(), "storage.db3");\n\n    public static SQLiteConnection GetConnection()\n    {\n        // Extract the embedded resource database file to a temporary location if it doesn't exist\n        if (!File.Exists(TempDbPath))\n        {\n            using (Stream resourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(DbResourceName))\n            {\n                if (resourceStream == null)\n                {\n                    throw new Exception("Database resource not found.");\n                }\n                using (FileStream fileStream = new FileStream(TempDbPath, FileMode.Create, FileAccess.Write))\n                {\n                    resourceStream.CopyTo(fileStream);\n                }\n            }\n        }\n\n        // Create and open a connection to the extracted database file\n        var connectionString = $"Data Source={TempDbPath};Version=3;";\n        var connection = new SQLiteConnection(connectionString);\n        connection.Open();\n        return connection;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        using (var con = DatabaseHelper.GetConnection())\n        {\n            // Use the SQLite connection\n            using (var cmd = new SQLiteCommand("SELECT * FROM YourTable", con))\n            {\n                using (var reader = cmd.ExecuteReader())\n                {\n                    while (reader.Read())\n                    {\n                        Console.WriteLine(reader["ColumnName"]);\n                    }\n                }\n            }\n        }\n    }\n}