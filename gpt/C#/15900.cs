using System;\nusing System.Collections.Generic;\nusing System.Web.UI.WebControls;\n\npublic partial class YourPage : System.Web.UI.Page\n{\n    // Define a dictionary to hold the field permissions based on role and status\n    private Dictionary<string, Dictionary<string, List<string>>> fieldPermissions;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            InitializeFieldPermissions();\n            ApplyFieldPermissions();\n        }\n    }\n\n    private void InitializeFieldPermissions()\n    {\n        // Initialize the field permissions dictionary\n        fieldPermissions = new Dictionary<string, Dictionary<string, List<string>>>();\n\n        // Example: Adding permissions for role "Admin" and status "Approved"\n        fieldPermissions["Admin"] = new Dictionary<string, List<string>>()\n        {\n            { "Approved", new List<string> { "Field1", "Field2", "Field3" } },\n            { "Pending", new List<string> { "Field4", "Field5" } },\n            // Add other statuses and fields as needed\n        };\n\n        // Example: Adding permissions for another role "User"\n        fieldPermissions["User"] = new Dictionary<string, List<string>>()\n        {\n            { "Approved", new List<string> { "Field6", "Field7" } },\n            { "Pending", new List<string> { "Field8", "Field9" } },\n            // Add other statuses and fields as needed\n        };\n\n        // Add other roles and their respective permissions as needed\n    }\n\n    private void ApplyFieldPermissions()\n    {\n        // Get the current user's role and order status\n        string userRole = GetCurrentUserRole();\n        string orderStatus = GetOrderStatus();\n\n        // Get the fields to be enabled/disabled based on the role and status\n        if (fieldPermissions.ContainsKey(userRole) && fieldPermissions[userRole].ContainsKey(orderStatus))\n        {\n            List<string> fieldsToEnable = fieldPermissions[userRole][orderStatus];\n\n            // Loop through all controls and enable/disable based on the permissions\n            foreach (Control control in this.form1.Controls)\n            {\n                if (control is TextBox || control is DropDownList || control is CheckBox)\n                {\n                    control.Enabled = fieldsToEnable.Contains(control.ID);\n                }\n            }\n        }\n    }\n\n    private string GetCurrentUserRole()\n    {\n        // Implement logic to get the current user's role\n        // For example, you might use User.Identity or a custom method\n        return "Admin"; // Example return value\n    }\n\n    private string GetOrderStatus()\n    {\n        // Implement logic to get the current order status\n        // This might involve querying a database or similar\n        return "Approved"; // Example return value\n    }\n}