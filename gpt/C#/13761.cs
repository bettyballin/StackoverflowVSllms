using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n    {\n        rsa.ImportParameters(senderPublicKey);\n        using (SHA256 sha256 = SHA256.Create())\n        {\n            byte[] hash = sha256.ComputeHash(encryptedData);\n            bool isVerified = rsa.VerifyHash(hash, CryptoConfig.MapNameToOID("SHA256"), signature);\n            if (isVerified)\n            {\n                rsa.ImportParameters(receiverPrivateKey);\n                byte[] decryptedData = rsa.Decrypt(encryptedData, false);\n                // Use the decryptedData\n            }\n            else\n            {\n                throw new CryptographicException("Signature verification failed.");\n            }\n        }\n    }