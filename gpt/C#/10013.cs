using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing Org.BouncyCastle.Crypto;\nusing Org.BouncyCastle.Crypto.Engines;\nusing Org.BouncyCastle.Crypto.Paddings;\nusing Org.BouncyCastle.Crypto.Parameters;\nusing Org.BouncyCastle.Security;\n\npublic class EncryptionService\n{\n    private readonly byte[] _key;\n    private readonly byte[] _iv;\n\n    public EncryptionService(byte[] key, byte[] iv)\n    {\n        _key = key;\n        _iv = iv;\n    }\n\n    public byte[] Encrypt(byte[] data)\n    {\n        IBufferedCipher cipher = CipherUtilities.GetCipher("AES/CBC/PKCS7Padding");\n        cipher.Init(true, new ParametersWithIV(ParameterUtilities.CreateKeyParameter("AES", _key), _iv));\n        return cipher.DoFinal(data);\n    }\n\n    public byte[] Decrypt(byte[] encryptedData)\n    {\n        IBufferedCipher cipher = CipherUtilities.GetCipher("AES/CBC/PKCS7Padding");\n        cipher.Init(false, new ParametersWithIV(ParameterUtilities.CreateKeyParameter("AES", _key), _iv));\n        return cipher.DoFinal(encryptedData);\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        byte[] key = Convert.FromBase64String("your-256-bit-base64-key");\n        byte[] iv = Convert.FromBase64String("your-128-bit-base64-iv");\n        byte[] dataToEncrypt = System.Text.Encoding.UTF8.GetBytes("Sensitive data");\n\n        EncryptionService encryptionService = new EncryptionService(key, iv);\n\n        byte[] encryptedData = encryptionService.Encrypt(dataToEncrypt);\n        Console.WriteLine("Encrypted: " + Convert.ToBase64String(encryptedData));\n\n        byte[] decryptedData = encryptionService.Decrypt(encryptedData);\n        Console.WriteLine("Decrypted: " + System.Text.Encoding.UTF8.GetString(decryptedData));\n    }\n}