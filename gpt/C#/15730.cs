using System;\nusing System.IO;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static int totalDirectories = 0;\n    static int processedDirectories = 0;\n    static ProgressBar progressBar;\n\n    [STAThread]\n    static void Main(string[] args)\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n\n        Form form = new Form();\n        form.Text = "Directory Scan Progress";\n        form.Width = 400;\n        form.Height = 100;\n\n        progressBar = new ProgressBar();\n        progressBar.Dock = DockStyle.Fill;\n        progressBar.Minimum = 0;\n        progressBar.Maximum = 100;\n        form.Controls.Add(progressBar);\n\n        BackgroundWorker bw = new BackgroundWorker();\n        bw.WorkerReportsProgress = true;\n        bw.DoWork += new DoWorkEventHandler(BackgroundWorker_DoWork);\n        bw.ProgressChanged += new ProgressChangedEventHandler(BackgroundWorker_ProgressChanged);\n        bw.RunWorkerCompleted += new RunWorkerCompletedEventHandler(BackgroundWorker_RunWorkerCompleted);\n\n        form.Shown += (sender, e) => { bw.RunWorkerAsync("c:\\"); };\n        Application.Run(form);\n    }\n\n    static void BackgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        string startDir = (string)e.Argument;\n        CountDirectories(startDir);\n        recurse(startDir, (BackgroundWorker)sender);\n    }\n\n    static void BackgroundWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n    {\n        progressBar.Value = e.ProgressPercentage;\n    }\n\n    static void BackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        MessageBox.Show("Directory scan completed!");\n    }\n\n    static void CountDirectories(string pos)\n    {\n        DirectoryInfo f = new DirectoryInfo(pos);\n        try\n        {\n            foreach (DirectoryInfo x in f.GetDirectories("*", SearchOption.AllDirectories))\n            {\n                totalDirectories++;\n            }\n        }\n        catch (Exception) { }\n    }\n\n    static void recurse(string pos, BackgroundWorker bw)\n    {\n        DirectoryInfo f = new DirectoryInfo(pos);\n        try\n        {\n            foreach (DirectoryInfo x in f.GetDirectories("*"))\n            {\n                processedDirectories++;\n                int progress = (int)((double)processedDirectories / totalDirectories * 100);\n                bw.ReportProgress(progress);\n                recurse(x.FullName, bw);\n            }\n        }\n        catch (Exception) { }\n    }\n}