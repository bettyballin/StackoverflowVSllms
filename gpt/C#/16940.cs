private readonly object _lock = new object();\nprivate Queue<int> _queue = new Queue<int>();\n\npublic void Enqueue(int item)\n{\n    lock (_lock)\n    {\n        _queue.Enqueue(item);\n    }\n}\n\npublic int Dequeue()\n{\n    lock (_lock)\n    {\n        if (_queue.Count > 0)\n        {\n            return _queue.Dequeue();\n        }\n        throw new InvalidOperationException("Queue is empty.");\n    }\n}\n\npublic int Count\n{\n    get\n    {\n        lock (_lock)\n        {\n            return _queue.Count;\n        }\n    }\n}