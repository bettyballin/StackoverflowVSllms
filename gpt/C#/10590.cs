using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading.Tasks;\n\npublic class TcpServer\n{\n    private TcpListener listener;\n\n    public TcpServer(IPAddress ipAddress, int port)\n    {\n        listener = new TcpListener(ipAddress, port);\n    }\n\n    public async Task StartAsync()\n    {\n        listener.Start();\n        Console.WriteLine("Server started...");\n        \n        while (true)\n        {\n            var client = await listener.AcceptTcpClientAsync();\n            _ = HandleClientAsync(client);\n        }\n    }\n\n    private async Task HandleClientAsync(TcpClient client)\n    {\n        Console.WriteLine("Client connected...");\n        var buffer = new byte[1024];\n        var stream = client.GetStream();\n\n        while (true)\n        {\n            int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n            if (bytesRead == 0)\n            {\n                Console.WriteLine("Client disconnected...");\n                break;\n            }\n            \n            var message = Encoding.ASCII.GetString(buffer, 0, bytesRead);\n            Console.WriteLine($"Received: {message}");\n\n            // Echo the message back to the client\n            await stream.WriteAsync(buffer, 0, bytesRead);\n        }\n\n        client.Close();\n    }\n\n    public static async Task Main(string[] args)\n    {\n        var server = new TcpServer(IPAddress.Any, 5000);\n        await server.StartAsync();\n    }\n}