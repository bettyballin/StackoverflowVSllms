using System;\nusing System.IO;\nusing MetadataExtractor;\nusing MetadataExtractor.Formats.Exif;\nusing System.Drawing.Imaging;\nusing System.Drawing;\n\nclass Program\n{\n    static void Main()\n    {\n        string inputFilePath = "path/to/your/image.jpg";\n        string outputFilePath = "path/to/save/modified/image.jpg";\n\n        // Read existing metadata\n        var directories = ImageMetadataReader.ReadMetadata(inputFilePath);\n        var exifSubIfdDirectory = directories.OfType<ExifSubIfdDirectory>().FirstOrDefault();\n\n        if (exifSubIfdDirectory != null)\n        {\n            // Print some Exif data\n            Console.WriteLine("Original Date/Time: " + exifSubIfdDirectory.GetDescription(ExifDirectoryBase.TagDateTimeOriginal));\n\n            // Modify Exif data (e.g., update Date/Time)\n            exifSubIfdDirectory.Set(ExifDirectoryBase.TagDateTimeOriginal, DateTime.Now.ToString("yyyy:MM:dd HH:mm:ss"));\n\n            // Save the image with modified Exif data\n            SaveImageWithMetadata(inputFilePath, outputFilePath, directories);\n        }\n    }\n\n    static void SaveImageWithMetadata(string inputFilePath, string outputFilePath, IEnumerable<Directory> directories)\n    {\n        using (var image = Image.FromFile(inputFilePath))\n        using (var stream = new MemoryStream())\n        {\n            // Save image to stream with original quality\n            var jpegEncoder = ImageCodecInfo.GetImageEncoders().First(c => c.FormatID == ImageFormat.Jpeg.Guid);\n            var encoderParams = new EncoderParameters(1);\n            encoderParams.Param[0] = new EncoderParameter(Encoder.Quality, 100L);\n            image.Save(stream, jpegEncoder, encoderParams);\n\n            // Re-attach the metadata\n            var writer = new JpegMetadataAdapter(stream);\n            writer.WriteMetadata(directories);\n\n            // Save the final image to output path\n            File.WriteAllBytes(outputFilePath, stream.ToArray());\n        }\n    }\n}