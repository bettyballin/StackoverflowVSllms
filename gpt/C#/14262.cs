using System;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\n\npublic partial class SqlConnectionForm : Form\n{\n    public SqlConnectionForm()\n    {\n        InitializeComponent();\n        LoadServers();\n    }\n\n    private void LoadServers()\n    {\n        // Populate the server combo box (in a real application, you might want to get a list of available servers)\n        serverComboBox.Items.Add("Server1");\n        serverComboBox.Items.Add("Server2");\n        serverComboBox.Items.Add("Server3");\n    }\n\n    private void connectButton_Click(object sender, EventArgs e)\n    {\n        string server = serverComboBox.SelectedItem.ToString();\n        string database = databaseComboBox.SelectedItem.ToString();\n        bool useWindowsAuth = windowsAuthRadioButton.Checked;\n\n        SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder\n        {\n            DataSource = server,\n            InitialCatalog = database\n        };\n\n        if (useWindowsAuth)\n        {\n            builder.IntegratedSecurity = true;\n        }\n        else\n        {\n            builder.UserID = usernameTextBox.Text;\n            builder.Password = passwordTextBox.Text;\n        }\n\n        // Use the connection string\n        string connectionString = builder.ConnectionString;\n        MessageBox.Show("Connection String: " + connectionString);\n    }\n\n    private void serverComboBox_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        // Populate the databases combo box based on selected server\n        // In a real application, you would query the server for available databases\n        databaseComboBox.Items.Clear();\n        databaseComboBox.Items.Add("Database1");\n        databaseComboBox.Items.Add("Database2");\n        databaseComboBox.Items.Add("Database3");\n    }\n}