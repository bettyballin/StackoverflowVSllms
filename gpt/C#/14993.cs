using System;\nusing System.IO;\n\npublic class BitWriter : IDisposable\n{\n    private Stream outputStream;\n    private byte currentByte;\n    private int bitPosition;\n\n    public BitWriter(Stream output)\n    {\n        this.outputStream = output;\n        this.currentByte = 0;\n        this.bitPosition = 0;\n    }\n\n    public void WriteBit(bool bit)\n    {\n        if (bit)\n        {\n            currentByte |= (byte)(1 << (7 - bitPosition));\n        }\n\n        bitPosition++;\n        if (bitPosition == 8)\n        {\n            FlushCurrentByte();\n        }\n    }\n\n    private void FlushCurrentByte()\n    {\n        if (bitPosition > 0)\n        {\n            outputStream.WriteByte(currentByte);\n            currentByte = 0;\n            bitPosition = 0;\n        }\n    }\n\n    public void Dispose()\n    {\n        FlushCurrentByte();\n        outputStream?.Dispose();\n    }\n}\n\n// Usage example:\npublic class Program\n{\n    public static void Main()\n    {\n        using (var fileStream = new FileStream("output.bin", FileMode.Create))\n        using (var bitWriter = new BitWriter(fileStream))\n        {\n            // Example: write the bits 1011\n            bitWriter.WriteBit(true);\n            bitWriter.WriteBit(false);\n            bitWriter.WriteBit(true);\n            bitWriter.WriteBit(true);\n        }\n    }\n}