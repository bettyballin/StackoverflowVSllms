using System;\n    using System.IO;\n    using System.Web.Services.Protocols;\n\n    public class CustomSoapExtension : SoapExtension\n    {\n        private Stream oldStream;\n        private Stream newStream;\n\n        public override Stream ChainStream(Stream stream)\n        {\n            oldStream = stream;\n            newStream = new MemoryStream();\n            return newStream;\n        }\n\n        public override object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute)\n        {\n            return null;\n        }\n\n        public override object GetInitializer(Type serviceType)\n        {\n            return null;\n        }\n\n        public override void Initialize(object initializer) { }\n\n        public override void ProcessMessage(SoapMessage message)\n        {\n            switch (message.Stage)\n            {\n                case SoapMessageStage.BeforeDeserialize:\n                    newStream.Position = 0;\n                    ModifySoapMessage(newStream);\n                    newStream.Position = 0;\n                    Copy(newStream, oldStream);\n                    break;\n                case SoapMessageStage.AfterSerialize:\n                    Copy(oldStream, newStream);\n                    break;\n            }\n        }\n\n        private void ModifySoapMessage(Stream stream)\n        {\n            // Your custom XML manipulation logic here\n        }\n\n        private void Copy(Stream from, Stream to)\n        {\n            TextReader reader = new StreamReader(from);\n            TextWriter writer = new StreamWriter(to);\n            writer.WriteLine(reader.ReadToEnd());\n            writer.Flush();\n        }\n    }