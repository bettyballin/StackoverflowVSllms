using System;\nusing System.Runtime.InteropServices;\nusing mshtml;\n\npublic class Program\n{\n    [DllImport("OleAut32.dll", CharSet = CharSet.Unicode)]\n    private static extern IntPtr SysAllocString([MarshalAs(UnmanagedType.LPWStr)] string pOleStr);\n\n    [DllImport("OleAut32.dll")]\n    private static extern void SysFreeString(IntPtr bstr);\n\n    public static void Main()\n    {\n        string html = "Hello, world!";\n        HTMLDocumentClass doc = new HTMLDocumentClass();\n\n        // Create BSTR from string\n        IntPtr bstr = SysAllocString(html);\n\n        try\n        {\n            // Create SAFEARRAY to hold the BSTR\n            SAFEARRAYBOUND[] safeArrayBounds = new SAFEARRAYBOUND[1];\n            safeArrayBounds[0].cElements = 1;\n            safeArrayBounds[0].lLbound = 0;\n\n            IntPtr psa = SafeArrayCreate(VT_BSTR, 1, safeArrayBounds);\n            if (psa == IntPtr.Zero)\n            {\n                throw new OutOfMemoryException("SafeArrayCreate failed");\n            }\n\n            try\n            {\n                // Access the SafeArray and set the BSTR\n                IntPtr pData;\n                SafeArrayAccessData(psa, out pData);\n                Marshal.WriteIntPtr(pData, bstr);\n                SafeArrayUnaccessData(psa);\n\n                // Wrap the SAFEARRAY in an object array\n                object[] paramsArray = new object[1];\n                paramsArray[0] = psa;\n\n                // Call the write method\n                doc.write(paramsArray);\n            }\n            finally\n            {\n                SafeArrayDestroy(psa);\n            }\n        }\n        finally\n        {\n            SysFreeString(bstr);\n        }\n    }\n\n    private const ushort VT_BSTR = 8;\n\n    [StructLayout(LayoutKind.Sequential)]\n    private struct SAFEARRAYBOUND\n    {\n        public uint cElements;\n        public int lLbound;\n    }\n\n    [DllImport("OleAut32.dll")]\n    private static extern IntPtr SafeArrayCreate(ushort vt, uint cDims, SAFEARRAYBOUND[] rgsabound);\n\n    [DllImport("OleAut32.dll")]\n    private static extern int SafeArrayDestroy(IntPtr psa);\n\n    [DllImport("OleAut32.dll")]\n    private static extern int SafeArrayAccessData(IntPtr psa, out IntPtr ppvData);\n\n    [DllImport("OleAut32.dll")]\n    private static extern int SafeArrayUnaccessData(IntPtr psa);\n}