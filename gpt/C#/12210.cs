using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecureStorage\n{\n    private static readonly byte[] Key = Encoding.UTF8.GetBytes("your-32-byte-key-here"); // Use a secure method to generate and store this key\n    private static readonly byte[] IV = Encoding.UTF8.GetBytes("your-16-byte-iv-here");   // Use a secure method to generate and store this IV\n\n    public static void SaveData(string data, string filePath)\n    {\n        byte[] encryptedData = Encrypt(data);\n        File.WriteAllBytes(filePath, encryptedData);\n    }\n\n    public static string LoadData(string filePath)\n    {\n        if (File.Exists(filePath))\n        {\n            byte[] encryptedData = File.ReadAllBytes(filePath);\n            return Decrypt(encryptedData);\n        }\n        return null;\n    }\n\n    private static byte[] Encrypt(string plainText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    return msEncrypt.ToArray();\n                }\n            }\n        }\n    }\n\n    private static string Decrypt(byte[] cipherText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}