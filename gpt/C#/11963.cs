public class DatabaseCache\n    {\n        private readonly string connectionString = "your_connection_string";\n\n        public void SetCache(string key, string value, TimeSpan expiration)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                string query = @"MERGE Cache AS target\n                                 USING (SELECT @key AS CacheKey, @value AS CacheValue, @expiration AS ExpirationTime) AS source\n                                 ON (target.CacheKey = source.CacheKey)\n                                 WHEN MATCHED THEN \n                                     UPDATE SET CacheValue = source.CacheValue, ExpirationTime = source.ExpirationTime\n                                 WHEN NOT MATCHED THEN\n                                     INSERT (CacheKey, CacheValue, ExpirationTime)\n                                     VALUES (source.CacheKey, source.CacheValue, source.ExpirationTime);";\n\n                using (SqlCommand command = new SqlCommand(query, connection))\n                {\n                    command.Parameters.AddWithValue("@key", key);\n                    command.Parameters.AddWithValue("@value", value);\n                    command.Parameters.AddWithValue("@expiration", DateTime.UtcNow.Add(expiration));\n                    connection.Open();\n                    command.ExecuteNonQuery();\n                }\n            }\n        }\n\n        public string GetCache(string key)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                string query = "SELECT CacheValue FROM Cache WHERE CacheKey = @key AND ExpirationTime > GETUTCDATE()";\n                using (SqlCommand command = new SqlCommand(query, connection))\n                {\n                    command.Parameters.AddWithValue("@key", key);\n                    connection.Open();\n                    return command.ExecuteScalar() as string;\n                }\n            }\n        }\n\n        public void RemoveCache(string key)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                string query = "DELETE FROM Cache WHERE CacheKey = @key";\n                using (SqlCommand command = new SqlCommand(query, connection))\n                {\n                    command.Parameters.AddWithValue("@key", key);\n                    connection.Open();\n                    command.ExecuteNonQuery();\n                }\n            }\n        }\n    }