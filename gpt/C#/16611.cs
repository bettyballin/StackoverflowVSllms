using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\n\npublic class Program\n{\n    public static async Task Main(string[] args)\n    {\n        IList<MyObject> myList = new List<MyObject>\n        {\n            new MyObject { Id = 1, Name = "Item1" },\n            new MyObject { Id = 2, Name = "Item2" },\n            new MyObject { Id = 3, Name = "Item3" },\n        };\n\n        var filteredList = await FilterListAsync(myList, x => x.Id > 1);\n\n        foreach (var item in filteredList)\n        {\n            Console.WriteLine($"{item.Id} - {item.Name}");\n        }\n    }\n\n    public static Task<IList<MyObject>> FilterListAsync(IList<MyObject> list, Func<MyObject, bool> predicate)\n    {\n        return Task.Run(() => (IList<MyObject>)list.Where(predicate).ToList());\n    }\n}\n\npublic class MyObject\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}