using System;\nusing System.Configuration;\nusing System.IO;\n\npublic class ConfigurationTestHelper\n{\n    public static Configuration LoadConfigurationFromXml(string xmlContent)\n    {\n        // Create a temporary file to hold the configuration XML\n        string tempPath = Path.GetTempFileName();\n        File.WriteAllText(tempPath, xmlContent);\n\n        // Map the temporary file to a ConfigurationFileMap\n        ExeConfigurationFileMap configFileMap = new ExeConfigurationFileMap\n        {\n            ExeConfigFilename = tempPath\n        };\n\n        // Get the Configuration object\n        Configuration config = ConfigurationManager.OpenMappedExeConfiguration(configFileMap, ConfigurationUserLevel.None);\n\n        // Cleanup the temporary file\n        File.Delete(tempPath);\n\n        return config;\n    }\n}\n\n// Usage example\npublic class CustomSectionTests\n{\n    public void TestCustomConfigurationSection()\n    {\n        string xmlContent = @"<?xml version='1.0' encoding='utf-8' ?>\n                              <configuration>\n                                <configSections>\n                                  <section name='mycustomconfigsection' type='Namespace.MyCustomConfigSection, AssemblyName'/>\n                                </configSections>\n                                <mycustomconfigsection>\n                                  <!-- Section content here -->\n                                </mycustomconfigsection>\n                              </configuration>";\n\n        Configuration config = ConfigurationTestHelper.LoadConfigurationFromXml(xmlContent);\n        MyCustomConfigSection section = (MyCustomConfigSection)config.GetSection("mycustomconfigsection");\n        Assert.IsNotNull(section);\n    }\n}