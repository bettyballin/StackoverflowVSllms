public interface IOrderRepository\n{\n    Order GetOrderById(int id);\n    IEnumerable<Order> GetAllOrders();\n    void AddOrder(Order order);\n    void UpdateOrder(Order order);\n    void DeleteOrder(int id);\n}\n\npublic class OrderRepository : IOrderRepository\n{\n    private readonly DbContext _context;\n\n    public OrderRepository(DbContext context)\n    {\n        _context = context;\n    }\n\n    public Order GetOrderById(int id)\n    {\n        return _context.Orders.Find(id);\n    }\n\n    public IEnumerable<Order> GetAllOrders()\n    {\n        return _context.Orders.ToList();\n    }\n\n    public void AddOrder(Order order)\n    {\n        _context.Orders.Add(order);\n        _context.SaveChanges();\n    }\n\n    public void UpdateOrder(Order order)\n    {\n        _context.Entry(order).State = EntityState.Modified;\n        _context.SaveChanges();\n    }\n\n    public void DeleteOrder(int id)\n    {\n        var order = _context.Orders.Find(id);\n        if (order != null)\n        {\n            _context.Orders.Remove(order);\n            _context.SaveChanges();\n        }\n    }\n}