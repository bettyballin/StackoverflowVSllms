using System;\nusing System.Data;\n\npublic class DataSetHelper\n{\n    public static void MergeColumns(string format, string mergedColumn, DataTable dt, params string[] columnsToMerge)\n    {\n        // Check if the merged column already exists, if not, add it\n        if (!dt.Columns.Contains(mergedColumn))\n        {\n            dt.Columns.Add(mergedColumn, typeof(string));\n        }\n\n        // Iterate through each row and merge the specified columns\n        foreach (DataRow row in dt.Rows)\n        {\n            object[] valuesToMerge = new object[columnsToMerge.Length];\n            for (int i = 0; i < columnsToMerge.Length; i++)\n            {\n                valuesToMerge[i] = row[columnsToMerge[i]];\n            }\n            row[mergedColumn] = string.Format(format, valuesToMerge);\n        }\n\n        // Optionally, you can remove the old columns after merging\n        foreach (string column in columnsToMerge)\n        {\n            if (column != mergedColumn)\n            {\n                dt.Columns.Remove(column);\n            }\n        }\n    }\n\n    public static void Main()\n    {\n        DataSet ds = new DataSet();\n        ds.Tables.Add(new DataTable());\n        ds.Tables[0].Columns.Add("id", typeof(int));\n        ds.Tables[0].Columns.Add("firstname", typeof(string));\n        ds.Tables[0].Columns.Add("lastname", typeof(string));\n        \n        ds.Tables[0].Rows.Add(1, "John", "Doe");\n        ds.Tables[0].Rows.Add(2, "Jane", "Smith");\n\n        MergeColumns("{0} {1}", "name", ds.Tables[0], "firstname", "lastname");\n\n        foreach (DataRow row in ds.Tables[0].Rows)\n        {\n            Console.WriteLine($"id: {row["id"]}, name: {row["name"]}");\n        }\n    }\n}