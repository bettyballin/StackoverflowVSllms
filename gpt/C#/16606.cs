public class WidgetController : Controller\n{\n    private readonly IWidgetService _widgetService;\n\n    public WidgetController(IWidgetService widgetService)\n    {\n        _widgetService = widgetService;\n    }\n\n    // GET: /Widget/Edit/1\n    public ActionResult Edit(int id)\n    {\n        var widget = _widgetService.GetWidgetByID(id);\n        var viewModel = CreateWidgetFormViewModel(widget);\n\n        return View("Edit", viewModel);\n    }\n\n    // POST: /Widget/Edit\n    [HttpPost]\n    [ValidateAntiForgeryToken]\n    public ActionResult Edit(WidgetFormViewModel viewModel)\n    {\n        if (ModelState.IsValid)\n        {\n            var existingWidget = _widgetService.GetWidgetByWidgetID(viewModel.Widget.WidgetID);\n            existingWidget.Employee = _widgetService.GetEmployeeByID(viewModel.EmployeeID);\n\n            try\n            {\n                _widgetService.SaveWidget(existingWidget);\n                return RedirectToAction("List");\n            }\n            catch (Exception ex)\n            {\n                ModelState.AddModelError("", $"Error saving widget: {ex.Message}");\n            }\n        }\n\n        // Repopulate the EmployeeList in case of validation errors\n        PopulateViewOnlyData(viewModel);\n        return View("Edit", viewModel);\n    }\n\n    private WidgetFormViewModel CreateWidgetFormViewModel(Widget widget)\n    {\n        var employees = _widgetService.GetAllEmployees();\n\n        return new WidgetFormViewModel\n        {\n            EmployeeList = new SelectList(employees, "ID", "Name", widget.Employee?.ID ?? 0),\n            Widget = widget,\n            EmployeeID = widget.Employee?.ID ?? 0\n        };\n    }\n\n    private void PopulateViewOnlyData(WidgetFormViewModel viewModel)\n    {\n        var employees = _widgetService.GetAllEmployees();\n        viewModel.EmployeeList = new SelectList(employees, "ID", "Name", viewModel.EmployeeID);\n    }\n}