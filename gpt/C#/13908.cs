protected override void OnError(EventArgs e)\n{\n    // Retrieve the current context\n    HttpContext ctx = HttpContext.Current;\n\n    // Get the last error\n    Exception exception = ctx.Server.GetLastError();\n\n    // Check if it is a RequestValidationException\n    if (exception is HttpRequestValidationException)\n    {\n        // Store error details in a session variable\n        ctx.Session["FormError"] = "A potentially dangerous input was detected. Please correct your input.";\n        \n        // Clear the error from the server\n        ctx.Server.ClearError();\n\n        // Redirect to the same page to handle the error gracefully\n        ctx.Response.Redirect(ctx.Request.RawUrl);\n    }\n    else\n    {\n        // If it's not a validation error, handle it as usual\n        base.OnError(e);\n    }\n}\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n    // Check if there is an error message in the session\n    if (Session["FormError"] != null)\n    {\n        // Display the error message\n        ErrorMessageLabel.Text = Session["FormError"].ToString();\n        ErrorMessageLabel.Visible = true;\n\n        // Clear the session variable\n        Session["FormError"] = null;\n    }\n}