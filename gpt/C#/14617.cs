using System;\nusing System.Data;\nusing System.Data.SqlClient;\n\npublic class DatabaseHelper\n{\n    private string connectionString;\n\n    public DatabaseHelper(string connectionString)\n    {\n        this.connectionString = connectionString;\n    }\n\n    public void InsertRecordWithRetry(string tableName, object newRecordData)\n    {\n        bool inserted = false;\n        int retryCount = 0;\n        const int maxRetries = 5;\n\n        while (!inserted && retryCount < maxRetries)\n        {\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n                using (SqlTransaction transaction = connection.BeginTransaction())\n                {\n                    try\n                    {\n                        // Get the next ID\n                        int newId = GetNextId(connection, transaction, tableName);\n\n                        // Insert the new record\n                        InsertRecord(connection, transaction, tableName, newId, newRecordData);\n\n                        // Commit the transaction\n                        transaction.Commit();\n                        inserted = true;\n                    }\n                    catch (SqlException ex)\n                    {\n                        transaction.Rollback();\n\n                        if (ex.Number == 2627) // Unique constraint violation\n                        {\n                            // Retry in case of a race condition\n                            retryCount++;\n                        }\n                        else\n                        {\n                            // Handle other SQL exceptions\n                            throw;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!inserted)\n        {\n            throw new Exception("Failed to insert record after multiple retries.");\n        }\n    }\n\n    private int GetNextId(SqlConnection connection, SqlTransaction transaction, string tableName)\n    {\n        string query = $"SELECT MAX(id) + 1 FROM {tableName}";\n        using (SqlCommand command = new SqlCommand(query, connection, transaction))\n        {\n            object result = command.ExecuteScalar();\n            return result != DBNull.Value ? Convert.ToInt32(result) : 1;\n        }\n    }\n\n    private void InsertRecord(SqlConnection connection, SqlTransaction transaction, string tableName, int id, object newRecordData)\n    {\n        // Replace with your actual insert logic\n        string insertQuery = $"INSERT INTO {tableName} (id, data) VALUES (@id, @data)";\n        using (SqlCommand command = new SqlCommand(insertQuery, connection, transaction))\n        {\n            command.Parameters.AddWithValue("@id", id);\n            command.Parameters.AddWithValue("@data", newRecordData);\n            command.ExecuteNonQuery();\n        }\n    }\n}