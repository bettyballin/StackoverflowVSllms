using System;\nusing System.IO;\nusing System.Security;\nusing System.Security.Permissions;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Create a PermissionSet that denies the Assertion permission\n        PermissionSet deniedSet = new PermissionSet(PermissionState.None);\n        deniedSet.AddPermission(new SecurityPermission(SecurityPermissionFlag.Assertion));\n        \n        try\n        {\n            // Execute the ReadFileSystem method in a restricted context\n            deniedSet.PermitOnly();\n            ReadFileSystem();\n        }\n        catch (SecurityException se)\n        {\n            Console.WriteLine("SecurityException caught: " + se.Message);\n        }\n        finally\n        {\n            // Revert the security context\n            CodeAccessPermission.RevertPermitOnly();\n        }\n\n        Console.Read();\n    }\n\n    private static void ReadFileSystem()\n    {\n        try\n        {\n            var fileIo = new FileIOPermission(PermissionState.Unrestricted);\n            fileIo.Assert();\n\n            DirectoryInfo dir = new DirectoryInfo("C:/");\n            dir.GetDirectories();\n        }\n        catch (SecurityException se)\n        {\n            Console.WriteLine("SecurityException caught during ReadFileSystem: " + se.Message);\n        }\n    }\n}