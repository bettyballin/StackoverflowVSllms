// Encrypting session data\npublic void SetEncryptedSessionObject<T>(ISession session, string key, T value, string encryptionKey)\n{\n    var jsonString = JsonConvert.SerializeObject(value);\n    var encryptedData = EncryptString(jsonString, encryptionKey);\n    session.SetString(key, encryptedData);\n}\n\nprivate string EncryptString(string plainText, string key)\n{\n    var keyBytes = Encoding.UTF8.GetBytes(key);\n    using (var aes = Aes.Create())\n    {\n        aes.Key = keyBytes;\n        aes.GenerateIV();\n        var iv = aes.IV;\n        using (var encryptor = aes.CreateEncryptor(aes.Key, aes.IV))\n        {\n            using (var ms = new MemoryStream())\n            {\n                ms.Write(iv, 0, iv.Length);\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n}\n\n// Decrypting session data\npublic T GetDecryptedSessionObject<T>(ISession session, string key, string encryptionKey)\n{\n    var encryptedData = session.GetString(key);\n    if (encryptedData == null)\n    {\n        return default(T);\n    }\n    var decryptedData = DecryptString(encryptedData, encryptionKey);\n    return JsonConvert.DeserializeObject<T>(decryptedData);\n}\n\nprivate string DecryptString(string cipherText, string key)\n{\n    var fullCipher = Convert.FromBase64String(cipherText);\n    var keyBytes = Encoding.UTF8.GetBytes(key);\n    using (var aes = Aes.Create())\n    {\n        aes.Key = keyBytes;\n        var iv = new byte[aes.BlockSize / 8];\n        var cipher = new byte[fullCipher.Length - iv.Length];\n        Array.Copy(fullCipher, iv, iv.Length);\n        Array.Copy(fullCipher, iv.Length, cipher, 0, cipher.Length);\n        aes.IV = iv;\n        using (var decryptor = aes.CreateDecryptor(aes.Key, aes.IV))\n        {\n            using (var ms = new MemoryStream(cipher))\n            {\n                using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (var sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}