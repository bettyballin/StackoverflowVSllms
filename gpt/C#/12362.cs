using System;\nusing System.Collections.Generic;\nusing System.Reflection;\n\npublic class Example\n{\n    public string Description { get; set; }\n    public long? Id { get; set; }\n    public double? MaxPower { get; set; }\n\n    public void PopulateProperties(Dictionary<string, object> dictionary)\n    {\n        foreach (PropertyInfo info in this.GetType().GetProperties())\n        {\n            if (info.CanRead && info.CanWrite && dictionary.ContainsKey(info.Name))\n            {\n                object thisPropertyValue = dictionary[info.Name];\n                if (thisPropertyValue != null)\n                {\n                    Type propertyType = info.PropertyType;\n                    Type underlyingType = Nullable.GetUnderlyingType(propertyType) ?? propertyType;\n\n                    try\n                    {\n                        object safeValue = Convert.ChangeType(thisPropertyValue, underlyingType);\n                        info.SetValue(this, safeValue, null);\n                    }\n                    catch (Exception ex)\n                    {\n                        throw new ApplicationException($"Error setting property '{info.Name}'", ex);\n                    }\n                }\n            }\n        }\n    }\n}