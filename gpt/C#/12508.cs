using System;\nusing System.Runtime.InteropServices;\nusing Microsoft.Win32;\n\npublic class ComDllPathFinder\n{\n    public static string GetComDllPath(Type comType)\n    {\n        if (comType == null)\n        {\n            throw new ArgumentNullException(nameof(comType));\n        }\n\n        // Get the GUID of the COM type\n        Guid clsid = comType.GUID;\n\n        // Open the CLSID key in the registry\n        string clsidKeyPath = $@"CLSID\{{{clsid}}}\InprocServer32";\n        using (RegistryKey clsidKey = Registry.ClassesRoot.OpenSubKey(clsidKeyPath))\n        {\n            if (clsidKey != null)\n            {\n                // Get the path of the COM DLL\n                object dllPath = clsidKey.GetValue(null); // Default value\n                if (dllPath != null)\n                {\n                    return dllPath.ToString();\n                }\n            }\n        }\n\n        throw new Exception("COM DLL path not found in registry.");\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        Type comType = typeof(SomeComInteropClass);\n        string comDllPath = ComDllPathFinder.GetComDllPath(comType);\n        Console.WriteLine($"COM DLL Path: {comDllPath}");\n    }\n}