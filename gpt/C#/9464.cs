using System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("kernel32.dll")]\n    static extern IntPtr GetStdHandle(int nStdHandle);\n\n    [DllImport("kernel32.dll")]\n    static extern bool AllocConsole();\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    static extern bool AttachConsole(uint dwProcessId);\n\n    const int STD_OUTPUT_HANDLE = -11;\n    const uint ATTACH_PARENT_PROCESS = 0xFFFFFFFF;\n\n    static void Main(string[] args)\n    {\n        if (args.Length == 0)\n        {\n            // No arguments, run as Windows Application\n            Console.WriteLine("Running as Windows application");\n            // Your code to show OpenFileDialog, etc.\n        }\n        else\n        {\n            // Arguments provided, run as console application\n            if (AttachConsole(ATTACH_PARENT_PROCESS))\n            {\n                IntPtr stdHandle = GetStdHandle(STD_OUTPUT_HANDLE);\n                if (stdHandle != IntPtr.Zero)\n                {\n                    using (StreamWriter writer = new StreamWriter(Console.OpenStandardOutput()))\n                    {\n                        writer.AutoFlush = true;\n                        Console.SetOut(writer);\n                        Console.SetError(writer);\n                    }\n\n                    // Your code to handle the arguments and output to the parent console\n                    Console.WriteLine("Running as console application with arguments: " + string.Join(" ", args));\n                }\n                else\n                {\n                    Console.WriteLine("Failed to get standard output handle.");\n                }\n            }\n            else\n            {\n                Console.WriteLine("Failed to attach to parent console.");\n            }\n        }\n    }\n}