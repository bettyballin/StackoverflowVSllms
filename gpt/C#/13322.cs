public interface IAuthorizationService\n{\n    bool CanDeleteOrder(string userId, int orderId);\n}\n\npublic class AuthorizationService : IAuthorizationService\n{\n    private readonly IUserRepository _userRepository;\n    private readonly IOrderRepository _orderRepository;\n\n    public AuthorizationService(IUserRepository userRepository, IOrderRepository orderRepository)\n    {\n        _userRepository = userRepository;\n        _orderRepository = orderRepository;\n    }\n\n    public bool CanDeleteOrder(string userId, int orderId)\n    {\n        var user = _userRepository.GetUserById(userId);\n        if (user == null)\n        {\n            return false;\n        }\n\n        if (user.Role == UserRole.Admin)\n        {\n            return true;\n        }\n\n        var order = _orderRepository.GetOrderById(orderId);\n        return order != null && order.UserId == userId;\n    }\n}