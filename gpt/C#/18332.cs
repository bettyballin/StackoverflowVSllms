using System;\nusing System.Drawing;\nusing System.Drawing.Imaging;\nusing System.IO;\n\nclass ThumbnailCreator\n{\n    public static void CreateThumbnails(string sourceDirectory, string targetDirectory, int thumbWidth, int thumbHeight, long quality)\n    {\n        if (!Directory.Exists(targetDirectory))\n        {\n            Directory.CreateDirectory(targetDirectory);\n        }\n\n        string[] files = Directory.GetFiles(sourceDirectory, "*.jpg");\n        foreach (string file in files)\n        {\n            using (Image image = Image.FromFile(file))\n            {\n                Image thumbNail = image.GetThumbnailImage(thumbWidth, thumbHeight, () => false, IntPtr.Zero);\n                \n                // Set image quality to reduce file size\n                ImageCodecInfo jpgEncoder = GetEncoder(ImageFormat.Jpeg);\n                EncoderParameters encoderParams = new EncoderParameters(1);\n                EncoderParameter encoderParam = new EncoderParameter(Encoder.Quality, quality);\n                encoderParams.Param[0] = encoderParam;\n\n                string fileName = Path.GetFileName(file);\n                thumbNail.Save(Path.Combine(targetDirectory, fileName), jpgEncoder, encoderParams);\n            }\n        }\n    }\n\n    private static ImageCodecInfo GetEncoder(ImageFormat format)\n    {\n        ImageCodecInfo[] codecs = ImageCodecInfo.GetImageDecoders();\n        foreach (ImageCodecInfo codec in codecs)\n        {\n            if (codec.FormatID == format.Guid)\n            {\n                return codec;\n            }\n        }\n        return null;\n    }\n\n    static void Main()\n    {\n        string sourceDirectory = @"C:\source\images";\n        string targetDirectory = @"C:\target\thumbnails";\n        int thumbWidth = 200; // example width\n        int thumbHeight = 150; // example height\n        long quality = 50L; // quality level from 0 to 100\n\n        CreateThumbnails(sourceDirectory, targetDirectory, thumbWidth, thumbHeight, quality);\n    }\n}