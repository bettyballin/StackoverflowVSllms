using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class MainForm : Form\n{\n    private TrackBar hueTrackBar;\n    private TrackBar saturationTrackBar;\n\n    public MainForm()\n    {\n        // Initialize TrackBars\n        hueTrackBar = new TrackBar\n        {\n            Minimum = 1,\n            Maximum = 360,\n            TickFrequency = 10,\n            LargeChange = 10,\n            SmallChange = 1,\n            Location = new Point(10, 10),\n            Width = 300\n        };\n        hueTrackBar.Scroll += new EventHandler(TrackBar_Scroll);\n\n        saturationTrackBar = new TrackBar\n        {\n            Minimum = 1,\n            Maximum = 50,\n            TickFrequency = 5,\n            LargeChange = 5,\n            SmallChange = 1,\n            Location = new Point(10, 50),\n            Width = 300\n        };\n        saturationTrackBar.Scroll += new EventHandler(TrackBar_Scroll);\n\n        // Add TrackBars to the Form\n        Controls.Add(hueTrackBar);\n        Controls.Add(saturationTrackBar);\n\n        // Set initial background color\n        UpdateBackgroundColor();\n    }\n\n    private void TrackBar_Scroll(object sender, EventArgs e)\n    {\n        UpdateBackgroundColor();\n    }\n\n    private void UpdateBackgroundColor()\n    {\n        float hue = hueTrackBar.Value;\n        float saturation = saturationTrackBar.Value / 50.0f; // normalize to 0 - 1\n        float brightness = 0.5f; // fixed brightness\n\n        this.BackColor = ColorFromHSV(hue, saturation, brightness);\n    }\n\n    public static Color ColorFromHSV(float hue, float saturation, float brightness)\n    {\n        int hi = Convert.ToInt32(Math.Floor(hue / 60)) % 6;\n        float f = hue / 60 - Math.Floor(hue / 60);\n\n        brightness = brightness * 255;\n        int v = Convert.ToInt32(brightness);\n        int p = Convert.ToInt32(brightness * (1 - saturation));\n        int q = Convert.ToInt32(brightness * (1 - f * saturation));\n        int t = Convert.ToInt32(brightness * (1 - (1 - f) * saturation));\n\n        if (hi == 0)\n            return Color.FromArgb(255, v, t, p);\n        else if (hi == 1)\n            return Color.FromArgb(255, q, v, p);\n        else if (hi == 2)\n            return Color.FromArgb(255, p, v, t);\n        else if (hi == 3)\n            return Color.FromArgb(255, p, q, v);\n        else if (hi == 4)\n            return Color.FromArgb(255, t, p, v);\n        else\n            return Color.FromArgb(255, v, p, q);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new MainForm());\n    }\n}