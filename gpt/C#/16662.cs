using System;\nusing System.Windows.Forms;\n\npublic partial class YourForm : Form\n{\n    public YourForm()\n    {\n        InitializeComponent();\n    }\n\n    private void ValidateButton_Click(object sender, EventArgs e)\n    {\n        string errorMessage = string.Empty;\n        bool isValid = ValidateControls(this.Controls, ref errorMessage);\n\n        if (isValid)\n        {\n            MessageBox.Show("All inputs are valid.");\n        }\n        else\n        {\n            MessageBox.Show(errorMessage);\n        }\n    }\n\n    private bool ValidateControls(Control.ControlCollection controls, ref string errorMessage)\n    {\n        foreach (Control control in controls)\n        {\n            if (control is TextBox textBox)\n            {\n                // Example validation for a TextBox expecting a zip code\n                if (!ValidationHelper.IsValidTextBox(textBox, @"^\d{5}$", out errorMessage))\n                {\n                    return false;\n                }\n            }\n            // Add other control types and their respective validation logic as needed\n\n            // Recursively validate nested controls\n            if (control.HasChildren)\n            {\n                if (!ValidateControls(control.Controls, ref errorMessage))\n                {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}