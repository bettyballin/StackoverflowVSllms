public class MyService : IMyService\n{\n    public void MyOperation()\n    {\n        try\n        {\n            // Your operation logic here\n        }\n        catch (Exception ex)\n        {\n            // Handle exceptions and log if necessary\n            Console.WriteLine("Exception: " + ex.Message);\n        }\n        finally\n        {\n            // Ensure resources are cleaned up\n            Cleanup();\n        }\n    }\n\n    private void Cleanup()\n    {\n        // Perform necessary cleanup here\n    }\n}\n\npublic class ServiceHostManager\n{\n    private ServiceHost _serviceHost;\n\n    public void StartService()\n    {\n        _serviceHost = new ServiceHost(typeof(MyService));\n        _serviceHost.Open();\n    }\n\n    public void StopService()\n    {\n        if (_serviceHost != null)\n        {\n            try\n            {\n                _serviceHost.Close();\n            }\n            catch (CommunicationException)\n            {\n                _serviceHost.Abort();\n            }\n            catch (TimeoutException)\n            {\n                _serviceHost.Abort();\n            }\n            catch (Exception)\n            {\n                _serviceHost.Abort();\n                throw;\n            }\n            finally\n            {\n                _serviceHost = null;\n            }\n        }\n    }\n}\n\n// Example usage\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ServiceHostManager manager = new ServiceHostManager();\n        manager.StartService();\n\n        // Simulate client interactions\n\n        manager.StopService();\n    }\n}