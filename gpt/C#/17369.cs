using System;\nusing System.Data;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Xml.Serialization;\n\npublic class EncryptionHelper\n{\n    public static string Encrypt(string plainText, string key, string iv)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                }\n                return Convert.ToBase64String(msEncrypt.ToArray());\n            }\n        }\n    }\n\n    public static string DataSetToXML(DataSet ds)\n    {\n        using (StringWriter sw = new StringWriter())\n        {\n            ds.WriteXml(sw, XmlWriteMode.WriteSchema);\n            return sw.ToString();\n        }\n    }\n}\n\n// Usage\nDataSet ds = new DataSet();\n// Populate your dataset here\n\nstring xmlData = EncryptionHelper.DataSetToXML(ds);\nstring key = "your-encryption-key"; // 32 bytes for AES-256\nstring iv = "your-initialization-vector"; // 16 bytes for AES\n\nstring encryptedData = EncryptionHelper.Encrypt(xmlData, key, iv);\n// Send `encryptedData` to the web service