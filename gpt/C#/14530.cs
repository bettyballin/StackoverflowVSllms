using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Text;\n\npublic class IniFile\n{\n    public string Path { get; private set; }\n\n    [DllImport("kernel32")]\n    private static extern long WritePrivateProfileString(string section, string key, string value, string filePath);\n    [DllImport("kernel32")]\n    private static extern int GetPrivateProfileString(string section, string key, string defaultValue, StringBuilder retVal, int size, string filePath);\n\n    public IniFile(string iniPath)\n    {\n        Path = new FileInfo(iniPath).FullName.ToString();\n    }\n\n    public void WriteValue(string section, string key, string value)\n    {\n        WritePrivateProfileString(section, key, value, this.Path);\n    }\n\n    public string ReadValue(string section, string key)\n    {\n        var retVal = new StringBuilder(255);\n        GetPrivateProfileString(section, key, "", retVal, 255, this.Path);\n        return retVal.ToString();\n    }\n}\n\n// Usage\nclass Program\n{\n    static void Main()\n    {\n        var iniFile = new IniFile("settings.ini");\n\n        // Write settings\n        iniFile.WriteValue("Settings", "Username", "john_doe");\n        iniFile.WriteValue("Settings", "IsEnabled", "true");\n\n        // Read settings\n        string username = iniFile.ReadValue("Settings", "Username");\n        string isEnabled = iniFile.ReadValue("Settings", "IsEnabled");\n\n        Console.WriteLine($"Username: {username}");\n        Console.WriteLine($"IsEnabled: {isEnabled}");\n    }\n}