using System;\nusing System.Security.AccessControl;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Security.Principal;\n\npublic class CertificatePermission\n{\n    public static void Main()\n    {\n        X509Store store = new X509Store(StoreName.My, StoreLocation.LocalMachine);\n        store.Open(OpenFlags.ReadWrite);\n\n        X509Certificate2 cert = new X509Certificate2("test.pfx", "password");\n        store.Add(cert);\n        store.Close();\n\n        // Get the private key\n        if (cert.HasPrivateKey)\n        {\n            var rsaKey = cert.PrivateKey as RSACryptoServiceProvider;\n            if (rsaKey != null)\n            {\n                var keyFilePath = FindKeyFilePath(rsaKey);\n                if (!string.IsNullOrEmpty(keyFilePath))\n                {\n                    var fileInfo = new System.IO.FileInfo(keyFilePath);\n                    var fileSecurity = fileInfo.GetAccessControl();\n\n                    var identity = new NTAccount("NETWORK SERVICE");\n                    fileSecurity.AddAccessRule(new FileSystemAccessRule(identity,\n                        FileSystemRights.Read,\n                        AccessControlType.Allow));\n\n                    fileInfo.SetAccessControl(fileSecurity);\n                }\n            }\n        }\n    }\n\n    private static string FindKeyFilePath(RSACryptoServiceProvider rsa)\n    {\n        var keyContainerInfo = rsa.CspKeyContainerInfo;\n        string keyFilePath = null;\n\n        if (keyContainerInfo.MachineKeyStore)\n        {\n            keyFilePath = System.IO.Path.Combine(\n                Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData), \n                @"Microsoft\Crypto\RSA\MachineKeys", \n                keyContainerInfo.UniqueKeyContainerName);\n        }\n        else\n        {\n            keyFilePath = System.IO.Path.Combine(\n                Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), \n                @"Microsoft\Crypto\RSA\", \n                keyContainerInfo.ProviderName, \n                keyContainerInfo.UniqueKeyContainerName);\n        }\n\n        return keyFilePath;\n    }\n}