using Microsoft.AspNetCore.Mvc;\n    using System.Collections.Generic;\n    using System.Linq;\n\n    [Route("api/[controller]")]\n    [ApiController]\n    public class ItemsController : ControllerBase\n    {\n        private static readonly List<Item> Items = new List<Item>\n        {\n            new Item { Id = 1, Name = "Item1", Price = 10.0M },\n            new Item { Id = 2, Name = "Item2", Price = 20.0M }\n        };\n\n        [HttpGet]\n        public ActionResult<IEnumerable<Item>> GetItems()\n        {\n            return Items;\n        }\n\n        [HttpGet("{id}")]\n        public ActionResult<Item> GetItem(int id)\n        {\n            var item = Items.FirstOrDefault(i => i.Id == id);\n            if (item == null)\n            {\n                return NotFound();\n            }\n            return item;\n        }\n\n        [HttpPost]\n        public ActionResult<Item> CreateItem(Item item)\n        {\n            item.Id = Items.Count + 1;\n            Items.Add(item);\n            return CreatedAtAction(nameof(GetItem), new { id = item.Id }, item);\n        }\n\n        [HttpPut("{id}")]\n        public IActionResult UpdateItem(int id, Item item)\n        {\n            var existingItem = Items.FirstOrDefault(i => i.Id == id);\n            if (existingItem == null)\n            {\n                return NotFound();\n            }\n            existingItem.Name = item.Name;\n            existingItem.Price = item.Price;\n            return NoContent();\n        }\n\n        [HttpDelete("{id}")]\n        public IActionResult DeleteItem(int id)\n        {\n            var item = Items.FirstOrDefault(i => i.Id == id);\n            if (item == null)\n            {\n                return NotFound();\n            }\n            Items.Remove(item);\n            return NoContent();\n        }\n    }