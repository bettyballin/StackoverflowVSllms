using System;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class TopMostForm : Form\n{\n    // Import the necessary Win32 API functions\n    [DllImport("user32.dll")]\n    private static extern IntPtr SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);\n\n    private static readonly IntPtr HWND_TOPMOST = new IntPtr(-1);\n    private const uint SWP_NOSIZE = 0x0001;\n    private const uint SWP_NOMOVE = 0x0002;\n    private const uint SWP_NOACTIVATE = 0x0010;\n\n    // Handle of the Win32 application window\n    private IntPtr win32AppHandle;\n\n    public TopMostForm(IntPtr win32AppHandle)\n    {\n        this.win32AppHandle = win32AppHandle;\n\n        // Set the .NET Form as topmost relative to the Win32 application\n        this.Load += (sender, e) => \n        {\n            SetWindowPos(this.Handle, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);\n        };\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        // Example: assuming you obtain the handle of the Win32 app somehow\n        IntPtr win32AppHandle = new IntPtr(123456); // Replace with actual handle\n        Application.Run(new TopMostForm(win32AppHandle));\n    }\n}