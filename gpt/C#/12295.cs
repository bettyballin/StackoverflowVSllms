public class NHibernateSessionManager\n{\n    private static readonly ISessionFactory sessionFactory;\n\n    static NHibernateSessionManager()\n    {\n        // Initialize sessionFactory (e.g., from a configuration file)\n        sessionFactory = ...;\n    }\n\n    public ISession OpenSession()\n    {\n        return sessionFactory.OpenSession();\n    }\n\n    public void CloseSession(ISession session)\n    {\n        if (session != null && session.IsOpen)\n        {\n            session.Close();\n        }\n    }\n}\n\n// Usage in a web context\npublic void HandleWebRequest()\n{\n    var sessionManager = new NHibernateSessionManager();\n    using (var session = sessionManager.OpenSession())\n    {\n        // Perform data access operations\n        // Session will be closed automatically at the end of the using block\n    }\n}\n\n// Usage in a WCF service method\npublic void HandleServiceOperation()\n{\n    var sessionManager = new NHibernateSessionManager();\n    using (var session = sessionManager.OpenSession())\n    {\n        // Perform data access operations\n        // Session will be closed automatically at the end of the using block\n    }\n}\n\n// Usage in a WinForms application\npublic void HandleWinFormsAction()\n{\n    var sessionManager = new NHibernateSessionManager();\n    using (var session = sessionManager.OpenSession())\n    {\n        // Perform data access operations\n        // Session will be closed automatically at the end of the using block\n    }\n}