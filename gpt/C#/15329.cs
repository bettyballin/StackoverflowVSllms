amespace Uploader\n{\n    using System;\n    using System.IO;\n    using System.ServiceModel;\n    using System.ServiceModel.Description;\n    using System.ServiceModel.Web;\n    using System.Drawing;\n    using System.Drawing.Imaging;\n    using System.Net;\n\n    [ServiceContract(Namespace = "http://Uploader")]\n    public interface IUploaderService\n    {\n        [OperationContract, WebInvoke(Method = "POST", UriTemplate = "File/{fileName}")]\n        bool UploadFile(string fileName, Stream fileContents);\n    }\n\n    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerCall)]\n    public class UploaderService : IUploaderService\n    {\n        public bool UploadFile(string fileName, Stream fileContents)\n        {\n            try\n            {\n                string filePath = Path.Combine(@"C:\UploadedFiles\", fileName);\n                using (FileStream outputFileStream = new FileStream(filePath, FileMode.Create))\n                {\n                    fileContents.CopyTo(outputFileStream);\n                }\n                return true;\n            }\n            catch (Exception)\n            {\n                return false;\n            }\n        }\n    }\n\n    class Program\n    {\n        static void Main()\n        {\n            var host = new ServiceHost(typeof(UploaderService), new Uri("http://localhost:8080/Uploader"));\n            host.AddServiceEndpoint("Uploader.IUploaderService", new WebHttpBinding(), "").Behaviors.Add(new WebHttpBehavior());\n\n            try\n            {\n                host.Open();\n                Console.WriteLine(host.BaseAddresses[0].AbsoluteUri + " running.");\n                Console.WriteLine();\n\n                var uri = "http://localhost:8080/Uploader/File/file.jpg";\n                var req = WebRequest.Create(uri) as HttpWebRequest;\n                if (req != null)\n                {\n                    req.Method = "POST";\n                    req.ContentType = "image/jpeg";\n\n                    using (var reqStream = req.GetRequestStream())\n                    {\n                        using (var imageStream = new MemoryStream())\n                        {\n                            using (var image = Image.FromFile(@"c:\photo.jpg"))\n                            {\n                                image.Save(imageStream, ImageFormat.Jpeg);\n                                imageStream.Seek(0, SeekOrigin.Begin);\n                                imageStream.CopyTo(reqStream);\n                            }\n                        }\n                    }\n\n                    using (var resp = (HttpWebResponse)req.GetResponse())\n                    {\n                        using (var reader = new StreamReader(resp.GetResponseStream()))\n                        {\n                            Console.WriteLine(reader.ReadToEnd());\n                        }\n                    }\n                }\n\n                Console.WriteLine("Press to quit.");\n                Console.ReadLine();\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n                Console.ReadKey();\n            }\n            finally\n            {\n                if (host.State == CommunicationState.Faulted)\n                    host.Abort();\n                else\n                    host.Close();\n            }\n        }\n    }\n}