using System;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass AsyncTcpClient\n{\n    private TcpClient client;\n    private NetworkStream stream;\n\n    public AsyncTcpClient(string hostname, int port)\n    {\n        client = new TcpClient(hostname, port);\n        stream = client.GetStream();\n    }\n\n    public void StartCommunication()\n    {\n        byte[] buffer = new byte[1024];\n        stream.BeginRead(buffer, 0, buffer.Length, new AsyncCallback(ReadCallback), buffer);\n    }\n\n    private void ReadCallback(IAsyncResult ar)\n    {\n        int bytesRead = stream.EndRead(ar);\n        byte[] buffer = (byte[])ar.AsyncState;\n\n        if (bytesRead > 0)\n        {\n            string message = Encoding.ASCII.GetString(buffer, 0, bytesRead);\n            Console.WriteLine("Received: " + message);\n\n            // Continue reading\n            stream.BeginRead(buffer, 0, buffer.Length, new AsyncCallback(ReadCallback), buffer);\n        }\n    }\n\n    public void SendMessage(string message)\n    {\n        byte[] buffer = Encoding.ASCII.GetBytes(message);\n        stream.BeginWrite(buffer, 0, buffer.Length, new AsyncCallback(WriteCallback), null);\n    }\n\n    private void WriteCallback(IAsyncResult ar)\n    {\n        stream.EndWrite(ar);\n        Console.WriteLine("Message sent.");\n    }\n\n    public void Close()\n    {\n        stream.Close();\n        client.Close();\n    }\n}