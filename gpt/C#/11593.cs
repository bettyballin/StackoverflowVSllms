using System;\nusing System.Runtime.InteropServices;\nusing System.Runtime.InteropServices.ComTypes;\n\npublic class ComEventConnector : IScriptGeneratorCallback\n{\n    private IConnectionPoint m_connectionPoint;\n    private int m_cookie;\n\n    public void Connect(object comObject)\n    {\n        IConnectionPointContainer connectionPointContainer = comObject as IConnectionPointContainer;\n        if (connectionPointContainer == null)\n        {\n            throw new InvalidCastException("The COM object doesn't support IConnectionPointContainer interface.");\n        }\n\n        Guid eventGuid = typeof(IScriptGeneratorCallback).GUID;\n        connectionPointContainer.FindConnectionPoint(ref eventGuid, out m_connectionPoint);\n        m_connectionPoint.Advise(this, out m_cookie);\n    }\n\n    public void Disconnect()\n    {\n        if (m_connectionPoint != null && m_cookie != 0)\n        {\n            m_connectionPoint.Unadvise(m_cookie);\n            m_cookie = 0;\n            m_connectionPoint = null;\n        }\n    }\n\n    public void OnScriptGenerated()\n    {\n        Console.WriteLine("Script generated event received.");\n    }\n}\n\n// Usage example\nclass Program\n{\n    static void Main()\n    {\n        ScriptGenerator generator = new ScriptGenerator();\n        ComEventConnector connector = new ComEventConnector();\n        connector.Connect(generator);\n\n        generator.GenerateScript(); // This should trigger the event\n\n        connector.Disconnect();\n    }\n}