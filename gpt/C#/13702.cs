using System;\nusing System.Data.SqlClient;\nusing System.Threading;\nusing NLog; // Assuming you are using NLog for logging\n\npublic class UserHelper\n{\n    private static readonly ILogger logger = LogManager.GetCurrentClassLogger();\n    private const int MaxRetryAttempts = 3;\n    private const int RetryDelayMilliseconds = 2000;\n\n    public TblUserCollection GetCollection()\n    {\n        int attempt = 0;\n\n        while (attempt < MaxRetryAttempts)\n        {\n            try\n            {\n                TblUserCollection collection = new TblUserCollection();\n                collection.Query.Where(collection.Query.CompanyId == CompanyId);\n                collection.Query.OrderBy(collection.Query.FullName, esOrderByDirection.Ascending);\n                collection.Query.Load();\n\n                return collection;\n            }\n            catch (SqlException ex) when (ex.Number == -2) // SQL Timeout\n            {\n                logger.Error(ex, "SQL Timeout occurred while fetching the user collection.");\n                if (++attempt == MaxRetryAttempts)\n                {\n                    throw; // Rethrow the exception after max attempts\n                }\n                Thread.Sleep(RetryDelayMilliseconds); // Wait before retrying\n            }\n            catch (SqlException ex) when (ex.Number == 53 || ex.Number == 4060) // Network-related or instance-specific errors\n            {\n                logger.Error(ex, "Failed to connect to the database.");\n                if (++attempt == MaxRetryAttempts)\n                {\n                    throw; // Rethrow the exception after max attempts\n                }\n                Thread.Sleep(RetryDelayMilliseconds); // Wait before retrying\n            }\n            catch (SqlException ex)\n            {\n                logger.Error(ex, "An SQL exception occurred.");\n                throw; // Rethrow for other SQL exceptions\n            }\n            catch (Exception ex)\n            {\n                logger.Error(ex, "An unexpected error occurred.");\n                throw; // Rethrow for non-SQL exceptions\n            }\n        }\n\n        return null; // In case all retries fail\n    }\n}