public interface IPermissionService\n{\n    bool HasPermission(string userId, string objectType, string accessType);\n}\n\npublic class PermissionService : IPermissionService\n{\n    private readonly UserManager<ApplicationUser> _userManager;\n    private readonly ApplicationDbContext _context;\n\n    public PermissionService(UserManager<ApplicationUser> userManager, ApplicationDbContext context)\n    {\n        _userManager = userManager;\n        _context = context;\n    }\n\n    public bool HasPermission(string userId, string objectType, string accessType)\n    {\n        var user = _userManager.Users.Include(u => u.Role)\n                                     .ThenInclude(r => r.RolePermissions)\n                                     .ThenInclude(rp => rp.Permission)\n                                     .SingleOrDefault(u => u.Id == userId);\n\n        if (user == null)\n            return false;\n\n        return user.Role.RolePermissions.Any(rp => rp.Permission.ObjectType == objectType && rp.Permission.AccessType == accessType);\n    }\n}