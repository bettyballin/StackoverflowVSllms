using System;\n\npublic class WindowsVersionHelper\n{\n    public static string GetWindowsVersion()\n    {\n        if (Environment.OSVersion.Platform != PlatformID.Win32NT)\n        {\n            return "Unknown OS";\n        }\n\n        Version version = Environment.OSVersion.Version;\n        string productName = "Unknown Windows Version";\n\n        if (version.Major == 10)\n        {\n            if (version.Build >= 22000)\n            {\n                productName = "Windows 11";\n            }\n            else\n            {\n                productName = "Windows 10";\n            }\n        }\n        else if (version.Major == 6)\n        {\n            switch (version.Minor)\n            {\n                case 3:\n                    productName = "Windows 8.1";\n                    break;\n                case 2:\n                    productName = "Windows 8";\n                    break;\n                case 1:\n                    productName = "Windows 7";\n                    break;\n                case 0:\n                    productName = "Windows Vista";\n                    break;\n            }\n        }\n        else if (version.Major == 5)\n        {\n            switch (version.Minor)\n            {\n                case 2:\n                    productName = "Windows Server 2003; Windows XP x64 Edition";\n                    break;\n                case 1:\n                    productName = "Windows XP";\n                    break;\n                case 0:\n                    productName = "Windows 2000";\n                    break;\n            }\n        }\n\n        return productName;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine("You are running: " + WindowsVersionHelper.GetWindowsVersion());\n    }\n}