// Startup.cs\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)\n        .AddCookie();\n\n    services.AddAuthorization(options =>\n    {\n        options.AddPolicy("ProjectEditor", policy =>\n            policy.RequireClaim("ProjectRole", "Editor"));\n        options.AddPolicy("ProjectPhotographer", policy =>\n            policy.RequireClaim("ProjectRole", "Photographer"));\n    });\n\n    services.AddControllersWithViews();\n}\n\n// Example Controller\n[Authorize(Policy = "ProjectEditor")]\npublic IActionResult EditProject(int projectId)\n{\n    // Your code to edit the project\n}\n\n// Example Middleware to add claims\npublic class ClaimsMiddleware\n{\n    private readonly RequestDelegate _next;\n\n    public ClaimsMiddleware(RequestDelegate next)\n    {\n        _next = next;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        if (context.User.Identity.IsAuthenticated)\n        {\n            var claimsIdentity = context.User.Identity as ClaimsIdentity;\n            // Example: Add claims based on project roles\n            claimsIdentity.AddClaim(new Claim("ProjectRole", "Editor"));\n        }\n\n        await _next(context);\n    }\n}