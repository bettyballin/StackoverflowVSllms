using Microsoft.Win32;\nusing System;\n\nclass VisioChecker\n{\n    public static string GetVisioInstallPath()\n    {\n        string[] versions = { "16.0", "15.0", "14.0", "12.0" }; // Add more versions if needed\n        string visioPath = null;\n\n        foreach (var version in versions)\n        {\n            string registryKeyPath = $@"SOFTWARE\Microsoft\Office\{version}\Visio\InstallRoot";\n            visioPath = GetRegistryValue(registryKeyPath, "Path");\n            if (!string.IsNullOrEmpty(visioPath))\n            {\n                break;\n            }\n\n            registryKeyPath = $@"SOFTWARE\WOW6432Node\Microsoft\Office\{version}\Visio\InstallRoot";\n            visioPath = GetRegistryValue(registryKeyPath, "Path");\n            if (!string.IsNullOrEmpty(visioPath))\n            {\n                break;\n            }\n        }\n\n        return visioPath;\n    }\n\n    private static string GetRegistryValue(string registryKeyPath, string valueName)\n    {\n        try\n        {\n            using (RegistryKey key = Registry.LocalMachine.OpenSubKey(registryKeyPath))\n            {\n                if (key != null)\n                {\n                    Object o = key.GetValue(valueName);\n                    if (o != null)\n                    {\n                        return o.ToString();\n                    }\n                }\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error accessing registry: {ex.Message}");\n        }\n\n        return null;\n    }\n\n    static void Main()\n    {\n        string visioPath = GetVisioInstallPath();\n        if (!string.IsNullOrEmpty(visioPath))\n        {\n            Console.WriteLine($"Visio is installed at: {visioPath}");\n        }\n        else\n        {\n            Console.WriteLine("Visio is not installed.");\n        }\n    }\n}