using System;\nusing System.Net.NetworkInformation;\nusing System.Net.Sockets;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form\n{\n    public MainForm()\n    {\n        InitializeComponent();\n        NetworkChange.NetworkAddressChanged += new NetworkAddressChangedEventHandler(NetworkAddressChangedCallback);\n    }\n\n    private void NetworkAddressChangedCallback(object sender, EventArgs e)\n    {\n        if (IsSqlAvailable())\n        {\n            // SQL Server is available, enable Merge Syncing functionality\n            EnableMergeSyncing();\n        }\n        else\n        {\n            // SQL Server is not available, disable Merge Syncing functionality\n            DisableMergeSyncing();\n        }\n    }\n\n    private static bool IsSqlAvailable()\n    {\n        using (TcpClient tcpc = new TcpClient())\n        {\n            try\n            {\n                tcpc.Connect("10.250.50.30", 1433);\n                return true;\n            }\n            catch\n            {\n                return false;\n            }\n        }\n    }\n\n    private void EnableMergeSyncing()\n    {\n        // Code to enable Merge Syncing functionality\n        MessageBox.Show("SQL Server is available. Merge Syncing enabled.");\n    }\n\n    private void DisableMergeSyncing()\n    {\n        // Code to disable Merge Syncing functionality\n        MessageBox.Show("SQL Server is not available. Merge Syncing disabled.");\n    }\n}