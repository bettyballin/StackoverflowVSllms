using System;\nusing System.Collections.Generic;\nusing System.Windows.Input;\n\npublic class KeyResolver\n{\n    private static readonly Dictionary<char, Key> CharToKeyMap = new Dictionary<char, Key>\n    {\n        { '.', Key.OemPeriod },\n        { ',', Key.OemComma },\n        { ';', Key.OemSemicolon },\n        { '/', Key.Oem2 },\n        { '\\', Key.Oem5 },\n        { '[', Key.Oem4 },\n        { ']', Key.Oem6 },\n        { '\'', Key.OemQuotes },\n        { '`', Key.Oem3 },\n        { '-', Key.OemMinus },\n        { '=', Key.OemPlus },\n        // Add other mappings as needed\n    };\n\n    public Key ResolveKey(char charToResolve)\n    {\n        if (CharToKeyMap.TryGetValue(charToResolve, out Key key))\n        {\n            return key;\n        }\n        \n        throw new ArgumentException($"No Key enum value found for character: {charToResolve}");\n    }\n}