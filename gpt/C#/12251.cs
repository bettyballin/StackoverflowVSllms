using Microsoft.VisualStudio.TestTools.UnitTesting;\nusing System.Collections.Generic;\nusing System.ComponentModel.DataAnnotations;\n\n[TestClass]\npublic class MyModelTests\n{\n    [TestMethod]\n    public void MyProperty_WithLongString_ShouldReturnValidationError()\n    {\n        // Arrange\n        var model = new MyModel { MyProperty = "This string is too long" };\n        var validationResults = new List<ValidationResult>();\n        var validationContext = new ValidationContext(model);\n\n        // Act\n        bool isValid = Validator.TryValidateObject(model, validationContext, validationResults, true);\n\n        // Assert\n        Assert.IsFalse(isValid);\n        Assert.AreEqual(1, validationResults.Count);\n        Assert.AreEqual("The field MyProperty must be a string or array type with a maximum length of '10'.", validationResults[0].ErrorMessage);\n    }\n\n    [TestMethod]\n    public void MyProperty_WithValidString_ShouldNotReturnValidationError()\n    {\n        // Arrange\n        var model = new MyModel { MyProperty = "ValidStr" };\n        var validationResults = new List<ValidationResult>();\n        var validationContext = new ValidationContext(model);\n\n        // Act\n        bool isValid = Validator.TryValidateObject(model, validationContext, validationResults, true);\n\n        // Assert\n        Assert.IsTrue(isValid);\n        Assert.AreEqual(0, validationResults.Count);\n    }\n}