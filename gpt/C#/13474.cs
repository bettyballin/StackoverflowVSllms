using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Runtime.InteropServices;\nusing System.Text;\nusing System.Windows.Forms;\n\npublic class AsyncTcpServer : Form\n{\n    private const int WM_SOCKET = 0x0401;\n    private const int FD_READ = 0x01;\n    private const int FD_ACCEPT = 0x08;\n    private const int FD_CLOSE = 0x20;\n\n    private Socket listenSocket;\n    private Socket clientSocket;\n\n    [DllImport("ws2_32.dll", SetLastError = true)]\n    private static extern int WSAAsyncSelect(IntPtr socket, IntPtr hWnd, int wMsg, int lEvent);\n\n    public AsyncTcpServer()\n    {\n        this.Load += new EventHandler(this.AsyncTcpServer_Load);\n    }\n\n    private void AsyncTcpServer_Load(object sender, EventArgs e)\n    {\n        // Initialize listening socket\n        listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n        listenSocket.Bind(new IPEndPoint(IPAddress.Any, 12345));\n        listenSocket.Listen(10);\n\n        // Register for asynchronous socket events\n        WSAAsyncSelect(listenSocket.Handle, this.Handle, WM_SOCKET, FD_ACCEPT | FD_READ | FD_CLOSE);\n    }\n\n    protected override void WndProc(ref Message m)\n    {\n        if (m.Msg == WM_SOCKET)\n        {\n            switch (m.LParam.ToInt32())\n            {\n                case FD_ACCEPT:\n                    clientSocket = listenSocket.Accept();\n                    WSAAsyncSelect(clientSocket.Handle, this.Handle, WM_SOCKET, FD_READ | FD_CLOSE);\n                    SendWelcomeMessage(clientSocket);\n                    break;\n\n                case FD_READ:\n                    ReceiveData(clientSocket);\n                    break;\n\n                case FD_CLOSE:\n                    clientSocket.Close();\n                    break;\n            }\n        }\n        base.WndProc(ref m);\n    }\n\n    private void SendWelcomeMessage(Socket client)\n    {\n        string welcomeMessage = "Welcome to the server!";\n        byte[] data = Encoding.UTF8.GetBytes(welcomeMessage);\n        client.Send(data);\n    }\n\n    private void ReceiveData(Socket client)\n    {\n        byte[] buffer = new byte[1024];\n        int bytesRead = client.Receive(buffer);\n        string receivedMessage = Encoding.UTF8.GetString(buffer, 0, bytesRead);\n        Console.WriteLine("Received: " + receivedMessage);\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.Run(new AsyncTcpServer());\n    }\n}