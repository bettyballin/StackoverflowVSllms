// ProductRepository.cs\npublic class ProductRepository : IProductRepository\n{\n    private readonly DataContext _context;\n\n    public ProductRepository(string connectionString)\n    {\n        _context = new DataContext(connectionString);\n    }\n\n    public void Add(Product entity)\n    {\n        _context.GetTable<Product>().InsertOnSubmit(entity);\n        _context.SubmitChanges();\n    }\n\n    public void Remove(Product entity)\n    {\n        _context.GetTable<Product>().DeleteOnSubmit(entity);\n        _context.SubmitChanges();\n    }\n\n    public Product GetById(int id)\n    {\n        return _context.GetTable<Product>().SingleOrDefault(p => p.Id == id);\n    }\n\n    public IEnumerable<Product> GetAll()\n    {\n        return _context.GetTable<Product>().ToList();\n    }\n\n    public IEnumerable<Product> GetProductsByCategory(string category)\n    {\n        return _context.GetTable<Product>().Where(p => p.Category == category).ToList();\n    }\n}