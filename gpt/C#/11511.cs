using System.Collections.ObjectModel;\nusing System.ComponentModel;\n\nnamespace WpfApp\n{\n    public partial class MainWindow : Window\n    {\n        public ObservableCollection<Item> Items { get; set; }\n\n        public MainWindow()\n        {\n            InitializeComponent();\n            Items = new ObservableCollection<Item>\n            {\n                new Item { Name = "Item 1", IsBold = false },\n                new Item { Name = "Item 2", IsBold = true },\n                new Item { Name = "Item 3", IsBold = false }\n            };\n            DataContext = this;\n        }\n    }\n\n    public class Item : INotifyPropertyChanged\n    {\n        private string name;\n        private bool isBold;\n\n        public string Name\n        {\n            get { return name; }\n            set { name = value; OnPropertyChanged("Name"); }\n        }\n\n        public bool IsBold\n        {\n            get { return isBold; }\n            set { isBold = value; OnPropertyChanged("IsBold"); }\n        }\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        protected void OnPropertyChanged(string propertyName)\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n    }\n}