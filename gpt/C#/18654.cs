class Program\n{\n    [STAThread]\n    static void Main()\n    {\n        Application.SetUnhandledExceptionMode(UnhandledExceptionMode.CatchException);\n        Application.ThreadException += new ThreadExceptionEventHandler(Application_ThreadException);\n        AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(CurrentDomain_UnhandledException);\n        Application.Run(new MainForm());\n    }\n\n    static void Application_ThreadException(object sender, ThreadExceptionEventArgs e)\n    {\n        // Handle UI thread exceptions\n        LogError(e.Exception);\n    }\n\n    static void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e)\n    {\n        // Handle non-UI thread exceptions\n        LogError((Exception)e.ExceptionObject);\n    }\n\n    static void LogError(Exception ex)\n    {\n        // Implement your logging logic here\n        Console.WriteLine(ex.Message);\n        Console.WriteLine(ex.StackTrace);\n    }\n}