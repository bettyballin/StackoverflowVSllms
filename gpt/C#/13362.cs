using System;\nusing System.Drawing;\nusing Microsoft.DirectX.Direct3D;\n\npublic class ScreenCapture\n{\n    private Device device;\n    private Surface offScreenSurface;\n    \n    public ScreenCapture()\n    {\n        InitializeDevice();\n    }\n    \n    private void InitializeDevice()\n    {\n        PresentParameters presentParams = new PresentParameters();\n        presentParams.Windowed = true;\n        presentParams.SwapEffect = SwapEffect.Discard;\n        \n        device = new Device(0, DeviceType.Hardware, IntPtr.Zero, CreateFlags.SoftwareVertexProcessing, presentParams);\n        offScreenSurface = device.CreateOffscreenPlainSurface(800, 600, Format.A8R8G8B8, Pool.SystemMemory);\n    }\n    \n    public Bitmap CaptureFrame()\n    {\n        device.GetFrontBufferData(0, offScreenSurface);\n        GraphicsStream graphicsStream = SurfaceLoader.SaveToStream(ImageFileFormat.Bmp, offScreenSurface);\n        \n        return new Bitmap(graphicsStream);\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        ScreenCapture screenCapture = new ScreenCapture();\n        Bitmap frame = screenCapture.CaptureFrame();\n        frame.Save("capture.bmp");\n    }\n}