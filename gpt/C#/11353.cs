using System;\nusing System.Text;\n\npublic class Utf8StringTrimmer\n{\n    public static string TrimToByteLength(string input, int maxLength)\n    {\n        if (string.IsNullOrEmpty(input) || maxLength <= 0)\n        {\n            return string.Empty;\n        }\n\n        // Encode the string to UTF8 bytes\n        byte[] utf8Bytes = Encoding.UTF8.GetBytes(input);\n\n        if (utf8Bytes.Length <= maxLength)\n        {\n            return input;\n        }\n\n        // Create an array to hold the trimmed bytes\n        byte[] trimmedBytes = new byte[maxLength];\n        Array.Copy(utf8Bytes, trimmedBytes, maxLength);\n\n        // Decode the trimmed byte array back to a string\n        string trimmedString = Encoding.UTF8.GetString(trimmedBytes);\n\n        // Ensure the string does not end with a partial character\n        while (Encoding.UTF8.GetByteCount(trimmedString) > maxLength)\n        {\n            trimmedString = trimmedString.Substring(0, trimmedString.Length - 1);\n        }\n\n        return trimmedString;\n    }\n\n    public static void Main()\n    {\n        string input = "Your UTF8 string here";\n        int maxLength = 10; // desired byte length\n\n        string result = TrimToByteLength(input, maxLength);\n        Console.WriteLine($"Trimmed string: {result}");\n    }\n}