using DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Spreadsheet;\n\npublic class ExcelEditor\n{\n    public void InsertText(string filePath, string sheetName, string cellReference, string text)\n    {\n        // Open the spreadsheet document for editing.\n        using (SpreadsheetDocument document = SpreadsheetDocument.Open(filePath, true))\n        {\n            // Retrieve a reference to the workbook part.\n            WorkbookPart workbookPart = document.WorkbookPart;\n\n            // Find the sheet with the provided name.\n            Sheet sheet = workbookPart.Workbook.Descendants<Sheet>().FirstOrDefault(s => s.Name == sheetName);\n            if (sheet == null)\n            {\n                throw new ArgumentException($"Sheet with name {sheetName} does not exist.");\n            }\n\n            // Retrieve a reference to the worksheet part.\n            WorksheetPart worksheetPart = (WorksheetPart)workbookPart.GetPartById(sheet.Id);\n\n            // Get the cell where text should be inserted.\n            Cell cell = GetCell(worksheetPart.Worksheet, cellReference);\n\n            // Set the cell value.\n            cell.CellValue = new CellValue(text);\n            cell.DataType = new EnumValue<CellValues>(CellValues.String);\n\n            // Save the changes.\n            worksheetPart.Worksheet.Save();\n        }\n    }\n\n    private Cell GetCell(Worksheet worksheet, string cellReference)\n    {\n        // Retrieve the row number and column name from the cell reference.\n        string columnName = new string(cellReference.Where(char.IsLetter).ToArray());\n        uint rowIndex = uint.Parse(new string(cellReference.Where(char.IsDigit).ToArray()));\n\n        // Retrieve the row.\n        Row row = worksheet.GetFirstChild<SheetData>().Elements<Row>().FirstOrDefault(r => r.RowIndex == rowIndex);\n        if (row == null)\n        {\n            row = new Row() { RowIndex = rowIndex };\n            worksheet.GetFirstChild<SheetData>().Append(row);\n        }\n\n        // Retrieve the cell.\n        Cell cell = row.Elements<Cell>().FirstOrDefault(c => c.CellReference.Value == cellReference);\n        if (cell == null)\n        {\n            cell = new Cell() { CellReference = cellReference };\n            row.Append(cell);\n        }\n\n        return cell;\n    }\n}