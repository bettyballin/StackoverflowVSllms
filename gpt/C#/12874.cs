XmlDocument document = new XmlDocument();\ndocument.Load(responseStream);\n\n// set up namespaces\nXmlNamespaceManager nsmgr = new XmlNamespaceManager(document.NameTable);\nnsmgr.AddNamespace("a", "DAV:");\nnsmgr.AddNamespace("b", "urn:uuid:c2f41010-65b3-11d1-a29f-00aa00c14882/");\nnsmgr.AddNamespace("c", "xml:");\nnsmgr.AddNamespace("d", "urn:schemas:mailheader:");\nnsmgr.AddNamespace("e", "urn:schemas:httpmail:");\n\n// Load each response (each mail item) into an object\nXmlNodeList responseNodes = document.GetElementsByTagName("a:response");\nforeach (XmlNode responseNode in responseNodes)\n{\n    // get the <propstat> node that contains valid HTTP responses\n    XmlNode uriNode = responseNode.SelectSingleNode("child::a:href", nsmgr);\n    XmlNode propstatNode = responseNode.SelectSingleNode("descendant::a:propstat[a:status='HTTP/1.1 200 OK']", nsmgr);\n    if (propstatNode != null)\n    {\n        // read properties of this response, and load into a data object\n        XmlNode fromNode = propstatNode.SelectSingleNode("descendant::d:from", nsmgr);\n        XmlNode descNode = propstatNode.SelectSingleNode("descendant::e:textdescription", nsmgr);\n        XmlNode subjectNode = propstatNode.SelectSingleNode("descendant::e:subject", nsmgr); // Add this line\n\n        // make new data object\n        model.Mail mail = new model.Mail();\n        if (uriNode != null)\n            mail.Uri = uriNode.InnerText;\n        if (fromNode != null)\n            mail.From = fromNode.InnerText;\n        if (descNode != null)\n            mail.Body = descNode.InnerText;\n        if (subjectNode != null)\n            mail.Subject = subjectNode.InnerText; // Add this line\n        unreadMail.Add(mail);\n    }\n}