using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Configuration;\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = ConfigurationManager.ConnectionStrings["mydbconn"].ConnectionString;\n\n        using (SqlConnection conn = new SqlConnection(connectionString))\n        {\n            conn.Open();\n            var storedProcedures = GetStoredProcedures(conn, "mydb");\n\n            foreach (var sp in storedProcedures)\n            {\n                Console.WriteLine($"Stored Procedure: {sp}");\n                var columns = GetStoredProcColumns(conn, sp);\n\n                foreach (var column in columns)\n                {\n                    Console.WriteLine($"Column: {column}");\n                }\n            }\n        }\n    }\n\n    static List<string> GetStoredProcedures(SqlConnection conn, string databaseName)\n    {\n        List<string> storedProcedures = new List<string>();\n\n        using (SqlCommand cmd = new SqlCommand(\n            $"SELECT name FROM {databaseName}.sys.procedures", conn))\n        {\n            using (SqlDataReader reader = cmd.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    storedProcedures.Add(reader.GetString(0));\n                }\n            }\n        }\n\n        return storedProcedures;\n    }\n\n    static List<string> GetStoredProcColumns(SqlConnection conn, string storedProcName)\n    {\n        List<string> columns = new List<string>();\n\n        using (SqlCommand cmd = new SqlCommand($"SET FMTONLY ON; EXEC {storedProcName}; SET FMTONLY OFF;", conn))\n        {\n            using (SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.SchemaOnly))\n            {\n                DataTable schemaTable = reader.GetSchemaTable();\n                foreach (DataRow row in schemaTable.Rows)\n                {\n                    columns.Add(row["ColumnName"].ToString());\n                }\n            }\n        }\n\n        return columns;\n    }\n}