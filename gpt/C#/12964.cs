using System;\nusing System.ComponentModel;\nusing System.IO;\nusing System.Windows.Forms;\n\npublic partial class Form1 : Form\n{\n    private BackgroundWorker backgroundWorker;\n\n    public Form1()\n    {\n        InitializeComponent();\n        backgroundWorker = new BackgroundWorker();\n        backgroundWorker.WorkerReportsProgress = true;\n        backgroundWorker.DoWork += BackgroundWorker_DoWork;\n        backgroundWorker.ProgressChanged += BackgroundWorker_ProgressChanged;\n        backgroundWorker.RunWorkerCompleted += BackgroundWorker_RunWorkerCompleted;\n    }\n\n    private void button1_Click(object sender, EventArgs e)\n    {\n        if (!backgroundWorker.IsBusy)\n        {\n            backgroundWorker.RunWorkerAsync();\n        }\n    }\n\n    private void BackgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        DirectoryInfo dir = new DirectoryInfo("path_to_your_directory");\n        int fileCount = dir.GetFiles("*.txt").Length;\n        int progress = 0;\n\n        foreach (FileInfo f in dir.GetFiles("*.txt"))\n        {\n            // Do processing\n            // Simulate processing with delay\n            System.Threading.Thread.Sleep(1000);\n\n            progress++;\n            int percentage = (progress * 100) / fileCount;\n            backgroundWorker.ReportProgress(percentage, f.Name);\n        }\n    }\n\n    private void BackgroundWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n    {\n        string fileName = e.UserState.ToString();\n        label1.Text = $"{fileName} is done processing, now processing...";\n        progressBar1.Value = e.ProgressPercentage;\n    }\n\n    private void BackgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        label1.Text = "Processing completed.";\n        progressBar1.Value = 100;\n    }\n}