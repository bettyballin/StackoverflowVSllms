using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Newtonsoft.Json;\n\npublic class AutocompleteManager\n{\n    private readonly string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "autocomplete_list.json");\n\n    public List<string> LoadAutocompleteList()\n    {\n        if (File.Exists(filePath))\n        {\n            string json = File.ReadAllText(filePath);\n            return JsonConvert.DeserializeObject<List<string>>(json) ?? new List<string>();\n        }\n        return new List<string>();\n    }\n\n    public void SaveAutocompleteList(List<string> autocompleteList)\n    {\n        string json = JsonConvert.SerializeObject(autocompleteList, Formatting.Indented);\n        File.WriteAllText(filePath, json);\n    }\n}\n\n// Usage\npublic class MyApplication\n{\n    private AutocompleteManager autocompleteManager = new AutocompleteManager();\n    private List<string> autocompleteList;\n\n    public void Start()\n    {\n        autocompleteList = autocompleteManager.LoadAutocompleteList();\n        // Initialize ComboBox with the loaded autocompleteList\n    }\n\n    public void OnApplicationExit()\n    {\n        // Update autocompleteList with new entries from the ComboBox\n        autocompleteManager.SaveAutocompleteList(autocompleteList);\n    }\n}