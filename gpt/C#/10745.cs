using Moq;\nusing Xunit;\n\npublic interface IMyService\n{\n    int GetData();\n}\n\npublic class MyClass\n{\n    private readonly IMyService _myService;\n\n    public MyClass(IMyService myService)\n    {\n        _myService = myService;\n    }\n\n    public int ProcessData()\n    {\n        return _myService.GetData() * 2;\n    }\n}\n\npublic class MyClassTests\n{\n    [Fact]\n    public void ProcessData_ShouldReturnDoubleTheData()\n    {\n        // Arrange\n        var mockService = new Mock<IMyService>();\n        mockService.Setup(service => service.GetData()).Returns(10);\n        var myClass = new MyClass(mockService.Object);\n\n        // Act\n        var result = myClass.ProcessData();\n\n        // Assert\n        Assert.Equal(20, result);\n    }\n}