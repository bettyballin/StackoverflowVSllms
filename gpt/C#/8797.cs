public abstract class BaseController : Controller\n{\n    protected override void OnActionExecuting(ActionExecutingContext filterContext)\n    {\n        base.OnActionExecuting(filterContext);\n\n        // Assume you have a method to get the logged in user\n        var loggedUser = GetLoggedUser();\n\n        // Set the logged user in ViewBag, which can be accessed in views\n        ViewBag.LoggedUser = loggedUser;\n\n        // Alternatively, you can set it in ViewData\n        ViewData["LoggedUser"] = loggedUser;\n\n        // Or set it in a strongly typed model property\n        if (ControllerContext.Controller is BaseController baseController)\n        {\n            baseController.LoggedUser = loggedUser;\n        }\n    }\n\n    public UserModel LoggedUser { get; private set; }\n\n    private UserModel GetLoggedUser()\n    {\n        // Your logic to get the logged user\n        return HttpContext.User.Identity.IsAuthenticated ? new UserModel { /* Set properties */ } : null;\n    }\n}