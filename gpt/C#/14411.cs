using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Xml;\n\npublic class XMLSigner\n{\n    public static void Main(string[] args)\n    {\n        // Load the XML document.\n        XmlDocument doc = new XmlDocument();\n        doc.Load("SAMLAssertion.xml");\n\n        // Load the private key (for signing) from a certificate or key file.\n        X509Certificate2 cert = new X509Certificate2("path_to_certificate.pfx", "certificate_password");\n\n        // Sign the XML.\n        SignXml(doc, cert);\n\n        // Save the signed XML document.\n        doc.Save("SignedSAMLAssertion.xml");\n    }\n\n    public static void SignXml(XmlDocument xmlDoc, X509Certificate2 cert)\n    {\n        // Check arguments.\n        if (xmlDoc == null)\n            throw new ArgumentException("xmlDoc");\n        if (cert == null)\n            throw new ArgumentException("cert");\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(xmlDoc);\n\n        // Add the key to the SignedXml document.\n        signedXml.SigningKey = cert.PrivateKey;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = "";\n\n        // Add an enveloped transformation to the reference.\n        XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n        reference.AddTransform(env);\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        xmlDoc.DocumentElement.AppendChild(xmlDoc.ImportNode(xmlDigitalSignature, true));\n    }\n}