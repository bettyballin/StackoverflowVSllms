using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class ListComparer\n{\n    public static void Main(string[] args)\n    {\n        List<string> list1 = new List<string> { "a", "c", "b", "d", "f", "e" };\n        List<string> list2 = new List<string> { "a", "d", "e", "f", "h" };\n\n        var result = CompareLists(list1, list2);\n        if (result.Count == 0)\n        {\n            Console.WriteLine("All common elements are in the correct order.");\n        }\n        else\n        {\n            Console.WriteLine("The following elements are in the wrong order:");\n            foreach (var item in result)\n            {\n                Console.WriteLine(item);\n            }\n        }\n    }\n\n    public static List<string> CompareLists(List<string> list1, List<string> list2)\n    {\n        var commonElements = list1.Intersect(list2).ToList();\n        var list1Indices = commonElements.Select(e => list1.IndexOf(e)).ToList();\n        var list2Indices = commonElements.Select(e => list2.IndexOf(e)).ToList();\n\n        List<string> outOfOrderElements = new List<string>();\n        for (int i = 0; i < commonElements.Count - 1; i++)\n        {\n            if (list1Indices[i] > list1Indices[i + 1] && list2Indices[i] < list2Indices[i + 1])\n            {\n                outOfOrderElements.Add(commonElements[i + 1]);\n            }\n        }\n\n        return outOfOrderElements;\n    }\n}