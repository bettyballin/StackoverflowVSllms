using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form\n{\n    private Process openVpnProcess;\n\n    public MainForm()\n    {\n        InitializeComponent();\n    }\n\n    private void StartVpn()\n    {\n        openVpnProcess = new Process();\n        openVpnProcess.StartInfo.CreateNoWindow = true;\n        openVpnProcess.EnableRaisingEvents = true;\n        openVpnProcess.StartInfo.Arguments = "--config client.ovpn";\n        openVpnProcess.StartInfo.FileName = "openvpn.exe";\n        openVpnProcess.StartInfo.WorkingDirectory = @"C:\Program Files\OpenVPN\config";\n        openVpnProcess.Start();\n    }\n\n    private void StopVpn()\n    {\n        if (openVpnProcess != null && !openVpnProcess.HasExited)\n        {\n            // Send SIGTERM to gracefully terminate the OpenVPN process\n            GenerateConsoleCtrlEvent(ConsoleCtrlEvent.CTRL_C, (uint)openVpnProcess.Id);\n            openVpnProcess.WaitForExit(); // Wait for the process to exit\n        }\n    }\n\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool GenerateConsoleCtrlEvent(ConsoleCtrlEvent sigevent, uint dwProcessGroupId);\n\n    private enum ConsoleCtrlEvent\n    {\n        CTRL_C = 0,\n        CTRL_BREAK = 1,\n        CTRL_CLOSE = 2,\n        CTRL_LOGOFF = 5,\n        CTRL_SHUTDOWN = 6\n    }\n}