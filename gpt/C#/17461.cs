using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\n\npublic class EventLogHelper\n{\n    public static IEnumerable<EventLogEntry> GetEventLogEntriesSince(DateTime startTime, string logName, List<string> ignoredSources)\n    {\n        List<EventLogEntry> entries = new List<EventLogEntry>();\n        \n        using (EventLog eventLog = new EventLog(logName))\n        {\n            foreach (EventLogEntry entry in eventLog.Entries)\n            {\n                if (entry.TimeGenerated >= startTime && !ignoredSources.Contains(entry.Source))\n                {\n                    entries.Add(entry);\n                }\n            }\n        }\n\n        return entries;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        DateTime start = DateTime.Now;\n        // Perform your automated test steps here...\n\n        // Define a list of sources to ignore\n        List<string> ignoredSources = new List<string> { "Source1", "Source2" };\n\n        // Retrieve the event log entries since the start time\n        IEnumerable<EventLogEntry> entries = EventLogHelper.GetEventLogEntriesSince(start, "Application", ignoredSources);\n\n        // Process the entries as needed\n        foreach (EventLogEntry entry in entries)\n        {\n            Console.WriteLine($"Time: {entry.TimeGenerated}, Source: {entry.Source}, Message: {entry.Message}");\n        }\n    }\n}