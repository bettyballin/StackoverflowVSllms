public class MyNumber\n{\n    private double value;\n\n    public MyNumber(double value)\n    {\n        this.value = value;\n    }\n\n    // Operator overloads\n    public static implicit operator double(MyNumber myNumber) => myNumber.value;\n    public static explicit operator MyNumber(double value) => new MyNumber(value);\n    public static MyNumber operator +(MyNumber a, MyNumber b) => new MyNumber(a.value + b.value);\n    public static MyNumber operator -(MyNumber a, MyNumber b) => new MyNumber(a.value - b.value);\n    public static MyNumber operator *(MyNumber a, MyNumber b) => new MyNumber(a.value * b.value);\n    public static MyNumber operator /(MyNumber a, MyNumber b) => new MyNumber(a.value / b.value);\n\n    // Conversion methods\n    public double ToDouble() => this.value;\n    public static MyNumber FromDouble(double value) => new MyNumber(value);\n\n    // Arithmetic methods\n    public MyNumber Add(MyNumber other) => new MyNumber(this.value + other.value);\n    public MyNumber Subtract(MyNumber other) => new MyNumber(this.value - other.value);\n    public MyNumber Multiply(MyNumber other) => new MyNumber(this.value * other.value);\n    public MyNumber Divide(MyNumber other) => new MyNumber(this.value / other.value);\n}