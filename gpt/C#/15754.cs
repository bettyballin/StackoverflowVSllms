// Foo.Services.UserService\n    public class UserService\n    {\n        public ICollection<KeyValuePair<string, string>> ValidateUser(User user)\n        {\n            var errors = new List<KeyValuePair<string, string>>();\n\n            if (string.IsNullOrWhiteSpace(user.Username))\n            {\n                errors.Add(new KeyValuePair<string, string>("Username", "Username is required."));\n            }\n\n            if (string.IsNullOrWhiteSpace(user.Email))\n            {\n                errors.Add(new KeyValuePair<string, string>("Email", "Email is required."));\n            }\n\n            if (string.IsNullOrWhiteSpace(user.Password))\n            {\n                errors.Add(new KeyValuePair<string, string>("Password", "Password is required."));\n            }\n\n            return errors;\n        }\n    }\n\n    // Foo.Controllers.UserController\n    public class UserController : Controller\n    {\n        private readonly UserService _userService;\n\n        public UserController(UserService userService)\n        {\n            _userService = userService;\n        }\n\n        [HttpPost]\n        public ActionResult Create(User user)\n        {\n            var validationErrors = _userService.ValidateUser(user);\n            if (validationErrors.Any())\n            {\n                foreach (var error in validationErrors)\n                {\n                    ModelState.AddModelError(error.Key, error.Value);\n                }\n                return View(user);\n            }\n\n            // Proceed with user creation\n            return RedirectToAction("Index");\n        }\n    }