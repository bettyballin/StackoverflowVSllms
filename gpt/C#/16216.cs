using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass MainClass\n{\n    public static string Encrypt(string toEncrypt, string key, bool useHashing)\n    {\n        byte[] keyArray;\n        byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(toEncrypt);\n\n        if (useHashing)\n        {\n            using (MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider())\n            {\n                keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));\n            }\n        }\n        else\n        {\n            keyArray = UTF8Encoding.UTF8.GetBytes(key);\n        }\n\n        using (TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider())\n        {\n            tdes.Key = keyArray;\n            tdes.Mode = CipherMode.ECB;\n            tdes.Padding = PaddingMode.PKCS7;\n\n            ICryptoTransform cTransform = tdes.CreateEncryptor();\n            byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);\n            return Convert.ToBase64String(resultArray, 0, resultArray.Length);\n        }\n    }\n\n    public static string Base64ToHex(string base64)\n    {\n        byte[] bytes = Convert.FromBase64String(base64);\n        StringBuilder hex = new StringBuilder(bytes.Length * 2);\n        foreach (byte b in bytes)\n        {\n            hex.AppendFormat("{0:x2}", b);\n        }\n        return hex.ToString();\n    }\n\n    public static void Main(string[] args)\n    {\n        string key = "secret";\n        string encrypted = Encrypt("oscar" + "000", key, true);\n        Console.WriteLine(Base64ToHex(encrypted));\n    }\n}