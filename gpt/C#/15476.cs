using System;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\nusing System.Web.Services;\n\npublic class FileService : WebService\n{\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    public extern static bool LogonUser(string lpszUsername, string lpszDomain, string lpszPassword, int dwLogonType, int dwLogonProvider, out IntPtr phToken);\n\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]\n    public extern static bool CloseHandle(IntPtr handle);\n\n    [WebMethod]\n    public string[] GetFiles(string userId, string password, string domain, string directoryPath)\n    {\n        IntPtr tokenHandle = IntPtr.Zero;\n        WindowsImpersonationContext impersonatedUser = null;\n\n        try\n        {\n            bool isSuccess = LogonUser(userId, domain, password, 2, 0, out tokenHandle);\n            if (!isSuccess)\n            {\n                throw new UnauthorizedAccessException("Logon failed.");\n            }\n\n            WindowsIdentity windowsIdentity = new WindowsIdentity(tokenHandle);\n            impersonatedUser = windowsIdentity.Impersonate();\n\n            // Access the file system with the impersonated user context.\n            string[] files = System.IO.Directory.GetFiles(directoryPath);\n\n            return files;\n        }\n        finally\n        {\n            if (impersonatedUser != null)\n            {\n                impersonatedUser.Undo();\n            }\n            if (tokenHandle != IntPtr.Zero)\n            {\n                CloseHandle(tokenHandle);\n            }\n        }\n    }\n}