using System;\nusing System.Windows.Media.Imaging;\n\npublic class ImageRecord\n{\n    public ImageRecord(string file)\n    {\n        try\n        {\n            BitmapMetadata metadata = GetMetadata(file);\n            if (metadata != null)\n            {\n                var iptcData = metadata.GetQuery("/app13/irb/8bimiptc/iptc");\n                // Process IPTC data\n            }\n        }\n        catch (OverflowException ex)\n        {\n            // Log the error and continue\n            Console.WriteLine($"OverflowException: {ex.Message} for file {file}");\n        }\n        catch (COMException ex) when (ex.HResult == unchecked((int)0x88982F05))\n        {\n            // Log the specific COMException and continue\n            Console.WriteLine($"COMException (0x88982F05): {ex.Message} for file {file}");\n        }\n        catch (Exception ex)\n        {\n            // Log any other exceptions and continue\n            Console.WriteLine($"Exception: {ex.Message} for file {file}");\n        }\n    }\n\n    private BitmapMetadata GetMetadata(string file)\n    {\n        using (var stream = new System.IO.FileStream(file, System.IO.FileMode.Open, System.IO.FileAccess.Read))\n        {\n            BitmapDecoder decoder = BitmapDecoder.Create(stream, BitmapCreateOptions.None, BitmapCacheOption.OnLoad);\n            return (BitmapMetadata)decoder.Frames[0].Metadata;\n        }\n    }\n}