using System;\nusing System.Net;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\n\npublic class Program\n{\n    public static void Main()\n    {\n        // Create an endpoint address for the service\n        EndpointAddress endpointAddress = new EndpointAddress("http://service.endpoint.address");\n\n        // Create a custom binding\n        CustomBinding customBinding = new CustomBinding();\n        \n        // Add text message encoding\n        customBinding.Elements.Add(new TextMessageEncodingBindingElement(MessageVersion.Soap11, System.Text.Encoding.UTF8));\n\n        // Create and configure HTTP transport binding element\n        HttpTransportBindingElement httpTransport = new HttpTransportBindingElement();\n        httpTransport.UseDefaultWebProxy = false;\n        httpTransport.ProxyAddress = new Uri("http://proxyserver:1234");\n\n        // Optional: Set proxy credentials if needed\n        httpTransport.ProxyAuthenticationScheme = AuthenticationSchemes.Basic;\n        httpTransport.AuthenticationScheme = AuthenticationSchemes.Basic;\n        httpTransport.ProxyCredentialType = HttpProxyCredentialType.Basic;\n\n        customBinding.Elements.Add(httpTransport);\n\n        // Create the service client using the custom binding and endpoint address\n        MyWebServiceClient svcProxy = new MyWebServiceClient(customBinding, endpointAddress);\n\n        // Optional: Set the proxy credentials\n        WebRequest.DefaultWebProxy.Credentials = new NetworkCredential("username", "password");\n\n        // Call the service method\n        var request = new GetInformationRequest();\n        var response = svcProxy.GetInformation(request);\n\n        Console.WriteLine(response);\n    }\n}\n\n// Assuming MyWebServiceClient is the generated proxy class\npublic class MyWebServiceClient : ClientBase<IMyWebService>, IMyWebService\n{\n    public MyWebServiceClient(Binding binding, EndpointAddress remoteAddress)\n        : base(binding, remoteAddress)\n    {\n    }\n\n    public GetInformationResponse GetInformation(GetInformationRequest request)\n    {\n        return Channel.GetInformation(request);\n    }\n}\n\n// Assuming IMyWebService is the service contract interface\npublic interface IMyWebService\n{\n    GetInformationResponse GetInformation(GetInformationRequest request);\n}\n\n// Assuming GetInformationRequest and GetInformationResponse are the request and response types\npublic class GetInformationRequest\n{\n    // Request fields\n}\n\npublic class GetInformationResponse\n{\n    // Response fields\n}