using Google.Apis.Auth.OAuth2;\nusing Google.Apis.Services;\nusing Google.Apis.Util.Store;\nusing Google.Apis.People.v1;\nusing Google.Apis.People.v1.Data;\nusing System;\nusing System.IO;\nusing System.Threading;\n\nclass Program\n{\n    static string[] Scopes = { PeopleServiceService.Scope.ContactsReadonly };\n    static string ApplicationName = "Your App Name";\n\n    static void Main(string[] args)\n    {\n        UserCredential credential;\n\n        using (var stream =\n            new FileStream("credentials.json", FileMode.Open, FileAccess.Read))\n        {\n            string credPath = "token.json";\n            credential = GoogleWebAuthorizationBroker.AuthorizeAsync(\n                GoogleClientSecrets.Load(stream).Secrets,\n                Scopes,\n                "user",\n                CancellationToken.None,\n                new FileDataStore(credPath, true)).Result;\n            Console.WriteLine("Credential file saved to: " + credPath);\n        }\n\n        var service = new PeopleServiceService(new BaseClientService.Initializer()\n        {\n            HttpClientInitializer = credential,\n            ApplicationName = ApplicationName,\n        });\n\n        PeopleResource.ConnectionsResource.ListRequest request = service.People.Connections.List("people/me");\n        request.PersonFields = "names,emailAddresses";\n\n        ListConnectionsResponse response = request.Execute();\n        foreach (var person in response.Connections)\n        {\n            if (person.Names != null && person.Names.Count > 0)\n            {\n                Console.WriteLine("Name: " + person.Names[0].DisplayName);\n            }\n            else\n            {\n                Console.WriteLine("No names available for contact.");\n            }\n        }\n    }\n}