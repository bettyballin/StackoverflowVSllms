using NUnit.Framework;\n\npublic class MyObject\n{\n    public event EventHandler MyEvent;\n\n    public void DoSomething()\n    {\n        // Logic that raises MyEvent\n        MyEvent?.Invoke(this, EventArgs.Empty);\n    }\n}\n\npublic class MyMonitor\n{\n    private readonly MyObject _myObject;\n    public int EventCount { get; private set; }\n\n    public MyMonitor(MyObject myObject)\n    {\n        _myObject = myObject;\n        _myObject.MyEvent += (sender, args) => EventCount++;\n    }\n}\n\n[TestFixture]\npublic class MyObjectTests\n{\n    [Test]\n    public void TestEventIsRaisedCorrectNumberOfTimes()\n    {\n        // Arrange\n        var myObject = new MyObject();\n        var monitor = new MyMonitor(myObject);\n\n        // Act\n        myObject.DoSomething();\n        myObject.DoSomething();\n\n        // Assert\n        Assert.AreEqual(2, monitor.EventCount);\n    }\n}