using Microsoft.CodeAnalysis;\n   using Microsoft.CodeAnalysis.CSharp;\n   using Microsoft.CodeAnalysis.CSharp.Syntax;\n   using System;\n\n   class Program\n   {\n       static void Main()\n       {\n           var model = new { Name = "User", Properties = new[] { "Id", "Name", "Email" } };\n           \n           var classDeclaration = SyntaxFactory.ClassDeclaration(model.Name)\n               .AddModifiers(SyntaxFactory.Token(SyntaxKind.PublicKeyword));\n\n           foreach (var prop in model.Properties)\n           {\n               var property = SyntaxFactory.PropertyDeclaration(SyntaxFactory.ParseTypeName("string"), prop)\n                   .AddModifiers(SyntaxFactory.Token(SyntaxKind.PublicKeyword))\n                   .AddAccessorListAccessors(\n                       SyntaxFactory.AccessorDeclaration(SyntaxKind.GetAccessorDeclaration).WithSemicolonToken(SyntaxFactory.Token(SyntaxKind.SemicolonToken)),\n                       SyntaxFactory.AccessorDeclaration(SyntaxKind.SetAccessorDeclaration).WithSemicolonToken(SyntaxFactory.Token(SyntaxKind.SemicolonToken)));\n\n               classDeclaration = classDeclaration.AddMembers(property);\n           }\n\n           var code = classDeclaration.NormalizeWhitespace().ToFullString();\n           Console.WriteLine(code);\n       }\n   }