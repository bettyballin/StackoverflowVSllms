// Define a non-generic interface\npublic interface IKeyFrame\n{\n    float Time { get; set; }\n}\n\n// Define the generic KeyFrame class implementing the interface\npublic class KeyFrame<T> : IKeyFrame\n{\n    public float Time { get; set; }\n    public T Value { get; set; }\n}\n\n// Define the Timeline class with the constraint on IKeyFrame\npublic class Timeline<T> where T : IKeyFrame\n{\n    private List<T> keyframes = new List<T>();\n\n    public void AddKeyFrame(T keyframe)\n    {\n        keyframes.Add(keyframe);\n    }\n\n    // Other methods to manipulate the timeline\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        var keyframe = new KeyFrame<int> { Time = 0.0f, Value = 42 };\n        var timeline = new Timeline<KeyFrame<int>>();\n        timeline.AddKeyFrame(keyframe);\n    }\n}