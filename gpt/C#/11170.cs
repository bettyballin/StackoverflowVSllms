using System;\nusing System.Management;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            // Query the Win32_DiskDrive class to get USB storage devices\n            var searcher = new ManagementObjectSearcher(@"SELECT * FROM Win32_DiskDrive WHERE InterfaceType='USB'");\n\n            foreach (ManagementObject usbDrive in searcher.Get())\n            {\n                Console.WriteLine("Device ID: " + usbDrive["DeviceID"]);\n                Console.WriteLine("Model: " + usbDrive["Model"]);\n                Console.WriteLine("Interface Type: " + usbDrive["InterfaceType"]);\n\n                // Query to get the partitions associated with the USB drive\n                var partitionQuery = new ManagementObjectSearcher(\n                    $"ASSOCIATORS OF {{Win32_DiskDrive.DeviceID='{usbDrive["DeviceID"]}'}} WHERE AssocClass=Win32_DiskDriveToDiskPartition");\n\n                foreach (ManagementObject partition in partitionQuery.Get())\n                {\n                    Console.WriteLine("Partition: " + partition["DeviceID"]);\n\n                    // Query to get the logical disks associated with the partition\n                    var logicalDiskQuery = new ManagementObjectSearcher(\n                        $"ASSOCIATORS OF {{Win32_DiskPartition.DeviceID='{partition["DeviceID"]}'}} WHERE AssocClass=Win32_LogicalDiskToPartition");\n\n                    foreach (ManagementObject logicalDisk in logicalDiskQuery.Get())\n                    {\n                        Console.WriteLine("Drive Letter: " + logicalDisk["DeviceID"]);\n                    }\n                }\n                Console.WriteLine();\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine("An error occurred: " + e.Message);\n        }\n    }\n}