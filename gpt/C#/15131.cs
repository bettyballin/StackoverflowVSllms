using System;\n    using System.Security;\n    using Microsoft.Win32.SafeHandles;\n    using System.Runtime.InteropServices;\n    using System.Net;\n\n    class CredentialManager\n    {\n        [DllImport("Advapi32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n        public static extern bool CredRead(string target, int type, int reservedFlag, out IntPtr credentialPtr);\n\n        [DllImport("Advapi32.dll", SetLastError = true)]\n        public static extern bool CredFree(IntPtr cred);\n\n        public static NetworkCredential GetCredential(string target)\n        {\n            IntPtr credPtr;\n            if (CredRead(target, 1, 0, out credPtr))\n            {\n                var cred = (CREDENTIAL)Marshal.PtrToStructure(credPtr, typeof(CREDENTIAL));\n                return new NetworkCredential(cred.UserName, cred.CredentialBlob, cred.TargetName);\n            }\n            return null;\n        }\n\n        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\n        struct CREDENTIAL\n        {\n            public int Flags;\n            public int Type;\n            public string TargetName;\n            public string Comment;\n            public System.Runtime.InteropServices.ComTypes.FILETIME LastWritten;\n            public int CredentialBlobSize;\n            public IntPtr CredentialBlob;\n            public int Persist;\n            public int AttributeCount;\n            public IntPtr Attributes;\n            public string TargetAlias;\n            public string UserName;\n        }\n    }