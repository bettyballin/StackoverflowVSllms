using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\nclass TcpServer\n{\n    private TcpListener _listener;\n\n    public TcpServer(IPAddress ipAddress, int port)\n    {\n        _listener = new TcpListener(ipAddress, port);\n        _listener.Start();\n        Console.WriteLine("Server started");\n        ListenForClients();\n    }\n\n    private void ListenForClients()\n    {\n        while (true)\n        {\n            TcpClient client = _listener.AcceptTcpClient();\n            Console.WriteLine("Client connected");\n            Thread clientThread = new Thread(HandleClientComm);\n            clientThread.Start(client);\n        }\n    }\n\n    private void HandleClientComm(object clientObj)\n    {\n        TcpClient tcpClient = (TcpClient)clientObj;\n        NetworkStream clientStream = tcpClient.GetStream();\n\n        byte[] message = new byte[4096];\n        int bytesRead;\n\n        while (true)\n        {\n            bytesRead = 0;\n\n            try\n            {\n                bytesRead = clientStream.Read(message, 0, 4096);\n            }\n            catch (Exception e)\n            {\n                // A socket error has occurred\n                Console.WriteLine("A socket error has occurred: " + e.Message);\n                break;\n            }\n\n            if (bytesRead == 0)\n            {\n                // The client has disconnected from the server\n                Console.WriteLine("Client disconnected");\n                break;\n            }\n\n            // Message has successfully been received\n            string receivedMessage = Encoding.ASCII.GetString(message, 0, bytesRead);\n            Console.WriteLine("Received: " + receivedMessage);\n        }\n\n        tcpClient.Close();\n    }\n\n    public static void Main()\n    {\n        new TcpServer(IPAddress.Any, 8888);\n    }\n}