public class Ad\n{\n    public string AdId { get; set; }\n    public double MaxBudget { get; set; }\n    public double DailyBudget { get; set; }\n    public double RemainingDailyBudget { get; set; }\n    public double RemainingMaxBudget { get; set; }\n    public int PriorityScore { get; set; }\n}\n\npublic class AdSystem\n{\n    private List<Ad> ads;\n\n    public AdSystem(List<Ad> ads)\n    {\n        this.ads = ads;\n    }\n\n    public List<Ad> GetAdsToShow()\n    {\n        // Calculate priority scores\n        foreach (var ad in ads)\n        {\n            ad.PriorityScore = CalculatePriorityScore(ad);\n        }\n\n        // Sort ads by priority score\n        ads = ads.OrderByDescending(a => a.PriorityScore).ToList();\n\n        // Select ads to display\n        List<Ad> selectedAds = new List<Ad>();\n        foreach (var ad in ads)\n        {\n            if (ad.RemainingDailyBudget > 0 && ad.RemainingMaxBudget > 0)\n            {\n                selectedAds.Add(ad);\n                // Deduct the cost of displaying the ad from the budgets\n                ad.RemainingDailyBudget -= CostPerAdDisplay;\n                ad.RemainingMaxBudget -= CostPerAdDisplay;\n            }\n        }\n\n        return selectedAds;\n    }\n\n    private int CalculatePriorityScore(Ad ad)\n    {\n        // Example priority calculation\n        // You can adjust this formula based on your specific needs\n        return (int)(ad.RemainingDailyBudget + ad.RemainingMaxBudget);\n    }\n\n    private const double CostPerAdDisplay = 1.0; // Example cost per ad display\n}