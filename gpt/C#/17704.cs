using System.Collections.Generic;\nusing System.ServiceModel;\nusing NHibernate;\nusing NHibernate.Criterion;\n\n[ServiceContract]\npublic interface IProductService\n{\n    [OperationContract]\n    List<Product> Get();\n\n    [OperationContract]\n    List<Product> GetByCriteria(DetachedCriteria criteria);\n}\n\npublic class ProductService : IProductService\n{\n    private readonly ISessionFactory _sessionFactory;\n\n    public ProductService(ISessionFactory sessionFactory)\n    {\n        _sessionFactory = sessionFactory;\n    }\n\n    public List<Product> Get()\n    {\n        using (var session = _sessionFactory.OpenSession())\n        {\n            return session.CreateCriteria<Product>().List<Product>();\n        }\n    }\n\n    public List<Product> GetByCriteria(DetachedCriteria criteria)\n    {\n        if (criteria == null)\n        {\n            throw new ArgumentNullException(nameof(criteria));\n        }\n\n        using (var session = _sessionFactory.OpenSession())\n        {\n            var executableCriteria = criteria.GetExecutableCriteria(session);\n            return executableCriteria.List<Product>();\n        }\n    }\n}