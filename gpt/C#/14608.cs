using System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Documents;\nusing System.Windows.Media;\nusing System.Collections.Generic;\n\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n    }\n\n    // Method to find and highlight text in all controls\n    private void SearchAndHighlight(string searchTerm)\n    {\n        List<Control> controls = new List<Control>();\n        GetAllControls(this, controls);\n\n        foreach (var control in controls)\n        {\n            if (control is TextBlock textBlock)\n            {\n                HighlightTextBlock(textBlock, searchTerm);\n            }\n            else if (control is ListBox listBox)\n            {\n                HighlightListBox(listBox, searchTerm);\n            }\n            // Add more control types as needed\n        }\n    }\n\n    // Recursive method to get all controls\n    private void GetAllControls(DependencyObject parent, List<Control> controls)\n    {\n        int count = VisualTreeHelper.GetChildrenCount(parent);\n\n        for (int i = 0; i < count; i++)\n        {\n            var child = VisualTreeHelper.GetChild(parent, i);\n            if (child is Control control)\n            {\n                controls.Add(control);\n            }\n\n            GetAllControls(child, controls);\n        }\n    }\n\n    // Method to highlight text in TextBlock\n    private void HighlightTextBlock(TextBlock textBlock, string searchTerm)\n    {\n        if (string.IsNullOrEmpty(searchTerm))\n        {\n            textBlock.Text = textBlock.Text; // Clear previous highlights\n            return;\n        }\n\n        string text = textBlock.Text;\n        textBlock.Inlines.Clear();\n\n        int index = text.IndexOf(searchTerm, 0, StringComparison.CurrentCultureIgnoreCase);\n        if (index >= 0)\n        {\n            textBlock.Inlines.Add(new Run(text.Substring(0, index)));\n            textBlock.Inlines.Add(new Run(text.Substring(index, searchTerm.Length)) { Background = Brushes.Yellow });\n            textBlock.Inlines.Add(new Run(text.Substring(index + searchTerm.Length)));\n        }\n        else\n        {\n            textBlock.Text = text;\n        }\n    }\n\n    // Method to highlight text in ListBox\n    private void HighlightListBox(ListBox listBox, string searchTerm)\n    {\n        foreach (var item in listBox.Items)\n        {\n            if (item is ListBoxItem listBoxItem)\n            {\n                if (listBoxItem.Content is TextBlock textBlock)\n                {\n                    HighlightTextBlock(textBlock, searchTerm);\n                }\n            }\n        }\n    }\n\n    private void SearchBox_TextChanged(object sender, TextChangedEventArgs e)\n    {\n        SearchAndHighlight((sender as TextBox).Text);\n    }\n}