using System;\nusing System.Diagnostics;\nusing System.IO.Pipes;\nusing System.Threading;\nusing System.Windows.Forms;\n\npublic class MainForm : Form\n{\n    public void StartMethod()\n    {\n        // Your start method logic\n    }\n    \n    public void StopMethod()\n    {\n        // Your stop method logic\n    }\n    \n    [STAThread]\n    static void Main(string[] args)\n    {\n        bool createdNew = true;\n        using (Mutex mutex = new Mutex(true, "MobilePOSServer", out createdNew))\n        {\n            if (createdNew)\n            {\n                Application.EnableVisualStyles();\n                Application.SetCompatibleTextRenderingDefault(false);\n                MainForm mainForm = new MainForm();\n                Thread ipcThread = new Thread(() => IPCServer(mainForm));\n                ipcThread.Start();\n                Application.Run(mainForm);\n            }\n            else\n            {\n                // Send arguments to the running instance\n                using (NamedPipeClientStream client = new NamedPipeClientStream(".", "MobilePOSPipe", PipeDirection.Out))\n                {\n                    client.Connect();\n                    using (StreamWriter writer = new StreamWriter(client))\n                    {\n                        writer.WriteLine(string.Join(" ", args));\n                    }\n                }\n            }\n        }\n    }\n\n    private static void IPCServer(MainForm mainForm)\n    {\n        using (NamedPipeServerStream server = new NamedPipeServerStream("MobilePOSPipe", PipeDirection.In))\n        {\n            server.WaitForConnection();\n            using (StreamReader reader = new StreamReader(server))\n            {\n                string command = reader.ReadLine();\n                if (command == "start")\n                {\n                    mainForm.Invoke((Action)mainForm.StartMethod);\n                }\n                else if (command == "stop")\n                {\n                    mainForm.Invoke((Action)mainForm.StopMethod);\n                }\n            }\n        }\n    }\n}