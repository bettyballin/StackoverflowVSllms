public class Foo\n{\n    public int FooId { get; set; }\n    public string FooCode { get; set; }\n    public ICollection<Foobar> Foobars { get; set; }\n}\n\npublic class Foobar\n{\n    public int BarId { get; set; }\n    public string BarFooCode { get; set; }\n    public Foo Foo { get; set; }\n}\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<Foo> Foos { get; set; }\n    public DbSet<Foobar> Foobars { get; set; }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        // Configure the primary key for Foo\n        modelBuilder.Entity<Foo>()\n            .HasKey(f => f.FooId);\n\n        // Configure the primary key for Foobar\n        modelBuilder.Entity<Foobar>()\n            .HasKey(fb => fb.BarId);\n\n        // Configure the relationship using Fluent API\n        modelBuilder.Entity<Foobar>()\n            .HasOne(fb => fb.Foo)\n            .WithMany(f => f.Foobars)\n            .HasForeignKey(fb => fb.BarFooCode)\n            .HasPrincipalKey(f => f.FooCode);\n\n        base.OnModelCreating(modelBuilder);\n    }\n}