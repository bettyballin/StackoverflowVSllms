using System;\n   using System.Web;\n\n   public class CustomFileHandler : IHttpHandler\n   {\n       public void ProcessRequest(HttpContext context)\n       {\n           string requestedFile = context.Request.Url.AbsolutePath.TrimStart('/');\n           string localFilePath = MapToLocalFilePath(requestedFile);\n\n           if (System.IO.File.Exists(localFilePath))\n           {\n               context.Response.ContentType = GetContentType(localFilePath);\n               context.Response.WriteFile(localFilePath);\n               context.Response.End();\n           }\n           else\n           {\n               context.Response.StatusCode = 404;\n               context.Response.StatusDescription = "File not found";\n           }\n       }\n\n       private string MapToLocalFilePath(string requestedFile)\n       {\n           // Here you can implement your custom logic to map the URL to a local file path\n           // For example, if all requests for images should map to C:\Images directory\n           return @"C:\Images\" + requestedFile;\n       }\n\n       private string GetContentType(string filePath)\n       {\n           string extension = System.IO.Path.GetExtension(filePath).ToLower();\n           switch (extension)\n           {\n               case ".jpg":\n               case ".jpeg":\n                   return "image/jpeg";\n               case ".png":\n                   return "image/png";\n               case ".gif":\n                   return "image/gif";\n               default:\n                   return "application/octet-stream";\n           }\n       }\n\n       public bool IsReusable\n       {\n           get { return false; }\n       }\n   }