using System;\nusing System.Web;\nusing System.Web.UI.WebControls;\n\npublic partial class LoginPage : System.Web.UI.Page\n{\n    private const int MaxFailedAttempts = 5;\n    private const int BlockDurationMinutes = 60;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        LoginControl.LoginError += new EventHandler(LoginControl_LoginError);\n    }\n\n    private void LoginControl_LoginError(object sender, EventArgs e)\n    {\n        string userName = ((Login)sender).UserName;\n        string userIP = HttpContext.Current.Request.UserHostAddress;\n        string key = $"FailedLogin_{userName}_{userIP}";\n\n        int failedAttempts = 0;\n\n        if (HttpContext.Current.Cache[key] != null)\n        {\n            failedAttempts = (int)HttpContext.Current.Cache[key];\n        }\n\n        failedAttempts++;\n\n        if (failedAttempts >= MaxFailedAttempts)\n        {\n            HttpContext.Current.Cache.Insert(key, failedAttempts, null, DateTime.Now.AddMinutes(BlockDurationMinutes), System.Web.Caching.Cache.NoSlidingExpiration);\n            // Block the user/IP\n            ((Login)sender).FailureText = "Too many failed login attempts. Please try again in 1 hour.";\n        }\n        else\n        {\n            HttpContext.Current.Cache.Insert(key, failedAttempts, null, DateTime.Now.AddMinutes(BlockDurationMinutes), System.Web.Caching.Cache.NoSlidingExpiration);\n            ((Login)sender).FailureText = $"Invalid login. You have {MaxFailedAttempts - failedAttempts} attempts left.";\n        }\n    }\n}