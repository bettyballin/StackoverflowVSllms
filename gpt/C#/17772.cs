using System;\nusing System.Diagnostics;\nusing System.Transactions;\nusing System.Data.SqlClient;\n\npublic void CreateUser()\n{\n    using (TransactionScope scope = new TransactionScope())\n    {\n        try\n        {\n            // Insert user into your application database\n            using (SqlConnection connection = new SqlConnection("YourConnectionString"))\n            {\n                connection.Open();\n                SqlCommand command = new SqlCommand("INSERT INTO Users ...", connection);\n                command.ExecuteNonQuery();\n            }\n\n            // Call third-party command-line utility to create user in their system\n            Process process = new Process();\n            process.StartInfo.FileName = "ThirdPartyUtility.exe";\n            process.StartInfo.Arguments = "CreateUser ...";\n            process.Start();\n            process.WaitForExit();\n\n            if (process.ExitCode != 0)\n            {\n                throw new Exception("Third-party process failed.");\n            }\n\n            // If everything succeeds, complete the transaction\n            scope.Complete();\n        }\n        catch (Exception ex)\n        {\n            // Handle the exception and perform manual rollback if necessary\n            Console.WriteLine("Error: " + ex.Message);\n            ManualRollback();\n        }\n    }\n}\n\nprivate void ManualRollback()\n{\n    // Implement your rollback logic here\n    // For example, delete the user from your application database\n    using (SqlConnection connection = new SqlConnection("YourConnectionString"))\n    {\n        connection.Open();\n        SqlCommand command = new SqlCommand("DELETE FROM Users WHERE ...", connection);\n        command.ExecuteNonQuery();\n    }\n}