using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\npublic class RSAFileEncryption\n{\n    public static void EncryptFile(string inputFile, string outputFile, string publicKey)\n    {\n        // Generate a new AES key.\n        using (Aes aes = Aes.Create())\n        {\n            byte[] encryptedKey;\n            byte[] iv = aes.IV;\n\n            // Encrypt the AES key with RSA.\n            using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n            {\n                byte[] keyValue = Convert.FromBase64String(publicKey);\n                rsa.ImportCspBlob(keyValue);\n                encryptedKey = rsa.Encrypt(aes.Key, RSAEncryptionPadding.OaepSHA1);\n            }\n\n            // Encrypt the file using AES.\n            using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n            {\n                // Write the encrypted AES key and IV to the file.\n                fsOutput.Write(BitConverter.GetBytes(encryptedKey.Length), 0, sizeof(int));\n                fsOutput.Write(encryptedKey, 0, encryptedKey.Length);\n                fsOutput.Write(iv, 0, iv.Length);\n\n                using (CryptoStream cs = new CryptoStream(fsOutput, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n                    {\n                        byte[] buffer = new byte[1048576]; // 1 MB buffer\n                        int bytesRead;\n                        while ((bytesRead = fsInput.Read(buffer, 0, buffer.Length)) > 0)\n                        {\n                            cs.Write(buffer, 0, bytesRead);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}