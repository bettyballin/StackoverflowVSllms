public class CreatingClass\n{\n    public T CreateObject<T>(Dictionary<string, object> parameters) where T : IMyInterface, new()\n    {\n        // Object creation logic\n        T obj = new T();\n        // Initialize obj with parameters\n        return obj;\n    }\n\n    // This method should be in the ClientClass to properly nullify the reference\n    public void DestroyObject(ref IMyInterface objectToDestroy)\n    {\n        objectToDestroy = null;\n    }\n}\n\npublic class ClientClass\n{\n    private MyObject obj;\n    private CreatingClass creatingClass = new CreatingClass();\n\n    private void AFunctionToCreateMyClass()\n    {\n        Dictionary<string, object> parameters = new Dictionary<string, object>();\n        // Add parameters as needed\n        obj = creatingClass.CreateObject<MyObject>(parameters);\n    }\n\n    private void AFunctionToDeleteMyObject()\n    {\n        creatingClass.DestroyObject(ref obj);\n        Assert.IsNull(obj); // This should now succeed\n    }\n}