using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class RSASignAndVerifyExample\n{\n    public static void Main()\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            // Generate RSA keys\n            RSAParameters privateKey = rsa.ExportParameters(true);\n            RSAParameters publicKey = rsa.ExportParameters(false);\n\n            string message = "Hello, World!";\n            byte[] messageBytes = Encoding.UTF8.GetBytes(message);\n\n            // Sign the message (encrypt with private key)\n            byte[] signedBytes = SignData(messageBytes, privateKey);\n\n            // Verify the signature (decrypt with public key)\n            bool isVerified = VerifyData(messageBytes, signedBytes, publicKey);\n\n            Console.WriteLine("Message: " + message);\n            Console.WriteLine("Signature verified: " + isVerified);\n        }\n    }\n\n    public static byte[] SignData(byte[] data, RSAParameters privateKey)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            rsa.ImportParameters(privateKey);\n            return rsa.SignData(data, CryptoConfig.MapNameToOID("SHA256"));\n        }\n    }\n\n    public static bool VerifyData(byte[] data, byte[] signedData, RSAParameters publicKey)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            rsa.ImportParameters(publicKey);\n            return rsa.VerifyData(data, CryptoConfig.MapNameToOID("SHA256"), signedData);\n        }\n    }\n}