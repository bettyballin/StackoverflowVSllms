using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EncryptionHelper\n{\n    private static readonly string EncryptionKey = "your-encryption-key"; // Use a secure key\n\n    public static string EncryptString(string plainText)\n    {\n        byte[] keyBytes = Encoding.UTF8.GetBytes(EncryptionKey);\n        byte[] plainBytes = Encoding.UTF8.GetBytes(plainText);\n\n        using (var aes = Aes.Create())\n        {\n            using (var encryptor = aes.CreateEncryptor(keyBytes, aes.IV))\n            {\n                using (var ms = new System.IO.MemoryStream())\n                {\n                    ms.Write(aes.IV, 0, aes.IV.Length);\n                    using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                    {\n                        cs.Write(plainBytes, 0, plainBytes.Length);\n                        cs.FlushFinalBlock();\n                    }\n                    return Convert.ToBase64String(ms.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string DecryptString(string cipherText)\n    {\n        byte[] fullCipher = Convert.FromBase64String(cipherText);\n        byte[] iv = new byte[16];\n        byte[] cipher = new byte[fullCipher.Length - iv.Length];\n\n        Array.Copy(fullCipher, iv, iv.Length);\n        Array.Copy(fullCipher, iv.Length, cipher, 0, cipher.Length);\n\n        byte[] keyBytes = Encoding.UTF8.GetBytes(EncryptionKey);\n\n        using (var aes = Aes.Create())\n        {\n            using (var decryptor = aes.CreateDecryptor(keyBytes, iv))\n            {\n                using (var ms = new System.IO.MemoryStream())\n                {\n                    using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Write))\n                    {\n                        cs.Write(cipher, 0, cipher.Length);\n                        cs.FlushFinalBlock();\n                    }\n                    return Encoding.UTF8.GetString(ms.ToArray());\n                }\n            }\n        }\n    }\n}