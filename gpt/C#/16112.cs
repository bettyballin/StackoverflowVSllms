using System;\nusing System.IO;\nusing System.Reflection;\n\npublic class ModuleLoader\n{\n    public List<IModule> LoadModules(string path)\n    {\n        List<IModule> modules = new List<IModule>();\n\n        foreach (string file in Directory.GetFiles(path, "*.dll"))\n        {\n            Assembly assembly = Assembly.LoadFrom(file);\n            foreach (Type type in assembly.GetTypes())\n            {\n                if (typeof(IModule).IsAssignableFrom(type) && !type.IsInterface)\n                {\n                    IModule module = (IModule)Activator.CreateInstance(type);\n                    module.Initialize();\n                    modules.Add(module);\n                }\n            }\n        }\n\n        return modules;\n    }\n}