using System;\nusing System.Net.Sockets;\nusing System.Net.Security;\nusing System.Security.Cryptography.X509Certificates;\nusing System.IO;\n\npublic class ServerEntry\n{\n    public string Name { get; set; }\n    public int Port { get; set; }\n    public string Subject { get; set; }\n    public string ValidFrom { get; set; }\n    public string ValidTo { get; set; }\n}\n\npublic class CertificateFetcher\n{\n    public static SslStream OpenSSLStream(ServerEntry server)\n    {\n        SslStream sslStream = null;\n        TcpClient tcpClient = new TcpClient();\n\n        try\n        {\n            tcpClient.Connect(server.Name, server.Port);\n            sslStream = new SslStream(tcpClient.GetStream(), false, \n                new RemoteCertificateValidationCallback(ValidateServerCertificate), null);\n            sslStream.AuthenticateAsClient(server.Name);\n            return sslStream;\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            return null;\n        }\n        finally\n        {\n            if (tcpClient.Connected)\n            {\n                tcpClient.Close();\n            }\n        }\n    }\n\n    public static void GetCertificates(ServerEntry server)\n    {\n        SslStream sslStream = OpenSSLStream(server);\n        if (sslStream != null)\n        {\n            try\n            {\n                X509Certificate2 remoteCertificate = new X509Certificate2(sslStream.RemoteCertificate);\n                var chain = new X509Chain();\n                chain.Build(remoteCertificate);\n\n                for (int i = 0; i < chain.ChainElements.Count; i++)\n                {\n                    X509Certificate2 elementCertificate = chain.ChainElements[i].Certificate;\n                    string certPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, $"cert{i}.cer");\n                    File.WriteAllBytes(certPath, elementCertificate.Export(X509ContentType.Cert));\n                    Console.WriteLine($"Saved certificate {i}: {elementCertificate.Subject}");\n                }\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n        }\n    }\n\n    private static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\n    {\n        // You can add custom validation logic here if needed\n        return sslPolicyErrors == SslPolicyErrors.None;\n    }\n\n    public static void Main(string[] args)\n    {\n        ServerEntry server = new ServerEntry\n        {\n            Name = "example.com",\n            Port = 443\n        };\n        \n        GetCertificates(server);\n    }\n}