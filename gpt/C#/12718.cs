using System;\nusing System.Collections.Generic;\nusing Microsoft.VisualBasic;\nusing System.CodeDom.Compiler;\n\npublic class VbCompiler\n{\n    public void CompileVbCode()\n    {\n        var providerOptions = new Dictionary<string, string>();\n        providerOptions.Add("CompilerVersion", "v3.5");\n\n        var provider = new VBCodeProvider(providerOptions);\n        var parameters = new CompilerParameters\n        {\n            GenerateInMemory = true,\n            TreatWarningsAsErrors = true\n        };\n\n        string sourceCode = @"\nOption Infer On\nModule Module1\n    Sub Main()\n        Dim x = ""Hello, World!""\n        Console.WriteLine(x)\n    End Sub\nEnd Module\n";\n\n        CompilerResults results = provider.CompileAssemblyFromSource(parameters, sourceCode);\n\n        if (results.Errors.HasErrors)\n        {\n            foreach (CompilerError error in results.Errors)\n            {\n                Console.WriteLine($"Error ({error.ErrorNumber}): {error.ErrorText}");\n            }\n        }\n        else\n        {\n            Console.WriteLine("Compilation successful.");\n            var assembly = results.CompiledAssembly;\n            var method = assembly.EntryPoint;\n            method.Invoke(null, null);\n        }\n    }\n}