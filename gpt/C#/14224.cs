using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class CertificateIntegrityChecker\n{\n    public bool VerifyCertificate(X509Certificate2 certificate)\n    {\n        try\n        {\n            // Get the public key from the certificate\n            RSACryptoServiceProvider csp = (RSACryptoServiceProvider)certificate.PublicKey.Key;\n\n            // Extract the signature from the certificate\n            byte[] signature = certificate.Signature;\n\n            // Get the hash algorithm used for signing\n            string hashAlgorithm = certificate.SignatureAlgorithm.FriendlyName.ToUpper().Replace("SHA", "SHA-");\n\n            // Compute the hash of the certificate's raw data\n            byte[] hash;\n            using (HashAlgorithm hashAlgo = HashAlgorithm.Create(hashAlgorithm))\n            {\n                hash = hashAlgo.ComputeHash(certificate.RawData);\n            }\n\n            // Verify the signature using the public key and the computed hash\n            bool verif = csp.VerifyHash(hash, CryptoConfig.MapNameToOID(hashAlgorithm), signature);\n            return verif;\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("An error occurred: " + ex.Message);\n            return false;\n        }\n    }\n}