using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass MyClass\n{\n    public MyClass(int value)\n    {\n        this.Value = value;\n    }\n    public int Value { get; set; }\n}\n\nclass Program\n{\n    static List<int> sortedValuesList = new List<int> { 3, 1, 4, 2 };\n    static List<MyClass> objectList = new List<MyClass>\n    {\n        new MyClass(4),\n        new MyClass(1),\n        new MyClass(3),\n        new MyClass(2),\n        new MyClass(3),\n        new MyClass(1)\n    };\n\n    static void Main()\n    {\n        // Create a dictionary to map values to their index in sortedValuesList\n        var valueIndexMap = sortedValuesList\n            .Select((value, index) => new { value, index })\n            .ToDictionary(x => x.value, x => x.index);\n\n        // Sort objectList based on the indices in sortedValuesList\n        objectList.Sort((a, b) => valueIndexMap[a.Value].CompareTo(valueIndexMap[b.Value]));\n\n        // Print the sorted objectList\n        foreach (var obj in objectList)\n        {\n            Console.WriteLine(obj.Value);\n        }\n    }\n}