private uint DownloadImage(IntPtr directoryItem)\n{\n    uint err = EDSDK.EDS_ERR_OK;\n    IntPtr stream = IntPtr.Zero;\n    IntPtr streamPointer = IntPtr.Zero;\n\n    // Get information of the directory item.\n    EDSDK.EdsDirectoryItemInfo dirItemInfo;\n    err = EDSDK.EdsGetDirectoryItemInfo(directoryItem, out dirItemInfo);\n\n    // Create a file stream for receiving image.\n    if (err == EDSDK.EDS_ERR_OK)\n    {\n        err = EDSDK.EdsCreateMemoryStream(dirItemInfo.Size, out stream);\n    }\n\n    // Fill the stream with the resulting image\n    if (err == EDSDK.EDS_ERR_OK)\n    {\n        err = EDSDK.EdsDownload(directoryItem, dirItemInfo.Size, stream);\n    }\n\n    // Copy the stream to a byte[]\n    if (err == EDSDK.EDS_ERR_OK)\n    {\n        // Get the pointer to the memory stream\n        err = EDSDK.EdsGetPointer(stream, out streamPointer);\n\n        if (err == EDSDK.EDS_ERR_OK)\n        {\n            byte[] buffer = new byte[dirItemInfo.Size];\n\n            // Copy the data from unmanaged memory to the managed byte array\n            Marshal.Copy(streamPointer, buffer, 0, (int)dirItemInfo.Size);\n\n            // ... Image manipulation, show user, whatever\n        }\n    }\n\n    // Release the stream\n    if (stream != IntPtr.Zero)\n    {\n        EDSDK.EdsRelease(stream);\n    }\n\n    return err;\n}