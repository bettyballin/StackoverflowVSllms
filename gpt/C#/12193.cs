using System;\nusing System.Reflection;\nusing System.Reflection.Emit;\n\npublic class DynamicMethodExample\n{\n    public static void Main()\n    {\n        // Create a dynamic method\n        DynamicMethod dynamicMethod = new DynamicMethod(\n            "DynamicAdd",\n            typeof(int),\n            new Type[] { typeof(int), typeof(int) },\n            typeof(DynamicMethodExample).Module);\n\n        // Get an ILGenerator and emit a body for the dynamic method\n        ILGenerator il = dynamicMethod.GetILGenerator();\n        il.Emit(OpCodes.Ldarg_0);\n        il.Emit(OpCodes.Ldarg_1);\n        il.Emit(OpCodes.Add);\n        il.Emit(OpCodes.Ret);\n\n        // Create a delegate for the dynamic method\n        Func<int, int, int> add = (Func<int, int, int>)dynamicMethod.CreateDelegate(typeof(Func<int, int, int>));\n\n        // Invoke the dynamic method\n        int result = add(10, 20);\n        Console.WriteLine($"Result of dynamic add: {result}");  // Output: Result of dynamic add: 30\n    }\n}