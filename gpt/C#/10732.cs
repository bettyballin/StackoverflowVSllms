<#@ template language="C#" debug="false" hostspecific="true" #>\n<#@ output extension=".txt" #>\n<#@ assembly name="Your.DslAssembly" #>\n<#@ import namespace="Your.DslNamespace" #>\n<#@ import namespace="Microsoft.VisualStudio.Modeling" #>\n<#@ import namespace="System.Linq" #>\n\n<#\n    // Assuming you have a method to get the Store from your DirectiveProcessor\n    Store store = GetStoreFromDirectiveProcessor();\n    if (store != null)\n    {\n        // Retrieve the diagram from the store\n        var diagram = store.ElementDirectory\n                           .AllElements\n                           .OfType<YourDiagramType>()\n                           .FirstOrDefault();\n\n        if (diagram != null)\n        {\n            // Access and work with the diagram\n            WriteLine("Diagram found: " + diagram.Name);\n            // Perform any other operations as needed\n        }\n        else\n        {\n            WriteLine("No diagram found.");\n        }\n    }\n    else\n    {\n        WriteLine("Store is null.");\n    }\n#>\n\n<#+\n    // Your method to get the Store instance from the DirectiveProcessor\n    private Store GetStoreFromDirectiveProcessor()\n    {\n        // Implement the logic to retrieve the Store\n        // This is highly dependent on how your DirectiveProcessor is set up\n        return (Store)Host.ResolveParameterValue("YourDirectiveProcessor", "SomeParameter", "Store");\n    }\n#>