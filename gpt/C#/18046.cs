using NHibernate;\nusing NHibernate.SqlTypes;\nusing NHibernate.UserTypes;\nusing System;\nusing System.Data;\nusing System.Globalization;\n\npublic class DateTimeRangeType : IUserType\n{\n    public bool Equals(object x, object y)\n    {\n        return x?.Equals(y) ?? y == null;\n    }\n\n    public int GetHashCode(object x)\n    {\n        return x?.GetHashCode() ?? 0;\n    }\n\n    public object NullSafeGet(IDataReader rs, string[] names, object owner)\n    {\n        var dateRangeString = NHibernateUtil.String.NullSafeGet(rs, names[0]) as string;\n        if (string.IsNullOrEmpty(dateRangeString))\n        {\n            return null;\n        }\n\n        var dates = dateRangeString.Split('-');\n        if (dates.Length == 2 && DateTime.TryParseExact(dates[0], "yyyy/MM/dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out var fromDate) &&\n            DateTime.TryParseExact(dates[1], "yyyy/MM/dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out var toDate))\n        {\n            return new DateTimeRange(fromDate, toDate);\n        }\n\n        return null;\n    }\n\n    public void NullSafeSet(IDbCommand cmd, object value, int index)\n    {\n        if (value == null)\n        {\n            ((IDataParameter)cmd.Parameters[index]).Value = DBNull.Value;\n        }\n        else\n        {\n            var dateTimeRange = (DateTimeRange)value;\n            var dateRangeString = $"{dateTimeRange.FromTime:yyyy/MM/dd}-{dateTimeRange.ToTime:yyyy/MM/dd}";\n            ((IDataParameter)cmd.Parameters[index]).Value = dateRangeString;\n        }\n    }\n\n    public object DeepCopy(object value)\n    {\n        if (value == null) return null;\n\n        var original = (DateTimeRange)value;\n        return new DateTimeRange(original.FromTime, original.ToTime);\n    }\n\n    public object Replace(object original, object target, object owner)\n    {\n        return DeepCopy(original);\n    }\n\n    public object Assemble(object cached, object owner)\n    {\n        return DeepCopy(cached);\n    }\n\n    public object Disassemble(object value)\n    {\n        return DeepCopy(value);\n    }\n\n    public SqlType[] SqlTypes => new[] { NHibernateUtil.String.SqlType };\n\n    public Type ReturnedType => typeof(DateTimeRange);\n\n    public bool IsMutable => true;\n}