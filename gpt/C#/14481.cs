using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nstruct Interval\n{\n    public DateTime Date;\n    public long Duration; // duration in seconds\n    public int State;\n}\n\nstruct StateSummary\n{\n    public int State;\n    public long TotalSeconds;\n}\n\npublic class RandomIntervalGenerator\n{\n    private static Random random = new Random();\n\n    public static Interval[] GetRandomIntervals(DateTime start, DateTime end, StateSummary[] sums, int totalEvents)\n    {\n        List<Interval> intervals = new List<Interval>();\n        long totalDurationInSeconds = (long)(end - start).TotalSeconds;\n        List<long> eventDurations = new List<long>();\n\n        foreach (var sum in sums)\n        {\n            for (int i = 0; i < totalEvents; i++)\n            {\n                eventDurations.Add(sum.TotalSeconds / totalEvents);\n            }\n        }\n\n        eventDurations = eventDurations.OrderBy(x => random.Next()).ToList();\n\n        DateTime currentStart = start;\n\n        for (int i = 0; i < eventDurations.Count; i++)\n        {\n            Interval interval = new Interval();\n            interval.Date = currentStart;\n            interval.Duration = eventDurations[i];\n            interval.State = sums[i % sums.Length].State;\n\n            currentStart = currentStart.AddSeconds(eventDurations[i]);\n            intervals.Add(interval);\n        }\n\n        return intervals.ToArray();\n    }\n}