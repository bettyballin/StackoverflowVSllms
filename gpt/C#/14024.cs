using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Xml;\nusing System.Xml.XPath;\n\npublic class XPathNavigableArrayIterator : XPathNodeIterator\n{\n    private IXPathNavigable[] _array;\n    private int _position = -1;\n\n    public XPathNavigableArrayIterator(IXPathNavigable[] array)\n    {\n        _array = array ?? throw new ArgumentNullException(nameof(array));\n    }\n\n    private XPathNavigableArrayIterator(IXPathNavigable[] array, int position)\n    {\n        _array = array;\n        _position = position;\n    }\n\n    public override XPathNodeIterator Clone()\n    {\n        return new XPathNavigableArrayIterator(_array, _position);\n    }\n\n    public override XPathNavigator Current\n    {\n        get\n        {\n            if (_position < 0 || _position >= _array.Length)\n                return null;\n            return _array[_position].CreateNavigator();\n        }\n    }\n\n    public override int CurrentPosition => _position + 1;\n\n    public override bool MoveNext()\n    {\n        if (_position < _array.Length - 1)\n        {\n            _position++;\n            return true;\n        }\n        return false;\n    }\n\n    public override int Count => _array.Length;\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        IXPathNavigable[] navigableArray = new IXPathNavigable[]\n        {\n            new XmlDocument(), // Example objects\n            new XmlDocument()  // Example objects\n        };\n\n        XPathNodeIterator iterator = new XPathNavigableArrayIterator(navigableArray);\n\n        while (iterator.MoveNext())\n        {\n            XPathNavigator navigator = iterator.Current;\n            Console.WriteLine(navigator.OuterXml);\n        }\n    }\n}