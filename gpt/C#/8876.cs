using System;\nusing System.Runtime.InteropServices;\n\npublic class ConsoleHelper\n{\n    [DllImport("kernel32.dll", SetLastError = true)]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    private static extern bool AllocConsole();\n\n    public static void InitializeConsole()\n    {\n        if (!AllocConsole())\n        {\n            // Handle the error if the console could not be allocated.\n            Console.WriteLine("Unable to allocate console.");\n        }\n    }\n\n    public static void ClearConsole()\n    {\n        try\n        {\n            Console.Clear();\n        }\n        catch (IOException ex)\n        {\n            Console.WriteLine($"IOException: {ex.Message}");\n        }\n    }\n}\n\n// Usage in your WPF application\nclass Program\n{\n    [STAThread]\n    static void Main()\n    {\n        // Initialize the console\n        ConsoleHelper.InitializeConsole();\n\n        // Write to the console\n        Console.WriteLine("Hello, World!");\n\n        // Clear the console\n        ConsoleHelper.ClearConsole();\n\n        // Keep the console window open\n        Console.ReadLine();\n    }\n}