using System;\nusing System.Linq;\nusing System.Linq.Expressions;\nusing System.Web.Mvc;\n\npublic ActionResult Index(string field, string query_value)\n{\n    var dataContext = new PurchaseOrderDataContext();\n\n    // Get the parameter of the lambda expression\n    var parameter = Expression.Parameter(typeof(PurchaseOrder), "o");\n\n    // Get the property specified by the field name\n    var property = Expression.Property(parameter, field);\n\n    // Create the StartsWith method call expression\n    var startsWithMethod = typeof(string).GetMethod("StartsWith", new[] { typeof(string) });\n    var startsWithExpression = Expression.Call(property, startsWithMethod, Expression.Constant(query_value ?? ""));\n\n    // Create the lambda expression\n    var lambda = Expression.Lambda<Func<PurchaseOrder, bool>>(startsWithExpression, parameter);\n\n    // Apply the lambda expression to the query\n    var orders = dataContext.purchase_orders.Where(lambda);\n\n    if (Request.IsAjaxRequest())\n    {\n        return PartialView("list", orders);\n    }\n    else\n    {\n        return View(orders);\n    }\n}