using System;\nusing System.Diagnostics;\nusing System.Threading;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Number of iterations for your test\n        int totalIterations = 1000000;\n        // Interval to log memory usage (e.g., every 10000 iterations)\n        int logInterval = 10000;\n\n        // Get the current process\n        Process currentProcess = Process.GetCurrentProcess();\n\n        for (int i = 0; i < totalIterations; i++)\n        {\n            // Your iteration code here\n\n            // Log memory usage at specified intervals\n            if (i % logInterval == 0)\n            {\n                LogMemoryUsage(currentProcess, i);\n            }\n        }\n\n        // Final memory usage log\n        LogMemoryUsage(currentProcess, totalIterations);\n    }\n\n    static void LogMemoryUsage(Process process, int iteration)\n    {\n        // Force a garbage collection to get a more accurate memory usage\n        GC.Collect();\n        GC.WaitForPendingFinalizers();\n        GC.Collect();\n\n        // Get memory usage\n        long memoryUsage = process.PrivateMemorySize64;\n\n        // Log the memory usage\n        Console.WriteLine($"Iteration: {iteration}, Memory Usage: {memoryUsage / 1024 / 1024} MB");\n    }\n}