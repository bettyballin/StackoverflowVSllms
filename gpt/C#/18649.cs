using System;\n    using PacketDotNet;\n    using SharpPcap;\n\n    namespace PacketSniffer\n    {\n        class Program\n        {\n            static void Main(string[] args)\n            {\n                // Retrieve the device list\n                var devices = CaptureDeviceList.Instance;\n\n                if (devices.Count < 1)\n                {\n                    Console.WriteLine("No devices were found on this machine");\n                    return;\n                }\n\n                // Select the first device\n                var device = devices[0];\n\n                // Register our handler function to the 'packet arrival' event\n                device.OnPacketArrival += new PacketArrivalEventHandler(Device_OnPacketArrival);\n\n                // Open the device for capturing\n                device.Open(DeviceMode.Promiscuous, 1000);\n\n                Console.WriteLine("Listening on " + device.Description + "...");\n\n                // Start the capturing process\n                device.StartCapture();\n\n                // Wait for the user to press 'Enter' to stop the capture\n                Console.ReadLine();\n\n                // Stop the capturing process\n                device.StopCapture();\n\n                // Close the device\n                device.Close();\n            }\n\n            private static void Device_OnPacketArrival(object sender, CaptureEventArgs e)\n            {\n                // Parse the packet\n                var packet = Packet.ParsePacket(e.Packet.LinkLayerType, e.Packet.Data);\n\n                // Print out packet information\n                Console.WriteLine(packet.ToString());\n            }\n        }\n    }