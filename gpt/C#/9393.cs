using System;\nusing System.Diagnostics;\nusing System.IO;\n\nclass Program\n{\n    static void Main()\n    {\n        string cscPath = GetCscPath();\n        if (!string.IsNullOrEmpty(cscPath))\n        {\n            Console.WriteLine($"C# Compiler path: {cscPath}");\n        }\n        else\n        {\n            Console.WriteLine("C# Compiler (csc.exe) not found.");\n        }\n    }\n\n    static string GetCscPath()\n    {\n        string dotnetPath = GetDotnetPath();\n        if (string.IsNullOrEmpty(dotnetPath))\n        {\n            return null;\n        }\n\n        string sdkPath = Path.Combine(dotnetPath, "sdk");\n        if (!Directory.Exists(sdkPath))\n        {\n            return null;\n        }\n\n        foreach (var versionDir in Directory.GetDirectories(sdkPath))\n        {\n            string cscExePath = Path.Combine(versionDir, "Roslyn", "bincore", "csc.dll");\n            if (File.Exists(cscExePath))\n            {\n                return cscExePath;\n            }\n        }\n\n        return null;\n    }\n\n    static string GetDotnetPath()\n    {\n        string dotnetRoot = Environment.GetEnvironmentVariable("DOTNET_ROOT");\n        if (!string.IsNullOrEmpty(dotnetRoot))\n        {\n            return dotnetRoot;\n        }\n\n        ProcessStartInfo psi = new ProcessStartInfo\n        {\n            FileName = "dotnet",\n            Arguments = "--info",\n            RedirectStandardOutput = true,\n            UseShellExecute = false,\n            CreateNoWindow = true\n        };\n\n        using (Process process = Process.Start(psi))\n        {\n            string output = process.StandardOutput.ReadToEnd();\n            string marker = "Base Path:";\n            int index = output.IndexOf(marker);\n            if (index >= 0)\n            {\n                int start = index + marker.Length;\n                int end = output.IndexOf(Environment.NewLine, start);\n                if (end > start)\n                {\n                    return output.Substring(start, end - start).Trim();\n                }\n            }\n        }\n\n        return null;\n    }\n}