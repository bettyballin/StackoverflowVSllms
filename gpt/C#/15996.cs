public void ConfigureServices(IServiceCollection services)\n{\n    services.AddAuthentication(options =>\n    {\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\n        options.DefaultChallengeScheme = OpenIdConnectDefaults.AuthenticationScheme;\n    })\n    .AddCookie(CookieAuthenticationDefaults.AuthenticationScheme)\n    .AddOpenIdConnect(OpenIdConnectDefaults.AuthenticationScheme, options =>\n    {\n        options.Authority = "https://identityserver.example.com";\n        options.ClientId = "your-client-id";\n        options.ClientSecret = "your-client-secret";\n        options.ResponseType = "code";\n        options.SaveTokens = true;\n    });\n\n    services.AddControllersWithViews();\n}\n\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n{\n    if (env.IsDevelopment())\n    {\n        app.UseDeveloperExceptionPage();\n    }\n    else\n    {\n        app.UseExceptionHandler("/Home/Error");\n        app.UseHsts();\n    }\n\n    app.UseHttpsRedirection();\n    app.UseStaticFiles();\n\n    app.UseRouting();\n\n    app.UseAuthentication();\n    app.UseAuthorization();\n\n    app.UseEndpoints(endpoints =>\n    {\n        endpoints.MapControllerRoute(\n            name: "default",\n            pattern: "{controller=Home}/{action=Index}/{id?}");\n    });\n}