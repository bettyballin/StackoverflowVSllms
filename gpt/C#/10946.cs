using System;\nusing System.Diagnostics;\nusing System.Linq;\nusing System.Web.UI;\n\npublic partial class ViewLogs : Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        // Ensure the user is authenticated and authorized\n        if (!User.Identity.IsAuthenticated || !User.IsInRole("Admin"))\n        {\n            Response.StatusCode = 403; // Forbidden\n            Response.End();\n            return;\n        }\n\n        // Fetch and display the event logs\n        var eventLog = new EventLog("Application");\n        var logEntries = eventLog.Entries.Cast<EventLogEntry>()\n                            .OrderByDescending(entry => entry.TimeGenerated)\n                            .Take(100) // Limit the number of entries for performance\n                            .Select(entry => new\n                            {\n                                entry.Source,\n                                entry.Message,\n                                entry.EntryType,\n                                entry.TimeGenerated\n                            });\n\n        // Render the logs on the web page\n        foreach (var log in logEntries)\n        {\n            Response.Write($"<div><strong>{log.TimeGenerated}</strong> [{log.EntryType}] {log.Source}: {log.Message}</div>");\n        }\n    }\n}