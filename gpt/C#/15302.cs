using System.Security.Principal;\n   using System.Web;\n   using System.Web.Mvc;\n   using Moq;\n   using NUnit.Framework;\n   using YourApp.Controllers;\n\n   [TestFixture]\n   public class YourControllerTests\n   {\n       private Mock<ControllerContext> _controllerContext;\n       private Mock<HttpContextBase> _httpContext;\n       private Mock<IPrincipal> _principal;\n       private YourController _controller;\n\n       [SetUp]\n       public void SetUp()\n       {\n           _controllerContext = new Mock<ControllerContext>();\n           _httpContext = new Mock<HttpContextBase>();\n           _principal = new Mock<IPrincipal>();\n\n           _httpContext.Setup(ctx => ctx.User).Returns(_principal.Object);\n           _controllerContext.Setup(ctx => ctx.HttpContext).Returns(_httpContext.Object);\n\n           _controller = new YourController\n           {\n               ControllerContext = _controllerContext.Object\n           };\n       }\n\n       [Test]\n       public void Action_WhenUserIsAuthenticated_ShouldSucceed()\n       {\n           // Arrange\n           var identity = new Mock<IIdentity>();\n           identity.Setup(id => id.IsAuthenticated).Returns(true);\n           identity.Setup(id => id.Name).Returns("testuser");\n           _principal.Setup(p => p.Identity).Returns(identity.Object);\n\n           // Act\n           var result = _controller.YourAction() as ViewResult;\n\n           // Assert\n           Assert.IsNotNull(result);\n           // Additional assertions based on your requirements\n       }\n\n       [Test]\n       public void Action_WhenUserIsNotAuthenticated_ShouldRedirectToLogin()\n       {\n           // Arrange\n           var identity = new Mock<IIdentity>();\n           identity.Setup(id => id.IsAuthenticated).Returns(false);\n           _principal.Setup(p => p.Identity).Returns(identity.Object);\n\n           // Act\n           var result = _controller.YourAction() as RedirectToRouteResult;\n\n           // Assert\n           Assert.IsNotNull(result);\n           Assert.AreEqual("Login", result.RouteValues["action"]);\n       }\n   }