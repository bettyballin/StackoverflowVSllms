using System;\nusing System.Text.RegularExpressions;\nusing System.Web;\n\npublic class WebSecurityHelper\n{\n    // Function to validate input against a regular expression\n    public bool ValidateInput(string input, string pattern)\n    {\n        if (string.IsNullOrEmpty(input))\n        {\n            return false;\n        }\n        Regex regex = new Regex(pattern);\n        return regex.IsMatch(input);\n    }\n\n    // Function to sanitize input by removing potentially harmful characters\n    public string SanitizeInput(string input)\n    {\n        if (string.IsNullOrEmpty(input))\n        {\n            return string.Empty;\n        }\n        return Regex.Replace(input, @"[^\w\.@-]", string.Empty);\n    }\n\n    // Function to encode input for HTML output to prevent XSS\n    public string EncodeForHtml(string input)\n    {\n        if (string.IsNullOrEmpty(input))\n        {\n            return string.Empty;\n        }\n        return HttpUtility.HtmlEncode(input);\n    }\n\n    // Function to encode input for URL parameters to prevent XSS\n    public string EncodeForUrl(string input)\n    {\n        if (string.IsNullOrEmpty(input))\n        {\n            return string.Empty;\n        }\n        return HttpUtility.UrlEncode(input);\n    }\n\n    // Function to validate request headers\n    public bool ValidateRequestHeader(string headerValue, string expectedValue)\n    {\n        if (string.IsNullOrEmpty(headerValue))\n        {\n            return false;\n        }\n        return headerValue.Equals(expectedValue, StringComparison.OrdinalIgnoreCase);\n    }\n}\n\n// Usage example\nclass Program\n{\n    static void Main()\n    {\n        WebSecurityHelper securityHelper = new WebSecurityHelper();\n\n        string userInput = "<script>alert('XSS');</script>";\n        string sanitizedInput = securityHelper.SanitizeInput(userInput);\n        string encodedInput = securityHelper.EncodeForHtml(userInput);\n\n        Console.WriteLine("Sanitized Input: " + sanitizedInput);\n        Console.WriteLine("Encoded Input: " + encodedInput);\n    }\n}