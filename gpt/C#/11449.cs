using System;\nusing System.IO;\nusing System.IO.Pipes;\nusing System.Threading.Tasks;\n\nnamespace ProcessA\n{\n    class Program\n    {\n        static async Task Main(string[] args)\n        {\n            var server = new NamedPipeServerStream("ProfilePipe", PipeDirection.InOut);\n            Console.WriteLine("Waiting for connection...");\n            await server.WaitForConnectionAsync();\n\n            using (var reader = new StreamReader(server))\n            using (var writer = new StreamWriter(server) { AutoFlush = true })\n            {\n                while (true)\n                {\n                    var request = await reader.ReadLineAsync();\n                    if (string.IsNullOrEmpty(request)) break;\n\n                    // Provide the requested profile information\n                    if (request == "GetMetrics")\n                    {\n                        // Example metrics\n                        var metrics = "FunctionCalls:10, AverageRunLength:15ms, CacheItems:5";\n                        await writer.WriteLineAsync(metrics);\n                    }\n                }\n            }\n\n            server.Close();\n        }\n    }\n}