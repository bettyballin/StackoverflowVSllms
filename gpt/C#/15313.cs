using System;\nusing PcapDotNet.Core;\nusing PcapDotNet.Packets;\nusing PcapDotNet.Packets.Ethernet;\nusing PcapDotNet.Packets.IpV4;\nusing PcapDotNet.Packets.Transport;\n\nclass Program\n{\n    static void Main()\n    {\n        // Retrieve the device list\n        IList<LivePacketDevice> allDevices = LivePacketDevice.AllLocalMachine;\n\n        if (allDevices.Count == 0)\n        {\n            Console.WriteLine("No interfaces found! Make sure WinPcap is installed.");\n            return;\n        }\n\n        // Take the first device\n        PacketDevice selectedDevice = allDevices[0];\n\n        using (PacketCommunicator communicator = selectedDevice.Open(100, PacketDeviceOpenAttributes.Promiscuous, 1000))\n        {\n            EthernetLayer ethernetLayer = new EthernetLayer\n            {\n                Source = new MacAddress("00:11:22:33:44:55"), // Replace with your MAC address\n                Destination = new MacAddress("66:77:88:99:AA:BB") // Replace with destination MAC address\n            };\n\n            IpV4Layer ipV4Layer = new IpV4Layer\n            {\n                Source = new IpV4Address("192.168.1.2"), // Replace with your IP address\n                CurrentDestination = new IpV4Address("192.168.1.1") // Replace with destination IP address\n            };\n\n            TcpLayer tcpLayer = new TcpLayer\n            {\n                SourcePort = 4050,\n                DestinationPort = 80,\n                ControlBits = TcpControlBits.Synchronize,\n            };\n\n            PayloadLayer payloadLayer = new PayloadLayer\n            {\n                Data = new Datagram(Encoding.ASCII.GetBytes("Hello, TCP!"))\n            };\n\n            PacketBuilder builder = new PacketBuilder(ethernetLayer, ipV4Layer, tcpLayer, payloadLayer);\n            Packet packet = builder.Build(DateTime.Now);\n\n            communicator.SendPacket(packet);\n        }\n\n        Console.WriteLine("Packet sent successfully.");\n    }\n}