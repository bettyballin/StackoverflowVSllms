using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EncryptionHelper\n{\n    private static readonly string EncryptionKey = "your-encryption-key-here"; // Store securely\n\n    public static string Encrypt(string plainText)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(EncryptionKey);\n            aes.GenerateIV();\n\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                ms.Write(aes.IV, 0, aes.IV.Length);\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public static string Decrypt(string cipherText)\n    {\n        byte[] buffer = Convert.FromBase64String(cipherText);\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(EncryptionKey);\n\n            using (MemoryStream ms = new MemoryStream(buffer))\n            {\n                byte[] iv = new byte[aes.IV.Length];\n                ms.Read(iv, 0, iv.Length);\n\n                ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, iv);\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}