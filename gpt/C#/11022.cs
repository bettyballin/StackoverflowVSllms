public sealed class Singleton\n{\n    private static readonly Lazy<Singleton> lazyInstance = new Lazy<Singleton>(() => new Singleton());\n\n    public static Singleton Instance\n    {\n        get\n        {\n            return lazyInstance.Value;\n        }\n    }\n\n    private Singleton()\n    {\n        // Private constructor to prevent instantiation.\n    }\n\n    // Singleton class methods and properties.\n}