public class DecoratedConfig\n{\n    private readonly DefaultConfig _defaultConfig;\n\n    public DecoratedConfig(DefaultConfig defaultConfig)\n    {\n        _defaultConfig = defaultConfig;\n    }\n\n    public IWindsorContainer InitialiseContainer()\n    {\n        var container = _defaultConfig.InitialiseContainer();\n\n        // Resolve the current configuration of IActivityService\n        var activityService = container.Resolve<X.Y.Z.IActivityService>();\n        var listeners = (string[])activityService.GetType().GetProperty("Listeners").GetValue(activityService);\n\n        // Create a new array with the additional listener\n        var updatedListeners = listeners.Concat(new[] { "MyOtherListenerID" }).ToArray();\n\n        // Re-register the component with the updated listeners array\n        container.Register(\n            Component.For<X.Y.Z.IActivityService>()\n                     .ImplementedBy<X.Y.Z.ActivityService>()\n                     .ServiceOverrides(ServiceOverride.ForKey("Listeners").Eq(updatedListeners))\n                     .LifeStyle.Transient\n        );\n\n        return container;\n    }\n}