using Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.Mvc.Filters;\nusing System;\n\npublic class CustomExceptionFilter : IExceptionFilter\n{\n    public void OnException(ExceptionContext context)\n    {\n        if (context.Exception is ArgumentNullException || context.Exception is ArgumentException)\n        {\n            context.Result = new BadRequestObjectResult(new\n            {\n                error = context.Exception.Message\n            });\n            context.ExceptionHandled = true;\n        }\n    }\n}\n\n// In Startup.cs or Program.cs, register the filter globally\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddControllers(options =>\n    {\n        options.Filters.Add<CustomExceptionFilter>();\n    });\n}