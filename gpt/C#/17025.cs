using System;\nusing System.IO;\nusing System.Transactions;\n\npublic class FileResourceManager : IEnlistmentNotification\n{\n    private string _filePath;\n    private string _tempFilePath;\n    private bool _fileExists;\n\n    public FileResourceManager(string filePath)\n    {\n        _filePath = filePath;\n        _tempFilePath = filePath + ".tmp";\n        _fileExists = File.Exists(filePath);\n    }\n\n    public void Write(string content)\n    {\n        // Write content to a temporary file\n        File.WriteAllText(_tempFilePath, content);\n        // Enlist this resource manager with the current transaction\n        Transaction.Current.EnlistVolatile(this, EnlistmentOptions.None);\n    }\n\n    public void Commit(Enlistment enlistment)\n    {\n        // Replace the original file with the temporary file\n        File.Copy(_tempFilePath, _filePath, true);\n        File.Delete(_tempFilePath);\n        enlistment.Done();\n    }\n\n    public void Prepare(PreparingEnlistment preparingEnlistment)\n    {\n        // Nothing to prepare, so just signal that we're ready\n        preparingEnlistment.Prepared();\n    }\n\n    public void Rollback(Enlistment enlistment)\n    {\n        // Clean up the temporary file\n        File.Delete(_tempFilePath);\n        enlistment.Done();\n    }\n\n    public void InDoubt(Enlistment enlistment)\n    {\n        // Handle in-doubt scenarios if necessary\n        File.Delete(_tempFilePath);\n        enlistment.Done();\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        try\n        {\n            using (TransactionScope scope = new TransactionScope())\n            {\n                FileResourceManager fileManager = new FileResourceManager("example.txt");\n                fileManager.Write("Hello, World!");\n\n                // Complete the transaction\n                scope.Complete();\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Transaction failed: {ex.Message}");\n        }\n    }\n}