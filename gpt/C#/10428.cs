using System;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class TreeViewHelper\n{\n    // Constants for TreeView messages\n    private const int TV_FIRST = 0x1100;\n    private const int TVM_GETNEXTITEM = TV_FIRST + 10;\n    private const int TVM_GETITEMSTATE = TV_FIRST + 39;\n    private const int TVGN_ROOT = 0x0000;\n    private const int TVIS_STATEIMAGEMASK = 0xF000;\n\n    // P/Invoke declarations\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    private static extern IntPtr SendMessage(IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam);\n\n    // Method to get the root item of the TreeView\n    public static IntPtr TreeView_GetRoot(IntPtr hwnd)\n    {\n        return SendMessage(hwnd, TVM_GETNEXTITEM, new IntPtr(TVGN_ROOT), IntPtr.Zero);\n    }\n\n    // Method to get the check state of the TreeView item\n    public static int TreeView_GetCheckState(IntPtr hwnd, IntPtr hItem)\n    {\n        int state = (int)SendMessage(hwnd, TVM_GETITEMSTATE, hItem, new IntPtr(TVIS_STATEIMAGEMASK));\n        return (state >> 12) - 1; // Convert state image index to check state (0 or 1)\n    }\n\n    // Example usage\n    public static void Main()\n    {\n        // Assume you have obtained the hwnd for the TreeView control somehow\n        IntPtr hwnd = ... // Obtain the hwnd of the TreeView control\n\n        IntPtr hRootItem = TreeView_GetRoot(hwnd);\n        if (hRootItem != IntPtr.Zero)\n        {\n            int checkState = TreeView_GetCheckState(hwnd, hRootItem);\n            switch (checkState)\n            {\n                case 0:\n                    Console.WriteLine("Unchecked");\n                    break;\n                case 1:\n                    Console.WriteLine("Checked");\n                    break;\n                default:\n                    Console.WriteLine("Unknown state");\n                    break;\n            }\n        }\n        else\n        {\n            Console.WriteLine("No root item found");\n        }\n    }\n}