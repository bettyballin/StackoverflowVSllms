using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Windows.Forms;\n\npublic class FileNode\n{\n    public string Name { get; set; }\n    public List<FileNode> Children { get; set; } = new List<FileNode>();\n}\n\npublic class FileSystemTreeView\n{\n    public static void Main()\n    {\n        List<string> filePaths = new List<string>\n        {\n            @"C:/WINDOWS/Temp/ErrorLog.txt",\n            @"C:/Program Files/FileZilla/GPL.html",\n            @"C:/Documents and Settings/Administrator/ntuser.dat.LOG"\n        };\n\n        FileNode root = BuildFileTree(filePaths);\n        Application.Run(new FileSystemForm(root));\n    }\n\n    private static FileNode BuildFileTree(List<string> filePaths)\n    {\n        FileNode root = new FileNode { Name = "Root" };\n\n        foreach (string path in filePaths)\n        {\n            string[] parts = path.Split(new[] { '/', '\\' }, StringSplitOptions.RemoveEmptyEntries);\n            AddPathToTree(root, parts, 0);\n        }\n\n        return root;\n    }\n\n    private static void AddPathToTree(FileNode currentNode, string[] parts, int index)\n    {\n        if (index >= parts.Length)\n            return;\n\n        string currentPart = parts[index];\n        FileNode childNode = currentNode.Children.FirstOrDefault(c => c.Name == currentPart);\n\n        if (childNode == null)\n        {\n            childNode = new FileNode { Name = currentPart };\n            currentNode.Children.Add(childNode);\n        }\n\n        AddPathToTree(childNode, parts, index + 1);\n    }\n}\n\npublic class FileSystemForm : Form\n{\n    private TreeView treeView;\n\n    public FileSystemForm(FileNode root)\n    {\n        treeView = new TreeView();\n        this.Controls.Add(treeView);\n        treeView.Dock = DockStyle.Fill;\n        LoadTree(root, treeView.Nodes);\n    }\n\n    private void LoadTree(FileNode node, TreeNodeCollection treeNodes)\n    {\n        TreeNode treeNode = new TreeNode(node.Name);\n        treeNodes.Add(treeNode);\n\n        foreach (FileNode child in node.Children)\n        {\n            LoadTree(child, treeNode.Nodes);\n        }\n    }\n}