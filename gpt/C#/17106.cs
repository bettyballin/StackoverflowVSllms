public class Program\n{\n    public static void Main()\n    {\n        MyObject obj = new MyObject { Id = 1, Name = "Test" };\n        string password = "MyPassword";\n\n        using (MemoryStream memoryStream = new MemoryStream())\n        {\n            // Serialize and encrypt\n            EncryptAndSerialize(obj, memoryStream, password);\n\n            // Reset the memory stream position to the beginning\n            memoryStream.Position = 0;\n\n            // Decrypt and deserialize\n            MyObject deserializedObj = DecryptAndDeserialize<MyObject>(memoryStream, password);\n\n            Console.WriteLine($"Id: {deserializedObj.Id}, Name: {deserializedObj.Name}");\n        }\n    }\n\n    public static void EncryptAndSerialize<T>(T obj, Stream outputStream, string password)\n    {\n        using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())\n        {\n            byte[] key = Encoding.UTF8.GetBytes(password);\n            if (key.Length != 8) throw new ArgumentException("Password must be 8 characters long for DES.");\n\n            des.Key = key;\n            des.IV = key;\n\n            using (CryptoStream cryptoStream = new CryptoStream(outputStream, des.CreateEncryptor(), CryptoStreamMode.Write))\n            {\n                XmlSerializer serializer = new XmlSerializer(typeof(T));\n                serializer.Serialize(cryptoStream, obj);\n            }\n        }\n    }\n\n    public static T DecryptAndDeserialize<T>(Stream inputStream, string password)\n    {\n        using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())\n        {\n            byte[] key = Encoding.UTF8.GetBytes(password);\n            if (key.Length != 8) throw new ArgumentException("Password must be 8 characters long for DES.");\n\n            des.Key = key;\n            des.IV = key;\n\n            using (CryptoStream cryptoStream = new CryptoStream(inputStream, des.CreateDecryptor(), CryptoStreamMode.Read))\n            {\n                XmlSerializer serializer = new XmlSerializer(typeof(T));\n                return (T)serializer.Deserialize(cryptoStream);\n            }\n        }\n    }\n}\n\npublic class MyObject\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}