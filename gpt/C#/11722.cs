using System;\nusing System.IO;\nusing System.Text;\n\npublic class BinaryStreamReader\n{\n    private BinaryReader _reader;\n\n    public BinaryStreamReader(Stream stream)\n    {\n        _reader = new BinaryReader(stream, Encoding.UTF8);\n    }\n\n    public string ReadLine()\n    {\n        StringBuilder line = new StringBuilder();\n        bool foundEndOfLine = false;\n\n        while (!foundEndOfLine)\n        {\n            try\n            {\n                char currentChar = _reader.ReadChar();\n\n                if (currentChar == '\r')\n                {\n                    if (_reader.PeekChar() == '\n')\n                    {\n                        _reader.ReadChar(); // Consume the '\n'\n                        foundEndOfLine = true;\n                    }\n                    else\n                    {\n                        // Ignore solitary '\r'\n                    }\n                }\n                else if (currentChar == '\n')\n                {\n                    // Ignore solitary '\n'\n                }\n                else\n                {\n                    line.Append(currentChar);\n                }\n            }\n            catch (EndOfStreamException)\n            {\n                if (line.Length == 0)\n                {\n                    return null; // End of stream with no data read\n                }\n                foundEndOfLine = true; // End of stream but data has been read\n            }\n        }\n\n        return line.ToString();\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main()\n    {\n        using (FileStream fs = new FileStream("path/to/your/csvfile.csv", FileMode.Open, FileAccess.Read))\n        {\n            BinaryStreamReader reader = new BinaryStreamReader(fs);\n            string line;\n            while ((line = reader.ReadLine()) != null)\n            {\n                Console.WriteLine(line);\n            }\n        }\n    }\n}