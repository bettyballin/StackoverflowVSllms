using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class PasswordHasher\n{\n    private const int SaltSize = 16; // 128 bit\n    private const int KeySize = 32; // 256 bit\n    private const int Iterations = 10000;\n\n    public static string HashPassword(string password)\n    {\n        using (var rng = new RNGCryptoServiceProvider())\n        {\n            var salt = new byte[SaltSize];\n            rng.GetBytes(salt);\n\n            using (var deriveBytes = new Rfc2898DeriveBytes(password, salt, Iterations))\n            {\n                var key = deriveBytes.GetBytes(KeySize);\n                var hash = new byte[SaltSize + KeySize];\n                Array.Copy(salt, 0, hash, 0, SaltSize);\n                Array.Copy(key, 0, hash, SaltSize, KeySize);\n\n                return Convert.ToBase64String(hash);\n            }\n        }\n    }\n\n    public static bool VerifyPassword(string password, string storedHash)\n    {\n        var hashBytes = Convert.FromBase64String(storedHash);\n        var salt = new byte[SaltSize];\n        Array.Copy(hashBytes, 0, salt, 0, SaltSize);\n\n        using (var deriveBytes = new Rfc2898DeriveBytes(password, salt, Iterations))\n        {\n            var key = deriveBytes.GetBytes(KeySize);\n            for (int i = 0; i < KeySize; i++)\n            {\n                if (hashBytes[i + SaltSize] != key[i])\n                {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n}\n\n// Example usage:\n// Hashing a password\nstring hashedPassword = PasswordHasher.HashPassword("fishlegs");\n\n// Verifying a password\nbool isPasswordCorrect = PasswordHasher.VerifyPassword("fishlegs", hashedPassword);