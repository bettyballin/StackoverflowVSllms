using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EncryptionHelper\n{\n    private static readonly string EncryptionKey = "your-strong-encryption-key"; // Replace with your actual key\n\n    public static string Encrypt(string plainText)\n    {\n        byte[] key = Encoding.UTF8.GetBytes(EncryptionKey);\n        using (Aes aesAlg = Aes.Create())\n        {\n            using (ICryptoTransform encryptor = aesAlg.CreateEncryptor(key, aesAlg.IV))\n            {\n                using (MemoryStream msEncrypt = new MemoryStream())\n                {\n                    msEncrypt.Write(BitConverter.GetBytes(aesAlg.IV.Length), 0, sizeof(int));\n                    msEncrypt.Write(aesAlg.IV, 0, aesAlg.IV.Length);\n                    using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    return Convert.ToBase64String(msEncrypt.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string cipherText)\n    {\n        byte[] fullCipher = Convert.FromBase64String(cipherText);\n        using (MemoryStream msDecrypt = new MemoryStream(fullCipher))\n        {\n            byte[] iv = new byte[BitConverter.ToInt32(fullCipher, 0)];\n            msDecrypt.Read(iv, 0, iv.Length);\n            byte[] key = Encoding.UTF8.GetBytes(EncryptionKey);\n            using (Aes aesAlg = Aes.Create())\n            {\n                using (ICryptoTransform decryptor = aesAlg.CreateDecryptor(key, iv))\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                {\n                    return srDecrypt.ReadToEnd();\n                }\n            }\n        }\n    }\n}