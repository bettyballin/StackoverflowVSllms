using System;\nusing System.Data;\nusing System.Collections.Generic;\nusing System.Windows.Forms; // For Windows Forms\n// using System.Collections.ObjectModel; // For WPF\n\npublic class Program\n{\n    public static void Main()\n    {\n        // Assuming you have a filled DataSet named 'dataSet'\n        DataSet dataSet = new DataSet();\n        \n        // Add sample data for demonstration purposes\n        DataTable table = new DataTable("SampleTable");\n        table.Columns.Add("ID", typeof(int));\n        table.Columns.Add("Name", typeof(string));\n        table.Rows.Add(1, "Alice");\n        table.Rows.Add(2, "Bob");\n        dataSet.Tables.Add(table);\n        \n        // Specify the table and column you want to extract\n        DataTable targetTable = dataSet.Tables["SampleTable"];\n        string columnName = "Name";\n\n        // Extract the data from the specified column\n        List<string> columnData = new List<string>();\n        foreach (DataRow row in targetTable.Rows)\n        {\n            columnData.Add(row[columnName].ToString());\n        }\n\n        // Create a ComboBox and set its DataSource\n        ComboBox comboBox = new ComboBox();\n        comboBox.DataSource = columnData;\n\n        // For WPF, you would use:\n        // ObservableCollection<string> columnData = new ObservableCollection<string>(columnData);\n        // comboBox.ItemsSource = columnData;\n\n        // Display the ComboBox in a form (Windows Forms example)\n        Form form = new Form();\n        form.Controls.Add(comboBox);\n        Application.Run(form);\n    }\n}