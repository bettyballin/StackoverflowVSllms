using System;\nusing System.IO.Pipes;\nusing System.Text;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main()\n    {\n        var server = new NamedPipeServerStream("testpipe", PipeDirection.Out);\n        var client = new NamedPipeClientStream(".", "testpipe", PipeDirection.In);\n\n        // Start server and client\n        Task serverTask = Task.Run(async () =>\n        {\n            await server.WaitForConnectionAsync();\n            byte[] messageBytes = Encoding.UTF8.GetBytes("Hello, Service!");\n            await server.WriteAsync(messageBytes, 0, messageBytes.Length);\n            server.Close();\n        });\n\n        Task clientTask = Task.Run(async () =>\n        {\n            await client.ConnectAsync();\n            byte[] buffer = new byte[256];\n            int bytesRead = await client.ReadAsync(buffer, 0, buffer.Length);\n            string message = Encoding.UTF8.GetString(buffer, 0, bytesRead);\n            Console.WriteLine("Received from server: " + message);\n            client.Close();\n        });\n\n        await Task.WhenAll(serverTask, clientTask);\n    }\n}