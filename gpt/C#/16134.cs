using System;\nusing System.Collections.Specialized;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Web;\n\npublic class QueryStringValidator\n{\n    private static readonly string secretKey = "YourSecretKeyHere";\n\n    public static string GenerateHmac(NameValueCollection queryStringParams)\n    {\n        var sortedParams = new StringBuilder();\n        foreach (string key in queryStringParams.AllKeys)\n        {\n            sortedParams.Append($"{key}={queryStringParams[key]}&");\n        }\n\n        using (var hmacsha256 = new HMACSHA256(Encoding.UTF8.GetBytes(secretKey)))\n        {\n            byte[] hash = hmacsha256.ComputeHash(Encoding.UTF8.GetBytes(sortedParams.ToString().TrimEnd('&')));\n            return Convert.ToBase64String(hash);\n        }\n    }\n\n    public static bool ValidateHmac(NameValueCollection queryStringParams, string providedHmac)\n    {\n        string calculatedHmac = GenerateHmac(queryStringParams);\n        return calculatedHmac.Equals(providedHmac, StringComparison.OrdinalIgnoreCase);\n    }\n}