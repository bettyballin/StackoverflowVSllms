using CefSharp;\nusing CefSharp.Wpf;\nusing System.Windows;\n\npublic class MainWindow : Window\n{\n    private ChromiumWebBrowser browser;\n    private string[] pages;\n    private int currentPageIndex;\n\n    public MainWindow()\n    {\n        browser = new ChromiumWebBrowser();\n        this.Content = browser;\n        this.pages = new string[10]; // Assuming we want to manage 10 pages\n        this.currentPageIndex = -1;\n\n        // Event to get HTML content after the page is loaded\n        browser.FrameLoadEnd += OnFrameLoadEnd;\n    }\n\n    private void OnFrameLoadEnd(object sender, FrameLoadEndEventArgs e)\n    {\n        if (e.Frame.IsMain)\n        {\n            e.Frame.GetSourceAsync().ContinueWith(taskHtml =>\n            {\n                pages[currentPageIndex] = taskHtml.Result;\n            });\n        }\n    }\n\n    public void LoadPage(int pageIndex)\n    {\n        if (pageIndex >= 0 && pageIndex < pages.Length && pages[pageIndex] != null)\n        {\n            currentPageIndex = pageIndex;\n            browser.LoadHtml(pages[pageIndex]);\n        }\n    }\n\n    public void SetCurrentPageIndex(int pageIndex)\n    {\n        if (pageIndex >= 0 && pageIndex < pages.Length)\n        {\n            currentPageIndex = pageIndex;\n        }\n    }\n\n    public int GetCurrentPageIndex()\n    {\n        return currentPageIndex;\n    }\n}\n\n// Usage\npublic static class Program\n{\n    [STAThread]\n    public static void Main()\n    {\n        Cef.Initialize(new CefSettings());\n        var app = new Application();\n        app.Run(new MainWindow());\n    }\n}