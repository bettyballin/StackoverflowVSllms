using System;\nusing System.Collections.Specialized;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web.Security;\n\npublic class CustomSqlMembershipProvider : SqlMembershipProvider\n{\n    private string _connectionString;\n\n    public override void Initialize(string name, NameValueCollection config)\n    {\n        base.Initialize(name, config);\n        _connectionString = ConfigurationManager.ConnectionStrings[config["connectionStringName"]].ConnectionString;\n    }\n\n    private string GetSetting(string key)\n    {\n        using (SqlConnection connection = new SqlConnection(_connectionString))\n        {\n            string query = "SELECT SettingValue FROM MembershipSettings WHERE SettingKey = @SettingKey";\n            SqlCommand command = new SqlCommand(query, connection);\n            command.Parameters.AddWithValue("@SettingKey", key);\n            connection.Open();\n            return command.ExecuteScalar() as string;\n        }\n    }\n\n    public override int MaxInvalidPasswordAttempts\n    {\n        get\n        {\n            int maxAttempts;\n            if (int.TryParse(GetSetting("maxInvalidPasswordAttempts"), out maxAttempts))\n            {\n                return maxAttempts;\n            }\n            else\n            {\n                return base.MaxInvalidPasswordAttempts;\n            }\n        }\n    }\n\n    public override int PasswordAttemptWindow\n    {\n        get\n        {\n            int attemptWindow;\n            if (int.TryParse(GetSetting("passwordAttemptWindow"), out attemptWindow))\n            {\n                return attemptWindow;\n            }\n            else\n            {\n                return base.PasswordAttemptWindow;\n            }\n        }\n    }\n}