using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = "your_connection_string"; // Update with your connection string\n        string outputPath = "path_to_output_directory"; // Update with your desired output directory\n\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            connection.Open();\n\n            string query = @"\n                SELECT \n                    SPECIFIC_NAME AS ProcedureName,\n                    PARAMETER_NAME AS ParameterName,\n                    DATA_TYPE AS ParameterType,\n                    ORDINAL_POSITION AS ParameterOrder\n                FROM \n                    INFORMATION_SCHEMA.PARAMETERS\n                ORDER BY \n                    SPECIFIC_NAME, ORDINAL_POSITION";\n\n            using (SqlCommand command = new SqlCommand(query, connection))\n            using (SqlDataReader reader = command.ExecuteReader())\n            {\n                StringBuilder classBuilder = new StringBuilder();\n                string currentProcedure = null;\n\n                while (reader.Read())\n                {\n                    string procedureName = reader["ProcedureName"].ToString();\n                    string parameterName = reader["ParameterName"].ToString();\n                    string parameterType = reader["ParameterType"].ToString();\n\n                    if (currentProcedure != procedureName)\n                    {\n                        if (currentProcedure != null)\n                        {\n                            // Close previous method\n                            classBuilder.AppendLine("        }");\n                            classBuilder.AppendLine();\n                        }\n\n                        currentProcedure = procedureName;\n\n                        // Start new class\n                        classBuilder.AppendLine($"    public DataTable {procedureName}(");\n\n                        // Reset parameter string\n                        classBuilder.AppendLine($"        // Parameters for {procedureName}");\n                    }\n\n                    string cSharpType = GetCSharpType(parameterType);\n                    classBuilder.AppendLine($"        {cSharpType} {parameterName},");\n                }\n\n                if (currentProcedure != null)\n                {\n                    // Close last method\n                    classBuilder.AppendLine("        )");\n                    classBuilder.AppendLine("        {");\n                    classBuilder.AppendLine("            // Implement the logic to call the stored procedure here.");\n                    classBuilder.AppendLine("        }");\n                }\n\n                File.WriteAllText(Path.Combine(outputPath, "StoredProcedures.cs"), classBuilder.ToString());\n            }\n        }\n    }\n\n    static string GetCSharpType(string sqlType)\n    {\n        switch (sqlType.ToLower())\n        {\n            case "int": return "int";\n            case "varchar": return "string";\n            case "datetime": return "DateTime";\n            // Add more mappings as necessary\n            default: return "object";\n        }\n    }\n}