using System;\nusing System.Windows.Forms;\n\npublic class MyForm : Form\n{\n    private NotifyIcon notifyIcon;\n\n    public MyForm()\n    {\n        // Initialize NotifyIcon\n        notifyIcon = new NotifyIcon();\n        notifyIcon.Icon = new System.Drawing.Icon("path_to_your_icon.ico"); // Set your icon path\n        notifyIcon.Text = "My Tray Icon";\n        notifyIcon.Visible = true;\n\n        // Handle MouseClick event\n        notifyIcon.MouseClick += new MouseEventHandler(NotifyIcon_MouseClick);\n    }\n\n    private void NotifyIcon_MouseClick(object sender, MouseEventArgs e)\n    {\n        if (e.Button == MouseButtons.Left)\n        {\n            MessageBox.Show("Left click on tray icon");\n        }\n        else if (e.Button == MouseButtons.Right)\n        {\n            ContextMenuStrip contextMenu = new ContextMenuStrip();\n            contextMenu.Items.Add("Exit", null, (s, ev) => Application.Exit());\n            notifyIcon.ContextMenuStrip = contextMenu;\n            contextMenu.Show(Cursor.Position);\n        }\n    }\n\n    protected override void OnFormClosing(FormClosingEventArgs e)\n    {\n        // Ensure the NotifyIcon is disposed\n        notifyIcon.Dispose();\n        base.OnFormClosing(e);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.Run(new MyForm());\n    }\n}