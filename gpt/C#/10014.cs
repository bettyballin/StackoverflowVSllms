protected void Page_Load(object sender, EventArgs e)\n{\n    try\n    {\n        var renderDocument = Session["docSelected"];\n\n        if (renderDocument == null)\n        {\n            ResponseWithMessage("No Document");\n            return;\n        }\n\n        bool asDownload = !string.IsNullOrEmpty(Request.QueryString["download"]) && bool.Parse(Request.QueryString["download"]);\n\n        byte[] docBytes;\n        string docExtension;\n        long docFileSize;\n\n        GetBytesAndExtension(out docBytes, out docExtension, out docFileSize);\n\n        if (docBytes == null)\n        {\n            ResponseWithMessage("No Data");\n            return;\n        }\n\n        var base64Doc = Convert.ToBase64String(docBytes);\n\n        var response = new\n        {\n            IsError = false,\n            FileName = renderDocument.Name + "." + docExtension,\n            Content = base64Doc,\n            ContentType = "application/octet-stream",\n            AsDownload = asDownload\n        };\n\n        var jsonResponse = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(response);\n\n        Response.ContentType = "application/json";\n        Response.Write(jsonResponse);\n        Response.End();\n    }\n    catch (Exception ex)\n    {\n        ResponseWithMessage("ERROR: " + ex.Message);\n    }\n}\n\nprivate void ResponseWithMessage(string message)\n{\n    var response = new { IsError = true, Message = message };\n    var jsonResponse = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(response);\n    Response.ContentType = "application/json";\n    Response.Write(jsonResponse);\n    Response.End();\n}