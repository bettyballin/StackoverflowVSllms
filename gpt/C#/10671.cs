using System;\n\nnamespace ConsoleCalculator\n{\n    // Command Interface\n    public interface ICommand\n    {\n        void Execute();\n    }\n\n    // Addition Command\n    public class AddCommand : ICommand\n    {\n        private readonly double _a;\n        private readonly double _b;\n\n        public AddCommand(double a, double b)\n        {\n            _a = a;\n            _b = b;\n        }\n\n        public void Execute()\n        {\n            Console.WriteLine($"Result: {_a + _b}");\n        }\n    }\n\n    // Command Invoker\n    public class CalculatorInvoker\n    {\n        private readonly ICommand _command;\n\n        public CalculatorInvoker(ICommand command)\n        {\n            _command = command;\n        }\n\n        public void Run()\n        {\n            _command.Execute();\n        }\n    }\n\n    // Main Application\n    public class Program\n    {\n        static void Main(string[] args)\n        {\n            if (args.Length < 3)\n            {\n                Console.WriteLine("Usage: ConsoleCalculator <operation> <operand1> <operand2>");\n                return;\n            }\n\n            string operation = args[0];\n            if (!double.TryParse(args[1], out double operand1) || !double.TryParse(args[2], out double operand2))\n            {\n                Console.WriteLine("Invalid operands.");\n                return;\n            }\n\n            ICommand command = operation switch\n            {\n                "add" => new AddCommand(operand1, operand2),\n                _ => throw new InvalidOperationException("Unknown operation")\n            };\n\n            var calculator = new CalculatorInvoker(command);\n            calculator.Run();\n        }\n    }\n}