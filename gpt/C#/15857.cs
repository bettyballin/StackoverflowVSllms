public interface IPlugin\n{\n    void Execute();\n}\n\npublic class PluginManager\n{\n    private string pluginDirectory = "Plugins";\n\n    public void LoadAndExecutePlugins()\n    {\n        foreach (string pluginPath in Directory.GetFiles(pluginDirectory, "*.dll"))\n        {\n            Assembly pluginAssembly = Assembly.LoadFrom(pluginPath);\n            foreach (Type type in pluginAssembly.GetTypes())\n            {\n                if (typeof(IPlugin).IsAssignableFrom(type))\n                {\n                    IPlugin plugin = (IPlugin)Activator.CreateInstance(type);\n                    plugin.Execute();\n                }\n            }\n        }\n    }\n}