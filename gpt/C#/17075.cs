void transportHelper_SubscriptionMessageReceived(object sender, SubscriptionMessageEventArgs e)\n{\n    if (SynchronizationContext.Current != synchronizationContext)\n    {\n        // Capture the necessary state\n        var capturedSender = sender;\n        var capturedEventArgs = e;\n\n        // Post to the synchronization context to avoid recursion\n        synchronizationContext.Post(o =>\n        {\n            // Call the method again within the correct context\n            transportHelper_SubscriptionMessageReceived(capturedSender, capturedEventArgs);\n        }, null);\n\n        return;\n    }\n\n    // Actual processing code goes here\n    // [code removed....]\n}