using System;\nusing System.ServiceModel.Channels;\nusing System.ServiceModel.Dispatcher;\nusing System.Text;\n\npublic class BasicAuthMessageInspector : IDispatchMessageInspector\n{\n    public object AfterReceiveRequest(ref Message request, IClientChannel channel, InstanceContext instanceContext)\n    {\n        var httpRequest = (HttpRequestMessageProperty)request.Properties[HttpRequestMessageProperty.Name];\n        if (httpRequest != null && !string.IsNullOrEmpty(httpRequest.Headers["Authorization"]))\n        {\n            var authHeader = httpRequest.Headers["Authorization"];\n            var authStr = Encoding.UTF8.GetString(Convert.FromBase64String(authHeader.Replace("Basic ", "")));\n            var credentials = authStr.Split(':');\n\n            string username = credentials[0];\n            string password = credentials[1];\n\n            if (ValidateUser(username, password))\n            {\n                return null; // Authentication successful\n            }\n        }\n\n        throw new UnauthorizedAccessException("Authentication failed");\n    }\n\n    public void BeforeSendReply(ref Message reply, object correlationState)\n    {\n        // No action required\n    }\n\n    private bool ValidateUser(string username, string password)\n    {\n        // Implement your own user validation logic here\n        return username == "testuser" && password == "testpassword";\n    }\n}