using System;\nusing System.IO;\nusing System.Net.Mail;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\n\npublic class EmailSaver\n{\n    public static void SaveMailMessage(MailMessage mailMessage, string filePath)\n    {\n        IFormatter formatter = new BinaryFormatter();\n        using (Stream stream = new FileStream(filePath, FileMode.Create, FileAccess.Write, FileShare.None))\n        {\n            formatter.Serialize(stream, mailMessage);\n        }\n    }\n\n    public static MailMessage LoadMailMessage(string filePath)\n    {\n        IFormatter formatter = new BinaryFormatter();\n        using (Stream stream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.Read))\n        {\n            return (MailMessage)formatter.Deserialize(stream);\n        }\n    }\n}\n\n// Usage example\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        MailMessage mailMessage = new MailMessage("from@example.com", "to@example.com")\n        {\n            Subject = "Test",\n            Body = "This is a test email.",\n        };\n\n        // Add an attachment\n        Attachment attachment = new Attachment("path/to/attachment.txt");\n        mailMessage.Attachments.Add(attachment);\n\n        // Save the mail message to a file\n        EmailSaver.SaveMailMessage(mailMessage, "savedMailMessage.dat");\n\n        // Load the mail message from the file\n        MailMessage loadedMailMessage = EmailSaver.LoadMailMessage("savedMailMessage.dat");\n        \n        // Optionally, you can then send the loaded mail message using SmtpClient when ready\n        // SmtpClient smtpClient = new SmtpClient("your_smtp_server");\n        // smtpClient.Send(loadedMailMessage);\n    }\n}