#include <comdef.h>\n#include <atlbase.h>\n#include <atlcom.h>\n#include <iostream>\n\n// Ensure you have imported your type library that includes the Statistics class\n#import "YourTypeLibrary.tlb" raw_interfaces_only, raw_native_types, no_namespace, named_guids\n\nint main()\n{\n    HRESULT hr = CoInitialize(NULL);\n    if (FAILED(hr))\n    {\n        std::cout << "Failed to initialize COM library." << std::endl;\n        return hr;\n    }\n\n    SAFEARRAYBOUND dimensions[1];\n    dimensions[0].cElements = 2;\n    dimensions[0].lLbound = 0;\n\n    SAFEARRAY *pEquationsStatistics = SafeArrayCreate(VT_RECORD, 1, dimensions);\n    if (pEquationsStatistics == NULL)\n    {\n        std::cout << "Failed to create SAFEARRAY." << std::endl;\n        CoUninitialize();\n        return E_FAIL;\n    }\n\n    // Get the IRecordInfo interface for the Statistics type\n    CComPtr<IRecordInfo> pRecordInfo;\n    hr = GetRecordInfoFromTypeInfo(__uuidof(Statistics), &pRecordInfo);\n    if (FAILED(hr))\n    {\n        std::cout << "Failed to get IRecordInfo." << std::endl;\n        SafeArrayDestroy(pEquationsStatistics);\n        CoUninitialize();\n        return hr;\n    }\n\n    for (long i = 0; i < dimensions[0].cElements; i++)\n    {\n        Statistics* pStatistics = NULL;\n        hr = pRecordInfo->RecordCreate(&pStatistics);\n        if (FAILED(hr))\n        {\n            std::cout << "Failed to create record." << std::endl;\n            continue;\n        }\n\n        pStatistics->Mean = 1.0;\n        pStatistics->StdDev = 2.0;\n\n        long indices[1] = { i };\n        hr = SafeArrayPutElement(pEquationsStatistics, indices, pStatistics);\n        if (FAILED(hr))\n        {\n            std::cout << "Failed to put element in SAFEARRAY." << std::endl;\n        }\n\n        pRecordInfo->RecordDestroy(pStatistics);\n    }\n\n    // Pass pEquationsStatistics to your C# code as needed\n\n    SafeArrayDestroy(pEquationsStatistics);\n    CoUninitialize();\n    return 0;\n}