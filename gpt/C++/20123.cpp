#include <windows.h>\n#include <iostream>\n\nvoid CaptureOutput(const char* cmd) {\n    SECURITY_ATTRIBUTES sa = {sizeof(SECURITY_ATTRIBUTES), NULL, TRUE};\n    HANDLE hRead, hWrite;\n    CreatePipe(&hRead, &hWrite, &sa, 0);\n    SetHandleInformation(hRead, HANDLE_FLAG_INHERIT, 0);\n\n    STARTUPINFOA si = {sizeof(STARTUPINFOA)};\n    si.dwFlags = STARTF_USESTDHANDLES;\n    si.hStdOutput = hWrite;\n    si.hStdError = hWrite;\n\n    PROCESS_INFORMATION pi;\n    CreateProcessA(NULL, const_cast<LPSTR>(cmd), NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi);\n\n    CloseHandle(hWrite);\n\n    char buffer[128];\n    DWORD bytesRead;\n    while (ReadFile(hRead, buffer, sizeof(buffer) - 1, &bytesRead, NULL) && bytesRead > 0) {\n        buffer[bytesRead] = '\0';\n        std::cout << "Captured output: " << buffer;\n        // Process the output buffer\n    }\n\n    CloseHandle(hRead);\n    WaitForSingleObject(pi.hProcess, INFINITE);\n    CloseHandle(pi.hProcess);\n    CloseHandle(pi.hThread);\n}\n\nint main() {\n    CaptureOutput("your_command_here");\n    return 0;\n}