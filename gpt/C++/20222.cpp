#include <windows.h>\n#include <iostream>\n\nvoid WriteToRegistry() {\n    HKEY hKey;\n    LPCSTR subKey = "SOFTWARE\\MyApp";\n    LPCSTR valueName = "MyValue";\n    DWORD data = 1;\n\n    // Create or open the key\n    if (RegCreateKeyExA(HKEY_CURRENT_USER, subKey, 0, NULL, 0, KEY_WRITE, NULL, &hKey, NULL) == ERROR_SUCCESS) {\n        // Set the value\n        if (RegSetValueExA(hKey, valueName, 0, REG_DWORD, (const BYTE*)&data, sizeof(data)) == ERROR_SUCCESS) {\n            std::cout << "Value written successfully." << std::endl;\n        } else {\n            std::cerr << "Error setting value." << std::endl;\n        }\n\n        // Close the key\n        RegCloseKey(hKey);\n    } else {\n        std::cerr << "Error creating/opening key." << std::endl;\n    }\n}\n\nvoid ReadFromRegistry() {\n    HKEY hKey;\n    LPCSTR subKey = "SOFTWARE\\MyApp";\n    LPCSTR valueName = "MyValue";\n    DWORD data;\n    DWORD dataSize = sizeof(data);\n\n    // Open the key\n    if (RegOpenKeyExA(HKEY_CURRENT_USER, subKey, 0, KEY_READ, &hKey) == ERROR_SUCCESS) {\n        // Query the value\n        if (RegQueryValueExA(hKey, valueName, NULL, NULL, (LPBYTE)&data, &dataSize) == ERROR_SUCCESS) {\n            std::cout << "Value read successfully: " << data << std::endl;\n        } else {\n            std::cerr << "Error querying value." << std::endl;\n        }\n\n        // Close the key\n        RegCloseKey(hKey);\n    } else {\n        std::cerr << "Error opening key." << std::endl;\n    }\n}\n\nint main() {\n    WriteToRegistry();\n    ReadFromRegistry();\n    return 0;\n}