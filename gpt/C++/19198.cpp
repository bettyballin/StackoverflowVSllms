#include <iostream>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n\nusing namespace std;\n\nint globalVariable = 2;\n\nint main()\n{\n   string sIdentifier;\n   int iStackVariable = 20;\n\n   pid_t pID = fork();\n   if (pID == 0) // child\n   {\n      // Code only executed by child process\n      sIdentifier = "Child Process: ";\n      globalVariable++;\n      iStackVariable++;\n      cout << "PROCESO NUMERO " << getpid() << " " << sIdentifier;\n      cout << " Global variable: " << globalVariable;\n      cout << " Stack variable: " << iStackVariable << endl;\n      _exit(0); // Use _exit to terminate the child process\n    }\n    else if (pID < 0) // failed to fork\n    {\n        cerr << "Failed to fork" << endl;\n        return 1;\n    }\n    else // parent\n    {\n      // Code only executed by parent process\n      sIdentifier = "Parent Process:";\n    }\n\n    // executed only by parent\n    cout << sIdentifier;\n    cout << " Global variable: " << globalVariable;\n    cout << " Stack variable: " << iStackVariable << endl;\n    return 0;\n}