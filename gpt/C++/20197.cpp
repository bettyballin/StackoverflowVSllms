template<typename T>\nclass MyList {\nprivate:\n    struct Node {\n        T data;\n        Node* next;\n        Node* prev;\n    };\n    Node* head;\n    Node* tail;\n    size_t _size;\n\npublic:\n    MyList() : head(nullptr), tail(nullptr), _size(0) {}\n\n    size_t size() const {\n        return _size;\n    }\n\n    void push_back(const T& value) {\n        Node* newNode = new Node{value, nullptr, tail};\n        if (tail) {\n            tail->next = newNode;\n        } else {\n            head = newNode;\n        }\n        tail = newNode;\n        ++_size;\n    }\n\n    // Other list methods...\n};