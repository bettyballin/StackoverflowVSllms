#include <iostream>\n#include <windows.h>\n#include <GL/glut.h>\n#include "ImageProcessor.h"\n#include "BitmapImage.h"\n\nusing namespace std;\n\nDWORD WINAPI openglThread(LPVOID param);\nvoid InitGL();\nvoid Reshape(GLint newWidth, GLint newHeight);\nvoid Display(void);\nvoid updateDisplay();\n\nBitmapImage* b;\nImageProcessor ip;\nbool shouldRedraw = false;\n\nint main(int argc, char *argv[]) {\n    DWORD threadID;\n    b = new BitmapImage();\n\n    CreateThread(0, 0, openglThread, NULL, 0, &threadID);\n\n    while (true) {\n        char choice;\n        string path = "TestImages\\";\n        string filename;\n        cout << "Enter filename: ";\n        cin >> filename;\n        path += filename;\n        b = new BitmapImage(path);\n        shouldRedraw = true;\n\n        cout << "1) Invert" << endl;\n        cout << "2) Line Thin" << endl;\n        cout << "Enter choice: ";\n        cin >> choice;\n\n        if (choice == '1') {\n            ip.InvertColour(*b);\n        } else {\n            ip.LineThinning(*b);\n        }\n        shouldRedraw = true;\n    }\n\n    return 0;\n}\n\nDWORD WINAPI openglThread(LPVOID param) {\n    InitGL();\n    glutMainLoop();\n    return 0;\n}\n\nvoid InitGL() {\n    int argc = 1;\n    char* argv[1];\n    argv[0] = new char[20];\n    strcpy(argv[0], "main");\n\n    glutInit(&argc, argv);\n    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);\n    glutInitWindowPosition(0, 0);\n    glutInitWindowSize(800, 600);\n    glutCreateWindow("ICIP Program - Character recognition using line thinning, Hilbert curve, and wavelet approximation");\n\n    glutDisplayFunc(Display);\n    glutReshapeFunc(Reshape);\n\n    delete[] argv[0];\n}\n\nvoid Reshape(GLint newWidth, GLint newHeight) {\n    glViewport(0, 0, newWidth, newHeight);\n    glMatrixMode(GL_PROJECTION);\n    glLoadIdentity();\n    gluOrtho2D(0.0, newWidth, 0.0, newHeight);\n    glMatrixMode(GL_MODELVIEW);\n}\n\nvoid Display() {\n    if (shouldRedraw && b != nullptr) {\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glLoadIdentity();\n\n        // Add your image drawing code here using OpenGL\n        // Example:\n        // glDrawPixels(b->Width(), b->Height(), GL_RGB, GL_UNSIGNED_BYTE, b->Data());\n\n        glutSwapBuffers();\n        shouldRedraw = false;\n    }\n}\n\nvoid updateDisplay() {\n    if (shouldRedraw) {\n        glutPostRedisplay();\n    }\n}