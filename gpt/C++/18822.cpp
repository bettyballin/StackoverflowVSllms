#include <cpprest/http_client.h>\n   #include <cpprest/filestream.h>\n   #include <iostream>\n\n   using namespace utility;                    // Common utilities like string conversions\n   using namespace web;                        // Common features like URIs.\n   using namespace web::http;                  // Common HTTP functionality\n   using namespace web::http::client;          // HTTP client features\n\n   int main() {\n       // Create an HTTP client\n       http_client client(U("http://www.example.com/api"));\n\n       // Make a GET request\n       client.request(methods::GET).then([](http_response response) {\n           if (response.status_code() == status_codes::OK) {\n               return response.extract_string();\n           }\n           return pplx::task_from_result(utility::string_t());\n       }).then([](pplx::task<utility::string_t> previousTask) {\n           try {\n               std::wcout << previousTask.get() << std::endl;\n           } catch (const http_exception& e) {\n               std::wcout << e.what() << std::endl;\n           }\n       }).wait();\n\n       return 0;\n   }