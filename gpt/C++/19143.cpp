#include <iostream>\n#include <iomanip>\n#include <string>\n\n// Helper function to check if a character is a UTF-8 continuation byte\nbool isContinuationByte(unsigned char c) {\n    return (c & 0xC0) == 0x80;\n}\n\n// Function to print the Unicode characters in hexadecimal format\nvoid printUnicodeHex(const std::string& str) {\n    for (size_t i = 0; i < str.size(); ++i) {\n        unsigned char c = str[i];\n        \n        if ((c & 0x80) == 0) {\n            // ASCII character (0xxxxxxx)\n            std::cout << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(c) << " ";\n        } else if ((c & 0xE0) == 0xC0) {\n            // 2-byte UTF-8 character (110xxxxx 10xxxxxx)\n            if (i + 1 < str.size() && isContinuationByte(str[i + 1])) {\n                std::cout << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(c) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 1]) << " ";\n                ++i;\n            }\n        } else if ((c & 0xF0) == 0xE0) {\n            // 3-byte UTF-8 character (1110xxxx 10xxxxxx 10xxxxxx)\n            if (i + 2 < str.size() && isContinuationByte(str[i + 1]) && isContinuationByte(str[i + 2])) {\n                std::cout << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(c) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 1]) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 2]) << " ";\n                i += 2;\n            }\n        } else if ((c & 0xF8) == 0xF0) {\n            // 4-byte UTF-8 character (11110xxx 10xxxxxx 10xxxxxx 10xxxxxx)\n            if (i + 3 < str.size() && isContinuationByte(str[i + 1]) && isContinuationByte(str[i + 2]) && isContinuationByte(str[i + 3])) {\n                std::cout << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(c) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 1]) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 2]) << " "\n                          << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(str[i + 3]) << " ";\n                i += 3;\n            }\n        } else {\n            // Invalid UTF-8 byte\n            std::cerr << "Invalid UTF-8 sequence at position " << i << std::endl;\n        }\n    }\n    std::cout << std::dec << std::endl; // Reset stream to decimal format\n}\n\nint main() {\n    std::string data = "Example with Unicode: \u00A9 \u20AC \u03A9";\n    printUnicodeHex(data);\n    return 0;\n}