#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n\nextern "C" {\n    #include <cblas.h>\n    #include <clapack.h>\n}\n\n// a is a column-major array of all the values in the matrix to invert\n// The matrix's height and width are the same because it is a square matrix.\nvoid invertMatrix(float *a, unsigned int height)\n{\n    int info, ipiv[height];\n    info = clapack_sgetrf(CblasColMajor, height, height, a, height, ipiv);\n    info = clapack_sgetri(CblasColMajor, height, a, height, ipiv);\n}\n\nvoid displayMatrix(float *a, unsigned int height, unsigned int width)\n{\n    int i, j;\n    for (i = 0; i < height; i++)\n    {\n        for (j = 0; j < width; j++)\n        {\n            printf("%1.3f ", a[height * j + i]);\n        }\n        printf("\n");\n    }\n    printf("\n");\n}\n\nvoid multiplyMatrix(float *a, unsigned int aheight, unsigned int awidth, float *b, unsigned int bwidth, float *c)\n{\n    cblas_sgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, aheight, bwidth, awidth, 1.0f, a, aheight, b, awidth, 0.0f, c, aheight);\n}\n\nint main(int argc, char *argv[])\n{\n    int i;\n    float a[9], b[9], c[9];\n    srand(time(NULL));\n    for (i = 0; i < 9; i++)\n    {\n        a[i] = 1.0f * rand() / RAND_MAX;\n        b[i] = a[i];\n    }\n    displayMatrix(a, 3, 3);\n    invertMatrix(a, 3);\n    multiplyMatrix(a, 3, 3, b, 3, c);\n    displayMatrix(c, 3, 3);\n    return 0;\n}