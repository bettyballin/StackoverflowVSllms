class MyDeviceController : public IMyDeviceController\n    {\n    public:\n        // Implement IUnknown methods\n        HRESULT __stdcall QueryInterface(REFIID riid, void** ppv)\n        {\n            if (riid == IID_IUnknown || riid == __uuidof(IMyDeviceController))\n            {\n                *ppv = static_cast<IMyDeviceController*>(this);\n                AddRef();\n                return S_OK;\n            }\n            *ppv = nullptr;\n            return E_NOINTERFACE;\n        }\n\n        ULONG __stdcall AddRef() { return InterlockedIncrement(&m_refCount); }\n        ULONG __stdcall Release()\n        {\n            ULONG ref = InterlockedDecrement(&m_refCount);\n            if (ref == 0) delete this;\n            return ref;\n        }\n\n        // Implement IMyDeviceController methods\n        HRESULT __stdcall SendCommand(BSTR command, BSTR* response)\n        {\n            // Send command to device and get response\n            *response = SysAllocString(L"Command Sent");\n            return S_OK;\n        }\n\n        HRESULT __stdcall GetData(BSTR* data)\n        {\n            // Retrieve data from device\n            *data = SysAllocString(L"Device Data");\n            return S_OK;\n        }\n\n    private:\n        LONG m_refCount;\n    };