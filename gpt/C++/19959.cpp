#include <atomic>\n#include <thread>\n\nstd::atomic<bool> dataUpdated(false);\n\nvoid thread1() {\n    while (true) {\n        if (dataUpdated.load()) {\n            updateScreen();\n            dataUpdated.store(false);  // Optionally reset the flag\n        }\n        doSomethingElse();\n    }\n}\n\nvoid thread2() {\n    while (true) {\n        if (doSomething()) {\n            dataUpdated.store(true);\n        }\n    }\n}\n\nint main() {\n    std::thread t1(thread1);\n    std::thread t2(thread2);\n\n    t1.join();\n    t2.join();\n\n    return 0;\n}