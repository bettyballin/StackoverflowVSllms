#include <iostream>\n#include <windows.h>\n#include <lm.h>\n\n#pragma comment(lib, "netapi32.lib")\n\nvoid ListNetworkShares(const wchar_t* serverName) {\n    SHARE_INFO_1* pBuf = nullptr;\n    SHARE_INFO_1* pTmpBuf;\n    DWORD dwEntriesRead = 0;\n    DWORD dwTotalEntries = 0;\n    DWORD dwResumeHandle = 0;\n    NET_API_STATUS nStatus;\n\n    do {\n        nStatus = NetShareEnum(\n            const_cast<LPWSTR>(serverName),  // Server name\n            1,                               // Level 1\n            (LPBYTE*)&pBuf,                  // Buffer to receive data\n            MAX_PREFERRED_LENGTH,            // Max buffer size\n            &dwEntriesRead,                  // Number of entries read\n            &dwTotalEntries,                 // Total entries available\n            &dwResumeHandle                  // Resume handle\n        );\n\n        if ((nStatus == NERR_Success) || (nStatus == ERROR_MORE_DATA)) {\n            pTmpBuf = pBuf;\n            for (DWORD i = 0; i < dwEntriesRead; i++) {\n                if (pTmpBuf == nullptr) {\n                    break;\n                }\n                std::wcout << L"Share name: " << pTmpBuf->shi1_netname << std::endl;\n                pTmpBuf++;\n            }\n        }\n        \n        if (pBuf != nullptr) {\n            NetApiBufferFree(pBuf);\n            pBuf = nullptr;\n        }\n    } while (nStatus == ERROR_MORE_DATA);\n\n    if (nStatus != NERR_Success) {\n        std::wcerr << L"Failed to enumerate shares: " << nStatus << std::endl;\n    }\n}\n\nint main() {\n    const wchar_t* serverIP = L"\\\\1.2.3.4";  // Replace with your server IP\n    ListNetworkShares(serverIP);\n    return 0;\n}