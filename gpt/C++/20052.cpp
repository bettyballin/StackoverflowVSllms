#include <afxwin.h>\n#include <thread>\n#include <atomic>\n\nclass CMyApp : public CWinApp\n{\npublic:\n    // Function to launch the process\n    void LaunchProcess(LPCTSTR lpAppName, LPTSTR szCmdLineBuffer, BOOL bWait);\n\nprivate:\n    // Worker thread function\n    void ProcessWorker(LPCTSTR lpAppName, LPTSTR szCmdLineBuffer);\n\n    // Atomic flag to signal the worker thread to stop\n    std::atomic<bool> m_bStopWorker;\n};\n\nvoid CMyApp::LaunchProcess(LPCTSTR lpAppName, LPTSTR szCmdLineBuffer, BOOL bWait)\n{\n    if (bWait)\n    {\n        // Start the worker thread to handle the process\n        m_bStopWorker = false;\n        std::thread worker(&CMyApp::ProcessWorker, this, lpAppName, szCmdLineBuffer);\n        worker.detach();\n    }\n    else\n    {\n        // Launch the process without waiting\n        STARTUPINFO StartupInfo = { sizeof(StartupInfo) };\n        PROCESS_INFORMATION ProcessInfo;\n        if (::CreateProcess(lpAppName, szCmdLineBuffer, NULL, NULL, TRUE, 0, NULL, NULL, &StartupInfo, &ProcessInfo))\n        {\n            ::CloseHandle(ProcessInfo.hProcess);\n            ::CloseHandle(ProcessInfo.hThread);\n        }\n    }\n}\n\nvoid CMyApp::ProcessWorker(LPCTSTR lpAppName, LPTSTR szCmdLineBuffer)\n{\n    STARTUPINFO StartupInfo = { sizeof(StartupInfo) };\n    PROCESS_INFORMATION ProcessInfo;\n    DWORD dwExitCode = 0;\n\n    if (::CreateProcess(lpAppName, szCmdLineBuffer, NULL, NULL, TRUE, 0, NULL, NULL, &StartupInfo, &ProcessInfo))\n    {\n        while (!m_bStopWorker)\n        {\n            ::WaitForSingleObject(ProcessInfo.hProcess, 100);\n            ::GetExitCodeProcess(ProcessInfo.hProcess, &dwExitCode);\n            if (dwExitCode != STILL_ACTIVE)\n                break;\n        }\n        ::CloseHandle(ProcessInfo.hProcess);\n        ::CloseHandle(ProcessInfo.hThread);\n    }\n}\n\n// Usage example\nint main()\n{\n    CMyApp theApp;\n    theApp.InitInstance();\n\n    // Launch a process and wait for it to complete\n    theApp.LaunchProcess(_T("path_to_executable"), _T("command_line_arguments"), TRUE);\n\n    return theApp.Run();\n}