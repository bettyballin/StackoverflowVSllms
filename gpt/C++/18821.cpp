#include <iostream>\n#include <curl/curl.h>\n\nint main() {\n    CURL *curl;\n    CURLcode res = CURLE_OK;\n    struct curl_slist *recipients = NULL;\n\n    curl = curl_easy_init();\n    if(curl) {\n        curl_easy_setopt(curl, CURLOPT_USERNAME, "your_email@example.com");\n        curl_easy_setopt(curl, CURLOPT_PASSWORD, "your_password");\n        curl_easy_setopt(curl, CURLOPT_URL, "smtp://smtp.example.com:587");\n\n        curl_easy_setopt(curl, CURLOPT_MAIL_FROM, "<your_email@example.com>");\n\n        recipients = curl_slist_append(recipients, "<recipient@example.com>");\n        curl_easy_setopt(curl, CURLOPT_MAIL_RCPT, recipients);\n\n        const char *payload_text = \n            "To: recipient@example.com\r\n"\n            "From: your_email@example.com\r\n"\n            "Subject: Test Email\r\n"\n            "\r\n"\n            "This is a test email sent from a C++ program using libcurl.\r\n";\n\n        curl_easy_setopt(curl, CURLOPT_READFUNCTION, NULL);\n        curl_easy_setopt(curl, CURLOPT_READDATA, payload_text);\n        curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);\n\n        res = curl_easy_perform(curl);\n\n        if(res != CURLE_OK)\n            fprintf(stderr, "curl_easy_perform() failed: %s\n", curl_easy_strerror(res));\n\n        curl_slist_free_all(recipients);\n        curl_easy_cleanup(curl);\n    }\n\n    return (int)res;\n}