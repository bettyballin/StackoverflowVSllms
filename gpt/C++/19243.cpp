#include <windows.h>\n#include <iostream>\n\nint main() {\n    const char* filePath = "shared_memory";\n    const size_t size = 1024;\n\n    // Open the file\n    HANDLE hFile = CreateFileA(filePath, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);\n    if (hFile == INVALID_HANDLE_VALUE) {\n        std::cerr << "Could not open file." << std::endl;\n        return 1;\n    }\n\n    // Create a file mapping object\n    HANDLE hMapFile = CreateFileMapping(hFile, NULL, PAGE_READWRITE, 0, size, NULL);\n    if (hMapFile == NULL) {\n        std::cerr << "Could not create file mapping object." << std::endl;\n        CloseHandle(hFile);\n        return 1;\n    }\n\n    // Map the file view\n    LPVOID pBuf = MapViewOfFile(hMapFile, FILE_MAP_READ | FILE_MAP_WRITE, 0, 0, size);\n    if (pBuf == NULL) {\n        std::cerr << "Could not map view of file." << std::endl;\n        CloseHandle(hMapFile);\n        CloseHandle(hFile);\n        return 1;\n    }\n\n    // Read data from shared memory\n    std::cout << "Data from Python app: " << static_cast<char*>(pBuf) << std::endl;\n\n    // Clean up\n    UnmapViewOfFile(pBuf);\n    CloseHandle(hMapFile);\n    CloseHandle(hFile);\n\n    return 0;\n}