#include <iostream>\n#include <fstream>\n#include <curl/curl.h>\n\nsize_t WriteCallback(void* contents, size_t size, size_t nmemb, void* userp) {\n    ((std::string*)userp)->append((char*)contents, size * nmemb);\n    return size * nmemb;\n}\n\nint main() {\n    CURL* curl;\n    CURLcode res;\n    std::string readBuffer;\n\n    curl_global_init(CURL_GLOBAL_DEFAULT);\n    curl = curl_easy_init();\n\n    if(curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, "http://www.example.com");\n        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);\n        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);\n        \n        res = curl_easy_perform(curl);\n        \n        if(res != CURLE_OK) {\n            fprintf(stderr, "curl_easy_perform() failed: %s\n", curl_easy_strerror(res));\n        } else {\n            std::ofstream outFile("result.html");\n            outFile << readBuffer;\n            outFile.close();\n        }\n\n        curl_easy_cleanup(curl);\n    }\n\n    curl_global_cleanup();\n    return 0;\n}