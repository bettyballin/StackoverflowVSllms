#include <iostream>\n#include <Windows.h>\n\nint main() {\n    HRESULT hr;\n    CLSID clsid;\n    IClassFactory *pClassFactory = nullptr;\n    IUnknown *pUnknown = nullptr;\n    IYourInterface *pYourInterface = nullptr;\n\n    // Initialize COM\n    hr = CoInitialize(NULL);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to initialize COM" << std::endl;\n        return 1;\n    }\n\n    // Get CLSID from ProgID\n    hr = CLSIDFromProgID(L"Your.ProgID", &clsid);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get CLSID from ProgID" << std::endl;\n        CoUninitialize();\n        return 1;\n    }\n\n    // Get the class object\n    hr = CoGetClassObject(clsid, CLSCTX_INPROC_SERVER, NULL, IID_IClassFactory, (void**)&pClassFactory);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get class object" << std::endl;\n        CoUninitialize();\n        return 1;\n    }\n\n    // Create an instance of the COM object\n    hr = pClassFactory->CreateInstance(NULL, IID_IUnknown, (void**)&pUnknown);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to create COM object instance" << std::endl;\n        pClassFactory->Release();\n        CoUninitialize();\n        return 1;\n    }\n\n    // Query the interface\n    hr = pUnknown->QueryInterface(IID_IYourInterface, (void**)&pYourInterface);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to query interface" << std::endl;\n        pUnknown->Release();\n        pClassFactory->Release();\n        CoUninitialize();\n        return 1;\n    }\n\n    // Use your interface here\n    // e.g., pYourInterface->YourMethod();\n\n    // Clean up\n    pYourInterface->Release();\n    pUnknown->Release();\n    pClassFactory->Release();\n    CoUninitialize();\n\n    return 0;\n}