#include <windows.h>\n#include <wincrypt.h>\n#include <stdio.h>\n\nvoid HandleError(const char* s)\n{\n    printf("%s Error: %x\n", s, GetLastError());\n    exit(1);\n}\n\nint main()\n{\n    HCRYPTPROV hProv = 0;\n    HCRYPTKEY hKey = 0;\n    BYTE pbPublicKeyBlob[1024];\n    DWORD dwBlobLen = sizeof(pbPublicKeyBlob);\n    BYTE pbData[16] = "DataToEncrypt";\n    DWORD dwDataLen = sizeof(pbData);\n\n    // Acquire a cryptographic provider context handle\n    if (!CryptAcquireContext(&hProv, NULL, MS_ENHANCED_PROV, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT))\n    {\n        HandleError("CryptAcquireContext");\n    }\n\n    // Import the RSA public key\n    // pbPublicKeyBlob should contain your public key blob\n    if (!CryptImportKey(hProv, pbPublicKeyBlob, dwBlobLen, 0, 0, &hKey))\n    {\n        HandleError("CryptImportKey");\n    }\n\n    // Encrypt the data\n    if (!CryptEncrypt(hKey, 0, TRUE, 0, pbData, &dwDataLen, sizeof(pbData)))\n    {\n        HandleError("CryptEncrypt");\n    }\n\n    printf("Encrypted data: ");\n    for (DWORD i = 0; i < dwDataLen; i++)\n    {\n        printf("%02x ", pbData[i]);\n    }\n    printf("\n");\n\n    // Clean up\n    if (hKey)\n    {\n        CryptDestroyKey(hKey);\n    }\n    if (hProv)\n    {\n        CryptReleaseContext(hProv, 0);\n    }\n\n    return 0;\n}