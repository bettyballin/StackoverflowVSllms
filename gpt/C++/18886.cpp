#import "COMTest.tlb" named_guids raw_interfaces_only\n\n// Implement the event handler\nclass ATL_NO_VTABLE CTestEventsHandler :\n    public CComObjectRootEx<CComSingleThreadModel>,\n    public IDispatchImpl<COMTest::ITestEvents>\n{\npublic:\n    BEGIN_COM_MAP(CTestEventsHandler)\n        COM_INTERFACE_ENTRY(IDispatch)\n        COM_INTERFACE_ENTRY(COMTest::ITestEvents)\n    END_COM_MAP()\n\n    // ITestEvents implementation\n    STDMETHOD(OnTest)()\n    {\n        MessageBox(NULL, L"Test Event Triggered", L"Event", MB_OK);\n        return S_OK;\n    }\n};\n\n// In your C++ code, establish the connection to the event\nvoid ConnectEvents(COMTest::ITest* pTest)\n{\n    CComPtr<IConnectionPointContainer> spConnectionPointContainer;\n    CComPtr<IConnectionPoint> spConnectionPoint;\n    CComPtr<CTestEventsHandler> spEventHandler;\n    DWORD dwCookie = 0;\n\n    // Query for IConnectionPointContainer\n    pTest->QueryInterface(IID_IConnectionPointContainer, (void**)&spConnectionPointContainer);\n\n    // Find the connection point for ITestEvents\n    spConnectionPointContainer->FindConnectionPoint(__uuidof(COMTest::ITestEvents), &spConnectionPoint);\n\n    // Create the event handler object\n    CComObject<CTestEventsHandler>::CreateInstance(&spEventHandler);\n    spEventHandler->AddRef();\n\n    // Advise the connection point of the event handler\n    spConnectionPoint->Advise(spEventHandler, &dwCookie);\n\n    // Now RaiseTest() should trigger the OnTest event in the C++ application\n}