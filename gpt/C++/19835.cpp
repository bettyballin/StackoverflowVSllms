#include <windows.h>\n#include <mmdeviceapi.h>\n#include <audiopolicy.h>\n#include <endpointvolume.h>\n#include <iostream>\n\nint main() {\n    HRESULT hr;\n    CoInitialize(nullptr);\n\n    // Get the device enumerator\n    IMMDeviceEnumerator* pEnumerator = nullptr;\n    hr = CoCreateInstance(__uuidof(MMDeviceEnumerator), nullptr, CLSCTX_INPROC_SERVER, __uuidof(IMMDeviceEnumerator), (void**)&pEnumerator);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to create device enumerator: " << hr << std::endl;\n        return 1;\n    }\n\n    // Get the default audio endpoint\n    IMMDevice* pDevice = nullptr;\n    hr = pEnumerator->GetDefaultAudioEndpoint(eRender, eMultimedia, &pDevice);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get default audio endpoint: " << hr << std::endl;\n        pEnumerator->Release();\n        return 1;\n    }\n\n    // Get the IAudioSessionManager2 interface\n    IAudioSessionManager2* pSessionManager = nullptr;\n    hr = pDevice->Activate(__uuidof(IAudioSessionManager2), CLSCTX_ALL, nullptr, (void**)&pSessionManager);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to activate IAudioSessionManager2: " << hr << std::endl;\n        pDevice->Release();\n        pEnumerator->Release();\n        return 1;\n    }\n\n    // Get the ISimpleAudioVolume interface for a specific session\n    ISimpleAudioVolume* pSimpleAudioVolume = nullptr;\n    hr = pSessionManager->GetSimpleAudioVolume(NULL, FALSE, &pSimpleAudioVolume);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get ISimpleAudioVolume: " << hr << std::endl;\n        pSessionManager->Release();\n        pDevice->Release();\n        pEnumerator->Release();\n        return 1;\n    }\n\n    // Get the current volume level\n    float volume = 0.0f;\n    hr = pSimpleAudioVolume->GetMasterVolume(&volume);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get volume level: " << hr << std::endl;\n    } else {\n        std::cout << "Current volume level: " << volume << std::endl;\n    }\n\n    // Clean up\n    pSimpleAudioVolume->Release();\n    pSessionManager->Release();\n    pDevice->Release();\n    pEnumerator->Release();\n\n    CoUninitialize();\n    return 0;\n}