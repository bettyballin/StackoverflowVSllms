#include <windows.h>\n#include <iostream>\n\nint main() {\n    HANDLE ProcessHandle = GetCurrentProcess();\n    DWORD_PTR ProcessAffinityMask;\n    DWORD_PTR SystemAffinityMask;\n\n    if (GetProcessAffinityMask(ProcessHandle, &ProcessAffinityMask, &SystemAffinityMask) && SystemAffinityMask != 0) {\n        // Limit to 1 thread by masking all but 1 bit of the system affinity mask\n        DWORD_PTR NewProcessAffinityMask = ((SystemAffinityMask - 1) ^ SystemAffinityMask) & SystemAffinityMask;\n        if (SetProcessAffinityMask(ProcessHandle, NewProcessAffinityMask)) {\n            std::cout << "Process affinity set to a single CPU core.\n";\n        } else {\n            std::cerr << "Failed to set process affinity.\n";\n        }\n    } else {\n        std::cerr << "Failed to get process affinity mask.\n";\n    }\n\n    // Your code to call the external DLL goes here\n\n    return 0;\n}