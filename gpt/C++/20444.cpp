#include <iostream>\n#include <cstring>\n\n#if defined(__GNUC__) || defined(__clang__)\n    #include <cpuid.h>\n#endif\n\nvoid getCPUInfo(int info[4], int InfoType) {\n#if defined(__GNUC__) || defined(__clang__)\n    __cpuid(InfoType, info[0], info[1], info[2], info[3]);\n#else\n    __asm {\n        cpuid;\n        mov esi, info;\n        mov dword ptr [esi], eax;\n        mov dword ptr [esi + 4], ebx;\n        mov dword ptr [esi + 8], ecx;\n        mov dword ptr [esi + 12], edx;\n    }\n#endif\n}\n\nstd::string getVendorString() {\n    int info[4];\n    char vendor[13];\n    getCPUInfo(info, 0);\n    std::memcpy(vendor, &info[1], 4);  // EBX\n    std::memcpy(vendor + 4, &info[3], 4);  // EDX\n    std::memcpy(vendor + 8, &info[2], 4);  // ECX\n    vendor[12] = '\0';\n    return std::string(vendor);\n}\n\nint main() {\n    std::string vendor = getVendorString();\n    if (vendor == "GenuineIntel") {\n        std::cout << "Intel CPU detected." << std::endl;\n    } else if (vendor == "AuthenticAMD") {\n        std::cout << "AMD CPU detected." << std::endl;\n    } else {\n        std::cout << "Unknown CPU vendor: " << vendor << std::endl;\n    }\n    return 0;\n}