#include <boost/shared_ptr.hpp>\n#include <boost/bind.hpp>\n#include <boost/thread/condition_variable.hpp>\n#include <boost/thread/thread.hpp>\n#include <boost/thread/mutex.hpp>\n\nclass CFilter\n{\n    // other members...\n    boost::shared_ptr<boost::thread> m_thread;\n    boost::mutex m_mutex;\n    boost::condition_variable m_change;\n    // other members...\n\n    void process(CData **s);\n};\n\nvoid CFilter::process(CData **s)\n{\n    boost::unique_lock<boost::mutex> bufferLock(m_mutex);\n    while (!m_bStop)\n        m_change.wait(bufferLock);  // <- line 68\n\n    // ... further processing\n}