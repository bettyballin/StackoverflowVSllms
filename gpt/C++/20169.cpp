amespace {\n    void doProcessA(std::vector<int>& data, int dataMember) {\n        // implementation...\n    }\n\n    void doProcessB(std::vector<int>& data, int otherDataMember) {\n        // implementation...\n    }\n}\n\nstd::vector<int> MyUsefulClass::processUsefulData(std::vector<int>& data) {\n    doProcessA(data, dataMember_);\n    doProcessB(data, otherDataMember_);\n    return data;\n}