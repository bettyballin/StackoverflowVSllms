#include <windows.h>\n#include <iostream>\n\nbool IsServerMultiThreaded(IUnknown* pServer)\n{\n    HRESULT hr;\n    IGlobalInterfaceTable* pGIT = nullptr;\n    hr = CoCreateInstance(CLSID_StdGlobalInterfaceTable, nullptr, CLSCTX_INPROC_SERVER, IID_IGlobalInterfaceTable, (void**)&pGIT);\n    if (FAILED(hr))\n    {\n        std::cerr << "Failed to create Global Interface Table\n";\n        return false;\n    }\n\n    DWORD dwCookie;\n    hr = pGIT->RegisterInterfaceInGlobal(pServer, IID_IUnknown, &dwCookie);\n    if (FAILED(hr))\n    {\n        pGIT->Release();\n        std::cerr << "Failed to register interface in GIT\n";\n        return false;\n    }\n\n    IUnknown* pUnk = nullptr;\n    hr = pGIT->GetInterfaceFromGlobal(dwCookie, IID_IUnknown, (void**)&pUnk);\n    pGIT->RevokeInterfaceFromGlobal(dwCookie);\n    pGIT->Release();\n\n    if (SUCCEEDED(hr) && pUnk)\n    {\n        pUnk->Release();\n        return true; // Server is multi-threaded\n    }\n\n    return false; // Server is apartment-threaded\n}