#include <windows.h>\n#include <iostream>\n\nint main() {\n    STARTUPINFO si;\n    PROCESS_INFORMATION pi;\n\n    ZeroMemory(&si, sizeof(si));\n    si.cb = sizeof(si);\n    ZeroMemory(&pi, sizeof(pi));\n\n    // Path to the child process executable\n    LPCSTR lpApplicationName = "B.exe";\n\n    // Create the child process with debugging enabled\n    if (!CreateProcess(lpApplicationName,   // Application name\n                       NULL,                // Command line arguments\n                       NULL,                // Process handle not inheritable\n                       NULL,                // Thread handle not inheritable\n                       FALSE,               // Set handle inheritance to FALSE\n                       DEBUG_ONLY_THIS_PROCESS, // Creation flags\n                       NULL,                // Use parent's environment block\n                       NULL,                // Use parent's starting directory \n                       &si,                 // Pointer to STARTUPINFO structure\n                       &pi)                 // Pointer to PROCESS_INFORMATION structure\n    ) {\n        std::cerr << "CreateProcess failed (" << GetLastError() << ").\n";\n        return 1;\n    }\n\n    // Wait for the child process to exit\n    WaitForSingleObject(pi.hProcess, INFINITE);\n\n    // Close process and thread handles\n    CloseHandle(pi.hProcess);\n    CloseHandle(pi.hThread);\n\n    return 0;\n}