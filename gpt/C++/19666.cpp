#include <exception>\n#include <string>\n\nclass MyCustomException : public std::exception {\npublic:\n    explicit MyCustomException(const std::string& message) : msg_(message) {}\n\n    virtual const char* what() const noexcept override {\n        return msg_.c_str();\n    }\n\nprivate:\n    std::string msg_;\n};\n\nvoid someFunction(int argument) {\n    if (argument < 0) {\n        throw MyCustomException("Argument must be non-negative");\n    }\n    // Function logic here\n}\n\nint main() {\n    try {\n        someFunction(-1);\n    } catch (const MyCustomException& e) {\n        // Handle the exception\n        std::cerr << "Caught custom exception: " << e.what() << std::endl;\n    }\n    return 0;\n}