#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n\nusing namespace std;\n\nclass A {\npublic:\n    A(string a): _a(a) {}\n    bool operator==(const A& p) const {\n        return p._a == _a; \n    }\n    string getValue() const {\n        return _a;\n    }\n\nprivate: \n    string _a;\n};\n\nint main() {\n    vector<A*> va;\n\n    va.push_back(new A("one"));\n    va.push_back(new A("two"));\n    va.push_back(new A("three"));\n\n    auto it = find_if(va.begin(), va.end(), [](A* obj) {\n        return *obj == A("two");\n    });\n\n    if (it != va.end()) {\n        cout << "Found: " << (*it)->getValue() << endl;\n    } else {\n        cout << "Not Found" << endl;\n    }\n\n    // Clean up dynamically allocated memory\n    for (A* ptr : va) {\n        delete ptr;\n    }\n\n    return 0;\n}