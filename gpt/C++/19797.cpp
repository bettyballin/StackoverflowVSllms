#include <d3d9.h>\n#include <iostream>\n\n#pragma comment (lib, "d3d9.lib")\n\nvoid GetGraphicsCardInfo()\n{\n    // Create the Direct3D interface\n    IDirect3D9* pD3D = Direct3DCreate9(D3D_SDK_VERSION);\n    if (pD3D == nullptr)\n    {\n        std::cerr << "Failed to create IDirect3D9 interface" << std::endl;\n        return;\n    }\n\n    // Get the number of adapters\n    UINT adapterCount = pD3D->GetAdapterCount();\n\n    for (UINT i = 0; i < adapterCount; ++i)\n    {\n        // Get the adapter identifier\n        D3DADAPTER_IDENTIFIER9 adapterIdentifier;\n        if (SUCCEEDED(pD3D->GetAdapterIdentifier(i, 0, &adapterIdentifier)))\n        {\n            // Print the device description and vendor ID\n            std::cout << "Graphics Card " << i << ":" << std::endl;\n            std::cout << "  Description: " << adapterIdentifier.Description << std::endl;\n            std::cout << "  Device Name: " << adapterIdentifier.DeviceName << std::endl;\n            std::cout << "  Vendor ID: " << adapterIdentifier.VendorId << std::endl;\n            std::cout << "  Device ID: " << adapterIdentifier.DeviceId << std::endl;\n            std::cout << "  SubSys ID: " << adapterIdentifier.SubSysId << std::endl;\n            std::cout << "  Revision: " << adapterIdentifier.Revision << std::endl;\n        }\n    }\n\n    // Release the Direct3D interface\n    pD3D->Release();\n}\n\nint main()\n{\n    GetGraphicsCardInfo();\n    return 0;\n}