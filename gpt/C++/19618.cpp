HRESULT CYourClass::GetImage(SAFEARRAY **pArray)\n{\n    if (!pArray)\n        return E_POINTER;\n\n    // Suppose you have the image data in a BYTE array called imageData and its size in imageSize\n    BYTE *imageData = ...;\n    long imageSize = ...;\n\n    // Create the SAFEARRAY\n    SAFEARRAYBOUND bounds;\n    bounds.lLbound = 0;\n    bounds.cElements = imageSize;\n    \n    SAFEARRAY *pSafeArray = SafeArrayCreate(VT_UI1, 1, &bounds);\n    if (!pSafeArray)\n        return E_OUTOFMEMORY;\n\n    // Lock the array and copy the data\n    BYTE *pData = nullptr;\n    HRESULT hr = SafeArrayAccessData(pSafeArray, (void**)&pData);\n    if (SUCCEEDED(hr))\n    {\n        memcpy(pData, imageData, imageSize);\n        SafeArrayUnaccessData(pSafeArray);\n    }\n    else\n    {\n        SafeArrayDestroy(pSafeArray);\n        return hr;\n    }\n\n    // Set the output parameter\n    *pArray = pSafeArray;\n    return S_OK;\n}