// Define the struct to manage each LED's state\nstruct LED {\n  int pin;\n  int value;\n  int step;\n  unsigned long previousMillis;\n  int inDelay;\n  int outDelay;\n};\n\nLED leds[] = {\n  {9, 0, 5, 0, 50, 30},  // LED on pin 9\n  {10, 0, 5, 0, 50, 30}  // LED on pin 10 (example additional LED)\n};\nconst int numLeds = sizeof(leds) / sizeof(leds[0]);\n\nvoid setup() {\n  for (int i = 0; i < numLeds; i++) {\n    pinMode(leds[i].pin, OUTPUT);\n  }\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  unsigned long currentMillis = millis();\n  for (int i = 0; i < numLeds; i++) {\n    updateLED(leds[i], currentMillis);\n  }\n}\n\nvoid updateLED(LED &led, unsigned long currentMillis) {\n  if (led.value < 255 && (currentMillis - led.previousMillis >= led.inDelay)) {\n    led.value += led.step;\n    if (led.value > 255) led.value = 255;\n    analogWrite(led.pin, led.value);\n    led.previousMillis = currentMillis;\n  } else if (led.value == 255 && (currentMillis - led.previousMillis >= led.outDelay)) {\n    led.value -= led.step;\n    if (led.value < 0) led.value = 0;\n    analogWrite(led.pin, led.value);\n    led.previousMillis = currentMillis;\n  }\n}