#include <winldap.h>\n#include <iostream>\n\nbool searchUser(LDAP* ld, const std::string& username) {\n    const char* baseDN = "";\n    std::string filter = "(&(objectCategory=person)(objectClass=user)(|(uid=" + username + ")(cn=" + username + ")(sAMAccountName=" + username + ")))";\n    LDAPMessage* result = nullptr;\n    ULONG rc = ldap_search_s(ld, baseDN, LDAP_SCOPE_SUBTREE, filter.c_str(), nullptr, 0, &result);\n\n    if (rc != LDAP_SUCCESS) {\n        std::cerr << "LDAP search failed: " << ldap_err2string(rc) << std::endl;\n        if (result) {\n            ldap_msgfree(result);\n        }\n        return false;\n    }\n\n    // Process the search results\n    LDAPMessage* entry = ldap_first_entry(ld, result);\n    if (entry) {\n        char* dn = ldap_get_dn(ld, entry);\n        if (dn) {\n            std::cout << "Found user: " << dn << std::endl;\n            ldap_memfree(dn);\n        }\n    } else {\n        std::cout << "User not found." << std::endl;\n    }\n\n    ldap_msgfree(result);\n    return true;\n}\n\nint main() {\n    LDAP* ld = ldap_init("your_ldap_server", LDAP_PORT);\n    if (!ld) {\n        std::cerr << "Failed to initialize LDAP connection." << std::endl;\n        return 1;\n    }\n\n    ULONG version = LDAP_VERSION3;\n    ldap_set_option(ld, LDAP_OPT_PROTOCOL_VERSION, &version);\n\n    ULONG rc = ldap_simple_bind_s(ld, "your_bind_dn", "your_password");\n    if (rc != LDAP_SUCCESS) {\n        std::cerr << "LDAP bind failed: " << ldap_err2string(rc) << std::endl;\n        ldap_unbind(ld);\n        return 1;\n    }\n\n    std::string username = "testuser";\n    searchUser(ld, username);\n\n    ldap_unbind(ld);\n    return 0;\n}