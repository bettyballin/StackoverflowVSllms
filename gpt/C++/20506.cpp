#include <stdio.h>\n#include <stdarg.h>\n\nvoid MyPrintf(char const* format, va_list args) __attribute__((format(printf, 1, 0)));\nvoid MyVariadicPrintf(char const* format, ...) __attribute__((format(printf, 1, 2)));\n\nvoid MyPrintf(char const* format, va_list args)\n{\n    vprintf(format, args);\n}\n\nvoid MyVariadicPrintf(char const* format, ...)\n{\n    va_list args;\n    va_start(args, format);\n    MyPrintf(format, args);\n    va_end(args);\n}\n\nint main(int, char*)\n{\n    MyVariadicPrintf("%s" /* missing 2nd argument */);\n\n    return 0;\n}\n\n// Template function (no format attribute can be applied)\ntemplate<typename Type>\nvoid MyVariadicPrintfT(Type const* format, ...)\n{\n    va_list args;\n    va_start(args, format);\n    MyPrintf(format, args);\n    va_end(args);\n}