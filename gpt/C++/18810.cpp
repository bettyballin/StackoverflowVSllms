typedef std::map<int, LdapClient *> LdapClientMap;\n\nclass LdapClientManager {\n    LdapClientMap _ldapClientMap;\npublic:\n    LdapClient* getLdapClient(unsigned int templateID);\n};\n\nLdapClient* LdapClientManager::getLdapClient(unsigned int templateID)\n{\n    // Do we have an LdapClient\n    LdapClientMap::const_iterator it = _ldapClientMap.find(templateID);\n    if (it == _ldapClientMap.end()) { // corrected this line\n        // no existing client, lets create it\n        LdapClient* ldapClient = new LdapClient();\n        if (ldapClient == NULL) {\n            // TODO: handle out of memory condition\n        }\n\n        _ldapClientMap[templateID] = ldapClient;\n        return ldapClient;\n    }\n\n    return it->second;\n}