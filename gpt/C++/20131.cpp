boost::system::error_code error_;\nsize_t ulRead = boost::asio::read(spCon->socket(), boost::asio::buffer(_requestHeader, _requestHeader.size()), boost::asio::transfer_at_least(_requestHeader.size()), error_);\n\nif (error_) {\n    // Handle the error appropriately\n    std::cerr << "Error occurred: " << error_.message() << std::endl;\n    // You can add more specific error handling here, such as retrying the read operation, logging, or closing the connection\n} else {\n    // Proceed with memcpy or other operations as no error occurred\n    memcpy(destination, _requestHeader.data(), _requestHeader.size());\n}