#include <iostream>\n#include <windows.h>\n\nusing namespace std;\n\nint main() {\n    HKEY hkey;\n    DWORD dwDisposition, dwType, dwSize;\n    int autorun = 0x00;\n    int CD_AUTORUN_DISABLED = 0x20;\n    long errorCode;\n\n    errorCode = RegOpenKeyEx(HKEY_CURRENT_USER, TEXT("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer"), 0, KEY_ALL_ACCESS, &hkey);\n\n    if (errorCode == ERROR_SUCCESS) {\n        dwType = REG_DWORD;\n        dwSize = sizeof(autorun);\n        errorCode = RegQueryValueEx(hkey, TEXT("NoDriveTypeAutoRun"), NULL, &dwType, (PBYTE)&autorun, &dwSize);\n\n        cout << "Autorun value: " << autorun << endl;\n        if ((autorun & CD_AUTORUN_DISABLED) == 0x20) {\n            int newAutorun = (autorun - CD_AUTORUN_DISABLED);\n            cout << "New value: " << newAutorun << endl;\n            errorCode = RegSetValueEx(hkey, TEXT("NoDriveTypeAutoRun"), 0, REG_DWORD, (PBYTE)&newAutorun, sizeof(newAutorun));\n            if (errorCode == ERROR_SUCCESS) {\n                errorCode = RegCloseKey(hkey);\n                if (errorCode == ERROR_SUCCESS) {\n                    cout << "Value changed." << endl;\n                }\n            } else {\n                cout << "Value change failed, error code: " << errorCode << endl;\n            }\n        } else {\n            cout << "Keep current value." << endl;\n        }\n\n    } else {\n        if (errorCode == ERROR_ACCESS_DENIED) {\n            cout << "Access denied." << endl;\n        } else {\n            cout << "Error! " << errorCode << " : " << ERROR_SUCCESS << endl;\n        }\n    }\n\n    return 0;\n}