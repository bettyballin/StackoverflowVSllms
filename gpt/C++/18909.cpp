#include <iostream>\n#include <fstream>\n#include <vector>\n\nbool getJpegDimensions(const std::string& filename, int& width, int& height) {\n    std::ifstream file(filename, std::ios::binary);\n    if (!file.is_open()) {\n        std::cerr << "Cannot open file: " << filename << std::endl;\n        return false;\n    }\n\n    std::vector<unsigned char> buffer(2);\n    while (file.read(reinterpret_cast<char*>(buffer.data()), 2)) {\n        if (buffer[0] == 0xFF && buffer[1] == 0xC0) {\n            file.seekg(3, std::ios_base::cur); // Skip 3 bytes\n\n            unsigned char dimensions[4];\n            file.read(reinterpret_cast<char*>(dimensions), 4);\n            height = (dimensions[0] << 8) + dimensions[1];\n            width = (dimensions[2] << 8) + dimensions[3];\n\n            file.close();\n            return true;\n        }\n\n        if (buffer[0] != 0xFF) {\n            break;\n        }\n\n        unsigned char lengthBytes[2];\n        file.read(reinterpret_cast<char*>(lengthBytes), 2);\n        int length = (lengthBytes[0] << 8) + lengthBytes[1];\n\n        file.seekg(length - 2, std::ios_base::cur);\n    }\n\n    file.close();\n    std::cerr << "Not a valid JPEG file or dimensions not found." << std::endl;\n    return false;\n}\n\nint main() {\n    std::string filename = "example.jpg";\n    int width, height;\n\n    if (getJpegDimensions(filename, width, height)) {\n        std::cout << "Width: " << width << ", Height: " << height << std::endl;\n    } else {\n        std::cerr << "Failed to get dimensions." << std::endl;\n    }\n\n    return 0;\n}