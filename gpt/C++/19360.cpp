#ifndef MSGSRV_H_\n#define MSGSRV_H_\n\n#include <iostream>\n#include <boost/asio.hpp>\n#include <boost/array.hpp>\n#include <boost/bind.hpp>\n\nnamespace msgSrv {\n\nclass msgSrv {\n\nprivate:\n    boost::asio::ip::udp::socket *asioSocket;\n    boost::asio::io_service *asioIoService;\n    int listenPort;\n    boost::array<char, 128> rcvBuff; // Correctly define the size of the array\n    boost::asio::ip::udp::endpoint lastRcvdPcktEndp;\n\npublic:\n    msgSrv(int listenPort);\n    virtual ~msgSrv();\n\n    void start();\n    void pckRcvd(const boost::system::error_code &error, std::size_t bytesRcvd); // Make error parameter const reference\n};\n\n}\n\n#endif // MSGSRV_H_