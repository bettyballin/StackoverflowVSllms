m_accept_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\nif (m_accept_fd == INVALID_SOCKET)\n{\n  return false;\n}\n\nint optval = 1;\n\nif (setsockopt(m_accept_fd, SOL_SOCKET, SO_REUSEADDR,\n                (char*)&optval, sizeof(optval)))\n{\n  closesocket(m_accept_fd);\n  m_accept_fd = INVALID_SOCKET;\n  return false;\n}\n\nstruct sockaddr_in local_addr;\nlocal_addr.sin_family = AF_INET;\nlocal_addr.sin_addr.s_addr = INADDR_ANY;\nlocal_addr.sin_port = htons(m_port);\n\nif (bind(m_accept_fd, (struct sockaddr *)&local_addr,\n         sizeof(struct sockaddr_in)) == SOCKET_ERROR)\n{\n  closesocket(m_accept_fd);\n  return false;\n}\n\n// Increase the backlog value\nif (listen(m_accept_fd, 10) == SOCKET_ERROR)\n{\n  closesocket(m_accept_fd);\n  return false;\n}