#include "matrix.h"\n#include "mclmcrrt.h"\n\n// Function prototypes\nextern bool mlfYourFunction(...); // Your MATLAB function\nextern mxArray* mlfGetLastError(); // The lasterror() function\n\nvoid callMatlabFunction() {\n    if (!mlfYourFunction(...)) {\n        // Function failed, get the last error\n        mxArray *errorInfo = mlfGetLastError();\n        \n        if (errorInfo != NULL) {\n            // Process the error information\n            mxArray *message = mxGetField(errorInfo, 0, "message");\n            if (message != NULL) {\n                char *errorMsg = mxArrayToString(message);\n                if (errorMsg != NULL) {\n                    printf("MATLAB error: %s\n", errorMsg);\n                    mxFree(errorMsg);\n                }\n            }\n            mxDestroyArray(errorInfo);\n        } else {\n            printf("Failed to retrieve error information.\n");\n        }\n    } else {\n        // Function succeeded\n        printf("Function executed successfully.\n");\n    }\n}\n\nint main() {\n    if (!mclInitializeApplication(NULL, 0)) {\n        fprintf(stderr, "Could not initialize the application.\n");\n        return -1;\n    }\n\n    if (!YourLibraryInitialize()) {\n        fprintf(stderr, "Could not initialize the library.\n");\n        return -1;\n    }\n\n    callMatlabFunction();\n\n    YourLibraryTerminate();\n    mclTerminateApplication();\n    return 0;\n}