#include <cstdio>\n#include <cstdlib>\n#include <new>\n#include "base.hpp"\n\nvoid* operator new(size_t size) {\n    std::printf("New of library called\n");\n    void *p = std::malloc(size);\n    if (p == 0) // did malloc succeed?\n        throw std::bad_alloc(); // ANSI/ISO compliant behavior\n    return p;\n}\n\nvoid operator delete(void* p) {\n    std::printf("Delete of library called\n");\n    std::free(p);\n}\n\nclass Derived : public Base {\npublic:\n    Derived() : Base(10) { }\n};\n\nextern "C" {\n    Base* create() {\n        return new Derived;\n    }\n    void destroy(Base* p) {\n        delete p;\n    }\n}