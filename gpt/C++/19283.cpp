#include <iostream>\n#include <vector>\n\nclass Container {\nprivate:\n    std::vector<int> data;\npublic:\n    // Non-const version: allows modification\n    int& at(size_t index) {\n        return data.at(index);\n    }\n\n    // Const version: read-only access\n    const int& at(size_t index) const {\n        return data.at(index);\n    }\n\n    void add(int value) {\n        data.push_back(value);\n    }\n};\n\nint main() {\n    Container c;\n    c.add(10);\n    c.add(20);\n\n    // Non-const object: calls non-const version\n    c.at(0) = 100;\n\n    const Container cc = c;\n    // Const object: calls const version\n    std::cout << cc.at(0) << std::endl;\n\n    return 0;\n}