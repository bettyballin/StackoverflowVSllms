#include <windows.h>\n\nHDC WrapBufferAsDC(void* pBuffer, int width, int height) {\n    BITMAPINFO bmi;\n    ZeroMemory(&bmi, sizeof(bmi));\n    bmi.bmiHeader.biSize = sizeof(BITMAPINFOHEADER);\n    bmi.bmiHeader.biWidth = width;\n    bmi.bmiHeader.biHeight = -height; // negative to indicate a top-down DIB\n    bmi.bmiHeader.biPlanes = 1;\n    bmi.bmiHeader.biBitCount = 24;\n    bmi.bmiHeader.biCompression = BI_RGB;\n    bmi.bmiHeader.biSizeImage = 0;\n    bmi.bmiHeader.biXPelsPerMeter = 0;\n    bmi.bmiHeader.biYPelsPerMeter = 0;\n    bmi.bmiHeader.biClrUsed = 0;\n    bmi.bmiHeader.biClrImportant = 0;\n\n    void* pBits;\n    HDC hdc = CreateCompatibleDC(NULL);\n    HBITMAP hbm = CreateDIBSection(hdc, &bmi, DIB_RGB_COLORS, &pBits, NULL, 0);\n\n    if (hbm == NULL) {\n        DeleteDC(hdc);\n        return NULL;\n    }\n\n    // Point the DIBSection to the existing memory buffer\n    memcpy(pBits, pBuffer, width * height * 3); // Assuming 24bpp (3 bytes per pixel)\n\n    SelectObject(hdc, hbm);\n\n    return hdc;\n}\n\nint main() {\n    // Your original buffer\n    void* originalBuffer = ...; // Provide your buffer here\n    int width = 1280;\n    int height = 800;\n\n    HDC hdc = WrapBufferAsDC(originalBuffer, width, height);\n    \n    if (hdc) {\n        // Use BitBlt or other GDI functions with hdc\n\n        // Clean up resources\n        DeleteDC(hdc);\n    }\n\n    return 0;\n}