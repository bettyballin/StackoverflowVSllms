#include <d3d9.h>\n#pragma comment (lib, "d3d9.lib")\n\n// Global variables\nLPDIRECT3D9 d3d;\nLPDIRECT3DDEVICE9 d3ddev;\n\n// Function prototypes\nvoid initD3D(HWND hWnd);\nvoid renderFrame();\nvoid cleanD3D();\nLRESULT CALLBACK WindowProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);\n\n// Main function\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {\n    HWND hWnd;\n    WNDCLASSEX wc;\n\n    ZeroMemory(&wc, sizeof(WNDCLASSEX));\n    wc.cbSize = sizeof(WNDCLASSEX);\n    wc.style = CS_HREDRAW | CS_VREDRAW;\n    wc.lpfnWndProc = WindowProc;\n    wc.hInstance = hInstance;\n    wc.hCursor = LoadCursor(NULL, IDC_ARROW);\n    wc.lpszClassName = L"WindowClass";\n\n    RegisterClassEx(&wc);\n\n    hWnd = CreateWindowEx(NULL,\n                          L"WindowClass",\n                          L"Our Direct3D Program",\n                          WS_OVERLAPPEDWINDOW,\n                          0, 0,\n                          800, 600,\n                          NULL,\n                          NULL,\n                          hInstance,\n                          NULL);\n\n    ShowWindow(hWnd, nCmdShow);\n\n    initD3D(hWnd);\n\n    MSG msg;\n\n    while (TRUE) {\n        while (PeekMessage(&msg, NULL, 0, 0, PM_REMOVE)) {\n            TranslateMessage(&msg);\n            DispatchMessage(&msg);\n        }\n\n        if (msg.message == WM_QUIT)\n            break;\n\n        renderFrame();\n    }\n\n    cleanD3D();\n\n    return msg.wParam;\n}\n\nvoid initD3D(HWND hWnd) {\n    d3d = Direct3DCreate9(D3D_SDK_VERSION);\n\n    D3DPRESENT_PARAMETERS d3dpp;\n    ZeroMemory(&d3dpp, sizeof(d3dpp));\n    d3dpp.Windowed = TRUE;\n    d3dpp.SwapEffect = D3DSWAPEFFECT_DISCARD;\n    d3dpp.hDeviceWindow = hWnd;\n\n    d3d->CreateDevice(D3DADAPTER_DEFAULT,\n                      D3DDEVTYPE_HAL,\n                      hWnd,\n                      D3DCREATE_SOFTWARE_VERTEXPROCESSING,\n                      &d3dpp,\n                      &d3ddev);\n}\n\nvoid renderFrame() {\n    d3ddev->Clear(0, NULL, D3DCLEAR_TARGET, D3DCOLOR_XRGB(255, 0, 0), 1.0f, 0); // Red overlay\n    d3ddev->BeginScene();\n\n    // Add any additional rendering code here\n\n    d3ddev->EndScene();\n    d3ddev->Present(NULL, NULL, NULL, NULL);\n}\n\nvoid cleanD3D() {\n    d3ddev->Release();\n    d3d->Release();\n}\n\nLRESULT CALLBACK WindowProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {\n    switch (message) {\n        case WM_DESTROY:\n            PostQuitMessage(0);\n            return 0;\n    }\n\n    return DefWindowProc(hWnd, message, wParam, lParam);\n}