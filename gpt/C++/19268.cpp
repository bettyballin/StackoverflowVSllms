#include <iostream>\n#include <cstring>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n\nvoid error(const char *msg) {\n    perror(msg);\n    exit(1);\n}\n\nint main() {\n    int sockfd, newsockfd, portno = 12345;\n    socklen_t clilen;\n    char buffer[256];\n    struct sockaddr_in serv_addr, cli_addr;\n    int n;\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    if (sockfd < 0)\n        error("ERROR opening socket");\n\n    bzero((char *) &serv_addr, sizeof(serv_addr));\n    serv_addr.sin_family = AF_INET;\n    serv_addr.sin_addr.s_addr = INADDR_ANY;\n    serv_addr.sin_port = htons(portno);\n\n    if (bind(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)\n        error("ERROR on binding");\n\n    listen(sockfd, 5);\n    clilen = sizeof(cli_addr);\n    newsockfd = accept(sockfd, (struct sockaddr *) &cli_addr, &clilen);\n    if (newsockfd < 0)\n        error("ERROR on accept");\n\n    bzero(buffer, 256);\n    n = read(newsockfd, buffer, 255);\n    if (n < 0) error("ERROR reading from socket");\n\n    std::cout << "Here is the message: " << buffer << std::endl;\n\n    close(newsockfd);\n    close(sockfd);\n    return 0;\n}