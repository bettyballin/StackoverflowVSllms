#include <iostream>\n#include <dns_sd.h>\n\nvoid DNSSD_API registerCallback(\n    DNSServiceRef sdRef,\n    DNSServiceFlags flags,\n    DNSServiceErrorType errorCode,\n    const char *name,\n    const char *regtype,\n    const char *domain,\n    void *context)\n{\n    if (errorCode == kDNSServiceErr_NoError)\n    {\n        std::cout << "Service registered: " << name << "." << regtype << domain << std::endl;\n    }\n    else\n    {\n        std::cerr << "Error registering service: " << errorCode << std::endl;\n    }\n}\n\nint main()\n{\n    DNSServiceRef serviceRef;\n    DNSServiceErrorType error;\n\n    error = DNSServiceRegister(\n        &serviceRef,\n        0,                  // Flags\n        0,                  // InterfaceIndex\n        "MyService",        // Name\n        "_myservice._tcp",  // Service type\n        NULL,               // Domain\n        NULL,               // Host\n        htons(12345),       // Port\n        0,                  // TXT record length\n        NULL,               // TXT record\n        registerCallback,   // Callback\n        NULL);              // Context\n\n    if (error != kDNSServiceErr_NoError)\n    {\n        std::cerr << "DNSServiceRegister error: " << error << std::endl;\n        return 1;\n    }\n\n    DNSServiceProcessResult(serviceRef);\n    DNSServiceRefDeallocate(serviceRef);\n\n    return 0;\n}