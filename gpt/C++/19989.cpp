#include <windows.h>\n#include <sddl.h>\n#include <tchar.h>\n#include <iostream>\n\nint main()\n{\n    HKEY hKey;\n    LPCWSTR subKey = L"SOFTWARE\\MyApplication";\n    SECURITY_ATTRIBUTES sa;\n    PSECURITY_DESCRIPTOR pSD = NULL;\n\n    // Convert the string security descriptor into a real one\n    if (ConvertStringSecurityDescriptorToSecurityDescriptor(\n        L"D:(A;;GA;;;WD)", // DACL granting all access to everyone (WD - World)\n        SDDL_REVISION_1,\n        &pSD,\n        NULL))\n    {\n        sa.nLength = sizeof(SECURITY_ATTRIBUTES);\n        sa.lpSecurityDescriptor = pSD;\n        sa.bInheritHandle = FALSE;\n\n        // Create the registry key with the specified security attributes\n        LONG result = RegCreateKeyEx(\n            HKEY_LOCAL_MACHINE,\n            subKey,\n            0,\n            NULL,\n            REG_OPTION_NON_VOLATILE,\n            KEY_ALL_ACCESS,\n            &sa,\n            &hKey,\n            NULL);\n\n        if (result == ERROR_SUCCESS)\n        {\n            std::wcout << L"Registry key created successfully." << std::endl;\n            RegCloseKey(hKey);\n        }\n        else\n        {\n            std::wcout << L"Failed to create registry key. Error: " << result << std::endl;\n        }\n\n        // Free the security descriptor\n        LocalFree(pSD);\n    }\n    else\n    {\n        std::wcout << L"Failed to convert security descriptor. Error: " << GetLastError() << std::endl;\n    }\n\n    return 0;\n}