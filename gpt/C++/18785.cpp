#include <pthread.h>\n#include <iostream>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <cstdlib>\nusing namespace std;\n\nint shared;\n\nvoid func() {\n    extern int shared;\n    for (int i = 0; i < 10; i++)\n        shared++;\n    cout << "Process " << getpid() << ", shared "\n         << shared << ", &shared "\n         << &shared << endl;\n}\n\nint main() {\n    extern int shared;\n    pid_t p1, p2;\n    int status;\n    shared = 0;\n\n    // First fork\n    if ((p1 = fork()) == 0) {\n        func();\n        exit(0);\n    }\n\n    // Second fork\n    if ((p2 = fork()) == 0) {\n        func();\n        exit(0);\n    }\n\n    // Parent process\n    for (int i = 0; i < 10; i++)\n        shared++;\n\n    // Wait for child processes to finish\n    waitpid(p1, &status, 0);\n    waitpid(p2, &status, 0);\n\n    cout << "shared variable is: " << shared << endl;\n    cout << "Process " << getpid() << ", shared "\n         << shared << ", &shared "\n         << &shared << endl;\n}