typedef PluginBase* (*CreatePluginObjectFunc)();\ntypedef void (*DestroyPluginObjectFunc)(PluginBase*);\n\nint main() {\n    // Load the plugin DLL\n    HMODULE hPlugin = LoadLibrary("plugin.dll");\n\n    // Get the factory functions\n    CreatePluginObjectFunc createPluginObject = reinterpret_cast<CreatePluginObjectFunc>(GetProcAddress(hPlugin, "createPluginObject"));\n    DestroyPluginObjectFunc destroyPluginObject = reinterpret_cast<DestroyPluginObjectFunc>(GetProcAddress(hPlugin, "destroyPluginObject"));\n\n    // Create and use the plugin object\n    PluginBase* obj = createPluginObject();\n    obj->doSomething();\n\n    // Destroy the plugin object\n    destroyPluginObject(obj);\n\n    // Unload the plugin DLL\n    FreeLibrary(hPlugin);\n\n    return 0;\n}