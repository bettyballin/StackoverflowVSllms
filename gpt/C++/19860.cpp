#include <cor.h>\n#include <corprof.h>\n\n// Simplified function to map native IP to IL offset\nHRESULT MapNativeToIL(ICorProfilerInfo2* pProfilerInfo, FunctionID functionID, UINT_PTR nativeIP, ULONG32* pILOffset) {\n    if (pProfilerInfo == nullptr || pILOffset == nullptr) {\n        return E_POINTER;\n    }\n    \n    ULONG32 mapSize;\n    COR_DEBUG_IL_TO_NATIVE_MAP* map = nullptr;\n    \n    // Get the size of the mapping\n    HRESULT hr = pProfilerInfo->GetILToNativeMapping(functionID, 0, &mapSize, nullptr);\n    if (FAILED(hr)) {\n        return hr;\n    }\n    \n    // Allocate memory for the map\n    map = new COR_DEBUG_IL_TO_NATIVE_MAP[mapSize];\n    if (map == nullptr) {\n        return E_OUTOFMEMORY;\n    }\n    \n    // Get the actual mapping\n    hr = pProfilerInfo->GetILToNativeMapping(functionID, mapSize, &mapSize, map);\n    if (FAILED(hr)) {\n        delete[] map;\n        return hr;\n    }\n    \n    // Find the corresponding IL offset\n    for (ULONG32 i = 0; i < mapSize; ++i) {\n        if (map[i].nativeStartOffset <= nativeIP && nativeIP < map[i].nativeEndOffset) {\n            *pILOffset = map[i].ilOffset;\n            delete[] map;\n            return S_OK;\n        }\n    }\n    \n    delete[] map;\n    return E_FAIL; // Native instruction pointer not found in map\n}