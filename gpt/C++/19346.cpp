#include <exiv2/exiv2.hpp>\n#include <iostream>\n#include <fstream>\n#include <vector>\n\n// Function to add EXIF data to a JPEG buffer\nstd::vector<char> addExifToJpegBuffer(const std::vector<char>& jpegBuffer, const std::string& exifData) {\n    // Create an Exiv2 image object from the JPEG buffer\n    Exiv2::Image::AutoPtr image = Exiv2::ImageFactory::open((Exiv2::byte*)jpegBuffer.data(), jpegBuffer.size());\n    if (image.get() == nullptr) {\n        throw std::runtime_error("Failed to open image buffer");\n    }\n\n    // Load the existing metadata\n    image->readMetadata();\n\n    // Set new EXIF data (example: setting the Artist tag)\n    Exiv2::ExifData& exifData = image->exifData();\n    exifData["Exif.Image.Artist"] = "Your Name";\n\n    // Write the metadata back into the image\n    image->setExifData(exifData);\n    image->writeMetadata();\n\n    // Save the modified image back to a buffer\n    Exiv2::BasicIo::AutoPtr output = Exiv2::BasicIoFactory::open();\n    output->write(image->io());\n    \n    // Read the modified image data into a vector\n    std::vector<char> modifiedBuffer(output->size());\n    output->read((Exiv2::byte*)modifiedBuffer.data(), modifiedBuffer.size());\n\n    return modifiedBuffer;\n}\n\nint main() {\n    // Example JPEG buffer (replace with actual data)\n    std::vector<char> jpegBuffer; // Fill this with your JPEG data\n\n    try {\n        std::vector<char> modifiedBuffer = addExifToJpegBuffer(jpegBuffer, "Your EXIF Data");\n\n        // Save the modified buffer to a file (optional)\n        std::ofstream outFile("output.jpg", std::ios::binary);\n        outFile.write(modifiedBuffer.data(), modifiedBuffer.size());\n        outFile.close();\n\n        std::cout << "EXIF data added successfully!" << std::endl;\n    } catch (const std::exception& e) {\n        std::cerr << "Error: " << e.what() << std::endl;\n    }\n\n    return 0;\n}