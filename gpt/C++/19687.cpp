#include <iostream>\n#include <list>\n\nbool multiple_sieve(std::list<int>& num_list, std::list<int>::iterator list_iter)\n{\n    auto last_element_iter = --num_list.end();\n\n    for (auto elements_iter = std::next(list_iter); elements_iter != num_list.end();)\n    {\n        if ((*elements_iter % *list_iter == 0) && (*elements_iter <= *last_element_iter) && (*list_iter != 1))\n            elements_iter = num_list.erase(elements_iter);\n        else\n            ++elements_iter;\n    }\n    return true;\n}\n\nstd::list<int>& prime_sieve(std::list<int>& num_list)\n{\n    for (auto list_iter = num_list.begin(); list_iter != num_list.end(); ++list_iter)\n    {\n        multiple_sieve(num_list, list_iter);\n    }\n    return num_list;\n}\n\nint main()\n{\n    std::list<int> num_list;\n    for (int i = 2; i <= 100; ++i) {\n        num_list.push_back(i);\n    }\n\n    num_list = prime_sieve(num_list);\n\n    for (const auto& num : num_list) {\n        std::cout << num << " ";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}