#include <atlbase.h>\n#include <atlcom.h>\n#include <Outlook.h>\n\nclass ATL_NO_VTABLE CMyAddin :\n    public CComObjectRootEx<CComSingleThreadModel>,\n    public CComCoClass<CMyAddin, &CLSID_MyAddin>,\n    public IDispatchImpl<IDTExtensibility2, &IID_IDTExtensibility2, &LIBID_AddinLib, /*wMajor =*/ 1, /*wMinor =*/ 0>\n{\npublic:\n    CMyAddin() {}\n\n    DECLARE_REGISTRY_RESOURCEID(IDR_MYADDIN)\n\n    BEGIN_COM_MAP(CMyAddin)\n        COM_INTERFACE_ENTRY(IDTExtensibility2)\n        COM_INTERFACE_ENTRY2(IDispatch, IDTExtensibility2)\n    END_COM_MAP()\n\n    // IDTExtensibility2 Methods\n    STDMETHOD(OnConnection)(IDispatch* Application, ext_ConnectMode ConnectMode, IDispatch* AddInInst, SAFEARRAY** custom)\n    {\n        CComPtr<Outlook::_Application> spApp;\n        Application->QueryInterface(__uuidof(Outlook::_Application), (void**)&spApp);\n\n        // Add button to the navigation pane here\n\n        return S_OK;\n    }\n\n    STDMETHOD(OnDisconnection)(ext_DisconnectMode RemoveMode, SAFEARRAY** custom) { return S_OK; }\n    STDMETHOD(OnAddInsUpdate)(SAFEARRAY** custom) { return S_OK; }\n    STDMETHOD(OnStartupComplete)(SAFEARRAY** custom) { return S_OK; }\n    STDMETHOD(OnBeginShutdown)(SAFEARRAY** custom) { return S_OK; }\n\nprivate:\n    void AddButtonToNavigationPane(CComPtr<Outlook::_Application>& spApp)\n    {\n        CComPtr<Outlook::_NameSpace> spNamespace;\n        spApp->GetNamespace(CComBSTR("MAPI"), &spNamespace);\n\n        // TODO: Add code to add button to navigation pane\n    }\n};\n\nOBJECT_ENTRY_AUTO(__uuidof(MyAddin), CMyAddin)