HRESULT MyClass::Advise(IUnknown* pSinkUnk, DWORD* pdwCookie) {\n    if (pSinkUnk == nullptr || pdwCookie == nullptr) {\n        return E_POINTER;\n    }\n\n    // Interface query to ensure the sink supports the required interface\n    IMySinkInterface* pSink = nullptr;\n    HRESULT hr = pSinkUnk->QueryInterface(IID_IMySinkInterface, (void**)&pSink);\n    if (FAILED(hr)) {\n        return hr;\n    }\n\n    // Store the sink and generate a cookie\n    *pdwCookie = ++m_dwNextCookie;\n    m_mapSinks[*pdwCookie] = pSink;\n\n    return S_OK;\n}\n\n// Later in your class definition\nstd::map<DWORD, IMySinkInterface*> m_mapSinks;\nDWORD m_dwNextCookie = 0;