#include "llvm/IR/IRBuilder.h"\n   #include "llvm/IR/LLVMContext.h"\n   #include "llvm/IR/Module.h"\n   #include "llvm/Support/raw_ostream.h"\n\n   using namespace llvm;\n\n   int main() {\n       LLVMContext Context;\n       Module *ModuleOb = new Module("my compiler", Context);\n       IRBuilder<> Builder(Context);\n\n       // Example: Generating code for 'print("Hello, World!")'\n       FunctionType *funcType = FunctionType::get(Builder.getVoidTy(), false);\n       Function *mainFunc = Function::Create(funcType, Function::ExternalLinkage, "main", ModuleOb);\n       BasicBlock *entry = BasicBlock::Create(Context, "entry", mainFunc);\n       Builder.SetInsertPoint(entry);\n\n       // Example logic: Just printing a message\n       Builder.CreateRetVoid();\n\n       ModuleOb->print(errs(), nullptr);\n       delete ModuleOb;\n       return 0;\n   }