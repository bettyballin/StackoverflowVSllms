#include <windows.h>\n#include <iostream>\n#include <vector>\n\nvoid GetDLLVersion(const char* dllPath) {\n    DWORD verHandle = 0;\n    UINT size = 0;\n    LPBYTE lpBuffer = NULL;\n    DWORD verSize = GetFileVersionInfoSize(dllPath, &verHandle);\n\n    if (verSize != 0) {\n        std::vector<char> verData(verSize);\n\n        if (GetFileVersionInfo(dllPath, verHandle, verSize, verData.data())) {\n            if (VerQueryValue(verData.data(), "\\", (VOID FAR* FAR*)&lpBuffer, &size)) {\n                if (size) {\n                    VS_FIXEDFILEINFO *verInfo = (VS_FIXEDFILEINFO *)lpBuffer;\n                    if (verInfo->dwSignature == 0xfeef04bd) {\n                        // Extract the version information\n                        std::cout << "Version: "\n                                  << ((verInfo->dwFileVersionMS >> 16) & 0xffff) << '.'\n                                  << ((verInfo->dwFileVersionMS >> 0) & 0xffff) << '.'\n                                  << ((verInfo->dwFileVersionLS >> 16) & 0xffff) << '.'\n                                  << ((verInfo->dwFileVersionLS >> 0) & 0xffff) << std::endl;\n                    }\n                }\n            }\n        } else {\n            std::cerr << "Failed to get version info." << std::endl;\n        }\n    } else {\n        std::cerr << "Failed to get version info size." << std::endl;\n    }\n}\n\nint main() {\n    const char* dllPath = "path_to_your_dll.dll";\n    GetDLLVersion(dllPath);\n    return 0;\n}