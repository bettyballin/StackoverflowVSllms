#include <mshtml.h>\n#include <exdisp.h>\n#include <mshtmdid.h>\n#include <atlbase.h>\n#include <atlcom.h>\n\nclass CMouseEventHandler : public IDispatch {\npublic:\n    // IUnknown methods\n    STDMETHODIMP QueryInterface(REFIID riid, void **ppvObject) {\n        if (riid == IID_IUnknown || riid == IID_IDispatch) {\n            *ppvObject = static_cast<IDispatch*>(this);\n            AddRef();\n            return S_OK;\n        }\n        return E_NOINTERFACE;\n    }\n    STDMETHODIMP_(ULONG) AddRef() { return ++m_refCount; }\n    STDMETHODIMP_(ULONG) Release() {\n        ULONG refCount = --m_refCount;\n        if (refCount == 0) delete this;\n        return refCount;\n    }\n\n    // IDispatch methods\n    STDMETHODIMP GetTypeInfoCount(UINT *pctinfo) { return E_NOTIMPL; }\n    STDMETHODIMP GetTypeInfo(UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo) { return E_NOTIMPL; }\n    STDMETHODIMP GetIDsOfNames(REFIID riid, LPOLESTR *rgszNames, UINT cNames, LCID lcid, DISPID *rgDispId) { return E_NOTIMPL; }\n\n    STDMETHODIMP Invoke(DISPID dispIdMember, REFIID riid, LCID lcid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr) {\n        if (dispIdMember == DISPID_HTMLELEMENTEVENTS2_ONMOUSEUP) {\n            if (pDispParams->cArgs > 0 && pDispParams->rgvarg[0].vt == VT_DISPATCH) {\n                CComPtr<IHTMLEventObj> spEventObj;\n                pDispParams->rgvarg[0].pdispVal->QueryInterface(IID_IHTMLEventObj, (void**)&spEventObj);\n                if (spEventObj) {\n                    long x = 0, y = 0;\n                    spEventObj->get_clientX(&x);\n                    spEventObj->get_clientY(&y);\n                    // Handle the mouse event here\n                }\n            }\n        }\n        return S_OK;\n    }\n\nprivate:\n    ULONG m_refCount = 1;\n};\n\n// Usage example\nvoid AttachMouseHandler(IHTMLElement* pElement) {\n    CComPtr<IHTMLElement2> spElement2;\n    pElement->QueryInterface(IID_IHTMLElement2, (void**)&spElement2);\n    if (spElement2) {\n        CMouseEventHandler* pEventHandler = new CMouseEventHandler();\n        CComPtr<IDispatch> spEventHandler(pEventHandler);\n        spElement2->attachEvent(CComBSTR("onmouseup"), spEventHandler);\n    }\n}