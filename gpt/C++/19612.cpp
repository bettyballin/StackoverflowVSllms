#include <windows.h>\n#include <objbase.h>\n#include <iostream>\n\nHRESULT RegisterTypeLibraryForUser(ITypeLib* pTypeLib, const wchar_t* szFullPath)\n{\n    HKEY hKey;\n    HRESULT hr;\n\n    // Open HKEY_CURRENT_USER\Software\Classes\n    if (RegOpenKeyEx(HKEY_CURRENT_USER, L"Software\\Classes", 0, KEY_ALL_ACCESS, &hKey) != ERROR_SUCCESS) {\n        return E_FAIL;\n    }\n\n    // Override HKEY_CLASSES_ROOT to point to HKEY_CURRENT_USER\Software\Classes\n    if (RegOverridePredefKey(HKEY_CLASSES_ROOT, hKey) != ERROR_SUCCESS) {\n        RegCloseKey(hKey);\n        return E_FAIL;\n    }\n\n    // Register the type library\n    hr = RegisterTypeLib(pTypeLib, szFullPath, NULL);\n\n    // Stop overriding HKEY_CLASSES_ROOT\n    RegOverridePredefKey(HKEY_CLASSES_ROOT, NULL);\n    RegCloseKey(hKey);\n\n    return hr;\n}\n\nint main() {\n    ITypeLib* pTypeLib;\n    // Load your type library here\n    HRESULT hr = LoadTypeLib(L"path\\to\\your\\typelib.tlb", &pTypeLib);\n    if (SUCCEEDED(hr)) {\n        hr = RegisterTypeLibraryForUser(pTypeLib, L"path\\to\\your\\typelib.tlb");\n        if (SUCCEEDED(hr)) {\n            std::wcout << L"Type library registered successfully." << std::endl;\n        } else {\n            std::wcout << L"Failed to register type library." << std::endl;\n        }\n        pTypeLib->Release();\n    } else {\n        std::wcout << L"Failed to load type library." << std::endl;\n    }\n    return 0;\n}