#include <windows.h>\n#include <iostream>\n#include <comdef.h>\n\nint main() {\n    HRESULT hr;\n    CLSID clsid;\n    LPCTSTR progID = TEXT("YourProgIDHere");\n\n    // Initialize COM library\n    hr = CoInitialize(NULL);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to initialize COM library" << std::endl;\n        return 1;\n    }\n\n    // Obtain CLSID from ProgID\n    hr = CLSIDFromProgID(progID, &clsid);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get CLSID from ProgID" << std::endl;\n        CoUninitialize();\n        return 1;\n    }\n\n    // Create an instance of the class object\n    IUnknown* pUnknown = NULL;\n    hr = CoCreateInstance(clsid, NULL, CLSCTX_INPROC_SERVER, IID_IUnknown, (void**)&pUnknown);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to create instance of the class object" << std::endl;\n        CoUninitialize();\n        return 1;\n    }\n\n    // Query for the interfaces the object supports\n    IClassFactory* pClassFactory = NULL;\n    hr = pUnknown->QueryInterface(IID_IClassFactory, (void**)&pClassFactory);\n    if (SUCCEEDED(hr)) {\n        std::cout << "IClassFactory interface is supported." << std::endl;\n        pClassFactory->Release();\n    } else {\n        std::cout << "IClassFactory interface is not supported." << std::endl;\n    }\n\n    // Release the created instance\n    pUnknown->Release();\n\n    // Uninitialize COM library\n    CoUninitialize();\n\n    return 0;\n}