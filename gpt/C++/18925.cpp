#include <iostream>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <set>\n\nusing namespace std;\n\nstring ConvertInt2String(int IntVal) {\n    stringstream out;\n    out << IntVal;\n    return out.str();\n}\n\nstring Vec2Str(const vector<int>& NTg) {\n    string StTg = "";\n    for (unsigned i = 0; i < NTg.size(); i++) {\n        StTg += ConvertInt2String(NTg[i]);\n    }\n    return StTg;\n}\n\nvector<int> neighbors(const vector<int>& arg, int posNo, int baseNo) {\n    vector<int> transfVec = arg;\n    transfVec[posNo % arg.size()] = baseNo;\n    return transfVec;\n}\n\nint main() {\n    vector<int> numTag = {0, 0, 1}; // Change this to any desired seed\n\n    int TagLen = static_cast<int>(numTag.size());\n    set<string> uniqueNeighbors;\n\n    // First loop is to generate tags 1 position differ\n    for (int p = 0; p < TagLen; p++) {\n        for (int b = 0; b <= 3; b++) {\n            if (numTag[p] != b) {\n                vector<int> nbnumTag = neighbors(numTag, p, b);\n                string SnbnumTag = Vec2Str(nbnumTag);\n                uniqueNeighbors.insert(SnbnumTag);\n\n                // Second loop for tags in 2 position differ \n                for (int l = p + 1; l < TagLen; l++) {\n                    for (int c = 0; c <= 3; c++) {\n                        if (nbnumTag[l] != c) {\n                            vector<int> nbnumTag2 = neighbors(nbnumTag, l, c);\n                            string SnbnumTag2 = Vec2Str(nbnumTag2);\n                            uniqueNeighbors.insert(SnbnumTag2);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (const auto& neighbor : uniqueNeighbors) {\n        cout << neighbor << "\n";\n    }\n\n    return 0;\n}