#include "interface.h"\n#include <iostream>\n\nstruct A {\n    IClass iClass;\n    unsigned refCnt;\n};\n\nvoid A_AddRef(IRefCounted* self) {\n    A* obj = reinterpret_cast<A*>(self);\n    ++obj->refCnt;\n}\n\nvoid A_Release(IRefCounted* self) {\n    A* obj = reinterpret_cast<A*>(self);\n    if(!--obj->refCnt) {\n        delete obj;\n    }\n}\n\nvoid A_PrintSomething(IClass* self) {\n    std::cout << "Hello World from A!" << std::endl;\n}\n\nextern "C" __declspec(dllexport) IClass* CreateClass() {\n    A* obj = new A();\n    obj->iClass.refCounted.AddRef = A_AddRef;\n    obj->iClass.refCounted.Release = A_Release;\n    obj->iClass.PrintSomething = A_PrintSomething;\n    obj->refCnt = 1;\n    return &obj->iClass;\n}