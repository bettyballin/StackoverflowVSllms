#include <iostream>\n#include <objbase.h>\n\nclass MyClass : public IUnknown {\npublic:\n    MyClass() : refCount(1) {}\n\n    // IUnknown methods\n    STDMETHODIMP QueryInterface(REFIID riid, void **ppv);\n    STDMETHODIMP_(ULONG) AddRef();\n    STDMETHODIMP_(ULONG) Release();\n\nprivate:\n    ULONG refCount;\n};\n\n// Implementation of IUnknown methods\n\nSTDMETHODIMP MyClass::QueryInterface(REFIID riid, void **ppv) {\n    if (riid == IID_IUnknown) {\n        *ppv = static_cast<IUnknown*>(this);\n    } else {\n        *ppv = nullptr;\n        return E_NOINTERFACE;\n    }\n    AddRef();\n    return S_OK;\n}\n\nSTDMETHODIMP_(ULONG) MyClass::AddRef() {\n    return ++refCount;\n}\n\nSTDMETHODIMP_(ULONG) MyClass::Release() {\n    ULONG count = --refCount;\n    if (count == 0) {\n        delete this;\n    }\n    return count;\n}\n\n// Usage example\nint main() {\n    MyClass *obj = new MyClass();\n    IUnknown *pUnknown = nullptr;\n    if (SUCCEEDED(obj->QueryInterface(IID_IUnknown, (void**)&pUnknown))) {\n        std::cout << "QueryInterface succeeded" << std::endl;\n        pUnknown->Release();\n    }\n    obj->Release();\n    return 0;\n}