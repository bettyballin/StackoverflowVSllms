#include <iostream>\n#include <vector>\n#include <string>\n\nstruct Employee {\n    std::string Name;\n    int Dept;\n};\n\nvoid stableSortEmployees(std::vector<Employee>& employees) {\n    int left = 0;\n    int right = employees.size() - 1;\n\n    while (left < right) {\n        // Find the leftmost Dept == 1\n        while (left < right && employees[left].Dept == 0) {\n            left++;\n        }\n\n        // Find the rightmost Dept == 0\n        while (left < right && employees[right].Dept == 1) {\n            right--;\n        }\n\n        // Swap the elements\n        if (left < right) {\n            std::swap(employees[left], employees[right]);\n            left++;\n            right--;\n        }\n    }\n}\n\nvoid printEmployees(const std::vector<Employee>& employees) {\n    for (const auto& emp : employees) {\n        std::cout << emp.Name << "\t" << emp.Dept << std::endl;\n    }\n}\n\nint main() {\n    std::vector<Employee> employees = {\n        {"X1", 0},\n        {"X2", 1},\n        {"X3", 0},\n        {"X4", 1},\n        {"X5", 0}\n    };\n\n    std::cout << "Before sorting:\n";\n    printEmployees(employees);\n\n    stableSortEmployees(employees);\n\n    std::cout << "\nAfter sorting:\n";\n    printEmployees(employees);\n\n    return 0;\n}