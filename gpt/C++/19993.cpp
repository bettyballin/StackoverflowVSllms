#include <iostream>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/tcp.h>\n#include <unistd.h>\n\nvoid setKeepAliveOptions(int sockfd) {\n    int optval = 1;\n    socklen_t optlen = sizeof(optval);\n\n    // Enable TCP keepalive\n    if (setsockopt(sockfd, SOL_SOCKET, SO_KEEPALIVE, &optval, optlen) < 0) {\n        perror("setsockopt(SO_KEEPALIVE) failed");\n        return;\n    }\n\n    // Set the idle time before starting keepalive probes\n    optval = 60; // e.g., 60 seconds\n    if (setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPIDLE, &optval, optlen) < 0) {\n        perror("setsockopt(TCP_KEEPIDLE) failed");\n        return;\n    }\n\n    // Set the interval between keepalive probes\n    optval = 10; // e.g., 10 seconds\n    if (setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPINTVL, &optval, optlen) < 0) {\n        perror("setsockopt(TCP_KEEPINTVL) failed");\n        return;\n    }\n\n    // Set the number of keepalive probes before considering the connection dead\n    optval = 5; // e.g., 5 probes\n    if (setsockopt(sockfd, IPPROTO_TCP, TCP_KEEPCNT, &optval, optlen) < 0) {\n        perror("setsockopt(TCP_KEEPCNT) failed");\n        return;\n    }\n\n    std::cout << "TCP Keepalive options set successfully" << std::endl;\n}\n\nint main() {\n    int sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    if (sockfd < 0) {\n        perror("socket() failed");\n        return 1;\n    }\n\n    setKeepAliveOptions(sockfd);\n\n    // Continue with socket connection and communication...\n\n    close(sockfd);\n    return 0;\n}