#include <iostream>\nusing namespace std;\n\nstruct doh\n{\n    void operator()(bool b)\n    {\n        cout << "operator()(bool b)" << endl;\n    }\n\n    template< typename T > void operator()(T t)\n    {\n        cout << "template <typename T> void operator()(T t)" << endl;\n    }\n};\n\n// note can't specialize inline, have to declare outside of the class body\ntemplate<> void doh::operator()(int i)\n{\n    cout << "template <> void operator()(int i)" << endl;\n}\n\ntemplate<> void doh::operator()(bool b)\n{\n    cout << "template <> void operator()(bool b)" << endl;\n}\n\nint main()\n{\n    doh d;\n    int i;\n    bool b;\n    d(b);\n    d(i);\n}