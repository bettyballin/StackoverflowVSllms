#include <windows.h>\n#include <setupapi.h>\n#include <cfgmgr32.h>\n#include <iostream>\n\n#pragma comment(lib, "setupapi.lib")\n\nbool SetDeviceState(const char* deviceInstanceId, bool enable) {\n    HDEVINFO deviceInfoSet = SetupDiGetClassDevs(NULL, NULL, NULL, DIGCF_ALLCLASSES | DIGCF_PRESENT);\n    if (deviceInfoSet == INVALID_HANDLE_VALUE) {\n        return false;\n    }\n\n    SP_DEVINFO_DATA deviceInfoData;\n    deviceInfoData.cbSize = sizeof(SP_DEVINFO_DATA);\n    DWORD deviceIndex = 0;\n\n    while (SetupDiEnumDeviceInfo(deviceInfoSet, deviceIndex, &deviceInfoData)) {\n        char instanceId[MAX_DEVICE_ID_LEN];\n        if (CM_Get_Device_ID(deviceInfoData.DevInst, instanceId, MAX_DEVICE_ID_LEN, 0) == CR_SUCCESS) {\n            if (strcmp(instanceId, deviceInstanceId) == 0) {\n                SP_PROPCHANGE_PARAMS propChangeParams;\n                propChangeParams.ClassInstallHeader.cbSize = sizeof(SP_CLASSINSTALL_HEADER);\n                propChangeParams.ClassInstallHeader.InstallFunction = DIF_PROPERTYCHANGE;\n                propChangeParams.StateChange = enable ? DICS_ENABLE : DICS_DISABLE;\n                propChangeParams.Scope = DICS_FLAG_GLOBAL;\n                propChangeParams.HwProfile = 0;\n\n                if (SetupDiSetClassInstallParams(deviceInfoSet, &deviceInfoData, &propChangeParams.ClassInstallHeader, sizeof(propChangeParams)) &&\n                    SetupDiCallClassInstaller(DIF_PROPERTYCHANGE, deviceInfoSet, &deviceInfoData)) {\n                    SetupDiDestroyDeviceInfoList(deviceInfoSet);\n                    return true;\n                }\n            }\n        }\n        deviceIndex++;\n    }\n\n    SetupDiDestroyDeviceInfoList(deviceInfoSet);\n    return false;\n}\n\nint main() {\n    const char* deviceInstanceId = "YOUR_DEVICE_INSTANCE_ID_HERE";\n    \n    // Disable the device\n    if (SetDeviceState(deviceInstanceId, false)) {\n        std::cout << "Device disabled successfully." << std::endl;\n    } else {\n        std::cerr << "Failed to disable the device." << std::endl;\n    }\n\n    // Enable the device\n    if (SetDeviceState(deviceInstanceId, true)) {\n        std::cout << "Device enabled successfully." << std::endl;\n    } else {\n        std::cerr << "Failed to enable the device." << std::endl;\n    }\n\n    return 0;\n}