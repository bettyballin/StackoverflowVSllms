#include <Windows.h>\n#include <tchar.h>\n#include <stdio.h>\n\nunsigned long GetTargetThreadIdFromWindow(LPCTSTR className, LPCTSTR windowName) {\n    HWND targetWnd = FindWindow(className, windowName);\n    if (!targetWnd) {\n        printf("Failed to find window\n");\n        return 0;\n    }\n\n    DWORD processID;\n    DWORD threadID = GetWindowThreadProcessId(targetWnd, &processID);\n    if (!threadID) {\n        printf("Failed to get thread ID\n");\n    }\n    return threadID;\n} \n\nint _tmain(int argc, _TCHAR* argv[]) {\n    unsigned long threadID = GetTargetThreadIdFromWindow(_T("Notepad"), _T("Untitled - Notepad"));\n    if (!threadID) {\n        return 1;\n    }\n    printf("TID: %lu\n", threadID);    \n\n    HINSTANCE hinst = LoadLibrary(_T("MyDLL.dll")); \n    if (!hinst) {\n        printf("Failed to load MyDLL.dll\n");\n        return 1;\n    }\n\n    typedef void (*Install)(unsigned long);\n    typedef void (*Uninstall)();\n\n    Install install = (Install) GetProcAddress(hinst, "install");\n    Uninstall uninstall = (Uninstall) GetProcAddress(hinst, "uninstall");\n\n    if (!install || !uninstall) {\n        printf("Failed to get function addresses\n");\n        FreeLibrary(hinst);\n        return 1;\n    }\n\n    install(threadID);\n\n    Sleep(20000);\n\n    uninstall();\n\n    FreeLibrary(hinst);\n    return 0;\n}