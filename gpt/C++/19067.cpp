#include <windows.h>\n#include <objbase.h>\n#include <oleauto.h>\n#include <atlbase.h>\n#include <iostream>\n\n// Function to get the pointer to the COM object from ROT\nHRESULT GetRunningObject(const WCHAR* pszDisplayName, IUnknown** ppunkObject)\n{\n    HRESULT hr;\n    CComPtr<IRunningObjectTable> pROT;\n    CComPtr<IMoniker> pMoniker;\n    CComPtr<IBindCtx> pBindCtx;\n\n    // Initialize COM library\n    hr = CoInitialize(NULL);\n    if (FAILED(hr))\n    {\n        return hr;\n    }\n\n    // Get Running Object Table\n    hr = GetRunningObjectTable(0, &pROT);\n    if (FAILED(hr))\n    {\n        CoUninitialize();\n        return hr;\n    }\n\n    // Create a bind context\n    hr = CreateBindCtx(0, &pBindCtx);\n    if (FAILED(hr))\n    {\n        CoUninitialize();\n        return hr;\n    }\n\n    // Create a moniker from the display name\n    hr = MkParseDisplayName(pBindCtx, pszDisplayName, NULL, &pMoniker);\n    if (FAILED(hr))\n    {\n        CoUninitialize();\n        return hr;\n    }\n\n    // Check if the object is running\n    hr = pROT->GetObject(pMoniker, ppunkObject);\n    if (FAILED(hr))\n    {\n        CoUninitialize();\n        return hr;\n    }\n\n    // Release resources and uninitialize COM library\n    CoUninitialize();\n    return S_OK;\n}\n\nint main()\n{\n    const WCHAR* displayName = L"MyObjectDisplayName";\n    IUnknown* pUnknown = nullptr;\n    \n    HRESULT hr = GetRunningObject(displayName, &pUnknown);\n    if (SUCCEEDED(hr) && pUnknown)\n    {\n        // Successfully obtained the pointer to the COM object\n        std::wcout << L"Successfully obtained the pointer to the COM object." << std::endl;\n        \n        // Perform operations on the COM object here\n        // ...\n        \n        // Release the COM object\n        pUnknown->Release();\n    }\n    else\n    {\n        std::wcout << L"Failed to obtain the pointer to the COM object." << std::endl;\n    }\n\n    return 0;\n}