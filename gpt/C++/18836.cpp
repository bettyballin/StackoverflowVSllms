#include <iostream>\n#include <functional>\n\n// Define the fixed-point combinator\ntemplate<typename Func>\nauto fixed_point(Func f) {\n    return [f](auto... args) {\n        return f(fixed_point(f), args...);\n    };\n}\n\n// Define the factorial function using the fixed-point combinator\nint main() {\n    auto factorial = fixed_point([](auto self, int n) -> int {\n        return (n == 0) ? 1 : n * self(n - 1);\n    });\n\n    // Test the factorial function\n    int num = 5;\n    std::cout << "Factorial of " << num << " is " << factorial(num) << std::endl;\n    return 0;\n}