#include <windows.h>\n#include <gdiplus.h>\n#include <iostream>\n\n#pragma comment (lib,"Gdiplus.lib")\n\nusing namespace Gdiplus;\n\nvoid GetImageType(const WCHAR* filename) {\n    // Initialize GDI+\n    GdiplusStartupInput gdiplusStartupInput;\n    ULONG_PTR gdiplusToken;\n    GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);\n\n    // Load image\n    Image image(filename);\n    GUID format = image.GetRawFormat();\n\n    // Determine image format\n    if (format == ImageFormatJPEG) {\n        std::wcout << L"Image format: JPEG" << std::endl;\n    } else if (format == ImageFormatBMP) {\n        std::wcout << L"Image format: BMP" << std::endl;\n    } else if (format == ImageFormatPNG) {\n        std::wcout << L"Image format: PNG" << std::endl;\n    } else if (format == ImageFormatGIF) {\n        std::wcout << L"Image format: GIF" << std::endl;\n    } else if (format == ImageFormatTIFF) {\n        std::wcout << L"Image format: TIFF" << std::endl;\n    } else {\n        std::wcout << L"Image format: Unknown" << std::endl;\n    }\n\n    // Shutdown GDI+\n    GdiplusShutdown(gdiplusToken);\n}\n\nint wmain(int argc, wchar_t* argv[]) {\n    if (argc != 2) {\n        std::wcout << L"Usage: " << argv[0] << L" <image_path>" << std::endl;\n        return -1;\n    }\n\n    GetImageType(argv[1]);\n    return 0;\n}