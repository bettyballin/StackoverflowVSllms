#include <windows.h>\n#include <intrin.h>\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <iomanip>\n\n// Function to get the CPU ID\nstd::string getCPUID() {\n    int cpuInfo[4] = { -1 };\n    __cpuid(cpuInfo, 0);\n    std::stringstream ss;\n    ss << std::hex << cpuInfo[0] << cpuInfo[1] << cpuInfo[2] << cpuInfo[3];\n    return ss.str();\n}\n\n// Function to get the BIOS serial number\nstd::string getBIOSSerialNumber() {\n    char serialNumber[128];\n    DWORD size = sizeof(serialNumber);\n    HKEY hKey;\n\n    if (RegOpenKeyExA(HKEY_LOCAL_MACHINE, "HARDWARE\\DESCRIPTION\\System\\BIOS", 0, KEY_READ, &hKey) == ERROR_SUCCESS) {\n        RegQueryValueExA(hKey, "SystemSerialNumber", NULL, NULL, (LPBYTE)serialNumber, &size);\n        RegCloseKey(hKey);\n        return std::string(serialNumber, size);\n    }\n\n    return "";\n}\n\n// Function to get the hard drive serial number\nstd::string getHardDriveSerialNumber() {\n    char volumeName[MAX_PATH + 1] = { 0 };\n    char fileSystemName[MAX_PATH + 1] = { 0 };\n    DWORD serialNumber = 0, maxComponentLen = 0, fileSystemFlags = 0;\n\n    if (GetVolumeInformationA("C:\\", volumeName, ARRAYSIZE(volumeName), &serialNumber, &maxComponentLen, &fileSystemFlags, fileSystemName, ARRAYSIZE(fileSystemName))) {\n        std::stringstream ss;\n        ss << std::hex << serialNumber;\n        return ss.str();\n    }\n\n    return "";\n}\n\n// Function to combine all hardware attributes into one unique ID\nstd::string generateHardwareID() {\n    std::string cpuId = getCPUID();\n    std::string biosSerial = getBIOSSerialNumber();\n    std::string hddSerial = getHardDriveSerialNumber();\n\n    std::stringstream ss;\n    ss << cpuId << biosSerial << hddSerial;\n\n    return ss.str();\n}\n\nint main() {\n    std::string hardwareID = generateHardwareID();\n    std::cout << "Hardware ID: " << hardwareID << std::endl;\n    return 0;\n}