#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n\ntemplate<class T>\nstruct Types {\n    using Bar = std::vector< std::vector< std::map<T, std::set<T> > > >;\n};\n\nnamespace helpers {\n\ntemplate<class T>\nvoid h1(const typename Types<T>::Bar& bar) {\n    // Implementation of helper function h1\n    std::cout << "Helper function h1 called." << std::endl;\n}\n\n} // namespace helpers\n\ntemplate<class T>\nvoid fct(const typename Types<T>::Bar& bar) {\n    // Implementation of function fct\n    std::cout << "Function fct called." << std::endl;\n    helpers::h1<T>(bar);\n}\n\nint main() {\n    Types<int>::Bar bar;\n    fct<int>(bar);\n\n    return 0;\n}