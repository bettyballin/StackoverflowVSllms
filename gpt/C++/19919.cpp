#include <list>\n#include <vector>\n#include <cmath>\n#include <iostream>\n\nclass Point {\npublic:\n    int x, y;\n    Point(int x1, int y1) : x(x1), y(y1) {}\n};\n\ndouble calculateDistance(int x1, int y1, int x2, int y2) {\n    return std::sqrt(std::pow(x2 - x1, 2) + std::pow(y2 - y1, 2));\n}\n\nstd::vector<Point> getPointsWithinRadius(const std::list<Point>& pointList, int x, int y, double radius) {\n    std::vector<Point> pointsWithinRadius;\n\n    for (const auto& point : pointList) {\n        double distance = calculateDistance(x, y, point.x, point.y);\n        if (distance <= radius) {\n            pointsWithinRadius.push_back(point);\n        }\n    }\n\n    return pointsWithinRadius;\n}\n\nint main() {\n    std::list<Point> pointList = { Point(1, 2), Point(4, 6), Point(5, 12), Point(10, 1) };\n    int x = 5, y = 12;\n    double radius = 5.0;\n    \n    std::vector<Point> pointsWithinRadius = getPointsWithinRadius(pointList, x, y, radius);\n    \n    for (const auto& point : pointsWithinRadius) {\n        std::cout << "(" << point.x << ", " << point.y << ")\n";\n    }\n\n    return 0;\n}