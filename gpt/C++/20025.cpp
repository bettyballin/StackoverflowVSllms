template<typename BCT, typename UIDT>\nclass Factory\n{\npublic:\n    template<typename CT>\n    bool Register(UIDT UniqueID)\n    {\n        if (UniqueID > 10)\n            return(false);\n\n        CreateObject2<BCT, CT>;\n\n        return(true);\n    }\n};\n\ntemplate <typename MC, typename MT>\nclass Manager : public Factory<MC, MT>\n{\npublic:\n    bool RegisterType(const MT Type, const std::string TypeName)\n    {\n        return Factory<MC, MT>::template Register<MC>(Type); // Note the 'template' keyword here\n    }\n};