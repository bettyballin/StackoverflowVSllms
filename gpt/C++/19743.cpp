#include <windows.h>\n#include <iostream>\n\nvoid MonitorDirectory(const std::wstring& directory) {\n    HANDLE hDir = CreateFile(\n        directory.c_str(),\n        FILE_LIST_DIRECTORY,\n        FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n        NULL,\n        OPEN_EXISTING,\n        FILE_FLAG_BACKUP_SEMANTICS,\n        NULL\n    );\n\n    if (hDir == INVALID_HANDLE_VALUE) {\n        std::cerr << "Error: Unable to open directory for monitoring." << std::endl;\n        return;\n    }\n\n    char buffer[1024];\n    DWORD bytesReturned;\n    FILE_NOTIFY_INFORMATION* notification;\n\n    while (true) {\n        if (ReadDirectoryChangesW(\n                hDir,\n                buffer,\n                sizeof(buffer),\n                TRUE,\n                FILE_NOTIFY_CHANGE_LAST_WRITE,\n                &bytesReturned,\n                NULL,\n                NULL\n            )) {\n            notification = reinterpret_cast<FILE_NOTIFY_INFORMATION*>(buffer);\n            do {\n                std::wstring fileName(notification->FileName, notification->FileNameLength / sizeof(WCHAR));\n                std::wcout << L"File changed: " << fileName << std::endl;\n\n                if (notification->NextEntryOffset == 0) {\n                    break;\n                }\n                notification = reinterpret_cast<FILE_NOTIFY_INFORMATION*>(\n                    reinterpret_cast<BYTE*>(notification) + notification->NextEntryOffset);\n            } while (true);\n        } else {\n            std::cerr << "Error: ReadDirectoryChangesW failed." << std::endl;\n            break;\n        }\n    }\n\n    CloseHandle(hDir);\n}\n\nint main() {\n    std::wstring directory = L"C:\\path\\to\\your\\directory";\n    MonitorDirectory(directory);\n    return 0;\n}