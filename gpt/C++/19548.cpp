#include <windows.h>\n\nclass SimpleCom : public IUnknown {\nprivate:\n    long m_refCount;\n\npublic:\n    SimpleCom() : m_refCount(1) {}\n\n    HRESULT __stdcall QueryInterface(const IID& iid, void** ppv) {\n        if (iid == IID_IUnknown) {\n            *ppv = static_cast<IUnknown*>(this);\n        } else {\n            *ppv = nullptr;\n            return E_NOINTERFACE;\n        }\n        AddRef();\n        return S_OK;\n    }\n\n    ULONG __stdcall AddRef() {\n        return InterlockedIncrement(&m_refCount);\n    }\n\n    ULONG __stdcall Release() {\n        long count = InterlockedDecrement(&m_refCount);\n        if (count == 0) {\n            delete this;\n            return 0;\n        }\n        return count;\n    }\n\n    // Custom methods would be added here\n};\n\n// Factory function to create an instance of the SimpleCom component\nHRESULT CreateSimpleComInstance(REFIID riid, void** ppv) {\n    SimpleCom* pSimpleCom = new SimpleCom();\n    if (!pSimpleCom) {\n        return E_OUTOFMEMORY;\n    }\n    return pSimpleCom->QueryInterface(riid, ppv);\n}