#include <iostream>\n#include <iomanip>\n#include <sys/time.h>\n#include <sys/resource.h>\n\nclass StopWatch {\npublic:\n    void start() {\n        if (getrusage(RUSAGE_SELF, &m_begin) != 0) {\n            perror("getrusage");\n            exit(EXIT_FAILURE);\n        }\n        if (gettimeofday(&m_tmbegin, nullptr) != 0) {\n            perror("gettimeofday");\n            exit(EXIT_FAILURE);\n        }\n    }\n\n    void stop() {\n        if (getrusage(RUSAGE_SELF, &m_end) != 0) {\n            perror("getrusage");\n            exit(EXIT_FAILURE);\n        }\n        if (gettimeofday(&m_tmend, nullptr) != 0) {\n            perror("gettimeofday");\n            exit(EXIT_FAILURE);\n        }\n        timeval_sub(m_end.ru_utime, m_begin.ru_utime, m_diff.ru_utime);\n        timeval_sub(m_end.ru_stime, m_begin.ru_stime, m_diff.ru_stime);\n        timeval_sub(m_tmend, m_tmbegin, m_tmdiff);\n    }\n\n    void print(std::ostream& out) const {\n        using namespace std;\n\n        const timeval& utime = m_diff.ru_utime;\n        const timeval& stime = m_diff.ru_stime;\n\n        format_time(out, utime);\n        out << "u ";\n        format_time(out, stime);\n        out << "s ";\n        format_time(out, m_tmdiff);\n    }\n\nprivate:\n    rusage m_begin, m_end, m_diff;\n    timeval m_tmbegin, m_tmend, m_tmdiff;\n\n    static void timeval_sub(const timeval& a, const timeval& b, timeval& ret) {\n        ret.tv_usec = a.tv_usec - b.tv_usec;\n        ret.tv_sec = a.tv_sec - b.tv_sec;\n        if (a.tv_usec < b.tv_usec) {\n            ret.tv_usec += 1000000;\n            --ret.tv_sec;\n        }\n    }\n\n    static void format_time(std::ostream& out, const timeval& tv) {\n        using namespace std;\n        long usec = tv.tv_usec;\n        while (usec >= 1000)\n            usec /= 10;\n        out << tv.tv_sec << '.' << setw(3) << setfill('0') << usec;\n    }\n}; // class StopWatch