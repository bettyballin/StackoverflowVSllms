int CMyPane::OnCreate(LPCREATESTRUCT lpCreateStruct)\n{\n    // Removed all "return -1 on error" code for better readability\n\n    CDockablePane::OnCreate(lpCreateStruct);\n\n    if (m_toolBar.Create(this, AFX_DEFAULT_TOOLBAR_STYLE, IDR_MY_TOOLBAR) &&\n        m_toolBar.LoadToolBar(IDR_MY_TOOLBAR, 0, 0, TRUE /* Is locked */))\n    {\n        if (theApp.m_bHiColorIcons) // Is true, i.e. following code is executed\n        {\n            m_toolBar.CleanUpLockedImages();\n\n            CImageList imageList;\n            CBitmap bitmap;\n\n            // Load the bitmap with the mask color (magenta)\n            bitmap.LoadBitmap(IDB_MY_TOOLBAR_24);\n            imageList.Create(24, 24, ILC_COLOR24 | ILC_MASK, 0, 10);\n            imageList.Add(&bitmap, RGB(255, 0, 255));\n\n            m_toolBar.SetHotImageList(&imageList);\n            m_toolBar.SetColdImageList(&imageList);\n            m_toolBar.SetDisabledImageList(&imageList);\n        }\n\n        m_toolBar.SetPaneStyle(m_toolBar.GetPaneStyle() | CBRS_TOOLTIPS | CBRS_FLYBY);\n        m_toolBar.SetPaneStyle(m_toolBar.GetPaneStyle() & ~(CBRS_GRIPPER | CBRS_SIZE_DYNAMIC | CBRS_BORDER_TOP | CBRS_BORDER_BOTTOM | CBRS_BORDER_LEFT | CBRS_BORDER_RIGHT));\n\n        m_toolBar.SetOwner(this);\n\n        // All commands will be routed via this control, not via the parent frame:\n        m_toolBar.SetRouteCommandsViaFrame(FALSE);\n    }\n\n    return 0;\n}