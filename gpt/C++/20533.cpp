#include <jni.h>\n#include "ParallelPortControl.h"\n#include <windows.h>\n\n// Function pointers for inpout32.dll functions\ntypedef void (__stdcall *lpOut32)(short portAddress, short data);\ntypedef short (__stdcall *lpInp32)(short portAddress);\n\nlpOut32 g_pOut32 = NULL;\nlpInp32 g_pInp32 = NULL;\n\nJNIEXPORT void JNICALL Java_ParallelPortControl_Out32(JNIEnv *env, jobject obj, jshort portAddress, jshort data) {\n    if (g_pOut32 != NULL) {\n        g_pOut32(portAddress, data);\n    }\n}\n\nJNIEXPORT jshort JNICALL Java_ParallelPortControl_Inp32(JNIEnv *env, jobject obj, jshort portAddress) {\n    if (g_pInp32 != NULL) {\n        return g_pInp32(portAddress);\n    }\n    return 0;\n}\n\n// DLL initialization\nBOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved) {\n    switch (ul_reason_for_call) {\n        case DLL_PROCESS_ATTACH:\n            // Load inpout32.dll and get function pointers\n            HINSTANCE hInpOutDll = LoadLibrary("inpout32.dll");\n            if (hInpOutDll != NULL) {\n                g_pOut32 = (lpOut32)GetProcAddress(hInpOutDll, "Out32");\n                g_pInp32 = (lpInp32)GetProcAddress(hInpOutDll, "Inp32");\n            }\n            break;\n        case DLL_PROCESS_DETACH:\n            // Clean up\n            g_pOut32 = NULL;\n            g_pInp32 = NULL;\n            break;\n    }\n    return TRUE;\n}