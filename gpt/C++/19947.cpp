#include <iostream>\n#include <cstdlib>\n\nclass SimpleAllocator {\npublic:\n    void* allocate(size_t size) {\n        void* ptr = std::malloc(size);\n        if (!ptr) throw std::bad_alloc();\n        return ptr;\n    }\n\n    void deallocate(void* ptr) {\n        std::free(ptr);\n    }\n};\n\nint main() {\n    SimpleAllocator allocator;\n    int* array = static_cast<int*>(allocator.allocate(10 * sizeof(int)));\n\n    for (int i = 0; i < 10; ++i) {\n        array[i] = i;\n        std::cout << array[i] << " ";\n    }\n    std::cout << std::endl;\n\n    allocator.deallocate(array);\n    return 0;\n}