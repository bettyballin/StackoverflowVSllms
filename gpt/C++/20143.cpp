#include <windows.h>\n#include <iostream>\n#include <vector>\n#include <string>\n#include <filesystem>\n\ntypedef AEffect* (VstEntryProc)(audioMasterCallback hostCallback);\n\nbool isVstPlugin(const std::string& dllPath) {\n    HMODULE hModule = LoadLibrary(dllPath.c_str());\n    if (!hModule) return false;\n\n    // Check for VstPluginMain or main export\n    VstEntryProc* vstEntry = (VstEntryProc*)GetProcAddress(hModule, "VstPluginMain");\n    if (!vstEntry) {\n        vstEntry = (VstEntryProc*)GetProcAddress(hModule, "main");\n    }\n    FreeLibrary(hModule);\n    return vstEntry != NULL;\n}\n\nvoid scanDirectory(const std::string& directory, std::vector<std::string>& vstPlugins) {\n    for (const auto& entry : std::filesystem::directory_iterator(directory)) {\n        if (entry.path().extension() == ".dll") {\n            if (isVstPlugin(entry.path().string())) {\n                vstPlugins.push_back(entry.path().string());\n            }\n        }\n    }\n}\n\nint main() {\n    std::string vstDirectory = "C:\\path\\to\\vst\\directory";\n    std::vector<std::string> vstPlugins;\n\n    scanDirectory(vstDirectory, vstPlugins);\n\n    for (const auto& plugin : vstPlugins) {\n        std::cout << "Found VST plugin: " << plugin << std::endl;\n    }\n\n    return 0;\n}