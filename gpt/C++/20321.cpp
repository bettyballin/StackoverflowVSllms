#include <Windows.h>\n#include <OleAuto.h>\n#include <iostream>\n\nvoid GetComObjectVersion(const CLSID& clsid) {\n    LPTYPELIB pTypeLib = nullptr;\n    LPTYPEINFO pTypeInfo = nullptr;\n    TLIBATTR* pTLibAttr = nullptr;\n\n    // Initialize COM library\n    HRESULT hr = CoInitialize(nullptr);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to initialize COM library." << std::endl;\n        return;\n    }\n\n    // Load type library associated with the CLSID\n    hr = LoadRegTypeLib(LIBID_YourLibraryID, 1, 0, LANG_NEUTRAL, &pTypeLib);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to load type library." << std::endl;\n        CoUninitialize();\n        return;\n    }\n\n    // Get the type info for the CLSID\n    hr = pTypeLib->GetTypeInfoOfGuid(clsid, &pTypeInfo);\n    if (FAILED(hr)) {\n        std::cerr << "Failed to get type info." << std::endl;\n        pTypeLib->Release();\n        CoUninitialize();\n        return;\n    }\n\n    // Get the library attributes\n    hr = pTypeLib->GetLibAttr(&pTLibAttr);\n    if (SUCCEEDED(hr)) {\n        // Print version information\n        std::cout << "Version: " << HIWORD(pTLibAttr->wMajorVerNum) << "."\n                  << LOWORD(pTLibAttr->wMinorVerNum) << std::endl;\n\n        // Release the library attributes\n        pTypeLib->ReleaseTLibAttr(pTLibAttr);\n    } else {\n        std::cerr << "Failed to get type library attributes." << std::endl;\n    }\n\n    // Clean up\n    if (pTypeInfo) {\n        pTypeInfo->Release();\n    }\n    if (pTypeLib) {\n        pTypeLib->Release();\n    }\n    CoUninitialize();\n}\n\nint main() {\n    // Replace with the actual CLSID of your COM object\n    CLSID clsid;\n    // CLSIDFromString can be used to convert string to CLSID\n    // For example: CLSIDFromString(L"{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}", &clsid);\n\n    GetComObjectVersion(clsid);\n\n    return 0;\n}