#include <iostream>\n#include <Windows.h>\n#include <comutil.h>\n#include <comdef.h>\n#include <oleauto.h>\n\nint main() {\n    // Initialize COM library\n    CoInitialize(NULL);\n\n    // Create an instance of the Excel application\n    CLSID clsid;\n    CLSIDFromProgID(L"Excel.Application", &clsid);\n    IDispatch* pExcelApp = NULL;\n    CoCreateInstance(clsid, NULL, CLSCTX_LOCAL_SERVER, IID_IDispatch, (void**)&pExcelApp);\n\n    // Make Excel visible\n    VARIANT x;\n    x.vt = VT_I4;\n    x.lVal = 1;\n    pExcelApp->Invoke(L"Visible", IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_PROPERTYPUT, &x, NULL, NULL, NULL);\n\n    // Get the workbooks collection\n    VARIANT result;\n    VariantInit(&result);\n    pExcelApp->Invoke(L"Workbooks", IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_PROPERTYGET, &result, NULL, NULL, NULL);\n    IDispatch* pWorkbooks = result.pdispVal;\n\n    // Add a new workbook\n    VariantInit(&result);\n    pWorkbooks->Invoke(L"Add", IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_METHOD, NULL, &result, NULL, NULL);\n    IDispatch* pWorkbook = result.pdispVal;\n\n    // Get the active sheet\n    VariantInit(&result);\n    pExcelApp->Invoke(L"ActiveSheet", IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_PROPERTYGET, &result, NULL, NULL, NULL);\n    IDispatch* pActiveSheet = result.pdispVal;\n\n    // Get the Name property of the active sheet\n    VariantInit(&result);\n    pActiveSheet->Invoke(L"Name", IID_NULL, LOCALE_USER_DEFAULT, DISPATCH_PROPERTYGET, &result, NULL, NULL, NULL);\n    wprintf(L"Active sheet name: %s\n", result.bstrVal);\n\n    // Cleanup\n    pActiveSheet->Release();\n    pWorkbook->Release();\n    pWorkbooks->Release();\n    pExcelApp->Release();\n    CoUninitialize();\n\n    return 0;\n}