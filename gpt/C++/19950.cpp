#include <Windows.h>\n#include <iostream>\n\n// Function to find the menu item ID by its name\nUINT FindMenuItem(HMENU hMenu, const std::wstring& itemName)\n{\n    int itemCount = GetMenuItemCount(hMenu);\n    for (int i = 0; i < itemCount; ++i)\n    {\n        wchar_t buffer[256];\n        if (GetMenuString(hMenu, i, buffer, sizeof(buffer)/sizeof(buffer[0]), MF_BYPOSITION))\n        {\n            if (itemName == buffer)\n            {\n                return GetMenuItemID(hMenu, i);\n            }\n        }\n    }\n    return -1;\n}\n\nint main()\n{\n    HWND hwndTarget = FindWindow(NULL, L"Target Window Title");\n    if (hwndTarget == NULL)\n    {\n        std::cerr << "Target window not found!" << std::endl;\n        return 1;\n    }\n\n    // Simulate right click to open context menu\n    SendMessage(hwndTarget, WM_RBUTTONDOWN, MK_RBUTTON, MAKELPARAM(50, 50));\n    SendMessage(hwndTarget, WM_RBUTTONUP, 0, MAKELPARAM(50, 50));\n\n    // Wait for the context menu to be displayed\n    Sleep(200);\n\n    // Find the menu handle\n    HWND hwndMenu = FindWindow(L"#32768", NULL); // #32768 is the class name for pop-up menus\n    if (hwndMenu == NULL)\n    {\n        std::cerr << "Context menu not found!" << std::endl;\n        return 1;\n    }\n\n    HMENU hMenu = (HMENU)SendMessage(hwndMenu, MN_GETHMENU, 0, 0);\n    if (hMenu == NULL)\n    {\n        std::cerr << "Failed to get menu handle!" << std::endl;\n        return 1;\n    }\n\n    // Find the ID of the "Copy" menu item\n    UINT menuItemID = FindMenuItem(hMenu, L"Copy");\n    if (menuItemID == -1)\n    {\n        std::cerr << "Menu item not found!" << std::endl;\n        return 1;\n    }\n\n    // Send the WM_COMMAND message to execute the menu item\n    SendMessage(hwndTarget, WM_COMMAND, menuItemID, 0);\n\n    return 0;\n}