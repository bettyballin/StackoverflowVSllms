#include <iostream>\n#include <thread>\n#include <mutex>\n\nstd::mutex mtx; // Mutex to protect critical section\nint sharedCounter = 0;\n\nvoid incrementCounter() {\n    for (int i = 0; i < 100000; ++i) {\n        std::lock_guard<std::mutex> lock(mtx); // Locking the mutex\n        ++sharedCounter; // Critical section\n    }\n}\n\nint main() {\n    std::thread t1(incrementCounter);\n    std::thread t2(incrementCounter);\n\n    t1.join();\n    t2.join();\n\n    std::cout << "Final counter value: " << sharedCounter << std::endl;\n\n    return 0;\n}