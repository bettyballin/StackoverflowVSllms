#include <iostream>\n\n// Base class with a purely virtual function that has a definition\nclass Base {\npublic:\n    virtual void doSomething() = 0; // Pure virtual function declaration\n\n    // Provide a definition for the pure virtual function\n    virtual void doSomethingImpl() {\n        std::cout << "Base implementation\n";\n    }\n};\n\nvoid Base::doSomething() {\n    doSomethingImpl();\n}\n\n// Derived class that overrides the purely virtual function\nclass Derived : public Base {\npublic:\n    void doSomething() override {\n        // Perform class-specific checks\n        std::cout << "Derived specific checks\n";\n        \n        // Optionally call the base class implementation\n        Base::doSomethingImpl();\n        \n        // Additional Derived-specific implementation\n        std::cout << "Derived implementation\n";\n    }\n};\n\nint main() {\n    Derived d;\n    d.doSomething();\n    return 0;\n}