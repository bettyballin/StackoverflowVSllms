#include <windows.h>\n#include <iostream>\n\ndouble GetThreadCpuUsage(HANDLE hThread) {\n    FILETIME ftCreation, ftExit, ftKernel, ftUser;\n    ULARGE_INTEGER ulKernel, ulUser;\n    \n    if (GetThreadTimes(hThread, &ftCreation, &ftExit, &ftKernel, &ftUser)) {\n        ulKernel.LowPart = ftKernel.dwLowDateTime;\n        ulKernel.HighPart = ftKernel.dwHighDateTime;\n        \n        ulUser.LowPart = ftUser.dwLowDateTime;\n        ulUser.HighPart = ftUser.dwHighDateTime;\n        \n        return (ulKernel.QuadPart + ulUser.QuadPart) / 10000.0; // Convert to milliseconds\n    }\n    return -1.0; // Error\n}\n\nint main() {\n    // Example: Get the current thread handle\n    HANDLE hThread = GetCurrentThread();\n\n    // Get initial CPU usage\n    double initialCpuUsage = GetThreadCpuUsage(hThread);\n\n    // Sleep for a while to let some CPU time pass\n    Sleep(1000); // 1 second\n\n    // Get CPU usage after the interval\n    double finalCpuUsage = GetThreadCpuUsage(hThread);\n\n    if (initialCpuUsage != -1.0 && finalCpuUsage != -1.0) {\n        double cpuUsage = (finalCpuUsage - initialCpuUsage) / 1000.0; // Convert to percentage\n        std::cout << "CPU usage of the thread: " << cpuUsage << "%" << std::endl;\n    } else {\n        std::cerr << "Failed to get thread times." << std::endl;\n    }\n\n    return 0;\n}