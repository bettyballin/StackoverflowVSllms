#include <boost/thread.hpp>\n#include <windows.h>\n#include <iostream>\n#include <atomic>\n\nstd::atomic<bool> running(true);\n\nvoid listenForMulticast() {\n    while (running) {\n        // Your multicast listening logic\n        std::cout << "Listening for multicast..." << std::endl;\n        Sleep(1000);  // Simulate work with a sleep\n    }\n}\n\nextern "C" __declspec(dllexport) void StartMulticastListener() {\n    boost::thread multicastThread(listenForMulticast);\n    multicastThread.detach();\n}\n\nextern "C" __declspec(dllexport) void StopMulticastListener() {\n    running = false;\n}\n\n// Entry point for the IIS module\nBOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved) {\n    if (fdwReason == DLL_PROCESS_ATTACH) {\n        StartMulticastListener();\n    } else if (fdwReason == DLL_PROCESS_DETACH) {\n        StopMulticastListener();\n    }\n    return TRUE;\n}