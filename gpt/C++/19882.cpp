#include <windows.h>\n#include <sddl.h>\n#include <tchar.h>\n\nvoid CreatePipeServer()\n{\n    SECURITY_ATTRIBUTES sa;\n    SECURITY_DESCRIPTOR sd;\n\n    // Initialize the security descriptor\n    InitializeSecurityDescriptor(&sd, SECURITY_DESCRIPTOR_REVISION);\n\n    // Set up the ACL to allow access to Everyone\n    SetSecurityDescriptorDacl(&sd, TRUE, NULL, FALSE);\n\n    // Initialize SECURITY_ATTRIBUTES structure\n    sa.nLength = sizeof(SECURITY_ATTRIBUTES);\n    sa.lpSecurityDescriptor = &sd;\n    sa.bInheritHandle = TRUE;\n\n    // Create the named pipe\n    HANDLE hPipe = CreateNamedPipe(\n        _T("\\\\.\\pipe\\MyPipe"),\n        PIPE_ACCESS_DUPLEX,\n        PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT,\n        PIPE_UNLIMITED_INSTANCES,\n        512, 512,\n        0,\n        &sa);\n\n    if (hPipe == INVALID_HANDLE_VALUE) {\n        _tprintf(_T("CreateNamedPipe failed with error %d\n"), GetLastError());\n        return;\n    }\n\n    // Wait for the client to connect\n    BOOL fConnected = ConnectNamedPipe(hPipe, NULL) ?\n                      TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n\n    if (fConnected) {\n        _tprintf(_T("Client connected.\n"));\n        // Handle communication with the client\n    } else {\n        CloseHandle(hPipe);\n    }\n}