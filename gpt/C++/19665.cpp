#include <cstdio>\n#include <sstream>\n#include <string>\n#include <memory>\n\nclass A {\npublic:\n    void print(FILE* f) {\n        std::string s = "stuff";\n        fprintf(f, "some %s\n", s.c_str());\n        b.print(f);\n    }\n\n    std::string to_str() {\n        std::stringstream ss;\n        std::unique_ptr<FILE, decltype(&pclose)> pfile(popen("cat", "w"), pclose);\n\n        if (!pfile) {\n            throw std::runtime_error("Failed to open pipe.");\n        }\n\n        print(pfile.get());\n        fflush(pfile.get());\n\n        char buffer[128];\n        while (fgets(buffer, sizeof(buffer), pfile.get()) != nullptr) {\n            ss << buffer;\n        }\n\n        return ss.str();\n    }\n\n    class B {\n    public:\n        void print(FILE* f) {\n            fprintf(f, "more stuff\n");\n        }\n    } b;\n};\n\nclass C {\npublic:\n    bool set_foo(const std::string& str) {\n        foo = str;\n        return true;\n    }\n\nprivate:\n    std::string foo;\n};\n\nint main() {\n    A* a = new A();\n    C* c = new C();\n\n    c->set_foo(a->to_str());\n\n    delete a;\n    delete c;\n\n    return 0;\n}