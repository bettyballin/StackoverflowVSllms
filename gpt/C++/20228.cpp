#include <windows.h>\n    #include <atlbase.h>\n    #include <atlcom.h>\n\n    // Forward declarations of helper functions\n    HRESULT RegisterServer(HMODULE hModule, const CLSID& clsid, const wchar_t* friendlyName, const wchar_t* verIndProgID, const wchar_t* progID);\n    HRESULT UnregisterServer(const CLSID& clsid, const wchar_t* verIndProgID, const wchar_t* progID);\n\n    // The DLL entry point\n    BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {\n        switch (ul_reason_for_call) {\n        case DLL_PROCESS_ATTACH:\n        case DLL_THREAD_ATTACH:\n        case DLL_THREAD_DETACH:\n        case DLL_PROCESS_DETACH:\n            break;\n        }\n        return TRUE;\n    }\n\n    // Register the COM server\n    STDAPI DllRegisterServer() {\n        wchar_t modulePath[MAX_PATH];\n        if (!GetModuleFileNameW((HMODULE)&__ImageBase, modulePath, ARRAYSIZE(modulePath))) {\n            return HRESULT_FROM_WIN32(GetLastError());\n        }\n\n        // Replace these with your actual CLSID, Friendly Name, ProgID, etc.\n        const CLSID clsid = { /* Your CLSID here */ };\n        return RegisterServer((HMODULE)&__ImageBase, clsid, L"Your COM Object Friendly Name", L"YourCOMObject.ProgID", L"YourCOMObject.ProgID.1");\n    }\n\n    // Unregister the COM server\n    STDAPI DllUnregisterServer() {\n        // Replace these with your actual CLSID, Friendly Name, ProgID, etc.\n        const CLSID clsid = { /* Your CLSID here */ };\n        return UnregisterServer(clsid, L"YourCOMObject.ProgID", L"YourCOMObject.ProgID.1");\n    }\n\n    HRESULT RegisterServer(HMODULE hModule, const CLSID& clsid, const wchar_t* friendlyName, const wchar_t* verIndProgID, const wchar_t* progID) {\n        // Registration logic here\n        // Write to HKCR\CLSID\{clsid}\n        // Write to HKCR\ProgID\n        // Write to HKCR\VersionIndependentProgID\n        // Write to HKCR\Interface\{iid}\n        // etc.\n        return S_OK;\n    }\n\n    HRESULT UnregisterServer(const CLSID& clsid, const wchar_t* verIndProgID, const wchar_t* progID) {\n        // Unregistration logic here\n        // Delete keys from HKCR\CLSID\{clsid}\n        // Delete keys from HKCR\ProgID\n        // Delete keys from HKCR\VersionIndependentProgID\n        // Delete keys from HKCR\Interface\{iid}\n        // etc.\n        return S_OK;\n    }