#include <windows.h>\n#include <aclapi.h>\n#include <tchar.h>\n\nvoid set_DACL_for_object(const char *object, SE_OBJECT_TYPE object_type, int access_perms, int access_mode) {\n    PACL pDACL = NULL, pOldDACL = NULL;\n    PSECURITY_DESCRIPTOR pSD = NULL;\n    EXPLICIT_ACCESS ea;\n    DWORD dwRes;\n\n    // Get the current DACL\n    dwRes = GetNamedSecurityInfo((LPTSTR)object, object_type, DACL_SECURITY_INFORMATION, NULL, NULL, &pOldDACL, NULL, &pSD);\n    if (dwRes != ERROR_SUCCESS) {\n        _tprintf(_T("GetNamedSecurityInfo Error %u\n"), dwRes);\n        return;\n    }\n\n    // Initialize EXPLICIT_ACCESS structure\n    ZeroMemory(&ea, sizeof(EXPLICIT_ACCESS));\n    ea.grfAccessPermissions = access_perms;\n    ea.grfAccessMode = access_mode;\n    ea.grfInheritance = NO_INHERITANCE;\n    ea.Trustee.TrusteeForm = TRUSTEE_IS_NAME;\n    ea.Trustee.TrusteeType = TRUSTEE_IS_GROUP;\n    ea.Trustee.ptstrName = _T("ADMINISTRATORS");\n\n    // Create a new ACL that merges the new ACE into the existing DACL\n    dwRes = SetEntriesInAcl(1, &ea, pOldDACL, &pDACL);\n    if (dwRes != ERROR_SUCCESS) {\n        _tprintf(_T("SetEntriesInAcl Error %u\n"), dwRes);\n        LocalFree(pSD);\n        return;\n    }\n\n    // Apply the new DACL to the object\n    dwRes = SetNamedSecurityInfo((LPTSTR)object, object_type, DACL_SECURITY_INFORMATION, NULL, NULL, pDACL, NULL);\n    if (dwRes != ERROR_SUCCESS) {\n        _tprintf(_T("SetNamedSecurityInfo Error %u\n"), dwRes);\n    }\n\n    // Clean up\n    if (pSD != NULL) LocalFree(pSD);\n    if (pDACL != NULL) LocalFree(pDACL);\n}\n\nint main() {\n    set_DACL_for_object("C:\\file.txt", SE_FILE_OBJECT, GENERIC_ALL, SET_ACCESS);\n    set_DACL_for_object("C:\\file.txt", SE_FILE_OBJECT, GENERIC_WRITE, DENY_ACCESS);\n    return 0;\n}