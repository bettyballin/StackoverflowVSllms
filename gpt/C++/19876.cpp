// WrapperDll.cpp\n#include <windows.h>\n\ntypedef void (*SomeFunctionType)();\n\nHMODULE dll1 = nullptr;\nHMODULE dll2 = nullptr;\nSomeFunctionType SomeFunction1 = nullptr;\nSomeFunctionType SomeFunction2 = nullptr;\n\nvoid LoadDlls() {\n    dll1 = LoadLibrary(L"Dll1.dll");\n    dll2 = LoadLibrary(L"Dll2.dll");\n\n    if (dll1) {\n        SomeFunction1 = (SomeFunctionType)GetProcAddress(dll1, "SomeFunction");\n    }\n\n    if (dll2) {\n        SomeFunction2 = (SomeFunctionType)GetProcAddress(dll2, "SomeFunction");\n    }\n}\n\nvoid UnloadDlls() {\n    if (dll1) {\n        FreeLibrary(dll1);\n    }\n\n    if (dll2) {\n        FreeLibrary(dll2);\n    }\n}\n\nextern "C" __declspec(dllexport) void WrapperFunction1() {\n    if (SomeFunction1) {\n        SomeFunction1();\n    }\n}\n\nextern "C" __declspec(dllexport) void WrapperFunction2() {\n    if (SomeFunction2) {\n        SomeFunction2();\n    }\n}\n\n// DllMain\nBOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {\n    switch (ul_reason_for_call) {\n    case DLL_PROCESS_ATTACH:\n        LoadDlls();\n        break;\n    case DLL_PROCESS_DETACH:\n        UnloadDlls();\n        break;\n    }\n    return TRUE;\n}