#include <iostream>\n#include <windows.h>\n\nint main() {\n    HKEY hKey;\n    const char* subKey = "Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer";\n    const char* valueName = "NoDriveTypeAutoRun";\n    DWORD data;\n    DWORD dataSize = sizeof(data);\n\n    // Open the registry key\n    if (RegOpenKeyEx(HKEY_CURRENT_USER, subKey, 0, KEY_READ | KEY_WRITE, &hKey) != ERROR_SUCCESS) {\n        std::cerr << "Failed to open registry key." << std::endl;\n        return 1;\n    }\n\n    // Read the value\n    if (RegQueryValueEx(hKey, valueName, nullptr, nullptr, reinterpret_cast<LPBYTE>(&data), &dataSize) != ERROR_SUCCESS) {\n        std::cerr << "Failed to read registry value." << std::endl;\n        RegCloseKey(hKey);\n        return 1;\n    }\n\n    // Check if 0x20 is present in the value\n    if (data & 0x20) {\n        // Subtract 0x20 from the value\n        data -= 0x20;\n\n        // Write the new value back to the registry\n        if (RegSetValueEx(hKey, valueName, 0, REG_DWORD, reinterpret_cast<const BYTE*>(&data), dataSize) != ERROR_SUCCESS) {\n            std::cerr << "Failed to write registry value." << std::endl;\n            RegCloseKey(hKey);\n            return 1;\n        }\n\n        std::cout << "Registry value updated successfully." << std::endl;\n    } else {\n        std::cout << "0x20 is not present in the registry value." << std::endl;\n    }\n\n    // Close the registry key\n    RegCloseKey(hKey);\n\n    return 0;\n}