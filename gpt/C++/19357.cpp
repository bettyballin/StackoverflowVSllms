#include <iostream>\n#include <vector>\n#include <cstring>\n#include <sys/socket.h>\n#include <unistd.h>\n\nconst int BUFFER_SIZE = 1024;\n\nvoid processLine(const std::string& line) {\n    // Process the line (e.g., parse HTML)\n    std::cout << "Processing line: " << line << std::endl;\n}\n\nvoid readFromSocket(int socket_fd) {\n    char buffer[BUFFER_SIZE];\n    std::string lineBuffer;\n    ssize_t bytesRead;\n\n    while ((bytesRead = read(socket_fd, buffer, sizeof(buffer))) > 0) {\n        for (ssize_t i = 0; i < bytesRead; ++i) {\n            if (buffer[i] == '\r') {\n                continue; // Ignore CR\n            }\n            if (buffer[i] == '\n') {\n                processLine(lineBuffer);\n                lineBuffer.clear();\n            } else {\n                lineBuffer += buffer[i];\n            }\n        }\n    }\n\n    // Process any remaining data in lineBuffer\n    if (!lineBuffer.empty()) {\n        processLine(lineBuffer);\n    }\n\n    if (bytesRead < 0) {\n        perror("read");\n    }\n}\n\nint main() {\n    int socket_fd = /* initialize your socket here */;\n    readFromSocket(socket_fd);\n    close(socket_fd);\n    return 0;\n}