#include <windows.h>\n#include <GL/gl.h>\n#include <GL/glext.h>\n#include <GL/wglext.h>\n\n// Function pointers for WGL extensions\nPFNWGLGETPIXELFORMATATTRIBIVARBPROC wglGetPixelFormatAttribivARB = NULL;\n\nbool IsHardwareAccelerated(HDC hdc) {\n    // Load the extension function\n    wglGetPixelFormatAttribivARB = (PFNWGLGETPIXELFORMATATTRIBIVARBPROC)wglGetProcAddress("wglGetPixelFormatAttribivARB");\n    if (!wglGetPixelFormatAttribivARB) {\n        return false; // Extension not supported\n    }\n\n    int pixelFormat = GetPixelFormat(hdc);\n    if (pixelFormat == 0) {\n        return false; // Failed to get pixel format\n    }\n\n    int acceleration = 0;\n    int attribs[] = { WGL_ACCELERATION_ARB };\n    if (!wglGetPixelFormatAttribivARB(hdc, pixelFormat, 0, 1, attribs, &acceleration)) {\n        return false; // Failed to get pixel format attributes\n    }\n\n    return (acceleration == WGL_FULL_ACCELERATION_ARB);\n}\n\nint main() {\n    // Create a dummy window and OpenGL context to get the HDC\n    WNDCLASS wc = {0};\n    wc.lpfnWndProc = DefWindowProc;\n    wc.hInstance = GetModuleHandle(NULL);\n    wc.lpszClassName = "DummyWindow";\n\n    RegisterClass(&wc);\n    HWND hwnd = CreateWindow("DummyWindow", "Dummy", WS_OVERLAPPEDWINDOW, 0, 0, 1, 1, NULL, NULL, wc.hInstance, NULL);\n    HDC hdc = GetDC(hwnd);\n\n    PIXELFORMATDESCRIPTOR pfd = {0};\n    pfd.nSize = sizeof(PIXELFORMATDESCRIPTOR);\n    pfd.nVersion = 1;\n    pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER;\n    pfd.iPixelType = PFD_TYPE_RGBA;\n    pfd.cColorBits = 24;\n    pfd.cDepthBits = 16;\n    pfd.iLayerType = PFD_MAIN_PLANE;\n\n    int pixelFormat = ChoosePixelFormat(hdc, &pfd);\n    SetPixelFormat(hdc, pixelFormat, &pfd);\n\n    HGLRC hglrc = wglCreateContext(hdc);\n    wglMakeCurrent(hdc, hglrc);\n\n    // Check for hardware acceleration\n    bool hardwareAccelerated = IsHardwareAccelerated(hdc);\n\n    // Cleanup\n    wglMakeCurrent(NULL, NULL);\n    wglDeleteContext(hglrc);\n    ReleaseDC(hwnd, hdc);\n    DestroyWindow(hwnd);\n    UnregisterClass("DummyWindow", wc.hInstance);\n\n    if (hardwareAccelerated) {\n        MessageBox(NULL, "Hardware acceleration is enabled.", "Info", MB_OK);\n    } else {\n        MessageBox(NULL, "Hardware acceleration is disabled.", "Info", MB_OK);\n    }\n\n    return 0;\n}