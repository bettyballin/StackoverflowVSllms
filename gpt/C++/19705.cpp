TypeEnum type;\nVARIANT value;\nHRESULT hr = pValue1->GetType(&type);\nif (SUCCEEDED(hr)) {\n    hr = pValue1->GetValue(&value);\n    if (SUCCEEDED(hr)) {\n        switch (type) {\n            case TypeEnum::TypeLong:\n                // Handle long value\n                break;\n            case TypeEnum::TypeBSTR:\n                // Handle BSTR value\n                break;\n            case TypeEnum::TypeBool:\n                // Handle VARIANT_BOOL value\n                break;\n            case TypeEnum::TypeInterface:\n                // Handle IDispatch derived interface\n                break;\n        }\n        VariantClear(&value);  // Clean up the VARIANT\n    }\n}