#include <iostream>\n#include <windows.h>\n#include <oleauto.h>\n\nvoid EnumerateCOMMembers(const wchar_t* typeLibPath) {\n    ITypeLib* pTypeLib = nullptr;\n    HRESULT hr = LoadTypeLib(typeLibPath, &pTypeLib);\n    if (FAILED(hr)) {\n        std::wcerr << L"Failed to load type library: " << hr << std::endl;\n        return;\n    }\n\n    UINT typeCount = pTypeLib->GetTypeInfoCount();\n    for (UINT i = 0; i < typeCount; ++i) {\n        ITypeInfo* pTypeInfo = nullptr;\n        pTypeLib->GetTypeInfo(i, &pTypeInfo);\n        if (pTypeInfo) {\n            TYPEATTR* pTypeAttr = nullptr;\n            pTypeInfo->GetTypeAttr(&pTypeAttr);\n            if (pTypeAttr) {\n                for (UINT j = 0; j < pTypeAttr->cFuncs; ++j) {\n                    FUNCDESC* pFuncDesc = nullptr;\n                    pTypeInfo->GetFuncDesc(j, &pFuncDesc);\n                    if (pFuncDesc) {\n                        // Process function description (e.g., get method name, parameters)\n                        BSTR bstrName;\n                        pTypeInfo->GetDocumentation(pFuncDesc->memid, &bstrName, nullptr, nullptr, nullptr);\n                        std::wcout << L"Method: " << bstrName << std::endl;\n                        SysFreeString(bstrName);\n                        pTypeInfo->ReleaseFuncDesc(pFuncDesc);\n                    }\n                }\n                for (UINT j = 0; j < pTypeAttr->cVars; ++j) {\n                    VARDESC* pVarDesc = nullptr;\n                    pTypeInfo->GetVarDesc(j, &pVarDesc);\n                    if (pVarDesc) {\n                        // Process variable description (e.g., get property name)\n                        BSTR bstrName;\n                        pTypeInfo->GetDocumentation(pVarDesc->memid, &bstrName, nullptr, nullptr, nullptr);\n                        std::wcout << L"Property: " << bstrName << std::endl;\n                        SysFreeString(bstrName);\n                        pTypeInfo->ReleaseVarDesc(pVarDesc);\n                    }\n                }\n                pTypeInfo->ReleaseTypeAttr(pTypeAttr);\n            }\n            pTypeInfo->Release();\n        }\n    }\n    pTypeLib->Release();\n}\n\nint main() {\n    const wchar_t* typeLibPath = L"path_to_your_typelib.tlb";\n    CoInitialize(nullptr);\n    EnumerateCOMMembers(typeLibPath);\n    CoUninitialize();\n    return 0;\n}