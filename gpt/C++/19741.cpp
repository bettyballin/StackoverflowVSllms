#include <iostream>\n#include <list>\n#include <string>\n#include <memory>\n\nstruct HTMLTag {\n    std::string tag_name;\n    std::list<std::shared_ptr<HTMLTag>> children;\n\n    HTMLTag(const std::string& name) : tag_name(name) {}\n};\n\nvoid print_tree(const std::shared_ptr<HTMLTag>& node, int depth = 0) {\n    for (int i = 0; i < depth; ++i) std::cout << " ";\n    std::cout << node->tag_name << std::endl;\n    for (const auto& child : node->children) {\n        print_tree(child, depth + 1);\n    }\n}\n\nint main() {\n    auto root = std::make_shared<HTMLTag>("HTML");\n    auto head = std::make_shared<HTMLTag>("HEAD");\n    auto body = std::make_shared<HTMLTag>("BODY");\n    auto script1 = std::make_shared<HTMLTag>("SCRIPT");\n\n    root->children.push_back(head);\n    root->children.push_back(body);\n    head->children.push_back(script1);\n\n    auto new_script = std::make_shared<HTMLTag>("SCRIPT");\n    auto it = ++root->children.begin(); // Iterator pointing to BODY\n    root->children.insert(it, new_script); // Insert new SCRIPT before BODY\n\n    print_tree(root);\n\n    return 0;\n}