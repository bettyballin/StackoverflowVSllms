#include <Windows.h>\n#include <ImageHlp.h>\n#include <iostream>\n#include <vector>\n\n#pragma comment(lib, "imagehlp.lib")\n\nstd::vector<std::string> GetDependencies(const std::string& filePath)\n{\n    std::vector<std::string> dependencies;\n\n    // Load the executable file\n    LOADED_IMAGE loadedImage;\n    if (MapAndLoad(filePath.c_str(), NULL, &loadedImage, TRUE, TRUE))\n    {\n        // Get the import directory\n        PIMAGE_IMPORT_DESCRIPTOR importDesc = (PIMAGE_IMPORT_DESCRIPTOR)\n            ImageDirectoryEntryToData(loadedImage.MappedAddress, FALSE, IMAGE_DIRECTORY_ENTRY_IMPORT, NULL);\n\n        // Iterate through the import directory\n        while (importDesc->Name)\n        {\n            // Get the name of the imported module\n            char* moduleName = (char*)ImageRvaToVa(loadedImage.FileHeader, loadedImage.MappedAddress, importDesc->Name, NULL);\n            if (moduleName)\n            {\n                dependencies.push_back(moduleName);\n            }\n            importDesc++;\n        }\n\n        // Unload the executable file\n        UnMapAndLoad(&loadedImage);\n    }\n    else\n    {\n        std::cerr << "Failed to load the executable file." << std::endl;\n    }\n\n    return dependencies;\n}\n\nint main(int argc, char* argv[])\n{\n    if (argc < 2)\n    {\n        std::cerr << "Usage: " << argv[0] << " <path_to_exe_or_dll>" << std::endl;\n        return 1;\n    }\n\n    std::string filePath = argv[1];\n    std::vector<std::string> dependencies = GetDependencies(filePath);\n\n    std::cout << "Dependencies for " << filePath << ":" << std::endl;\n    for (const auto& dep : dependencies)\n    {\n        std::cout << dep << std::endl;\n    }\n\n    return 0;\n}