#include <afx.h>\n#include <afxwin.h>\n\ntemplate <typename T>\nclass FixedSizeList {\npublic:\n    FixedSizeList(int maxSize) : m_maxSize(maxSize) {}\n\n    void Add(const T& element) {\n        if (m_list.GetCount() == m_maxSize) {\n            m_list.RemoveHead();  // Remove the oldest element\n        }\n        m_list.AddTail(element);\n    }\n\n    POSITION GetHeadPosition() const {\n        return m_list.GetHeadPosition();\n    }\n\n    T GetNext(POSITION& pos) const {\n        return m_list.GetNext(pos);\n    }\n\nprivate:\n    int m_maxSize;\n    CList<T, T> m_list;\n};\n\n// Usage example\nint main() {\n    FixedSizeList<int> fixedList(3);\n\n    fixedList.Add(1);\n    fixedList.Add(2);\n    fixedList.Add(3);\n    fixedList.Add(4);  // This will remove 1 and add 4\n\n    POSITION pos = fixedList.GetHeadPosition();\n    while (pos != NULL) {\n        int value = fixedList.GetNext(pos);\n        printf("%d\n", value);  // Output will be 2, 3, 4\n    }\n\n    return 0;\n}