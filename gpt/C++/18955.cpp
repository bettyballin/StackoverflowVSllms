// File: main.cpp\n\n#include <windows.h>\n#include <iostream>\n\ntypedef void (*fooA_t)();\ntypedef void (*fooAA_t)();\ntypedef void (*fooB_t)();\ntypedef void (*fooBB_t)();\n\nint main() {\n    HMODULE hDllA = LoadLibrary("DLLa.dll");\n    HMODULE hDllB = LoadLibrary("DLLb.dll");\n\n    if (!hDllA || !hDllB) {\n        std::cerr << "Failed to load DLLs" << std::endl;\n        return -1;\n    }\n\n    fooA_t fooA = (fooA_t)GetProcAddress(hDllA, "fooA");\n    fooAA_t fooAA = (fooAA_t)GetProcAddress(hDllA, "fooAA");\n    fooB_t fooB = (fooB_t)GetProcAddress(hDllB, "fooB");\n    fooBB_t fooBB = (fooBB_t)GetProcAddress(hDllB, "fooBB");\n\n    if (!fooA || !fooAA || !fooB || !fooBB) {\n        std::cerr << "Failed to get function addresses" << std::endl;\n        FreeLibrary(hDllA);\n        FreeLibrary(hDllB);\n        return -1;\n    }\n\n    fooA();\n    fooAA();\n    fooB();\n    fooBB();\n\n    FreeLibrary(hDllA);\n    FreeLibrary(hDllB);\n    return 0;\n}