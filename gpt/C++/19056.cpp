#include <afxwin.h> // Ensure MFC headers are included\n\nvoid CreateLargeCompatibleDC(CDC* pInputDC, CDC*& pOutputMemDC, int nDCWidth, int nDCHeight)\n{\n    // Verify input DC is valid\n    if (pInputDC == nullptr)\n    {\n        return;\n    }\n\n    // Create compatible memory DC\n    pOutputMemDC = new CDC();\n    if (!pOutputMemDC->CreateCompatibleDC(pInputDC))\n    {\n        // Handle error\n        delete pOutputMemDC;\n        pOutputMemDC = nullptr;\n        return;\n    }\n\n    // Create compatible bitmap\n    CRect rect(0, 0, nDCWidth, nDCHeight);\n    CBitmap bitmap;\n    if (!bitmap.CreateCompatibleBitmap(pInputDC, rect.Width(), rect.Height()))\n    {\n        // Handle error\n        pOutputMemDC->DeleteDC();\n        delete pOutputMemDC;\n        pOutputMemDC = nullptr;\n        return;\n    }\n\n    // Select the new bitmap into the memory DC\n    CBitmap* pOldBitmap = pOutputMemDC->SelectObject(&bitmap);\n    if (pOldBitmap == nullptr)\n    {\n        // Handle error\n        bitmap.DeleteObject();\n        pOutputMemDC->DeleteDC();\n        delete pOutputMemDC;\n        pOutputMemDC = nullptr;\n        return;\n    }\n\n    // Set viewport origin\n    pOutputMemDC->SetViewportOrg(-rect.left, -rect.top);\n\n    // Create and select a brush\n    CBrush brush;\n    if (!brush.CreateSolidBrush(RGB(255, 0, 0)))\n    {\n        // Handle error\n        pOutputMemDC->SelectObject(pOldBitmap); // Restore old bitmap\n        bitmap.DeleteObject();\n        pOutputMemDC->DeleteDC();\n        delete pOutputMemDC;\n        pOutputMemDC = nullptr;\n        return;\n    }\n    brush.UnrealizeObject();\n    pOutputMemDC->FillRect(rect, &brush);\n\n    // Cleanup brush (not needed anymore)\n    brush.DeleteObject();\n}