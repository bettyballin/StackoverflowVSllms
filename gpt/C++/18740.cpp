// Ensure the graph is fully stopped before reconfiguring\nif (mMC) {\n    mMC->Stop();\n}\n\n// Release the source filter, if it exists, so we can replace it.\nIBaseFilter* pSource = NULL;\nif (SUCCEEDED(mpGB->FindFilterByName(L"SOURCE", &pSource)) && pSource) {\n    mpGB->RemoveFilter(pSource);\n    pSource->Release();\n    pSource = NULL;\n}\n\n// Render the file.\nhr = RenderFileToVideoRenderer(mpGB, mPlayPath.c_str(), FALSE);\n\n// QueryInterface for DirectShow interfaces\nhr = mpGB->QueryInterface(&mMC);\nif (FAILED(hr)) {\n    return hr;\n}\nhr = mpGB->QueryInterface(&mME);\nif (FAILED(hr)) {\n    return hr;\n}\nhr = mpGB->QueryInterface(&mMS);\nif (FAILED(hr)) {\n    return hr;\n}\n\n// Read the default video size\nhr = mpWC->GetNativeVideoSize(&lWidth, &lHeight, NULL, NULL);\nif (hr != E_NOINTERFACE) {\n    if (FAILED(hr)) {\n        return hr;\n    }\n\n    // Play video at native resolution, anchored at top-left corner.\n    RECT r;\n    r.left = 0;\n    r.top = 0;\n    r.right = lWidth;\n    r.bottom = lHeight;\n    hr = mpWC->SetVideoPosition(NULL, &r);\n    if (FAILED(hr)) {\n        return hr;\n    }\n}\n\n// Ensure the graph is ready to run and then run the graph to play the media file\nif (mMC) {\n    hr = mMC->Run();\n    if (FAILED(hr)) {\n        // Handle the error here\n        return hr;\n    }\n    mState = Running;\n}\n\nif (mME) {\n    mME->SetNotifyWindow((OAHWND)m_hWnd, WM_GRAPHNOTIFY, 0);\n}