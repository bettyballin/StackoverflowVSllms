#include <iostream>\n#include <vector>\n\ntemplate <typename Iterator, typename T>\nIterator binary_search_iterator(Iterator begin, Iterator end, const T& value) {\n    Iterator it = std::lower_bound(begin, end, value);\n    if (it != end && *it == value) {\n        return it;\n    } else {\n        return end;\n    }\n}\n\nint main() {\n    std::vector<int> data = {1, 2, 3, 4, 6, 7, 8, 9};\n\n    int target = 5;\n    auto it = binary_search_iterator(data.begin(), data.end(), target);\n\n    if (it != data.end()) {\n        std::cout << "Element found: " << *it << std::endl;\n    } else {\n        std::cout << "Element not found" << std::endl;\n    }\n\n    return 0;\n}