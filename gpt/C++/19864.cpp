class PrimaryObject : public IUnknown {\nprivate:\n    IUnknown* pContainedObject1;\n    IUnknown* pContainedObject2;\n\npublic:\n    PrimaryObject() {\n        // Create instances of contained objects\n        // assuming CreateContainedObject1 and CreateContainedObject2 are factory methods for the contained objects\n        pContainedObject1 = CreateContainedObject1();\n        pContainedObject2 = CreateContainedObject2();\n    }\n\n    // IUnknown methods\n    HRESULT QueryInterface(REFIID riid, void** ppv) {\n        if (riid == IID_IContainedInterface1) {\n            return pContainedObject1->QueryInterface(riid, ppv);\n        } else if (riid == IID_IContainedInterface2) {\n            return pContainedObject2->QueryInterface(riid, ppv);\n        }\n        // Handle other interfaces or return E_NOINTERFACE\n        return E_NOINTERFACE;\n    }\n\n    ULONG AddRef() {\n        // Implement reference counting\n    }\n\n    ULONG Release() {\n        // Implement reference counting and cleanup\n    }\n};