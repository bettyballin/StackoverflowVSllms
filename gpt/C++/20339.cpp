#include <windows.h>\n#include <combaseapi.h>\n#include <iostream>\n\nHRESULT GetCOMObject(const wchar_t* progID, REFIID riid, void** ppv)\n{\n    HRESULT hr;\n    CLSID clsid;\n\n    // Get the CLSID from the ProgID\n    hr = CLSIDFromProgID(progID, &clsid);\n    if (FAILED(hr))\n    {\n        std::wcerr << L"CLSIDFromProgID failed: " << std::hex << hr << std::endl;\n        return hr;\n    }\n\n    // Get the object using CoCreateInstance\n    hr = CoCreateInstance(clsid, NULL, CLSCTX_INPROC_SERVER, riid, ppv);\n    if (FAILED(hr))\n    {\n        std::wcerr << L"CoCreateInstance failed: " << std::hex << hr << std::endl;\n    }\n\n    return hr;\n}\n\nint main()\n{\n    HRESULT hr = CoInitialize(NULL);\n    if (FAILED(hr))\n    {\n        std::cerr << "CoInitialize failed: " << std::hex << hr << std::endl;\n        return 1;\n    }\n\n    IUnknown* pUnknown = NULL;\n    hr = GetCOMObject(L"SomeCOM.ProgID", IID_IUnknown, (void**)&pUnknown);\n    if (SUCCEEDED(hr))\n    {\n        // Use the COM object\n        std::cout << "Successfully obtained the COM object." << std::endl;\n\n        // Release the COM object\n        pUnknown->Release();\n    }\n\n    CoUninitialize();\n    return 0;\n}