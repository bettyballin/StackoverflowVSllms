#include <iostream>\n#include <comdef.h>\n#include <comutil.h>\n#include <oleauto.h>\n\n// Import the Excel type library\n#import "C:\\Program Files\\Microsoft Office\\Office16\\EXCEL.EXE" rename("RGB", "ExcelRGB") rename("DocumentProperties", "ExcelDocumentProperties")\n\nint main() {\n    // Initialize COM library\n    CoInitialize(nullptr);\n\n    try {\n        // Start Excel application\n        Excel::_ApplicationPtr application(__uuidof(Excel::Application));\n        application->Visible[0] = VARIANT_TRUE;\n\n        // Open the workbook\n        const BSTR wcharFileName = SysAllocString(L"C:\\path\\to\\your\\file.xlsx");\n        Excel::WorkbooksPtr workbooks = application->Workbooks;\n        Excel::_WorkbookPtr workbook = workbooks->Open(wcharFileName);\n\n        // Access the first worksheet\n        Excel::_WorksheetPtr worksheet = workbook->Worksheets->Item[1];\n\n        // Retrieve values from cells A4, B4, and C4\n        VARIANT resultA4, resultB4, resultC4;\n        VariantInit(&resultA4);\n        VariantInit(&resultB4);\n        VariantInit(&resultC4);\n\n        resultA4 = worksheet->Range["A4"]->Value2;\n        resultB4 = worksheet->Range["B4"]->Value2;\n        resultC4 = worksheet->Range["C4"]->Value2;\n\n        // Store the values in an array\n        double values[3];\n        values[0] = resultA4.dblVal;\n        values[1] = resultB4.dblVal;\n        values[2] = resultC4.dblVal;\n\n        // Output the values\n        std::wcout << L"A4: " << values[0] << std::endl;\n        std::wcout << L"B4: " << values[1] << std::endl;\n        std::wcout << L"C4: " << values[2] << std::endl;\n\n        // Clean up\n        VariantClear(&resultA4);\n        VariantClear(&resultB4);\n        VariantClear(&resultC4);\n\n        // Close the workbook without saving\n        workbook->Close(VARIANT_FALSE);\n\n        // Quit the Excel application\n        application->Quit();\n\n        // Release allocated memory\n        SysFreeString(wcharFileName);\n    } catch (const _com_error& e) {\n        std::wcerr << L"COM error: " << e.ErrorMessage() << std::endl;\n    }\n\n    // Uninitialize COM library\n    CoUninitialize();\n\n    return 0;\n}