// replace_all.cc\n   #include <string>\n\n   template <class T>\n   T replace_all(\n       T const &search,\n       T const &replace,\n       T const &subject) {\n       T result;\n\n       typename T::size_type done = 0;\n       typename T::size_type pos;\n       while ((pos = subject.find(search, done)) != T::npos) {\n           result.append(subject, done, pos - done);\n           result.append(replace);\n           done = pos + search.size();\n       }\n       result.append(subject, done, subject.max_size());\n       return result;\n   }\n\n   // Explicit instantiation for std::string\n   template std::string replace_all(\n       std::string const &search,\n       std::string const &replace,\n       std::string const &subject);