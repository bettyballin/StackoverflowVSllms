// Interface header (shared between DLL and EXE)\n#ifndef MY_SHARED_INTERFACE_H\n#define MY_SHARED_INTERFACE_H\n\n#include <vector>\n\n#ifdef MYDLL_EXPORTS\n#define MYDLL_API __declspec(dllexport)\n#else\n#define MYDLL_API __declspec(dllimport)\n#endif\n\nclass MYDLL_API IVectorProcessor {\npublic:\n    virtual void process(std::vector<int>& data) = 0;\n    virtual ~IVectorProcessor() = default;\n};\n\nextern "C" MYDLL_API IVectorProcessor* createVectorProcessor();\nextern "C" MYDLL_API void destroyVectorProcessor(IVectorProcessor* processor);\n\n#endif // MY_SHARED_INTERFACE_H