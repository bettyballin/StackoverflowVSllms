#include <windows.h>\n#include <wlanapi.h>\n#include <stdio.h>\n\n#pragma comment(lib, "wlanapi.lib")\n\nint main() {\n    HANDLE hClient = NULL;\n    DWORD dwMaxClient = 2;\n    DWORD dwCurVersion = 0;\n    DWORD dwResult = 0;\n    PWLAN_INTERFACE_INFO_LIST pIfList = NULL;\n    PWLAN_INTERFACE_INFO pIfInfo = NULL;\n    PWLAN_AVAILABLE_NETWORK_LIST pBssList = NULL;\n    PWLAN_AVAILABLE_NETWORK pBssEntry = NULL;\n\n    dwResult = WlanOpenHandle(dwMaxClient, NULL, &dwCurVersion, &hClient);\n    if (dwResult != ERROR_SUCCESS) {\n        printf("WlanOpenHandle failed with error: %u\n", dwResult);\n        return 1;\n    }\n\n    dwResult = WlanEnumInterfaces(hClient, NULL, &pIfList);\n    if (dwResult != ERROR_SUCCESS) {\n        printf("WlanEnumInterfaces failed with error: %u\n", dwResult);\n        return 1;\n    }\n\n    for (int i = 0; i < (int)pIfList->dwNumberOfItems; i++) {\n        pIfInfo = (WLAN_INTERFACE_INFO*)&pIfList->InterfaceInfo[i];\n        \n        dwResult = WlanGetAvailableNetworkList(hClient, &pIfInfo->InterfaceGuid, 0, NULL, &pBssList);\n        if (dwResult != ERROR_SUCCESS) {\n            printf("WlanGetAvailableNetworkList failed with error: %u\n", dwResult);\n            return 1;\n        }\n\n        for (int j = 0; j < (int)pBssList->dwNumberOfItems; j++) {\n            pBssEntry = (WLAN_AVAILABLE_NETWORK*)&pBssList->Network[j];\n            printf("SSID: %s\n", pBssEntry->dot11Ssid.ucSSID);\n        }\n\n        if (pBssList != NULL) {\n            WlanFreeMemory(pBssList);\n            pBssList = NULL;\n        }\n    }\n\n    if (pIfList != NULL) {\n        WlanFreeMemory(pIfList);\n        pIfList = NULL;\n    }\n\n    WlanCloseHandle(hClient, NULL);\n\n    return 0;\n}