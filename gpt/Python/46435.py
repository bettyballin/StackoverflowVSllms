def tail(file_path, n, offset=0):\n    """Reads n lines from the end of the file with an offset."""\n    with open(file_path, 'rb') as f:\n        f.seek(0, 2)\n        file_size = f.tell()\n        block_size = 1024\n        blocks = []\n        lines = []\n        \n        while file_size > 0 and len(lines) < n + offset:\n            if file_size - block_size > 0:\n                f.seek(-block_size, 1)\n            else:\n                f.seek(0, 0)\n                block_size = file_size\n\n            blocks.append(f.read(block_size))\n            file_size -= block_size\n            f.seek(file_size)\n\n            lines = b''.join(blocks)[::-1].splitlines()\n        \n        return [line.decode('utf-8')[::-1] for line in lines[-(n + offset):-offset or None][::-1]]\n\n# Example usage:\n# log_lines = tail('path/to/logfile.log', 10, 5)\n# for line in log_lines:\n#     print(line)