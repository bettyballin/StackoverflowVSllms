import pysftp\nimport os\n\ndef sftp_transfer(host, username, password, local_file, remote_file):\n    cnopts = pysftp.CnOpts()\n    cnopts.hostkeys = None  # Disable host key checking for simplicity\n\n    with pysftp.Connection(host, username=username, password=password, cnopts=cnopts) as sftp:\n        # Check if file exists on the remote server\n        if sftp.exists(remote_file):\n            remote_size = sftp.stat(remote_file).st_size\n        else:\n            remote_size = 0\n\n        # Get the size of the local file\n        local_size = os.path.getsize(local_file)\n\n        # If remote file exists and is smaller than the local file, resume the transfer\n        if remote_size < local_size:\n            with open(local_file, 'rb') as f:\n                f.seek(remote_size)\n                sftp.putfo(f, remote_file, confirm=True)\n        else:\n            # Transfer the entire file\n            sftp.put(local_file, remote_file)\n\n# Example usage\nsftp_transfer('sftp.example.com', 'username', 'password', 'path/to/local/file', 'path/to/remote/file')