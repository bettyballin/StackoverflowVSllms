import random\n\ndef fisher_yates_shuffle(n, seed):\n    random.seed(seed)\n    indices = list(range(n))\n    for i in range(n - 1, 0, -1):\n        j = random.randint(0, i)\n        indices[i], indices[j] = indices[j], indices[i]\n    return indices\n\ndef int_to_shuffled_int(index, n, seed):\n    shuffle = fisher_yates_shuffle(n, seed)\n    return shuffle[index]\n\ndef shuffled_int_to_int(shuffled_index, n, seed):\n    shuffle = fisher_yates_shuffle(n, seed)\n    return shuffle.index(shuffled_index)\n\n# Example usage:\nn = 10  # Size of the range\nseed = 42  # Fixed seed for reproducibility\n\nprint("Original -> Shuffled")\nfor i in range(n):\n    shuffled = int_to_shuffled_int(i, n, seed)\n    print(f"{i} -> {shuffled}")\n\nprint("\nShuffled -> Original")\nfor i in range(n):\n    original = shuffled_int_to_int(i, n, seed)\n    print(f"{i} -> {original}")