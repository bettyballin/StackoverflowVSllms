import psycopg2\nimport csv\nfrom datetime import datetime, timedelta\n\n# Database connection setup\nconn = psycopg2.connect(\n    host="your_host",\n    database="your_db",\n    user="your_user",\n    password="your_password"\n)\n\ndef archive_and_delete_processed_records():\n    try:\n        cursor = conn.cursor()\n        \n        # Define the threshold date (e.g., 60 days old)\n        threshold_date = datetime.now() - timedelta(days=60)\n        \n        # Select records older than the threshold date\n        cursor.execute("SELECT * FROM transactions WHERE processed = TRUE AND date < %s", (threshold_date,))\n        records = cursor.fetchall()\n        \n        # Archive records to a CSV file\n        with open('archived_records.csv', mode='w') as file:\n            writer = csv.writer(file)\n            writer.writerow([desc[0] for desc in cursor.description])  # write headers\n            writer.writerows(records)\n        \n        # Delete the archived records from the database\n        cursor.execute("DELETE FROM transactions WHERE processed = TRUE AND date < %s", (threshold_date,))\n        conn.commit()\n        \n    except Exception as e:\n        print(f"Error: {e}")\n    finally:\n        cursor.close()\n        conn.close()\n\n# Run the archiving function\narchive_and_delete_processed_records()