import os\nimport hashlib\nimport sqlite3\nfrom datetime import datetime, timedelta\n\n# Generate a random token\ndef generate_token():\n    random_bytes = os.urandom(16)\n    token = hashlib.sha256(random_bytes).hexdigest()\n    return token\n\n# Store the token in the database with an expiration time\ndef store_token(email, token):\n    expiration_time = datetime.now() + timedelta(hours=24)  # Token valid for 24 hours\n    conn = sqlite3.connect('tokens.db')\n    cursor = conn.cursor()\n    cursor.execute('''CREATE TABLE IF NOT EXISTS tokens (email TEXT, token TEXT, expires_at DATETIME)''')\n    cursor.execute('''INSERT INTO tokens (email, token, expires_at) VALUES (?, ?, ?)''', (email, token, expiration_time))\n    conn.commit()\n    conn.close()\n\n# Validate the token\ndef validate_token(email, token):\n    conn = sqlite3.connect('tokens.db')\n    cursor = conn.cursor()\n    cursor.execute('''SELECT expires_at FROM tokens WHERE email = ? AND token = ?''', (email, token))\n    result = cursor.fetchone()\n    conn.close()\n    if result:\n        expires_at = datetime.strptime(result[0], '%Y-%m-%d %H:%M:%S.%f')\n        if datetime.now() < expires_at:\n            return True\n    return False\n\n# Example usage\nemail = "user@example.com"\ntoken = generate_token()\nstore_token(email, token)\nprint(f"Registration link: https://example.com/register?email={email}&token={token}")\n\n# Validate the token when the user clicks the link\nis_valid = validate_token(email, token)\nif is_valid:\n    print("Token is valid. Proceed with registration.")\nelse:\n    print("Invalid or expired token.")