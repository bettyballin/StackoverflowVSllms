import numpy as np\n\ndef get_axes(vertices):\n    """ Get the perpendicular axes to the edges of the rectangle. """\n    axes = []\n    for i in range(len(vertices)):\n        p1 = vertices[i]\n        p2 = vertices[(i + 1) % len(vertices)]\n        edge = p2 - p1\n        normal = np.array([-edge[1], edge[0]])  # Perpendicular vector\n        axes.append(normal)\n    return axes\n\ndef project(vertices, axis):\n    """ Project vertices onto an axis and return the min and max projection values. """\n    projections = [np.dot(vertex, axis) for vertex in vertices]\n    return min(projections), max(projections)\n\ndef overlap(min1, max1, min2, max2):\n    """ Check if projections on an axis overlap. """\n    return max1 >= min2 and max2 >= min1\n\ndef rectangles_intersect(rect1, rect2):\n    """ Check if two rectangles intersect using the Separating Axis Theorem. """\n    axes1 = get_axes(rect1)\n    axes2 = get_axes(rect2)\n    axes = axes1 + axes2\n    \n    for axis in axes:\n        min1, max1 = project(rect1, axis)\n        min2, max2 = project(rect2, axis)\n        if not overlap(min1, max1, min2, max2):\n            return False\n    return True\n\n# Define the vertices of the rectangles\nrect1 = np.array([[x1, y1], [x2, y2], [x3, y3], [x4, y4]])  # Replace with actual coordinates\nrect2 = np.array([[x5, y5], [x6, y6], [x7, y7], [x8, y8]])  # Replace with actual coordinates\n\n# Check if the rectangles intersect\nif rectangles_intersect(rect1, rect2):\n    print("The rectangles intersect.")\nelse:\n    print("The rectangles do not intersect.")