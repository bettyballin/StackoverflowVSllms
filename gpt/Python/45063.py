#!/usr/bin/env python\nimport sys\nimport time\nfrom multiprocessing import Process\n\nclass Proc(Process):\n    def __init__(self, procNum):\n        self.id = procNum\n        Process.__init__(self)\n\n    def run(self):\n        doneWork = False\n        while True:\n            try:\n                # Do work...\n                time.sleep(1)\n                sys.stdout.write('.')\n                sys.stdout.flush()  # Ensures immediate output\n\n                if doneWork:\n                    print("PROC#" + str(self.id) + " Done.")\n                    break\n\n            except KeyboardInterrupt:\n                print("User aborted.")\n                break\n\ndef main():\n    # Set up inputs..\n    processes = [Proc(1), Proc(2)]\n    \n    # Spawn processes\n    for p in processes:\n        p.start()\n\n    try:\n        # Wait for processes to complete\n        for p in processes:\n            p.join()\n    except KeyboardInterrupt:\n        print("Main process received KeyboardInterrupt, terminating child processes...")\n        for p in processes:\n            p.terminate()  # Forcefully terminate the child process\n            p.join()       # Ensure process has terminated\n\n# Main Entry\nif __name__ == "__main__":\n    main()