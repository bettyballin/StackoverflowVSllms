from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import pad, unpad\nfrom Crypto.Random import get_random_bytes\n\ndef aes_encrypt(key, data):\n    cipher = AES.new(key, AES.MODE_CBC)\n    ct_bytes = cipher.encrypt(pad(data, AES.block_size))\n    return cipher.iv, ct_bytes\n\ndef aes_decrypt(key, iv, ct):\n    cipher = AES.new(key, AES.MODE_CBC, iv)\n    pt = unpad(cipher.decrypt(ct), AES.block_size)\n    return pt\n\n# Example usage\nkey = get_random_bytes(32)  # AES-256 requires a 32-byte key\ndata = b'Your data to encrypt'\n\niv, encrypted_data = aes_encrypt(key, data)\nprint(f'Encrypted data: {encrypted_data.hex()}')\n\ndecrypted_data = aes_decrypt(key, iv, encrypted_data)\nprint(f'Decrypted data: {decrypted_data.decode()}')