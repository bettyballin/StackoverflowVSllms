from PyQt5.QtCore import Qt, QAbstractListModel, QModelIndex\nfrom PyQt5.QtGui import QStandardItemModel\nfrom PyQt5.QtWidgets import QApplication, QTableView, QListView, QVBoxLayout, QWidget\n\n\nclass CustomListModel(QAbstractListModel):\n    def __init__(self, source_model):\n        super().__init__()\n        self.source_model = source_model\n\n    def rowCount(self, parent=QModelIndex()):\n        return self.source_model.rowCount(parent)\n\n    def data(self, index, role=Qt.DisplayRole):\n        if role == Qt.DisplayRole:\n            return self.source_model.headerData(index.row(), Qt.Vertical)\n        return None\n\n\nclass MainWindow(QWidget):\n    def __init__(self):\n        super().__init__()\n\n        # Create the standard model\n        self.model = QStandardItemModel(5, 3)\n        self.model.setHorizontalHeaderLabels(['Object 1', 'Object 2', 'Object 3'])\n        for row in range(5):\n            for column in range(3):\n                self.model.setItem(row, column, QStandardItem(f'R{row}C{column}'))\n            self.model.setVerticalHeaderItem(row, QStandardItem(f'Frame {row + 1}'))\n\n        # Create the table view\n        self.table_view = QTableView()\n        self.table_view.setModel(self.model)\n        \n        # Create the custom list model\n        self.list_model = CustomListModel(self.model)\n\n        # Create the list view\n        self.list_view = QListView()\n        self.list_view.setModel(self.list_model)\n\n        # Layout\n        layout = QVBoxLayout()\n        layout.addWidget(self.table_view)\n        layout.addWidget(self.list_view)\n        self.setLayout(layout)\n\n\nif __name__ == '__main__':\n    import sys\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    window.show()\n    sys.exit(app.exec_())