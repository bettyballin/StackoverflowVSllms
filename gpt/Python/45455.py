def find_densest_cluster(text, highlighted_positions, window_size=400):\n    # Split text into words\n    words = text.split()\n    \n    # Convert highlighted positions from character index to word index\n    word_indices = [pos // len(words[0]) for pos in highlighted_positions]\n    \n    max_count = 0\n    best_start = 0\n    \n    for i in range(len(words) - window_size + 1):\n        # Calculate the number of highlighted words in the current window\n        count = sum(1 for pos in word_indices if i <= pos < i + window_size)\n        \n        if count > max_count:\n            max_count = count\n            best_start = i\n    \n    # Extract the chunk with the most highlighted words\n    best_chunk = ' '.join(words[best_start:best_start + window_size])\n    \n    return best_chunk\n\n# Example usage:\ntext = "..."  # Your block of text\nhighlighted_positions = [...]  # List of character positions of highlighted words\n\nresult = find_densest_cluster(text, highlighted_positions)\nprint(result)