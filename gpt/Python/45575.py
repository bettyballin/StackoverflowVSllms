def hamming_distance(s1, s2):\n    """Calculate the Hamming distance between two strings of equal length."""\n    return sum(c1 != c2 for c1, c2 in zip(s1, s2))\n\ndef minHamming(L, S):\n    """Find the minimum Hamming distance between S and any substring of L of the same length as S."""\n    min_distance = float('inf')\n    len_S = len(S)\n    \n    for i in range(len(L) - len_S + 1):\n        substring = L[i:i+len_S]\n        distance = hamming_distance(substring, S)\n        if distance < min_distance:\n            min_distance = distance\n            \n    return min_distance\n\n# Example usage\nL = "ABCDEFGHIJ"\nS1 = "CDEFGG"\nS2 = "BCDGHI"\n\nprint(minHamming(L, S1))  # Output: 1\nprint(minHamming(L, S2))  # Output: 3