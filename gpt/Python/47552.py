def base31_luhn_check_digit(base31_value):\n    base31_chars = '0123456789ABCDEFGHJKLMNPQRTUWXY'\n    char_to_value = {char: idx for idx, char in enumerate(base31_chars)}\n    value_to_char = {idx: char for idx, char in enumerate(base31_chars)}\n\n    # Convert base31_value to a list of integers\n    value_list = [char_to_value[char] for char in base31_value]\n\n    # Apply the Luhn algorithm\n    total_sum = 0\n    for idx, num in enumerate(reversed(value_list)):\n        if idx % 2 == 1:  # Even positions when counted from 1\n            num *= 2\n            if num >= 31:\n                num -= 31\n        total_sum += num\n\n    # Calculate the check digit\n    check_digit_value = (31 - (total_sum % 31)) % 31\n    return value_to_char[check_digit_value]\n\n# Example usage\nbase31_value = '012345678'\ncheck_digit = base31_luhn_check_digit(base31_value)\nprint(f'The check digit for {base31_value} is {check_digit}')