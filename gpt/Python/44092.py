def generate_subsets(nums, max_sum):\n    result = []\n    subset = []\n\n    def backtrack(start, current_sum):\n        # If the current sum exceeds the max_sum, prune the branch\n        if current_sum >= max_sum:\n            return\n        # Add the current subset to the result\n        result.append(list(subset))\n        for i in range(start, len(nums)):\n            if current_sum + nums[i] < max_sum:\n                subset.append(nums[i])\n                backtrack(i + 1, current_sum + nums[i])\n                subset.pop()\n\n    nums.sort()\n    backtrack(0, 0)\n    return result\n\n# Example usage:\nnums = [i for i in range(1, 100)]  # List of all positive integers smaller than 100\nmax_sum = 130\nsubsets = generate_subsets(nums, max_sum)\nfor s in subsets:\n    print(s)