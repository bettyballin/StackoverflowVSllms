import os\nimport sys\nimport atexit\nfrom signal import signal, SIGTERM\n\ndef daemonize():\n    # First fork\n    if os.fork() > 0:\n        sys.exit(0)\n\n    os.chdir('/')\n    os.setsid()\n    os.umask(0)\n\n    # Second fork\n    if os.fork() > 0:\n        sys.exit(0)\n\n    sys.stdout.flush()\n    sys.stderr.flush()\n\n    with open('/dev/null', 'rb', 0) as f:\n        os.dup2(f.fileno(), sys.stdin.fileno())\n    with open('/dev/null', 'ab', 0) as f:\n        os.dup2(f.fileno(), sys.stdout.fileno())\n        os.dup2(f.fileno(), sys.stderr.fileno())\n\n    atexit.register(cleanup)\n    signal(SIGTERM, handle_exit)\n\ndef cleanup():\n    pass\n\ndef handle_exit(signum, frame):\n    sys.exit(0)\n\n# Call the daemonize function to create the daemon\ndaemonize()\n\n# Your daemon code here\nwhile True:\n    # Daemon's main loop\n    pass