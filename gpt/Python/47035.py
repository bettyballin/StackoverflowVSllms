import pandas as pd\nfrom geopy.distance import geodesic\n\n# Example data: Zip codes with their latitude and longitude\nzip_data = {\n    'zip': ['07024', '10001', '10002', '10003', '10004'],\n    'lat': [40.848447, 40.750742, 40.713054, 40.732253, 40.699869],\n    'lon': [-73.973470, -73.996460, -73.987600, -73.987430, -74.013120]\n}\n\n# Convert the data to a pandas DataFrame\nzip_df = pd.DataFrame(zip_data)\n\ndef getNearest(zipCode, miles):\n    # Get the latitude and longitude for the given zipCode\n    location = zip_df[zip_df['zip'] == zipCode]\n    if location.empty:\n        return []\n\n    origin = (location.iloc[0]['lat'], location.iloc[0]['lon'])\n    radius_zipcodes = []\n\n    # Calculate distances and filter zip codes within the given radius\n    for index, row in zip_df.iterrows():\n        destination = (row['lat'], row['lon'])\n        distance = geodesic(origin, destination).miles\n        if distance <= miles:\n            radius_zipcodes.append(row['zip'])\n\n    return radius_zipcodes\n\n# Example usage\nzip_code = '07024'\nradius_miles = 10\nnearest_zip_codes = getNearest(zip_code, radius_miles)\nprint(nearest_zip_codes)