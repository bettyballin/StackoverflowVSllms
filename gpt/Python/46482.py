import random\n\ndef create_schedule(participants, table_size):\n    num_tables = len(participants) // table_size\n    rounds = len(participants) - 1\n    schedule = []\n\n    # Create initial seating arrangement\n    tables = [participants[i * table_size:(i + 1) * table_size] for i in range(num_tables)]\n\n    for round_num in range(rounds):\n        round_schedule = []\n        \n        # Record current table assignments\n        for table in tables:\n            round_schedule.append(table[:])\n        \n        schedule.append(round_schedule)\n        \n        # Rotate the participants (except the first table)\n        if num_tables > 1:\n            last_person = tables[1][-1]\n            for i in range(1, num_tables):\n                tables[i] = [tables[i-1][-1]] + tables[i][:-1]\n            tables[0] = tables[0][1:] + [last_person]\n    \n    return schedule\n\n# Example usage\nparticipants = [f"Person {i+1}" for i in range(40)]\ntable_size = 8\n\nschedule = create_schedule(participants, table_size)\n\nfor round_num, round_tables in enumerate(schedule):\n    print(f"Round {round_num + 1}:")\n    for table_num, table in enumerate(round_tables):\n        print(f"  Table {table_num + 1}: {', '.join(table)}")\n    print()