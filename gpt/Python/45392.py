# Assuming the compiled Python classes are available as csv_pb2\n\nimport csv_pb2\n\ndef csv_to_protobuf(csv_file_path, version, extra_info):\n    csv_file = csv_pb2.CSVFile()\n    csv_file.version = version\n    csv_file.extra_info = extra_info\n\n    with open(csv_file_path, newline='') as csvfile:\n        reader = csv.DictReader(csvfile)\n        for row in reader:\n            csv_row = csv_pb2.CSVRow()\n            for field, value in row.items():\n                try:\n                    # Try to convert to float, if successful, it's a decimal\n                    decimal_value = float(value)\n                    csv_row.decimal_fields[field] = decimal_value\n                except ValueError:\n                    # Otherwise, it's a string\n                    csv_row.string_fields[field] = value\n            csv_file.rows.append(csv_row)\n\n    return csv_file\n\n# Example usage\ncsv_file_path = 'data.csv'\nversion = '1.0'\nextra_info = 'Some additional information'\nprotobuf_data = csv_to_protobuf(csv_file_path, version, extra_info)\n\n# Serialize to binary\nwith open('data.pb', 'wb') as f:\n    f.write(protobuf_data.SerializeToString())