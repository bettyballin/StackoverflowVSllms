import hashlib\n\ndef chunk_file(file_path, chunk_size=4096):\n    chunks = []\n    with open(file_path, 'rb') as file:\n        while chunk := file.read(chunk_size):\n            chunks.append(chunk)\n    return chunks\n\ndef hash_chunk(chunk):\n    return hashlib.sha256(chunk).hexdigest()\n\ndef deduplicate_and_version(file_path, server_chunks):\n    file_chunks = chunk_file(file_path)\n    file_hashes = [hash_chunk(chunk) for chunk in file_chunks]\n\n    new_chunks = {}\n    for i, hash_val in enumerate(file_hashes):\n        if hash_val not in server_chunks:\n            server_chunks[hash_val] = file_chunks[i]\n            new_chunks[hash_val] = file_chunks[i]\n    \n    return new_chunks, file_hashes\n\n# Example usage\nserver_chunks = {}\nfile_path = 'path/to/your/file.txt'\nnew_chunks, file_hashes = deduplicate_and_version(file_path, server_chunks)\n\nprint(f"New chunks to be uploaded: {len(new_chunks)}")\nprint(f"File hashes: {file_hashes}")