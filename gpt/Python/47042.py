import random\n\ndef is_valid_assignment(person, giftee, disallowed_pairs, matches):\n    if person == giftee or (person, giftee) in disallowed_pairs:\n        return False\n    return True\n\ndef find_matching(all_people, disallowed_pairs, matches, index):\n    if index == len(all_people):\n        return True\n    \n    person = all_people[index]\n    potential_giftees = [p for p in all_people if p not in matches.values() and is_valid_assignment(person, p, disallowed_pairs, matches)]\n    \n    random.shuffle(potential_giftees)\n    \n    for giftee in potential_giftees:\n        matches[person] = giftee\n        if find_matching(all_people, disallowed_pairs, matches, index + 1):\n            return True\n        del matches[person]\n    \n    return False\n\ndef draw_names(all_people, disallowed_pairs):\n    matches = {}\n    success = find_matching(all_people, disallowed_pairs, matches, 0)\n    if not success:\n        raise ValueError("No valid Secret Santa configuration found.")\n    return matches\n\n# Example usage:\nall_people = ["Alice", "Bob", "Charlie", "David"]\ndisallowed_pairs = [("Alice", "Bob"), ("Charlie", "David")]\n\ntry:\n    matches = draw_names(all_people, disallowed_pairs)\n    for giver, receiver in matches.items():\n        print(f"{giver} gives a gift to {receiver}")\nexcept ValueError as e:\n    print(e)