# custom_flake8_plugin.py\nimport ast\nimport sys\n\n\nclass YieldInNonGeneratorChecker(ast.NodeVisitor):\n    def visit_FunctionDef(self, node):\n        if any(isinstance(stmt, ast.Yield) for stmt in ast.walk(node)):\n            if not node.name.startswith('__'):\n                print(f"Warning: Function '{node.name}' contains 'yield' but does not appear to be a generator.")\n        self.generic_visit(node)\n\n\ndef check_yield_in_non_generator(filename):\n    with open(filename, "r") as source:\n        tree = ast.parse(source.read())\n        checker = YieldInNonGeneratorChecker()\n        checker.visit(tree)\n\n\nif __name__ == "__main__":\n    for filename in sys.argv[1:]:\n        check_yield_in_non_generator(filename)