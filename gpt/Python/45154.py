import numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate a test texture (cylindrical map)\ntexture = np.tile(np.linspace(0, 1, 360), (180, 1))\n\ndef map_to_sphere(x, y, radius, texture):\n    phi = np.arctan2(y, x)  # Longitude\n    theta = np.arccos(np.clip(radius / np.sqrt(x**2 + y**2 + radius**2), -1.0, 1.0))  # Latitude\n    \n    u = int((phi + np.pi) / (2 * np.pi) * texture.shape[1])\n    v = int((theta / np.pi) * texture.shape[0])\n    \n    return texture[v % texture.shape[0], u % texture.shape[1]]\n\ndef draw_sphere(radius, texture):\n    image = np.zeros((2 * radius, 2 * radius))\n\n    for i in range(-radius, radius):\n        for j in range(-radius, radius):\n            if i**2 + j**2 <= radius**2:\n                image[j + radius, i + radius] = map_to_sphere(i, j, radius, texture)\n\n    return image\n\n# Set sphere radius\nradius = 100\n\n# Draw the sphere\nsphere_image = draw_sphere(radius, texture)\n\n# Display the sphere\nplt.imshow(sphere_image, cmap='gray')\nplt.axis('off')\nplt.show()