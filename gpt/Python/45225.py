import ldap\n   from django_auth_ldap.config import LDAPSearch, GroupOfNamesType\n\n   AUTHENTICATION_BACKENDS = [\n       'django_auth_ldap.backend.LDAPBackend',\n       'django.contrib.auth.backends.ModelBackend',\n   ]\n\n   # LDAP server connection\n   AUTH_LDAP_SERVER_URI = "ldap://your-ldap-server.example.com"\n\n   # Define LDAP search settings\n   AUTH_LDAP_BIND_DN = "your-bind-dn"\n   AUTH_LDAP_BIND_PASSWORD = "your-bind-password"\n   AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=users,dc=example,dc=com",\n                                      ldap.SCOPE_SUBTREE, "(uid=%(user)s)")\n\n   # Map LDAP attributes to Django user model fields\n   AUTH_LDAP_USER_ATTR_MAP = {\n       "first_name": "givenName",\n       "last_name": "sn",\n       "email": "mail"\n   }\n\n   # User flags by LDAP group membership\n   AUTH_LDAP_USER_FLAGS_BY_GROUP = {\n       "is_active": "cn=active,ou=groups,dc=example,dc=com",\n       "is_staff": "cn=staff,ou=groups,dc=example,dc=com",\n       "is_superuser": "cn=superuser,ou=groups,dc=example,dc=com"\n   }\n\n   # Populate the Django user from the LDAP directory\n   AUTH_LDAP_ALWAYS_UPDATE_USER = True\n\n   # Cache groups for faster performance\n   AUTH_LDAP_FIND_GROUP_PERMS = True\n\n   # Logging for LDAP queries (optional)\n   import logging\n   logger = logging.getLogger('django_auth_ldap')\n   logger.addHandler(logging.StreamHandler())\n   logger.setLevel(logging.DEBUG)