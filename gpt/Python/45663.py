import math\n\ndef sieve(limit):\n    is_prime = [True] * (limit + 1)\n    p = 2\n    while (p * p <= limit):\n        if is_prime[p] == True:\n            for i in range(p * p, limit + 1, p):\n                is_prime[i] = False\n        p += 1\n    prime_list = [p for p in range(2, limit + 1) if is_prime[p]]\n    return prime_list\n\ndef count_lattice_points(n):\n    count = 0\n    for x in range(1, n):\n        if (x * x) % n == 0:\n            count += 1\n    return 4 * count\n\ndef solve(limit, target_points):\n    primes = sieve(int(math.sqrt(limit)) + 1)\n    result = 0\n    for n in range(2, limit + 1, 2):\n        if count_lattice_points(n) == target_points:\n            result += n\n    return result\n\nlimit = 10**11\ntarget_points = 420\nprint(solve(limit, target_points))