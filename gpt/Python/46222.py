import random\n\ndef round_robin(n):\n    """Generate a round-robin schedule for n teams."""\n    schedule = []\n    for round in range(n - 1):\n        round_matches = []\n        for i in range(n // 2):\n            t1 = (round + i) % (n - 1)\n            t2 = (n - 1 - i + round) % (n - 1)\n            if i == 0:\n                t2 = n - 1\n            round_matches.append((t1, t2))\n        schedule.append(round_matches)\n    return schedule\n\ndef generate_schedule(teams):\n    """Generate a full schedule for the given teams with no overlaps or holes."""\n    n = len(teams)\n    if n % 2 == 1:\n        teams.append(None)  # add a dummy team for bye weeks\n\n    schedule = round_robin(len(teams))\n    \n    # Convert team indices to team names and remove dummy team matches\n    full_schedule = []\n    for round in schedule:\n        week = []\n        for match in round:\n            if teams[match[0]] is not None and teams[match[1]] is not None:\n                week.append((teams[match[0]], teams[match[1]]))\n        full_schedule.append(week)\n\n    return full_schedule\n\ndef inter_division_matches(teams_div1, teams_div2):\n    """Generate inter-division matches where each team in division 1 plays each team in division 2 once."""\n    matches = []\n    for team1 in teams_div1:\n        for team2 in teams_div2:\n            matches.append((team1, team2))\n    random.shuffle(matches)  # Shuffle to distribute matches more evenly\n    return matches\n\n# Example usage:\nteams_div1 = ["Team A", "Team B", "Team C"]\nteams_div2 = ["Team D", "Team E", "Team F"]\nteams = teams_div1 + teams_div2\n\nschedule = generate_schedule(teams)\nfor week, matches in enumerate(schedule):\n    print(f"Week {week + 1}: {matches}")\n\ninter_division = inter_division_matches(teams_div1, teams_div2)\nfor match in inter_division:\n    print(f"Inter-Division Match: {match}")