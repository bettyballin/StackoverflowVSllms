def generate_pagination_links(current_page, total_pages):\n    pagination_links = []\n\n    # Add the first page\n    pagination_links.append(1)\n\n    # Add the "..." if the current page is far from the first page\n    if current_page > 4:\n        pagination_links.append("...")\n\n    # Add two pages before the current page\n    for i in range(max(2, current_page - 2), current_page):\n        pagination_links.append(i)\n\n    # Add the current page\n    pagination_links.append(current_page)\n\n    # Add two pages after the current page\n    for i in range(current_page + 1, min(total_pages, current_page + 2) + 1):\n        pagination_links.append(i)\n\n    # Add the "..." if the current page is far from the last page\n    if current_page < total_pages - 3:\n        pagination_links.append("...")\n\n    # Add the last page\n    pagination_links.append(total_pages)\n\n    return pagination_links\n\n# Example usage\ncurrent_page = 6\ntotal_pages = 593\nprint(generate_pagination_links(current_page, total_pages))