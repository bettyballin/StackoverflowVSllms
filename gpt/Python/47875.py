def search_last_x_lines(file_path, search_string, num_lines=10):\n    with open(file_path, 'rb') as file:\n        # Go to the end of the file\n        file.seek(0, 2)\n        file_size = file.tell()\n        \n        buffer = bytearray()\n        lines = []\n        \n        # Read the file backwards until we have the required number of lines\n        for pos in range(file_size - 1, -1, -1):\n            file.seek(pos)\n            char = file.read(1)\n            if char == b'\n':\n                lines.append(buffer.decode()[::-1])\n                buffer = bytearray()\n                if len(lines) == num_lines:\n                    break\n            else:\n                buffer.extend(char)\n        \n        if buffer:\n            lines.append(buffer.decode()[::-1])\n        \n        # Reverse lines to correct order\n        lines = lines[::-1]\n\n    for line in lines:\n        if search_string in line:\n            print("FOUND")\n            return True\n    return False\n\n# Usage example\nfile_path = 'path/to/your/file.txt'\nsearch_string = 'foo'\nsearch_last_x_lines(file_path, search_string)