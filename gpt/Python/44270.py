# singleton.py\n\nclass GameData:\n    _instance = None\n\n    def __new__(cls, *args, **kwargs):\n        if not cls._instance:\n            cls._instance = super(GameData, cls).__new__(cls, *args, **kwargs)\n            cls._instance._initialized = False\n        return cls._instance\n\n    def __init__(self):\n        if self._initialized:\n            return\n        self._initialized = True\n        self.equipment = []\n        self.units = []\n        self.weather_conditions = []\n        self.terrain_types = []\n\n    def initialize_data(self):\n        self.equipment = ["sword", "shield", "bow"]\n        self.units = ["infantry", "archer", "cavalry"]\n        self.weather_conditions = ["sunny", "rainy", "foggy"]\n        self.terrain_types = ["forest", "plains", "mountains"]\n\n# main.py\n\nfrom singleton import GameData\n\ndef main():\n    game_data = GameData()\n    game_data.initialize_data()\n\n    # Access the singleton instance data\n    print(f"Available equipment: {game_data.equipment}")\n    print(f"Unit types: {game_data.units}")\n    print(f"Weather conditions: {game_data.weather_conditions}")\n    print(f"Terrain types: {game_data.terrain_types}")\n\nif __name__ == "__main__":\n    main()