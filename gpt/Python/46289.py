from datetime import datetime, timedelta\n\ndef split_duration(start_time, end_time):\n    if start_time > end_time:\n        raise ValueError("Start time must be before end time")\n    \n    # If times are on the same day\n    if start_time.date() == end_time.date():\n        return [(start_time, end_time)]\n    \n    # Otherwise, split across midnight\n    split_times = []\n    \n    # Time until midnight\n    midnight = datetime.combine(start_time.date() + timedelta(days=1), datetime.min.time())\n    split_times.append((start_time, midnight))\n    \n    # Time from midnight\n    split_times.append((midnight, end_time))\n    \n    return split_times\n\n# Example usage\nstart_time = datetime(2023, 1, 1, 22, 0)  # Jan 1, 2023 22:00\nend_time = datetime(2023, 1, 2, 2, 0)    # Jan 2, 2023 02:00\n\ndurations = split_duration(start_time, end_time)\nfor start, end in durations:\n    print(f"From {start} to {end}, duration: {end - start}")