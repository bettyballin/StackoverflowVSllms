from Crypto.Cipher import AES\nfrom Crypto.Util import Counter\nimport os\n\n# Generate a random key and nonce\nkey = os.urandom(16)\nnonce = os.urandom(8)\n\n# Create a counter object for CTR mode\nctr = Counter.new(64, prefix=nonce)\n\n# Initialize the cipher\ncipher = AES.new(key, AES.MODE_CTR, counter=ctr)\n\n# Encrypt the data\nplaintext = b'This is a test message for encryption'\nciphertext = cipher.encrypt(plaintext)\n\n# Decrypt a part of the ciphertext\nstart_pos = 10\nlength = 20\n\n# Create a new counter object starting at the correct position\nctr = Counter.new(64, prefix=nonce, initial_value=start_pos // AES.block_size)\ncipher = AES.new(key, AES.MODE_CTR, counter=ctr)\n\n# Decrypt the specified part\ndecrypted_part = cipher.decrypt(ciphertext[start_pos:start_pos + length])\n\nprint(f"Decrypted part: {decrypted_part}")