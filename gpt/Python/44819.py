import unittest\nfrom unittest.mock import patch\n\n# Production code\nclass DatabaseWrapper:\n    def query(self, sql):\n        # Actual database call\n        pass\n\nclass Service:\n    def __init__(self, db_wrapper):\n        self.db_wrapper = db_wrapper\n\n    def get_data(self):\n        return self.db_wrapper.query("SELECT * FROM table")\n\n# Test code\nclass TestService(unittest.TestCase):\n    @patch('path.to.DatabaseWrapper')\n    def test_get_data(self, MockDatabaseWrapper):\n        mock_db = MockDatabaseWrapper.return_value\n        mock_db.query.return_value = "mocked data"\n        \n        service = Service(mock_db)\n        result = service.get_data()\n        \n        self.assertEqual(result, "mocked data")\n\nif __name__ == '__main__':\n    unittest.main()