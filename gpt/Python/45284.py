import miniupnpc\n\ndef main():\n    # Create a UPnP object\n    upnp = miniupnpc.UPnP()\n\n    # Discover UPnP devices on the network\n    upnp.discoverdelay = 200\n    upnp.discover()\n\n    # Select a discovered IGD device\n    upnp.selectigd()\n\n    # Get external IP address\n    external_ip = upnp.externalipaddress()\n    print(f"External IP address: {external_ip}")\n\n    # Add a port mapping\n    external_port = 12345\n    internal_port = 12345\n    protocol = 'TCP'\n    upnp.addportmapping(external_port, protocol, upnp.lanaddr, internal_port, 'UPnP Test', '')\n\n    print(f"Port {external_port} mapped to {internal_port} (TCP) on {upnp.lanaddr}")\n\n    # List all port mappings\n    i = 0\n    while True:\n        mapping = upnp.getgenericportmapping(i)\n        if mapping is None:\n            break\n        print(f"Port mapping {i}: {mapping}")\n        i += 1\n\n    # Remove the port mapping\n    upnp.deleteportmapping(external_port, protocol)\n    print(f"Port {external_port} (TCP) removed.")\n\nif __name__ == '__main__':\n    main()