from cryptography.fernet import Fernet\n\n# Generate and store a key\ndef generate_key():\n    key = Fernet.generate_key()\n    with open("secret.key", "wb") as key_file:\n        key_file.write(key)\n\n# Load the previously generated key\ndef load_key():\n    return open("secret.key", "rb").read()\n\n# Encrypt a password\ndef encrypt_password(password):\n    key = load_key()\n    f = Fernet(key)\n    encrypted_password = f.encrypt(password.encode())\n    return encrypted_password\n\n# Decrypt a password\ndef decrypt_password(encrypted_password):\n    key = load_key()\n    f = Fernet(key)\n    decrypted_password = f.decrypt(encrypted_password).decode()\n    return decrypted_password\n\n# Example usage\nif __name__ == "__main__":\n    generate_key()\n    password = "my_secret_password"\n    encrypted_password = encrypt_password(password)\n    print(f"Encrypted password: {encrypted_password}")\n    \n    decrypted_password = decrypt_password(encrypted_password)\n    print(f"Decrypted password: {decrypted_password}")