import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, Gdk\n\nclass MyWindow(Gtk.Window):\n    def __init__(self):\n        super(MyWindow, self).__init__(title="Window Resize Detection")\n        self.set_default_size(400, 300)\n        self.connect("configure-event", self.on_configure_event)\n        self.previous_width = -1\n        self.previous_height = -1\n\n    def on_configure_event(self, widget, event):\n        new_width, new_height = widget.get_size()\n        if (self.previous_width != new_width or self.previous_height != new_height) and self.previous_width != -1 and self.previous_height != -1:\n            print(f"Window manually resized to {new_width}x{new_height}")\n        self.previous_width = new_width\n        self.previous_height = new_height\n        return False\n\nwin = MyWindow()\nwin.connect("destroy", Gtk.main_quit)\nwin.show_all()\nGtk.main()