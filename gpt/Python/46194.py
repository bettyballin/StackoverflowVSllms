import math\n\n# Function to find the point with the lowest y-coordinate\ndef lowest_point(points):\n    lowest = points[0]\n    for point in points[1:]:\n        if point[1] < lowest[1] or (point[1] == lowest[1] and point[0] < lowest[0]):\n            lowest = point\n    return lowest\n\n# Function to compute the polar angle between two points\ndef polar_angle(p0, p1):\n    y_span = p1[1] - p0[1]\n    x_span = p1[0] - p0[0]\n    return math.atan2(y_span, x_span)\n\n# Function to compute the cross product of vectors p1p2 and p1p3\ndef cross_product(p1, p2, p3):\n    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])\n\n# Function to compute the convex hull using Graham scan\ndef graham_scan(points):\n    pivot = lowest_point(points)\n    points.remove(pivot)\n    points.sort(key=lambda point: (polar_angle(pivot, point), point))\n\n    hull = [pivot, points[0]]\n    for point in points[1:]:\n        while len(hull) > 1 and cross_product(hull[-2], hull[-1], point) <= 0:\n            hull.pop()\n        hull.append(point)\n    \n    return hull\n\n# Example usage\npoints = [(0,0), (1,1), (2,2), (3,0), (-1,-1), (2,1)]\nhull = graham_scan(points)\nprint("Convex Hull:", hull)