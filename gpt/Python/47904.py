from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import hashes\n\n# Load the private key (replace 'your_private_key.pem' with your key file path)\nwith open('your_private_key.pem', 'rb') as key_file:\n    private_key = serialization.load_pem_private_key(\n        key_file.read(),\n        password=b'PASSPHRASE'  # replace 'PASSPHRASE' with your actual passphrase\n    )\n\n# The encrypted message (replace 'encrypted_message' with your actual encrypted message)\nencrypted_message = b'...'\n\n# Decrypt the message\ndecrypted_message = private_key.decrypt(\n    encrypted_message,\n    padding.OAEP(\n        mgf=padding.MGF1(algorithm=hashes.SHA256()),\n        algorithm=hashes.SHA256(),\n        label=None\n    )\n)\n\nprint(decrypted_message.decode('utf-8'))