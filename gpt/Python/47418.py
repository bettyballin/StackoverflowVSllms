import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, Gdk\n\nclass TreeViewExample(Gtk.Window):\n\n    def __init__(self):\n        Gtk.Window.__init__(self, title="TreeView Example")\n        self.set_default_size(400, 300)\n\n        # Create a TreeStore with one string column to use as the model\n        self.treestore = Gtk.TreeStore(str)\n\n        # Add some data to the TreeStore\n        parent = self.treestore.append(None, ["Parent 1"])\n        self.treestore.append(parent, ["Child 1"])\n        self.treestore.append(parent, ["Child 2"])\n\n        parent = self.treestore.append(None, ["Parent 2"])\n        self.treestore.append(parent, ["Child 1"])\n\n        # Create the TreeView\n        self.treeview = Gtk.TreeView(model=self.treestore)\n\n        # Create a CellRendererText to render the data\n        renderer = Gtk.CellRendererText()\n        column = Gtk.TreeViewColumn("Column 0", renderer, text=0)\n        self.treeview.append_column(column)\n\n        # Enable grid lines in the TreeView\n        self.treeview.set_grid_lines(Gtk.TreeViewGridLines.BOTH)\n\n        # Add TreeView to the window\n        self.add(self.treeview)\n\n        # Apply CSS\n        css_provider = Gtk.CssProvider()\n        css = b"""\n        treeview {\n            -GtkTreeView-vertical-separator: 2;\n            -GtkTreeView-horizontal-separator: 2;\n        }\n        """\n        css_provider.load_from_data(css)\n        screen = Gdk.Screen.get_default()\n        style_context = Gtk.StyleContext()\n        style_context.add_provider_for_screen(screen, css_provider, Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION)\n\nwin = TreeViewExample()\nwin.connect("destroy", Gtk.main_quit)\nwin.show_all()\nGtk.main()