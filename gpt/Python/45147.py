from sqlalchemy import Table, Column, Integer, ForeignKey, Boolean\nfrom sqlalchemy.orm import relationship, declarative_base\nfrom sqlalchemy import create_engine\n\nBase = declarative_base()\n\n# Association table with an additional column for the default flag\nperson_addresses = Table('person_addresses', Base.metadata,\n    Column('person_id', Integer, ForeignKey('person.id'), primary_key=True),\n    Column('address_id', Integer, ForeignKey('address.id'), primary_key=True),\n    Column('is_default', Boolean, default=False)\n)\n\nclass Person(Base):\n    __tablename__ = 'person'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n\n    addresses = relationship('Address', secondary=person_addresses, back_populates='persons')\n\nclass Address(Base):\n    __tablename__ = 'address'\n    id = Column(Integer, primary_key=True)\n    street = Column(String)\n\n    persons = relationship('Person', secondary=person_addresses, back_populates='addresses')\n\n# Example usage\nengine = create_engine('sqlite:///:memory:')\nBase.metadata.create_all(engine)