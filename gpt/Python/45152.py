import imaplib\nimport email\nfrom email.policy import default\n\ndef fetch_emails(username, password, mail_server, mailbox='inbox'):\n    # Connect to the IMAP server\n    mail = imaplib.IMAP4_SSL(mail_server)\n    mail.login(username, password)\n    \n    # Select the mailbox (e.g., "inbox")\n    mail.select(mailbox)\n    \n    # Search for all emails in the selected mailbox\n    status, messages = mail.search(None, 'ALL')\n    \n    email_list = []\n    for num in messages[0].split():\n        # Fetch the email by ID\n        status, data = mail.fetch(num, '(RFC822)')\n        \n        # Get the raw email content\n        raw_email = data[0][1]\n        \n        # Parse the raw email content to a Python email object\n        parsed_email = email.message_from_bytes(raw_email, policy=default)\n        \n        # Create a dictionary to store email details\n        email_details = {\n            'subject': parsed_email['subject'],\n            'from': parsed_email['from'],\n            'to': parsed_email['to'],\n            'date': parsed_email['date'],\n            'body': get_email_body(parsed_email),\n            'attachments': get_email_attachments(parsed_email)\n        }\n        \n        email_list.append(email_details)\n    \n    # Logout and close the connection\n    mail.logout()\n    return email_list\n\ndef get_email_body(parsed_email):\n    # Get the email body (plain text or HTML)\n    for part in parsed_email.walk():\n        if part.get_content_type() == "text/plain":\n            return part.get_payload(decode=True).decode()\n        elif part.get_content_type() == "text/html":\n            return part.get_payload(decode=True).decode()\n    return ''\n\ndef get_email_attachments(parsed_email):\n    attachments = []\n    for part in parsed_email.walk():\n        # Check if the part is an attachment\n        if part.get_content_disposition() and 'attachment' in part.get_content_disposition():\n            attachment = {\n                'filename': part.get_filename(),\n                'content': part.get_payload(decode=True)\n            }\n            attachments.append(attachment)\n    return attachments\n\n# Usage example\nusername = 'someguy@mywebsite.com'\npassword = 'user_password'\nmail_server = 'imap.mywebsite.com'\n\nemails = fetch_emails(username, password, mail_server)\nfor email in emails:\n    print(email)