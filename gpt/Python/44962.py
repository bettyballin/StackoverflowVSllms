import urllib2\nimport httplib\nimport ssl\n\nclass HTTPSConnectionWithProxy(httplib.HTTPSConnection):\n    def __init__(self, proxy_host, proxy_port, *args, **kwargs):\n        self.proxy_host = proxy_host\n        self.proxy_port = proxy_port\n        httplib.HTTPSConnection.__init__(self, *args, **kwargs)\n\n    def connect(self):\n        self.sock = socket.create_connection((self.proxy_host, self.proxy_port))\n        self.sock.sendall("CONNECT %s:%d HTTP/1.1\r\n" % (self.host, self.port))\n        self.sock.sendall("Host: %s:%d\r\n" % (self.host, self.port))\n        self.sock.sendall("\r\n")\n        response = self.sock.recv(8192)\n        if response.find("200 Connection established") == -1:\n            raise Exception("Unable to establish proxy connection: %s" % response)\n        self.sock = ssl.wrap_socket(self.sock, self.key_file, self.cert_file)\n\nclass HTTPSHandlerWithProxy(urllib2.HTTPSHandler):\n    def __init__(self, proxy_host, proxy_port, *args, **kwargs):\n        self.proxy_host = proxy_host\n        self.proxy_port = proxy_port\n        urllib2.HTTPSHandler.__init__(self, *args, **kwargs)\n\n    def https_open(self, req):\n        return self.do_open(self.get_connection, req)\n\n    def get_connection(self, host, **kwargs):\n        return HTTPSConnectionWithProxy(self.proxy_host, self.proxy_port, host, **kwargs)\n\nproxy_host = "myproxy"\nproxy_port = 8080\nproxy_handler = urllib2.ProxyHandler({"http": "http://user:pass@%s:%d" % (proxy_host, proxy_port)})\n\nopener = urllib2.build_opener(HTTPSHandlerWithProxy(proxy_host, proxy_port), proxy_handler)\nurllib2.install_opener(opener)\n\nrequest = urllib2.Request("https://example.com")\nresponse = urllib2.urlopen(request)\nprint(response.read())