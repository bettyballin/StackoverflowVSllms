def calculate_total_cost(bid_price):\n    # Calculate usage price\n    usage_price = 0.10 * bid_price\n    if usage_price < 10:\n        usage_price = 10\n    elif usage_price > 50:\n        usage_price = 50\n\n    # Calculate seller price\n    seller_price = 0.02 * bid_price\n\n    # Calculate added price\n    if 1 <= bid_price <= 500:\n        added_price = 5\n    elif 501 <= bid_price <= 1000:\n        added_price = 10\n    elif 1001 <= bid_price <= 3000:\n        added_price = 15\n    else:\n        added_price = 20\n\n    # Storing cost\n    storing_cost = 100\n\n    # Total cost\n    total_cost = bid_price + usage_price + seller_price + added_price + storing_cost\n    return total_cost\n\ndef find_bid_price(target_total):\n    low = 0\n    high = target_total\n    accuracy = 0.01  # Define the acceptable error margin\n\n    while high - low > accuracy:\n        mid = (low + high) / 2\n        total_cost = calculate_total_cost(mid)\n\n        if total_cost < target_total:\n            low = mid\n        else:\n            high = mid\n\n    return (low + high) / 2\n\n# Example usage\ntarget_total = 2000\nbid_price = find_bid_price(target_total)\nprint(f"The bid price for a total price of ${target_total} is approximately ${bid_price:.2f}")