from google.appengine.api import memcache\nfrom google.appengine.ext import ndb\nimport uuid\nimport datetime\n\nclass Session(ndb.Model):\n    data = ndb.JsonProperty()\n    expires_at = ndb.DateTimeProperty()\n\ndef create_session(data):\n    session_id = str(uuid.uuid4())\n    expires_at = datetime.datetime.utcnow() + datetime.timedelta(hours=1)\n    session = Session(id=session_id, data=data, expires_at=expires_at)\n    session.put()  # Save to Datastore\n    \n    memcache.set(session_id, data, time=3600)  # Save to Memcache with expiration time\n    return session_id\n\ndef get_session(session_id):\n    session_data = memcache.get(session_id)\n    if session_data is None:\n        session = Session.get_by_id(session_id)\n        if session:\n            if session.expires_at > datetime.datetime.utcnow():\n                session_data = session.data\n                memcache.set(session_id, session_data, time=3600)\n            else:\n                session.key.delete()  # Session expired, delete from Datastore\n    return session_data\n\ndef update_session(session_id, data):\n    session = Session.get_by_id(session_id)\n    if session:\n        session.data = data\n        session.put()  # Update Datastore\n        memcache.set(session_id, data, time=3600)  # Update Memcache\n\ndef delete_session(session_id):\n    session = Session.get_by_id(session_id)\n    if session:\n        session.key.delete()  # Delete from Datastore\n    memcache.delete(session_id)  # Delete from Memcache\n\n# Usage Example:\n# Creating a session\nsession_id = create_session({'user_id': '1234', 'cart': []})\n\n# Retrieving a session\nsession_data = get_session(session_id)\n\n# Updating a session\nupdate_session(session_id, {'user_id': '1234', 'cart': ['item1']})\n\n# Deleting a session\ndelete_session(session_id)