import time\n\nclass ProgressBar:\n    def __init__(self, alpha=0.1):\n        self.start_time = time.time()\n        self.last_update_time = self.start_time\n        self.last_progress = 0\n        self.alpha = alpha\n        self.ema_rate = None\n\n    def update(self, current_progress):\n        now = time.time()\n        elapsed_time = now - self.last_update_time\n        if elapsed_time <= 0:\n            return None  # Prevent division by zero or negative time intervals\n        \n        current_rate = (current_progress - self.last_progress) / elapsed_time\n        \n        if self.ema_rate is None:\n            self.ema_rate = current_rate\n        else:\n            self.ema_rate = self.alpha * current_rate + (1 - self.alpha) * self.ema_rate\n        \n        self.last_update_time = now\n        self.last_progress = current_progress\n\n        if self.ema_rate <= 0:\n            return None  # Prevent division by zero or negative rates\n\n        remaining_progress = 1.0 - current_progress\n        eta = remaining_progress / self.ema_rate\n        return eta\n\n    def get_eta(self, current_progress):\n        eta = self.update(current_progress)\n        if eta is not None:\n            return eta\n        else:\n            return "Calculating..."\n\n# Example usage\nprogress_bar = ProgressBar(alpha=0.1)\n\nfor i in range(101):\n    time.sleep(0.1)  # Simulate work\n    progress = i / 100.0\n    eta = progress_bar.get_eta(progress)\n    print(f"Progress: {progress*100:.2f}%, ETA: {eta:.2f} seconds" if isinstance(eta, float) else eta)