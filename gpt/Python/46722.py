import nltk\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import classification_report\n\n# Sample dataset\ntexts = ["I am so happy today!", "I am feeling sad.", "This is frustrating.", "I love this!"]\nlabels = ["happy", "sad", "angry", "happy"]\n\n# Preprocessing\nnltk.download('stopwords')\nstop_words = set(nltk.corpus.stopwords.words('english'))\n\ndef preprocess_text(text):\n    words = nltk.word_tokenize(text.lower())\n    words = [word for word in words if word.isalnum() and word not in stop_words]\n    return ' '.join(words)\n\nprocessed_texts = [preprocess_text(text) for text in texts]\n\n# Feature extraction\nvectorizer = TfidfVectorizer()\nX = vectorizer.fit_transform(processed_texts)\n\n# Splitting the dataset\nX_train, X_test, y_train, y_test = train_test_split(X, labels, test_size=0.2, random_state=42)\n\n# Model training\nmodel = MultinomialNB()\nmodel.fit(X_train, y_train)\n\n# Prediction and evaluation\ny_pred = model.predict(X_test)\nprint(classification_report(y_test, y_pred))