import numpy as np\nfrom scipy.optimize import fsolve\n\n# Define the trilinear interpolation function\ndef trilinear_interpolation(coords, V000, V100, V010, V001, V110, V101, V011, V111, V_target):\n    x, y, z = coords\n    V = (1 - x) * (1 - y) * (1 - z) * V000 + \\n        x * (1 - y) * (1 - z) * V100 + \\n        (1 - x) * y * (1 - z) * V010 + \\n        (1 - x) * (1 - y) * z * V001 + \\n        x * y * (1 - z) * V110 + \\n        x * (1 - y) * z * V101 + \\n        (1 - x) * y * z * V011 + \\n        x * y * z * V111\n    return V - V_target\n\n# Given values at the cube vertices\nV000, V100, V010, V001, V110, V101, V011, V111 = 1, 2, 3, 4, 5, 6, 7, 8\nV_target = 4.5  # The value at the unknown point (x, y, z)\n\n# Initial guess for (x, y, z)\ninitial_guess = [0.5, 0.5, 0.5]\n\n# Solve the system of equations\nresult = fsolve(trilinear_interpolation, initial_guess, args=(V000, V100, V010, V001, V110, V101, V011, V111, V_target))\n\nprint("The coordinates (x, y, z) are:", result)