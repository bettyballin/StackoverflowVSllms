class Expr:\n    def __init__(self, left):\n        self.left = left\n\n    def __eq__(self, right):\n        return f"{self.left} == {right}"\n\n    def __ne__(self, right):\n        return f"{self.left} != {right}"\n\n    def __lt__(self, right):\n        return f"{self.left} < {right}"\n\n    def __le__(self, right):\n        return f"{self.left} <= {right}"\n\n    def __gt__(self, right):\n        return f"{self.left} > {right}"\n\n    def __ge__(self, right):\n        return f"{self.left} >= {right}"\n\ndef magic(expression):\n    print(expression)\n\n# Example usage with an object\nclass MyObject:\n    def __init__(self, value):\n        self.value = value\n\n    def __repr__(self):\n        return f"MyObject({self.value})"\n\nobj = MyObject(10)\nexpr = Expr(obj)\nmagic(expr == MyObject(10))