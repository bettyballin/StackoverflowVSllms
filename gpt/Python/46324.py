from itertools import product\n\ndef evaluate_expression(tokens):\n    try:\n        return eval("".join(tokens))\n    except ZeroDivisionError:\n        return None\n\ndef valid_mathematical_expression(integers, operators, target):\n    n = len(integers)\n    if n == 0:\n        return False\n    \n    # Generate all possible operator sequences\n    operator_sequences = product(operators, repeat=n-1)\n    \n    for op_seq in operator_sequences:\n        expression = []\n        for i in range(n):\n            expression.append(str(integers[i]))\n            if i < n-1:\n                expression.append(op_seq[i])\n        # Check if the expression evaluates to the target\n        if evaluate_expression(expression) == target:\n            return True\n    return False\n\n# Example usage\nintegers = [2, 3, 5, 25]\noperators = ['+', '-', '*', '/']\ntarget = 25\n\nresult = valid_mathematical_expression(integers, operators, target)\nprint("YES" if result else "NO")