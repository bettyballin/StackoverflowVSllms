from datetime import datetime, timedelta\n\n# Sample contact data\ncontacts = [\n    {"email": "alice@example.com", "last_contacted": datetime(2023, 9, 25), "contact_count": 30},\n    {"email": "bob@example.com", "last_contacted": datetime(2023, 10, 10), "contact_count": 5},\n    {"email": "charlie@example.com", "last_contacted": datetime(2023, 10, 2), "contact_count": 15},\n    # Add more contacts here\n]\n\ndef calculate_recency_points(last_contacted):\n    now = datetime.now()\n    if last_contacted > now - timedelta(days=1):\n        return 5\n    elif last_contacted > now - timedelta(days=3):\n        return 4\n    elif last_contacted > now - timedelta(days=7):\n        return 3\n    elif last_contacted > now - timedelta(days=30):\n        return 2\n    elif last_contacted > now - timedelta(days=180):\n        return 1\n    return 0\n\ndef calculate_frequency_points(contact_count):\n    if contact_count >= 25:\n        return 5\n    elif contact_count >= 15:\n        return 4\n    elif contact_count >= 10:\n        return 3\n    elif contact_count >= 5:\n        return 2\n    elif contact_count >= 2:\n        return 1\n    return 0\n\ndef calculate_total_points(contact):\n    recency_points = calculate_recency_points(contact["last_contacted"])\n    frequency_points = calculate_frequency_points(contact["contact_count"])\n    return recency_points + frequency_points\n\n# Calculate scores and sort contacts\nfor contact in contacts:\n    contact["score"] = calculate_total_points(contact)\n\nsorted_contacts = sorted(contacts, key=lambda x: x["score"], reverse=True)\n\nfor contact in sorted_contacts:\n    print(f'{contact["email"]}: {contact["score"]}')