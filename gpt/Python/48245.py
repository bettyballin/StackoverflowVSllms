import boto3\nimport zipfile\nimport io\nimport os\n\ns3_client = boto3.client('s3')\n\ndef lambda_handler(event, context):\n    bucket_name = 'your-bucket-name'\n    image_keys = event['image_keys']\n    zip_file_key = 'path/to/your-zip-file.zip'\n    \n    # Create in-memory zip file\n    zip_buffer = io.BytesIO()\n    with zipfile.ZipFile(zip_buffer, 'w', zipfile.ZIP_DEFLATED) as zf:\n        for key in image_keys:\n            response = s3_client.get_object(Bucket=bucket_name, Key=key)\n            file_content = response['Body'].read()\n            zf.writestr(os.path.basename(key), file_content)\n    \n    # Upload the zip file to S3\n    zip_buffer.seek(0)\n    s3_client.upload_fileobj(zip_buffer, bucket_name, zip_file_key)\n    \n    # Generate a presigned URL for the zip file\n    presigned_url = s3_client.generate_presigned_url(\n        'get_object',\n        Params={'Bucket': bucket_name, 'Key': zip_file_key},\n        ExpiresIn=3600\n    )\n    \n    return {\n        'statusCode': 200,\n        'body': {\n            'zip_file_url': presigned_url\n        }\n    }