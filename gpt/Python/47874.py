import cv2\nimport numpy as np\n\n# Load the large image and the target (sub-image)\nlarge_image = cv2.imread('large_image.png')\ntarget_image = cv2.imread('target_image.png')\n\n# Convert images to grayscale\nlarge_gray = cv2.cvtColor(large_image, cv2.COLOR_BGR2GRAY)\ntarget_gray = cv2.cvtColor(target_image, cv2.COLOR_BGR2GRAY)\n\n# Apply template matching\nresult = cv2.matchTemplate(large_gray, target_gray, cv2.TM_CCOEFF_NORMED)\n\n# Get the best match position\nmin_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)\n\n# Get the dimensions of the target image\nt_height, t_width = target_image.shape[:2]\n\n# Determine the top-left corner of the bounding box\ntop_left = max_loc\nbottom_right = (top_left[0] + t_width, top_left[1] + t_height)\n\n# Draw a rectangle around the matched region\ncv2.rectangle(large_image, top_left, bottom_right, (0, 255, 0), 2)\n\n# Display the result\ncv2.imshow('Detected Target', large_image)\ncv2.waitKey(0)\ncv2.destroyAllWindows()