from PIL import Image, ImageDraw, ImageFilter\n\ndef create_gradient_border(image, border_width=50):\n    width, height = image.size\n\n    # Create an alpha mask\n    mask = Image.new('L', (width, height), 255)\n    draw = ImageDraw.Draw(mask)\n\n    # Draw linear gradients on the edges\n    for x in range(border_width):\n        alpha = int(255 * (1 - x / border_width))\n        draw.line([(x, 0), (x, height)], fill=alpha)\n        draw.line([(width - x - 1, 0), (width - x - 1, height)], fill=alpha)\n    \n    for y in range(border_width):\n        alpha = int(255 * (1 - y / border_width))\n        draw.line([(0, y), (width, y)], fill=alpha)\n        draw.line([(0, height - y - 1), (width, height - y - 1)], fill=alpha)\n\n    # Draw radial gradients on the corners\n    for corner in [(0, 0), (width, 0), (0, height), (width, height)]:\n        x0, y0 = (corner[0] - border_width, corner[1] - border_width)\n        x1, y1 = (corner[0] + border_width, corner[1] + border_width)\n        for x in range(x0, x1):\n            for y in range(y0, y1):\n                distance = ((x - corner[0]) ** 2 + (y - corner[1]) ** 2) ** 0.5\n                if distance < border_width:\n                    alpha = int(255 * (1 - distance / border_width))\n                    if 0 <= x < width and 0 <= y < height:\n                        current_alpha = mask.getpixel((x, y))\n                        mask.putpixel((x, y), min(current_alpha, alpha))\n\n    # Apply the mask to the image\n    image.putalpha(mask)\n    return image\n\n# Load your image\nimage = Image.open('path_to_your_image.jpg').convert('RGBA')\n\n# Create gradient border\nimage_with_border = create_gradient_border(image)\n\n# Save the output\nimage_with_border.save('output_image.png')