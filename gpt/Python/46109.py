import re\nimport email\nfrom email import policy\nfrom email.parser import BytesParser\nfrom database import get_format_definitions, save_parsed_data\n\nclass EmailParserFactory:\n    def __init__(self):\n        self.parsers = {\n            'format1': Format1Parser(),\n            'format2': Format2Parser(),\n            # Add more format parsers here\n        }\n\n    def get_parser(self, format_id):\n        return self.parsers.get(format_id)\n\nclass Format1Parser:\n    def parse(self, email_message):\n        # Implement format-specific parsing logic\n        data = {}\n        # Validate data\n        return data\n\nclass Format2Parser:\n    def parse(self, email_message):\n        # Implement format-specific parsing logic\n        data = {}\n        # Validate data\n        return data\n\ndef identify_format(subject, headers):\n    format_definitions = get_format_definitions()\n    for format_def in format_definitions:\n        if re.match(format_def['subject_regex'], subject):\n            return format_def['format_id']\n    return None\n\ndef process_email(raw_email):\n    email_message = BytesParser(policy=policy.default).parsebytes(raw_email)\n    subject = email_message['subject']\n    headers = email_message.keys()\n\n    format_id = identify_format(subject, headers)\n    if format_id:\n        parser = EmailParserFactory().get_parser(format_id)\n        if parser:\n            data = parser.parse(email_message)\n            save_parsed_data(data)\n        else:\n            # Log: No parser available for the identified format\n            pass\n    else:\n        # Log: Unknown email format\n        pass\n\n# Example usage\nraw_email = b'...'  # Raw email bytes\nprocess_email(raw_email)