import re\n\nclass SimpleDSLInterpreter:\n    def __init__(self, data):\n        self.data = data\n\n    def execute(self, query):\n        match = re.match(r"SELECT (\w+) FROM (\w+) WHERE (\w+) ([=<>!]+) ([\w']+);", query)\n        if not match:\n            raise ValueError("Invalid query format")\n\n        select_col, table_name, where_col, operator, value = match.groups()\n        \n        if table_name not in self.data:\n            raise ValueError(f"Table '{table_name}' does not exist")\n\n        table = self.data[table_name]\n        value = self._convert_value(value)\n        \n        result = []\n        for row in table:\n            if self._evaluate(row[where_col], operator, value):\n                result.append(row[select_col])\n                \n        return result\n\n    def _convert_value(self, value):\n        if value.isdigit():\n            return int(value)\n        try:\n            return float(value)\n        except ValueError:\n            return value.strip("'")\n\n    def _evaluate(self, a, operator, b):\n        if operator == "=":\n            return a == b\n        elif operator == "<":\n            return a < b\n        elif operator == ">":\n            return a > b\n        elif operator == "<=":\n            return a <= b\n        elif operator == ">=":\n            return a >= b\n        else:\n            raise ValueError(f"Unsupported operator '{operator}'")\n\n# Example data and usage\ndata = {\n    "users": [\n        {"age": 20, "name": "Alice"},\n        {"age": 30, "name": "Bob"},\n        {"age": 25, "name": "Charlie"}\n    ]\n}\n\ninterpreter = SimpleDSLInterpreter(data)\nquery = "SELECT age FROM users WHERE age > 25;"\nresult = interpreter.execute(query)\nprint(result)  # Output: [30]