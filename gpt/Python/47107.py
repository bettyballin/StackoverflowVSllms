import subprocess\nfrom django import forms\n\n# Define a Django form for user input\nclass MyForm(forms.Form):\n    param1 = forms.CharField(max_length=100)\n    param2 = forms.CharField(max_length=100)\n\ndef my_view(request):\n    if request.method == 'POST':\n        form = MyForm(request.POST)\n        if form.is_valid():\n            param1 = form.cleaned_data['param1']\n            param2 = form.cleaned_data['param2']\n            \n            # Validate parameters further if needed\n            if not validate_param(param1) or not validate_param(param2):\n                return HttpResponseBadRequest("Invalid parameters")\n            \n            # Construct the command as a list of arguments\n            command = ["external_program", param1, param2]\n            \n            try:\n                # Use subprocess.run with a list of arguments\n                result = subprocess.run(command, check=True, capture_output=True, text=True)\n                # Handle the result as needed\n            except subprocess.CalledProcessError as e:\n                # Handle the error\n                return HttpResponseServerError(f"Command failed: {e}")\n\n            return HttpResponse(f"Command succeeded: {result.stdout}")\n    else:\n        form = MyForm()\n\n    return render(request, 'my_template.html', {'form': form})\n\ndef validate_param(param):\n    # Add custom validation logic here\n    # For example, check for allowed characters or specific patterns\n    return True