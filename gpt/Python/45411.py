import socket\nimport threading\n\nclass P2PNode:\n    def __init__(self, host, port):\n        self.host = host\n        self.port = port\n        self.peers = []\n\n    def start(self):\n        server_thread = threading.Thread(target=self.listen_for_connections)\n        server_thread.start()\n\n    def listen_for_connections(self):\n        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:\n            server_socket.bind((self.host, self.port))\n            server_socket.listen()\n            print(f"Server listening on {self.host}:{self.port}")\n\n            while True:\n                conn, addr = server_socket.accept()\n                self.peers.append(addr)\n                print(f"Connected to peer: {addr}")\n                threading.Thread(target=self.handle_peer, args=(conn, addr)).start()\n\n    def handle_peer(self, conn, addr):\n        with conn:\n            while True:\n                data = conn.recv(1024)\n                if not data:\n                    break\n                print(f"Received from {addr}: {data.decode()}")\n                # Process game data here\n\nif __name__ == "__main__":\n    node = P2PNode('localhost', 5000)\n    node.start()