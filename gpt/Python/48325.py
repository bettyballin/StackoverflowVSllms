import numpy as np\nfrom datetime import datetime, timedelta\n\n# Sample data: list of tuples (timestamp, hits)\ndata = [\n    (datetime(2023, 1, 10, 3, 45), 100),\n    (datetime(2023, 1, 11, 3, 45), 150),\n    (datetime(2023, 1, 12, 3, 45), 200),\n    # Add more data points as needed\n]\n\ndef calculate_z_score(current_hits, historic_hits):\n    mean = np.mean(historic_hits)\n    std_dev = np.std(historic_hits)\n    if std_dev == 0:\n        return 0  # Prevent division by zero\n    z_score = (current_hits - mean) / std_dev\n    return z_score\n\n# Approach 1: Rolling 24-hour window\ncurrent_time = datetime(2023, 1, 12, 3, 45)\ncurrent_trend = sum(hits for timestamp, hits in data if current_time - timedelta(hours=24) <= timestamp < current_time)\nhistoric_trends = [\n    sum(hits for timestamp, hits in data if current_time - timedelta(hours=48) <= timestamp < current_time - timedelta(hours=24)),\n    sum(hits for timestamp, hits in data if current_time - timedelta(hours=72) <= timestamp < current_time - timedelta(hours=48)),\n    # Add more periods as needed\n]\n\nz_score_rolling = calculate_z_score(current_trend, historic_trends)\n\n# Approach 2: Daily fixed window\ncurrent_trend = sum(hits for timestamp, hits in data if datetime(2023, 1, 11) <= timestamp < datetime(2023, 1, 12))\nhistoric_trends = [\n    sum(hits for timestamp, hits in data if datetime(2023, 1, 10) <= timestamp < datetime(2023, 1, 11)),\n    sum(hits for timestamp, hits in data if datetime(2023, 1, 9) <= timestamp < datetime(2023, 1, 10)),\n    # Add more periods as needed\n]\n\nz_score_fixed = calculate_z_score(current_trend, historic_trends)\n\nprint("Z-Score (Rolling 24-hour):", z_score_rolling)\nprint("Z-Score (Fixed daily):", z_score_fixed)