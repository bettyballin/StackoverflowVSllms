import cherrypy\nfrom cherrypy.process.plugins import Daemonizer, PIDFile\n\nclass SecureApp:\n    @cherrypy.expose\n    def index(self):\n        return "This is the main page, not secured by SSL."\n\n    @cherrypy.expose\n    def login(self):\n        return "This is the login page, secured by SSL."\n\nif __name__ == '__main__':\n    # General CherryPy configuration\n    cherrypy.config.update({\n        'server.socket_host': '0.0.0.0',\n        'server.socket_port': 8080,\n    })\n\n    # SSL Configuration for the secure site\n    secure_app = cherrypy.Application(SecureApp(), script_name=None)\n\n    cherrypy.config.update({\n        'global': {\n            'server.ssl_module': 'builtin',\n            'server.ssl_certificate': 'path/to/ssl_certificate.crt',\n            'server.ssl_private_key': 'path/to/private.key',\n            'server.ssl_certificate_chain': 'path/to/ssl_ca_bundle.crt',\n        }\n    })\n\n    cherrypy.tree.mount(SecureApp(), '/secure', config={\n        '/': {\n            'tools.sessions.on': True,\n            'tools.secureheaders.on': True,\n            'tools.httpsredirect.on': True,\n        }\n    })\n\n    # Unsecured part of the application\n    cherrypy.tree.mount(SecureApp(), '/', config={\n        '/': {\n            'tools.sessions.on': True,\n            'tools.httpsredirect.on': False,\n        }\n    })\n\n    Daemonizer(cherrypy.engine).subscribe()\n    PIDFile(cherrypy.engine, 'app.pid').subscribe()\n    cherrypy.engine.start()\n    cherrypy.engine.block()