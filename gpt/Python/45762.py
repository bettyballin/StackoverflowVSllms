import time\nimport hmac\nimport hashlib\nimport base64\nimport requests\nfrom urllib.parse import urlencode\n\n# Function to generate OAuth signature\ndef generate_oauth_signature(http_method, base_url, params, consumer_secret, token_secret):\n    parameter_string = '&'.join(['{}={}'.format(key, params[key]) for key in sorted(params)])\n    signature_base_string = '&'.join([http_method.upper(), urlencode(base_url, safe=''), urlencode(parameter_string, safe='')])\n    signing_key = '{}&{}'.format(consumer_secret, token_secret)\n    hashed = hmac.new(signing_key.encode(), signature_base_string.encode(), hashlib.sha1)\n    return base64.b64encode(hashed.digest()).decode()\n\n# OAuth configuration\nconsumer_key = 'your_consumer_key'\nconsumer_secret = 'your_consumer_secret'\noauth_token = 'your_oauth_token'\ntoken_secret = 'your_token_secret'\n\n# OAuth parameters\noauth_params = {\n    'oauth_consumer_key': consumer_key,\n    'oauth_token': oauth_token,\n    'oauth_nonce': hashlib.md5(str(time.time()).encode()).hexdigest(),\n    'oauth_timestamp': str(int(time.time())),\n    'oauth_signature_method': 'HMAC-SHA1',\n    'oauth_version': '1.0',\n}\n\n# Status update parameters\nstatus_params = {'status': 'Testing'}\n\n# Combine all parameters\nall_params = {**oauth_params, **status_params}\n\n# Generate OAuth signature\noauth_params['oauth_signature'] = generate_oauth_signature('POST', 'https://api.twitter.com/1.1/statuses/update.json', all_params, consumer_secret, token_secret)\n\n# Prepare Authorization header\nauth_header = 'OAuth ' + ', '.join(['{}="{}"'.format(key, value) for key, value in oauth_params.items()])\n\n# Make the POST request\nresponse = requests.post(\n    'https://api.twitter.com/1.1/statuses/update.json',\n    headers={'Authorization': auth_header, 'Content-Type': 'application/x-www-form-urlencoded'},\n    data=status_params\n)\n\n# Check the response\nprint(response.status_code)\nprint(response.text)