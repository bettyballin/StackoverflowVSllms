from fuzzywuzzy import fuzz\n\nclass Node:\n    def __init__(self, name, children=None):\n        self.name = name\n        self.children = children or []\n\ndef compare_nodes(node1, node2, name_threshold=80, depth_threshold=1, current_depth=0):\n    if current_depth > depth_threshold:\n        return False\n    \n    name_similarity = fuzz.ratio(node1.name, node2.name)\n    if name_similarity < name_threshold:\n        return False\n\n    if len(node1.children) != len(node2.children):\n        return False\n\n    for child1, child2 in zip(node1.children, node2.children):\n        if not compare_nodes(child1, child2, name_threshold, depth_threshold, current_depth + 1):\n            return False\n\n    return True\n\n# Example usage\nnode1 = Node("root", [Node("child1"), Node("child2")])\nnode2 = Node("root", [Node("child1"), Node("child2")])\n\nresult = compare_nodes(node1, node2)\nprint(result)