import bcrypt\n\ndef hash_password(password: str) -> str:\n    # Generate a random salt and hash the password\n    salt = bcrypt.gensalt()\n    hashed = bcrypt.hashpw(password.encode(), salt)\n    return hashed.decode()\n\ndef check_password(stored_hash: str, password: str) -> bool:\n    # Verify the password against the stored hash\n    return bcrypt.checkpw(password.encode(), stored_hash.encode())\n\n# Example usage\npassword = "securepassword"\nhashed_password = hash_password(password)\nprint(f"Hashed Password: {hashed_password}")\n\n# Check the password\nis_correct = check_password(hashed_password, password)\nprint(f"Password is correct: {is_correct}")