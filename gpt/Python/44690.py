from PIL import Image, ImageDraw\nfrom shapely.geometry import Polygon\nimport numpy as np\n\ndef create_bitmap(polygons, values, width, height, resolution):\n    """\n    Create a bitmap from polygons with corresponding values.\n\n    :param polygons: List of shapely Polygon objects\n    :param values: List of values corresponding to each polygon\n    :param width: Width of the bitmap in pixels\n    :param height: Height of the bitmap in pixels\n    :param resolution: Resolution in metres per pixel\n    :return: Numpy array representing the bitmap\n    """\n    # Create a blank image with the given dimensions\n    img = Image.new('F', (width, height), 0)  # 'F' mode for floating-point pixels\n    draw = ImageDraw.Draw(img)\n    \n    # Iterate over each polygon and draw it onto the image\n    for polygon, value in zip(polygons, values):\n        # Convert polygon coordinates to pixel coordinates\n        pixel_coords = [(x / resolution, y / resolution) for x, y in polygon.exterior.coords]\n        # Draw the polygon on the image\n        draw.polygon(pixel_coords, fill=value)\n    \n    # Convert the image to a numpy array\n    bitmap = np.array(img)\n    return bitmap\n\n# Example usage\nif __name__ == '__main__':\n    # Define some example polygons\n    poly1 = Polygon([(0, 0), (0, 400), (400, 400), (400, 0)])\n    poly2 = Polygon([(400, 0), (400, 400), (800, 400), (800, 0)])\n    polygons = [poly1, poly2]\n    values = [50, 100]  # Example values for each polygon\n    \n    # Bitmap dimensions and resolution\n    width = 800  # width in pixels\n    height = 400  # height in pixels\n    resolution = 200  # 200 metres per pixel\n    \n    # Create the bitmap\n    bitmap = create_bitmap(polygons, values, width, height, resolution)\n    print(bitmap)