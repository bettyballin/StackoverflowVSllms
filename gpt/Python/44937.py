import math\n\ndef nice_number(value, round):\n    exponent = math.floor(math.log10(value))\n    fraction = value / 10**exponent\n    if round:\n        if fraction < 1.5:\n            nice_fraction = 1\n        elif fraction < 3:\n            nice_fraction = 2\n        elif fraction < 7:\n            nice_fraction = 5\n        else:\n            nice_fraction = 10\n    else:\n        if fraction <= 1:\n            nice_fraction = 1\n        elif fraction <= 2:\n            nice_fraction = 2\n        elif fraction <= 5:\n            nice_fraction = 5\n        else:\n            nice_fraction = 10\n    return nice_fraction * 10**exponent\n\ndef calculate_y_axis_max(data):\n    max_val = max(data)\n    tick_spacing = nice_number(max_val / 10, round=True)\n    y_axis_max = tick_spacing * math.ceil(max_val / tick_spacing)\n    return y_axis_max\n\ndef calculate_tick_spacing(y_axis_max, num_ticks):\n    return y_axis_max / num_ticks\n\n# Example usage\ndata = [12003, 13000, 14003]\ny_axis_max = calculate_y_axis_max(data)\ntick_spacing = calculate_tick_spacing(y_axis_max, 10)\n\nprint("Y-Axis Max:", y_axis_max)\nprint("Tick Spacing:", tick_spacing)