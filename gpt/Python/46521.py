from flask import Flask, jsonify, request\nfrom flask_sqlalchemy import SQLAlchemy\nfrom redis import Redis\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///example.db'\ndb = SQLAlchemy(app)\ncache = Redis(host='localhost', port=6379)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)\n\n@app.route('/users', methods=['GET'])\ndef get_users():\n    cached_users = cache.get('all_users')\n    if cached_users:\n        return jsonify(eval(cached_users))\n    \n    users = User.query.all()\n    user_list = [{'id': user.id, 'username': user.username} for user in users]\n    cache.set('all_users', str(user_list), ex=60)  # Cache for 60 seconds\n    return jsonify(user_list)\n\n@app.route('/user', methods=['POST'])\ndef add_user():\n    username = request.json.get('username')\n    if not username:\n        return jsonify({'error': 'Username is required'}), 400\n    \n    user = User(username=username)\n    db.session.add(user)\n    db.session.commit()\n    cache.delete('all_users')  # Invalidate cache\n    return jsonify({'id': user.id, 'username': user.username}), 201\n\nif __name__ == '__main__':\n    db.create_all()\n    app.run(debug=True)