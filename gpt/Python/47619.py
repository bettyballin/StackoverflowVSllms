def levenshtein(s, t):\n    m, n = len(s), len(t)\n    d = [[0] * (n + 1) for _ in range(m + 1)]\n    \n    for i in range(m + 1):\n        for j in range(n + 1):\n            if i == 0:\n                d[i][j] = j\n            elif j == 0:\n                d[i][j] = i\n            else:\n                cost = 0 if s[i - 1] == t[j - 1] else 1\n                d[i][j] = min(d[i - 1][j] + 1,    # Deletion\n                              d[i][j - 1] + 1,    # Insertion\n                              d[i - 1][j - 1] + cost)  # Substitution\n\n    return d[m][n]\n\n# Example usage\nprint(levenshtein("kitten", "sitting"))  # Output: 3