import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.ndimage import gaussian_filter\nfrom skimage import measure\n\n# Step 1: Create a scalar field (e.g., simulated elevation data)\nx = np.linspace(-3.0, 3.0, 100)\ny = np.linspace(-3.0, 3.0, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X**2 + Y**2)\n\n# Optionally smooth the data with gaussian filter\nZ = gaussian_filter(Z, sigma=1.0)\n\n# Step 2: Use the Marching Squares algorithm to find contours\ncontours = measure.find_contours(Z, level=0.5)\n\n# Step 3: Plot the results\nfig, ax = plt.subplots()\nax.imshow(Z, interpolation='nearest', cmap=plt.cm.viridis, extent=[-3, 3, -3, 3])\nfor contour in contours:\n    ax.plot(contour[:, 1], contour[:, 0], linewidth=2, color='black')\n\nplt.show()