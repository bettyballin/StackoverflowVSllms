import numpy as np\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\n# Sample articles\narticles = [\n    "This is an article about machine learning.",\n    "Machine learning and AI are growing fields.",\n    "Cooking recipes for delicious meals.",\n    "The history of machine learning.",\n    "Understanding deep learning and neural networks.",\n    "Culinary arts and cooking tips."\n]\n\n# Convert text data into TF-IDF vectors\nvectorizer = TfidfVectorizer()\ntfidf_matrix = vectorizer.fit_transform(articles)\n\n# Compute cosine similarity matrix\ncosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)\n\n# Function to get related articles\ndef get_related_articles(index, similarity_matrix, articles, top_n=3):\n    related_indices = similarity_matrix[index].argsort()[-top_n-1:-1][::-1]\n    related_articles = [(i, articles[i]) for i in related_indices if i != index]\n    return related_articles\n\n# Example usage: Get articles related to the first article\narticle_index = 0\nrelated_articles = get_related_articles(article_index, cosine_sim, articles)\n\nprint(f"Articles related to '{articles[article_index]}':")\nfor idx, article in related_articles:\n    print(f"- {article}")