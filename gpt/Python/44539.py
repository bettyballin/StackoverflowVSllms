def find_duplicate_phrases(s, phrase_length):\n    from collections import defaultdict\n\n    # Initialize a dictionary to store phrase counts\n    phrase_counts = defaultdict(int)\n    \n    # Split the string into words\n    words = s.split()\n    \n    # Iterate over the words with a sliding window of the given phrase length\n    for i in range(len(words) - phrase_length + 1):\n        # Extract the current phrase\n        phrase = ' '.join(words[i:i + phrase_length])\n        # Increment the count for this phrase\n        phrase_counts[phrase] += 1\n    \n    # Filter out phrases that occur only once\n    duplicate_phrases = {phrase: count for phrase, count in phrase_counts.items() if count > 1}\n\n    return duplicate_phrases\n\n# Example usage:\ninput_string = "the quick brown fox jumps over the lazy dog the quick brown fox jumps"\nphrase_length = 3\nduplicates = find_duplicate_phrases(input_string, phrase_length)\nprint(duplicates)