# DPAPI access library\n# This file uses code originally created by Crusher Joe:\n# http://article.gmane.org/gmane.comp.python.ctypes/420\n\nfrom ctypes import *\nfrom ctypes.wintypes import DWORD\n\nLocalFree = windll.kernel32.LocalFree\nmemcpy = cdll.msvcrt.memcpy\nCryptProtectData = windll.crypt32.CryptProtectData\nCryptUnprotectData = windll.crypt32.CryptUnprotectData\nCRYPTPROTECT_UI_FORBIDDEN = 0x01\nextraEntropy = "cl;ad13 \0al;323kjd #(adl;k$#ajsd"\n\nclass DATA_BLOB(Structure):\n    _fields_ = [("cbData", DWORD), ("pbData", POINTER(c_char))]\n\ndef getData(blobOut):\n    cbData = int(blobOut.cbData)\n    pbData = blobOut.pbData\n    buffer = c_buffer(cbData)\n    memcpy(buffer, pbData, cbData)\n    LocalFree(pbData)\n    return buffer.raw\n\ndef Win32CryptProtectData(plainText, entropy):\n    bufferIn = c_buffer(plainText, len(plainText))\n    blobIn = DATA_BLOB(len(plainText), bufferIn)\n    bufferEntropy = c_buffer(entropy, len(entropy))\n    blobEntropy = DATA_BLOB(len(entropy), bufferEntropy)\n    blobOut = DATA_BLOB()\n\n    if CryptProtectData(byref(blobIn), u"python_data", byref(blobEntropy),\n                       None, None, CRYPTPROTECT_UI_FORBIDDEN, byref(blobOut)):\n        return getData(blobOut)\n    else:\n        return ""\n\ndef Win32CryptUnprotectData(cipherText, entropy):\n    bufferIn = c_buffer(cipherText, len(cipherText))\n    blobIn = DATA_BLOB(len(cipherText), bufferIn)\n    bufferEntropy = c_buffer(entropy, len(entropy))\n    blobEntropy = DATA_BLOB(len(entropy), bufferEntropy)\n    blobOut = DATA_BLOB()\n    if CryptUnprotectData(byref(blobIn), None, byref(blobEntropy), None, None,\n                              CRYPTPROTECT_UI_FORBIDDEN, byref(blobOut)):\n        return getData(blobOut)\n    else:\n        return ""\n\ndef cryptData(text):\n    return Win32CryptProtectData(text, extraEntropy)\n\ndef decryptData(cipher_text):\n    return Win32CryptUnprotectData(cipher_text, extraEntropy)