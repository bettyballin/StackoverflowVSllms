import pandas as pd\n    from sqlalchemy import create_engine\n\n    # Configure your database connections\n    db1_connection_string = 'oracle://username:password@host:port/dbname'\n    db2_connection_string = 'db2://username:password@host:port/dbname'\n\n    # Create database engines\n    engine1 = create_engine(db1_connection_string)\n    engine2 = create_engine(db2_connection_string)\n\n    # Define the query for each table\n    query1 = 'SELECT * FROM table1'\n    query2 = 'SELECT * FROM table2'\n\n    # Load data into DataFrame\n    df1 = pd.read_sql(query1, engine1)\n    df2 = pd.read_sql(query2, engine2)\n\n    # Define the primary key columns\n    primary_keys = ['key1', 'key2']\n\n    # Set primary keys as index for comparison\n    df1.set_index(primary_keys, inplace=True)\n    df2.set_index(primary_keys, inplace=True)\n\n    # Find differences\n    diff = df1.compare(df2)\n\n    # Report differences\n    if not diff.empty:\n        print("Differences found:")\n        print(diff)\n        diff.to_csv('differences_report.csv')\n    else:\n        print("No differences found.")\n\n    # Optionally, also find rows that are only in one of the tables\n    only_in_df1 = df1[~df1.index.isin(df2.index)]\n    only_in_df2 = df2[~df2.index.isin(df1.index)]\n\n    if not only_in_df1.empty:\n        print("Rows only in table1:")\n        print(only_in_df1)\n        only_in_df1.to_csv('only_in_table1.csv')\n\n    if not only_in_df2.empty:\n        print("Rows only in table2:")\n        print(only_in_df2)\n        only_in_df2.to_csv('only_in_table2.csv')