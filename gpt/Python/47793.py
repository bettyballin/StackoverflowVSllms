def find_sinks(graph, start_node):\n       visited = set()\n       sinks = []\n\n       def dfs(node):\n           if node in visited:\n               return\n           visited.add(node)\n           if not graph[node]:  # If there are no outgoing edges, it is a sink\n               sinks.append(node)\n           for neighbor in graph[node]:\n               dfs(neighbor)\n\n       dfs(start_node)\n       return sinks\n\n   # Example usage:\n   # graph = {\n   #     'Europe': ['Germany', 'France'],\n   #     'Germany': ['Berlin'],\n   #     'France': ['Paris'],\n   #     'Berlin': [],\n   #     'Paris': []\n   # }\n   # print(find_sinks(graph, 'Europe'))  # Output: ['Berlin', 'Paris']