from twisted.internet import reactor, protocol\n\nclass P2PProtocol(protocol.Protocol):\n    def connectionMade(self):\n        self.transport.write(b"Hello, peer!")\n\n    def dataReceived(self, data):\n        print("Data received:", data)\n\nclass P2PFactory(protocol.Factory):\n    def buildProtocol(self, addr):\n        return P2PProtocol()\n\nreactor.listenTCP(8000, P2PFactory())\nreactor.run()