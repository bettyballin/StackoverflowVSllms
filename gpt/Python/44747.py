from gensim.models import Word2Vec\nfrom gensim.utils import simple_preprocess\nfrom sklearn.metrics.pairwise import cosine_similarity\nimport numpy as np\n\n# Sample titles\ntitles = ["How to implement a linked list in Java?",\n          "What is the best way to learn Python?",\n          "Java linked list implementation",\n          "Python learning resources"]\n\n# Pre-process titles and train Word2Vec model\nprocessed_titles = [simple_preprocess(title) for title in titles]\nmodel = Word2Vec(processed_titles, vector_size=100, window=5, min_count=1, workers=4)\n\n# Average word vectors for each title\ndef get_vector(title):\n    words = simple_preprocess(title)\n    word_vectors = [model.wv[word] for word in words if word in model.wv]\n    return np.mean(word_vectors, axis=0)\n\ntitle_vectors = [get_vector(title) for title in titles]\n\n# Compute cosine similarity matrix\ncosine_similarities = cosine_similarity(title_vectors, title_vectors)\n\n# Find similar titles for the first title\nsimilar_titles = cosine_similarities[0]\nprint(similar_titles)