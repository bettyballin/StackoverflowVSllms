def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef euler_totient(n):\n    result = n\n    p = 2\n    while p * p <= n:\n        if n % p == 0:\n            while n % p == 0:\n                n //= p\n            result -= result // p\n        p += 1\n    if n > 1:\n        result -= result // n\n    return result\n\ndef prime_factors(n):\n    factors = set()\n    p = 2\n    while p * p <= n:\n        if n % p == 0:\n            factors.add(p)\n            while n % p == 0:\n                n //= p\n        p += 1\n    if n > 1:\n        factors.add(n)\n    return factors\n\ndef multiplicative_order(x, y):\n    if gcd(x, y) != 1:\n        return 0  # x and y are not coprime\n    \n    phi_y = euler_totient(y)\n    factors = prime_factors(phi_y)\n    \n    for factor in sorted(factors):\n        order = phi_y // factor\n        if pow(x, order, y) == 1:\n            return order\n    \n    return phi_y\n\n# Example usage:\nx = 10\ny = 53\nprint(multiplicative_order(x, y))  # Output: 13