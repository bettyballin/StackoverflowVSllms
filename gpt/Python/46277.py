import sqlite3\nimport random\n\n# Connect to the database\nconn = sqlite3.connect('image_rankings.db')\ncursor = conn.cursor()\n\n# Create table for images and their ratings\ncursor.execute('''\nCREATE TABLE IF NOT EXISTS images (\n    id INTEGER PRIMARY KEY,\n    rating REAL DEFAULT 1000.0\n)\n''')\n\ndef get_random_images():\n    cursor.execute('SELECT id FROM images ORDER BY RANDOM() LIMIT 2')\n    return cursor.fetchall()\n\ndef update_elo(winner_rating, loser_rating, k=32):\n    expected_winner = 1 / (1 + 10 ** ((loser_rating - winner_rating) / 400))\n    expected_loser = 1 - expected_winner\n    \n    new_winner_rating = winner_rating + k * (1 - expected_winner)\n    new_loser_rating = loser_rating + k * (0 - expected_loser)\n    \n    return new_winner_rating, new_loser_rating\n\ndef record_comparison(winner_id, loser_id):\n    cursor.execute('SELECT rating FROM images WHERE id = ?', (winner_id,))\n    winner_rating = cursor.fetchone()[0]\n    \n    cursor.execute('SELECT rating FROM images WHERE id = ?', (loser_id,))\n    loser_rating = cursor.fetchone()[0]\n    \n    new_winner_rating, new_loser_rating = update_elo(winner_rating, loser_rating)\n    \n    cursor.execute('UPDATE images SET rating = ? WHERE id = ?', (new_winner_rating, winner_id))\n    cursor.execute('UPDATE images SET rating = ? WHERE id = ?', (new_loser_rating, loser_id))\n    conn.commit()\n\n# Example usage\nimages = get_random_images()\n# Assume user picks the first image as better\nrecord_comparison(images[0][0], images[1][0])\n\nconn.close()