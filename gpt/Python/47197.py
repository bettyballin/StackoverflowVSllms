# Initial simple neural network\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\n\n# Define a simple model\nmodel = Sequential()\nmodel.add(Dense(10, input_dim=8, activation='relu'))  # Input layer with 8 features, one hidden layer with 10 nodes\nmodel.add(Dense(1, activation='sigmoid'))             # Output layer\n\n# Compile the model\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\n# Extended neural network with more nodes and layers\nextended_model = Sequential()\nextended_model.add(Dense(64, input_dim=8, activation='relu'))  # First hidden layer with 64 nodes\nextended_model.add(Dense(32, activation='relu'))               # Second hidden layer with 32 nodes\nextended_model.add(Dense(16, activation='relu'))               # Third hidden layer with 16 nodes\nextended_model.add(Dense(1, activation='sigmoid'))             # Output layer\n\n# Compile the extended model\nextended_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])