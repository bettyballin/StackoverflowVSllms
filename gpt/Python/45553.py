import zlib\nimport struct\n\ndef compress_with_size(data):\n    compressed_data = zlib.compress(data)\n    original_size = len(data)\n    \n    # Pack the original size as an unsigned integer (4 bytes) and prepend it to the compressed data\n    packed_size = struct.pack('!I', original_size)\n    return packed_size + compressed_data\n\ndef get_uncompressed_size(compressed_data):\n    # Extract the first 4 bytes to get the original size\n    original_size = struct.unpack('!I', compressed_data[:4])[0]\n    return original_size\n\n# Example usage\ndata = b"Your data here"\ncompressed_data = compress_with_size(data)\noriginal_size = get_uncompressed_size(compressed_data)\n\nprint(f"Original size: {original_size}")