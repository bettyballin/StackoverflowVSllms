def max_discount(coupons, items, discount_matrix):\n    # Initialize a DP table\n    dp = [[0] * (items + 1) for _ in range(coupons + 1)]\n    \n    # Iterate through each item\n    for item in range(1, items + 1):\n        # Iterate through each possible number of coupons\n        for c in range(coupons + 1):\n            # Consider not using any coupons on this item\n            dp[c][item] = dp[c][item - 1]\n            \n            # Consider using k coupons on this item\n            for k in range(1, c + 1):\n                if k - 1 < len(discount_matrix[item - 1]):\n                    dp[c][item] = max(dp[c][item], dp[c - k][item - 1] + discount_matrix[item - 1][k - 1])\n    \n    # The answer is the maximum discount with all coupons and all items\n    return dp[coupons][items]\n\n# Example usage\ncoupons = 5\nitems = 3\ndiscount_matrix = [\n    [10, 15],       # Discounts for item 1\n    [0, 5, 15, 25, 35],  # Discounts for item 2 (0 for 1 coupon as no discount is listed)\n    [2]             # Discounts for item 3\n]\n\nprint(max_discount(coupons, items, discount_matrix))