from PIL import Image\nimport io\n\n# Function to obfuscate an image\ndef obfuscate_image(input_path, output_path):\n    with open(input_path, 'rb') as f:\n        data = f.read()\n    \n    # Remove bytes 7-10 (indexing starts at 0)\n    obfuscated_data = data[:7] + data[11:]\n    \n    with open(output_path, 'wb') as f:\n        f.write(obfuscated_data)\n\n# Function to de-obfuscate an image on-the-fly\ndef deobfuscate_image(obfuscated_path):\n    with open(obfuscated_path, 'rb') as f:\n        data = f.read()\n    \n    # Restore bytes 7-10 (assuming we know the original bytes)\n    magic_bytes = data[:7] + b'\xff\xd8\xff\xe0' + data[7:]\n    \n    # Load the image using an in-memory byte stream\n    image = Image.open(io.BytesIO(magic_bytes))\n    image.show()\n\n# Example usage\ninput_image_path = 'original.jpg'\nobfuscated_image_path = 'obfuscated.jpg'\n\n# Obfuscate the image\nobfuscate_image(input_image_path, obfuscated_image_path)\n\n# De-obfuscate and display the image\ndeobfuscate_image(obfuscated_image_path)