import pickle\nfrom twisted.internet import reactor, protocol\nimport os\n\nclass EchoClient(protocol.Protocol):\n    def connectionMade(self):\n        file = "path_to_your_file"  # Replace with your file path\n        filesize = os.path.getsize(file)\n        self.transport.write(pickle.dumps({"size": filesize}))\n\n        with open(file, "rb") as f:\n            contents = f.read()\n            self.transport.write(contents)\n\n    def connectionLost(self, reason):\n        print("Connection lost")\n\nclass EchoFactory(protocol.ClientFactory):\n    protocol = EchoClient\n\n    def clientConnectionFailed(self, connector, reason):\n        print("Connection failed - goodbye!")\n        reactor.stop()\n\n    def clientConnectionLost(self, connector, reason):\n        print("Connection lost - goodbye!")\n        reactor.stop()\n\ndef main():\n    f = EchoFactory()\n    reactor.connectTCP("localhost", 8000, f)\n    reactor.run()\n\nif __name__ == '__main__':\n    main()