import threading\nimport gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, GLib\nimport pycurl\nfrom io import BytesIO\n\nclass UploadWindow(Gtk.Window):\n    def __init__(self):\n        super().__init__(title="File Upload")\n        self.set_default_size(300, 100)\n        \n        self.progressbar = Gtk.ProgressBar()\n        self.add(self.progressbar)\n        \n        self.show_all()\n        \n        self.upload_thread = threading.Thread(target=self.upload_file)\n        self.upload_thread.start()\n    \n    def upload_file(self):\n        url = "http://example.com/upload"\n        file_path = "path_to_your_file"\n        \n        def progress(download_t, download_d, upload_t, upload_d):\n            fraction = upload_d / upload_t if upload_t > 0 else 0\n            GLib.idle_add(self.update_progress, fraction)\n        \n        c = pycurl.Curl()\n        c.setopt(c.URL, url)\n        c.setopt(c.UPLOAD, 1)\n        c.setopt(c.READDATA, open(file_path, 'rb'))\n        c.setopt(c.NOPROGRESS, 0)\n        c.setopt(c.XFERINFOFUNCTION, progress)\n        c.setopt(c.HTTPPOST, [(file_path, (c.FORM_FILE, file_path))])\n        \n        try:\n            c.perform()\n        except pycurl.error as e:\n            print("An error occurred: ", e)\n        finally:\n            c.close()\n            GLib.idle_add(self.upload_complete)\n    \n    def update_progress(self, fraction):\n        self.progressbar.set_fraction(fraction)\n        return False\n    \n    def upload_complete(self):\n        self.progressbar.set_fraction(1.0)\n        self.progressbar.set_text("Upload Complete")\n        return False\n\nwin = UploadWindow()\nwin.connect("destroy", Gtk.main_quit)\nGtk.main()