import sqlparse\nfrom sqlparse.sql import Identifier, IdentifierList, Token, TokenList, Where\nfrom sqlparse.tokens import DML, Keyword, Name, Number, String, Comparison\n\ndef is_literal(token):\n    return token.ttype in (Number.Integer, Number.Float, Number.Hexadecimal, String.Single, String.Symbol)\n\ndef replace_literals(token_list):\n    for token in token_list:\n        if isinstance(token, TokenList):\n            replace_literals(token)\n        elif is_literal(token):\n            token.value = '?'\n\ndef normalize_sql(sql):\n    parsed = sqlparse.parse(sql)\n    for stmt in parsed:\n        replace_literals(stmt.tokens)\n    return " ".join(str(stmt) for stmt in parsed)\n\n# Example usage\nsql_statement = "SELECT * FROM users WHERE id = 123 AND name = 'John Doe'"\nnormalized_sql = normalize_sql(sql_statement)\nprint(normalized_sql)