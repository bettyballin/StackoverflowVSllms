import random\n\ndef generate_maze(n, m):\n    maze = [[1] * m for _ in range(n)]\n    directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]\n\n    def is_valid_move(x, y):\n        if x < 0 or x >= n or y < 0 or y >= m:\n            return False\n        if maze[x][y] == 0:\n            return False\n        return True\n\n    def carve_passage(x, y):\n        maze[x][y] = 0\n        random.shuffle(directions)\n        for dx, dy in directions:\n            nx, ny = x + 2 * dx, y + 2 * dy\n            if is_valid_move(nx, ny):\n                maze[x + dx][y + dy] = 0\n                carve_passage(nx, ny)\n    \n    carve_passage(1, 1)\n    return maze\n\ndef print_maze(maze):\n    for row in maze:\n        print("".join(['#' if cell else ' ' for cell in row]))\n\nn, m = 21, 21  # Dimensions of the maze (must be odd numbers)\nmaze = generate_maze(n, m)\nprint_maze(maze)