def next_schedule(current, mask):\n    bit_count = 8  # Assuming 8-bit bit-string\n    rotated = current\n    \n    for _ in range(bit_count):\n        rotated = ((rotated << 1) | (rotated >> (bit_count - 1))) & 0xFF  # Rotate left\n        if rotated & mask:  # Check if rotated bit is in the mask\n            return rotated & mask  # Return the next scheduled bit\n\n    return 0  # Return 0 if no valid next schedule found\n\n# Example usage:\ncurrent = 0b00000100\nmask = 0b01100000\nprint(f"Next schedule: {bin(next_schedule(current, mask))}")\n\ncurrent = 0b01000000\nmask = 0b00001010\nprint(f"Next schedule: {bin(next_schedule(current, mask))}")