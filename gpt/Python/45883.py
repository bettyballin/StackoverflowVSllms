from collections import defaultdict\n\n# Function to get all 26 neighbors of a voxel\ndef get_neighbors(x, y, z):\n    neighbors = []\n    for dx in [-1, 0, 1]:\n        for dy in [-1, 0, 1]:\n            for dz in [-1, 0, 1]:\n                if dx != 0 or dy != 0 or dz != 0:  # Exclude the voxel itself\n                    neighbors.append((x + dx, y + dy, z + dz))\n    return neighbors\n\ndef count_neighbors(filled_voxels):\n    voxel_set = set(filled_voxels)\n    neighbor_counts = defaultdict(int)\n    \n    for voxel in filled_voxels:\n        x, y, z = voxel\n        neighbors = get_neighbors(x, y, z)\n        count = 0\n        for neighbor in neighbors:\n            if neighbor in voxel_set:\n                count += 1\n        neighbor_counts[voxel] = count\n    \n    return neighbor_counts\n\n# Example usage\nfilled_voxels = [(1, 1, 1), (1, 2, 1), (1, 3, 1)]\nneighbor_counts = count_neighbors(filled_voxels)\n\nfor voxel, count in neighbor_counts.items():\n    print(f"{voxel} has {count} neighbors")