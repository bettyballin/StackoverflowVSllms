import difflib\n\nclass VersionControl:\n    def __init__(self):\n        self.revisions = []\n\n    def add_revision(self, content):\n        if not self.revisions:\n            self.revisions.append(content)\n        else:\n            last_content = self.revisions[-1]\n            delta = self.compute_delta(last_content, content)\n            self.revisions.append(delta)\n\n    def compute_delta(self, old, new):\n        return list(difflib.ndiff(old.splitlines(), new.splitlines()))\n\n    def get_revision(self, version):\n        if version == len(self.revisions) - 1:\n            return ''.join(self.revisions[version])\n        content = self.revisions[0]\n        for delta in self.revisions[1:version + 1]:\n            content = ''.join(difflib.restore(delta, 1))\n        return content\n\n# Usage\nvc = VersionControl()\nvc.add_revision("Original message")\nvc.add_revision("Updated message")\nprint(vc.get_revision(0))  # Outputs: Original message\nprint(vc.get_revision(1))  # Outputs: Updated message