import os\n\n# List of DMG file sizes in bytes\ndmg_sizes = [\n    1026064, 5078336, 2097456, 205104, 205040, \n    1026064, 1026064, 1026064, 5078336\n]\n\n# Convert bytes to gigabytes (1 GB = 1024 * 1024 bytes)\ndmg_sizes_gb = [size / (1024 * 1024) for size in dmg_sizes]\ndvd_capacity = 4.7  # in GB\nnum_dvds = 11\n\n# Function to find the minimum number of DVDs required\ndef find_min_dvds(dmg_sizes, dvd_capacity):\n    dvds = []\n    for size in sorted(dmg_sizes, reverse=True):\n        placed = False\n        for dvd in dvds:\n            if sum(dvd) + size <= dvd_capacity:\n                dvd.append(size)\n                placed = True\n                break\n        \n        if not placed:\n            dvds.append([size])\n    \n    return dvds\n\n# Calculate the minimum number of DVDs required\ndvds = find_min_dvds(dmg_sizes_gb, dvd_capacity)\nfor i, dvd in enumerate(dvds):\n    print(f"DVD {i+1}: {dvd}, Total size: {sum(dvd):.2f} GB")\n\nprint(f"Minimum number of DVDs required: {len(dvds)}")