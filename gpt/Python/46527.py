from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import pad, unpad\nimport base64\n\ndef encrypt(plaintext, key):\n    cipher = AES.new(key, AES.MODE_CBC)\n    ciphertext = cipher.encrypt(pad(plaintext.encode(), AES.block_size))\n    return base64.urlsafe_b64encode(cipher.iv + ciphertext).decode()\n\ndef decrypt(encoded_ciphertext, key):\n    data = base64.urlsafe_b64decode(encoded_ciphertext)\n    iv = data[:AES.block_size]\n    ciphertext = data[AES.block_size:]\n    cipher = AES.new(key, AES.MODE_CBC, iv)\n    plaintext = unpad(cipher.decrypt(ciphertext), AES.block_size)\n    return plaintext.decode()\n\n# Example usage\nkey = b'sixteen byte key'  # AES key must be either 16, 24, or 32 bytes long\nplaintext = "Hello, World!"\n\nencrypted = encrypt(plaintext, key)\nprint("Encrypted and encoded:", encrypted)\n\ndecrypted = decrypt(encrypted, key)\nprint("Decrypted:", decrypted)