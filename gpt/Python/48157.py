def de_bruijn(k, n):\n    """Generate the de Bruijn sequence for alphabet k and length n."""\n    a = [0] * k * n\n    sequence = []\n\n    def db(t, p):\n        if t > n:\n            if n % p == 0:\n                for j in range(1, p + 1):\n                    sequence.append(a[j])\n        else:\n            a[t] = a[t - p]\n            db(t + 1, p)\n            for j in range(a[t - p] + 1, k):\n                a[t] = j\n                db(t + 1, t)\n\n    db(1, 1)\n    return sequence\n\n# Generate the de Bruijn sequence for binary alphabet (k=2) and order 12 (n=12)\nk = 2\nn = 12\nsequence = de_bruijn(k, n)\nbit_string = ''.join(map(str, sequence))\n\nprint(f"De Bruijn sequence for k={k} and n={n} is: {bit_string}")\nprint(f"Length of sequence: {len(bit_string)} bits")