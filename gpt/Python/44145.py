class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\ndef orientation(p, q, r):\n    val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y)\n    if val == 0:\n        return 0\n    return 1 if val > 0 else 2\n\ndef on_segment(p, q, r):\n    if (q.x <= max(p.x, r.x) and q.x >= min(p.x, r.x) and\n            q.y <= max(p.y, r.y) and q.y >= min(p.y, r.y)):\n        return True\n    return False\n\ndef do_intersect(p1, q1, p2, q2):\n    o1 = orientation(p1, q1, p2)\n    o2 = orientation(p1, q1, q2)\n    o3 = orientation(p2, q2, p1)\n    o4 = orientation(p2, q2, q1)\n\n    if o1 != o2 and o3 != o4:\n        return True\n\n    if o1 == 0 and on_segment(p1, p2, q1):\n        return True\n    if o2 == 0 and on_segment(p1, q2, q1):\n        return True\n    if o3 == 0 and on_segment(p2, p1, q2):\n        return True\n    if o4 == 0 and on_segment(p2, q1, q2):\n        return True\n\n    return False\n\n# Example usage\np1 = Point(1, 1)\nq1 = Point(10, 1)\np2 = Point(1, 2)\nq2 = Point(10, 2)\n\nprint(do_intersect(p1, q1, p2, q2))  # Output: False