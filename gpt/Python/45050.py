import random\nimport string\nimport datetime\n\ndef generate_checksum(key):\n    """Generate a simple checksum for the given key."""\n    return sum(ord(char) for char in key) % 100\n\ndef generate_cd_key(product_code, reseller_code):\n    """Generate a unique, verifiable CD-KEY."""\n    if len(product_code) != 4 or len(reseller_code) != 4:\n        raise ValueError("Product code and reseller code must be 4 characters long.")\n\n    # Generate the date part of the key (use year and week number for uniqueness)\n    date_part = datetime.datetime.now().strftime("%Y%U")\n\n    # Generate a random part of the key\n    random_part = ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))\n\n    # Combine date part and random part\n    unique_key = date_part + random_part\n\n    # Generate checksum\n    checksum = generate_checksum(unique_key)\n\n    # Format the final CD-KEY\n    formatted_key = f"{product_code}-{reseller_code}-{unique_key}-{checksum:02d}"\n    return formatted_key\n\ndef validate_cd_key(cd_key):\n    """Validate a given CD-KEY."""\n    try:\n        product_code, reseller_code, unique_key, checksum = cd_key.split('-')\n        if len(product_code) != 4 or len(reseller_code) != 4 or len(unique_key) != 12 or len(checksum) != 2:\n            return False\n\n        # Recalculate checksum\n        calculated_checksum = generate_checksum(unique_key)\n        return int(checksum) == calculated_checksum\n    except ValueError:\n        return False\n\n# Example usage\nproduct_code = "384A"\nreseller_code = "GTLD"\ncd_key = generate_cd_key(product_code, reseller_code)\nprint(f"Generated CD-KEY: {cd_key}")\nprint(f"CD-KEY validation: {validate_cd_key(cd_key)}")