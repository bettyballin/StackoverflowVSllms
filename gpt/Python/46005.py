import os\n    import mutagen\n    from mutagen.easyid3 import EasyID3\n    from sqlalchemy import create_engine, Column, String, Integer, MetaData, Table\n    from sqlalchemy.orm import sessionmaker\n\n    # Database setup\n    engine = create_engine('sqlite:///mp3_database.db')\n    metadata = MetaData()\n\n    mp3_files = Table(\n        'mp3_files', metadata,\n        Column('id', Integer, primary_key=True),\n        Column('artist', String),\n        Column('album', String),\n        Column('songname', String),\n        Column('genre', String),\n        Column('filepath', String, unique=True)\n    )\n\n    metadata.create_all(engine)\n    Session = sessionmaker(bind=engine)\n    session = Session()\n\n    def scan_directory(directory):\n        for root, _, files in os.walk(directory):\n            for file in files:\n                if file.endswith('.mp3'):\n                    filepath = os.path.join(root, file)\n                    try:\n                        audio = EasyID3(filepath)\n                        artist = audio.get('artist', [None])[0]\n                        album = audio.get('album', [None])[0]\n                        songname = audio.get('title', [None])[0]\n                        genre = audio.get('genre', [None])[0]\n\n                        # Insert into database\n                        ins = mp3_files.insert().values(\n                            artist=artist,\n                            album=album,\n                            songname=songname,\n                            genre=genre,\n                            filepath=filepath\n                        )\n                        session.execute(ins)\n                        session.commit()\n\n                    except mutagen.id3.ID3NoHeaderError:\n                        print(f"No ID3 header found for {filepath}")\n                    except Exception as e:\n                        print(f"Error processing {filepath}: {e}")\n\n    scan_directory('/path/to/your/mp3/directory')\n    session.close()