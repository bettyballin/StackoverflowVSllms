from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.feature_selection import SelectFromModel\nimport pandas as pd\n\n# Example data\ndata = [\n    {'sender': 'client', 'msg': '123', 'arg': '900', 'foo': 'bar'},\n    {'sender': 'server', 'msg': '456', 'arg': '800', 'foo': 'bar'},\n    {'sender': 'client', 'msg': '789', 'arg': '900', 'foo': 'bar'},\n]\n\n# Convert to DataFrame\ndf = pd.DataFrame(data)\n\n# 'msg' is the target variable, others are features\nX = df.drop(columns=['msg'])\ny = df['msg']\n\n# Encode categorical variables\nX = pd.get_dummies(X)\n\n# Train a decision tree classifier\nclf = DecisionTreeClassifier(random_state=0)\nclf.fit(X, y)\n\n# Feature importance\nimportance = clf.feature_importances_\n\n# Create a DataFrame to display feature importance\nfeature_importance = pd.DataFrame({\n    'feature': X.columns,\n    'importance': importance\n}).sort_values(by='importance', ascending=False)\n\nprint(feature_importance)