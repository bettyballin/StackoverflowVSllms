import binascii\n\n    def crc16_ccitt(data: bytes, poly=0x1021, init_val=0xFFFF):\n        crc = init_val\n        for byte in data:\n            crc ^= byte << 8\n            for _ in range(8):\n                if crc & 0x8000:\n                    crc = (crc << 1) ^ poly\n                else:\n                    crc <<= 1\n            crc &= 0xFFFF  # Trim to 16 bits\n        return crc\n\n    # Example usage:\n    data = b'your_data_here'\n    known_checksum = 0x1234  # Replace with actual checksum\n    computed_checksum = crc16_ccitt(data)\n    print(f"Computed checksum: {computed_checksum:04X}")\n    print(f"Checksum matches: {computed_checksum == known_checksum}")