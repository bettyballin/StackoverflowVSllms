def find_multiplier_chain(power_of_2, constant, count):\n    def mod_pow(base, exp, mod):\n        result = 1\n        while exp > 0:\n            if exp % 2 == 1:\n                result = (result * base) % mod\n            base = (base * base) % mod\n            exp //= 2\n        return result\n\n    mod = 2 ** power_of_2\n\n    for start in range(1, mod):\n        for multiplier in range(1, mod):\n            a = start\n            valid_chain = True\n            for _ in range(count):\n                a = (a * multiplier) % mod\n                if a == constant:\n                    break\n            else:\n                valid_chain = False\n            if valid_chain and a == constant:\n                return start, multiplier\n\n    return None, None\n\n# Example usage:\npower_of_2 = 8\nconstant = 1\ncount = 49\nstart, multiplier = find_multiplier_chain(power_of_2, constant, count)\nprint(f"Found start: {start}, multiplier: {multiplier}")