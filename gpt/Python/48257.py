from cerberus import Validator\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    email = Column(String)\n\n# Define validation schema\nschema = {\n    'name': {'type': 'string', 'minlength': 2, 'maxlength': 50},\n    'email': {'type': 'string', 'regex': '^[\w\.-]+@[\w\.-]+\.\w{2,}$'}\n}\n\nv = Validator(schema)\n\n# SQLAlchemy setup\nengine = create_engine('sqlite:///:memory:')\nBase.metadata.create_all(engine)\nSession = sessionmaker(bind=engine)\nsession = Session()\n\n# Example usage\nuser_data = {'name': 'John Doe', 'email': 'john.doe@example.com'}\n\nif v.validate(user_data):\n    new_user = User(name=user_data['name'], email=user_data['email'])\n    session.add(new_user)\n    session.commit()\nelse:\n    print(v.errors)