import nltk\nfrom nltk.classify import NaiveBayesClassifier\nfrom nltk.corpus import movie_reviews\nimport random\n\n# Ensure the necessary NLTK data packages are downloaded\nnltk.download('movie_reviews')\nnltk.download('punkt')\n\n# Generate training data\ndocuments = [(list(movie_reviews.words(fileid)), category)\n             for category in movie_reviews.categories()\n             for fileid in movie_reviews.fileids(category)]\nrandom.shuffle(documents)\n\n# Feature extraction\nall_words = nltk.FreqDist(w.lower() for w in movie_reviews.words())\nword_features = list(all_words)[:2000]\n\ndef document_features(document):\n    document_words = set(document)\n    features = {}\n    for word in word_features:\n        features[word] = (word in document_words)\n    return features\n\n# Training the classifier\nfeaturesets = [(document_features(d), c) for (d, c) in documents]\ntrain_set, test_set = featuresets[100:], featuresets[:100]\nclassifier = NaiveBayesClassifier.train(train_set)\n\n# Classification\ntest_document = "This is a great movie with excellent acting."\ntest_features = document_features(nltk.word_tokenize(test_document))\nprint(classifier.classify(test_features))