class Table:\n    def __init__(self, columns):\n        self.columns = columns\n        self.rows = []\n\n    def insert(self, row):\n        if len(row) != len(self.columns):\n            raise ValueError("Row does not match table columns")\n        self.rows.append(row)\n\n    def select(self, condition):\n        result = []\n        for row in self.rows:\n            if condition(row):\n                result.append(row)\n        return result\n\nclass Database:\n    def __init__(self):\n        self.tables = {}\n\n    def create_table(self, name, columns):\n        self.tables[name] = Table(columns)\n\n    def insert(self, table_name, row):\n        table = self.tables.get(table_name)\n        if table:\n            table.insert(row)\n        else:\n            raise ValueError(f"Table {table_name} does not exist")\n\n    def select(self, table_name, condition):\n        table = self.tables.get(table_name)\n        if table:\n            return table.select(condition)\n        else:\n            raise ValueError(f"Table {table_name} does not exist")\n\n# Example usage:\ndb = Database()\ndb.create_table("users", ["id", "name", "age"])\ndb.insert("users", [1, "Alice", 30])\ndb.insert("users", [2, "Bob", 25])\n\n# Select all users with age > 20\nresults = db.select("users", lambda row: row[2] > 20)\nprint(results)  # Output: [[1, 'Alice', 30], [2, 'Bob', 25]]