import ctypes\nfrom ctypes import wintypes\n\n# Constants from Windows API\nPROCESS_QUERY_LIMITED_INFORMATION = 0x1000\nINVALID_HANDLE_VALUE = -1\n\n# Load necessary functions from kernel32.dll\nkernel32 = ctypes.WinDLL('kernel32', use_last_error=True)\n\nOpenProcess = kernel32.OpenProcess\nOpenProcess.argtypes = [wintypes.DWORD, wintypes.BOOL, wintypes.DWORD]\nOpenProcess.restype = wintypes.HANDLE\n\nCloseHandle = kernel32.CloseHandle\nCloseHandle.argtypes = [wintypes.HANDLE]\nCloseHandle.restype = wintypes.BOOL\n\ndef pid_exists(pid):\n    # Try to open the process with minimal permissions\n    handle = OpenProcess(PROCESS_QUERY_LIMITED_INFORMATION, False, pid)\n    \n    if handle == INVALID_HANDLE_VALUE:\n        return False\n    \n    # Check if the handle is valid\n    if handle:\n        CloseHandle(handle)\n        return True\n    else:\n        return False\n\n# Example usage\nprint(pid_exists(1234))  # Replace 1234 with the PID you want to check