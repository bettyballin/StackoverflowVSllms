from django.test import TestCase\nfrom .models import Appointment\nfrom datetime import datetime, timedelta\n\nclass RecurringAppointmentTestCase(TestCase):\n    def test_single_appointment(self):\n        appointment = Appointment.objects.create(\n            title="Single Appointment",\n            start_time=datetime.now(),\n            recurrence=None\n        )\n        self.assertEqual(Appointment.objects.count(), 1)\n\n    def test_weekly_recurrence(self):\n        start_time = datetime.now()\n        appointment = Appointment.objects.create(\n            title="Weekly Appointment",\n            start_time=start_time,\n            recurrence='WEEKLY'\n        )\n        self.assertEqual(Appointment.objects.count(), 1)\n        # Verify the recurrence logic (e.g., next occurrence is 7 days later)\n        next_occurrence = appointment.get_next_occurrence(start_time)\n        self.assertEqual(next_occurrence, start_time + timedelta(weeks=1))\n\n    def test_monthly_recurrence(self):\n        start_time = datetime.now()\n        appointment = Appointment.objects.create(\n            title="Monthly Appointment",\n            start_time=start_time,\n            recurrence='MONTHLY'\n        )\n        self.assertEqual(Appointment.objects.count(), 1)\n        # Verify the recurrence logic (e.g., next occurrence is 1 month later)\n        next_occurrence = appointment.get_next_occurrence(start_time)\n        self.assertEqual(next_occurrence.month, (start_time.month % 12) + 1)\n\n    def test_leap_year(self):\n        start_time = datetime(2020, 2, 29)  # Leap year date\n        appointment = Appointment.objects.create(\n            title="Leap Year Appointment",\n            start_time=start_time,\n            recurrence='YEARLY'\n        )\n        self.assertEqual(Appointment.objects.count(), 1)\n        # Verify the recurrence logic (next occurrence should be 2021-02-28)\n        next_occurrence = appointment.get_next_occurrence(start_time)\n        self.assertEqual(next_occurrence, datetime(2021, 2, 28))\n\n    def test_fixed_number_of_occurrences(self):\n        start_time = datetime.now()\n        appointment = Appointment.objects.create(\n            title="Limited Recurrence Appointment",\n            start_time=start_time,\n            recurrence='WEEKLY',\n            recurrence_count=5\n        )\n        self.assertEqual(Appointment.objects.count(), 1)\n        # Verify the logic for limited recurrence\n        occurrences = appointment.get_all_occurrences()\n        self.assertEqual(len(occurrences), 5)