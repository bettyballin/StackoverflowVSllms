def create_optimized_knight_tour_gif(board_size, moves, output_file):\n    images = []\n    frame_duration = 0.1  # duration for each frame in seconds\n\n    # Initialize the board\n    board = [[0] * board_size for _ in range(board_size)]\n\n    # Create a blank image\n    frame = Image.new('RGB', (board_size, board_size), color='blue')\n    draw = ImageDraw.Draw(frame)\n    \n    for move_number, (row, col) in enumerate(moves):\n        # Update the board with the knight's move\n        board[row][col] = move_number + 1\n\n        # Draw only the changed pixel\n        draw.point((col, row), fill='red')\n\n        # Append the frame to the list of images\n        images.append(frame.copy())\n        \n        # Reset the changed pixel to its original color for the next frame\n        draw.point((col, row), fill='blue')\n\n    # Save all frames as an animated GIF\n    imageio.mimsave(output_file, images, duration=frame_duration)\n\n# Example usage\nboard_size = 8\nmoves = [(0, 0), (2, 1), (4, 2), (6, 3), (7, 5), (5, 6), (3, 7), (1, 6)]  # Example moves\noutput_file = 'optimized_knight_tour.gif'\ncreate_optimized_knight_tour_gif(board_size, moves, output_file)