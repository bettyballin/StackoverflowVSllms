import random\nfrom collections import Counter\n\ndef create_constrained_permutations(x, y, z):\n    elements = list(range(x))\n    results = []\n    element_count = Counter()\n\n    for _ in range(y):\n        while True:\n            row = random.sample(elements, z)\n            row_count = Counter(row)\n            if all(element_count[e] + row_count[e] <= (y * z // x) + 1 for e in row):\n                results.append(row)\n                element_count.update(row)\n                break\n\n    return results\n\n# Example usage\nx = 4  # Number of unique elements\ny = 6  # Number of lists\nz = 2  # Number of elements in each list\n\npermutations = create_constrained_permutations(x, y, z)\nfor perm in permutations:\n    print(perm)