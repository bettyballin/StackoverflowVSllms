import datetime\n\ndef decode_custom_date(hex_value):\n    # Convert the hex value to an integer (assuming big-endian format)\n    int_value = int(hex_value, 16)\n    \n    # Define the base date (01/01/1900)\n    base_date = datetime.date(1900, 1, 1)\n    \n    # Calculate the number of days from the base date\n    days_since_base = (int_value - 0x40000000) >> 16\n    \n    # Calculate the actual date\n    decoded_date = base_date + datetime.timedelta(days=days_since_base)\n    \n    return decoded_date\n\n# Example usage:\nhex_values = [\n    "0x40000000", "0x40010000", "0x40020000", "0x40030000", "0x40040000",\n    "0x40050000", "0x40060000", "0x40070000", "0x40080000", "0x40090000",\n    "0x400A0000", "0x400B0000", "0x400C0000", "0x400D0000", "0x400E0000",\n    "0x400F0000", "0x40100000", "0x40110000", "0x40120000", "0x40130000",\n    "0x40140000", "0x40150000", "0x40160000", "0x40170000", "0x40180000",\n    "0x40190000", "0x401A0000", "0x401B0000", "0x401C0000", "0x401D0000",\n    "0x401E0000", "0x401F0000", "0x40200000", "0x40210000", "0x40220000",\n    "0x40800000", "0x40810000", "0x40820000", "0x40D00000", "0x40D10000"\n]\n\nfor hex_value in hex_values:\n    print(f"{hex_value} = {decode_custom_date(hex_value)}")