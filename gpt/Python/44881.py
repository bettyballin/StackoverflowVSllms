import nltk\nfrom nltk.corpus import wordnet as wn\n\ndef semantic_distance(word1, word2):\n    synsets1 = wn.synsets(word1)\n    synsets2 = wn.synsets(word2)\n    \n    if not synsets1 or not synsets2:  # Check if synsets are found\n        return None\n    \n    max_similarity = 0\n    for syn1 in synsets1:\n        for syn2 in synsets2:\n            similarity = wn.wup_similarity(syn1, syn2)\n            if similarity and similarity > max_similarity:\n                max_similarity = similarity\n    \n    # Optional: Return a distance measure (1 - similarity)\n    return 1 - max_similarity if max_similarity else None\n\n# Example usage\nword1 = "dog"\nword2 = "cat"\ndistance = semantic_distance(word1, word2)\nprint(f"The semantic distance between '{word1}' and '{word2}' is: {distance}")