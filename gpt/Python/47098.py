from flask import Flask, send_file, abort\n    from sqlalchemy import create_engine\n    from sqlalchemy.orm import sessionmaker\n    import os\n    import hashlib\n\n    app = Flask(__name__)\n    engine = create_engine('your_database_connection_string')\n    Session = sessionmaker(bind=engine)\n    session = Session()\n\n    CACHE_DIR = 'path_to_cache_directory'\n\n    def get_image_from_db(image_id):\n        # Replace with your actual ORM query to get the image blob\n        result = session.query(YourImageModel).filter_by(id=image_id).first()\n        return result.blob if result else None\n\n    def get_cache_path(image_id, image_data):\n        hash_name = hashlib.md5(image_data).hexdigest()\n        return os.path.join(CACHE_DIR, f"{image_id}_{hash_name}.jpg")\n\n    @app.route('/image/<int:image_id>')\n    def serve_image(image_id):\n        image_data = get_image_from_db(image_id)\n        if not image_data:\n            abort(404)\n\n        cache_path = get_cache_path(image_id, image_data)\n\n        if not os.path.exists(cache_path):\n            with open(cache_path, 'wb') as f:\n                f.write(image_data)\n\n        return send_file(cache_path, mimetype='image/jpeg')\n\n    if __name__ == '__main__':\n        if not os.path.exists(CACHE_DIR):\n            os.makedirs(CACHE_DIR)\n        app.run(debug=True)