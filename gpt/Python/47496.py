class TreeNode:\n    def __init__(self, id):\n        self.id = id\n        self.children = []\n        \ndef build_trees(objects):\n    nodes = {}\n    roots = []\n\n    # Step 1: Create nodes and store them in the dictionary\n    for obj in objects:\n        id = obj['ID']\n        nodes[id] = TreeNode(id)\n    \n    # Step 2: Assign children to their respective parents\n    for obj in objects:\n        id = obj['ID']\n        parent_id = obj['ParentID']\n        if parent_id is None or parent_id not in nodes:\n            # This is a root node\n            roots.append(nodes[id])\n        else:\n            # Add to the parent's children\n            nodes[parent_id].children.append(nodes[id])\n    \n    return roots\n\n# Example usage:\nobjects = [\n    {'ID': 1, 'ParentID': None},\n    {'ID': 2, 'ParentID': 1},\n    {'ID': 3, 'ParentID': 1},\n    {'ID': 4, 'ParentID': 2},\n    {'ID': 5, 'ParentID': None}\n]\n\ntrees = build_trees(objects)\n\n# Function to print the tree for visualization\ndef print_tree(node, level=0):\n    print("  " * level + str(node.id))\n    for child in node.children:\n        print_tree(child, level + 1)\n\n# Print all trees\nfor tree in trees:\n    print_tree(tree)