from sqlalchemy import create_engine, Column, Integer, String, and_, update\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\n\nclass Category(Base):\n    __tablename__ = 'categories'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String(128), nullable=False)\n    lft = Column(Integer, nullable=False, unique=True)\n    rgt = Column(Integer, nullable=False, unique=True)\n\n# Create an engine and session\nengine = create_engine('sqlite:///categories.db')\nSession = sessionmaker(bind=engine)\nsession = Session()\n\ndef add_node(session, new_node, parent_id):\n    parent = session.query(Category).filter(Category.id == parent_id).one()\n\n    # Update lft and rgt values for existing nodes\n    session.query(Category).filter(Category.rgt >= parent.rgt).update({Category.rgt: Category.rgt + 2})\n    session.query(Category).filter(Category.lft > parent.lft).update({Category.lft: Category.lft + 2})\n\n    # Set lft and rgt for the new node\n    new_node.lft = parent.rgt\n    new_node.rgt = parent.rgt + 1\n\n    # Add the new node to the session\n    session.add(new_node)\n    session.commit()\n\n# Example usage\nnew_category = Category(name="New Category")\nparent_id = 1  # Assuming the parent node ID is 1\nadd_node(session, new_category, parent_id)