# Using SQLAlchemy (Python ORM) to define and query a database model\n\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    age = Column(Integer)\n\n# Set up the engine and session\nengine = create_engine('sqlite:///example.db')\nSession = sessionmaker(bind=engine)\nsession = Session()\n\n# Create the table\nBase.metadata.create_all(engine)\n\n# Add a new user\nnew_user = User(name='John Doe', age=30)\nsession.add(new_user)\nsession.commit()\n\n# Query the database\nusers = session.query(User).filter_by(name='John Doe').all()\nfor user in users:\n    print(f'{user.name}, {user.age}')