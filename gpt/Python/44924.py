import gi\ngi.require_version("Gtk", "3.0")\nfrom gi.repository import Gtk, GLib\n\nclass MyWindow(Gtk.Window):\n    def __init__(self):\n        Gtk.Window.__init__(self, title="Timed Button Example")\n\n        self.box = Gtk.Box(spacing=6)\n        self.add(self.box)\n\n        self.ok_button = Gtk.Button(label="OK")\n        self.ok_button.connect("clicked", self.on_ok_clicked)\n        self.box.pack_start(self.ok_button, True, True, 0)\n\n        self.cancel_button = Gtk.Button(label="Cancel")\n        self.cancel_button.connect("clicked", self.on_cancel_clicked)\n        self.box.pack_start(self.cancel_button, True, True, 0)\n\n        # Disable the OK button initially\n        self.ok_button.set_sensitive(False)\n        # Set a timer to re-enable the OK button after 5 seconds\n        GLib.timeout_add_seconds(5, self.enable_ok_button)\n\n    def on_ok_clicked(self, widget):\n        print("OK button clicked")\n\n    def on_cancel_clicked(self, widget):\n        print("Cancel button clicked")\n\n    def enable_ok_button(self):\n        self.ok_button.set_sensitive(True)\n        return False  # Return False to ensure the timeout is not called again\n\nwin = MyWindow()\nwin.connect("destroy", Gtk.main_quit)\nwin.show_all()\nGtk.main()