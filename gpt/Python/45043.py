import inspect\n\ndef get_required_args_count(func):\n    signature = inspect.signature(func)\n    parameters = signature.parameters\n\n    # Count the number of parameters that do not have a default value\n    required_params = [\n        param for param in parameters.values()\n        if param.default == inspect.Parameter.empty and\n           param.kind in (inspect.Parameter.POSITIONAL_ONLY, \n                          inspect.Parameter.POSITIONAL_OR_KEYWORD)\n    ]\n    return len(required_params)\n\n# Example usage\ndef example_func(a, b, c=3):\n    pass\n\nprint(get_required_args_count(example_func))  # Output: 2