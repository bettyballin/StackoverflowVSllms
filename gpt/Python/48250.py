import socket\nimport requests\n\n# List of private IP ranges\nPRIVATE_IP_RANGES = [\n    ('10.0.0.0', '10.255.255.255'),\n    ('172.16.0.0', '172.31.255.255'),\n    ('192.168.0.0', '192.168.255.255'),\n    ('127.0.0.0', '127.255.255.255')\n]\n\ndef ip_in_private_range(ip):\n    ip_int = int.from_bytes(socket.inet_aton(ip), 'big')\n    for start, end in PRIVATE_IP_RANGES:\n        start_int = int.from_bytes(socket.inet_aton(start), 'big')\n        end_int = int.from_bytes(socket.inet_aton(end), 'big')\n        if start_int <= ip_int <= end_int:\n            return True\n    return False\n\ndef is_valid_tld(hostname):\n    response = requests.get("http://data.iana.org/TLD/tlds-alpha-by-domain.txt")\n    valid_tlds = response.text.split()\n    tld = hostname.split('.')[-1].upper()\n    return tld in valid_tlds\n\ndef is_public_internet(url):\n    try:\n        hostname = url.split('//')[-1].split('/')[0]\n        if hostname.lower() == 'localhost':\n            return False\n        ip = socket.gethostbyname(hostname)\n        if ip_in_private_range(ip):\n            return False\n        if not is_valid_tld(hostname):\n            return False\n        return True\n    except Exception as e:\n        print(f"Error validating URL: {e}")\n        return False\n\n# Example usage\nurl = "http://example.com"\nprint(is_public_internet(url))