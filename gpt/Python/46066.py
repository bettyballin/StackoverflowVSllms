import unittest\nfrom html_sanitizer import sanitize_html  # Assuming you have a sanitize_html function\n\nclass TestHTMLSanitizer(unittest.TestCase):\n    def test_xss_payloads(self):\n        xss_payloads = [\n            '<img src="x" onerror="alert(1)">',\n            '<script>alert(1)</script>',\n            '"><script>alert(1)</script>',\n            '<div onmouseover="alert(1)">test</div>',\n            '<svg onload="alert(1)">',\n            '<iframe src="javascript:alert(1)"></iframe>',\n        ]\n\n        for payload in xss_payloads:\n            sanitized_output = sanitize_html(payload)\n            self.assertNotIn('<script>', sanitized_output)\n            self.assertNotIn('onerror', sanitized_output)\n            self.assertNotIn('onmouseover', sanitized_output)\n            self.assertNotIn('<iframe>', sanitized_output)\n            self.assertNotIn('<svg>', sanitized_output)\n\nif __name__ == '__main__':\n    unittest.main()