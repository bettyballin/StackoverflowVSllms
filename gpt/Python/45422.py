from itertools import combinations\n\ndef find_matching_subsets(listA, listB):\n    # Helper function to generate all subsets\n    def get_subsets(lst):\n        subsets = []\n        for i in range(1, len(lst) + 1):\n            subsets.extend(combinations(lst, i))\n        return subsets\n\n    # Generate all subsets of listA and their sums\n    subset_sums_A = {}\n    for subset in get_subsets(listA):\n        subset_sum = sum(subset)\n        if subset_sum in subset_sums_A:\n            subset_sums_A[subset_sum].append(subset)\n        else:\n            subset_sums_A[subset_sum] = [subset]\n\n    # Generate all subsets of listB and their sums, and look for matches\n    matching_subsets = []\n    for subset in get_subsets(listB):\n        subset_sum = sum(subset)\n        if subset_sum in subset_sums_A:\n            for matching_subset_A in subset_sums_A[subset_sum]:\n                matching_subsets.append((matching_subset_A, subset))\n    \n    return matching_subsets\n\n# Example usage\nlistA = [4, 5, 9, 10, 1]\nlistB = [21, 7, -4, 180]\nmatches = find_matching_subsets(listA, listB)\nfor match in matches:\n    print(f"{match[0]} <=> {match[1]}")