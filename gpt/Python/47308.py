import string\n\n# Base 36 characters\nBASE36_ALPHABET = string.digits + string.ascii_lowercase\n\ndef base36_encode(number):\n    """Convert a number to a base36 string."""\n    if number < 0:\n        raise ValueError("Base36 encoding only supports non-negative integers.")\n    if number == 0:\n        return BASE36_ALPHABET[0]\n    \n    base36 = []\n    while number:\n        number, i = divmod(number, 36)\n        base36.append(BASE36_ALPHABET[i])\n    \n    return ''.join(reversed(base36))\n\ndef base36_decode(base36):\n    """Convert a base36 string to a number."""\n    return int(base36, 36)\n\ndef luhn_checksum(base36):\n    """Generate Luhn checksum for a base36 number."""\n    def digits_of(n):\n        return [int(d, 36) for d in str(n)]\n    \n    digits = digits_of(base36)\n    odd_digits = digits[-1::-2]\n    even_digits = digits[-2::-2]\n    checksum = sum(odd_digits)\n    for d in even_digits:\n        checksum += sum(digits_of(d * 2))\n    return (36 - (checksum % 36)) % 36\n\ndef validate_luhn(base36):\n    """Validate a base36 number with Luhn checksum."""\n    checksum = base36_decode(base36[-1])\n    return luhn_checksum(base36[:-1]) == checksum\n\ndef generate_code(product_code_base16):\n    """Generate a response code from product code."""\n    product_code = int(product_code_base16, 16)\n    multiplied_code = product_code * 2\n    base36_code = base36_encode(multiplied_code)\n    checksum = BASE36_ALPHABET[luhn_checksum(base36_code)]\n    return base36_code + checksum\n\ndef validate_code(received_code, original_product_code_base16):\n    """Validate the received code against the original product code."""\n    if not validate_luhn(received_code):\n        return False\n    \n    base36_code = received_code[:-1]\n    multiplied_code = base36_decode(base36_code)\n    product_code = multiplied_code // 2\n    return product_code == int(original_product_code_base16, 16)\n\n# Example usage\nproduct_code_base16 = "1a2b"\ngenerated_code = generate_code(product_code_base16)\nprint("Generated Code:", generated_code)\n\n# Client receives the code and inputs it\nreceived_code = generated_code\n\n# Validate on the server-side\nis_valid = validate_code(received_code, product_code_base16)\nprint("Is Valid:", is_valid)