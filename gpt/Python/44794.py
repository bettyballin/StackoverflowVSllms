def find_repetitions(seq):\n    def _find_repetitions(seq):\n        n = len(seq)\n        if n == 0:\n            return []\n        for i in range(1, n // 2 + 1):\n            if seq[:i] * (n // i) == seq:\n                return [seq[:i], n // i]\n        return seq\n\n    def compress(seq):\n        result = []\n        i = 0\n        while i < len(seq):\n            for j in range(len(seq), i, -1):\n                sub_seq = _find_repetitions(seq[i:j])\n                if isinstance(sub_seq, list) and len(sub_seq) == 2:\n                    result.append([sub_seq[0], '*' + str(sub_seq[1])])\n                    i += len(sub_seq[0]) * sub_seq[1]\n                    break\n            else:\n                result.append(seq[i])\n                i += 1\n        return result\n\n    return compress(seq)\n\n# Example usage\nsequence = ['a', 'b', 'c', 'b', 'c', 'a', 'b', 'c', 'b', 'c', 'a', 'b', 'b']\ncompressed_sequence = find_repetitions(sequence)\nprint(compressed_sequence)