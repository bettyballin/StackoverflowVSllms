import math\n\ndef is_point_in_cone(origin, direction, cone_angle, point):\n    def vector_angle(v1, v2):\n        # Calculate the angle between two vectors\n        dot_product = v1[0] * v2[0] + v1[1] * v2[1]\n        magnitude_v1 = math.sqrt(v1[0]**2 + v1[1]**2)\n        magnitude_v2 = math.sqrt(v2[0]**2 + v2[1]**2)\n        cos_angle = dot_product / (magnitude_v1 * magnitude_v2)\n        return math.acos(cos_angle)\n\n    # Vector from origin to point\n    vector_to_point = (point[0] - origin[0], point[1] - origin[1])\n    \n    # Calculate the angle between the direction vector and the vector to the point\n    angle_to_point = vector_angle(direction, vector_to_point)\n    \n    # Check if the angle_to_point is within half of the cone_angle\n    return angle_to_point <= (cone_angle / 2.0)\n\n# Example usage\norigin = (0, 0)\ndirection = (1, 0)  # Direction vector of the cone (e.g., along the x-axis)\ncone_angle = math.radians(45)  # Cone angle in radians (e.g., 45 degrees)\npoint = (1, 1)\n\nprint(is_point_in_cone(origin, direction, cone_angle, point))  # Output: True or False