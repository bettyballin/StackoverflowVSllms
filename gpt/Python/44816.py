def find_clusters(matrix):\n    def dfs(x, y, cluster_id):\n        stack = [(x, y)]\n        while stack:\n            i, j = stack.pop()\n            if i < 0 or i >= len(matrix) or j < 0 or j >= len(matrix[0]) or matrix[i][j] != 'X':\n                continue\n            matrix[i][j] = cluster_id\n            stack.append((i + 1, j))\n            stack.append((i - 1, j))\n            stack.append((i, j + 1))\n            stack.append((i, j - 1))\n\n    cluster_id = 2  # Start from 2 because 0 and 1 are already used in the matrix\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            if matrix[i][j] == 'X':\n                dfs(i, j, cluster_id)\n                cluster_id += 1\n\n    return matrix\n\n# Example usage\nmatrix = [\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 1, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 1, 0, 0, 0, 0]\n]\n\nclusters = find_clusters(matrix)\nfor row in clusters:\n    print(row)