def distribute_documents(documents, num_columns):\n    # Step 1: Sort documents by their names\n    documents.sort()\n\n    # Step 2: Group documents by the first letter\n    from collections import defaultdict\n    groups = defaultdict(list)\n    for doc in documents:\n        groups[doc[0]].append(doc)\n\n    # Convert groups dictionary to a list of tuples (letter, group)\n    grouped_docs = list(groups.items())\n\n    # Step 3: Calculate ideal column height\n    total_docs = len(documents)\n    ideal_column_height = total_docs // num_columns\n\n    # Step 4: Distribute groups into columns\n    columns = [[] for _ in range(num_columns)]\n    column_heights = [0] * num_columns\n\n    for letter, group in grouped_docs:\n        # Find the column with the minimum height\n        min_height_index = column_heights.index(min(column_heights))\n        # Add the group to the column\n        columns[min_height_index].extend(group)\n        # Update the height of the column\n        column_heights[min_height_index] += len(group)\n\n    return columns\n\n# Example usage\ndocuments = ['Apple', 'Apricot', 'Banana', 'Blueberry', 'Cherry', 'Date', 'Elderberry', 'Fig', 'Grape']\nnum_columns = 3\ncolumns = distribute_documents(documents, num_columns)\n\nfor i, column in enumerate(columns):\n    print(f"Column {i + 1}:")\n    for doc in column:\n        print(doc)