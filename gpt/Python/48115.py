import os\nimport random\nimport shutil\n\ndef create_dir(path):\n    if not os.path.exists(path):\n        os.makedirs(path)\n\ndef create_file(path):\n    with open(path, 'w') as f:\n        f.write("This is a test file.")\n\ndef rename_file(src, dst):\n    if os.path.exists(src):\n        os.rename(src, dst)\n\ndef delete_file(path):\n    if os.path.exists(path):\n        os.remove(path)\n\ndef pseudorandom_directory_tree(seed, base_dir, iterations):\n    random.seed(seed)\n    create_dir(base_dir)\n\n    actions = ['create_dir', 'create_file', 'rename_file', 'delete_file']\n    current_files = []\n\n    for _ in range(iterations):\n        action = random.choice(actions)\n        subdir = os.path.join(base_dir, 'dir_' + str(random.randint(0, 100)))\n        file_path = os.path.join(subdir, 'file_' + str(random.randint(0, 100)) + '.txt')\n        \n        if action == 'create_dir':\n            create_dir(subdir)\n        elif action == 'create_file':\n            create_dir(subdir)  # Ensure directory exists before creating a file\n            create_file(file_path)\n            current_files.append(file_path)\n        elif action == 'rename_file' and current_files:\n            src = random.choice(current_files)\n            dst = src.replace('.txt', '_renamed.txt')\n            rename_file(src, dst)\n            current_files.remove(src)\n            current_files.append(dst)\n        elif action == 'delete_file' and current_files:\n            file_to_delete = random.choice(current_files)\n            delete_file(file_to_delete)\n            current_files.remove(file_to_delete)\n\n# Usage\nseed_value = 12345\nbase_directory = "test_tree"\niterations = 100\n\npseudorandom_directory_tree(seed_value, base_directory, iterations)