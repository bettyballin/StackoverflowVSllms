import re\n\ndef validate_tag(tag):\n    # Trim whitespace\n    tag = tag.strip()\n\n    # Check if tag is empty\n    if not tag:\n        return False, "Tag cannot be empty."\n\n    # Check for allowed characters (letters, numbers, dashes, spaces)\n    if not re.match("^[a-zA-Z0-9\- ]+$", tag):\n        return False, "Tag contains invalid characters."\n\n    # Check the length of the tag\n    if len(tag) > 50:  # Example max length\n        return False, "Tag is too long."\n\n    return True, tag\n\ndef process_tags(input_string):\n    tags = input_string.split()\n    validated_tags = []\n    for tag in tags:\n        is_valid, result = validate_tag(tag)\n        if is_valid:\n            # Insert into DB using parameterized queries (example with SQLite)\n            insert_into_db(result)\n            validated_tags.append(result)\n        else:\n            print(f"Invalid tag: {result}")\n    return validated_tags\n\ndef insert_into_db(tag):\n    import sqlite3\n    conn = sqlite3.connect('example.db')\n    cursor = conn.cursor()\n    cursor.execute("INSERT INTO tags (tag) VALUES (?)", (tag,))\n    conn.commit()\n    conn.close()\n\n# Example usage\ninput_tags = "example-tag another-tag invalid@tag"\nprocessed_tags = process_tags(input_tags)\nprint("Processed tags:", processed_tags)