#!/usr/bin/env python3\n\nimport grp\nimport pwd\nimport subprocess\nimport sys\n\ndef remove_user_from_group(user, group):\n    try:\n        user_entry = pwd.getpwnam(user)\n        group_entry = grp.getgrnam(group)\n    except KeyError:\n        print(f"Usage: {sys.argv[0]} login group")\n        print("ERROR: Login and/or Group name does not exist")\n        return 3\n\n    if user_entry.pw_name not in group_entry.gr_mem:\n        print(f"User {user} is not a member of group {group}")\n        return 4\n\n    new_members = [u for u in group_entry.gr_mem if u != user]\n    group_entry.gr_mem = new_members\n    subprocess.run(['gpasswd', '-d', user, group])\n    return 0\n\nif __name__ == "__main__":\n    if len(sys.argv) != 3:\n        print(f"\nUsage: {sys.argv[0]} login group\n")\n        print("EXIT VALUES")\n        print("     0 success")\n        print("     1 Invalid number of arguments")\n        print("     2 Login or Group name supplied greater than 16 characters")\n        print("     3 Login and/or Group name contains invalid characters")\n        sys.exit(1)\n\n    login, group = sys.argv[1], sys.argv[2]\n\n    if len(login) > 16 or len(group) > 16:\n        print(f"Usage: {sys.argv[0]} login group")\n        print("ERROR: Login and Group names must be less than 16 Characters")\n        sys.exit(2)\n\n    if not (login.isalnum() or '-' in login or '_' in login) or not (group.isalnum() or '-' in group or '_' in group):\n        print(f"Usage: {sys.argv[0]} login group")\n        print("ERROR: Login and/or Group name contains invalid characters")\n        sys.exit(3)\n\n    sys.exit(remove_user_from_group(login, group))