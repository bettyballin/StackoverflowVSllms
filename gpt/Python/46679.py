import numpy as np\n\ndef signed_volume_of_triangle(p1, p2, p3):\n    return np.dot(np.cross(p1, p2), p3) / 6.0\n\ndef compute_signed_volume(mesh):\n    volume = 0.0\n    for triangle in mesh:\n        p1, p2, p3 = triangle\n        volume += signed_volume_of_triangle(p1, p2, p3)\n    return volume\n\ndef is_mesh_flipped(mesh):\n    volume = compute_signed_volume(mesh)\n    return volume < 0\n\ndef reverse_winding_order(mesh):\n    return [triangle[::-1] for triangle in mesh]\n\n# Example usage\nmesh = [\n    [np.array([0, 0, 0]), np.array([1, 0, 0]), np.array([0, 1, 0])],\n    [np.array([1, 0, 0]), np.array([1, 1, 0]), np.array([0, 1, 0])],\n    # Add more triangles as needed\n]\n\nif is_mesh_flipped(mesh):\n    mesh = reverse_winding_order(mesh)\n\nprint("Mesh flipped:", is_mesh_flipped(mesh))