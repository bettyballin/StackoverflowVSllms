import socket\nimport time\n\n# Client side\ndef client_heartbeat():\n    server_address = ('localhost', 65432)\n    while True:\n        try:\n            with socket.create_connection(server_address) as sock:\n                while True:\n                    sock.sendall(b'HEARTBEAT')\n                    response = sock.recv(1024)\n                    if response == b'HEARTBEAT_ACK':\n                        print("Heartbeat acknowledged")\n                    time.sleep(20)  # Wait for 20 seconds before sending the next heartbeat\n        except (socket.error, ConnectionResetError):\n            print("Connection lost, retrying...")\n            time.sleep(5)  # Wait before trying to reconnect\n\n# Server side\ndef server_listener():\n    server_address = ('localhost', 65432)\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_sock:\n        server_sock.bind(server_address)\n        server_sock.listen(1)\n        print("Server listening on port 65432")\n        while True:\n            connection, client_address = server_sock.accept()\n            with connection:\n                print(f"Connection from {client_address}")\n                last_heartbeat = time.time()\n                while True:\n                    try:\n                        data = connection.recv(1024)\n                        if data == b'HEARTBEAT':\n                            connection.sendall(b'HEARTBEAT_ACK')\n                            last_heartbeat = time.time()\n                        elif time.time() - last_heartbeat > 120:\n                            print("No heartbeat received, closing connection")\n                            connection.close()\n                            break\n                    except socket.error:\n                        print("Connection error")\n                        break\n\nif __name__ == "__main__":\n    # Run server_listener and client_heartbeat in appropriate threads or processes\n    pass