import textwrap\n\ndef trim_to_nearest_word(text, limit):\n    if len(text) <= limit:\n        return text\n    \n    wrapped_lines = textwrap.wrap(text, width=limit)\n    if not wrapped_lines:\n        return ""\n    \n    # The first wrapped line should be shorter or equal to the limit\n    trimmed_text = wrapped_lines[0]\n    \n    # Ensure we do not break words\n    if len(trimmed_text) == limit and text[limit] != ' ':\n        # Find the last space within the limit\n        last_space_index = trimmed_text.rfind(' ')\n        if last_space_index != -1:\n            trimmed_text = trimmed_text[:last_space_index]\n    \n    return trimmed_text\n\n# Examples\ntext1 = "This is a block of text, blah blah blah"\ntext2 = "this is another block of txt 2 work with"\n\nprint(trim_to_nearest_word(text1, 27))  # Output: "This is a block of text,"\nprint(trim_to_nearest_word(text2, 27))  # Output: "this is another block of"