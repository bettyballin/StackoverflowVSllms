import random\nimport matplotlib.pyplot as plt\nimport math\n\ndef distance(x1, y1, x2, y2):\n    return math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n\ndef does_overlap(circle, circles, radius):\n    for existing_circle in circles:\n        if distance(circle[0], circle[1], existing_circle[0], existing_circle[1]) < 2 * radius:\n            return True\n    return False\n\ndef generate_circles(num_circles, radius, width, height):\n    circles = []\n    attempts = 0\n    while len(circles) < num_circles and attempts < 10000:\n        new_circle = (random.uniform(radius, width - radius), random.uniform(radius, height - radius))\n        if not does_overlap(new_circle, circles, radius):\n            circles.append(new_circle)\n        attempts += 1\n    return circles\n\ndef plot_circles(circles, radius):\n    fig, ax = plt.subplots()\n    for circle in circles:\n        ax.add_patch(plt.Circle((circle[0], circle[1]), radius, edgecolor='blue', facecolor='none'))\n    plt.xlim(0, width)\n    plt.ylim(0, height)\n    plt.gca().set_aspect('equal', adjustable='box')\n    plt.show()\n\n# Parameters\nnum_circles = 10\nradius = 10\nwidth = 100\nheight = 100\n\n# Generate and plot circles\ncircles = generate_circles(num_circles, radius, width, height)\nplot_circles(circles, radius)