import numpy as np\nimport wave\n\ndef is_clipping(audio_file):\n    with wave.open(audio_file, 'rb') as wf:\n        # Ensure the audio file is 16-bit PCM\n        assert wf.getsampwidth() == 2, "Only 16-bit audio files are supported"\n        \n        # Read the audio data\n        n_frames = wf.getnframes()\n        audio_data = wf.readframes(n_frames)\n        \n        # Convert audio data to numpy array\n        audio_samples = np.frombuffer(audio_data, dtype=np.int16)\n        \n        # Check for clipping\n        max_val = 32767\n        min_val = -32768\n        clipping = np.any((audio_samples >= max_val) | (audio_samples <= min_val))\n        \n        return clipping\n\n# Example usage\naudio_file_path = 'example.wav'  # Replace with your audio file path\nif is_clipping(audio_file_path):\n    print("The audio file is clipping.")\nelse:\n    print("The audio file is not clipping.")