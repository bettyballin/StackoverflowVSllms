import numpy as np\nimport pyldpc\n\n# Parameters\nn = 15  # Length of the codeword\nd_v = 3  # Number of ones per row\nd_c = 5  # Number of ones per column\n\n# Generate the LDPC matrix\nH, G = pyldpc.make_ldpc(n, d_v, d_c, systematic=True, sparse=True)\n\n# Original binary stream (message)\nk = G.shape[1]\nmessage = np.random.randint(2, size=k)\n\n# Encode the message\ncodeword = pyldpc.encode(G, message, snr=10)\n\n# Simulate the noisy channel with a 50% error rate\nnoisy_codeword = codeword.copy()\nnoise = np.random.rand(n) < 0.5\nnoisy_codeword[noise] = 1 - noisy_codeword[noise]\n\n# Decode the received noisy codeword\ndecoded_message = pyldpc.decode(H, noisy_codeword, snr=10)\n\n# Check if decoding was successful\nprint("Original message: ", message)\nprint("Decoded message: ", decoded_message)