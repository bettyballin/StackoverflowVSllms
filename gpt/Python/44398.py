import base64\n   from cryptography.hazmat.primitives import hashes\n   from cryptography.hazmat.primitives.asymmetric import padding\n\n   def create_license_key(private_key, user_info, version, duration):\n       # Combine license information\n       license_info = f"{user_info}|{version}|{duration}"\n\n       # Sign the license information\n       signature = private_key.sign(\n           license_info.encode(),\n           padding.PSS(\n               mgf=padding.MGF1(hashes.SHA256()),\n               salt_length=padding.PSS.MAX_LENGTH\n           ),\n           hashes.SHA256()\n       )\n\n       # Encode the license information and signature\n       license_key = base64.urlsafe_b64encode(license_info.encode() + b"|" + signature).decode()\n       return license_key\n\n   # Load private key from file\n   with open("private_key.pem", "rb") as f:\n       private_key = serialization.load_pem_private_key(\n           f.read(),\n           password=None\n       )\n\n   # Generate a license key\n   user_info = "user@example.com"\n   version = "1.0"\n   duration = "2023-12-31"\n   license_key = create_license_key(private_key, user_info, version, duration)\n   print("License Key:", license_key)