def generate_permutations(groups, path=[], used=set(), result=[]):\n    if len(path) == len(groups):\n        result.append(path[:])\n        return\n\n    for number in groups[len(path)]:\n        if number not in used:\n            path.append(number)\n            used.add(number)\n            generate_permutations(groups, path, used, result)\n            path.pop()\n            used.remove(number)\n\ndef calculate_exotic_wager(groups):\n    result = []\n    generate_permutations(groups, result=result)\n    return result\n\n# Example usage:\ngroups = [\n    [1, 2, 3],\n    [2, 3, 4],\n    [3, 4, 5]\n]\n\npermutations = calculate_exotic_wager(groups)\nprint(permutations)