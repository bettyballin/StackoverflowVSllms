import functools\n\ndef freeze(func):\n    cached_results = {}\n\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        key = (args, tuple(sorted(kwargs.items())))\n        if key not in cached_results:\n            cached_results[key] = func(*args, **kwargs)\n        return cached_results[key]\n\n    return wrapper\n\n# Example usage:\n@freeze\ndef pow(n, k):\n    if k == 0:\n        return 1\n    else:\n        return n * pow(n, k - 1)\n\n# Testing the freeze decorator\nprint(pow(2, 3))  # Output: 8\nprint(pow(2, 3))  # Output: 8 (cached result)