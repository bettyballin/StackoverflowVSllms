def first_fit_decreasing(cut_lengths, stock_length):\n    # Sort the cut lengths in decreasing order\n    cut_lengths.sort(reverse=True)\n    \n    # List to store the remaining lengths of the current bins\n    bins = []\n    \n    for length in cut_lengths:\n        placed = False\n        \n        # Try to place the length in an existing bin\n        for i in range(len(bins)):\n            if bins[i] >= length:\n                bins[i] -= length\n                placed = True\n                break\n        \n        # If it does not fit in any existing bin, create a new bin\n        if not placed:\n            bins.append(stock_length - length)\n    \n    # Return the number of bins used and the remaining lengths in each bin\n    return len(bins), bins\n\n# Example usage\ncut_lengths = [1.2, 2.3, 3.4, 0.5, 1.8, 2.7]  # List of smaller lengths that need to be cut\nstock_length = 5.0  # Length of the stock aluminum extrusion\n\nnum_bins, remaining_lengths = first_fit_decreasing(cut_lengths, stock_length)\n\nprint(f"Number of 5m lengths used: {num_bins}")\nprint(f"Remaining lengths in each bin: {remaining_lengths}")