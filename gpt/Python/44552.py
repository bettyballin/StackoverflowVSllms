import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, Gdk\n\nclass TextViewWithUndo(Gtk.Window):\n    def __init__(self):\n        super(TextViewWithUndo, self).__init__()\n        self.set_title("TextView with Undo/Redo")\n        self.set_default_size(600, 400)\n        \n        self.undo_stack = []\n        self.redo_stack = []\n\n        self.textview = Gtk.TextView()\n        self.textbuffer = self.textview.get_buffer()\n        self.textbuffer.connect("changed", self.on_textbuffer_changed)\n        \n        self.scrolled_window = Gtk.ScrolledWindow()\n        self.scrolled_window.add(self.textview)\n        self.add(self.scrolled_window)\n        \n        self.connect("key-press-event", self.on_key_press_event)\n        self.connect("destroy", Gtk.main_quit)\n        self.show_all()\n\n    def on_textbuffer_changed(self, textbuffer):\n        start_iter = textbuffer.get_start_iter()\n        end_iter = textbuffer.get_end_iter()\n        text = textbuffer.get_text(start_iter, end_iter, True)\n        self.undo_stack.append(text)\n        \n        # Clear redo stack since new changes invalidate redo history\n        self.redo_stack.clear()\n\n    def on_key_press_event(self, widget, event):\n        ctrl = (event.state & Gdk.ModifierType.CONTROL_MASK)\n        \n        if ctrl and event.keyval == Gdk.KEY_z:  # Ctrl+Z for Undo\n            self.undo()\n        elif ctrl and event.keyval == Gdk.KEY_y:  # Ctrl+Y for Redo\n            self.redo()\n\n    def undo(self):\n        if len(self.undo_stack) > 1:\n            self.redo_stack.append(self.undo_stack.pop())\n            self.set_text(self.undo_stack[-1])\n\n    def redo(self):\n        if self.redo_stack:\n            text = self.redo_stack.pop()\n            self.undo_stack.append(text)\n            self.set_text(text)\n\n    def set_text(self, text):\n        self.textbuffer.disconnect_by_func(self.on_textbuffer_changed)\n        self.textbuffer.set_text(text)\n        self.textbuffer.connect("changed", self.on_textbuffer_changed)\n\nif __name__ == "__main__":\n    win = TextViewWithUndo()\n    Gtk.main()