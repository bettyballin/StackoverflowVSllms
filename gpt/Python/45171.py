class BikeComputer:\n    def __init__(self):\n        self.total_distance = 0.0  # in miles\n        self.total_time = 0.0  # in hours\n\n    def update(self, current_speed, time_interval):\n        # Update total distance traveled\n        self.total_distance += current_speed * time_interval\n        # Update total time elapsed\n        self.total_time += time_interval\n        # Calculate and return average speed\n        if self.total_time > 0:\n            average_speed = self.total_distance / self.total_time\n        else:\n            average_speed = 0.0\n        return round(average_speed, 1)\n\n# Example usage:\nbike_computer = BikeComputer()\n\n# Simulate updates\nbike_computer.update(19.5, 0.1)  # current_speed in mph, time_interval in hours (0.1 hour = 6 minutes)\nprint(bike_computer.update(19.5, 0.1))  # Update again after another 6 minutes