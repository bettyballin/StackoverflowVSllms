import http.server\nimport socketserver\nimport json\n\nPORT = 8000\n\nclass MyHandler(http.server.SimpleHTTPRequestHandler):\n    def do_GET(self):\n        if self.path == '/':\n            self.send_response(200)\n            self.send_header('Content-type', 'text/html')\n            self.end_headers()\n            self.wfile.write(b'''\n                <!DOCTYPE html>\n                <html>\n                <head>\n                    <title>AJAX Example</title>\n                    <script>\n                        function sendData() {\n                            var xhr = new XMLHttpRequest();\n                            var url = "/ajax";\n                            xhr.open("POST", url, true);\n                            xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");\n                            xhr.onreadystatechange = function () {\n                                if (xhr.readyState === 4 && xhr.status === 200) {\n                                    document.getElementById("response").innerText = xhr.responseText;\n                                }\n                            };\n                            var data = JSON.stringify({"text": document.getElementById("text").value});\n                            xhr.send(data);\n                        }\n                    </script>\n                </head>\n                <body>\n                    <input type="text" id="text" />\n                    <button onclick="sendData()">Send</button>\n                    <p id="response"></p>\n                </body>\n                </html>\n            ''')\n        else:\n            super().do_GET()\n\n    def do_POST(self):\n        if self.path == '/ajax':\n            content_length = int(self.headers['Content-Length'])\n            post_data = self.rfile.read(content_length)\n            data = json.loads(post_data)\n            response = f"Received: {data['text']}"\n            self.send_response(200)\n            self.send_header('Content-type', 'text/plain')\n            self.end_headers()\n            self.wfile.write(response.encode())\n\nHandler = MyHandler\n\nwith socketserver.TCPServer(("", PORT), Handler) as httpd:\n    print(f"Serving at port {PORT}")\n    httpd.serve_forever()