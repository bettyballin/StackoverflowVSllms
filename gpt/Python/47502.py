import os\nimport pefile\nimport sys\n\ndef is_64bit_dll(file_path):\n    pe = pefile.PE(file_path)\n    return pe.FILE_HEADER.Machine == pefile.MACHINE_TYPE['IMAGE_FILE_MACHINE_AMD64']\n\ndef check_dlls(directory, target_type):\n    if target_type not in ['32bit', '64bit']:\n        print("Invalid target type. Use '32bit' or '64bit'.")\n        return\n\n    print(f"Checking DLLs in directory: {directory}")\n    for root, _, files in os.walk(directory):\n        for file in files:\n            if file.lower().endswith('.dll'):\n                file_path = os.path.join(root, file)\n                try:\n                    if is_64bit_dll(file_path):\n                        dll_type = '64bit'\n                    else:\n                        dll_type = '32bit'\n                    \n                    if dll_type != target_type:\n                        print(f"Mismatch: {file_path} is {dll_type}")\n                except pefile.PEFormatError:\n                    print(f"Invalid PE file: {file_path}")\n\nif __name__ == "__main__":\n    if len(sys.argv) != 3:\n        print("Usage: python check_dlls.py <directory> <target_type>")\n        print("<target_type> should be '32bit' or '64bit'")\n    else:\n        directory = sys.argv[1]\n        target_type = sys.argv[2]\n        check_dlls(directory, target_type)