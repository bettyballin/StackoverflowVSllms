class SyntaxColorizer:\n    def __init__(self):\n        self.state = "IDLE"\n        self.buffer = ""\n\n    def process_event(self, char):\n        if self.state == "IDLE":\n            if char == '$':\n                self.state = "FOUND_DOLLAR"\n            else:\n                self.buffer += char\n        elif self.state == "FOUND_DOLLAR":\n            if char == '\n':\n                self.OnDollar()\n                self.state = "IDLE"\n            else:\n                self.OnColorizeBeforeDollar()\n                self.buffer = ""\n                self.state = "IDLE"\n\n    def OnDollar(self):\n        print(f"Colorize: {self.buffer}$")\n\n    def OnColorizeBeforeDollar(self):\n        print(f"Colorize: {self.buffer}")\n\n# Example usage\ncolorizer = SyntaxColorizer()\ntext = "This is a line ending with dollar$\nThis is another line\n"\nfor char in text:\n    colorizer.process_event(char)