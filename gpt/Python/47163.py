import numpy as np\n\ndef get_edges(rect):\n    return [(rect[i] - rect[i - 1]) for i in range(len(rect))]\n\ndef get_normals(edges):\n    return [np.array([-edge[1], edge[0]]) for edge in edges]\n\ndef project(vertices, axis):\n    dots = [np.dot(vertex, axis) for vertex in vertices]\n    return [min(dots), max(dots)]\n\ndef overlap(proj1, proj2):\n    return not (proj1[1] < proj2[0] or proj2[1] < proj1[0])\n\ndef separating_axis_test(rect1, rect2):\n    edges1 = get_edges(rect1)\n    edges2 = get_edges(rect2)\n    normals = get_normals(edges1) + get_normals(edges2) \n\n    for normal in normals:\n        proj1 = project(rect1, normal)\n        proj2 = project(rect2, normal)\n        if not overlap(proj1, proj2):\n            return False\n    return True\n\n# Define the rectangles\n# Example R1: Rotated Rectangle (A, B, C, D)\nrect1 = np.array([[1, 1], [4, 2], [3, 5], [0, 4]])\n\n# Example R2: Axis-Aligned Rectangle (A', B', C', D')\nrect2 = np.array([[2, 3], [5, 3], [5, 6], [2, 6]])\n\n# Check for intersection\nresult = separating_axis_test(rect1, rect2)\nprint("Intersecting" if result else "Not intersecting")