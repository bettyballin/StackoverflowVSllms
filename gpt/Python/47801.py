import re\n\n# Loose validator\ndef basic_email_validator(email):\n    pattern = r"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$"\n    if re.match(pattern, email):\n        return True\n    return False\n\n# Custom validators for specific agencies\ndef agency_a_email_validator(email):\n    # Agency A's specific email validation rules\n    pattern = r"^[a-zA-Z0-9_.+-]+@exampleA\.com$"\n    if re.match(pattern, email):\n        return True\n    return False\n\ndef agency_b_email_validator(email):\n    # Agency B's specific email validation rules\n    pattern = r"^[a-zA-Z0-9_.+-]+@exampleB\.org$"\n    if re.match(pattern, email):\n        return True\n    return False\n\n# Main function to validate email addresses based on agency\ndef validate_email_for_agency(email, agency):\n    if not basic_email_validator(email):\n        return False\n    \n    if agency == 'AgencyA':\n        return agency_a_email_validator(email)\n    elif agency == 'AgencyB':\n        return agency_b_email_validator(email)\n    else:\n        # Default to basic validation if no specific agency rules apply\n        return basic_email_validator(email)\n\n# Example usage\nemail = "user@exampleA.com"\nagency = "AgencyA"\n\nif validate_email_for_agency(email, agency):\n    print("Email is valid for the given agency.")\nelse:\n    print("Email is invalid for the given agency.")