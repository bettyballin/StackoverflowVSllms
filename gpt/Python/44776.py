from difflib import unified_diff\n\ndef get_ownership(revisions):\n    edit_counts = {}\n    total_edits = 0\n\n    # Assume the first revision is by the first user\n    first_user, first_text = revisions[0]\n    edit_counts[first_user] = 0\n    \n    for i in range(1, len(revisions)):\n        user, new_text = revisions[i]\n        old_text = revisions[i-1][1]\n        \n        # Compute the line-based diff\n        diff = list(unified_diff(old_text.splitlines(), new_text.splitlines()))\n        \n        # Calculate the number of insertion and deletion lines\n        insertion_lines = sum(1 for line in diff if line.startswith('+') and not line.startswith('+++'))\n        deletion_lines = sum(1 for line in diff if line.startswith('-') and not line.startswith('---'))\n        edit_count = insertion_lines + deletion_lines\n        \n        # Update the counts\n        if user not in edit_counts:\n            edit_counts[user] = 0\n        edit_counts[user] += edit_count\n        total_edits += edit_count\n    \n    # Apply the primary authorship bonus\n    edit_counts[first_user] *= 2\n    total_edits += edit_counts[first_user]  # Adjust total edits for the bonus\n    \n    # Calculate ownership percentages\n    ownership_percentages = {user: (count / total_edits) * 100 for user, count in edit_counts.items()}\n    \n    # Find the top owner\n    top_owner = max(ownership_percentages, key=ownership_percentages.get)\n    return top_owner, ownership_percentages[top_owner]\n\n# Example usage\nrevisions = [\n    (12, "The quick brown fox jumps over the lazy dog."),\n    (27, "The quick brown fox jumps, sometimes."),\n    (30, "I always see the speedy brown fox jumping over the lazy dog.")\n]\n\ntop_owner, ownership_percentage = get_ownership(revisions)\nprint(f"Top owner: {top_owner}, Ownership percentage: {ownership_percentage}%")