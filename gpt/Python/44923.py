from cryptography.fernet import Fernet\nimport configparser\n\n# Generate and save a key (only do this once and store the key securely)\n# key = Fernet.generate_key()\n# with open('secret.key', 'wb') as key_file:\n#     key_file.write(key)\n\n# Load the key from a file\nwith open('secret.key', 'rb') as key_file:\n    key = key_file.read()\n\ncipher_suite = Fernet(key)\n\n# Encrypt a value\ndef encrypt_value(value):\n    encrypted_value = cipher_suite.encrypt(value.encode())\n    return encrypted_value.decode()\n\n# Decrypt a value\ndef decrypt_value(encrypted_value):\n    decrypted_value = cipher_suite.decrypt(encrypted_value.encode())\n    return decrypted_value.decode()\n\n# Read the config file\nconfig = configparser.ConfigParser()\nconfig.read('config.ini')\n\n# Encrypt a value and save it back to the config file\nconfig['DEFAULT']['password'] = encrypt_value('my_password')\n\nwith open('config.ini', 'w') as configfile:\n    config.write(configfile)\n\n# To decrypt and read the value from the config file\nencrypted_password = config['DEFAULT']['password']\ndecrypted_password = decrypt_value(encrypted_password)\nprint(decrypted_password)