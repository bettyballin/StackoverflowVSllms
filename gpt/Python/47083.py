def minCashFlow(transactions):\n    def get_min_index(arr):\n        min_index = 0\n        for i in range(1, len(arr)):\n            if arr[i] < arr[min_index]:\n                min_index = i\n        return min_index\n\n    def get_max_index(arr):\n        max_index = 0\n        for i in range(1, len(arr)):\n            if arr[i] > arr[max_index]:\n                max_index = i\n        return max_index\n\n    def min_cash_flow_rec(net_balance):\n        min_debtor = get_min_index(net_balance)\n        max_creditor = get_max_index(net_balance)\n\n        if net_balance[min_debtor] == 0 and net_balance[max_creditor] == 0:\n            return\n\n        min_value = min(-net_balance[min_debtor], net_balance[max_creditor])\n\n        net_balance[min_debtor] += min_value\n        net_balance[max_creditor] -= min_value\n\n        print(f"Person {min_debtor} pays {min_value} to Person {max_creditor}")\n\n        min_cash_flow_rec(net_balance)\n\n    def calculate_net_balance(transactions):\n        n = len(transactions)\n        net_balance = [0] * n\n        for i in range(n):\n            for j in range(n):\n                net_balance[i] += (transactions[j][i] - transactions[i][j])\n        return net_balance\n\n    net_balance = calculate_net_balance(transactions)\n    min_cash_flow_rec(net_balance)\n\n# Example usage\ntransactions = [\n    [0, 10, 0],  # Alice -> Bill $10\n    [1, 0, 5],   # Bill -> Alice $1, Bill -> Charles $5\n    [5, 0, 0]    # Charles -> Alice $5\n]\n\nminCashFlow(transactions)