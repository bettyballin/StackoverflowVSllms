import numpy as np\n\ndef line_circle_intersection(A, B, C, R):\n    A = np.array(A)\n    B = np.array(B)\n    C = np.array(C)\n    \n    d = B - A\n    f = A - C\n    \n    a = np.dot(d, d)\n    b = 2 * np.dot(f, d)\n    c = np.dot(f, f) - R**2\n    \n    discriminant = b**2 - 4*a*c\n    \n    if discriminant < 0:\n        # No intersection\n        return None\n    else:\n        discriminant = np.sqrt(discriminant)\n        \n        t1 = (-b - discriminant) / (2*a)\n        t2 = (-b + discriminant) / (2*a)\n        \n        intersections = []\n        \n        if 0 <= t1 <= 1:\n            intersection1 = A + t1 * d\n            intersections.append(intersection1)\n        \n        if 0 <= t2 <= 1:\n            intersection2 = A + t2 * d\n            intersections.append(intersection2)\n        \n        return intersections\n\n# Example usage\nA = (0, 0)\nB = (4, 4)\nC = (2, 2)\nR = 1\nprint(line_circle_intersection(A, B, C, R))