import ctypes\nimport ctypes.wintypes\n\nwinhttp = ctypes.windll.winhttp\n\nclass WINHTTP_AUTOPROXY_OPTIONS(ctypes.Structure):\n    _fields_ = [\n        ("dwFlags", ctypes.wintypes.DWORD),\n        ("dwAutoDetectFlags", ctypes.wintypes.DWORD),\n        ("lpszAutoConfigUrl", ctypes.c_wchar_p),\n        ("lpvReserved", ctypes.c_void_p),\n        ("dwReserved", ctypes.wintypes.DWORD),\n        ("fAutoLogonIfChallenged", ctypes.wintypes.BOOL)\n    ]\n\nclass WINHTTP_PROXY_INFO(ctypes.Structure):\n    _fields_ = [\n        ("dwAccessType", ctypes.wintypes.DWORD),\n        ("lpszProxy", ctypes.c_wchar_p),\n        ("lpszProxyBypass", ctypes.c_wchar_p)\n    ]\n\nWINHTTP_AUTOPROXY_CONFIG_URL = 0x00000001\nWINHTTP_ACCESS_TYPE_NAMED_PROXY = 3\n\nurl = u"http://www.foo.com"\n\n# Initialize the WINHTTP_AUTOPROXY_OPTIONS structure\nauto_proxy_options = WINHTTP_AUTOPROXY_OPTIONS()\nauto_proxy_options.dwFlags = WINHTTP_AUTOPROXY_CONFIG_URL\nauto_proxy_options.dwAutoDetectFlags = 0\nauto_proxy_options.lpszAutoConfigUrl = None\nauto_proxy_options.lpvReserved = None\nauto_proxy_options.dwReserved = 0\nauto_proxy_options.fAutoLogonIfChallenged = False\n\n# Initialize the WINHTTP_PROXY_INFO structure\nproxy_info = WINHTTP_PROXY_INFO()\n\n# Open WinHTTP session\nsession = winhttp.WinHttpOpen(ctypes.c_wchar_p("PythonWinHTTP/1.0"),\n                              0, None, None, 0)\nif session:\n    result = winhttp.WinHttpGetProxyForUrl(session,\n                                           ctypes.c_wchar_p(url),\n                                           ctypes.byref(auto_proxy_options),\n                                           ctypes.byref(proxy_info))\n    if result:\n        print("Proxy found:")\n        print(f"Access Type: {proxy_info.dwAccessType}")\n        print(f"Proxy: {proxy_info.lpszProxy}")\n        print(f"Proxy Bypass: {proxy_info.lpszProxyBypass}")\n    else:\n        print("Failed to get proxy information")\n    winhttp.WinHttpCloseHandle(session)\nelse:\n    print("Failed to open WinHTTP session")