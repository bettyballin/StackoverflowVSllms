import os\nfrom django.core.files.uploadedfile import InMemoryUploadedFile\nfrom django.core.files.base import ContentFile\nimport io\nimport uuid\n\n# Function to create an InMemoryUploadedFile from a file path\ndef create_inmemory_file(file_path):\n    with open(file_path, 'rb') as f:\n        file_content = f.read()\n    file_name = os.path.basename(file_path)\n    file_size = len(file_content)\n    file = InMemoryUploadedFile(\n        file=io.BytesIO(file_content),\n        field_name='image',\n        name=file_name,\n        content_type='image/jpeg',  # or the appropriate MIME type\n        size=file_size,\n        charset=None\n    )\n    return file\n\n# Assuming you have a model Photo with an image field\nfrom yourapp.models import Photo\n\n# Example usage\nIMPORT_DIR = '/path/to/import'\nphotos = ['photo1.jpg', 'photo2.jpg']  # list of photo filenames\n\nfor photo in photos:\n    file_path = os.path.join(IMPORT_DIR, 'fotos', photo)\n    in_memory_file = create_inmemory_file(file_path)\n    photo_instance = Photo(name=in_memory_file.name, image=in_memory_file)\n    unique_name = str(uuid.uuid1()) + os.path.splitext(in_memory_file.name)[1]\n    photo_instance.image.save(unique_name, in_memory_file)\n    photo_instance.save()