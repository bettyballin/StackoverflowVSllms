from shapely.geometry import Polygon, Point, Triangle\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.spatial import Delaunay\n\n# Sample points from the boundary of the closed polygon\npoints = np.array([\n    [1, 1], [2, 3], [4, 4], [6, 1], [5, -1], [3, -2], [1, 1]\n])\n\n# Create the closed polygon\npolygon = Polygon(points)\n\n# Perform Delaunay triangulation\ndelaunay = Delaunay(points)\n\n# Function to check if a triangle is inside the polygon\ndef is_triangle_inside(triangle, polygon):\n    # Create a Shapely Triangle object\n    tri = Polygon(triangle)\n    return polygon.contains(tri)\n\n# Iterate over Delaunay triangles\ninternal_triangles = []\nexternal_triangles = []\nfor simplex in delaunay.simplices:\n    triangle = points[simplex]\n    if is_triangle_inside(triangle, polygon):\n        internal_triangles.append(triangle)\n    else:\n        external_triangles.append(triangle)\n\n# Plot the triangles\nplt.triplot(points[:,0], points[:,1], delaunay.simplices, color='blue')\nplt.plot(points[:,0], points[:,1], 'o')\nplt.plot(*polygon.exterior.xy, color='red')\n\n# Highlight internal triangles\nfor tri in internal_triangles:\n    plt.fill(tri[:,0], tri[:,1], 'green', alpha=0.5)\n\nplt.show()