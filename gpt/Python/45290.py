import numpy as np\nfrom scipy.optimize import linear_sum_assignment\n\n# Example sets of points\nA = np.array([[1, 2], [3, 4], [5, 6]])\nB = np.array([[7, 8], [9, 10], [11, 12]])\n\n# Calculate the cost matrix (distance matrix)\ncost_matrix = np.linalg.norm(A[:, np.newaxis] - B, axis=2)\n\n# Use the Hungarian algorithm to find the optimal assignment\nrow_ind, col_ind = linear_sum_assignment(cost_matrix)\n\n# Get the optimal mapping\noptimal_mapping = list(zip(row_ind, col_ind))\n\n# Output the result\nprint("Optimal mapping:", optimal_mapping)\nprint("Total minimum distance:", cost_matrix[row_ind, col_ind].sum())