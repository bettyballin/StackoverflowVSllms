from PIL import Image, ImageOps\n\ndef resize_and_crop(image_path, target_width, target_height):\n    image = Image.open(image_path)\n    original_width, original_height = image.size\n\n    # Calculate the scaling factor to maintain aspect ratio\n    width_ratio = original_width / target_width\n    height_ratio = original_height / target_height\n    scaling_factor = min(width_ratio, height_ratio)\n\n    # Resize the image with the calculated scaling factor\n    new_width = int(original_width / scaling_factor)\n    new_height = int(original_height / scaling_factor)\n    resized_image = image.resize((new_width, new_height), Image.ANTIALIAS)\n\n    # Center crop the image to the desired dimensions\n    left = (new_width - target_width) / 2\n    top = (new_height - target_height) / 2\n    right = (new_width + target_width) / 2\n    bottom = (new_height + target_height) / 2\n\n    cropped_image = resized_image.crop((left, top, right, bottom))\n\n    # If the image needs padding (for example, if the aspect ratio doesn't match exactly)\n    padded_image = ImageOps.pad(cropped_image, (target_width, target_height), method=Image.ANTIALIAS, color=(0,0,0))\n\n    return padded_image\n\n# Usage\nimage_path = 'path_to_your_image.jpg'\ntarget_width = 210\ntarget_height = 150\nfinal_image = resize_and_crop(image_path, target_width, target_height)\n\n# Save or show the final image\nfinal_image.save('resized_and_cropped_image.jpg')\nfinal_image.show()