def longest_repeating_cycle(limit):\n    def get_cycle_length(d):\n        remainders = {}\n        remainder = 1\n        position = 0\n        \n        while remainder != 0 and remainder not in remainders:\n            remainders[remainder] = position\n            remainder = (remainder * 10) % d\n            position += 1\n        \n        if remainder == 0:\n            return 0\n        else:\n            return position - remainders[remainder]\n    \n    max_length = 0\n    result_d = 0\n    \n    for d in range(1, limit):\n        cycle_length = get_cycle_length(d)\n        if cycle_length > max_length:\n            max_length = cycle_length\n            result_d = d\n    \n    return result_d\n\nprint(longest_repeating_cycle(1000))