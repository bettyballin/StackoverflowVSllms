import heapq\n\ndef sorted_sums(nums):\n    n = len(nums)\n    if n < 2:\n        return []\n\n    min_heap = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            # Push the sum and the pair (i, j) to the heap\n            heapq.heappush(min_heap, (nums[i] + nums[j], i, j))\n    \n    # Extract sums from the heap\n    result = []\n    while min_heap:\n        sum_val, i, j = heapq.heappop(min_heap)\n        result.append(sum_val)\n    \n    # Remove duplicates if necessary\n    result = list(dict.fromkeys(result))\n    \n    return result\n\n# Example usage\nnums = [1, 2, 3, 4]\nprint(sorted_sums(nums))  # Output: [3, 4, 5, 5, 6, 7]