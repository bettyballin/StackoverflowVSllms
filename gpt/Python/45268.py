import re\n\ndef replace_multiline_imports(file_path):\n    with open(file_path, 'r') as file:\n        content = file.read()\n\n    # Pattern to match multiline import statements\n    pattern = re.compile(r'from (\S+) import \((.*?)\)', re.DOTALL)\n    \n    # Function to replace matches with single-line imports\n    def replace_match(match):\n        module = match.group(1)\n        imports = match.group(2).replace('\n', '').replace(' ', '')\n        imports = ', '.join([imp.strip() for imp in imports.split(',') if imp.strip()])\n        return f'from {module} import {imports}'\n    \n    # Replace all matches in the content\n    new_content = pattern.sub(replace_match, content)\n    \n    with open(file_path, 'w') as file:\n        file.write(new_content)\n\n# Example usage\nreplace_multiline_imports('path_to_your_python_file.py')