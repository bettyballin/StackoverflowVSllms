import heapq\n\n   def dijkstra(graph, start):\n       queue = [(0, start)]\n       distances = {node: float('inf') for node in graph}\n       distances[start] = 0\n\n       while queue:\n           current_distance, current_node = heapq.heappop(queue)\n\n           if current_distance > distances[current_node]:\n               continue\n\n           for neighbor, weight in graph[current_node]:\n               distance = current_distance + weight\n\n               if distance < distances[neighbor]:\n                   distances[neighbor] = distance\n                   heapq.heappush(queue, (distance, neighbor))\n\n       return distances