CREATE PROCEDURE InsertArticleWithTags\n    @ArticleName VARCHAR(MAX),\n    @ArticleBody VARCHAR(MAX),\n    @ArticleTags VARCHAR(MAX)\nAS\nBEGIN\n    SET NOCOUNT ON;\n    DECLARE @ArticleId INT;\n\n    -- Insert into Articles table and get the new ArticleId\n    INSERT INTO dbo.Articles (ArticleName, ArticleBody)\n    VALUES (@ArticleName, @ArticleBody);\n\n    SET @ArticleId = SCOPE_IDENTITY();\n\n    -- Split the ArticleTags string into individual tags\n    DECLARE @Tag NVARCHAR(100);\n    DECLARE @TagId INT;\n    DECLARE @Pos INT;\n    DECLARE @NextPos INT;\n\n    SET @Pos = 1;\n    SET @NextPos = CHARINDEX(' ', @ArticleTags, @Pos);\n\n    WHILE @Pos > 0\n    BEGIN\n        IF @NextPos > 0\n        BEGIN\n            SET @Tag = SUBSTRING(@ArticleTags, @Pos, @NextPos - @Pos);\n            SET @Pos = @NextPos + 1;\n        END\n        ELSE\n        BEGIN\n            SET @Tag = SUBSTRING(@ArticleTags, @Pos, LEN(@ArticleTags) - @Pos + 1);\n            SET @Pos = 0;\n        END\n\n        -- Check if tag exists, if not insert it and get the tag id\n        IF NOT EXISTS (SELECT 1 FROM dbo.Tags WHERE TagName = @Tag)\n        BEGIN\n            INSERT INTO dbo.Tags (TagName)\n            VALUES (@Tag);\n\n            SET @TagId = SCOPE_IDENTITY();\n        END\n        ELSE\n        BEGIN\n            SELECT @TagId = TagId FROM dbo.Tags WHERE TagName = @Tag;\n        END\n\n        -- Insert into TagMap table\n        INSERT INTO dbo.TagMap (ArticleId, TagId)\n        VALUES (@ArticleId, @TagId);\n\n        SET @NextPos = CHARINDEX(' ', @ArticleTags, @Pos);\n    END\n\n    SET NOCOUNT OFF;\nEND