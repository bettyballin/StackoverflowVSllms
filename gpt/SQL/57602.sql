CREATE PROCEDURE GetCalculatedBounds\n    @RunID INT\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    -- Temporary table to hold the results\n    CREATE TABLE #Results (\n        MeasurementTypeID INT,\n        CalculatedUpperBound FLOAT,\n        CalculatedLowerBound FLOAT\n    );\n\n    INSERT INTO #Results (MeasurementTypeID, CalculatedUpperBound, CalculatedLowerBound)\n    SELECT \n        tm.MeasurementTypeID,\n        MIN(CASE\n            WHEN sb.UpperBound IS NOT NULL THEN sb.UpperBound\n            WHEN cb.UpperBound IS NOT NULL THEN cb.UpperBound\n            WHEN pb.UpperBound IS NOT NULL THEN pb.UpperBound\n            ELSE NULL\n        END) AS CalculatedUpperBound,\n        MAX(CASE\n            WHEN sb.LowerBound IS NOT NULL THEN sb.LowerBound\n            WHEN cb.LowerBound IS NOT NULL THEN cb.LowerBound\n            WHEN pb.LowerBound IS NOT NULL THEN pb.LowerBound\n            ELSE NULL\n        END) AS CalculatedLowerBound\n    FROM \n        ProductionRuns pr\n    INNER JOIN \n        TemplateMeasurements tm ON pr.TemplateID = tm.TemplateID\n    LEFT JOIN \n        SimpleBounds sb ON tm.MeasurementTypeID = sb.MeasurementTypeID AND tm.TemplateID = sb.TemplateID\n    LEFT JOIN \n        ContainerBounds cb ON tm.MeasurementTypeID = cb.MeasurementTypeID AND tm.TemplateID = cb.TemplateID AND pr.ContainerName = cb.ContainerName\n    LEFT JOIN \n        ProductBounds pb ON tm.MeasurementTypeID = pb.MeasurementTypeID AND tm.TemplateID = pb.TemplateID AND pr.ProductName = pb.ProductName\n    WHERE \n        pr.RunID = @RunID\n    GROUP BY \n        tm.MeasurementTypeID;\n\n    SELECT * FROM #Results;\n\n    -- Clean up\n    DROP TABLE #Results;\nEND