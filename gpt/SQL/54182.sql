-- Step 1: Create a temporary table to hold the aggregated results\nCREATE TABLE #AggregatedResults (\n    activityid INT,\n    ticketnumber NUMERIC,\n    actdate DATETIME,\n    actduration DATETIME\n);\n\n-- Step 2: Insert aggregated results into Activities and capture new identity values\nINSERT INTO Activities (actdate, actduration, ticketnumber)\nOUTPUT INSERTED.activityid, INSERTED.ticketnumber, INSERTED.actdate, INSERTED.actduration\nINTO #AggregatedResults\nSELECT \n    GETDATE() AS actdate, -- Assuming the current date/time for the new activity\n    SUM(DATEDIFF(MINUTE, startdate + starttime, enddate + endtime)) AS actduration, \n    ticketid AS ticketnumber\nFROM \n    ActivitySegments\nWHERE \n    segmentid IN (SELECT segmentid FROM @TempSegmentIds) -- Assuming you have populated temp table with segment IDs\nGROUP BY \n    ticketid;\n\n-- Step 3: Update the ActivitySegments table with the new activityid values\nUPDATE ActivitySegments\nSET activityid = a.activityid\nFROM ActivitySegments AS seg\nJOIN #AggregatedResults AS a\nON seg.ticketid = a.ticketnumber\nWHERE seg.segmentid IN (SELECT segmentid FROM @TempSegmentIds);\n\n-- Step 4: Clean up the temporary table\nDROP TABLE #AggregatedResults;