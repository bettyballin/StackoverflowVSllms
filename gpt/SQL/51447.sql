-- Example of foreign key with additional check constraint\nALTER TABLE Projects\nADD CONSTRAINT FK_Project_Company FOREIGN KEY (CompanyID) REFERENCES Companies(ID),\nADD CONSTRAINT FK_Project_Client FOREIGN KEY (ClientID) REFERENCES Clients(ID),\nADD CONSTRAINT CK_Project_CompanyClient CHECK (\n    ClientID IS NULL OR \n    EXISTS (SELECT 1 FROM Clients WHERE Clients.ID = Projects.ClientID AND Clients.CompanyID = Projects.CompanyID)\n);\n\n-- Example of a trigger to ensure ClientID belongs to the same CompanyID\nCREATE TRIGGER trg_Projects_InsertUpdate\nON Projects\nINSTEAD OF INSERT, UPDATE\nAS\nBEGIN\n    IF EXISTS (\n        SELECT 1\n        FROM inserted i\n        JOIN Clients c ON i.ClientID = c.ID\n        WHERE i.CompanyID <> c.CompanyID\n    )\n    BEGIN\n        RAISERROR ('ClientID does not belong to the same CompanyID.', 16, 1);\n        ROLLBACK TRANSACTION;\n        RETURN;\n    END\n    ELSE\n    BEGIN\n        -- Perform the actual insert or update\n        IF EXISTS (SELECT * FROM inserted)\n        BEGIN\n            INSERT INTO Projects (ID, CompanyID, ClientID, ProjectName)\n            SELECT ID, CompanyID, ClientID, ProjectName FROM inserted;\n        END\n\n        IF EXISTS (SELECT * FROM deleted)\n        BEGIN\n            DELETE FROM Projects WHERE ID IN (SELECT ID FROM deleted);\n        END\n    END\nEND;\nGO\n\n-- Example of a stored procedure for inserting projects\nCREATE PROCEDURE sp_InsertProject\n    @CompanyID INT,\n    @ClientID INT,\n    @ProjectName NVARCHAR(100)\nAS\nBEGIN\n    IF @ClientID IS NOT NULL AND NOT EXISTS (\n        SELECT 1 FROM Clients WHERE ID = @ClientID AND CompanyID = @CompanyID\n    )\n    BEGIN\n        RAISERROR ('ClientID does not belong to the specified CompanyID.', 16, 1);\n        RETURN;\n    END\n\n    INSERT INTO Projects (CompanyID, ClientID, ProjectName)\n    VALUES (@CompanyID, @ClientID, @ProjectName);\nEND;\nGO