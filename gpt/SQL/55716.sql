CREATE FUNCTION dbo.AddWorkingHours(\n    @startDateTime DATETIME,\n    @hoursToAdd INT\n)\nRETURNS DATETIME\nAS\nBEGIN\n    DECLARE @endDateTime DATETIME\n    DECLARE @currentDateTime DATETIME\n    DECLARE @remainingHoursToAdd INT\n\n    SET @currentDateTime = @startDateTime\n    SET @remainingHoursToAdd = @hoursToAdd\n    \n    -- Adjust start time to the next working time if it's outside working hours or weekend\n    IF (DATEPART(WEEKDAY, @currentDateTime) IN (1, 7) OR -- Weekend\n        DATEPART(HOUR, @currentDateTime) < 8 OR -- Before 08:30\n        (DATEPART(HOUR, @currentDateTime) = 8 AND DATEPART(MINUTE, @currentDateTime) < 30) OR\n        DATEPART(HOUR, @currentDateTime) >= 17) -- After 17:30\n    BEGIN\n        WHILE DATEPART(WEEKDAY, @currentDateTime) IN (1, 7) OR\n              DATEPART(HOUR, @currentDateTime) < 8 OR\n              (DATEPART(HOUR, @currentDateTime) = 8 AND DATEPART(MINUTE, @currentDateTime) < 30) OR\n              DATEPART(HOUR, @currentDateTime) >= 17\n        BEGIN\n            -- Move to next day\n            SET @currentDateTime = DATEADD(DAY, 1, @currentDateTime)\n            \n            -- Set time to start of working day\n            SET @currentDateTime = DATEADD(HOUR, 8, DATEADD(MINUTE, 30, CONVERT(DATETIME, CONVERT(VARCHAR, @currentDateTime, 112))))\n        END\n    END\n\n    WHILE @remainingHoursToAdd > 0\n    BEGIN\n        DECLARE @currentDayEnd DATETIME\n        SET @currentDayEnd = DATEADD(HOUR, 17, DATEADD(MINUTE, 30, CONVERT(DATETIME, CONVERT(VARCHAR, @currentDateTime, 112))))\n\n        DECLARE @hoursInCurrentDay INT\n        SET @hoursInCurrentDay = DATEDIFF(HOUR, @currentDateTime, @currentDayEnd)\n        \n        IF @remainingHoursToAdd <= @hoursInCurrentDay\n        BEGIN\n            SET @endDateTime = DATEADD(HOUR, @remainingHoursToAdd, @currentDateTime)\n            SET @remainingHoursToAdd = 0\n        END\n        ELSE\n        BEGIN\n            SET @remainingHoursToAdd = @remainingHoursToAdd - @hoursInCurrentDay\n            SET @currentDateTime = DATEADD(DAY, 1, @currentDayEnd)\n            \n            -- Move to next working day if current day is a weekend\n            WHILE DATEPART(WEEKDAY, @currentDateTime) IN (1, 7)\n            BEGIN\n                SET @currentDateTime = DATEADD(DAY, 1, @currentDateTime)\n            END\n            \n            -- Set start time to the start of working day\n            SET @currentDateTime = DATEADD(HOUR, 8, DATEADD(MINUTE, 30, CONVERT(DATETIME, CONVERT(VARCHAR, @currentDateTime, 112))))\n        END\n    END\n\n    RETURN @endDateTime\nEND\nGO