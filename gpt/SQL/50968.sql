DELIMITER //\n\nCREATE PROCEDURE AddArtistsToGroup(IN artist_ids VARCHAR(255))\nBEGIN\n    DECLARE new_group_id INT;\n    DECLARE existing_group_id INT;\n    \n    -- Sort the artist IDs\n    SET artist_ids = (SELECT GROUP_CONCAT(ArtistID ORDER BY ArtistID SEPARATOR ',') FROM Artist WHERE FIND_IN_SET(ArtistID, artist_ids));\n    \n    -- Check if the group already exists\n    SELECT GroupID INTO existing_group_id\n    FROM (\n        SELECT GroupID, GROUP_CONCAT(ArtistID ORDER BY ArtistID SEPARATOR ',') AS sorted_ids\n        FROM Artist_Group_Participation\n        GROUP BY GroupID\n    ) AS group_ids\n    WHERE group_ids.sorted_ids = artist_ids\n    LIMIT 1;\n    \n    IF existing_group_id IS NULL THEN\n        -- Create a new group\n        INSERT INTO Artist_Group () VALUES ();\n        SET new_group_id = LAST_INSERT_ID();\n        \n        -- Insert artists into the new group\n        INSERT INTO Artist_Group_Participation (GroupID, ArtistID)\n        SELECT new_group_id, ArtistID\n        FROM Artist\n        WHERE FIND_IN_SET(ArtistID, artist_ids);\n    ELSE\n        SET new_group_id = existing_group_id;\n    END IF;\n    \n    SELECT new_group_id AS GroupID;\nEND //\n\nDELIMITER ;