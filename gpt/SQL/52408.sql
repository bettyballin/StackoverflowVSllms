-- Step 1: Create a temporary table to store the latest ReadTime for each readings_miu_id and ReadDate\nSELECT readings_miu_id, ReadDate, MAX(ReadTime) AS MaxReadTime\nINTO TempMaxReadTime\nFROM analyzedCopy\nWHERE ReadDate BETWEEN #04/21/09# AND #04/29/09#\nGROUP BY readings_miu_id, ReadDate;\n\n-- Step 2: Filter the desired records using the temporary table\nSELECT A.readings_miu_id, A.Reading, A.ReadDate, A.ReadTime, A.MIUwindow, A.SN, A.Noise, A.RSSI, \n       A.ColRSSI, A.MIURSSI, A.Firmware, A.CFGDate, A.FreqCorr, A.Active, A.MeterType, A.OriginCol, \n       A.ColID, A.Ownage, A.SiteID, A.PremID, A.prem_group1, A.prem_group2, A.ReadID\nINTO TempFiltered\nFROM analyzedCopy AS A\nINNER JOIN TempMaxReadTime AS T\nON A.readings_miu_id = T.readings_miu_id AND A.ReadDate = T.ReadDate AND A.ReadTime = T.MaxReadTime\nWHERE A.ReadDate BETWEEN #04/21/09# AND #04/29/09#;\n\n-- Step 3: Perform the aggregation to get the average RSSI\nSELECT readings_miu_id, "4/21/09 to 4/29/09" AS ReadDate, AVG(RSSI) AS AvgRSSI\nINTO TempAggregated\nFROM TempFiltered\nGROUP BY readings_miu_id;\n\n-- Step 4: Insert the final results into the analyzed table\nINSERT INTO analyzed (readings_miu_id, ReadDate, RSSI)\nSELECT readings_miu_id, ReadDate, AvgRSSI\nFROM TempAggregated;\n\n-- Clean up temporary tables\nDROP TABLE TempMaxReadTime;\nDROP TABLE TempFiltered;\nDROP TABLE TempAggregated;