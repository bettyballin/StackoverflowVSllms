-- Create the payload type\nCREATE OR REPLACE TYPE test_payload AS OBJECT (\n   test_id   NUMBER,\n   test_dt   DATE\n);\n\n-- Create queues and start them\nBEGIN\n   -- Create Originating Queue and start it\n   DBMS_AQADM.create_queue_table(\n      queue_table         => 'Test_MQT',\n      queue_payload_type  => 'Test_Payload',\n      multiple_consumers  => TRUE\n   );\n\n   DBMS_AQADM.create_queue(\n      queue_name  => 'Test_Q',\n      queue_table => 'Test_MQT'\n   );\n\n   DBMS_AQADM.start_queue(\n      queue_name => 'Test_Q'\n   );\n\n   -- Create Destination Queue and start it\n   DBMS_AQADM.create_queue_table(\n      queue_table         => 'Dest_MQT',\n      queue_payload_type  => 'Test_Payload',\n      multiple_consumers  => TRUE\n   );\n\n   DBMS_AQADM.create_queue(\n      queue_name  => 'Dest_Q',\n      queue_table => 'Dest_MQT'\n   );\n\n   DBMS_AQADM.start_queue(\n      queue_name => 'Dest_Q'\n   );\nEND;\n/\n\n-- Add Subscriber and schedule propagation\nBEGIN\n   DECLARE\n      subscriber SYS.aq$_agent;\n   BEGIN\n      subscriber := SYS.aq$_agent('test_local_sub', 'Dest_Q', NULL);\n\n      DBMS_AQADM.add_subscriber(\n         queue_name => 'Test_Q',\n         subscriber => subscriber\n      );\n\n      DBMS_AQADM.schedule_propagation(\n         queue_name        => 'Test_Q',\n         destination_queue => 'Dest_Q'\n      );\n   END;\nEND;\n/\n\n-- Enqueue a message to the originating queue\nBEGIN\n   DECLARE\n      enqueue_options      DBMS_AQ.enqueue_options_t;\n      message_properties   DBMS_AQ.message_properties_t;\n      message_handle       RAW(16);\n      MESSAGE              test_payload;\n   BEGIN\n      MESSAGE := test_payload(2, SYSDATE);\n\n      DBMS_AQ.enqueue(\n         queue_name         => 'Test_Q',\n         enqueue_options    => enqueue_options,\n         message_properties => message_properties,\n         payload            => MESSAGE,\n         msgid              => message_handle\n      );\n\n      COMMIT;\n   END;\nEND;\n/\n\n-- Dequeue a message from the destination queue\nBEGIN\n   DECLARE\n      dequeue_options      DBMS_AQ.dequeue_options_t;\n      message_properties   DBMS_AQ.message_properties_t;\n      message_handle       RAW(16);\n      MESSAGE              test_payload;\n   BEGIN\n      dequeue_options.wait := DBMS_AQ.NO_WAIT; -- Set to NO_WAIT for immediate dequeue\n      dequeue_options.navigation := DBMS_AQ.FIRST_MESSAGE;\n\n      DBMS_AQ.dequeue(\n         queue_name         => 'Dest_Q',\n         dequeue_options    => dequeue_options,\n         message_properties => message_properties,\n         payload            => MESSAGE,\n         msgid              => message_handle\n      );\n\n      DBMS_OUTPUT.put_line('Test_ID: ' || MESSAGE.test_id);\n      DBMS_OUTPUT.put_line('Test_Date: ' || MESSAGE.test_dt);\n\n      COMMIT;\n   END;\nEND;\n/