-- Step 1: Add new uniqueidentifier columns to your tables\nALTER TABLE YourPrimaryKeyTable ADD NewID UNIQUEIDENTIFIER DEFAULT NEWID();\nALTER TABLE YourForeignKeyTable ADD NewForeignKey UNIQUEIDENTIFIER;\n\n-- Step 2: Update the new uniqueidentifier columns with corresponding values\nUPDATE YourPrimaryKeyTable SET NewID = NEWID();\nUPDATE YourForeignKeyTable\nSET NewForeignKey = pk.NewID\nFROM YourForeignKeyTable fk\nJOIN YourPrimaryKeyTable pk ON fk.OldForeignKey = pk.OldPrimaryKey;\n\n-- Step 3: Drop the existing foreign key constraints\nALTER TABLE YourForeignKeyTable DROP CONSTRAINT FK_YourForeignKeyConstraint;\n\n-- Step 4: Drop the existing primary key constraints\nALTER TABLE YourPrimaryKeyTable DROP CONSTRAINT PK_YourPrimaryKeyConstraint;\n\n-- Step 5: Rename the new columns to replace the old columns\nEXEC sp_rename 'YourPrimaryKeyTable.NewID', 'NewPrimaryKey', 'COLUMN';\nEXEC sp_rename 'YourForeignKeyTable.NewForeignKey', 'NewForeignKey', 'COLUMN';\n\n-- Step 6: Add primary key constraints to the new uniqueidentifier columns\nALTER TABLE YourPrimaryKeyTable ADD CONSTRAINT PK_YourNewPrimaryKeyConstraint PRIMARY KEY (NewPrimaryKey);\n\n-- Step 7: Add foreign key constraints to the new uniqueidentifier columns\nALTER TABLE YourForeignKeyTable ADD CONSTRAINT FK_YourNewForeignKeyConstraint FOREIGN KEY (NewForeignKey) REFERENCES YourPrimaryKeyTable(NewPrimaryKey);\n\n-- Step 8: Drop the old columns if no longer needed\nALTER TABLE YourPrimaryKeyTable DROP COLUMN OldPrimaryKey;\nALTER TABLE YourForeignKeyTable DROP COLUMN OldForeignKey;