// Pseudocode for limiting login attempts\n\n// Database schema for storing login attempts\nCREATE TABLE login_attempts (\n    user_id INT,\n    attempt_time TIMESTAMP,\n    PRIMARY KEY (user_id, attempt_time)\n);\n\n// Function to check login attempts\nfunction canAttemptLogin(userId) {\n    // Fetch all attempts in the last 15 minutes\n    attempts = queryDatabase("SELECT COUNT(*) FROM login_attempts WHERE user_id = ? AND attempt_time > NOW() - INTERVAL '15 MINUTES'", userId);\n    \n    // Allow a maximum of 5 attempts\n    return attempts < 5;\n}\n\n// Function to record a login attempt\nfunction recordLoginAttempt(userId) {\n    // Insert a new login attempt\n    queryDatabase("INSERT INTO login_attempts (user_id, attempt_time) VALUES (?, NOW())", userId);\n}\n\n// Example login function\nfunction login(userId, password) {\n    if (!canAttemptLogin(userId)) {\n        return "Too many login attempts. Please try again later.";\n    }\n\n    // Verify user credentials (this is just an example)\n    if (verifyCredentials(userId, password)) {\n        // Clear previous login attempts on successful login\n        queryDatabase("DELETE FROM login_attempts WHERE user_id = ?", userId);\n        return "Login successful";\n    } else {\n        recordLoginAttempt(userId);\n        return "Invalid credentials";\n    }\n}