CREATE TABLE PARENT (\n    parent_id NUMBER PRIMARY KEY\n);\n\nCREATE TABLE CHILD (\n    child_id NUMBER PRIMARY KEY,\n    parent_id NUMBER,\n    CONSTRAINT fk_parent FOREIGN KEY (parent_id) REFERENCES PARENT(parent_id)\n);\n\n-- Trigger to enforce that each parent has exactly 3 children\nCREATE OR REPLACE TRIGGER enforce_child_count\nAFTER INSERT OR DELETE ON CHILD\nFOR EACH ROW\nDECLARE\n    child_count NUMBER;\nBEGIN\n    -- Get the child count for the parent\n    SELECT COUNT(*) INTO child_count FROM CHILD WHERE parent_id = :NEW.parent_id;\n\n    IF child_count > 3 THEN\n        RAISE_APPLICATION_ERROR(-20001, 'A parent can only have 3 children.');\n    END IF;\n\n    -- Check if the delete operation leaves less than 3 children\n    IF DELETING THEN\n        SELECT COUNT(*) INTO child_count FROM CHILD WHERE parent_id = :OLD.parent_id;\n        IF child_count < 3 THEN\n            RAISE_APPLICATION_ERROR(-20002, 'A parent must have exactly 3 children.');\n        END IF;\n    END IF;\nEND;\n/\n\n-- Additional trigger to ensure the parent has exactly 3 children at the time of insert\nCREATE OR REPLACE TRIGGER validate_parent_child_count\nBEFORE INSERT ON PARENT\nFOR EACH ROW\nDECLARE\n    child_count NUMBER;\nBEGIN\n    INSERT INTO CHILD (child_id, parent_id) VALUES (child_seq.NEXTVAL, :NEW.parent_id);\n    INSERT INTO CHILD (child_id, parent_id) VALUES (child_seq.NEXTVAL, :NEW.parent_id);\n    INSERT INTO CHILD (child_id, parent_id) VALUES (child_seq.NEXTVAL, :NEW.parent_id);\nEND;\n/\n\n-- Sequence for child IDs\nCREATE SEQUENCE child_seq START WITH 1 INCREMENT BY 1;