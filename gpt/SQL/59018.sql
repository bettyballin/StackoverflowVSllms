CREATE PROCEDURE GenerateTestData\n    @TableName NVARCHAR(128),\n    @RowCount INT = 10\nAS\nBEGIN\n    DECLARE @SQL NVARCHAR(MAX) = ''\n    DECLARE @ColumnName NVARCHAR(128)\n    DECLARE @DataType NVARCHAR(128)\n    DECLARE @IsNullable BIT\n    DECLARE @DefaultValue NVARCHAR(MAX)\n\n    -- Fetch column details\n    DECLARE @Columns TABLE (\n        ColumnName NVARCHAR(128),\n        DataType NVARCHAR(128),\n        IsNullable BIT,\n        DefaultValue NVARCHAR(MAX)\n    )\n\n    INSERT INTO @Columns (ColumnName, DataType, IsNullable, DefaultValue)\n    SELECT \n        c.name AS ColumnName,\n        t.name AS DataType,\n        c.is_nullable AS IsNullable,\n        default_constraints.definition AS DefaultValue\n    FROM \n        sys.columns c\n    JOIN \n        sys.types t ON c.user_type_id = t.user_type_id\n    LEFT JOIN \n        sys.default_constraints ON c.object_id = default_constraints.parent_object_id AND c.column_id = default_constraints.parent_column_id\n    WHERE \n        c.object_id = OBJECT_ID(@TableName)\n\n    -- Generate INSERT statement\n    SET @SQL = 'INSERT INTO ' + @TableName + ' ('\n    SELECT @SQL = @SQL + ColumnName + ', ' FROM @Columns FOR XML PATH('')\n    SET @SQL = LEFT(@SQL, LEN(@SQL) - 1) + ') VALUES '\n\n    DECLARE @i INT = 0\n    WHILE @i < @RowCount\n    BEGIN\n        SET @SQL = @SQL + '('\n        DECLARE cur CURSOR FOR SELECT ColumnName, DataType, IsNullable, DefaultValue FROM @Columns\n        OPEN cur\n        FETCH NEXT FROM cur INTO @ColumnName, @DataType, @IsNullable, @DefaultValue\n        WHILE @@FETCH_STATUS = 0\n        BEGIN\n            SET @SQL = @SQL + CASE \n                WHEN @DataType LIKE '%char%' THEN '''TestData'''\n                WHEN @DataType LIKE '%int%' THEN 'RAND()*100'\n                WHEN @DataType LIKE '%datetime%' THEN 'GETDATE()'\n                WHEN @DataType LIKE '%bit%' THEN '1'\n                ELSE 'NULL'\n            END + ', '\n            FETCH NEXT FROM cur INTO @ColumnName, @DataType, @IsNullable, @DefaultValue\n        END\n        CLOSE cur\n        DEALLOCATE cur\n        SET @SQL = LEFT(@SQL, LEN(@SQL) - 1) + '), '\n        SET @i = @i + 1\n    END\n\n    SET @SQL = LEFT(@SQL, LEN(@SQL) - 2)\n    \n    -- Execute the dynamic SQL\n    EXEC sp_executesql @SQL\nEND\nGO