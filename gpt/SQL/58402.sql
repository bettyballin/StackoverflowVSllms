SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nALTER TRIGGER [dandb_raw_searchNames]\n    ON [dandb_raw]\n    FOR INSERT, UPDATE\n    AS\n\nSET NOCOUNT ON\n\n-- Explicitly define the temporary table\nIF OBJECT_ID('tempdb..#magic') IS NOT NULL DROP TABLE #magic;\nCREATE TABLE #magic (\n    dunsId INT,\n    name VARCHAR(255)\n);\n\nINSERT INTO #magic (dunsId, name)\nSELECT dunsId, name FROM inserted;\n\nUPDATE dandb\nSET dandb.searchName = company_generateSearchName(dandb.name)\nFROM (SELECT dunsId, name FROM #magic) i\nINNER JOIN dandb_raw dandb\n    ON i.dunsId = dandb.dunsId;\n\n-- Explicitly define the second temporary table\nIF OBJECT_ID('tempdb..#newMatches') IS NOT NULL DROP TABLE #newMatches;\nCREATE TABLE #newMatches (\n    companyId INT,\n    dunsId INT\n);\n\n-- Add new search matches\nINSERT INTO #newMatches (companyId, dunsId)\nSELECT c.companyId, dandb.dunsId\nFROM dandb_raw dandb\nINNER JOIN (SELECT dunsId, name FROM #magic) a\n    ON a.dunsId = dandb.dunsId\nINNER JOIN companies c\n    ON dandb.searchName = c.searchBrand\n    AND (LOWER(dandb.url) = LOWER(c.url)\n        OR dandb.url = ''\n        OR c.url = ''\n        OR c.url IS NULL);\n\nINSERT INTO #newMatches (companyId, dunsId)\nSELECT c.companyId, MAX(dandb.dunsId) AS dunsId\nFROM dandb_raw dandb\nINNER JOIN (\n    SELECT\n    CASE WHEN CHARINDEX('/',url) <> 0 THEN LEFT(url, CHARINDEX('/',url)-1)\n    ELSE url\n    END AS urlMatch, * FROM companies\n) c\nON dandb.url = c.urlMatch\nWHERE subsidiaryOf = 1 AND isReported = 1 AND dandb.url <> ''\n    AND c.companyId NOT IN (SELECT companyId FROM #newMatches)\nGROUP BY companyId\nHAVING COUNT(dandb.dunsId) = 1;\n\nUPDATE cd\nSET cd.dunsId = nm.dunsId\nFROM companies_dandb cd\nINNER JOIN #newMatches nm\n    ON cd.companyId = nm.companyId;\n\nGO