CREATE TABLE your_table_history (\n       id SERIAL PRIMARY KEY,\n       your_table_id INTEGER NOT NULL,\n       valid_from TIMESTAMP NOT NULL,\n       valid_to TIMESTAMP,\n       data JSONB,\n       modified_by TEXT,\n       FOREIGN KEY (your_table_id) REFERENCES your_table(id)\n   );\n\n   CREATE OR REPLACE FUNCTION update_history() RETURNS TRIGGER AS $$\n   BEGIN\n       -- Closing the previous version\n       UPDATE your_table_history\n       SET valid_to = CURRENT_TIMESTAMP\n       WHERE your_table_id = OLD.id AND valid_to IS NULL;\n\n       -- Inserting the new version\n       INSERT INTO your_table_history (your_table_id, valid_from, data, modified_by)\n       VALUES (NEW.id, CURRENT_TIMESTAMP, row_to_json(NEW), current_user);\n       RETURN NEW;\n   END;\n   $$ LANGUAGE plpgsql;\n\n   CREATE TRIGGER history_trigger\n   AFTER UPDATE ON your_table\n   FOR EACH ROW EXECUTE FUNCTION update_history();