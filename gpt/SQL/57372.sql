-- Step 1: Create a temporary table for storing the cursor output\nCREATE GLOBAL TEMPORARY TABLE TEMP_USER_ALLOCATION (\n    START_TIME DATE NOT NULL,\n    STOP_TIME DATE,\n    TASK_ID NUMBER,\n    USER_ID NUMBER\n) ON COMMIT DELETE ROWS;\n\n-- Step 2: Fetch the cursor output into the temporary table\nDECLARE\n    from_dt DATE := TO_DATE('2023-01-01', 'YYYY-MM-DD');\n    to_dt DATE := TO_DATE('2023-12-31', 'YYYY-MM-DD');\n    sysur_key NUMBER := 123; -- Replace with actual user key\n    v_reservations INTRANET_PKG.CURSOR_TYPE;\nBEGIN\n    -- Call the stored procedure\n    REPORT_PLAN_AV_USER(from_dt, to_dt, sysur_key, v_reservations);\n\n    -- Fetch the cursor output into the temporary table\n    INSERT INTO TEMP_USER_ALLOCATION (START_TIME, STOP_TIME, TASK_ID, USER_ID)\n    LOOP\n        FETCH v_reservations INTO TEMP_USER_ALLOCATION%ROWTYPE;\n        EXIT WHEN v_reservations%NOTFOUND;\n        INSERT INTO TEMP_USER_ALLOCATION VALUES (START_TIME, STOP_TIME, TASK_ID, USER_ID);\n    END LOOP;\n\n    -- Close the cursor\n    CLOSE v_reservations;\nEND;\n/\n\n-- Step 3: Use the MERGE statement to merge data from the temporary table into the USER_ALLOCATION table\nMERGE INTO USER_ALLOCATION ua\nUSING TEMP_USER_ALLOCATION tua\nON (ua.START_TIME = tua.START_TIME AND ua.USER_ID = tua.USER_ID)\nWHEN MATCHED THEN\n    UPDATE SET ua.TASK_ID = tua.TASK_ID\nWHEN NOT MATCHED THEN\n    INSERT (START_TIME, USER_ID, TASK_ID)\n    VALUES (tua.START_TIME, tua.USER_ID, tua.TASK_ID);\n\n-- Clean up the temporary table\nTRUNCATE TABLE TEMP_USER_ALLOCATION;