-- Step 1: Create the parent table\nCREATE TABLE parent_table (\n    id SERIAL,\n    value TEXT\n);\n\n-- Step 2: Create child tables with unique constraints\nCREATE TABLE child_table1 (\n    CHECK (id < 1000)\n) INHERITS (parent_table);\n\nCREATE UNIQUE INDEX child_table1_id_uniq ON child_table1(id);\n\nCREATE TABLE child_table2 (\n    CHECK (id >= 1000 AND id < 2000)\n) INHERITS (parent_table);\n\nCREATE UNIQUE INDEX child_table2_id_uniq ON child_table2(id);\n\n-- Step 3: Create a function to enforce global uniqueness\nCREATE OR REPLACE FUNCTION enforce_global_uniqueness() RETURNS TRIGGER AS $$\nBEGIN\n    IF EXISTS (\n        SELECT 1 FROM parent_table WHERE id = NEW.id\n    ) THEN\n        RAISE EXCEPTION 'Duplicate id found: %', NEW.id;\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Step 4: Attach the trigger to the parent table\nCREATE TRIGGER global_unique_trigger\nBEFORE INSERT ON parent_table\nFOR EACH ROW EXECUTE FUNCTION enforce_global_uniqueness();