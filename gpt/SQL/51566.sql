CREATE PROCEDURE ApplyPayments\n    @CustomerId VARCHAR(8),\n    @PaymentAmount DECIMAL(9, 2)\nAS\nBEGIN\n    DECLARE @RemainingPayment DECIMAL(9, 2)\n    SET @RemainingPayment = @PaymentAmount\n\n    -- Create a temporary table to store the sorted invoices\n    CREATE TABLE #TempOpenItems (\n        id VARCHAR(8),\n        type CHAR(5),\n        date SMALLDATETIME,\n        amount DECIMAL(9, 2),\n        daysOpen SMALLINT,\n        balance DECIMAL(9, 2),\n        rowNum INT IDENTITY(1, 1) PRIMARY KEY\n    )\n\n    -- Insert the customer's open invoices sorted by daysOpen\n    INSERT INTO #TempOpenItems (id, type, date, amount, daysOpen, balance)\n    SELECT id, type, date, amount, daysOpen, balance\n    FROM openitems\n    WHERE id = @CustomerId\n    ORDER BY daysOpen DESC\n\n    DECLARE @CurrentRow INT\n    DECLARE @MaxRow INT\n    DECLARE @CurrentBalance DECIMAL(9, 2)\n\n    SELECT @MaxRow = COUNT(*) FROM #TempOpenItems\n\n    SET @CurrentRow = 1\n\n    WHILE @CurrentRow <= @MaxRow AND @RemainingPayment > 0\n    BEGIN\n        SELECT @CurrentBalance = balance\n        FROM #TempOpenItems\n        WHERE rowNum = @CurrentRow\n\n        IF @RemainingPayment >= @CurrentBalance\n        BEGIN\n            SET @RemainingPayment = @RemainingPayment - @CurrentBalance\n            UPDATE #TempOpenItems\n            SET balance = 0\n            WHERE rowNum = @CurrentRow\n        END\n        ELSE\n        BEGIN\n            UPDATE #TempOpenItems\n            SET balance = balance - @RemainingPayment\n            WHERE rowNum = @CurrentRow\n            SET @RemainingPayment = 0\n        END\n\n        SET @CurrentRow = @CurrentRow + 1\n    END\n\n    -- Update the original table with the new balances\n    UPDATE o\n    SET o.balance = t.balance\n    FROM openitems o\n    JOIN #TempOpenItems t\n    ON o.id = t.id AND o.date = t.date\n\n    -- Drop the temporary table\n    DROP TABLE #TempOpenItems\nEND