-- Users table\nCREATE TABLE Users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    password_digest VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Roles table\nCREATE TABLE Roles (\n    id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    description VARCHAR(255),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- Permissions table\nCREATE TABLE Permissions (\n    id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    description VARCHAR(255),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n);\n\n-- UserRoles join table\nCREATE TABLE UserRoles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,\n    FOREIGN KEY (role_id) REFERENCES Roles(id) ON DELETE CASCADE\n);\n\n-- RolePermissions join table\nCREATE TABLE RolePermissions (\n    role_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES Roles(id) ON DELETE CASCADE,\n    FOREIGN KEY (permission_id) REFERENCES Permissions(id) ON DELETE CASCADE\n);