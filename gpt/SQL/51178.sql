WITH EventTimes AS (\n    SELECT\n        id,\n        event,\n        date,\n        LEAD(date) OVER (PARTITION BY id ORDER BY date) AS next_date\n    FROM event_table\n),\nServiceDurations AS (\n    SELECT\n        id,\n        SUM(\n            CASE \n                WHEN event = 'Service Delayed' THEN 0\n                WHEN event = 'Service Reactivated' THEN -DATEDIFF(SECOND, date, next_date)\n                ELSE DATEDIFF(SECOND, date, next_date)\n            END\n        ) AS total_duration_seconds\n    FROM EventTimes\n    WHERE event != 'Service Fulfilled'\n    GROUP BY id\n),\nFinalDurations AS (\n    SELECT\n        et.id,\n        DATEDIFF(SECOND, MIN(et.date), MAX(et.date)) - sd.total_duration_seconds AS total_time_spent_seconds\n    FROM event_table et\n    JOIN ServiceDurations sd ON et.id = sd.id\n    WHERE et.event IN ('Service Request', 'Service Fulfilled')\n    GROUP BY et.id, sd.total_duration_seconds\n)\nSELECT\n    id,\n    CONCAT(total_time_spent_seconds / 60, ' minutes') AS time\nFROM FinalDurations;