CREATE OR REPLACE PACKAGE A AS\n    PROCEDURE call_b;\nEND A;\n/\n\nCREATE OR REPLACE PACKAGE BODY A AS\n    PROCEDURE call_b IS\n    BEGIN\n        B.procedure_in_b;\n    END call_b;\nEND A;\n/\n\nCREATE OR REPLACE PACKAGE B AS\n    PROCEDURE procedure_in_b;\nEND B;\n/\n\nCREATE OR REPLACE PACKAGE BODY B AS\n    PROCEDURE procedure_in_b IS\n        l_call_stack VARCHAR2(4000);\n    BEGIN\n        l_call_stack := DBMS_UTILITY.FORMAT_CALL_STACK;\n        DBMS_OUTPUT.PUT_LINE('Call stack: ' || l_call_stack);\n\n        -- Here you can add logic to parse the call stack and determine the calling package\n        IF l_call_stack LIKE '%A%' THEN\n            DBMS_OUTPUT.PUT_LINE('Called from package A');\n        ELSE\n            DBMS_OUTPUT.PUT_LINE('Caller not identified as package A');\n        END IF;\n    END procedure_in_b;\nEND B;\n/\n\n-- To test the implementation\nBEGIN\n    A.call_b;\nEND;\n/