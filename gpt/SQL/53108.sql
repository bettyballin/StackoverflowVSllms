WITH RECURSIVE NodePaths AS (\n    -- Base case: start with the given nodes\n    SELECT Id AS NodeId, ParentId, Id AS Ancestor\n    FROM Employees\n    WHERE Id IN (/* List of node IDs */)\n    \n    UNION ALL\n    \n    -- Recursive case: traverse up the tree\n    SELECT np.NodeId, e.ParentId, e.Id AS Ancestor\n    FROM NodePaths np\n    JOIN Employees e ON np.ParentId = e.Id\n),\nAncestorCounts AS (\n    -- Count the occurrences of each ancestor across all paths\n    SELECT Ancestor, COUNT(DISTINCT NodeId) AS Count\n    FROM NodePaths\n    GROUP BY Ancestor\n)\n-- Select the ancestor that appears in paths of all given nodes\nSELECT Ancestor\nFROM AncestorCounts\nWHERE Count = (SELECT COUNT(DISTINCT Id) FROM Employees WHERE Id IN (/* List of node IDs */))\nORDER BY Ancestor\nLIMIT 1;