-- Users Table\nCREATE TABLE Users (\n    UserID INT PRIMARY KEY,\n    UserName VARCHAR(50) NOT NULL\n);\n\n-- Roles Table\nCREATE TABLE Roles (\n    RoleID INT PRIMARY KEY,\n    RoleName VARCHAR(50) NOT NULL\n);\n\n-- Permissions Table\nCREATE TABLE Permissions (\n    PermissionID INT PRIMARY KEY,\n    PermissionName VARCHAR(50) NOT NULL\n);\n\n-- UserRoles Table (Many-to-Many relationship between Users and Roles)\nCREATE TABLE UserRoles (\n    UserID INT,\n    RoleID INT,\n    PRIMARY KEY (UserID, RoleID),\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)\n);\n\n-- RolePermissions Table (Many-to-Many relationship between Roles and Permissions)\nCREATE TABLE RolePermissions (\n    RoleID INT,\n    PermissionID INT,\n    PRIMARY KEY (RoleID, PermissionID),\n    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID),\n    FOREIGN KEY (PermissionID) REFERENCES Permissions(PermissionID)\n);\n\n-- UserPermissions Table (Optional: Direct User to Permission mapping for exceptions)\nCREATE TABLE UserPermissions (\n    UserID INT,\n    PermissionID INT,\n    PRIMARY KEY (UserID, PermissionID),\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (PermissionID) REFERENCES Permissions(PermissionID)\n);