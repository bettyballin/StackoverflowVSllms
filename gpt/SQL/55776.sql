-- Create the spool table\nCREATE TABLE spool (\n    key BIGINT,\n    txt TEXT,\n    seq BIGSERIAL\n);\n\n-- Create a sequence for generating keys\nCREATE SEQUENCE key_seq;\n\n-- Function to start spooling\nCREATE OR REPLACE FUNCTION begin_spool()\nRETURNS BIGINT AS $$\nDECLARE\n    spool_key BIGINT;\nBEGIN\n    SELECT nextval('key_seq') INTO spool_key;\n    RETURN spool_key;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function to insert into spool\nCREATE OR REPLACE FUNCTION into_spool(spool_key BIGINT, in_txt TEXT)\nRETURNS VOID AS $$\nBEGIN\n    INSERT INTO spool (key, txt, seq) VALUES (spool_key, in_txt, nextval('spool_seq'));\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function to reset spooling\nCREATE OR REPLACE FUNCTION reset_spool(spool_key BIGINT)\nRETURNS BIGINT AS $$\nBEGIN\n    DELETE FROM spool WHERE key = spool_key;\n    SELECT begin_spool() INTO spool_key;\n    RETURN spool_key;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function to end spooling and return a refcursor\nCREATE OR REPLACE FUNCTION end_spool(spool_key BIGINT)\nRETURNS refcursor AS $$\nDECLARE\n    v_spool refcursor;\nBEGIN\n    OPEN v_spool FOR SELECT * FROM spool WHERE key = spool_key ORDER BY seq;\n    RETURN v_spool;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Function to get the current timestamp\nCREATE OR REPLACE FUNCTION get_timestamp()\nRETURNS VARCHAR AS $$\nDECLARE\n    v_result VARCHAR(14);\nBEGIN\n    SELECT TO_CHAR(NOW(), 'YYYYMMDDHH24MISS') INTO v_result;\n    RETURN v_result;\nEND;\n$$ LANGUAGE plpgsql;