USE [msdb]\nGO\n\n-- Drop the existing job if it exists\nIF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = N'TestJob')\nBEGIN\n    DECLARE @job_id UNIQUEIDENTIFIER\n    SELECT @job_id = job_id FROM msdb.dbo.sysjobs_view WHERE name = N'TestJob'\n    EXEC msdb.dbo.sp_delete_job @job_id=@job_id, @delete_unused_schedule=1\nEND\nGO\n\n-- Create the new job\nBEGIN TRANSACTION\nDECLARE @ReturnCode INT\nSELECT @ReturnCode = 0\n\n-- Add job category if not exists\nIF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)\nBEGIN\n    EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'\n    IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback\nEND\n\n-- Add the job\nDECLARE @jobId UNIQUEIDENTIFIER\nEXEC @ReturnCode = msdb.dbo.sp_add_job @job_name=N'TestJob', \n    @enabled=1, \n    @notify_level_eventlog=3, \n    @notify_level_email=0, \n    @notify_level_netsend=0, \n    @notify_level_page=0, \n    @delete_level=0, \n    @description=N'No description available.', \n    @category_name=N'[Uncategorized (Local)]', \n    @owner_login_name=N'sa', \n    @job_id = @jobId OUTPUT\nIF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback\n\n-- Add job steps, schedules, etc. here\n\nCOMMIT TRANSACTION\nRETURN\n\nQuitWithRollback:\n    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION\nRETURN\nGO