CREATE TRIGGER trg_Audit_YourTable\nON YourTable\nFOR INSERT, UPDATE, DELETE\nAS\nBEGIN\n    DECLARE @RecordID INT, @User NVARCHAR(255);\n    -- You may want to get the current user from the context\n    SET @User = SYSTEM_USER;\n\n    -- Handle updated records\n    IF EXISTS(SELECT * FROM INSERTED)\n    BEGIN\n        SELECT @RecordID = ID FROM INSERTED;\n        INSERT INTO AuditTrail (TableName, RecordID, FieldName, OldValue, NewValue, ModifiedBy)\n        SELECT \n            'YourTable',\n            d.ID,\n            c.name,\n            CONVERT(NVARCHAR(MAX), d.[value]),\n            CONVERT(NVARCHAR(MAX), i.[value]),\n            @User\n        FROM \n            (SELECT * FROM INSERTED) i\n        CROSS APPLY \n            (SELECT * FROM DELETED WHERE DELETED.ID = i.ID) d\n        CROSS APPLY \n            (SELECT c.name, c.column_id FROM sys.columns c WHERE c.object_id = OBJECT_ID('YourTable')) c\n        WHERE \n            i.[value] <> d.[value] AND\n            c.name = COLUMN_NAME(i);\n    END\n    -- Handle deleted records\n    IF EXISTS(SELECT * FROM DELETED)\n    BEGIN\n        SELECT @RecordID = ID FROM DELETED;\n        INSERT INTO AuditTrail (TableName, RecordID, FieldName, OldValue, NewValue, ModifiedBy)\n        SELECT \n            'YourTable',\n            d.ID,\n            c.name,\n            CONVERT(NVARCHAR(MAX), d.[value]),\n            NULL,\n            @User\n        FROM \n            (SELECT * FROM DELETED) d\n        CROSS APPLY \n            (SELECT c.name, c.column_id FROM sys.columns c WHERE c.object_id = OBJECT_ID('YourTable')) c;\n    END\nEND;