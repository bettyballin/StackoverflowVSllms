CREATE FUNCTION fGetTransactionStatusLog\n(\n    @TransactionID  int\n)\nRETURNS varchar(8000) \nAS  \nBEGIN \n    DECLARE StatusChanges CURSOR FOR\n    SELECT  \n        NewStatusID, \n        ISNULL(FirstName, '') + ' ' + ISNULL(LastName, '') AS UserName, \n        Stamp, \n        CAST(Notes AS varchar(8000)) AS Notes\n    FROM \n        TransactionStatusChanges tsc\n        LEFT JOIN Users us ON tsc.UserID = us.UserID\n    WHERE \n        TransactionID = @TransactionID \n    ORDER BY \n        StatusNum\n\n    DECLARE @output varchar(8000)\n    DECLARE @NewStatusID char(2)\n    DECLARE @UserName varchar(255)\n    DECLARE @Stamp datetime\n    DECLARE @Notes varchar(8000)\n\n    SET @output = ''\n\n    OPEN StatusChanges\n    FETCH NEXT FROM StatusChanges INTO @NewStatusID, @UserName, @Stamp, @Notes\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        SET @output = @output + RTRIM(CAST(@Stamp AS varchar(30))) + ': ' + ISNULL(@NewStatusID, '') + ' by ' + ISNULL(@UserName, '') + CHAR(13) + CHAR(10)\n\n        IF @Notes IS NOT NULL\n        BEGIN\n            SET @output = @output + '---' + @Notes + CHAR(13) + CHAR(10)\n        END\n\n        FETCH NEXT FROM StatusChanges INTO @NewStatusID, @UserName, @Stamp, @Notes\n    END\n    CLOSE StatusChanges\n    DEALLOCATE StatusChanges\n\n    RETURN @output\nEND