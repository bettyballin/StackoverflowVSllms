USE [Connect]\nGO\n/****** Object:  StoredProcedure [dbo].[spPersonRelationshipAddOpposing]    Script Date: 07/15/2009 08:14:35 ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nALTER PROCEDURE [dbo].[spPersonRelationshipAddOpposing]\n@ExistingRelationshipID INT \nAS\nBEGIN\n    --Declare local variables\n    DECLARE @PersonID INT  --PersonID of established relationship\n    DECLARE @RelatedID INT  --RelatedID of established relationship\n    DECLARE @Relationship VARCHAR(4)  --Established relationship\n    DECLARE @RelatedSex as VARCHAR(1)  \n    DECLARE @OpposingRelationship VARCHAR(4)\n    DECLARE @OpposingRelationshipID INT\n\n    --Fill variables from existing relationship\n    SELECT @PersonID = PersonID, @RelatedID = RelatedID, @Relationship=PersonRelationshipTypeID\n    FROM tblPersonRelationship where PersonRelationshipID = @ExistingRelationshipID\n\n    --Get gender of relative for finding opposing relationship type\n    SELECT @RelatedSex = (SELECT Gender FROM tblPerson WHERE PersonID = @PersonID)\n\n    --get opposing relationship types\n    IF (@RelatedSex='M')\n    BEGIN\n        SELECT @OpposingRelationship = (SELECT OpposingMaleRelationship \n                                        From tblAdminPersonRelationshipType \n                                        WHERE PersonRelationshipTypeID = @Relationship)\n    END\n    ELSE IF (@RelatedSex='F')\n    BEGIN\n        SELECT @OpposingRelationship = (SELECT OpposingFemaleRelationship \n                                        From tblAdminPersonRelationshipType \n                                        WHERE PersonRelationshipTypeID = @Relationship)\n    END\n\n    --check for existing opposing relationship\n    SELECT @OpposingRelationshipID = (SELECT MAX(PersonRelationshipID) FROM tblPersonRelationship WHERE PersonID = @RelatedID AND RelatedID = @PersonID)\n\n    --if an opposing relationship was found\n    IF (@OpposingRelationship IS NOT NULL)\n    BEGIN\n        --if there is a relationship, update it\n        IF ISNUMERIC(@OpposingRelationshipID)=1 \n        BEGIN\n            UPDATE tblPersonRelationship\n            SET PersonRelationshipTypeID = @OpposingRelationship,\n                MarriageDate = (SELECT MarriageDate FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID),\n                ResidesWithPersonFlag = (SELECT ResidesWithPersonFlag FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID),\n                UpdateDateTime = (SELECT UpdateDateTime FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID),\n                UpdateProgram = (SELECT UpdateProgram FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID),\n                UpdateUserID = (SELECT UpdateUserID FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID) \n            WHERE PersonRelationshipID = @OpposingRelationshipID\n        END\n        --otherwise add record\n        ELSE IF (@OpposingRelationship IS NOT NULL)\n        BEGIN\n            INSERT INTO tblPersonRelationship (PersonID, PersonRelationshipTypeID, RelatedID, MarriageDate, DivorceDate, SeparationDate, ResidesWithPersonFlag, rowguid, CreateDateTime, CreateProgram, CreateUserID, UpdateDateTime, UpdateProgram, UpdateUserID)\n                SELECT @RelatedID, @OpposingRelationship, @PersonID,\n                       MarriageDate, NULL, NULL, \n                       ResidesWithPersonFlag, NEWID(), UpdateDateTime, UpdateProgram,\n                       UpdateUserID, UpdateDateTime, UpdateProgram, \n                       UpdateUserID FROM tblPersonRelationship WHERE PersonRelationshipID = @ExistingRelationshipID\n        END\n    END\nEND