-- Create a table to store the checksums\nCREATE TABLE ProcedureChecksums (\n    ProcedureName NVARCHAR(128),\n    ChecksumValue VARBINARY(64)\n);\n\n-- Function to calculate the checksum of a stored procedure\nCREATE FUNCTION CalculateProcedureChecksum(@ProcedureName NVARCHAR(128))\nRETURNS VARBINARY(64)\nAS\nBEGIN\n    DECLARE @ProcedureText NVARCHAR(MAX);\n    SELECT @ProcedureText = OBJECT_DEFINITION(OBJECT_ID(@ProcedureName));\n    RETURN HASHBYTES('SHA2_256', @ProcedureText);\nEND;\n\n-- Procedure to verify the checksums\nCREATE PROCEDURE VerifyChecksums\nAS\nBEGIN\n    DECLARE @ProcedureName NVARCHAR(128);\n    DECLARE @StoredChecksum VARBINARY(64);\n    DECLARE @CurrentChecksum VARBINARY(64);\n\n    DECLARE checksum_cursor CURSOR FOR\n    SELECT ProcedureName, ChecksumValue FROM ProcedureChecksums;\n\n    OPEN checksum_cursor;\n    FETCH NEXT FROM checksum_cursor INTO @ProcedureName, @StoredChecksum;\n\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        SET @CurrentChecksum = dbo.CalculateProcedureChecksum(@ProcedureName);\n        IF @StoredChecksum <> @CurrentChecksum\n        BEGIN\n            RAISERROR('Stored procedure %s has been modified.', 16, 1, @ProcedureName);\n        END\n        FETCH NEXT FROM checksum_cursor INTO @ProcedureName, @StoredChecksum;\n    END\n\n    CLOSE checksum_cursor;\n    DEALLOCATE checksum_cursor;\nEND;