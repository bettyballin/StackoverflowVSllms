SELECT \n    a.user_id AS 'User ID',\n    a.project_id AS 'Remix Project Id',\n    prjs.based_on_pid AS 'Original Project ID',\n    (CASE WHEN f.reasons IS NULL THEN 'N' ELSE 'Y' END) AS 'Flagged Y or N',\n    f.reasons,\n    f.timestamp,\n    MIN(a.timestamp) AS 'Oldest Timestamp'\nFROM \n    view_stats a\nJOIN \n    (SELECT id, based_on_pid, user_id FROM projects p) prjs \n    ON (a.project_id = prjs.id)\nLEFT OUTER JOIN \n    flaggers f \n    ON (f.project_id = a.project_id AND f.user_id = a.user_id)\nWHERE \n    a.project_id IN \n    (\n        SELECT DISTINCT b.id\n        FROM projects b\n        WHERE b.based_on_pid IN \n        (\n            SELECT DISTINCT c.id\n            FROM projects c\n            WHERE c.user_id = a.user_id\n        )\n    )\nGROUP BY \n    a.user_id, a.project_id, prjs.based_on_pid, f.reasons, f.timestamp\nORDER BY \n    f.reasons DESC, a.user_id, a.project_id;