-- Create a temporary table to hold the parsed XML data\nCREATE TABLE #ParsedXML\n(\n    ID INT,\n    ObjectID INT\n)\n\n-- Declare variables for the XML handling\nDECLARE @iDoc INT\nDECLARE @XML VARCHAR(MAX)\n\n-- Cursor to iterate through each row in the main table\nDECLARE xml_cursor CURSOR FOR\nSELECT ID, XML\nFROM YourTable\n\nOPEN xml_cursor\nFETCH NEXT FROM xml_cursor INTO @ID, @XML\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    -- Prepare the XML document\n    EXEC sp_xml_preparedocument @iDoc OUTPUT, @XML\n\n    -- Insert the parsed data into the temporary table\n    INSERT INTO #ParsedXML (ID, ObjectID)\n    SELECT @ID, ObjectID\n    FROM OPENXML(@iDoc, '/Form/object', 1)\n    WITH (ObjectID INT '@ID')\n\n    -- Remove the XML document from memory\n    EXEC sp_xml_removedocument @iDoc\n\n    FETCH NEXT FROM xml_cursor INTO @ID, @XML\nEND\n\nCLOSE xml_cursor\nDEALLOCATE xml_cursor\n\n-- Select rows where the IDs do not match\nSELECT p.ID, yt.XML\nFROM #ParsedXML p\nJOIN YourTable yt ON p.ID = yt.ID\nWHERE p.ID <> p.ObjectID\n\n-- Clean up the temporary table\nDROP TABLE #ParsedXML