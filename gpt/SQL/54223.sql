WITH NumberSeries AS (\n    SELECT 0 AS n\n    UNION ALL\n    SELECT n + 1 \n    FROM NumberSeries\n    WHERE n < 100 -- adjust this number based on the maximum number of payments expected\n),\nPaymentSchedule AS (\n    SELECT \n        s.SchedID,\n        n.n + 1 AS PaymentNum,\n        DATEADD(MONTH, n.n * s.Frequency, s.StartDate) AS DueDate,\n        (n.n + 1) * s.PaymentAmt AS RunningExpectedTotal\n    FROM \n        ScheduleTable s\n    CROSS JOIN \n        NumberSeries n\n    WHERE \n        n.n < (s.Term / s.Frequency)\n)\nSELECT \n    SchedID,\n    PaymentNum,\n    DueDate,\n    RunningExpectedTotal\nFROM \n    PaymentSchedule\nORDER BY \n    SchedID, \n    PaymentNum\nOPTION (MAXRECURSION 0);