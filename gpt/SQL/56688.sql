-- Create a temporary table to log errors\nCREATE TABLE #ErrorLog (\n    ErrorMessage NVARCHAR(4000),\n    ErrorProcedure NVARCHAR(128),\n    ErrorLine INT,\n    LoanID INT,\n    ErrorDateTime DATETIME\n);\n\nBEGIN TRY\n    -- First Update\n    UPDATE #table \n    SET currWorker = tblUser.UserLogonName\n    FROM tblUser\n    JOIN tblLoanInvolvement ON tblLoanInvolvement.invlUnderwriterDeptID = tblUser.userID \n    WHERE tblLoanInvolvement.LOANid = #table.loanid\n    AND #table.currstatus IN ('R_UW_Approved', 'R_Submitted to Underwriting');\n    \n    -- Second Update\n    UPDATE #table \n    SET currWorker = tblUser.UserLogonName\n    FROM tblUser\n    JOIN tblLoanInvolvement ON tblLoanInvolvement.invlProcessorID = tblUser.userID \n    WHERE tblLoanInvolvement.LOANid = #table.loanid\n    AND #table.currstatus IN ('R_UW Approved With Conditions', 'R_Loan Resubmitted', 'R_UW_Suspended', 'R_Submitted to Processing');\n    \n    -- Third Update\n    UPDATE #table \n    SET currWorker = tblUser.UserLogonName\n    FROM tblUser\n    JOIN tblLoanInvolvement ON tblLoanInvolvement.invlCloserID = tblUser.userID \n    WHERE tblLoanInvolvement.LOANid = #table.loanid\n    AND #table.currstatus IN ('R_Docs Out', 'R_Ready to Close', 'R_Scheduled to Close and Fund', 'Scheduled To Close');\n    \nEND TRY\nBEGIN CATCH\n    -- Insert error details into #ErrorLog\n    INSERT INTO #ErrorLog (ErrorMessage, ErrorProcedure, ErrorLine, LoanID, ErrorDateTime)\n    VALUES (\n        ERROR_MESSAGE(),\n        ERROR_PROCEDURE(),\n        ERROR_LINE(),\n        (SELECT #table.loanid FROM #table WHERE currWorker IS NULL), -- Assuming currWorker will be NULL if update fails\n        GETDATE()\n    );\nEND CATCH;\n\n-- Select from ErrorLog to see the captured errors\nSELECT * FROM #ErrorLog;\n\n-- Drop the error log table\nDROP TABLE #ErrorLog;