-- Example script to manage partitions in SSAS cube\n-- Assumes partitions are named in the format "Partition_YYYYMM"\n\n-- Define variables\nDECLARE @currentDate DATE = GETDATE();\nDECLARE @cutoffDate DATE = DATEADD(MONTH, -2, @currentDate);\nDECLARE @partitionName NVARCHAR(50);\nDECLARE @partitionDate DATE;\n\n-- Loop through existing partitions and remove those older than 2 months\nDECLARE partition_cursor CURSOR FOR\nSELECT PartitionName\nFROM [$System].[DISCOVER_PARTITION_STAT]\nWHERE DatabaseName = 'YourCubeDatabase'\n  AND CubeName = 'YourCubeName'\n  AND MeasureGroupName = 'YourMeasureGroupName';\n\nOPEN partition_cursor;\nFETCH NEXT FROM partition_cursor INTO @partitionName;\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    -- Extract date from partition name\n    SET @partitionDate = CAST(SUBSTRING(@partitionName, 11, 6) + '01' AS DATE);\n\n    -- Drop partition if it is older than cutoff date\n    IF @partitionDate < @cutoffDate\n    BEGIN\n        EXEC ('ALTER PARTITION [' + @partitionName + '] OF MEASURE GROUP [YourMeasureGroupName] DROP');\n    END\n\n    FETCH NEXT FROM partition_cursor INTO @partitionName;\nEND\n\nCLOSE partition_cursor;\nDEALLOCATE partition_cursor;\n\n-- Add new partition for the current month if it does not exist\n-- Repeat for the previous month as well\n-- Example for one month\nSET @partitionName = 'Partition_' + CONVERT(NVARCHAR, YEAR(@currentDate) * 100 + MONTH(@currentDate));\nIF NOT EXISTS (SELECT * FROM [$System].[DISCOVER_PARTITION_STAT] WHERE PartitionName = @partitionName)\nBEGIN\n    EXEC ('ALTER PARTITION FUNCTION AddPartitionFunction (...) ADD PARTITION [YourPartitionScheme] VALUES (...)');\nEND