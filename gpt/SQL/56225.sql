CREATE PROCEDURE Get_Checksum\n(\n    @DatabaseName      VARCHAR(100),\n    @TableName         VARCHAR(100),\n    @Checksum          FLOAT OUTPUT\n)\nAS\nBEGIN\n    DECLARE @SQL        NVARCHAR(4000)\n    DECLARE @ColumnName VARCHAR(100)\n    DECLARE @i          INT\n    DECLARE @intColumns TABLE (idRecord INT IDENTITY(1,1), ColumnName VARCHAR(255))\n    DECLARE @CS         TABLE (MyCheckSum BIGINT)\n\n    SET @SQL = \n        'INSERT INTO @intColumns (ColumnName)' + CHAR(13) + \n        'SELECT COLUMN_NAME' + CHAR(13) +\n        'FROM ' + @DatabaseName + '.INFORMATION_SCHEMA.COLUMNS (NOLOCK)' + CHAR(13) +\n        'WHERE TABLE_NAME = ''' + @TableName + '''' + CHAR(13) +\n        '      AND DATA_TYPE = ''int''' \n\n    -- Use sp_executesql with OUTPUT parameter for table variable insertion\n    EXEC sp_executesql @SQL, N'@intColumns TABLE (idRecord INT IDENTITY(1,1), ColumnName VARCHAR(255)) OUT', @intColumns OUTPUT\n\n    SET @SQL = \n        'INSERT INTO @CS (MyChecksum)' + CHAR(13) + \n        'SELECT '\n\n    SET @i = 1\n\n    WHILE EXISTS(\n          SELECT 1\n          FROM   @intColumns\n          WHERE  idRecord = @i)\n    BEGIN\n        SELECT @ColumnName = ColumnName\n        FROM   @intColumns\n        WHERE  idRecord = @i\n\n        SET @SQL = @SQL + CHAR(13) + \n             CASE WHEN @i = 1 THEN \n                  '    SUM(CAST(ISNULL(' + @ColumnName + ',0) AS BIGINT))'\n                  ELSE\n                  '    + SUM(CAST(ISNULL(' + @ColumnName + ',0) AS BIGINT))'\n             END\n\n        SET @i = @i + 1\n    END\n\n    SET @SQL = @SQL + CHAR(13) + \n         'FROM ' + @DatabaseName + '..' + @TableName + ' (NOLOCK)'\n\n    -- Insert the result into the @CS table\n    EXEC sp_executesql @SQL, N'@CS TABLE (MyCheckSum BIGINT) OUT', @CS OUTPUT\n\n    SELECT @Checksum = ISNULL((SELECT TOP 1 MyCheckSum FROM @CS), 0)\nEND\nGO