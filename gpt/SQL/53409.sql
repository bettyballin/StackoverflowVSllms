-- Assuming you have a table 'fuzzy_values' with columns x1, x2, x3 and their membership values\n\n-- Step 1: Define membership functions\nWITH membership AS (\n    SELECT \n        id,\n        x1,\n        x2,\n        x3,\n        CASE \n            WHEN x1 <= 0.3 THEN x1 -- Low membership function for x1\n            WHEN x1 > 0.3 AND x1 <= 0.7 THEN (0.7 - x1) / 0.4 -- Medium membership function for x1\n            WHEN x1 > 0.7 THEN (x1 - 0.7) / 0.3 -- High membership function for x1\n        END AS x1_low,\n        CASE \n            WHEN x2 <= 0.3 THEN x2\n            WHEN x2 > 0.3 AND x2 <= 0.7 THEN (0.7 - x2) / 0.4\n            WHEN x2 > 0.7 THEN (x2 - 0.7) / 0.3\n        END AS x2_med,\n        CASE \n            WHEN x3 <= 0.3 THEN x3\n            WHEN x3 > 0.3 AND x3 <= 0.7 THEN (0.7 - x3) / 0.4\n            WHEN x3 > 0.7 THEN (x3 - 0.7) / 0.3\n        END AS x3_high\n    FROM fuzzy_values\n),\n\n-- Step 2: Calculate the fuzzy rules\nrules AS (\n    SELECT \n        id,\n        LEAST(x1_high, x2_med) AS rule1,\n        GREATEST(x2_high, x3_med) AS rule2\n    FROM membership\n),\n\n-- Step 3: Aggregate the rule consequences\naggregated AS (\n    SELECT \n        id,\n        rule1,\n        rule2,\n        (rule1 + rule2) / 2.0 AS aggregated_output -- Example aggregation method\n    FROM rules\n)\n\n-- Step 4: Compute the centroid\nSELECT \n    id,\n    SUM(aggregated_output * value) / SUM(value) AS defuzzified_value\nFROM aggregated\nJOIN fuzzy_values ON aggregated.id = fuzzy_values.id\nGROUP BY id;