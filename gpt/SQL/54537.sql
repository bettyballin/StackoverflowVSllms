-- Declare the variables and the cursor\nDECLARE @trtype VARCHAR(10),\n        @trdate DATETIME,\n        @trvalue INT,\n        @runningTotal INT\n\n-- Create a temporary table to store the running totals\nCREATE TABLE #HoldingsRunningTotal (\n    trtype VARCHAR(10),\n    runningTotal INT\n)\n\n-- Initialize the cursor\nDECLARE transaction_cursor CURSOR FOR\nSELECT trtype, trdate, trvalue\nFROM Transactions\nORDER BY trtype, trdate\n\n-- Open the cursor\nOPEN transaction_cursor\n\n-- Fetch the first row\nFETCH NEXT FROM transaction_cursor INTO @trtype, @trdate, @trvalue\n\n-- Initialize the running total\nSET @runningTotal = 0\n\n-- Loop through the cursor\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    -- Calculate the running total\n    SET @runningTotal = @runningTotal + @trvalue\n\n    -- Insert or update the running total in the temporary table\n    IF EXISTS (SELECT 1 FROM #HoldingsRunningTotal WHERE trtype = @trtype)\n    BEGIN\n        UPDATE #HoldingsRunningTotal\n        SET runningTotal = @runningTotal\n        WHERE trtype = @trtype\n    END\n    ELSE\n    BEGIN\n        INSERT INTO #HoldingsRunningTotal (trtype, runningTotal)\n        VALUES (@trtype, @runningTotal)\n    END\n\n    -- Fetch the next row\n    FETCH NEXT FROM transaction_cursor INTO @trtype, @trdate, @trvalue\nEND\n\n-- Close and deallocate the cursor\nCLOSE transaction_cursor\nDEALLOCATE transaction_cursor\n\n-- Select the final running totals\nSELECT * FROM #HoldingsRunningTotal\n\n-- Drop the temporary table\nDROP TABLE #HoldingsRunningTotal