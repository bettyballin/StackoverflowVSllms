CREATE OR REPLACE TRIGGER "JOSH".TEST#UPD\nBEFORE UPDATE ON "JOSH"."TEST_TRIGGER_TABLE"\nREFERENCING OLD AS OLD NEW AS NEW\nFOR EACH ROW\nDECLARE\n    l_column_name VARCHAR2(200);\n    l_old_value VARCHAR2(2000);\n    l_new_value VARCHAR2(2000);\nBEGIN\n    FOR column_rec IN (SELECT column_name \n                       FROM user_tab_columns \n                       WHERE table_name = 'TEST_TRIGGER_TABLE' \n                       ORDER BY column_id) LOOP\n        l_column_name := column_rec.column_name;\n\n        EXECUTE IMMEDIATE\n            'BEGIN :old_value := :old.' || l_column_name || '; END;'\n            INTO l_old_value\n            USING IN OUT :old_value, :old;\n\n        EXECUTE IMMEDIATE\n            'BEGIN :new_value := :new.' || l_column_name || '; END;'\n            INTO l_new_value\n            USING IN OUT :new_value, :new;\n\n        -- Do something here with l_old_value and l_new_value\n        dbms_output.put_line('Column: ' || l_column_name || \n                             ' Old Value: ' || l_old_value || \n                             ' New Value: ' || l_new_value);\n    END LOOP;\nEND;