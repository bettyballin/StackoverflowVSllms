CREATE FUNCTION [dbo].[ZipsInRadius] (\n    @zipCode VARCHAR(15),\n    @radius INT,\n    @unit CHAR(1)\n)\nRETURNS @areaResults TABLE (\n    Zip VARCHAR(30),\n    City VARCHAR(255),\n    St VARCHAR(20),\n    Lat DECIMAL(16, 12),\n    Long DECIMAL(16, 12)\n)\nBEGIN\n    DECLARE @iStartLat DECIMAL(16, 12)\n    DECLARE @iStartLong DECIMAL(16, 12)\n\n    -- Get start latitude and longitude from zip table\n    SELECT TOP 1\n        @iStartLat = CAST(Latitude AS DECIMAL(16, 12)), \n        @iStartLong = CAST(Longitude AS DECIMAL(16, 12))\n    FROM zip\n    WHERE zipcode LIKE @zipCode + '%'\n\n    -- If not found in zip table, get from postalcode table\n    IF @iStartLat IS NULL\n    BEGIN\n        SELECT TOP 1\n            @iStartLat = CAST(Latitude AS DECIMAL(16, 12)), \n            @iStartLong = CAST(Longitude AS DECIMAL(16, 12))\n        FROM postalcode\n        WHERE postalcode LIKE @zipCode + '%'\n    END\n\n    DECLARE @latRange DECIMAL(16, 12)\n    DECLARE @longRange DECIMAL(16, 12)\n\n    IF (@unit = 'K') -- Get distance in kilometers\n    BEGIN\n        SET @latRange = (CAST(@radius / ((6076.0 / 5280.0) * 60.0) AS DECIMAL(16, 12))) * 0.621371\n        SET @longRange = (@radius / (((COS(@iStartLat * PI() / 180.0) * 6076.0) / 5280.0) * 60)) * 0.621371\n    END\n    ELSE -- Get distance in miles (the default)\n    BEGIN\n        SET @latRange = CAST(@radius / ((6076.0 / 5280.0) * 60.0) AS DECIMAL(16, 12))\n        SET @longRange = @radius / (((COS(@iStartLat * PI() / 180.0) * 6076.0) / 5280.0) * 60)\n    END\n\n    DECLARE @lowLatitude DECIMAL(16, 12) = @iStartLat - @latRange\n    DECLARE @highLatitude DECIMAL(16, 12) = @iStartLat + @latRange\n    DECLARE @lowLongitude DECIMAL(16, 12) = @iStartLong - @longRange\n    DECLARE @highLongitude DECIMAL(16, 12) = @iStartLong + @longRange\n\n    -- Insert results from zip table\n    INSERT INTO @areaResults (zip, city, st, lat, long)\n    SELECT ZIPcode, CITY, STate, LATitude, LONGitude\n    FROM Zip\n    WHERE Latitude BETWEEN @lowLatitude AND @highLatitude\n      AND Longitude BETWEEN @lowLongitude AND @highLongitude\n\n    -- Insert results from postalcode table\n    INSERT INTO @areaResults (zip, city, st, lat, long)\n    SELECT postalcode, CITY, province, LATitude, LONGitude\n    FROM postalcode\n    WHERE Latitude BETWEEN @lowLatitude AND @highLatitude\n      AND Longitude BETWEEN @lowLongitude AND @highLongitude\n\n    RETURN\nEND