-- Step 1: Create a minutes table\nCREATE TABLE Minutes (\n    MinuteStart datetime\n);\n\n-- Populate the minutes table with each minute within the hour (7pm to 8pm)\nDECLARE @start datetime, @end datetime, @current datetime;\nSET @start = '2023-01-01 19:00:00'; -- Replace with the actual date and hour\nSET @end = '2023-01-01 20:00:00';   -- Replace with the actual date and hour\nSET @current = @start;\n\nWHILE @current < @end\nBEGIN\n    INSERT INTO Minutes (MinuteStart) VALUES (@current);\n    SET @current = DATEADD(minute, 1, @current);\nEND\n\n-- Step 2: Expand each call into individual minute intervals\nCREATE TABLE CallMinutes (\n    System int,\n    MinuteStart datetime\n);\n\nINSERT INTO CallMinutes (System, MinuteStart)\nSELECT\n    R.system,\n    DATEADD(minute, N.number, DATEADD(second, R.seconds, '1970-01-01 00:00:00'))\nFROM\n    Records R\nCROSS JOIN\n    (SELECT number FROM master..spt_values WHERE type = 'P' AND number < 60) N\nWHERE\n    DATEADD(minute, N.number, DATEADD(second, R.seconds, '1970-01-01 00:00:00')) BETWEEN @start AND @end\n    AND DATEADD(second, R.dur, DATEADD(second, R.seconds, '1970-01-01 00:00:00')) >= DATEADD(minute, N.number, DATEADD(second, R.seconds, '1970-01-01 00:00:00'));\n\n-- Step 3: Count the number of active calls per minute\nCREATE TABLE ActiveCallCounts (\n    MinuteStart datetime,\n    System int,\n    ActiveCalls int\n);\n\nINSERT INTO ActiveCallCounts (MinuteStart, System, ActiveCalls)\nSELECT\n    CM.MinuteStart,\n    CM.System,\n    COUNT(*) AS ActiveCalls\nFROM\n    CallMinutes CM\nGROUP BY\n    CM.MinuteStart,\n    CM.System;\n\n-- Step 4: Calculate the average concurrent active calls for the hour\nSELECT\n    AC.System,\n    AVG(AC.ActiveCalls) AS AvgConcurrentCalls\nFROM\n    ActiveCallCounts AC\nGROUP BY\n    AC.System;