CREATE TABLE #order (\n    orderId INT PRIMARY KEY CLUSTERED,\n    customerId INT NOT NULL,\n    orderDateTime DATETIME NOT NULL\n);\n\nINSERT INTO #order VALUES (1, 100, '2009-01-01');\nINSERT INTO #order VALUES (2, 101, '2009-01-02');\nINSERT INTO #order VALUES (3, 102, '2009-01-03');\nINSERT INTO #order VALUES (4, 103, '2009-01-04');\nINSERT INTO #order VALUES (5, 100, '2009-01-05');\nINSERT INTO #order VALUES (6, 101, '2009-01-06');\nINSERT INTO #order VALUES (7, 101, '2009-01-07');\nINSERT INTO #order VALUES (8, 103, '2009-01-08');\nINSERT INTO #order VALUES (9, 105, '2009-01-09');\nINSERT INTO #order VALUES (10, 100, '2009-01-10');\nINSERT INTO #order VALUES (11, 101, '2009-01-11');\nINSERT INTO #order VALUES (12, 102, '2009-01-12');\nINSERT INTO #order VALUES (13, 103, '2009-01-13');\nINSERT INTO #order VALUES (14, 100, '2009-01-14');\nINSERT INTO #order VALUES (15, 100, '2009-01-15');\nINSERT INTO #order VALUES (16, 101, '2009-01-16');\nINSERT INTO #order VALUES (17, 102, '2009-01-17');\nINSERT INTO #order VALUES (18, 101, '2009-01-18');\nINSERT INTO #order VALUES (19, 100, '2009-01-19');\nINSERT INTO #order VALUES (20, 101, '2009-01-20');\n\n-- Example query without ORDER BY clause\nSELECT orderId, customerId, orderDateTime,\n    ROW_NUMBER() OVER (PARTITION BY customerId ORDER BY orderDateTime) AS RN\nFROM #order;\n\n-- Another example query without ORDER BY clause that might produce a different order\nSELECT orderId, customerId, orderDateTime,\n    ROW_NUMBER() OVER (PARTITION BY customerId ORDER BY orderDateTime) AS RN\nFROM #order\nOPTION (MAXDOP 1); -- Force single-thread execution to illustrate potential difference\n\nDROP TABLE #order;