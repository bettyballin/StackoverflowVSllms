CREATE OR REPLACE FUNCTION check_resource_event_overlap() RETURNS TRIGGER AS $$\nBEGIN\n    IF EXISTS (\n        SELECT 1\n        FROM timespan t1\n        JOIN event_resource er1 ON t1.event_id = er1.event_id\n        JOIN event_resource er2 ON er1.resource_id = er2.resource_id\n        JOIN timespan t2 ON er2.event_id = t2.event_id\n        WHERE er1.resource_id = NEW.resource_id\n        AND t1.id <> t2.id\n        AND t1.id = NEW.id\n        AND t1.day = t2.day\n        AND (t1.start_time, t1.end_time) OVERLAPS (t2.start_time, t2.end_time)\n    ) THEN\n        RAISE EXCEPTION 'Resource has overlapping events';\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_check_resource_event_overlap\nBEFORE INSERT OR UPDATE ON timespan\nFOR EACH ROW EXECUTE FUNCTION check_resource_event_overlap();