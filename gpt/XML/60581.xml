<?xml version="1.0" encoding="UTF-8"?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n    <xsl:output method="xml" indent="yes" />\n\n    <xsl:template match="/Orders">\n        <xsl:apply-templates select="Order" />\n    </xsl:template>\n\n    <xsl:template match="Order">\n        <!-- Check if this is the first occurrence of SupplierId -->\n        <xsl:if test="not(preceding-sibling::Order[SupplierId = current()/SupplierId])">\n            <p>First occurrence of SupplierId: <xsl:value-of select="SupplierId" /></p>\n        </xsl:if>\n\n        <!-- Check if SupplierId has changed from the previous Order -->\n        <xsl:if test="preceding-sibling::Order[1]/SupplierId != current()/SupplierId">\n            <p>SupplierId changed at OrderId: <xsl:value-of select="OrderId" /></p>\n        </xsl:if>\n\n        <!-- Check if this is the last occurrence of SupplierId -->\n        <xsl:if test="not(following-sibling::Order[SupplierId = current()/SupplierId])">\n            <p>Last occurrence of SupplierId: <xsl:value-of select="SupplierId" /></p>\n        </xsl:if>\n\n        <!-- Process the Order element as needed -->\n        <xsl:copy-of select="." />\n    </xsl:template>\n</xsl:stylesheet>