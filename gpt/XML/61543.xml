<?xml version="1.0" encoding="UTF-8"?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n    <xsl:output method="html" indent="yes"/>\n    <xsl:template match="/">\n        <html>\n            <body>\n                <table border="1">\n                    <xsl:variable name="max-depth">\n                        <xsl:call-template name="get-max-depth"/>\n                    </xsl:variable>\n                    <xsl:apply-templates select="//node">\n                        <xsl:with-param name="current-depth" select="1"/>\n                        <xsl:with-param name="path" select="''"/>\n                        <xsl:with-param name="max-depth" select="$max-depth"/>\n                    </xsl:apply-templates>\n                </table>\n            </body>\n        </html>\n    </xsl:template>\n\n    <xsl:template name="get-max-depth">\n        <xsl:param name="node" select="/"/>\n        <xsl:param name="current-depth" select="1"/>\n        <xsl:param name="max-depth" select="1"/>\n        <xsl:choose>\n            <xsl:when test="$node/node">\n                <xsl:for-each select="$node/node">\n                    <xsl:call-template name="get-max-depth">\n                        <xsl:with-param name="node" select="."/>\n                        <xsl:with-param name="current-depth" select="$current-depth + 1"/>\n                        <xsl:with-param name="max-depth" select="$max-depth"/>\n                    </xsl:call-template>\n                </xsl:for-each>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:variable name="new-max-depth">\n                    <xsl:choose>\n                        <xsl:when test="$current-depth > $max-depth">\n                            <xsl:value-of select="$current-depth"/>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:value-of select="$max-depth"/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </xsl:variable>\n                <xsl:value-of select="$new-max-depth"/>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n\n    <xsl:template match="node">\n        <xsl:param name="current-depth"/>\n        <xsl:param name="path"/>\n        <xsl:param name="max-depth"/>\n        <xsl:variable name="new-path">\n            <xsl:choose>\n                <xsl:when test="$path = ''">\n                    <xsl:value-of select="@text"/>\n                </xsl:when>\n                <xsl:otherwise>\n                    <xsl:value-of select="concat($path, ',', @text)"/>\n                </xsl:otherwise>\n            </xsl:choose>\n        </xsl:variable>\n        <tr>\n            <xsl:for-each select="tokenize($new-path, ',')">\n                <td>\n                    <xsl:value-of select="."/>\n                </td>\n            </xsl:for-each>\n            <xsl:for-each select="1 to $max-depth - count(tokenize($new-path, ','))">\n                <td></td>\n            </xsl:for-each>\n            <td>\n                <xsl:value-of select="@value"/>\n            </td>\n        </tr>\n        <xsl:apply-templates select="node">\n            <xsl:with-param name="current-depth" select="$current-depth + 1"/>\n            <xsl:with-param name="path" select="$new-path"/>\n            <xsl:with-param name="max-depth" select="$max-depth"/>\n        </xsl:apply-templates>\n    </xsl:template>\n</xsl:stylesheet>