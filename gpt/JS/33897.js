// Function to encrypt data\nasync function encryptData(data, keyArray, ivArray) {\n    const encoder = new TextEncoder();\n    const dataArray = encoder.encode(data);\n\n    const algorithm = { name: 'AES-CBC', iv: ivArray };\n    const cryptoKey = await crypto.subtle.importKey('raw', keyArray, algorithm, false, ['encrypt']);\n    const encrypted = await crypto.subtle.encrypt(algorithm, cryptoKey, dataArray);\n\n    // Convert the encrypted data to base64\n    return btoa(String.fromCharCode(...new Uint8Array(encrypted)));\n}\n\n// Attach event listener to the form submit\ndocument.querySelector('form').addEventListener('submit', async function(event) {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    const formString = new URLSearchParams(formData).toString();\n    const encryptedFormString = await encryptData(formString, keyArray, ivArray);\n\n    // Send the encrypted form data via AJAX\n    fetch('/submit', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: 'data=' + encodeURIComponent(encryptedFormString)\n    }).then(response => response.json()).then(data => {\n        console.log('Server response:', data);\n    }).catch(error => {\n        console.error('Error:', error);\n    });\n});