var currentRequest = null;\n\nfunction startAjaxRequest() {\n    // If there's an ongoing request, abort it\n    if (currentRequest) {\n        currentRequest.abort();\n    }\n\n    // Create a new XMLHttpRequest object\n    currentRequest = new XMLHttpRequest();\n    currentRequest.open('POST', 'your-server-endpoint', true);\n\n    currentRequest.onreadystatechange = function() {\n        if (currentRequest.readyState === 4) { // Request completed\n            if (currentRequest.status === 200) { // Success\n                console.log('Request succeeded:', currentRequest.responseText);\n            } else { // Error\n                console.log('Request failed:', currentRequest.statusText);\n            }\n            currentRequest = null; // Clear the request object\n        }\n    };\n\n    currentRequest.send();\n}\n\n// Example usage: Forcing a __doPostBack on update panel\nfunction forcePostBack() {\n    startAjaxRequest();\n}\n\n// Example usage: Timer-based update\nsetInterval(function() {\n    startAjaxRequest();\n}, 5 * 60 * 1000); // Every 5 minutes