function isTextile(input) {\n    // Simple heuristic for Textile detection\n    const textilePatterns = [\n        /\b_\b/, // Emphasis\n        /\b\*\b/, // Strong emphasis\n        /\b#\b/, // Ordered list\n        /\b\b/, // Unordered list\n        /"(.*?)":(http|https|ftp|mailto):\/\/[^\s]+/, // Hyperlink\n    ];\n    return textilePatterns.some(pattern => pattern.test(input));\n}\n\nfunction isMarkdown(input) {\n    // Simple heuristic for Markdown detection\n    const markdownPatterns = [\n        /_([^_]+)_/, // Emphasis\n        /\*([^\*]+)\*/, // Strong emphasis\n        /\d+\.\s/, // Ordered list\n        /-\s/, // Unordered list\n        /\[(.*?)\]\((http|https|ftp|mailto):\/\/[^\s]+\)/, // Hyperlink\n    ];\n    return markdownPatterns.some(pattern => pattern.test(input));\n}\n\nfunction detectFormat(input) {\n    const isTextileFormat = isTextile(input);\n    const isMarkdownFormat = isMarkdown(input);\n\n    if (isTextileFormat && !isMarkdownFormat) {\n        return 'textile';\n    } else if (!isTextileFormat && isMarkdownFormat) {\n        return 'markdown';\n    } else {\n        // Handle ambiguous cases or fallback\n        return 'unknown';\n    }\n}\n\n// Example usage\nconst userInput = "Your input text here";\nconst format = detectFormat(userInput);\nconsole.log(`Detected format: ${format}`);