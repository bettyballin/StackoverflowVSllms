// server.js\nconst express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIo(server);\n\nlet users = [];\n\nio.on('connection', (socket) => {\n  console.log('New client connected');\n  users.push(socket);\n\n  if (users.length % 2 === 0) {\n    const user1 = users[users.length - 1];\n    const user2 = users[users.length - 2];\n    user1.partner = user2;\n    user2.partner = user1;\n\n    user1.emit('connected', { partnerId: user2.id });\n    user2.emit('connected', { partnerId: user1.id });\n  }\n\n  socket.on('message', (data) => {\n    if (socket.partner) {\n      socket.partner.emit('message', data);\n    }\n  });\n\n  socket.on('disconnect', () => {\n    console.log('Client disconnected');\n    if (socket.partner) {\n      socket.partner.emit('partner-disconnected');\n      users = users.filter(user => user !== socket && user !== socket.partner);\n      if (users.length % 2 !== 0) {\n        users.push(users.shift());\n      }\n    } else {\n      users = users.filter(user => user !== socket);\n    }\n  });\n});\n\nserver.listen(3000, () => {\n  console.log('Listening on port 3000');\n});