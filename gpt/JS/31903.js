function matrixMultiply(a, b) {\n    return [\n        [\n            a[0][0] * b[0][0] + a[0][1] * b[1][0],\n            a[0][0] * b[0][1] + a[0][1] * b[1][1]\n        ],\n        [\n            a[1][0] * b[0][0] + a[1][1] * b[1][0],\n            a[1][0] * b[0][1] + a[1][1] * b[1][1]\n        ]\n    ];\n}\n\nfunction matrixPower(matrix, n) {\n    let result = [[1, 0], [0, 1]]; // Identity matrix\n    let base = matrix;\n\n    while (n > 0) {\n        if (n % 2 === 1) {\n            result = matrixMultiply(result, base);\n        }\n        base = matrixMultiply(base, base);\n        n = Math.floor(n / 2);\n    }\n\n    return result;\n}\n\nfunction fib(n) {\n    if (n <= 1) return n;\n\n    const F = [\n        [1, 1],\n        [1, 0]\n    ];\n    \n    const resultMatrix = matrixPower(F, n - 1);\n    return resultMatrix[0][0];\n}\n\nconsole.log(fib(1476)); // Outputs: 1.3069892237633987e+308