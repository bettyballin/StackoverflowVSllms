// Function to save state using the History API\nfunction saveState(state) {\n    history.pushState(state, null, location.href);\n}\n\n// Function to handle the state when the page is loaded\nfunction handleState(state) {\n    if (state) {\n        // Apply the state (e.g., sorting option, page number)\n        applyState(state);\n    }\n}\n\n// Example of applying state to the page\nfunction applyState(state) {\n    // Assuming state contains `sortOption` and `pageNumber`\n    setSortOption(state.sortOption);\n    setPageNumber(state.pageNumber);\n    // Re-fetch or re-render data based on the state\n    fetchData(state.sortOption, state.pageNumber);\n}\n\n// Set the sort option (implementation depends on your application)\nfunction setSortOption(sortOption) {\n    // Example: update a dropdown or UI element with the sort option\n    document.querySelector('#sortDropdown').value = sortOption;\n}\n\n// Set the page number (implementation depends on your application)\nfunction setPageNumber(pageNumber) {\n    // Example: update the UI with the current page number\n    document.querySelector('#pageNumber').textContent = pageNumber;\n}\n\n// Fetch data based on sort option and page number (implementation depends on your application)\nfunction fetchData(sortOption, pageNumber) {\n    // Make an AJAX call to fetch data with the given sort option and page number\n}\n\n// Event listener for popstate event\nwindow.addEventListener('popstate', function(event) {\n    handleState(event.state);\n});\n\n// Example usage: save state when sorting or paging\ndocument.querySelector('#sortDropdown').addEventListener('change', function() {\n    const sortOption = this.value;\n    const pageNumber = getCurrentPageNumber(); // Function to get current page number\n    const state = { sortOption: sortOption, pageNumber: pageNumber };\n    saveState(state);\n    fetchData(sortOption, pageNumber);\n});\n\ndocument.querySelector('#nextPageButton').addEventListener('click', function() {\n    const sortOption = getCurrentSortOption(); // Function to get current sort option\n    const pageNumber = getCurrentPageNumber() + 1; // Increment page number\n    const state = { sortOption: sortOption, pageNumber: pageNumber };\n    saveState(state);\n    fetchData(sortOption, pageNumber);\n});\n\n// Function to get current sort option (implementation depends on your application)\nfunction getCurrentSortOption() {\n    return document.querySelector('#sortDropdown').value;\n}\n\n// Function to get current page number (implementation depends on your application)\nfunction getCurrentPageNumber() {\n    return parseInt(document.querySelector('#pageNumber').textContent);\n}\n\n// Initialize state when the page loads\ndocument.addEventListener('DOMContentLoaded', function() {\n    handleState(history.state);\n});