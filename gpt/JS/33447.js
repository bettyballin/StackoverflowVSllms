const express = require('express');\nconst jwt = require('jsonwebtoken');\nconst app = express();\n\n// Secret key for signing JWTs\nconst SECRET_KEY = 'your_secret_key';\n\n// Middleware to check JWT in cookies\nconst authenticateJWT = (req, res, next) => {\n  const token = req.cookies.token;\n\n  if (token) {\n    jwt.verify(token, SECRET_KEY, (err, user) => {\n      if (err) {\n        return res.sendStatus(403);\n      }\n      req.user = user;\n      next();\n    });\n  } else {\n    res.sendStatus(401);\n  }\n};\n\n// Login route\napp.post('/login', (req, res) => {\n  const { username, password } = req.body;\n\n  // Validate user credentials (authentication logic here)\n  const user = { id: 1, username: 'user' }; // Example user object\n\n  // Generate JWT token\n  const token = jwt.sign(user, SECRET_KEY, { expiresIn: '1h' });\n\n  // Set token in HttpOnly cookie\n  res.cookie('token', token, { httpOnly: true, secure: true });\n  res.json({ message: 'Login successful' });\n});\n\n// Protected route\napp.get('/protected', authenticateJWT, (req, res) => {\n  res.json({ message: 'You are authenticated', user: req.user });\n});\n\napp.listen(3000, () => {\n  console.log('Server is running on port 3000');\n});