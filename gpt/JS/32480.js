// integration.test.js\nconst { expect } = require('chai');\nconst request = require('supertest');\nconst app = require('../app');\n\ndescribe('Integration Tests', () => {\n  beforeEach(async () => {\n    // Setup the database or any other required state\n  });\n\n  afterEach(async () => {\n    // Clean up the state\n  });\n\n  it('should create a user and retrieve it', async () => {\n    const res = await request(app).post('/api/users').send({ name: 'John Doe' });\n    expect(res.status).to.equal(201);\n    const user = await request(app).get(`/api/users/${res.body.id}`);\n    expect(user.body.name).to.equal('John Doe');\n  });\n});\n\n// functional.test.js\nconst { Builder, By, until } = require('selenium-webdriver');\nconst { expect } = require('chai');\n\ndescribe('Functional Tests', function() {\n  let driver;\n\n  before(async () => {\n    driver = await new Builder().forBrowser('firefox').build();\n  });\n\n  after(async () => {\n    await driver.quit();\n  });\n\n  it('should create a user via the UI', async () => {\n    await driver.get('http://localhost:3000');\n    await driver.findElement(By.name('name')).sendKeys('John Doe');\n    await driver.findElement(By.id('submit')).click();\n    const user = await driver.wait(until.elementLocated(By.id('user-name')), 10000).getText();\n    expect(user).to.equal('John Doe');\n  });\n});