const express = require('express');\nconst app = express();\n\n// Middleware to verify token\nfunction verifyToken(req, res, next) {\n  const bearerHeader = req.headers['authorization'];\n  \n  if (typeof bearerHeader !== 'undefined') {\n    const bearer = bearerHeader.split(' ');\n    const bearerToken = bearer[1];\n\n    // Check token validity in the database\n    db.query('SELECT * FROM api_tokens WHERE token = $1 AND expires_at > NOW()', [bearerToken], (err, result) => {\n      if (err) throw err;\n      \n      if (result.rows.length > 0) {\n        req.token = bearerToken;\n        next();\n      } else {\n        res.sendStatus(403); // Forbidden\n      }\n    });\n  } else {\n    res.sendStatus(403); // Forbidden\n  }\n}\n\n// Protect routes with the verifyToken middleware\napp.use('/api', verifyToken);\n\napp.get('/api/data', (req, res) => {\n  res.json({ message: 'Secure data' });\n});\n\napp.listen(3000, () => {\n  console.log('Server is running on port 3000');\n});