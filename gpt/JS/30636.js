const fs = require('fs');\nconst path = require('path');\nconst os = require('os');\n\nclass Logger {\n  constructor(channelName) {\n    this.channelName = channelName;\n    this.buffer = [];\n    this.logFilePath = path.join(__dirname, `${channelName}.log`);\n    this.flushInterval = 300000; // 5 minutes\n    this.startFlushInterval();\n  }\n\n  log(message) {\n    const timestamp = new Date().toISOString();\n    this.buffer.push(`[${timestamp}] ${message}`);\n    if (this.buffer.length >= 10) { // Adjust this threshold as needed\n      this.flush();\n    }\n  }\n\n  flush() {\n    if (this.buffer.length === 0) return;\n    \n    const data = this.buffer.join(os.EOL) + os.EOL;\n    this.buffer = [];\n    fs.appendFile(this.logFilePath, data, (err) => {\n      if (err) console.error(`Failed to write to log file: ${err}`);\n    });\n  }\n\n  startFlushInterval() {\n    setInterval(() => {\n      this.flush();\n    }, this.flushInterval);\n  }\n}\n\n// Usage\nconst channelLoggers = {};\nfunction getLogger(channelName) {\n  if (!channelLoggers[channelName]) {\n    channelLoggers[channelName] = new Logger(channelName);\n  }\n  return channelLoggers[channelName];\n}\n\n// Example logging\nconst logger = getLogger('exampleChannel');\nlogger.log('User joined the channel');\nlogger.log('User sent a message');