class MyElementHandler {\n  constructor(element) {\n    this.element = element;\n    this.data = {}; // you can store instance-specific data here\n  }\n\n  setData(key, value) {\n    this.data[key] = value;\n  }\n\n  getData(key) {\n    return this.data[key];\n  }\n\n  // Add other methods to interact with the element\n  doSomething() {\n    console.log(`Doing something with ${this.element}`);\n    // Add your logic here\n  }\n}\n\n// Usage\nconst element1 = new MyElementHandler(document.getElementById('element1'));\nconst element2 = new MyElementHandler(document.getElementById('element2'));\nconst element3 = new MyElementHandler(document.getElementById('element3'));\n\nelement1.setData('key1', 'value1');\nelement2.setData('key2', 'value2');\nelement3.setData('key3', 'value3');\n\n// Each instance operates independently\nelement1.doSomething();\nelement2.doSomething();\nelement3.doSomething();