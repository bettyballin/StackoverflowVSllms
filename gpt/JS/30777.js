document.addEventListener("DOMContentLoaded", function() {\n    const options = {\n        root: null, // Use the viewport as the container\n        rootMargin: '0px',\n        threshold: 1.0 // Trigger when 100% of the target is visible\n    };\n\n    const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                // The target element has become visible\n                loadMoreElements();\n                observer.unobserve(entry.target); // Stop observing the current target\n                // Optionally, you can observe the new last element if needed\n            }\n        });\n    }, options);\n\n    function loadMoreElements() {\n        // Logic for loading more elements\n        // For example, an AJAX request to fetch and append more items\n        console.log('Loading more elements...');\n        \n        // Dummy example of appending new elements\n        const list = document.getElementById('list');\n        for (let i = 0; i < 10; i++) {\n            const item = document.createElement('div');\n            item.className = 'list-item';\n            item.textContent = 'New Item ' + (list.children.length + 1);\n            list.appendChild(item);\n        }\n        \n        // Start observing the new last element\n        const newLastElement = list.lastElementChild;\n        observer.observe(newLastElement);\n    }\n\n    // Start observing the initial last element in the list\n    const list = document.getElementById('list');\n    const lastElement = list.lastElementChild;\n    observer.observe(lastElement);\n});