const express = require('express');\nconst cookieParser = require('cookie-parser');\nconst sqlite3 = require('sqlite3').verbose();\n\nconst app = express();\napp.use(cookieParser());\n\n// Initialize SQLite database\nlet db = new sqlite3.Database(':memory:');\ndb.serialize(() => {\n  db.run("CREATE TABLE page_views (id INTEGER PRIMARY KEY, url TEXT, ip TEXT, user_id TEXT, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP)");\n});\n\n// Middleware to track page views\napp.use((req, res, next) => {\n  const ip = req.ip;\n  const userCookie = req.cookies.user_id || Math.random().toString(36).substring(2, 15);\n  const url = req.originalUrl;\n\n  res.cookie('user_id', userCookie, { maxAge: 900000, httpOnly: true });\n\n  const now = new Date().toISOString();\n  \n  db.run("INSERT INTO page_views (url, ip, user_id, timestamp) VALUES (?, ?, ?, ?)", [url, ip, userCookie, now], (err) => {\n    if (err) {\n      console.error("Error logging page view:", err);\n    }\n  });\n\n  next();\n});\n\napp.get('/', (req, res) => {\n  res.send('Home Page');\n});\n\napp.get('/view-count', (req, res) => {\n  const url = req.query.url;\n  db.get("SELECT COUNT(*) as count FROM page_views WHERE url = ?", [url], (err, row) => {\n    if (err) {\n      return res.status(500).send("Error retrieving page view count");\n    }\n    res.send(`Page view count for ${url}: ${row.count}`);\n  });\n});\n\napp.listen(3000, () => {\n  console.log('Server running on http://localhost:3000');\n});