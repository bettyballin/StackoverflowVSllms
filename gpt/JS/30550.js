// GET request to fetch a resource\nfunction fetchResource(resourceId) {\n    fetch(`/api/resources/${resourceId}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log('Resource:', data);\n            // Update the UI with the fetched data\n        })\n        .catch(error => console.error('Error fetching resource:', error));\n}\n\n// POST request to create a new resource\nfunction createResource(resourceData) {\n    fetch('/api/resources', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(resourceData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Resource created:', data);\n        // Update the UI with the new resource\n    })\n    .catch(error => console.error('Error creating resource:', error));\n}\n\n// PUT request to update an existing resource\nfunction updateResource(resourceId, resourceData) {\n    fetch(`/api/resources/${resourceId}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(resourceData)\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Resource updated:', data);\n        // Update the UI with the updated resource\n    })\n    .catch(error => console.error('Error updating resource:', error));\n}\n\n// DELETE request to delete a resource\nfunction deleteResource(resourceId) {\n    fetch(`/api/resources/${resourceId}`, {\n        method: 'DELETE'\n    })\n    .then(response => {\n        if (response.ok) {\n            console.log('Resource deleted');\n            // Update the UI to reflect the deletion\n        } else {\n            console.error('Error deleting resource');\n        }\n    })\n    .catch(error => console.error('Error deleting resource:', error));\n}