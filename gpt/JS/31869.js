function isValidUSPhoneNumber(phoneNumber) {\n    // Remove non-digit characters\n    const cleaned = phoneNumber.replace(/\D/g, '');\n\n    // Check length\n    if (cleaned.length !== 10) {\n        return false;\n    }\n\n    // Check for 555 numbers\n    if (/^555/.test(cleaned.substr(3))) {\n        return false;\n    }\n\n    // Check for 7 identical digits\n    if (/(\d)\1{6}/.test(cleaned)) {\n        return false;\n    }\n\n    // Check for invalid patterns\n    const invalidPatterns = [\n        '1231234',\n        '1234567',\n        '8675309'\n    ];\n\n    for (let pattern of invalidPatterns) {\n        if (cleaned.includes(pattern)) {\n            return false;\n        }\n    }\n\n    // Valid area codes (example - you can use a comprehensive list)\n    const validAreaCodes = [\n        '201', '202', '203', '205', '206', '207', '208', '209', '210', '212', \n        '213', '214', '215', '216', '217', '218', '219', '224', '225', '228',\n        // Add more valid area codes here\n    ];\n\n    const areaCode = cleaned.substr(0, 3);\n    if (!validAreaCodes.includes(areaCode)) {\n        return false;\n    }\n\n    return true;\n}\n\n// Example usage\nconst phoneNumber = '330-123-4567';\nif (isValidUSPhoneNumber(phoneNumber)) {\n    console.log('Valid US phone number');\n} else {\n    console.log('Invalid US phone number');\n}