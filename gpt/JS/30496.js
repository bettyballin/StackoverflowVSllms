const express = require('express');\n   const Queue = require('bull');\n   const app = express();\n   const port = 3000;\n\n   // Create a job queue\n   const jobQueue = new Queue('jobQueue');\n\n   // In-memory job status storage (use a database in production)\n   const jobStatuses = {};\n\n   // Endpoint to start a job\n   app.post('/start-job', (req, res) => {\n     const jobId = `job-${Date.now()}`;\n     jobQueue.add({ jobId });\n     jobStatuses[jobId] = 'pending';\n     res.json({ jobId });\n   });\n\n   // Endpoint to get job status\n   app.get('/job-status/:jobId', (req, res) => {\n     const jobId = req.params.jobId;\n     const status = jobStatuses[jobId] || 'unknown';\n     res.json({ jobId, status });\n   });\n\n   // Process jobs in the queue\n   jobQueue.process(async (job) => {\n     const { jobId } = job.data;\n     jobStatuses[jobId] = 'in-progress';\n\n     // Simulate a long-running operation\n     await new Promise((resolve) => setTimeout(resolve, 20 * 60 * 1000)); // 20 minutes\n\n     jobStatuses[jobId] = 'completed';\n   });\n\n   app.listen(port, () => {\n     console.log(`Server listening at http://localhost:${port}`);\n   });