const postcss = require('postcss');\nconst safeParser = require('postcss-safe-parser');\nconst cssnano = require('cssnano');\n\n// Whitelist of allowed properties\nconst allowedProperties = [\n  'color', 'background-color', 'font-size', 'margin', 'padding', 'border'\n];\n\n// Function to sanitize CSS\nfunction sanitizeCSS(inputCSS) {\n  return postcss([\n    cssnano({\n      preset: ['default', {\n        discardComments: { removeAll: true },\n        normalizeWhitespace: true,\n      }]\n    })\n  ])\n  .process(inputCSS, { parser: safeParser })\n  .then(result => {\n    let sanitizedCSS = '';\n    \n    result.root.walkDecls(decl => {\n      if (allowedProperties.includes(decl.prop.toLowerCase())) {\n        sanitizedCSS += `${decl.toString()};`;\n      }\n    });\n    \n    return sanitizedCSS;\n  });\n}\n\n// Example usage\nconst userCSS = `\n  body {\n    color: red;\n    background-color: #fff;\n    font-size: 16px;\n    margin: 0;\n    padding: 0;\n    border: 1px solid black;\n  }\n`;\n\nsanitizeCSS(userCSS).then(sanitizedCSS => {\n  console.log('Sanitized CSS:', sanitizedCSS);\n});