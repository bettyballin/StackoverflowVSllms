function extractNestedFunctionNames(func) {\n    const fnString = func.toString();\n    const functionNames = [];\n    const functionPattern = /function\s+([a-zA-Z$_][a-zA-Z$_0-9]*)\s*\(/g;\n    \n    let match;\n    while ((match = functionPattern.exec(fnString)) !== null) {\n        functionNames.push(match[1]);\n    }\n\n    return functionNames;\n}\n\n// Example usage:\nfunction someFn() {\n    /**\n     * Some comment\n     */\n     function fn1() {\n         alert("/*This is not a comment, it's a string literal*/");\n     }\n\n     function // keyword\n     fn2 // name\n     (x, y) // arguments\n     {\n         /*\n         body\n         */\n     }\n\n     var f = function () { // anonymous, ignore\n     };\n}\n\nconst nestedFunctionNames = extractNestedFunctionNames(someFn);\nconsole.log(nestedFunctionNames); // Output: ["fn1", "fn2"]