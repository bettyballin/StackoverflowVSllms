// Decode the base64 encoded key and IV\nvar decodedKey = atob(key);\nvar decodedIv = atob(iv);\n\n// Convert the decoded key and IV to Uint8Array\nvar keyArray = new Uint8Array(decodedKey.split('').map(char => char.charCodeAt(0)));\nvar ivArray = new Uint8Array(decodedIv.split('').map(char => char.charCodeAt(0)));\n\n// Function to decrypt the data\nasync function decryptData(encryptedData, keyArray, ivArray) {\n    // Decode the base64 encoded encrypted data\n    var encryptedArray = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n\n    // Decrypt the data\n    const algorithm = { name: 'AES-CBC', iv: ivArray };\n    const cryptoKey = await crypto.subtle.importKey('raw', keyArray, algorithm, false, ['decrypt']);\n    const decrypted = await crypto.subtle.decrypt(algorithm, cryptoKey, encryptedArray);\n\n    // Convert the decrypted data to a string\n    const decoder = new TextDecoder();\n    return decoder.decode(decrypted);\n}\n\n// Decrypt and use the form data\ndecryptData(encryptedData, keyArray, ivArray).then(decryptedHtml => {\n    document.body.innerHTML = decryptedHtml;\n});