// CustomRatingBehavior.js\n\nType.registerNamespace('Custom.AjaxControlToolkit');\n\nCustom.AjaxControlToolkit.RatingBehavior = function(element) {\n    // Call the base class constructor\n    Custom.AjaxControlToolkit.RatingBehavior.initializeBase(this, [element]);\n};\n\nCustom.AjaxControlToolkit.RatingBehavior.prototype = {\n    initialize: function() {\n        // Call the base class initialize method\n        Custom.AjaxControlToolkit.RatingBehavior.callBaseMethod(this, 'initialize');\n    },\n\n    _onStarClick: function(e) {\n        /// <summary>\n        /// Handler for a star's click event\n        /// </summary>\n        /// <param name="e" type="Sys.UI.DomEvent">\n        /// Event info\n        /// </param>\n        if (this._readOnly) {\n            return;\n        }\n\n        // Always set the current rating, even if it's the same as the previous rating\n        this.set_Rating(this._currentRating);\n    }\n};\n\n// Register the custom behavior\nCustom.AjaxControlToolkit.RatingBehavior.registerClass(\n    'Custom.AjaxControlToolkit.RatingBehavior', \n    AjaxControlToolkit.RatingBehavior\n);\n\n// Override the original behavior with the custom one\nAjaxControlToolkit.RatingBehavior = Custom.AjaxControlToolkit.RatingBehavior;