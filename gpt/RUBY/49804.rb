require 'openssl'\nrequire 'base64'\n\ndef aes_encrypt(plain_text, key)\n  cipher = OpenSSL::Cipher::AES.new(128, :ECB)\n  cipher.encrypt\n  cipher.key = key.ljust(16, "\0")  # Pad key to 16 bytes with null characters\n  padded_text = plain_text.ljust((plain_text.length / 16 + 1) * 16, "\0")  # Pad data to a multiple of 16 bytes with null characters\n  encrypted = cipher.update(padded_text) + cipher.final\n  Base64.encode64(encrypted)  # Encode to Base64 to store in database\nend\n\ndef aes_decrypt(encrypted_text, key)\n  encrypted_text = Base64.decode64(encrypted_text)  # Decode from Base64\n  cipher = OpenSSL::Cipher::AES.new(128, :ECB)\n  cipher.decrypt\n  cipher.key = key.ljust(16, "\0")  # Pad key to 16 bytes with null characters\n  decrypted = cipher.update(encrypted_text) + cipher.final\n  decrypted.rstrip  # Remove any trailing null characters\nend\n\n# Example usage:\nkey = "82pjd12398JKBSDIGUSisahdoahOUASDHsdapdjqwjeASIduAsdh078asdASD087asdADSsdjhA7809asdajhADSs"\nplain_text = "password"\n\nencrypted = aes_encrypt(plain_text, key)\nputs "Encrypted: #{encrypted}"\n\ndecrypted = aes_decrypt(encrypted, key)\nputs "Decrypted: #{decrypted}"