class DocumentsController < ApplicationController\n  respond_to :html, :odf, :odp\n\n  def show\n    @document = Document.find(params[:id])\n\n    respond_to do |format|\n      format.html\n      format.odf { render_odf(@document) }\n      format.odp { render_odp(@document) }\n    end\n  end\n\n  private\n\n  def render_odf(document)\n    template = render_to_string(template: "documents/show.odf.erb", layout: false, locals: { document: document })\n    content_xml = render_to_string(template: "layouts/content.xml.erb", layout: false, locals: { content: template })\n    send_odf_response(content_xml, "application/vnd.oasis.opendocument.text", "document.odt")\n  end\n\n  def render_odp(document)\n    template = render_to_string(template: "documents/show.odp.erb", layout: false, locals: { document: document })\n    content_xml = render_to_string(template: "layouts/content.xml.erb", layout: false, locals: { content: template })\n    send_odf_response(content_xml, "application/vnd.oasis.opendocument.presentation", "presentation.odp")\n  end\n\n  def send_odf_response(content_xml, mime_type, filename)\n    zipfile = Tempfile.new(['document', '.zip'])\n\n    Zip::File.open(zipfile.path, Zip::File::CREATE) do |zip|\n      zip.get_output_stream("content.xml") { |f| f.write(content_xml) }\n      # Copy other necessary files from a template ODF/ODP structure\n      # e.g., zip.add("styles.xml", Rails.root.join("app", "views", "layouts", "styles.xml"))\n    end\n\n    send_file zipfile.path, type: mime_type, filename: filename, disposition: 'inline'\n  ensure\n    zipfile.close\n    zipfile.unlink\n  end\nend