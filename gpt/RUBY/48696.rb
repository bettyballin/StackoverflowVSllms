class Drink\n  attr_accessor :name, :description, :serve_in, :ingredients\n\n  def initialize(name)\n    @name = name\n    @ingredients = {}\n  end\n\n  def description(desc)\n    @description = desc\n  end\n\n  def serve_in(glass)\n    @serve_in = glass\n  end\n\n  def ingredient(amount, item)\n    @ingredients[item] = amount\n  end\n\n  def to_s\n    <<~RECIPE\n      Drink: #{@name}\n      Description: #{@description}\n      Serve in: #{@serve_in}\n      Ingredients:\n      #{ingredients.map { |item, amount| "  #{amount} of #{item}" }.join("\n")}\n    RECIPE\n  end\nend\n\ndef recipe(name, &block)\n  drink = Drink.new(name)\n  drink.instance_eval(&block)\n  puts drink\n  # Here you can add the serial communication logic\n  # to send the commands to the Arduino based on `drink.ingredients`.\nend