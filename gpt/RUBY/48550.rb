require 'net/imap'\n\n# Connect to the IMAP server\nimap = Net::IMAP.new('imap.gmail.com', 993, true)\nimap.login('your-email@gmail.com', 'your-password')\n\n# Select the mailbox (e.g., INBOX)\nimap.select('INBOX')\n\n# Retrieve the highest UID from your database or a file\nlast_seen_uid = get_last_seen_uid_from_database_or_file\n\n# Fetch emails with UIDs greater than the last seen UID\nnew_emails = imap.uid_search(["UID", "#{last_seen_uid + 1}:*"])\n\nnew_emails.each do |uid|\n  email = imap.uid_fetch(uid, 'RFC822')[0].attr['RFC822']\n  # Process and store the email\n  store_email_in_database(email)\n\n  # Update the last seen UID\n  last_seen_uid = uid\n  update_last_seen_uid_in_database_or_file(last_seen_uid)\nend\n\n# Logout and disconnect from the server\nimap.logout\nimap.disconnect\n\ndef get_last_seen_uid_from_database_or_file\n  # Implement this method to retrieve the last seen UID from your database or a file\n  # Return 0 if no UID is found\nend\n\ndef store_email_in_database(email)\n  # Implement this method to store the email in your database\nend\n\ndef update_last_seen_uid_in_database_or_file(uid)\n  # Implement this method to update the last seen UID in your database or a file\nend