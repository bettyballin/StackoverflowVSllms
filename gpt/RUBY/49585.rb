#!/usr/bin/env ruby\n\nrequire 'rubygems'\nrequire 'net/ssh'\nrequire 'net/sftp'\nrequire 'highline/import'\n\nfile = ARGV[ ARGV.index( '-i' ) + 1] if ARGV.include?( '-i' )  \nputs 'No input file specified' unless file\n\nhost = "10.0.0.10"\nuser = "user"\nprod = "new-#{file}"               # product filename (call it <file>-new)\nrpath = "/home/#{user}/.rffmpeg"   # remote computer operating directory\nrfile = "#{rpath}/#{file}"         # remote filename\nrprod = "#{rpath}/#{prod}"         # remote product\ncmd = "ffmpeg -i #{rfile} #{rprod}"# remote command, constructed\n\npass = ask("Password: ") { |q| q.echo = false }  # password from stdin\n\nNet::SSH.start(host, user) do |ssh|\n  ssh.sftp.connect do |sftp|\n    # upload local 'file' to remote 'rfile'\n    sftp.upload!(file, rfile)\n\n    # run remote command 'cmd' to produce 'rprod'\n    ssh.open_channel do |channel|\n      channel.exec(cmd) do |ch, success|\n        raise "could not execute command" unless success\n\n        # Capture stdout\n        channel.on_data do |ch, data|\n          print data\n        end\n\n        # Capture stderr\n        channel.on_extended_data do |ch, type, data|\n          print data\n        end\n\n        channel.on_close do\n          puts "Command finished"\n        end\n      end\n    end\n\n    ssh.loop\n\n    # download remote 'rprod' to local 'prod'\n    sftp.download!(rprod, prod)\n  end\nend