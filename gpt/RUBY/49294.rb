class Content\n  attr_reader :a, :b\n\n  def initialize\n    @a = 1\n    @b = "plop"\n  end\n\n  def set(&block)\n    extend(Setter)\n    instance_eval(&block)\n  ensure\n    unextend(Setter)\n  end\n\n  module Setter\n    def a(value)\n      @a = value\n    end\n    def b(value)\n      @b = value\n    end\n  end\n\n  private\n\n  def unextend(mod)\n    singleton_class.ancestors.each do |ancestor|\n      if ancestor == mod\n        singleton_class.send(:remove_method, :a, :b)\n        break\n      end\n    end\n  end\nend\n\ncontent = Content.new\ncontent.set do\n  a 2\n  b "yeah!"\nend\n\nputs content.a # should return 2\nputs content.b # should return "yeah!"