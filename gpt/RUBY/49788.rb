module SessionsHelper\n  # Logs in the given user\n  def log_in(user)\n    session[:user_id] = user.id\n  end\n\n  # Remembers a user in a persistent session\n  def remember(user)\n    user.remember\n    cookies.permanent.signed[:user_id] = user.id\n    cookies.permanent[:remember_token] = user.remember_token\n  end\n\n  # Returns the current logged-in user (if any)\n  def current_user\n    if (user_id = session[:user_id])\n      @current_user ||= User.find_by(id: user_id)\n    elsif (user_id = cookies.signed[:user_id])\n      user = User.find_by(id: user_id)\n      if user && user.authenticated?(cookies[:remember_token])\n        log_in(user)\n        @current_user = user\n      end\n    end\n  end\n\n  # Forgets a persistent session\n  def forget(user)\n    user.forget\n    cookies.delete(:user_id)\n    cookies.delete(:remember_token)\n  end\n\n  # Logs out the current user\n  def log_out\n    forget(current_user)\n    session.delete(:user_id)\n    @current_user = nil\n  end\nend