module Finance\n  module CompoundInterest\n    def future_value(present_value, interest, length)\n      interest /= 100 if interest >= 1 # if given in percent 1..100\n      present_value * ((1 + interest)**length)\n    end\n    module_function :future_value\n  end\n\n  class Mortgage\n    attr_accessor :amount, :rate, :years, :payment, :interest_paid\n    def initialize(amount, rate, years)\n      @amount, @rate, @years = amount, rate, years\n\n      i = rate / 12\n      n = years * 12\n      m = (1 + i)**n\n\n      @payment = ((i * m) / (m - 1)) * amount\n      @interest_paid = @payment * n - amount\n    end\n  end\nend