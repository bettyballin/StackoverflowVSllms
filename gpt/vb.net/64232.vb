Public Class MyClass\n    Private _reasonCode As String\n    Public Property ReasonCode() As String\n        Get\n            Return _reasonCode\n        End Get\n        Set(ByVal value As String)\n            _reasonCode = value\n        End Set\n    End Property\n\n    Public Shared ReadOnly ReasonCodeMap As New Dictionary(Of String, String) From {\n        {"ServiceNotCovered", "SNCV"},\n        {"MemberNotEligible", "MNEL"}\n        ' Add more mappings as needed\n    }\n\n    Public Shared Function GetReasonCode(ByVal key As String) As String\n        If ReasonCodeMap.ContainsKey(key) Then\n            Return ReasonCodeMap(key)\n        Else\n            Throw New KeyNotFoundException("The given key was not present in the dictionary.")\n        End If\n    End Function\nEnd Class\n\n'Calling method\nPublic Sub ProcessInput()\n    Dim obj As New MyClass()\n    obj.ReasonCode = "SNCV"\n    \n    Select Case obj.ReasonCode\n        Case MyClass.GetReasonCode("ServiceNotCovered")\n            ' Do one thing\n        Case MyClass.GetReasonCode("MemberNotEligible")\n            ' Do something different\n        ' Other cases and default\n    End Select\nEnd Sub