Imports System.Diagnostics\n\nDim timePiece As New Stopwatch()\nDim sortCategory As String = "MergeSortCategory"\nDim elapsedCounterName As String = "ElapsedTime"\nDim avgCounterName As String = "AvgElapsedTime"\nDim avgCounterBaseName As String = "AvgElapsedTimeBase"\n\n' Create the category and counters if they don't exist\nIf Not PerformanceCounterCategory.Exists(sortCategory) Then\n    Dim counters As New CounterCreationDataCollection()\n\n    counters.Add(New CounterCreationData(elapsedCounterName, "Elapsed time for merge sort", PerformanceCounterType.NumberOfItems32))\n    counters.Add(New CounterCreationData(avgCounterName, "Average elapsed time for merge sort", PerformanceCounterType.AverageTimer32))\n    counters.Add(New CounterCreationData(avgCounterBaseName, "Base counter for average elapsed time", PerformanceCounterType.AverageBase))\n\n    PerformanceCounterCategory.Create(sortCategory, "Category for merge sort performance counters", PerformanceCounterCategoryType.SingleInstance, counters)\nEnd If\n\n' Create the performance counters\nDim ElapsedCounter As New PerformanceCounter(sortCategory, elapsedCounterName, False)\nDim AvgCounter As New PerformanceCounter(sortCategory, avgCounterName, False)\nDim AvgCounterBase As New PerformanceCounter(sortCategory, avgCounterBaseName, False)\n\ntimePiece.Start()\nMergeSort()\ntimePiece.Stop()\n\nElapsedCounter.RawValue = timePiece.ElapsedMilliseconds\nAvgCounter.IncrementBy(timePiece.ElapsedTicks) ' Note: Use ElapsedTicks for AverageTimer32\nAvgCounterBase.Increment()