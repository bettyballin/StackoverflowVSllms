Imports System.Xml.Serialization\nImports System.IO\n\n' Define your class with Xml attributes\n<XmlRoot("Person")>\nPublic Class Person\n    <XmlElement("FirstName")>\n    Public Property FirstName As String\n\n    <XmlElement("LastName")>\n    Public Property LastName As String\n\n    <XmlElement("Age")>\n    Public Property Age As Integer\n\n    ' Default constructor is required for serialization\n    Public Sub New()\n    End Sub\n\n    ' A parameterized constructor can be used for easy object creation\n    Public Sub New(firstName As String, lastName As String, age As Integer)\n        Me.FirstName = firstName\n        Me.LastName = lastName\n        Me.Age = age\n    End Sub\nEnd Class\n\n' Serialization method\nPublic Sub SerializeObject(ByVal filePath As String, ByVal obj As Object)\n    Dim serializer As New XmlSerializer(obj.GetType())\n\n    Using writer As New StreamWriter(filePath)\n        serializer.Serialize(writer, obj)\n    End Using\nEnd Sub\n\n' Deserialization method\nPublic Function DeserializeObject(Of T)(ByVal filePath As String) As T\n    Dim serializer As New XmlSerializer(GetType(T))\n\n    Using reader As New StreamReader(filePath)\n        Return CType(serializer.Deserialize(reader), T)\n    End Using\nEnd Function\n\n' Example usage\nSub Main()\n    Dim person As New Person("John", "Doe", 30)\n    Dim filePath As String = "person.xml"\n\n    ' Serialize the object to XML\n    SerializeObject(filePath, person)\n\n    ' Deserialize the object from XML\n    Dim deserializedPerson As Person = DeserializeObject(Of Person)(filePath)\n\n    ' Display deserialized data\n    Console.WriteLine($"First Name: {deserializedPerson.FirstName}")\n    Console.WriteLine($"Last Name: {deserializedPerson.LastName}")\n    Console.WriteLine($"Age: {deserializedPerson.Age}")\nEnd Sub