Imports System.IO\n\nModule Module1\n    Sub Main()\n        Dim filePath As String = "YourFilePathHere"\n        Dim fileSize As Long\n        Dim jumpPercentage As Double = 0.01\n        Dim bufferSize As Integer = 4096 ' Adjust based on expected line lengths\n\n        Using fs As New FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)\n            fileSize = fs.Length\n\n            Using sr As New StreamReader(fs)\n                For percent As Double = 0 To 0.99 Step jumpPercentage\n                    Dim position As Long = CLng(fileSize * percent)\n                    fs.Seek(position, SeekOrigin.Begin)\n                    \n                    ' Read a chunk of data to find the start of the next line\n                    Dim buffer(bufferSize - 1) As Char\n                    sr.ReadBlock(buffer, 0, bufferSize)\n                    Dim chunk As String = New String(buffer)\n                    \n                    ' Find the end of the current line\n                    Dim newLineIndex As Integer = chunk.IndexOf(Environment.NewLine)\n                    \n                    If newLineIndex >= 0 Then\n                        fs.Seek(position + newLineIndex + Environment.NewLine.Length, SeekOrigin.Begin)\n                        Dim line As String = sr.ReadLine()\n                        \n                        If line IsNot Nothing Then\n                            ' Process the line to check your criteria\n                            Dim V() As String = line.Split(","c)\n                            Dim MessageTime As Date = DateTime.Parse(V(3) & " " & V(4).Substring(0, 8))\n                            Dim Diff As Integer = DateDiff(DateInterval.Minute, MessageTime, CDate(RequestedStartTime))\n                            If Diff >= 2 Then\n                                Exit For\n                            End If\n                        End If\n                    End If\n                Next\n            End Using\n        End Using\n    End Sub\nEnd Module