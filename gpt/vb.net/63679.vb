Imports System.Net\n   Imports System.Web.Http\n\n   Public Class ProductsController\n       Inherits ApiController\n\n       Private Shared ReadOnly Products As List(Of Product) = New List(Of Product) From {\n           New Product() With {.Id = 1, .Name = "Product1", .Price = 10.0D},\n           New Product() With {.Id = 2, .Name = "Product2", .Price = 20.0D}\n       }\n\n       ' GET: api/products\n       Public Function GetProducts() As IEnumerable(Of Product)\n           Return Products\n       End Function\n\n       ' GET: api/products/1\n       Public Function GetProduct(id As Integer) As IHttpActionResult\n           Dim product = Products.FirstOrDefault(Function(p) p.Id = id)\n           If product Is Nothing Then\n               Return NotFound()\n           End If\n           Return Ok(product)\n       End Function\n\n       ' POST: api/products\n       Public Function PostProduct(<FromBody()> ByVal product As Product) As IHttpActionResult\n           If Not ModelState.IsValid Then\n               Return BadRequest(ModelState)\n           End If\n           product.Id = Products.Max(Function(p) p.Id) + 1\n           Products.Add(product)\n           Return CreatedAtRoute("DefaultApi", New With {.id = product.Id}, product)\n       End Function\n\n       ' PUT: api/products/1\n       Public Function PutProduct(id As Integer, <FromBody()> ByVal product As Product) As IHttpActionResult\n           If Not ModelState.IsValid Then\n               Return BadRequest(ModelState)\n           End If\n           Dim existingProduct = Products.FirstOrDefault(Function(p) p.Id = id)\n           If existingProduct Is Nothing Then\n               Return NotFound()\n           End If\n           existingProduct.Name = product.Name\n           existingProduct.Price = product.Price\n           Return StatusCode(HttpStatusCode.NoContent)\n       End Function\n\n       ' DELETE: api/products/1\n       Public Function DeleteProduct(id As Integer) As IHttpActionResult\n           Dim product = Products.FirstOrDefault(Function(p) p.Id = id)\n           If product Is Nothing Then\n               Return NotFound()\n           End If\n           Products.Remove(product)\n           Return Ok(product)\n       End Function\n   End Class