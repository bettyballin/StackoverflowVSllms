Imports System.Xml.Serialization\n\n<Serializable>\nPublic Class Pair(Of T1, T2)\n    Implements IXmlSerializable\n\n    Public Property First As T1\n    Public Property Second As T2\n\n    Public Sub New()\n    End Sub\n\n    Public Sub New(first As T1, second As T2)\n        Me.First = first\n        Me.Second = second\n    End Sub\n\n    Public Function GetSchema() As XmlSchema Implements IXmlSerializable.GetSchema\n        Return Nothing\n    End Function\n\n    Public Sub ReadXml(reader As XmlReader) Implements IXmlSerializable.ReadXml\n        reader.ReadStartElement()\n        First = CType(TypeDescriptor.GetConverter(GetType(T1)).ConvertFromString(reader.ReadElementContentAsString()), T1)\n        Dim typeAttribute = reader.GetAttribute("xsi:type")\n        If typeAttribute IsNot Nothing Then\n            Dim type = Type.GetType(typeAttribute)\n            Second = CType(TypeDescriptor.GetConverter(type).ConvertFromString(reader.ReadElementContentAsString()), T2)\n        Else\n            Second = CType(TypeDescriptor.GetConverter(GetType(T2)).ConvertFromString(reader.ReadElementContentAsString()), T2)\n        End If\n        reader.ReadEndElement()\n    End Sub\n\n    Public Sub WriteXml(writer As XmlWriter) Implements IXmlSerializable.WriteXml\n        writer.WriteElementString("First", TypeDescriptor.GetConverter(GetType(T1)).ConvertToString(First))\n        writer.WriteStartElement("Second")\n        Dim type = Second.GetType()\n        writer.WriteAttributeString("xsi", "type", Nothing, type.AssemblyQualifiedName)\n        writer.WriteString(TypeDescriptor.GetConverter(type).ConvertToString(Second))\n        writer.WriteEndElement()\n    End Sub\nEnd Class