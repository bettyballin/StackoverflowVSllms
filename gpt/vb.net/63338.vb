Imports System\nImports System.Security.Cryptography\nImports System.Text\n\nNamespace security\n    Public Class AES\n        Private aes As New AesCryptoServiceProvider()\n        Private utf8 As New UTF8Encoding()\n\n        Private keyValue As Byte()\n        Private iVValue As Byte()\n\n        Public Property Key() As Byte()\n            Get\n                Return keyValue\n            End Get\n            Set(ByVal value As Byte())\n                keyValue = value\n            End Set\n        End Property\n\n        Public Property IV() As Byte()\n            Get\n                Return iVValue\n            End Get\n            Set(ByVal value As Byte())\n                iVValue = value\n            End Set\n        End Property\n\n        Public Sub New(ByVal key As Byte(), ByVal iV As Byte())\n            Me.keyValue = key\n            Me.iVValue = iV\n            aes.Key = keyValue\n            aes.IV = iVValue\n        End Sub\n\n        Public Function ByteDecrypt(ByVal bytes As Byte()) As String\n            Dim output As Byte()\n            output = Transform(bytes, aes.CreateDecryptor(Me.keyValue, Me.iVValue))\n            Return utf8.GetString(output)\n        End Function\n\n        Public Function ByteEncrypt(ByVal bytes As Byte()) As Byte()\n            Return Transform(bytes, aes.CreateEncryptor(Me.keyValue, Me.iVValue))\n        End Function\n\n        Public Function StringDecrypt(ByVal text As String) As String\n            Dim input As Byte() = Convert.FromBase64String(text)\n            Dim output As Byte() = Transform(input, aes.CreateDecryptor(Me.keyValue, Me.iVValue))\n            Return utf8.GetString(output)\n        End Function\n\n        Public Function StringEncrypt(ByVal text As String) As String\n            Dim input As Byte() = utf8.GetBytes(text)\n            Dim output As Byte() = Transform(input, aes.CreateEncryptor(Me.keyValue, Me.iVValue))\n            Return Convert.ToBase64String(output)\n        End Function\n\n        Public Function StringEncryptByte(ByVal text As String) As Byte()\n            Dim input As Byte() = utf8.GetBytes(text)\n            Dim output As Byte() = Transform(input, aes.CreateEncryptor(Me.keyValue, Me.iVValue))\n            Return output\n        End Function\n\n        Private Function Transform(ByVal input As Byte(), ByVal transform As ICryptoTransform) As Byte()\n            Dim output As Byte()\n            Using ms As New IO.MemoryStream()\n                Using cs As New CryptoStream(ms, transform, CryptoStreamMode.Write)\n                    cs.Write(input, 0, input.Length)\n                    cs.FlushFinalBlock()\n                    output = ms.ToArray()\n                End Using\n            End Using\n            Return output\n        End Function\n    End Class\nEnd Namespace