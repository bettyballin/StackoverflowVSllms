Imports System.ComponentModel\n\n   Public Enum MyEnum\n       <TypeConverter(GetType(LocalizedEnumConverter))>\n       ItemA\n       <TypeConverter(GetType(LocalizedEnumConverter))>\n       ItemB\n   End Enum\n\n   Public Class LocalizedEnumConverter\n       Inherits EnumConverter\n\n       Public Sub New(type As Type)\n           MyBase.New(type)\n       End Sub\n\n       ' Implement your localization logic here\n       Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As Globalization.CultureInfo, value As Object, destinationType As Type) As Object\n           If destinationType Is GetType(String) Then\n               Select Case CType(value, MyEnum)\n                   Case MyEnum.ItemA\n                       Return "Localized Item A"\n                   Case MyEnum.ItemB\n                       Return "Localized Item B"\n               End Select\n           End If\n           Return MyBase.ConvertTo(context, culture, value, destinationType)\n       End Function\n   End Class