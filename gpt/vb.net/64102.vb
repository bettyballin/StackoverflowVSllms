Imports System.Reflection\n\nModule Module1\n    Sub Main()\n        ' Late-binding to create an instance of Word application\n        Dim wordApp As Object = Activator.CreateInstance(Type.GetTypeFromProgID("Word.Application"))\n\n        ' Making Word visible for demonstration purposes\n        wordApp.Visible = True\n\n        ' Hook up the DocumentBeforeSave event\n        Dim wordAppType As Type = wordApp.GetType()\n        Dim eventInfo As EventInfo = wordAppType.GetEvent("DocumentBeforeSave")\n        Dim eventHandlerType As Type = eventInfo.EventHandlerType\n        Dim eventHandler As [Delegate] = [Delegate].CreateDelegate(eventHandlerType, Nothing, GetType(Module1).GetMethod("WordDocumentBeforeSave"))\n\n        ' Add the event handler dynamically\n        Dim addHandlerMethod As MethodInfo = eventInfo.GetAddMethod()\n        addHandlerMethod.Invoke(wordApp, New Object() {eventHandler})\n\n        ' Keep the console open\n        Console.WriteLine("Press any key to exit...")\n        Console.ReadKey()\n\n        ' Clean up\n        wordApp.Quit()\n    End Sub\n\n    ' Event handler method\n    Public Sub WordDocumentBeforeSave(ByVal doc As Object, ByRef saveAsUI As Boolean, ByRef cancel As Boolean)\n        Console.WriteLine("Document is about to be saved.")\n        ' You can add your custom code here\n    End Sub\nEnd Module