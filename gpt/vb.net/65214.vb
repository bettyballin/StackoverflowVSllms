Public Class ImpersonationHelper\n    <DllImport("advapi32.dll", SetLastError:=True)>\n    Private Shared Function LogonUser(username As String, domain As String, password As String, logonType As Integer, logonProvider As Integer, ByRef tokenHandle As IntPtr) As Boolean\n    End Function\n\n    <DllImport("kernel32.dll", CharSet:=CharSet.Auto)>\n    Private Shared Function CloseHandle(handle As IntPtr) As Boolean\n    End Function\n\n    Private Const LOGON32_LOGON_INTERACTIVE As Integer = 2\n    Private Const LOGON32_PROVIDER_DEFAULT As Integer = 0\n\n    Public Shared Function ImpersonateUser(username As String, domain As String, password As String) As WindowsImpersonationContext\n        Dim tokenHandle As IntPtr = IntPtr.Zero\n\n        If LogonUser(username, domain, password, LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, tokenHandle) Then\n            Dim identity As New WindowsIdentity(tokenHandle)\n            Dim context As WindowsImpersonationContext = identity.Impersonate()\n            CloseHandle(tokenHandle)\n            Return context\n        Else\n            Throw New System.ComponentModel.Win32Exception(Marshal.GetLastWin32Error())\n        End If\n    End Function\nEnd Class