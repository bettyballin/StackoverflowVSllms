' Example of refactoring code to be compatible with .Net 1.1\n\n' .Net 2.0 code using generics\n' Dim list As List(Of String) = New List(Of String)()\n\n' Refactored .Net 1.1 code\nDim list As ArrayList = New ArrayList()\n\n' If using a feature like TryParse (introduced in .Net 2.0), replace it with appropriate .Net 1.1 method\nDim result As Integer\nDim isSuccess As Boolean = False\n\nTry\n    result = Integer.Parse("123")\n    isSuccess = True\nCatch ex As Exception\n    isSuccess = False\nEnd Try\n\n' Example of using SharpZipLib in .Net 1.1\nImports ICSharpCode.SharpZipLib.Zip\n\nPublic Sub CreateZip(filePath As String, zipPath As String)\n    Dim zipOutputStream As ZipOutputStream = New ZipOutputStream(File.Create(zipPath))\n    zipOutputStream.SetLevel(9) ' Compression level\n\n    Dim buffer(4096) As Byte\n\n    Dim entry As ZipEntry = New ZipEntry(Path.GetFileName(filePath))\n    entry.DateTime = DateTime.Now\n    zipOutputStream.PutNextEntry(entry)\n\n    Using fs As FileStream = File.OpenRead(filePath)\n        Dim sourceBytes As Integer\n        Do\n            sourceBytes = fs.Read(buffer, 0, buffer.Length)\n            zipOutputStream.Write(buffer, 0, sourceBytes)\n        Loop While sourceBytes > 0\n    End Using\n\n    zipOutputStream.Finish()\n    zipOutputStream.Close()\nEnd Sub