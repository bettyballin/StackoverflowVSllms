Public Class Form1\n\n    Private _InitialStyle As Integer\n\n    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load\n        Form2.Show()\n\n        ' Grab the Extended Style information for this window and store it.\n        _InitialStyle = User32Wrappers.GetWindowLong(Me.Handle, User32Wrappers.GWL.ExStyle)\n\n        ' Set this window to Transparent\n        SetFormToTransparent()\n\n        ' Just for giggles, set this window to stay on top of all others so we can see what's happening.\n        Me.TopMost = True\n\n        ' Initialize the TrackBar\n        trackBarOpacity.Minimum = 0\n        trackBarOpacity.Maximum = 100\n        trackBarOpacity.Value = 40 ' default value corresponding to 40% opacity\n        AddHandler trackBarOpacity.ValueChanged, AddressOf trackBarOpacity_ValueChanged\n    End Sub\n\n    Private Sub SetFormToTransparent()\n        ' This creates a new Extended Style for our window, which takes effect\n        ' immediately upon being set, that combines the initial style of our window\n        ' (saved in Form.Load) and adds the ability to be Transparent to the mouse.\n        ' Both Layered and Transparent must be turned on for this to work AND have\n        ' the window render properly!\n        User32Wrappers.SetWindowLong(Me.Handle, User32Wrappers.GWL.ExStyle, _InitialStyle Or User32Wrappers.WS_EX.Layered Or User32Wrappers.WS_EX.Transparent)\n\n        ' Set the initial Alpha for the window.\n        UpdateOpacity(trackBarOpacity.Value)\n    End Sub\n\n    Private Sub SetFormToOpaque()\n        ' Turn off the Transparent Extended Style.\n        User32Wrappers.SetWindowLong(Me.Handle, User32Wrappers.GWL.ExStyle, _InitialStyle Or User32Wrappers.WS_EX.Layered)\n\n        ' Set the Alpha back to 100% opaque.\n        User32Wrappers.SetLayeredWindowAttributes(Me.Handle, 0, 255, User32Wrappers.LWA.Alpha)\n    End Sub\n\n    Private Sub trackBarOpacity_ValueChanged(ByVal sender As Object, ByVal e As System.EventArgs)\n        UpdateOpacity(trackBarOpacity.Value)\n    End Sub\n\n    Private Sub UpdateOpacity(ByVal opacityValue As Integer)\n        ' Convert TrackBar value (0 to 100) to alpha value (0 to 255)\n        Dim alpha As Byte = CByte(255 * (opacityValue / 100.0))\n        User32Wrappers.SetLayeredWindowAttributes(Me.Handle, 0, alpha, User32Wrappers.LWA.Alpha)\n    End Sub\n\n    Public Class User32Wrappers\n        Public Enum GWL As Integer\n            ExStyle = -20\n        End Enum\n\n        Public Enum WS_EX As Integer\n            Transparent = &H20\n            Layered = &H80000\n        End Enum\n\n        Public Enum LWA As Integer\n            ColorKey = &H1\n            Alpha = &H2\n        End Enum\n\n        Public Shared Function GetWindowLong(ByVal hWnd As IntPtr, ByVal nIndex As GWL) As Integer\n        End Function\n\n        Public Shared Function SetWindowLong(ByVal hWnd As IntPtr, ByVal nIndex As GWL, ByVal dwNewLong As WS_EX) As Integer\n        End Function\n\n        Public Shared Function SetLayeredWindowAttributes(ByVal hWnd As IntPtr, ByVal crKey As Integer, ByVal alpha As Byte, ByVal dwFlags As LWA) As Boolean\n        End Function\n    End Class\n\n    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)\n        End\n    End Sub\nEnd Class