Imports System.Linq.Expressions\n\nPublic Function BuildOrQuery(Of T)(query As IQueryable(Of T), items As List(Of (a As Integer, b As Integer))) As IQueryable(Of T)\n    Dim parameter As ParameterExpression = Expression.Parameter(GetType(T), "x")\n    Dim combinedExpression As Expression = Nothing\n\n    For Each item In items\n        Dim thisProperty As MemberExpression = Expression.Property(parameter, "This") ' Replace "This" with the actual property name\n        Dim thatProperty As MemberExpression = Expression.Property(parameter, "That") ' Replace "That" with the actual property name\n\n        Dim thisCondition As BinaryExpression = Expression.Equal(thisProperty, Expression.Constant(item.a))\n        Dim thatCondition As BinaryExpression = Expression.Equal(thatProperty, Expression.Constant(item.b))\n\n        Dim andExpression As BinaryExpression = Expression.AndAlso(thisCondition, thatCondition)\n\n        If combinedExpression Is Nothing Then\n            combinedExpression = andExpression\n        Else\n            combinedExpression = Expression.OrElse(combinedExpression, andExpression)\n        End If\n    Next\n\n    If combinedExpression Is Nothing Then\n        Return query\n    End If\n\n    Dim lambda As Expression(Of Func(Of T, Boolean)) = Expression.Lambda(Of Func(Of T, Boolean))(combinedExpression, parameter)\n    Return query.Where(lambda)\nEnd Functio