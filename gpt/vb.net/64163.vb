Imports System.ComponentModel\nImports System.Drawing\nImports System.Reflection\n\nPublic Sub invertImageBK(ByVal image As Bitmap)\n    Dim snxl As System.ComponentModel.BackgroundWorker = createBW()\n    snxl.RunWorkerAsync(New ImageProperties(image.Clone(), "invertImage", Nothing))\nEnd Sub\n\nPublic Sub grayscaleImageBK(ByVal image As Bitmap)\n    Dim snxl As System.ComponentModel.BackgroundWorker = createBW()\n    snxl.RunWorkerAsync(New ImageProperties(image.Clone(), "grayscaleImage", Nothing))\nEnd Sub\n\nPublic Sub colorizeImageBK(ByVal image As Bitmap, ByVal colorize As Color)\n    Dim snxl As System.ComponentModel.BackgroundWorker = createBW()\n    snxl.RunWorkerAsync(New ImageProperties(image.Clone(), "colorizeImage", colorize))\nEnd Sub\n\nPrivate Sub ConvertImage(ByVal sender As Object, ByVal e As DoWorkEventArgs)\n    Dim props As ImageProperties = CType(e.Argument, ImageProperties)\n    Dim result As Bitmap = Nothing\n\n    ' Use reflection to find and invoke the method\n    Dim method As MethodInfo = Me.GetType().GetMethod(props.filt, BindingFlags.NonPublic Or BindingFlags.Instance)\n    \n    If method IsNot Nothing Then\n        If props.extra Is Nothing Then\n            result = CType(method.Invoke(Me, New Object() {props.img}), Bitmap)\n        Else\n            result = CType(method.Invoke(Me, New Object() {props.img, CType(props.extra, Color)}), Bitmap)\n        End If\n    End If\n\n    ' You can now raise an event or handle the result as needed\nEnd Sub\n\nPrivate Delegate Function onearg(ByVal image As Bitmap) As Bitmap\nPrivate Delegate Function twoarg(ByVal image As Bitmap, ByVal altcolor As Color) As Bitmap\n\nPrivate Function createBW() As BackgroundWorker\n    Dim cbs As New BackgroundWorker\n    AddHandler cbs.DoWork, AddressOf ConvertImage\n    Return cbs\nEnd Function\n\nPublic Structure ImageProperties\n    Dim img As Bitmap\n    Dim filt As String\n    Dim extra As Object\n\n    Public Sub New(ByVal image As Bitmap, ByVal filter As String, ByVal extra As Object)\n        img = image.Clone()\n        filt = filter\n        Me.extra = extra\n    End Sub\nEnd Structure\n\n' Sample methods for demonstration purposes\nPrivate Function invertImage(ByVal image As Bitmap) As Bitmap\n    ' Implement your invert image logic here\n    Return image\nEnd Function\n\nPrivate Function grayscaleImage(ByVal image As Bitmap) As Bitmap\n    ' Implement your grayscale image logic here\n    Return image\nEnd Function\n\nPrivate Function colorizeImage(ByVal image As Bitmap, ByVal altcolor As Color) As Bitmap\n    ' Implement your colorize image logic here\n    Return image\nEnd Functio