Imports System.Runtime.InteropServices\n\nPublic Module AlertManModule\n\n    ' Define the delegate that matches the unmanaged function callback signature\n    <UnmanagedFunctionPointer(CallingConvention.Cdecl)>\n    Public Delegate Sub AlertManCallbackDel(ByVal data As IntPtr)\n\n    ' Import the unmanaged function, specify the calling convention\n    <DllImport("AlertMan.dll", CallingConvention:=CallingConvention.Cdecl)>\n    Public Function AlertManC(ByVal CallbackAddr As AlertManCallbackDel) As Integer\n    End Function\n\n    ' Define the callback function\n    Public Sub AlertManCallback(ByVal data As IntPtr)\n        ' Your callback logic here\n    End Sub\n\n    Public Sub Main()\n        ' Create the delegate instance\n        Dim mydel As New AlertManCallbackDel(AddressOf AlertManCallback)\n        \n        ' Ensure the delegate is not garbage collected by keeping a reference\n        GC.KeepAlive(mydel)\n\n        ' Call the unmanaged function\n        Dim IStat As Integer = AlertManC(mydel)\n        \n        ' Handle the return status if necessary\n        Console.WriteLine("Status: " & IStat)\n    End Sub\n\nEnd Module