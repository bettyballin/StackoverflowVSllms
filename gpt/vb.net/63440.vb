Imports System.Reflection\n\n' Define a custom attribute\n<AttributeUsage(AttributeTargets.Method)>\nPublic Class CustomMethodAttribute\n    Inherits Attribute\nEnd Class\n\nPrivate Sub LoadFunctions()\n    Dim thisClass As Type = Me.GetType()\n    For Each method As MethodInfo In thisClass.GetMethods(BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic Or BindingFlags.DeclaredOnly)\n        ' Check if method has the custom attribute\n        If method.GetCustomAttributes(GetType(CustomMethodAttribute), False).Length > 0 Then\n            ' Check if the method is a function or a procedure\n            If method.ReturnType = GetType(Void) Then\n                ' It is a procedure\n                Me.ddlCodeSamples.Items.Add(method.Name & " (Procedure)")\n            Else\n                ' It is a function\n                Me.ddlCodeSamples.Items.Add(method.Name & " (Function)")\n            End If\n        End If\n    Next\nEnd Sub