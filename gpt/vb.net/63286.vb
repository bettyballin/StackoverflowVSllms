Private Declare Function CreateProcessA Lib "kernel32" (ByVal lpApplicationName As Long, ByVal lpCommandLine As String, ByVal lpProcessAttributes As Long, ByVal lpThreadAttributes As Long, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As Long, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long\nPrivate Declare Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long\nPrivate Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long\nPrivate Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long\n\nPrivate Type STARTUPINFO\n    cb As Long\n    lpReserved As Long\n    lpDesktop As Long\n    lpTitle As Long\n    dwX As Long\n    dwY As Long\n    dwXSize As Long\n    dwYSize As Long\n    dwXCountChars As Long\n    dwYCountChars As Long\n    dwFillAttribute As Long\n    dwFlags As Long\n    wShowWindow As Integer\n    cbReserved2 As Integer\n    lpReserved2 As Long\n    hStdInput As Long\n    hStdOutput As Long\n    hStdError As Long\nEnd Type\n\nPrivate Type PROCESS_INFORMATION\n    hProcess As Long\n    hThread As Long\n    dwProcessId As Long\n    dwThreadId As Long\nEnd Type\n\nPrivate Const INFINITE = &HFFFF\n\nPublic Function ExecCmd(cmdline As String) As Long\n    Dim proc As PROCESS_INFORMATION\n    Dim start As STARTUPINFO\n    Dim ret As Long\n    Dim exitCode As Long\n\n    start.cb = Len(start)\n\n    ' Initialize the STARTUPINFO structure\n    ret = CreateProcessA(0&, cmdline, 0&, 0&, 1&, 0&, 0&, 0&, start, proc)\n\n    ' Check if the process was created successfully\n    If ret <> 0 Then\n        ' Wait for the process to complete\n        ret = WaitForSingleObject(proc.hProcess, INFINITE)\n\n        ' Retrieve the exit code\n        ret = GetExitCodeProcess(proc.hProcess, exitCode)\n\n        ' Close the process and thread handles\n        CloseHandle(proc.hThread)\n        CloseHandle(proc.hProcess)\n\n        ' Return the exit code\n        ExecCmd = exitCode\n    Else\n        ' Process creation failed\n        ExecCmd = -1\n    End If\nEnd Functio