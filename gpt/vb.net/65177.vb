Public Function UserExists(ByVal userName As String) As DataTable\n    ' Validate input parameter\n    If String.IsNullOrEmpty(userName) Then\n        Throw New ArgumentException("userName cannot be null or empty", NameOf(userName))\n    End If\n\n    ' Initialize variables\n    Dim dt As DataTable = Nothing\n    Dim arSqlParameters(0) As SqlParameter\n\n    Try\n        ' Set up SQL parameters\n        arSqlParameters(0) = New SqlParameter("@UserName", SqlDbType.NVarChar, 50)\n        arSqlParameters(0).Value = userName\n        \n        ' Execute the stored procedure\n        dt = ABC.APP.DAL.DALHelper.ExecuteDatatable(ConnectionString, CommandType.StoredProcedure, "dbo.aspnet_sprGetUserByUsername", arSqlParameters)\n        \n    Catch ex As SqlException\n        ' Log SQL exceptions\n        LogError(ex)\n        ' Optionally rethrow or handle specific to business logic\n        Throw New ApplicationException("An error occurred while accessing the database.", ex)\n    Catch ex As Exception\n        ' Log general exceptions\n        LogError(ex)\n        ' Optionally rethrow or handle specific to business logic\n        Throw New ApplicationException("An unexpected error occurred.", ex)\n    End Try\n\n    ' Return the DataTable\n    Return dt\nEnd Function\n\nPrivate Sub LogError(ByVal ex As Exception)\n    ' Implement your logging mechanism here\n    ' This can be logging to a file, event log, etc.\n    ' Example: File.AppendAllText("log.txt", ex.ToString())\nEnd Sub