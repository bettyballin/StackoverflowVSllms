Imports System.Reflection\n\nPublic Delegate Sub myDelegate()\n\nPublic Sub myDelegate_Implementation1()\n    'Some code\nEnd Sub\n\nPublic Sub myDelegate_Implementation2()\n    'Some code\nEnd Sub\n\nPublic Sub InvokeMethod(ByVal methodName As String)\n    Dim method As MethodInfo = Me.GetType().GetMethod(methodName, BindingFlags.Instance Or BindingFlags.NonPublic Or BindingFlags.Public)\n    If method IsNot Nothing Then\n        Dim func As myDelegate = CType([Delegate].CreateDelegate(GetType(myDelegate), Me, method), myDelegate)\n        func.Invoke()\n    Else\n        Throw New ArgumentException("Method not found")\n    End If\nEnd Sub