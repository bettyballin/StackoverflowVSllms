Public Class SomeClass\n    Implements IDisposable\n\n    Private disposed As Boolean = False ' To detect redundant calls.\n\n    ' Example of a managed resource.\n    Private resource As New System.IO.StreamReader("file.txt")\n\n    ' Public implementation of Dispose pattern callable by consumers.\n    Public Sub Dispose() Implements IDisposable.Dispose\n        Dispose(True)\n        ' Suppress finalization if Dispose has been called explicitly.\n        GC.SuppressFinalize(Me)\n    End Sub\n\n    ' Protected implementation of Dispose pattern.\n    Protected Overridable Sub Dispose(disposing As Boolean)\n        If disposed Then Return\n\n        If disposing Then\n            ' Free any other managed objects here.\n            resource.Dispose()\n        End If\n\n        ' Free any unmanaged resources here.\n\n        disposed = True\n    End Sub\n\n    ' Finalizer to handle the release of unmanaged resources.\n    Protected Overrides Sub Finalize()\n        ' Do not change this code. Put cleanup code in Dispose(disposing As Boolean) above.\n        Dispose(False)\n        MyBase.Finalize()\n    End Sub\n\n    ' Example method that uses resources.\n    Public Sub SomeMethod()\n        ' Use resource.\n    End Sub\nEnd Class