Imports System.Xml\nImports System.Xml.Serialization\nImports System.IO\n\nPublic Class MyObject\n    ' Define your object fields here\n    Public Property Name As String\nEnd Class\n\nPublic Module Example\n    Sub Main()\n        Dim xml As String = "<!-- Comment1 --><MyObject><Name>Test</Name></MyObject><!-- Comment2 -->"\n        Dim xmlDoc As New XmlDocument()\n        xmlDoc.LoadXml(xml)\n\n        ' Deserialize XML to object\n        Dim serializer As New XmlSerializer(GetType(MyObject))\n        Dim reader As XmlNodeReader = New XmlNodeReader(xmlDoc.DocumentElement)\n        Dim myObj As MyObject = CType(serializer.Deserialize(reader), MyObject)\n\n        ' Make changes to the object\n        myObj.Name = "NewName"\n\n        ' Serialize object back to XML\n        Dim sb As New StringBuilder()\n        Dim settings As New XmlWriterSettings() With {.OmitXmlDeclaration = True}\n        Using writer As XmlWriter = XmlWriter.Create(sb, settings)\n            serializer.Serialize(writer, myObj)\n        End Using\n        Dim newXml As String = sb.ToString()\n\n        ' Load serialized XML back into XmlDocument\n        Dim newDoc As New XmlDocument()\n        newDoc.LoadXml(newXml)\n\n        ' Replace old content with new content, preserving comments\n        xmlDoc.DocumentElement.ParentNode.ReplaceChild(xmlDoc.ImportNode(newDoc.DocumentElement, True), xmlDoc.DocumentElement)\n\n        ' Save the XmlDocument with comments\n        Using stringWriter As New StringWriter()\n            Using xmlTextWriter As XmlTextWriter = New XmlTextWriter(stringWriter)\n                xmlDoc.WriteTo(xmlTextWriter)\n            End Using\n            Dim outputXml As String = stringWriter.ToString()\n            Console.WriteLine(outputXml)\n        End Using\n    End Sub\nEnd Module