Imports System.Security.Cryptography\nImports System.Text\n\nPublic Class RegistrationValidator\n    Private Shared Function GenerateRegistrationKey(userInfo As String, secretKey As String) As String\n        Using sha256 As SHA256 = SHA256.Create()\n            Dim combinedInfo As String = userInfo & secretKey\n            Dim hashBytes As Byte() = sha256.ComputeHash(Encoding.UTF8.GetBytes(combinedInfo))\n            Return BitConverter.ToString(hashBytes).Replace("-", "")\n        End Using\n    End Function\n\n    Public Shared Function ValidateRegistration(userInfo As String, providedKey As String, secretKey As String) As Boolean\n        Dim expectedKey As String = GenerateRegistrationKey(userInfo, secretKey)\n        Return String.Equals(expectedKey, providedKey, StringComparison.OrdinalIgnoreCase)\n    End Function\nEnd Class\n\n' Usage example in your application form\nPublic Class MainForm\n    Private Sub ValidateUserRegistration()\n        Dim userInfo As String = "username@example.com" ' Retrieve this from user input\n        Dim providedKey As String = "UserProvidedRegistrationKey" ' Retrieve this from user input\n        Dim secretKey As String = "YourSecretKey"\n\n        If RegistrationValidator.ValidateRegistration(userInfo, providedKey, secretKey) Then\n            MessageBox.Show("Registration successful!")\n        Else\n            MessageBox.Show("Invalid registration key.")\n        End If\n    End Sub\nEnd Class