Public Class EventManager\n    Private obj1 As Object1\n    Private obj2 As Object2\n\n    Public Sub New()\n        obj1 = New Object1()\n        obj2 = Nothing ' Object2 is not instantiated yet\n    End Sub\n\n    ' Method to attach handler if Object2 is instantiated\n    Public Sub AttachHandlerIfNeeded()\n        If obj2 IsNot Nothing AndAlso Not HandlerAttached(obj1, AddressOf obj2.HandleMyEvent) Then\n            AddHandler obj1.MyEvent, AddressOf obj2.HandleMyEvent\n        End If\n    End Sub\n\n    ' Method to check if the handler is already attached\n    Private Function HandlerAttached(obj As Object1, handler As EventHandler) As Boolean\n        Dim eventField = obj.GetType().GetField("MyEventEvent", Reflection.BindingFlags.NonPublic Or Reflection.BindingFlags.Instance)\n        If eventField IsNot Nothing Then\n            Dim eventDelegate As [Delegate] = CType(eventField.GetValue(obj), [Delegate])\n            If eventDelegate IsNot Nothing Then\n                For Each d As [Delegate] In eventDelegate.GetInvocationList()\n                    If d.Method.Equals(handler.Method) Then\n                        Return True\n                    End If\n                Next\n            End If\n        End If\n        Return False\n    End Function\n\n    ' Method to create Object2 and attach the handler\n    Public Sub CreateObject2AndAttachHandler()\n        obj2 = New Object2()\n        AttachHandlerIfNeeded()\n    End Sub\n\n    Public Sub RaiseEventInObject1()\n        obj1.RaiseEvent()\n    End Sub\nEnd Class