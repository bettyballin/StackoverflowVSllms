Imports System.Windows.Forms\nImports System.Drawing\nImports System.Drawing.Drawing2D\n\nPublic Class Container : Inherits Control\n    Private _Gp As GraphicsPath\n\n    Public Sub New()\n        ' Set the style to support double buffering\n        Me.SetStyle(ControlStyles.AllPaintingInWmPaint Or ControlStyles.UserPaint Or ControlStyles.OptimizedDoubleBuffer, True)\n        Me.UpdateStyles()\n    End Sub\n\n    Protected Overrides Sub OnPaint(ByVal e As PaintEventArgs)\n        MyBase.OnPaint(e)\n        \n        Dim r As Rectangle = e.ClipRectangle\n        Dim gp As New GraphicsPath\n        Dim cs As Integer = 25 'CornerSize'\n        \n        r.Inflate(-5, -5)\n        \n        gp.AddArc(r.X, r.Y, cs, cs, 180, 90)\n        gp.AddArc(r.X + r.Width - cs, r.Y, cs, cs, 270, 90)\n        gp.AddArc(r.X + r.Width - cs, r.Y + r.Height - cs, cs, cs, 0, 90)\n        gp.AddArc(r.X, r.Y + r.Height - cs, cs, cs, 90, 90)\n        \n        Dim t As Single = cs / 2 + r.Y\n        gp.AddLine(r.X, r.Y + r.Height - cs, r.X, t)\n        \n        e.Graphics.SmoothingMode = SmoothingMode.AntiAlias\n        e.Graphics.DrawPath(Pens.Black, gp)\n    End Sub\n\n    Protected Overrides Sub OnResize(ByVal e As EventArgs)\n        MyBase.OnResize(e)\n        Me.Invalidate() ' Invalidate the control to cause a repaint\n    End Sub\nEnd Class