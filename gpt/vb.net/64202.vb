Public Class Receipt\n    Inherits Printing.PrintDocument\n\n    Private _font As Font = New Font("Courier", 8)\n    Private _text As String = ""\n    Private _printerSettings As Printing.PrinterSettings\n\n    Public Property Text() As String\n        Get\n            Return _text\n        End Get\n        Set(ByVal Value As String)\n            _text = Value.Trim\n        End Set\n    End Property\n\n    Public Sub New(ByVal str As String, ByVal settings As Printing.PrinterSettings)\n        MyBase.New()\n        _text = str\n        _printerSettings = settings\n        Me.PrinterSettings = _printerSettings\n    End Sub\n\n    Protected Overrides Sub OnPrintPage(ByVal e As Printing.PrintPageEventArgs)\n        Dim printHeight As Integer\n        Dim printWidth As Integer\n        Dim leftMargin As Integer\n        Dim rightMargin As Integer\n\n        With Me.DefaultPageSettings\n            .PaperSize = New System.Drawing.Printing.PaperSize("Custom", 300, 1200)\n            .Margins.Left = 25\n            .Margins.Right = 25\n\n            printHeight = .PaperSize.Height - .Margins.Top - .Margins.Bottom\n            printWidth = .PaperSize.Width - .Margins.Left - .Margins.Right\n            leftMargin = .Margins.Left\n            rightMargin = .Margins.Top\n        End With\n\n        Dim printArea As New RectangleF(leftMargin, rightMargin, printWidth, printHeight)\n        Dim format As New StringFormat(StringFormatFlags.LineLimit)\n\n        Try\n            e.Graphics.DrawString(_text, _font, Brushes.Black, printArea, format)\n        Catch ex As Exception\n            MsgBox(ex.Message)\n        End Try\n    End Sub\nEnd Class