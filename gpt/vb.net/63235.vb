Partial Public Class WatermarkedTextBox\n    Inherits TextBox\n\n    Private _waterMarkColor As Color = Color.LightGray\n    Public Property WaterMarkColor() As Color\n        Get\n            Return _waterMarkColor\n        End Get\n        Set(ByVal value As Color)\n            _waterMarkColor = value\n        End Set\n    End Property\n\n    Private _waterMarkText As String = "Watermark"\n    Public Property WaterMarkText() As String\n        Get\n            Return _waterMarkText\n        End Get\n        Set(ByVal value As String)\n            _waterMarkText = value\n        End Set\n    End Property\n\n    Public Sub New()\n        MyBase.New()\n        AddHandler Me.GotFocus, AddressOf RemoveWatermark\n        AddHandler Me.LostFocus, AddressOf ApplyWatermark\n        AddHandler Me.TextChanged, AddressOf TextChangedHandler\n    End Sub\n\n    Protected Overrides Sub OnCreateControl()\n        MyBase.OnCreateControl()\n        ApplyWatermark(Nothing, Nothing)\n    End Sub\n\n    Private Sub ApplyWatermark(sender As Object, e As EventArgs)\n        If String.IsNullOrEmpty(Me.Text) Then\n            Me.ForeColor = WaterMarkColor\n            Me.Text = WaterMarkText\n        End If\n    End Sub\n\n    Private Sub RemoveWatermark(sender As Object, e As EventArgs)\n        If Me.Text = WaterMarkText Then\n            Me.ForeColor = SystemColors.WindowText\n            Me.Text = String.Empty\n        End If\n    End Sub\n\n    Private Sub TextChangedHandler(sender As Object, e As EventArgs)\n        If Me.Focused AndAlso Me.Text = WaterMarkText Then\n            Me.ForeColor = SystemColors.WindowText\n            Me.Text = String.Empty\n        ElseIf Not Me.Focused AndAlso String.IsNullOrEmpty(Me.Text) Then\n            ApplyWatermark(Nothing, Nothing)\n        End If\n    End Sub\n\nEnd Class