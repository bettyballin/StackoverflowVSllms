Public Class YourViewModel\n    Implements IDataErrorInfo\n\n    ' Your existing properties and validation logic\n\n    Private _isFormValid As Boolean\n    Public Property IsFormValid As Boolean\n        Get\n            Return _isFormValid\n        End Get\n        Set(value As Boolean)\n            _isFormValid = value\n            OnPropertyChanged("IsFormValid")\n        End Set\n    End Property\n\n    Public Sub ValidateForm()\n        ' Add logic here to check if all properties are valid\n        IsFormValid = String.IsNullOrEmpty(Me("IncidentCategory"))\n        ' Add checks for other properties if needed\n    End Sub\n\n    ' Implement IDataErrorInfo methods and properties\n    Default Public ReadOnly Property Item(ByVal propertyName As String) As String Implements IDataErrorInfo.Item\n        Get\n            Dim errorMessage As String = String.Empty\n            If propertyName = "IncidentCategory" Then\n                If String.IsNullOrWhiteSpace(IncidentCategory) Then\n                    errorMessage = "Incident category is required"\n                End If\n            End If\n\n            ' Call ValidateForm whenever a property is validated\n            ValidateForm()\n\n            Return errorMessage\n        End Get\n    End Property\n\n    Public ReadOnly Property [Error] As String Implements IDataErrorInfo.[Error]\n        Get\n            Return Nothing\n        End Get\n    End Property\n\n    ' INotifyPropertyChanged implementation\n    Public Event PropertyChanged As PropertyChangedEventHandler\n    Protected Sub OnPropertyChanged(ByVal name As String)\n        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(name))\n    End Sub\nEnd Class