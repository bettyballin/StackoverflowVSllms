import ctypes\n\n# Load DLL into memory.\n\nhllDll = ctypes.WinDLL ("c:\\PComm\\ehlapi32.dll")\n\n# Set up prototype and parameters for the desired function call.\n# HLLAPI\n\nhllApiProto = ctypes.WINFUNCTYPE (\n    ctypes.c_int,      # Return type.\n    ctypes.c_void_p,   # Parameters 1 ...\n    ctypes.c_void_p,\n    ctypes.c_void_p,\n    ctypes.c_void_p)   # ... thru 4.\nhllApiParams = (1, "p1", 0), (1, "p2", 0), (1, "p3",0), (1, "p4",0),\n\n# Actually map the call ("HLLAPI(...)") to a Python name.\n\nhllApi = hllApiProto (("HLLAPI", hllDll), hllApiParams)\n\n# This is how you can actually call the DLL function.\n# Set up the variables and call the Python name with them.\n\np1 = ctypes.c_int (1)\np2 = ctypes.c_char_p (sessionVar)\np3 = ctypes.c_int (1)\np4 = ctypes.c_int (0)\nhllApi (ctypes.byref (p1), p2, ctypes.byref (p3), ctypes.byref (p4))