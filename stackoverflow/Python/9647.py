def get_object_votes(self, obj, all=False):\n    """\n    Get a dictionary mapping vote to votecount\n    """\n    object_id = obj._get_pk_val()\n    ctype = ContentType.objects.get_for_model(obj)\n    queryset = self.filter(content_type=ctype, object_id=object_id)\n\n    if not all:\n        queryset = queryset.filter(is_archived=False) # only pick active votes\n\n    queryset = queryset.values('vote')\n    queryset = queryset.annotate(vcount=Count("vote")).order_by()\n\n    votes = {}\n\n    for count in queryset:\n        votes[count['vote']] = count['vcount']\n\n    return votes