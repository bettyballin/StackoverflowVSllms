import types\n\nclass SpecialClass(object):\n    @classmethod\n    def removeVariable(cls, name):\n        return delattr(cls, name)\n\n    @classmethod\n    def addMethod(cls, func):\n        return setattr(cls, func.__name__, types.MethodType(func, cls))\n\ndef hello(self, n):\n    print n\n\ninstance = SpecialClass()\nSpecialClass.addMethod(hello)\n\n>>> SpecialClass.hello(5)\n5\n\n>>> instance.hello(6)\n6\n\n>>> SpecialClass.removeVariable("hello")\n\n>>> instance.hello(7)\nTraceback (most recent call last):\n  File "<stdin>", line 1, in <module>\nAttributeError: 'SpecialClass' object has no attribute 'hello'\n\n>>> SpecialClass.hello(8)\nTraceback (most recent call last):\n  File "<stdin>", line 1, in <module>\nAttributeError: type object 'SpecialClass' has no attribute 'hello'