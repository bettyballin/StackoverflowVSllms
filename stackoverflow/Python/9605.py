>>> from guppy import hpy; h=hpy()\n>>> h.heap()\nPartition of a set of 48477 objects. Total size = 3265516 bytes.\n Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)\n     0  25773  53  1612820  49   1612820  49 str\n     1  11699  24   483960  15   2096780  64 tuple\n     2    174   0   241584   7   2338364  72 dict of module\n     3   3478   7   222592   7   2560956  78 types.CodeType\n     4   3296   7   184576   6   2745532  84 function\n     5    401   1   175112   5   2920644  89 dict of class\n     6    108   0    81888   3   3002532  92 dict (no owner)\n     7    114   0    79632   2   3082164  94 dict of type\n     8    117   0    51336   2   3133500  96 type\n     9    667   1    24012   1   3157512  97 __builtin__.wrapper_descriptor\n<76 more rows. Type e.g. '_.more' to view.>\n>>> h.iso(1,[],{})\nPartition of a set of 3 objects. Total size = 176 bytes.\n Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)\n     0      1  33      136  77       136  77 dict (no owner)\n     1      1  33       28  16       164  93 list\n     2      1  33       12   7       176 100 int\n>>> x=[]\n>>> h.iso(x).sp\n 0: h.Root.i0_modules['__main__'].__dict__['x']\n>>> 