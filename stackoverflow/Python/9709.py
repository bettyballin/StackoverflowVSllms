import ctypes\nimport ctypes.wintypes\n\nwinHttp = ctypes.windll.LoadLibrary("Winhttp.dll")\n\n# http://msdn.microsoft.com/en-us/library/aa384098(VS.85).aspx\n# first get a handle to HTTP session\nWINHTTP_ACCESS_TYPE_DEFAULT_PROXY=0\nWINHTTP_NO_PROXY_NAME=WINHTTP_NO_PROXY_BYPASS=0\nWINHTTP_FLAG_ASYNC=0x10000000\nHINTERNET = winHttp.WinHttpOpen("PyWin32", WINHTTP_ACCESS_TYPE_DEFAULT_PROXY, WINHTTP_NO_PROXY_NAME, WINHTTP_NO_PROXY_BYPASS, WINHTTP_FLAG_ASYNC)\nprint HINTERNET\n\n# now get proxy using HTTP session\n# http://msdn.microsoft.com/en-us/library/aa384097(VS.85).aspx\n"""\nBOOL WinHttpGetProxyForUrl(\n  __in   HINTERNET hSession,\n  __in   LPCWSTR lpcwszUrl,\n  __in   WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,\n  __out  WINHTTP_PROXY_INFO *pProxyInfo\n);\n"""\n# create C structure for WINHTTP_AUTOPROXY_OPTIONS\n#http://msdn.microsoft.com/en-us/library/aa384123(VS.85).aspx\n"""\ntypedef struct {\n  DWORD   dwFlags;\n  DWORD   dwAutoDetectFlags;\n  LPCWSTR lpszAutoConfigUrl;\n  LPVOID  lpvReserved;\n  DWORD   dwReserved;\n  BOOL    fAutoLogonIfChallenged;\n} WINHTTP_AUTOPROXY_OPTIONS;\n"""\nclass WINHTTP_AUTOPROXY_OPTIONS(ctypes.Structure):\n    _fields_ = [("dwFlags", ctypes.wintypes.DWORD),\n                ("dwAutoDetectFlags", ctypes.wintypes.DWORD),\n                ("lpszAutoConfigUrl", ctypes.wintypes.LPCWSTR),\n                ("lpvReserved", ctypes.c_void_p ),\n                ("dwReserved", ctypes.wintypes.DWORD),\n                ("fAutoLogonIfChallenged",ctypes.wintypes.BOOL),]\n\nWINHTTP_AUTOPROXY_AUTO_DETECT = 0x00000001;\nWINHTTP_AUTO_DETECT_TYPE_DHCP = 0x00000001;\nWINHTTP_AUTO_DETECT_TYPE_DNS_A = 0x00000002;\noptions = WINHTTP_AUTOPROXY_OPTIONS()\noptions.dwFlags = WINHTTP_AUTOPROXY_AUTO_DETECT\noptions.dwAutoDetectFlags = WINHTTP_AUTO_DETECT_TYPE_DHCP|WINHTTP_AUTO_DETECT_TYPE_DNS_A\noptions.lpszAutoConfigUrl = 0\noptions.fAutoLogonIfChallenged = False\n\n# create C structure for WINHTTP_AUTOPROXY_OPTIONS\n# http://msdn.microsoft.com/en-us/library/aa383912(VS.85).aspx\n"""\nstruct WINHTTP_PROXY_INFO {\n  DWORD  dwAccessType;\n  LPWSTR lpszProxy;\n  LPWSTR lpszProxyBypass;\n};\n"""\nclass WINHTTP_PROXY_INFO(ctypes.Structure):\n    _fields_ = [("dwAccessType", ctypes.wintypes.DWORD),\n                ("lpszProxy", ctypes.wintypes.LPCWSTR),\n                ("lpszProxyBypass", ctypes.wintypes.LPCWSTR),]\n\ninfo = WINHTTP_PROXY_INFO()\n\nret = winHttp.WinHttpGetProxyForUrl(HINTERNET, "http://www.google.com", ctypes.pointer(options), ctypes.pointer(info) )\nprint "proxy success?",ret\nif not ret:\n    # some error lets see what is that?\n    import win32api\n    import win32con\n    errorCode = win32api.GetLastError()\n    print "win32 Error:",errorCode\n    s = ""\n    print win32api.FormatMessage(errorCode)\n\nprint info.dwAccessType, info.lpszProxy, info.lpszProxyBypass