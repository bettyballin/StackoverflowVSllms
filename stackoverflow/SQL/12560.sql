CREATE PROCEDURE [dbo].[GenerateInsertScripts] (\n    @tableName varchar(100),\n    @tableSchema varchar(50) = 'dbo',\n    @skipIdentity bit = 1\n)\nAS\nBEGIN\n    DECLARE @columnName varchar(800)\n    DECLARE @columnType varchar(20)\n    DECLARE @statementA varchar(MAX)\n    DECLARE @statementB varchar(MAX)\n    DECLARE @statement nvarchar(MAX)\n    DECLARE @isIdentity bit\n    DECLARE @commaFlag bit\n\n    SET @statementA = 'INSERT INTO [' + @tableSchema + '].[' + @tableName + '] ('\n    SET @statementB = ''' + '\n\n    DECLARE cols CURSOR FOR\n    SELECT\n        COLUMN_NAME,\n        DATA_TYPE,\n        (SELECT COLUMNPROPERTY(OBJECT_ID('[' + @tableSchema + '].[' + @tableName + ']'),\n        information_schema.columns.COLUMN_NAME, 'IsIdentity')) AS IsIdentity\n    FROM\n        information_schema.columns\n    WHERE\n        TABLE_NAME = @tableName\n      AND\n        TABLE_SCHEMA = @tableSchema\n    ORDER BY\n        ORDINAL_POSITION\n\n    OPEN cols\n    FETCH cols INTO @columnName, @columnType, @isIdentity \n    SET @commaFlag = 0\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        IF NOT (@isIdentity = 1 AND @skipIdentity = 1) BEGIN\n        IF @commaFlag = 1 BEGIN\n            SET @statementA = @statementA + ', '\n            SET @statementB = @statementB + ' + '', '' + '\n        END\n        SET @commaFlag = 1\n\n        SET @statementA = @statementA + '[' + @columnName + ']'\n        SET @statementB = @statementB + 'CASE WHEN [' + @columnName + '] IS NULL THEN ''NULL'' ELSE ' + \n        CASE\n            WHEN @columnType = 'bigint' OR @columnType = 'int' OR @columnType = 'tinyint' OR @columnType = 'bit' THEN\n                'CAST([' + @columnName + '] AS varchar(MAX))'\n            WHEN @columnType = 'datetime' THEN\n                ''''''''' + CONVERT(varchar, [' + @columnName + '], 121) + '''''''''\n            ELSE\n                ''''''''' + REPLACE(CAST([' + @columnName + '] AS varchar(MAX)), '''''''', '''''''''''') + '''''''''\n        END\n\n         + ' END'\n        END\n    FETCH cols INTO @columnName, @columnType, @isIdentity\n    END\n    SET @commaFlag = 0\n    CLOSE cols\n    DEALLOCATE cols\n\n    SET @statementB = @statementB + ' + '''\n\n    SET @statement = 'SELECT ''' + @statementA + ') VALUES (' + @statementB + ')'' [Statement] FROM [' + @tableSchema + '].[' + @tableName + ']'\n\n    EXEC sp_executesql @statement\nEND