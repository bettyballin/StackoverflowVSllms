--Search Parameters\n\nDECLARE @SearchString VARCHAR(MAX)\nSET @SearchString='Oakland;City;Planning' --Using your example search\nDECLARE @Delim CHAR(1)\nSET @Delim=';' --Using your deliminator from the example\n\n--I didn't know your table name, so I'm making it... along with a few extra rows...\n\nDECLARE @Projects TABLE (ProjectID INT, ProjectName VARCHAR(200))\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 1, 'Oakland City Planning'\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 2, 'Oakland City Construction'\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 3, 'Skunk Works'\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 4, 'Oakland Town Hall'\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 5, 'Oakland Mall'\nINSERT INTO @Projects (ProjectID, ProjectName) SELECT 6, 'StackOverflow Answer Planning'\n\n--*** MAIN PROGRAM CODE STARTS HERE ***\n\nDECLARE @Keywords TABLE (Keyword VARCHAR(MAX))\n\nDECLARE @index int \nSET @index = -1 \n\n--Each keyword gets inserted into the table\n--Single keywords are handled, but I did not add code to remove duplicates\n--since that affects performance only, not the result.\n\nWHILE (LEN(@SearchString) > 0) \n  BEGIN  \n    SET @index = CHARINDEX(@Delim , @SearchString)  \n    IF (@index = 0) AND (LEN(@SearchString) > 0)  \n      BEGIN   \n        INSERT INTO @Keywords VALUES (@SearchString)\n          BREAK  \n      END  \n    IF (@index > 1)  \n      BEGIN   \n        INSERT INTO @Keywords VALUES (LEFT(@SearchString, @index - 1))   \n        SET @SearchString = RIGHT(@SearchString, (LEN(@SearchString) - @index))  \n      END  \n    ELSE \n      SET @SearchString = RIGHT(@SearchString, (LEN(@SearchString) - @index)) \nEND\n\n\n--This way, only a project with all of our keywords will be shown...\n\nSELECT * \nFROM @Projects\nWHERE ProjectID NOT IN (SELECT ProjectID FROM @Projects Projects INNER JOIN @Keywords Keywords ON CHARINDEX(Keywords.Keyword,Projects.ProjectName)=0)