CREATE TABLE [dbo].[hierarchical_table](\n    [id] [int] IDENTITY(1,1) NOT NULL,\n    [parent_id] [int] NULL,\n    [data] [varchar](255) NOT NULL,\n CONSTRAINT [PK_hierarchical_table] PRIMARY KEY CLUSTERED \n(\n    [id] ASC\n)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]\n) ON [PRIMARY]\n\nCREATE VIEW [dbo].[vw_recursive_view]\nAS\nWITH hierarchy_cte(id, parent_id, data, lvl) AS\n(SELECT     id, parent_id, data, 0 AS lvl\n      FROM         dbo.hierarchical_table\n      WHERE     (parent_id IS NULL)\n      UNION ALL\n      SELECT     t1.id, t1.parent_id, t1.data, h.lvl + 1 AS lvl\n      FROM         dbo.hierarchical_table AS t1 INNER JOIN\n                            hierarchy_cte AS h ON t1.parent_id = h.id)\nSELECT     id, parent_id, data, lvl\nFROM         hierarchy_cte AS result\n\n\nCREATE FUNCTION [dbo].[fn_tree_for_parent] \n(\n    @parent int\n)\nRETURNS \n@result TABLE \n(\n    id int not null,\n    parent_id int,\n    data varchar(255) not null,\n    lvl int not null\n)\nAS\nBEGIN\n    WITH hierarchy_cte(id, parent_id, data, lvl) AS\n   (SELECT     id, parent_id, data, 0 AS lvl\n        FROM         dbo.hierarchical_table\n        WHERE     (id = @parent OR (parent_id IS NULL AND @parent IS NULL))\n        UNION ALL\n        SELECT     t1.id, t1.parent_id, t1.data, h.lvl + 1 AS lvl\n        FROM         dbo.hierarchical_table AS t1 INNER JOIN\n            hierarchy_cte AS h ON t1.parent_id = h.id)\n    INSERT INTO @result\n    SELECT     id, parent_id, data, lvl\n    FROM         hierarchy_cte AS result\nRETURN \nEND\n\nALTER TABLE [dbo].[hierarchical_table]  WITH CHECK ADD  CONSTRAINT [FK_hierarchical_table_hierarchical_table] FOREIGN KEY([parent_id])\nREFERENCES [dbo].[hierarchical_table] ([id])\n\nALTER TABLE [dbo].[hierarchical_table] CHECK CONSTRAINT [FK_hierarchical_table_hierarchical_table]