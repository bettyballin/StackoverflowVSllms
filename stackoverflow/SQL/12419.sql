select\n  DropStmt = 'ALTER TABLE [' + ForeignKeys.ForeignTableSchema + \n      '].[' + ForeignKeys.ForeignTableName + \n      '] DROP CONSTRAINT [' + ForeignKeys.ForeignKeyName + ']; '\n,  CreateStmt = 'ALTER TABLE [' + ForeignKeys.ForeignTableSchema + \n      '].[' + ForeignKeys.ForeignTableName + \n      '] WITH CHECK ADD CONSTRAINT [' +  ForeignKeys.ForeignKeyName + \n      '] FOREIGN KEY([' + ForeignKeys.ForeignTableColumn + \n      ']) REFERENCES [' + schema_name(sys.objects.schema_id) + '].[' +\n  sys.objects.[name] + ']([' +\n  sys.columns.[name] + ']) ON DELETE CASCADE; '\n from sys.objects\n  inner join sys.columns\n    on (sys.columns.[object_id] = sys.objects.[object_id])\n  inner join (\n    select sys.foreign_keys.[name] as ForeignKeyName\n     ,schema_name(sys.objects.schema_id) as ForeignTableSchema\n     ,sys.objects.[name] as ForeignTableName\n     ,sys.columns.[name]  as ForeignTableColumn\n     ,sys.foreign_keys.referenced_object_id as referenced_object_id\n     ,sys.foreign_key_columns.referenced_column_id as referenced_column_id\n     from sys.foreign_keys\n      inner join sys.foreign_key_columns\n        on (sys.foreign_key_columns.constraint_object_id\n          = sys.foreign_keys.[object_id])\n      inner join sys.objects\n        on (sys.objects.[object_id]\n          = sys.foreign_keys.parent_object_id)\n        inner join sys.columns\n          on (sys.columns.[object_id]\n            = sys.objects.[object_id])\n           and (sys.columns.column_id\n            = sys.foreign_key_columns.parent_column_id)\n    ) ForeignKeys\n    on (ForeignKeys.referenced_object_id = sys.objects.[object_id])\n     and (ForeignKeys.referenced_column_id = sys.columns.column_id)\n where (sys.objects.[type] = 'U')\n  and (sys.objects.[name] not in ('sysdiagrams'))