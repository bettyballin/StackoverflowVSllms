DECLARE @BusHourStart DATETIME, @BusHourEnd DATETIME\nSELECT @BusHourStart = '08:30:00', @BusHourEnd = '16:00:00'\nDECLARE @BusMinutesStart INT, @BusMinutesEnd INT\nSELECT @BusMinutesStart = DATEPART(minute,@BusHourStart)+DATEPART(hour,@BusHourStart)*60, \n@BusMinutesEnd = DATEPART(minute,@BusHourEnd)+DATEPART(hour,@BusHourEnd)*60 \nDECLARE @Dates2 TABLE (ID INT, DateStart DATETIME, DateEnd DATETIME)\nINSERT INTO @Dates2\nSELECT 1, '15:00:00 04/29/2003', '11:00:00 04/30/2003' UNION\nSELECT 2, '14:00:00 04/30/2003', '14:00:00 05/01/2003' UNION\nSELECT 3, '14:00:00 05/02/2003', '14:00:00 05/06/2003' UNION\nSELECT 4, '14:00:00 05/02/2003', '14:00:00 05/04/2003' UNION\nSELECT 5, '07:00:00 05/02/2003', '14:00:00 05/02/2003' UNION\nSELECT 6, '14:00:00 05/02/2003', '23:00:00 05/02/2003' UNION\nSELECT 7, '07:00:00 05/02/2003', '08:00:00 05/02/2003' UNION\nSELECT 8, '22:00:00 05/02/2003', '23:00:00 05/03/2003' UNION\nSELECT 9, '08:00:00 05/03/2003', '23:00:00 05/04/2003' UNION\nSELECT 10, '07:00:00 05/02/2003', '23:00:00 05/02/2003' \n\n-- SET DATEFIRST to U.S. English default value of 7.\nSET DATEFIRST 7\n\nSELECT ID, DateStart, DateEnd, CONVERT(VARCHAR, Minutes/60) +':'+ CONVERT(VARCHAR, Minutes % 60) AS ReactionTime\nFROM ( \n    SELECT ID, DateStart, DateEnd, Overtime,\n        CASE \n            WHEN DayDiff = 0 THEN \n                CASE \n                    WHEN (MinutesEnd - MinutesStart - Overtime) > 0 THEN (MinutesEnd - MinutesStart - Overtime) \n                    ELSE 0 \n                    END\n            WHEN DayDiff > 0  THEN \n                CASE \n                    WHEN (StartPart + EndPart - Overtime) > 0 THEN (StartPart + EndPart - Overtime) \n                    ELSE 0 \n                    END + DayPart\n            ELSE 0\n        END AS Minutes \n    FROM(\n        SELECT ID, DateStart, DateEnd, DayDiff, MinutesStart, MinutesEnd,\n                CASE WHEN(@BusMinutesStart - MinutesStart) > 0 THEN (@BusMinutesStart - MinutesStart) ELSE 0 END +\n                CASE WHEN(MinutesEnd - @BusMinutesEnd) > 0 THEN (MinutesEnd - @BusMinutesEnd) ELSE 0 END AS Overtime, \n                CASE WHEN(@BusMinutesEnd - MinutesStart) > 0 THEN (@BusMinutesEnd - MinutesStart) ELSE 0 END AS StartPart,\n                CASE WHEN(MinutesEnd - @BusMinutesStart) > 0 THEN (MinutesEnd - @BusMinutesStart) ELSE 0 END AS EndPart,\n                CASE WHEN DayDiff > 1 THEN (@BusMinutesEnd - @BusMinutesStart)*(DayDiff - 1) ELSE 0 END AS DayPart\n        FROM (\n                SELECT DATEDIFF(d,DateStart, DateEnd) AS DayDiff, ID, DateStart, DateEnd,  \n                DATEPART(minute,DateStart)+DATEPART(hour,DateStart)*60 AS MinutesStart,\n                DATEPART(minute,DateEnd)+DATEPART(hour,DateEnd)*60 AS MinutesEnd \n                FROM (\n                        SELECT ID,\n                                CASE \n                                        WHEN DATEPART(dw, DateStart) = 7 \n                                        THEN DATEADD(SECOND, 1, DATEADD(DAY, DATEDIFF(DAY, 0, DateStart), 2))\n                                        WHEN DATEPART(dw, DateStart) = 1 \n                                        THEN DATEADD(SECOND, 1, DATEADD(DAY, DATEDIFF(DAY, 0, DateStart), 1))\n                                ELSE DateStart END AS DateStart,\n                                CASE \n                                        WHEN DATEPART(dw, DateEnd) = 7 \n                                        THEN DATEADD(SECOND, -1, DATEADD(DAY, DATEDIFF(DAY, 0, DateEnd), 0))\n                                        WHEN DATEPART(dw, DateEnd) = 1 \n                                        THEN DATEADD(SECOND, -1, DATEADD(DAY, DATEDIFF(DAY, 0, DateEnd), -1))\n                                ELSE DateEnd END AS DateEnd FROM @Dates2\n                )Weekends\n        )InMinutes\n    )Overtime\n)Calculatio