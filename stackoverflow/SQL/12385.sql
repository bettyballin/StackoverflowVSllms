declare @searchStr nvarchar(100)\nset @searchStr = 'brown fox'\nselecT T.* from test T, dbo.fnc_SplitSTring(@searchStr,' ')\nwhere   T.name like '%' + token + '%'\n\n\nCREATE   FUNCTION [dbo].[fnc_SplitString]\n(\n@InString varchar(8000),\n@Delim char(1)\n)\nRETURNS @Return table\n(\nPosition int identity,\nToken varchar(100) -- Maximum token size is 100 chars...\n)\nAs\nBEGIN\n    Declare @CR varchar(1),\n    @LF varchar(1)\n    Set @CR = char(10)\n    Set @LF = char(13)\n    -- \n    If @InString is null return\n    -- \n    Declare @Pos int\n    Declare @Pattern char(3)\n    Set @Pattern = '%' + @Delim + '%'\n    -- \n    Declare @Token varchar(30)\n    SELECT @InString = @InString + @Delim -- add trailing delimiter\n    SELECT @Pos = PATINDEX(@Pattern, @InString)\n    WHILE (@Pos <> 0) BEGIN\n        SELECT @Token = ltrim(rtrim(SUBSTRING(@InString, 1, @Pos - 1)))\n        Select @Token = replace(@Token, @CR, '')\n        Select @Token = replace(@Token, @LF, '')\n        Insert @Return Values (@Token)\n        SELECT @InString = STUFF(@InString, 1, PATINDEX(@Pattern, @InString),'')\n        SELECT @Pos = PATINDEX(@Pattern, @InString)\n    END\n-- \nreturn\n-- \nEND