WITH "Period" (PeriodM, PeriodName) AS (\n    -- // I would store it as another table basically, but having it as part of the view would do\n                SELECT  01, '1 mo'\n    UNION ALL   SELECT  02, '2 mo' -- // data not stored\n    UNION ALL   SELECT  03, '3 mo'\n    UNION ALL   SELECT  06, '6 mo'\n    UNION ALL   SELECT  12, '1 yr'\n    UNION ALL   SELECT  24, '2 yr'\n    UNION ALL   SELECT  36, '3 yr'\n    UNION ALL   SELECT  48, '4 yr' -- // data not stored\n    UNION ALL   SELECT  60, '5 yr'\n    UNION ALL   SELECT  72, '6 yr' -- // data not stored\n    UNION ALL   SELECT  84, '7 yr'\n    UNION ALL   SELECT  96, '8 yr' -- // data not stored\n    UNION ALL   SELECT 108, '9 yr' -- // data not stored\n    UNION ALL   SELECT 120, '10 yr'\n    -- ... // add more\n    UNION ALL   SELECT 240, '20 yr'\n    -- ... // add more\n    UNION ALL   SELECT 360, '30 yr'\n)\n, "Yield" (ID, PeriodM, Date, Value) AS (\n    -- // ** This is the TABLE your data is stored in **\n    -- // \n    -- // value of ID column is not important, but it must be unique (you may have your PK)\n    -- // ... it is used for a Tie-Breaker type of JOIN in the view\n    -- //\n    -- // This is just a test data:\n                SELECT 101, 01 /* '1 mo'*/, '2009-05-01', 0.06\n    UNION ALL   SELECT 102, 03 /* '3 mo'*/, '2009-05-01', 0.16\n    UNION ALL   SELECT 103, 06 /* '6 mo'*/, '2009-05-01', 0.31\n    UNION ALL   SELECT 104, 12 /* '1 yr'*/, '2009-05-01', 0.49\n    UNION ALL   SELECT 105, 24 /* '2 yr'*/, '2009-05-01', 0.92\n    UNION ALL   SELECT 346, 36 /* '3 yr'*/, '2009-05-01', 1.39\n    UNION ALL   SELECT 237, 60 /* '5 yr'*/, '2009-05-01', 2.03\n    UNION ALL   SELECT 238, 84 /* '7 yr'*/, '2009-05-01', 2.72\n    UNION ALL   SELECT 239,120 /*'10 yr'*/, '2009-05-01', 3.21\n    UNION ALL   SELECT 240,240 /*'20 yr'*/, '2009-05-01', 4.14\n    UNION ALL   SELECT 250,360 /*'30 yr'*/, '2009-05-01', 4.09\n)\n, "ReportingDate" ("Date") AS (\n    -- // this should be a part of the view (or a separate table)\n    SELECT DISTINCT Date FROM "Yield"\n)\n\n-- // This is the Final VIEW that you want given the data structure as above\nSELECT      d.Date, p.PeriodName, --//p.PeriodM,\n            CAST(\n                COALESCE(y_curr.Value,\n                    (   (p.PeriodM - y_prev.PeriodM) * y_prev.Value\n                    +   (y_next.PeriodM - p.PeriodM) * y_next.Value\n                    ) / (y_next.PeriodM - y_prev.PeriodM)\n                ) AS DECIMAL(9,4) -- // TODO: cast to your type if not FLOAT\n            )  AS Value\nFROM        "Period" p\nCROSS JOIN  "ReportingDate" d\nLEFT JOIN   "Yield" y_curr\n        ON  y_curr.Date = d.Date\n        AND y_curr.PeriodM = p.PeriodM\nLEFT JOIN   "Yield" y_prev\n        ON  y_prev.ID = (SELECT TOP 1 y.ID FROM Yield y WHERE y.Date = d.Date AND y.PeriodM <= p.PeriodM ORDER BY y.PeriodM DESC)\nLEFT JOIN   "Yield" y_next\n        ON  y_next.ID = (SELECT TOP 1 y.ID FROM Yield y WHERE y.Date = d.Date AND y.PeriodM >= p.PeriodM ORDER BY y.PeriodM ASC)\n\n--//WHERE       d.Date = '2009-05-01'