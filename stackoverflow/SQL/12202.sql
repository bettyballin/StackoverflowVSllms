SQL> create table my_table (my_column)\n  2  as\n  3  select level from dual connect by level <= 9\n  4  /\n\nTable created.\n\nSQL> create function do_something\n  2  ( p_my_column in my_table.my_column%type\n  3  ) return my_table.my_column%type\n  4  is\n  5  begin\n  6    return 10 + p_my_column;\n  7  end;\n  8  /\n\nFunction created.\n\nSQL> alter table my_table add check (my_column not in (12,14))\n  2  /\n\nTable altered.\n\nSQL> declare\n  2    e_forall_error exception;\n  3    pragma exception_init(e_forall_error,-24381)\n  4    ;\n  5    type t_my_columns is table of my_table.my_column%type;\n  6    a_my_columns t_my_columns := t_my_columns()\n  7    ;\n  8  begin\n  9    select my_column\n 10           bulk collect into a_my_columns\n 11      from my_table\n 12    ;\n 13    forall i in 1..a_my_columns.count save exceptions\n 14      update my_table\n 15         set my_column = do_something(a_my_columns(i))\n 16       where my_column = a_my_columns(i)\n 17    ;\n 18  exception\n 19  when e_forall_error then\n 20    for i in 1..sql%bulk_exceptions.count\n 21    loop\n 22      dbms_output.put_line(a_my_columns(sql%bulk_exceptions(i).error_index));\n 23    end loop;\n 24  end;\n 25  /\n2\n4\n\nPL/SQL procedure successfully completed.