function parseXml(xmlText){\n    try{\n        var text = xmlText;\n        //text = replaceAll(text,"&lt;","<");\n        //text = replaceAll(text,"&gt;",">");\n        //text = replaceAll(text,"&quot;","\"");\n        //alert(text);\n        //var myWin = window.open('','win','resize=yes,scrollbars=yes');\n        //myWin.document.getElementsByTagName('body')[0].innerHTML = text;\n        if (typeof DOMParser != "undefined") { \n            // Mozilla, Firefox, and related browsers \n            var parser=new DOMParser();\n            var doc=parser.parseFromString(text,"text/xml");\n            //alert(text);\n            return doc; \n        }else if (typeof ActiveXObject != "undefined") { \n            // Internet Explorer. \n        var doc = new ActiveXObject("Microsoft.XMLDOM");  // Create an empty document \n            doc.loadXML(text);            // Parse text into it \n            return doc;                   // Return it \n        }else{ \n            // As a last resort, try loading the document from a data: URL \n            // This is supposed to work in Safari. Thanks to Manos Batsis and \n            // his Sarissa library (sarissa.sourceforge.net) for this technique. \n            var url = "data:text/xml;charset=utf-8," + encodeURIComponent(text); \n            var request = new XMLHttpRequest(); \n            request.open("GET", url, false); \n            request.send(null); \n            return request.responseXML; \n        }\n    }catch(err){\n        alert("There was a problem parsing the xml:\n" + err.message);\n    }\n}