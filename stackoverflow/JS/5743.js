/**\n * Monitor AJAX requests for timeouts\n * Based on the script here: http://codejanitor.com/wp/2006/03/23/ajax-timeouts-with-prototype/\n *\n * Usage: If an AJAX call takes more than the designated amount of time to return, we call the onFailure\n *        method (if it exists), passing an error code to the function.\n *\n */\n\nvar xhr = {\n    errorCode: 'timeout',\n    callInProgress: function (xmlhttp) {\n        switch (xmlhttp.readyState) {\n            case 1: case 2: case 3:\n                return true;\n            // Case 4 and 0\n            default:\n                return false;\n        }\n    }\n};\n\n// Register global responders that will occur on all AJAX requests\nAjax.Responders.register({\n    onCreate: function (request) {\n        request.timeoutId = window.setTimeout(function () {\n            // If we have hit the timeout and the AJAX request is active, abort it and let the user know\n            if (xhr.callInProgress(request.transport)) {\n                var parameters = request.options.parameters;\n                request.transport.abort();\n                // Run the onFailure method if we set one up when creating the AJAX object\n                if (request.options.onFailure) {\n                    request.options.onFailure(request.transport, xhr.errorCode, parameters);\n                }\n            }\n        },\n        // 10 seconds\n        10000);\n    },\n    onComplete: function (request) {\n        // Clear the timeout, the request completed ok\n        window.clearTimeout(request.timeoutId);\n    }\n});