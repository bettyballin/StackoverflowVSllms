<script type="text/javascript">\n/*  This is the growfield integration into jeditable\n    You can use almost any field plugin you'd like if you create an input type for it.\n    It just needs the "element" function (to create the editable field) and the "plugin"\n    function which applies the effect to the field.  This is very close to the code in the\n    jquery.jeditable.autogrow.js input type that comes with jeditable.\n */\n$.editable.addInputType('growfield', {\n    element : function(settings, original) {\n        var textarea = $('<textarea>');\n        if (settings.rows) {\n            textarea.attr('rows', settings.rows);\n        } else {\n            textarea.height(settings.height);\n        }\n        if (settings.cols) {\n            textarea.attr('cols', settings.cols);\n        } else {\n            textarea.width(settings.width);\n        }\n        // will execute when textarea is rendered\n        textarea.ready(function() {\n            // implement your scroll pane code here\n        });\n        $(this).append(textarea);\n        return(textarea);\n    },\n    plugin : function(settings, original) {\n        // applies the growfield effect to the in-place edit field\n        $('textarea', this).growfield(settings.growfield);\n    }\n});\n\n/* jeditable initialization */\n$(function() {\n    $('.editable_textarea').editable('postto.html', {\n        type: "growfield", // tells jeditable to use your growfield input type from above\n        submit: 'OK', // this and below are optional\n        tooltip: "Click to edit...",\n        onblur: "ignore",\n        growfield: { } // use this to pass options to the growfield that gets created\n    });\n})