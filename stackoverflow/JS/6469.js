jQuery.fn.handleKeyboardChange = function(nDelay)\n{\n    // Utility function to test if a keyboard event should be ignored\n    function shouldIgnore(event) \n    { \n        var mapIgnoredKeys = {\n             9:true, // Tab\n            16:true, 17:true, 18:true, // Shift, Alt, Ctrl\n            37:true, 38:true, 39:true, 40:true, // Arrows \n            91:true, 92:true, 93:true // Windows keys\n        };\n        return mapIgnoredKeys[event.which];\n    }\n\n    // Utility function to fire OUR change event if the value was actually changed\n    function fireChange($element)\n    {\n        if( $element.val() != jQuery.data($element[0], "valueLast") )\n        {\n            jQuery.data($element[0], "valueLast", $element.val())\n            $element.trigger("change");\n        }\n    }\n\n    // The currently running timeout,\n    // will be accessed with closures\n    var timeout = 0;\n\n    // Utility function to cancel a previously set timeout\n    function clearPreviousTimeout()\n    {\n        if( timeout )\n        { \n            clearTimeout(timeout);\n        }\n    }\n\n    return this\n    .keydown(function(event)\n    {\n        if( shouldIgnore(event) ) return;\n        // User pressed a key, stop the timeout for now\n        clearPreviousTimeout();\n        return null; \n    })\n    .keyup(function(event)\n    {\n        if( shouldIgnore(event) ) return;\n        // Start a timeout to fire our event after some time of inactivity\n        // Eventually cancel a previously running timeout\n        clearPreviousTimeout();\n        var $self = $(this);\n        timeout = setTimeout(function(){ fireChange($self) }, nDelay);\n    })\n    .change(function()\n    {\n        // Fire a change\n        // Use our function instead of just firing the event\n        // Because we want to check if value really changed since\n        // our previous event.\n        // This is for when the browser fires the change event\n        // though we already fired the event because of the timeout\n        fireChange($(this));\n    })\n    ;\n}