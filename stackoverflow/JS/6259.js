var loadmultiples = function(options) {    \n\n    var settings = $.extend({\n\n        //set the url to get\n        url : '/response.json',\n\n        //this function is called when everything is done\n        callback : function() {},\n\n        //set this option to define how many loads to do\n        numbertodo : 10,\n\n        //these two are just used for\n        //storing data while we recurse,\n        //and keeping track of the current position\n        //however you can change them if you want to start\n        //from a different point, or have existing data\n        numberdone : 0,\n        data : []\n    }, options || {});\n\n    //load the json, passing up the current 'number'\n    //of the content to load\n    $.ajax({\n        url : settings.url,\n        data : { 'number' : settings.numberdone },\n        dataType: 'json',        \n        success: function(result) {            \n\n            //add the response to the data\n            settings.data.push(result);\n\n            //increment the counter of how many files have been done\n            settings.numberdone++;\n\n            //\n            if(settings.numberdone < settings.numbertoexecute) {\n                loadmultiples(settings);\n            } else {\n                settings.callback(settings.data);\n            }\n\n        }        \n    });\n\n}\n\n//so now we can call it...\nloadmultiples({\n    callback: function(data) {\n        //this function will get called when all the data calls have been\n        //completed, and the resulting data is in the data parameter\n\n    }\n});