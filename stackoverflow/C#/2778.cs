using System;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        ReaderWriterLockSlim sync = new ReaderWriterLockSlim();\n\n        using (sync.Read())\n        {\n           // etc    \n        }\n    }\n\n\n}\npublic static class ReaderWriterExt\n{\n    sealed class ReadLockToken : IDisposable\n    {\n        private ReaderWriterLockSlim sync;\n        public ReadLockToken(ReaderWriterLockSlim sync)\n        {\n            this.sync = sync;\n            sync.EnterReadLock();\n        }\n        public void Dispose()\n        {\n            if (sync != null)\n            {\n                sync.ExitReadLock();\n                sync = null;\n            }\n        }\n    }\n    public static IDisposable Read(this ReaderWriterLockSlim obj)\n    {\n        return new ReadLockToken(obj);\n    }\n}