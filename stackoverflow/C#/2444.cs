//did the error go to a .ASP page?  If so, append x (for .aspx) and \n//issue a 301 permanently moved\n//when we get an error, the querystring will be "404;<complete original URL>"\nstring targetPage = Request.RawUrl.Substring(Request.FilePath.Length);\n\nif((null == targetPage) || (targetPage.Length == 0))\n    targetPage = "[home page]";\nelse\n{\n     //find the original URL\n    if(targetPage[0] == '?')\n    {\n        if(-1 != targetPage.IndexOf("?aspxerrorpath="))\n             targetPage = targetPage.Substring(15); // ?aspxerrorpath=\n        else\n             targetPage = targetPage.Substring(5); // ?404;\n        }\n        else\n        {\n             if(-1 != targetPage.IndexOf("errorpath="))\n             targetPage = targetPage.Substring(14); // aspxerrorpath=\n             else\n            targetPage = targetPage.Substring(4); // 404;\n        }\n    }               \n\n    string upperTarget = targetPage.ToUpper();\n    if((-1 == upperTarget.IndexOf(".ASPX")) && (-1 != upperTarget.IndexOf(".ASP")))\n    {\n        //this is a request for an .ASP page - permanently redirect to .aspx\n        targetPage = upperTarget.Replace(".ASP", ".ASPX");\n        //issue 301 redirect\n        Response.Status = "301 Moved Permanently"; \n        Response.AddHeader("Location",targetPage);\n        Response.End();\n    }\n\n    if(-1 != upperTarget.IndexOf("ORDER"))\n    {\n                //going to old order page -- forward to new page\n               Response.Redirect(WebRoot + "/order.aspx");\n           Response.End();\n    }