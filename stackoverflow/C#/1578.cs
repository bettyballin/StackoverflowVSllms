\npublic class SecuredPage : System.Web.UI.Page\n{\n    // Those Permissions are mandatory, so user needs to have all of them\n    public List MandatoryPermissions { get; set; }\n\n    // Those Permissions are optional, so if the user have at least one of them, he can access\n    public List OptionalPermissions { get; set; }\n\n    protected override void OnLoad(EventArgs e)\n    {\n        MyUser loggedUser = (MyUser) this.User;\n\n        base.OnLoad(e);\n\n        foreach (Permission mandatoryPermission in MandatoryPermissions)\n        {\n            // if the user don't have permission, we can redirect him\n            if (!loggedUser.HasPermission(mandatoryPermission))\n            {\n                RedirectToDontHaveAccess();\n                break;\n            }\n        }\n\n        bool hasAccessToThePage = false;\n\n        foreach (Permission optionalPermission in OptionalPermissions)\n        {\n            // If the user has at least one of the permissions, he can access\n            if (loggedUser.HasPermission(optionalPermission))\n            {\n                hasAccessToThePage = true;\n            }\n        }\n\n        if (!hasAccessToThePage)\n        {\n            RedirectToDontHaveAccess();\n        }\n\n    }\n\n    private void RedirectToDontHaveAccess()\n    {\n        throw new NotImplementedException();\n    }\n}