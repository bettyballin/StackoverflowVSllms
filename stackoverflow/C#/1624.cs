class Program\n{\n\n    static void Main(string[] args)\n    {\n        Console.Clear();\n\n        try\n        {\n            Speaker speaker = new Speaker();\n            speaker.speakerEvent += new SpeakToMeHandler(Program.OnSpeak);\n\n            // Cause events to be fied\n            speaker.Tweeter.CauseEvent();\n            speaker.Woofer.CauseEvent();\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: {0}", ex.Message);\n            Console.WriteLine("Stacktrace: {0}", ex.StackTrace);\n        }\n    }\n\n    public static void OnSpeak(object sendere, SpeakToMeEventArgs e)\n    {\n        Console.WriteLine("OnSpeak Message = {0}", e.Message);\n    }\n\n}\n\npublic delegate void SpeakToMeHandler(object sender, SpeakToMeEventArgs e);\n\npublic class SpeakToMeEventArgs : EventArgs\n{\n    public string Message { get; set; }\n}\n\npublic class Speaker\n{\n    public event SpeakToMeHandler speakerEvent;\n\n    public Tweeter Tweeter { get; set; }\n    public Woofer Woofer { get; set; }\n\n    public void OnSpeakToMeHander(object sender, SpeakToMeEventArgs e)\n    {\n        if (this.speakerEvent != null)\n        {\n            SpeakToMeEventArgs args = new SpeakToMeEventArgs\n                {\n                    Message = string.Format("OnSpeakToMeHander Orginal Message: {0}", e.Message)\n                };\n\n            this.speakerEvent(this, args);\n        }\n    }\n\n    public Speaker()\n    {\n        this.Tweeter = new Tweeter();\n        this.Woofer = new Woofer();\n\n        Tweeter.tweeterEvent += new SpeakToMeHandler(this.OnSpeakToMeHander);\n        Woofer.wooferEvent += new SpeakToMeHandler(this.OnSpeakToMeHander);\n    }\n}\n\npublic class Tweeter\n{\n    public event SpeakToMeHandler tweeterEvent;\n\n    public void CauseEvent()\n    {\n        SpeakToMeEventArgs args = new SpeakToMeEventArgs()\n            {\n                Message = "Fired By Tweeter"\n            };\n\n        if (this.tweeterEvent != null)\n        {\n            this.tweeterEvent(this, args);\n        }\n    }\n}\n\npublic class Woofer\n{\n    public event SpeakToMeHandler wooferEvent;\n\n    public void CauseEvent()\n    {\n        SpeakToMeEventArgs args = new SpeakToMeEventArgs()\n            {\n                Message = "Fired By Woofer"\n            };\n\n        if (this.wooferEvent != null)\n        {\n            this.wooferEvent(this, args);\n        }\n    }\n}