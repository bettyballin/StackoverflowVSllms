/// <summary>\n    /// Blocks until the file is not locked any more.\n    /// </summary>\n    /// <param name="fullPath"></param>\n    bool WaitForFile(string fullPath)\n    {\n        int numTries = 0;\n        while (true)\n        {\n            ++numTries;\n            try\n            {\n                // Attempt to open the file exclusively.\n                using (FileStream fs = new FileStream(fullPath,\n                    FileMode.Open, FileAccess.ReadWrite, \n                    FileShare.None, 100))\n                {\n                    fs.ReadByte();\n\n                    // If we got this far the file is ready\n                    break;\n                }\n            }\n            catch (Exception ex)\n            {\n                Log.LogWarning(\n                   "WaitForFile {0} failed to get an exclusive lock: {1}", \n                    fullPath, ex.ToString());\n\n                if (numTries > 10)\n                {\n                    Log.LogWarning(\n                        "WaitForFile {0} giving up after 10 tries", \n                        fullPath);\n                    return false;\n                }\n\n                // Wait for the lock to be released\n                System.Threading.Thread.Sleep(500);\n            }\n        }\n\n        Log.LogTrace("WaitForFile {0} returning true after {1} tries",\n            fullPath, numTries);\n        return true;\n    }