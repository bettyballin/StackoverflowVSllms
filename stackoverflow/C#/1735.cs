static int outCol, outRow, outHeight = 10;\n\n  static void Main(string[] args)\n  {\n     bool quit = false;\n     System.DateTime dt = DateTime.Now;\n     do\n     {\n        if (Console.KeyAvailable)\n        {\n           if (Console.ReadKey(false).Key == ConsoleKey.Escape)\n              quit = true;\n        }\n        System.Threading.Thread.Sleep(0);\n        if (DateTime.Now.Subtract(dt).TotalSeconds > .1)\n        {\n           dt = DateTime.Now;\n           WriteOut(dt.ToString(" ss.ff"), false);\n        }            \n     } while (!quit);\n  }\n\n  static void WriteOut(string msg, bool appendNewLine)\n  {\n     int inCol, inRow;\n     inCol = Console.CursorLeft;\n     inRow = Console.CursorTop;\n\n     int outLines = getMsgRowCount(outCol, msg) + (appendNewLine?1:0);\n     int outBottom = outRow + outLines;\n     if (outBottom > outHeight)\n        outBottom = outHeight;\n     if (inRow <= outBottom)\n     {\n        int scrollCount = outBottom - inRow + 1;\n        Console.MoveBufferArea(0, inRow, Console.BufferWidth, 1, 0, inRow + scrollCount);\n        inRow += scrollCount;\n     }\n     if (outRow + outLines > outHeight)\n     {\n        int scrollCount = outRow + outLines - outHeight;\n        Console.MoveBufferArea(0, scrollCount, Console.BufferWidth, outHeight - scrollCount, 0, 0);\n        outRow -= scrollCount;\n        Console.SetCursorPosition(outCol, outRow);\n     }\n     Console.SetCursorPosition(outCol, outRow);\n     if (appendNewLine)\n        Console.WriteLine(msg);\n     else\n        Console.Write(msg);\n     outCol = Console.CursorLeft;\n     outRow = Console.CursorTop;\n     Console.SetCursorPosition(inCol, inRow);\n  }\n\n  static int getMsgRowCount(int startCol, string msg)\n  {\n     string[] lines = msg.Split('\n');\n     int result = 0;\n     foreach (string line in lines)\n     {\n        result += (startCol + line.Length) / Console.BufferWidth;\n        startCol = 0;\n     }\n     return result + lines.Length - 1;\n  }