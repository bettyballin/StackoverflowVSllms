AssemblyBuilder assemblyBuilder = Thread.GetDomain().DefineDynamicAssembly(\n      assemblyName , AssemblyBuilderAccess.Run, assemblyAttributes);\nModuleBuilder moduleBuilder = assemblyBuilder.DefineDynamicModule("ModuleName");\nTypeBuilder typeBuilder = moduleBuilder.DefineType(\n      "MyNamespace.TypeName" , TypeAttributes.Public);\n\ntypeBuilder.DefineDefaultConstructor(MethodAttributes.Public);\n\n// Add a method\nnewMethod = typeBuilder.DefineMethod("MethodName" , MethodAttributes.Public);\n\nILGenerator ilGen = newMethod.GetILGenerator();\n\n// Create IL code for the method\nilGen.Emit(...);\n\n// ...\n\n// Create the type itself\nType newType = typeBuilder.CreateType();