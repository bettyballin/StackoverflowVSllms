//int[,] discountTable = new int[NumItems][NumCoupons+1]\n\n// bestDiscount[i][c] means the best discount if you can spend c coupons on items 0..i\nint[,] bestDiscount = new int[NumItems][NumCoupons+1];\n\n// the best discount for a set of one item is just use the all of the coupons on it\nfor (int c=1; c<=MaxNumCoupons; c++)\n    bestDiscount[0, c] = discountTable[0, c];\n\n// the best discount for [i, c] is spending x coupons on items 0..i-1, and c-x coupons on item i\nfor (int i=1; i<NumItems; i++)\n    for (int c=1; c<=NumCoupons; c++)\n        for (int x=0; x<c; x++)\n            bestDiscount[i, c] = Math.Max(bestDiscount[i, c], bestDiscount[i-1, x] + discountTable[i, c-x]);