static class Program\n{\n    static int TargetSum = 10;\n    static int[] InputData = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n\n    static void Main()\n    {\n        // find all permutations\n        var permutations = Permute(InputData);\n\n        // check each permutation for the sum\n        foreach (var item in permutations) {\n\n            if (item.Sum() == TargetSum) {\n\n                Console.Write(string.Join(" + ", item.Select(n => n.ToString()).ToArray()));\n                Console.Write(" = " + TargetSum.ToString());\n                Console.WriteLine();\n\n            }\n        }\n\n        Console.ReadKey();\n    }\n\n    static IEnumerable<int[]> Permute(int[] data) { return Permute(data, 0); }\n\n    static IEnumerable<int[]> Permute(int[] data, int level)\n    {\n        // reached the edge yet? backtrack one step if so.\n        if (level >= data.Length) yield break;\n\n        // yield the first #level elements\n        yield return data.Take(level + 1).ToArray();\n\n        // permute the remaining elements\n        for (int i = level + 1; i < data.Length; i++) {\n            var temp = data[level];\n            data[level] = data[i];\n            data[i] = temp;\n\n            foreach (var item in Permute(data, level + 1))\n                yield return item;\n\n            temp = data[i];\n            data[i] = data[level];\n            data[level] = temp;\n        }\n\n    }\n}