public class TestProxy<T> : RealProxy where T : class\n{\n    public T Instance { get { return (T)GetTransparentProxy(); } }\n    private readonly MarshalByRefObject refObject;\n    private readonly string uri;\n\n    public TestProxy() : base(typeof(T))\n    {\n        refObject = (MarshalByRefObject)Activator.CreateInstance(typeof(T));\n        var objRef = RemotingServices.Marshal(refObject);\n        uri = objRef.URI;\n    }\n\n    // You can find more info on what can be done in here off MSDN.\n    public override IMessage Invoke(IMessage message)\n    {\n        Console.WriteLine("Invoke!");\n        message.Properties["__Uri"] = uri;\n        return ChannelServices.SyncDispatchMessage(message);\n    }\n}