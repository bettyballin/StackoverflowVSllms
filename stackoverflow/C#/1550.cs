private void ReceiveCallback(IAsyncResult ar)\n    {\n        int bytesRead = 0;\n\n        try\n        {\n            // receive finished\n            if (ar.IsCompleted)\n            {\n                TcpIpState stateObject = (TcpIpState)ar.AsyncState;\n                bytesRead = stateObject.TcpIpSocket.EndReceive(ar, out seSocketError);\n                if (bytesRead > 0)\n                {\n                    foreach (ArraySegment<byte> asBuffer in stateObject.Buffer)\n                    {\n\n                            stateObject.SBuilder.Append(\n                                Encoding.ASCII.GetChars(\n                                asBuffer.Array,\n                                0,\n                                asBuffer.Count));\n\n                    }\n                    // Let the owner object know of the received message\n                    base.EnqueueMessage(new TcpIpMessage(stateObject.SBuilder.ToString()));\n\n                    // Start a new receive operation\n                    stateObject.SBuilder = new StringBuilder();\n                    stateObject.Buffer.Clear();\n                    stateObject.Buffer.Add(new ArraySegment<byte>(new byte[_bufferSize]));\n                    stateObject.TcpIpSocket.BeginReceive(\n                        stateObject.Buffer,\n                        SocketFlags.None,\n                        new AsyncCallback(ReceiveCallback),\n                        stateObject);\n                }\n                else\n                {\n                    OnDisconnected(this, new Exception("Bytes returned are 0"));\n                    Disconnect();\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            // Something has gone wrong on a low level portion\n            OnDisconnected(this, e);\n            Disconnect();\n        }\n    }