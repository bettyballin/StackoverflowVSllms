using System;\nusing System.Collections.Generic;\nusing System.Threading;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static List<RunningProcess> runningProcesses = new List<RunningProcess>();\n\n        static void Main(string[] args)\n        {\n            Console.WriteLine("Starting...");\n\n            for (int i = 0; i < 100; i++)\n            {\n                DoSomethingOrTimeOut(30);\n            }\n\n            bool isSomethingRunning = false;\n\n            do\n            {\n                foreach (RunningProcess proc in runningProcesses)\n                {\n                    // If this process is running...\n                    if (proc.ProcessThread.ThreadState == ThreadState.Running)\n                    {\n                        isSomethingRunning = true;\n\n                        // see if it needs to timeout...\n                        if (DateTime.Now.Subtract(proc.StartTime).TotalSeconds > proc.TimeOutInSeconds)\n                        {\n                            proc.ProcessThread.Abort();\n                        }\n                    }\n                }\n            }\n            while (isSomethingRunning);\n\n            Console.WriteLine("Done!");    \n\n            Console.ReadLine();\n        }\n\n        static void DoSomethingOrTimeOut(int timeout)\n        {\n            runningProcesses.Add(new RunningProcess\n            {\n                StartTime = DateTime.Now,\n                TimeOutInSeconds = timeout,\n                ProcessThread = new Thread(new ThreadStart(delegate\n                  {\n                      // do task here...\n                  })),\n            });\n\n            runningProcesses[runningProcesses.Count - 1].ProcessThread.Start();\n        }\n    }\n\n    class RunningProcess\n    {\n        public int TimeOutInSeconds { get; set; }\n\n        public DateTime StartTime { get; set; }\n\n        public Thread ProcessThread { get; set; }\n    }\n}