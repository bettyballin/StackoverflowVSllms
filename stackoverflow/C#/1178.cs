public ValidationError Validate<T>(T entityProperty, string[] entityPropertyName)\n{                  \n    ICollection<T> businessObjectList = FetchObjectsByType<T>();\n    Hashtable properties = EnumeratePropertyInfo<T>(entityProperty, entityPropertyName);\n    return businessObjectList.Any(obj => IsDuplicate<T>(obj, properties)) == true ? new ValidationError(_DuplicateMessage) : ValidationError.Empty;\n}\n\n\nprivate Hashtable EnumeratePropertyInfo<T>(T entityProperty, string[] entityPropertyName)\n{\n    Hashtable properties = new Hashtable();\n    for (int i = 0; i < entityPropertyName.Length; i++)        \n    {            \n        object value = getPropertyValue(entityProperty, entityPropertyName[i]);\n        properties.Add(entityPropertyName[i], value);\n    }\n    return properties;\n}\n\n// all properties must be matched for a duplicate to be found\nprivate bool IsDuplicate<T>(T entityProperty, Hashtable properties)\n{\n    foreach(DictionaryEntry prop in properties)\n    {\n        var curValue = getPropertyValue(entityProperty, prop.Key.ToString());\n        if (!prop.Value.Equals(curValue))\n        {\n            return false;\n        }\n    }\n    return true;\n}