using System;\nusing System.IO;\nusing System.Collections.Generic;\n\nnamespace DirectoryWalker\n{\n    public class DirectoryWalker : IEnumerable<string>\n    {\n        private string _seedPath;\n        Func<string, bool> _directoryFilter, _fileFilter;\n\n        public DirectoryWalker(string seedPath) : this(seedPath, null, null)\n        {\n        }\n\n        public DirectoryWalker(string seedPath, Func<string, bool> directoryFilter, Func<string, bool> fileFilter)\n        {\n            if (seedPath == null)\n                throw new ArgumentNullException(seedPath);\n            _seedPath = seedPath;\n            _directoryFilter = directoryFilter;\n            _fileFilter = fileFilter;\n        }\n\n        public IEnumerator<string> GetEnumerator()\n        {\n            Queue<string> directories = new Queue<string>();\n            directories.Enqueue(_seedPath);\n            Queue<string> files = new Queue<string>();\n            while (files.Count > 0 || directories.Count > 0)\n            {\n                if (files.Count > 0)\n                {\n                    yield return files.Dequeue();\n                }\n\n                if (directories.Count > 0)\n                {\n                    string dir = directories.Dequeue();\n                    string[] newDirectories = Directory.GetDirectories(dir);\n                    string[] newFiles = Directory.GetFiles(dir);\n                    foreach (string path in newDirectories)\n                    {\n                        if (_directoryFilter == null || _directoryFilter(path))\n                            directories.Enqueue(path);\n                    }\n                    foreach (string path in newFiles)\n                    {\n                        if (_fileFilter == null || _fileFilter(path))\n                            files.Enqueue(path);\n                    }\n                }\n            }\n        }\n\n        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()\n        {\n            return GetEnumerator();\n        }\n    }\n}