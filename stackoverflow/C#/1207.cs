private const string StringType = "String";\nprivate const EntityState SavingState = EntityState.Added | EntityState.Modified;\npublic override int SaveChanges()\n{\n  //when using on ObjectContext replace 'objectContext' with 'this',\n  //and override SaveChanges(SaveOptions options) instead:\n\n  var objectContext = ((IObjectContextAdapter)this).ObjectContext;\n  var savingEntries = objectContext.ObjectStateManager\n    .GetObjectStateEntries(SavingState);\n\n  foreach (var entry in savingEntries)\n  {\n    var curValues = entry.CurrentValues;\n    var fieldMetadata = curValues.DataRecordInfo.FieldMetadata;\n    var stringFields = fieldMetadata\n      .Where(f => f.FieldType.TypeUsage.EdmType.Name == StringType);\n    foreach (var stringField in stringFields)\n    {\n      var ordinal = stringField.Ordinal;\n      var curValue = curValues[ordinal] as string;\n      if (curValue != null && curValue.All(char.IsWhiteSpace))\n        curValues.SetValue(ordinal, null);\n    }\n  }\n  return base.SaveChanges(); //SaveChanges(options) on ObjectContext\n}