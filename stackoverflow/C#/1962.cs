//class to hold our object graph in memory\n//this is only a good idea if you have a small number of items\n//(less than a few thousand)\n//if so, this is a very flexible and reusable way to represent your tree\npublic class Page\n{\n    public string Title {get;set;}\n    public int ID {get;set;}\n    public Collection<Page> Pages = new Collection<Page>();\n\n    public Page FindPage(int id)\n    {\n        return FindPage(this, id);\n    }\n\n    private Page FindPage(Page page, int id)\n    {\n        if(page.ID == id)\n        {\n            return page;\n        }\n        Page returnPage = null;\n        foreach(Page child in page.Pages)\n        {\n            returnPage = child.FindPage(id);\n            if(returnPage != null)\n            {\n                break;\n            }\n        }\n        return returnPage;\n    }\n}\n\n//construct our object graph\nDataTable data = SelectAllDataFromTable_OrderedByParentIDAscending();\nList<Page> topPages = new List<Page>();\nforeach(DataRow row in data.Rows)\n{\n    Page page = new Page();\n    page.Title = (string)row["Title"];\n    page.ID = (int)row["PageID"];\n    if(row["ParentID"] == null)\n    {\n        topPages.Add(page);\n    }\n    else\n    {\n        int parentID = (int)row["ParentID"];\n        foreach(Page topPage in topPages)\n        {\n            Page parentPage = topPage.FindPage(parentID);\n            if(parentPage != null)\n            {\n                parentPage.Pages.Add(page);\n                break;\n            }\n        }\n    }\n}\n\n//render to page\npublic override void Render(HtmlTextWriter writer)\n{\n    writer.WriteFullBeginTag("ul");\n    foreach(Page child in topPages)\n    {\n        RenderPage(writer, child);\n    }\n    writer.WriteEndTag("ul");\n}\n\nprivate void RenderPage(HtmlTextWriter writer, Page page)\n{\n    writer.WriteFullBeginTag("li");\n    writer.WriteBeginTag("a");\n    writer.WriteAttribute("href", "url");\n    writer.Write(HtmlTextWriter.TagRightChar);\n    writer.Write(page.Title);\n    writer.WriteEndTag("a");\n    if(page.Pages.Count > 0)\n    {\n        writer.WriteFullBeginTag("ul");\n        foreach(Page child in page.Pages)\n        {\n            RenderPage(writer, child);\n        }\n        writer.WriteEndTag("ul");\n    }\n    writer.WriteEndTag("li");\n}