private Store LoadStore()\n{\n    var store = new Store();\n    store.LoadDomainModels(typeof(CoreDesignSurfaceDomainModel), typeof(ActiveWriterDomainModel));\n    return store;\n}\n\nprivate void LoadDiagram(Store store)\n{\n    using (var tx = store.TransactionManager.BeginTransaction("tx", true))\n    {\n        var validator = new ValidationController();\n        var deserializer = ActiveWriterSerializationHelper.Instance;\n        deserializer.LoadModelAndDiagram(store,\n            @"..\..\ActiveWriter1.actiw", @"..\..\ActiveWriter1.actiw.diagram", null, validator);\n        tx.Commit();\n    }\n}\n\nprivate DiagramView CreateDiagramView()\n{\n    var store = LoadStore();\n    LoadDiagram(store);\n\n    using (var tx = store.TransactionManager.BeginTransaction("tx2", true))\n    {\n        var dir = store.DefaultPartition.ElementDirectory;\n        var diag = dir.FindElements<ActiveRecordMapping>().SingleOrDefault();\n        var view = new DiagramView(){Diagram = diag};\n        diag.Associate(view);\n        tx.Commit();\n\n        view.Dock = DockStyle.Fill;\n        return view;\n    }\n}\n\nprotected override void OnLoad(EventArgs e)\n{\n    var view = CreateDiagramView();\n    this.Controls.Add(view);\n}