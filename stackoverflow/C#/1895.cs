private static string CreateEncryptedString(string myString, string hexiv, string key)\n    {\n        RijndaelManaged alg = new RijndaelManaged();\n        alg.Padding = PaddingMode.Zeros;\n        alg.Mode = CipherMode.CBC;\n        alg.BlockSize = 16 * 8;\n        alg.Key = ASCIIEncoding.UTF8.GetBytes(key);\n        alg.IV = StringToByteArray(hexiv);\n        ICryptoTransform encryptor = alg.CreateEncryptor(alg.Key, alg.IV);\n\n        MemoryStream msStream = new MemoryStream();\n        CryptoStream mCSWriter = new CryptoStream(msStream, encryptor, CryptoStreamMode.Write);\n        StreamWriter mSWriter = new StreamWriter(mCSWriter);\n        mSWriter.Write(myString);\n        mSWriter.Flush();\n        mCSWriter.FlushFinalBlock();\n\n        var EncryptedByte = new byte[msStream.Length];\n        msStream.Position = 0;\n        msStream.Read(EncryptedByte, 0, (int)msStream.Length);\n\n        return ByteArrayToHexString(EncryptedByte);\n\n    }\n\n    public static byte[] StringToByteArray(String hex)\n    {\n        int NumberChars = hex.Length;\n        byte[] bytes = new byte[NumberChars / 2];\n        for (int i = 0; i < NumberChars; i += 2)\n            bytes[i / 2] = Convert.ToByte(hex.Substring(i, 2), 16);\n        return bytes;\n    }\n\n    public static string ByteArrayToHexString(byte[] ba)\n    {\n        StringBuilder hex = new StringBuilder(ba.Length * 2);\n        foreach (byte b in ba)\n            hex.AppendFormat("{0:x2}", b);\n        return hex.ToString();\n    }