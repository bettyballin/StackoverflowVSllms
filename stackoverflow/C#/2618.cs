class Response < T > {\n public ResponseData < T > [] responseData = new ResponseData < T > [0];\n public HttpStatusCode responseStatus;\n public object responseDetails;\n}\n\npublic class ResponseData < TInternal > {\n public TInternal responseData;\n public HttpStatusCode responseStatus;\n public object responseDetails;\n}\n\npublic class TranslatedText {\n public string translatedText;\n}\n\n[Test]\npublic void Sample() {\n var input = @ " {\n  ""\n  responseData "": [{\n    ""\n    responseData "": {\n     ""\n     translatedText "": ""\n     elefante ""\n    },\n    ""\n    responseDetails "": null,\n    ""\n    responseStatus "": 200\n   }, {\n    ""\n    responseData "": {\n     ""\n     translatedText "": ""\n     Burro ""\n    },\n    ""\n    responseDetails "": null,\n    ""\n    responseStatus "": 200\n   }],\n   ""\n  responseDetails "": null, ""\n  responseStatus "": 200\n }\n ";\n\n var json = new JavaScriptSerializer();\n var response = json.Deserialize < Response < TranslatedText >> (input);\n Assert.AreEqual(response.responseData[0].responseData.translatedText, "elefante");\n Assert.AreEqual(response.responseStatus, HttpStatusCode.OK);\n}