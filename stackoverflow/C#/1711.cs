public static IEnumerable<Node<T>> Hierarchize<T, TKey, TOrderKey>(\n    this IEnumerable<T> elements, \n    TKey topMostKey, \n    Func<T, TKey> keySelector, \n    Func<T, TKey> parentKeySelector, \n    Func<T, TOrderKey> orderingKeySelector)\n{\n    var families = elements.ToLookup(parentKeySelector);\n    var childrenFetcher = default(Func<TKey, IEnumerable<Node<T>>>);\n    childrenFetcher = parentId => families[parentId]\n        .OrderBy(orderingKeySelector)\n        .Select(x => new Node<T>(x, childrenFetcher(keySelector(x))));\n\n    return childrenFetcher(topMostKey);\n}