public object Execute(object target, IEnumerable<string> memberNames, IEnumerable<object[]> args)\n    {\n        if(memberNames.Count() == 0)\n            return target;\n\n        string currentMember = memberNames.First();\n        object[] currentArgs = args.First();\n\n        object value;\n\n        if (currentArgs.Length == 0)\n        {\n            //property\n            PropertyInfo pi = target.GetType().GetProperty(currentMember);\n            value = pi.GetValue(target, null);\n        }\n        else\n        {\n            //method\n            MethodInfo mi = target.GetType().GetMethod(currentMember);\n            value = mi.Invoke(target, currentArgs);\n        }\n\n        return Execute(value, memberNames.Skip(1), args.Skip(1));\n    }