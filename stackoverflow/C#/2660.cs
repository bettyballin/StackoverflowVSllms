/// <summary>\n        /// Gets the login URL for the given portal from the current <paramref name="request"/>.\n        /// </summary>\n        /// <param name="portalSettings">The portal settings.</param>\n        /// <param name="request">The request.</param>\n        /// <returns>The URL for the login page</returns>\n        /// <exception cref="ArgumentNullException">if <paramref name="portalSettings"/> or <paramref name="request"/> is null.</exception>\n        public static string GetLoginUrl(PortalSettings portalSettings, HttpRequest request)\n        {\n            if (portalSettings != null && request != null)\n            {\n                int tabId = portalSettings.ActiveTab.TabID;\n                string controlKey = "Login";\n                string returnUrl = request.RawUrl;\n                if (returnUrl.IndexOf("?returnurl=", StringComparison.OrdinalIgnoreCase) > -1)\n                {\n                    returnUrl = returnUrl.Substring(0, returnUrl.IndexOf("?returnurl=", StringComparison.OrdinalIgnoreCase));\n                }\n\n                returnUrl = HttpUtility.UrlEncode(returnUrl);\n\n                if (!Null.IsNull(portalSettings.LoginTabId) && string.IsNullOrEmpty(request.QueryString["override"]))\n                {\n                    // user defined tab\n                    controlKey = string.Empty;\n                    tabId = portalSettings.LoginTabId;\n                }\n                else if (!Null.IsNull(portalSettings.HomeTabId))\n                {\n                    // portal tab\n                    tabId = portalSettings.HomeTabId;\n                }\n\n                // else current tab\n                return Globals.NavigateURL(tabId, controlKey, new string[] { "returnUrl=" + returnUrl });\n            }\n\n            throw new ArgumentNullException(portalSettings == null ? "portalSettings" : "request");\n        }