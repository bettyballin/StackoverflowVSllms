public static MachineType GetDllMachineType (string dllPath)\n{\n    // See http://www.microsoft.com/whdc/system/platform/firmware/PECOFF.mspx\n    // Offset to PE header is always at 0x3C.\n    // The PE header starts with "PE\0\0" =  0x50 0x45 0x00 0x00,\n    // followed by a 2-byte machine type field (see the document above for the enum).\n    //\n    using (var fs = new FileStream (dllPath, FileMode.Open, FileAccess.Read))\n    using (var br = new BinaryReader (fs))\n    {\n        fs.Seek (0x3c, SeekOrigin.Begin);\n        Int32 peOffset = br.ReadInt32();\n\n        fs.Seek (peOffset, SeekOrigin.Begin);\n        UInt32 peHead = br.ReadUInt32();\n\n        if (peHead != 0x00004550) // "PE\0\0", little-endian\n            throw new Exception ("Can't find PE header");\n\n        return (MachineType)br.ReadUInt16();\n    }\n}