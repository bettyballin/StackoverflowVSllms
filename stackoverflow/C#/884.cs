int reti = CryptoApi.CryptGetUserKey(_hprovider, keytype, ref userKey);\n\nif (reti)\n{\n    reti =CryptoApi.CryptGetKeyParam(_userKey, KP_CERTIFICATE, ref  pbdata, ref pwddatalen, 0);\n}\n\nif (reti || pwddatalen>0)\n{\n    byte[] data = new byte[pwddatalen];\n    ret  = CryptoApi.CryptGetKeyParam(_userKey, KP_CERTIFICATE, data, ref pwddatalen, 0);\n    if (ret) \n    {\n        X509Certificate2 c = new X509Certificate2(data);\n        X509Store store = new X509Store(StoreName.My, StoreLocation.CurrentUser);\n        store.Open(OpenFlags.ReadOnly);\n        X509Certificate2Collection col = store.Certificates.Find(X509FindType.FindByThumbprint, c.Thumbprint, validonly);\n        store.Close();\n\n        if (col.Count != 1) \n        {\n            //not found in store - CSP didn't copy it\n            c.PrivateKey = PrivateKey(keytype);\n            return c;\n        }\n        else\n        {\n            return col[0];\n        }\n    }\n}\n\n\nprivate RSACryptoServiceProvider PrivateKey (KeyType keytype)\n{\n    CspParameters csparms = new CspParameters();\n    csparms.KeyContainerName = _containerName;\n    csparms.ProviderName = _provider;\n    csparms.ProviderType = 1;\n    csparms.Flags = CspProviderFlags.UseMachineKeyStore | CspProviderFlags.UseExistingKey;\n    csparms.KeyNumber = (int)keytype;\n\n    return new RSACryptoServiceProvider(csparms);\n}