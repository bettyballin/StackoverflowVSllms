class Program\n{\n\n    private static volatile bool _s_stop = false;\n\n    public static void Main(string[] args)\n    {\n        Console.CancelKeyPress += new ConsoleCancelEventHandler(Console_CancelKeyPress);\n        while (!_s_stop)\n        {\n            /* put real logic here */\n            Console.WriteLine("still running at {0}", DateTime.Now);\n            Thread.Sleep(3000);\n        }\n        Console.WriteLine("Graceful shut down code here...");\n\n        //don't leave this...  demonstration purposes only...\n        Console.ReadLine();\n    }\n\n    static void Console_CancelKeyPress(object sender, ConsoleCancelEventArgs e)\n    {\n        //you have 2 options here, leave e.Cancel set to false and just handle any\n        //graceful shutdown that you can while in here, or set a flag to notify the other\n        //thread at the next check that it's to shut down.  I'll do the 2nd option\n        e.Cancel = true;\n        _s_stop = true;\n        Console.WriteLine("CancelKeyPress fired...");\n    }\n\n}