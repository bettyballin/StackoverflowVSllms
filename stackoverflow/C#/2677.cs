public class UserTable : Dictionary<string, Dictionary<string, object>>\n{\n    public new object this[string key]\n    {\n        get\n        {\n            object value = null;\n            if (HttpContext.Current != null)\n            {\n                var sessionId = HttpContext.Current.Session.SessionID;\n                if (ContainsKey(sessionId) && base[sessionId].ContainsKey(key))\n                    value = base[sessionId][key];\n            }\n            else\n                throw new Exception("No HttpContext present.");\n            return value;\n        }\n        set\n        {\n            if (HttpContext.Current != null)\n            {\n                var sessionId = HttpContext.Current.Session.SessionID;\n                if (!ContainsKey(sessionId))\n                    Add(sessionId, new Dictionary<string, object>());\n                if (!base[sessionId].ContainsKey(key))\n                    base[sessionId].Add(key, value);\n                else\n                    base[sessionId][key] = value;\n            }\n            else\n                throw new Exception("No HttpContext present.");\n        }\n    }\n\n    public object this[string sessionId, string key]\n    {\n        get\n        {\n            object value = null;\n            if (ContainsKey(sessionId) && base[sessionId].ContainsKey(key))\n                value = base[sessionId][key];\n            return value;\n        }\n        set\n        {\n            if (!ContainsKey(sessionId))\n                Add(sessionId, new Dictionary<string, object>());\n            if (!base[sessionId].ContainsKey(key))\n                base[sessionId].Add(key, value);\n            else\n                base[sessionId][key] = value;\n        }\n    }\n\n    public void Add(string sessionId)\n    {\n        Add(sessionId, new Dictionary<string, object>());\n    }\n\n    public void Add()\n    {\n        if (HttpContext.Current != null)\n            Add(HttpContext.Current.Session.SessionID);\n        else\n            throw new Exception("No HttpContext present.");\n    }\n\n    public new void Remove(string sessionId)\n    {\n        base.Remove(sessionId);\n    }\n\n    public void Remove()\n    {\n        if (HttpContext.Current != null)\n            Remove(HttpContext.Current.Session.SessionID);\n        else\n            throw new Exception("No HttpContext present.");\n    }\n}