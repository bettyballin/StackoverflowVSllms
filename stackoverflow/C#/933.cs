[ServiceBehavior(IncludeExceptionDetailInFaults = true, InstanceContextMode = InstanceContextMode.Single, ConcurrencyMode = ConcurrencyMode.Single)]\n[AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]\n[ServiceContract]\npublic partial class LibraryFeed\n{\n    public LibraryFeed()\n    {\n    }\n\n    /// <summary>\n    /// Returns an Atom feed.\n    /// </summary>\n    /// <returns>Atom feed in response to a HTTP GET request at URLs conforming to the URI template of the WebGetAttribute.</returns>\n    [WebHelp(Comment = "Gets a list of Books.")]\n    [WebGet(UriTemplate = "/books/?numItems={numItems}")]\n    [OperationContract]\n    public Atom10FeedFormatter GetBooks(int numItems)\n    {\n        var books = GetBooks();\n        List<SyndicationItem> items = GetItems(books, numItems);\n\n        SyndicationFeed feed = CreateFeed(items);\n\n        WebOperationContext.Current.OutgoingResponse.ContentType = ContentTypes.Atom;\n        return feed.GetAtom10Formatter();\n    }\n\n    /// <summary>\n    /// Returns an Atom feed.\n    /// </summary>\n    /// <returns>Atom feed in response to a HTTP GET request at URLs conforming to the URI template of the WebGetAttribute.</returns>\n    [WebHelp(Comment = "Gets a single author.")]\n    [WebGet(UriTemplate = "/authors/?numItems={numItems}")]\n    [OperationContract]\n    public Atom10FeedFormatter GetAuthors(int numItems)\n    {\n        var authors = GetAuthors();\n        List<SyndicationItem> items = GetItems(authors, numItems);\n\n        SyndicationFeed feed = CreateFeed(items);\n\n        WebOperationContext.Current.OutgoingResponse.ContentType = ContentTypes.Atom;\n        return feed.GetAtom10Formatter();\n    }\n\n    /// <summary>\n    /// Returns an Atom feed.\n    /// </summary>\n    /// <returns>Atom feed in response to a HTTP GET request at URLs conforming to the URI template of the WebGetAttribute.</returns>\n    [WebHelp(Comment = "Gets a list of Authors.")]\n    [WebGet(UriTemplate = "/authors/{id}")]\n    [OperationContract]\n    public Atom10FeedFormatter GetAuthor(string id)\n    {\n        var author = GetSingleAuthor(id);\n        WebOperationContext.Current.OutgoingResponse.ContentType = ContentTypes.Atom;\n        return GetItem(author.GetAtom10Formatter());\n    }\n}