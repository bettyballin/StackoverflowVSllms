public interface IRandomNumberGeneratorFactory\n{\n  IRandomNumberGenerator CreateGenerator(int seed);\n}\n\n[Export(typeof(IRandomNumberGeneratorFactory))]\npublic class ConcreateRNGFactory : IRandomNumberGeneratorFactory\n{\n  public IRandomNumberGenerator CreateGenerator(int seed)\n  {\n    return new ConcreateRNG(seed);\n  }\n}\n\npublic class Consumer\n{\n  [Import(typeof(IRandomNumberGeneratorFactory))]\n  private IRandomNumberGeneratorFactory generatorFactory;\n  private List<IRandomNumberGenerator> generators;    \n  private List<double> seeds;    \n\n  public Consumer()    \n  {\n    generators = new List<IRandomNumberGenerator>();\n    seeds = new List<double>(new[] {1.0, 2.0, 3.0});\n\n    foreach(var seed in seeds)\n    {            \n      generators.Add(generatorFactory.CreateGenerator(seed));\n    }\n  }\n}