IQueryable<ComputerAttribute> results = null;\nforeach(ComputerRequirement z in requirements)\n{\n  //must assign to a locally scoped variable to avoid using\n  //  the same reference in all of the where methods.\n  ComputerRequirement cr = z;\n  if (results == null)\n  {\n    results = db.ComputerAttributes\n      .Where(c => c.Attribute == cr.Attribute && c.Value >= cr.Value);\n  }\n  else\n  {\n    results = results\n      .Concat(db.ComputerAttributes\n         .Where(c => c.Attribute == cr.Attribute && c.Value >= cr.Value)\n      );\n  }\n}\n\nint requirementCount = requirements.Count();\n\n//Get the id's of computers that matched all requirements.\nIQueryable<int> ids = results\n  .GroupBy(x => x.ComputerId)\n  .Where(g => g.Count == requirementsCount)\n  .Select(g => g.Key);\n\n\n//Get all attributes for those id's\nList<ComputerAttributes> data = db\n  .ComputerAttributes.Where(c => ids.Contains(c.ComputerId))\n  .ToList();