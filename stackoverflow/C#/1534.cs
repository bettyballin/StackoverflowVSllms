public class FormRewriterControlAdapter : System.Web.UI.Adapters.ControlAdapter \n{\n    protected override void Render(HtmlTextWriter writer)\n    {\n        base.Render(new RewriteFormHtmlTextWriter(writer));\n    }\n}\n\npublic class RewriteFormHtmlTextWriter : HtmlTextWriter\n{\n    private const string contextItemKey = "FormActionWritten";\n\n    public RewriteFormHtmlTextWriter(HtmlTextWriter writer) : base(writer)\n    {\n        InnerWriter = writer.InnerWriter;\n    }\n\n    public RewriteFormHtmlTextWriter(System.IO.TextWriter writer) : base(writer)\n    {\n        base.InnerWriter = writer;\n    }\n\n    public override void WriteAttribute(string name, string value, bool fEncode)\n    {\n        // If the attribute we are writing is the "action" attribute, and we are not on a sub-control, \n        // then replace the value to write with the raw URL of the request - which ensures that we'll\n        // preserve the PathInfo value on postback scenarios\n\n        if (name == "action" && !HttpContext.Current.Items.Contains(contextItemKey))\n        {\n            // Use the Request.RawUrl property to retrieve the un-rewritten URL\n            value = HttpContext.Current.Request.RawUrl;\n            HttpContext.Current.Items[contextItemKey] = true;\n        }\n\n        base.WriteAttribute(name, value, fEncode);\n    }\n}