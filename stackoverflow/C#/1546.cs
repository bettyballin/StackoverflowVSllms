public enum ChannelARGB\n    {\n        Blue = 0,\n        Green = 1,\n        Red = 2,\n        Alpha = 3\n    }\n\n    public static void transferOneARGBChannelFromOneBitmapToAnother(\n        Bitmap source,\n        Bitmap dest,\n        ChannelARGB sourceChannel,\n        ChannelARGB destChannel )\n    {\n        if ( source.Size!=dest.Size )\n            throw new ArgumentException();\n        Rectangle r = new Rectangle( Point.Empty, source.Size );\n        BitmapData bdSrc = source.LockBits( r, ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb );\n        BitmapData bdDst = dest.LockBits( r, ImageLockMode.ReadWrite, PixelFormat.Format32bppArgb );\n        unsafe\n        {\n            byte* bpSrc = (byte*)bdSrc.Scan0.ToPointer();\n            byte* bpDst = (byte*)bdDst.Scan0.ToPointer();\n            bpSrc += (int)sourceChannel;\n            bpDst += (int)destChannel;\n            for ( int i = r.Height * r.Width; i > 0; i-- )\n            {\n                *bpDst = *bpSrc;\n                bpSrc += 4;\n                bpDst += 4;\n            }\n        }\n        source.UnlockBits( bdSrc );\n        dest.UnlockBits( bdDst );\n    }