class TreeNodeController {\n  Entity data; \n\n  virtual bool IsReadOnly { get; }\n  virtual bool CanDrop(TreeNodeController source, DragDropEffects effect);\n  virtual bool CanDrop(DataInfoObject info, DragDropEffects effect);\n  virtual bool CanRename();\n}\n\nclass ParentNodeController : TreeNodeController {\n  override bool IsReadOnly { get { return data.IsReadOnly; } } \n  override bool CanDrop(TreeNodeController source, DragDropEffect effect) {\n    return !IsReadOnly && !data.IsChildOf(source.data) && effect == DragDropEffect.Move;\n  }\n  virtual bool CanDrop(DataInfoObject info, DragDropEffects effect) {\n    return info.DragDataCollection != null;\n  }\n  override bool CanRename() { \n    return !data.IsReadOnly && data.HasName;\n  }\n}\n\nclass LeafNodeController : TreeNodeController {\n  override bool CanDrop(TreeNodeController source, DragDropEffect effect) {\n    return false;\n  }\n}