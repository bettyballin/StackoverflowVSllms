// Make a visual brush out of the masking control.\nVisualBrush brush = new VisualBrush(maskingControl);\n// Set desired opacity.\nbrush.Opacity = 1.0;\n// Get the offset between the two controls.\nPoint offset = controlBeingMasked.TranslatePoint(new Point(0, 0), maskingControl);\n// Determine the difference in scaling.\nPoint scale = new Point(maskingControl.ActualWidth / controlBeingMasked.ActualWidth, \n    maskingControl.ActualHeight / controlBeingMasked.ActualHeight);\nTransformGroup group = new TransformGroup();\n// Set the scale of the mask.\ngroup.Children.Add(new ScaleTransform(scale.X, scale.Y, 0, 0));\n// Translate the mask so that it always stays in place.\ngroup.Children.Add(new TranslateTransform(-offset.X, -offset.Y));\n// Rotate it by the reverse of the control, to keep it oriented correctly.\n// (I am using a ScatterViewItem, which exposes an ActualOrientation property)\ngroup.Children.Add(new RotateTransform(-controlBeingMasked.ActualOrientation, 0, 0));\nbrush.Transform = group;\ncontrolBeingMasked.OpacityMask = brush;