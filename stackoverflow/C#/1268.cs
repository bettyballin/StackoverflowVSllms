Mock<ControllerContext> MockContext(string userName)\n    {\n        var mockContext = new Mock<ControllerContext>();\n        // mock an authenticated user\n        mockContext.SetupGet(p => p.HttpContext.User.Identity.Name).Returns(userName);\n        mockContext.SetupGet(p => p.HttpContext.User.Identity.IsAuthenticated).Returns(true);\n        return mockContext;\n    }\n\n    [TestMethod]\n    public void DinnersController_Delete_Should_Fail_With_InvalidOwner_Given_Wrong_User()\n    {\n        //set by default\n        var mockContext = MockContext("scottha");\n\n        // mock an authenticated user\n        _dinnerController.ControllerContext = mockContext.Object;\n\n        ViewResult result = _dinnerController.Delete(1, "") as ViewResult;\n        Assert.AreEqual("InvalidOwner", result.ViewName);\n    }