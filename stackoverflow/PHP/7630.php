interface iCallableJob\n{\n    public function run();\n}\n\nclass Job implements iCallableJob\n{\n    // The parameterized factory method\n    public static function factory($type)\n    {\n        $classname = 'Job_' . $type;\n        if (class_exists($classname) && in_array('iCallableJob', class_implements('Job')))\n        {\n            return new $classname();\n        }\n        return null;\n    }\n    public function run() { return null; }\n}\n\nclass Job_type1 extends Job \n{\n    public function run() \n    {\n        echo 'Job 1';\n    }\n}\n\nclass JobManager\n{\n    protected $jobs2do = array();\n\n    public function addJob($type)\n    {\n        if ($job = Job::factory($type))\n        {\n            $this->jobs2do[] = $job;\n            return $job;\n        }\n        return null;\n    }\n    public function runAll()\n    {\n        foreach ($this->jobs2do AS $job)\n        {\n            $job->run();\n        }\n    }\n}