abstract class MethodOfTransport {\n    protected $model;\n\n    public function __construct($model) {\n        $this->model = $model;\n    }\n\n    abstract public function printKind();\n\n    public static function create($model, $type) {\n       $object = new $type($model);\n       return $object;\n    }\n}\n\nclass cycle extends MethodOfTransport {\n    public function printKind() {\n        echo 'im a cycle, model: '.$this->model.'<br />';\n    }\n}\n\nclass car extends MethodOfTransport {\n    public function printKind() {\n        echo 'im a car, model: '.$this->model.'<br />';\n    }\n}\n\n$maserati = MethodOfTransport::create('maserati4', 'car');\n$maserati->printKind();\n\n$ducati =  MethodOfTransport::create('maserati4', 'cycle');\n$ducati->printKind();