interface iVendor{\n    public function getName();\n    public function getVendors_no();\n    public function getZip();\n    public function getCountryCode();\n    public function setName($name);\n    public function setVendors_no($vendors_no);\n    public function setZip($zip);\n    public function setCountryCode($countryCode);\n}\n\ninterface iShipper extends iVendor{\n    public function getTransitTime($shipment = null);\n    public function getTransitCost($shipment = null);\n    public function getCurrentShipment();\n    public function setCurrentShipment($shipment);\n    public function getStatus($shipment = null);\n}\n\nabstract class Shipper implements iShipper{  \n    abstract public function __construct($vendors_no = null, $shipment = null);  \n    //a bunch of non-abstract common methods...  \n}\n\nclass FedEx extends Shipper implements iShipper{  \n    public function __construct($vendors_no = null, $shipment = null){\n        //a bunch of setup code...\n    }\n    //all my FedEx specific methods...\n}