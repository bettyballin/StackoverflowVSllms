class YourController extends TheController{\n  // debug, don't forget to remove/comment out this method\n  public static function myErrorHandler($errno, $errstr, $errfile, $errline) {\n    $source = file($errfile);\n    echo '<fieldset><legend>', htmlspecialchars($errstr. ', '.$errfile.'@'.$errline), "<legend><pre>\n";\n    for($i=$errline-8; $i<$errline+3; $i++) {\n      if ( isset($source[$i]) ) {\n        echo $i+1, ': ', htmlspecialchars($source[$i]);\n      }\n    }\n    echo "\n</pre></fieldset>\n";\n    flush();\n    return false;\n  }\n\n  public function __construct()\n  {\n    set_error_handler('YourController::myErrorHandler'); // debug, don't forget to remove\n    error_reporting(E_ALL); ini_set('display_errors', 1);  // debug, don't forget to remove\n    assert_options(ASSERT_ACTIVE, 1);  // debug, don't forget to remove\n    assert_options(ASSERT_WARNING, 1);  // debug, don't forget to remove\n    assert_options(ASSERT_BAIL, 1);  // debug, don't forget to remove\n    assert_options(ASSERT_QUIET_EVAL, 1);  // debug, don't forget to remove\n    parent::__construct();\n\n    $this->loadModel("AccountModel", "Model");\n    assert( is_object($this->Model) );  // debug, don't forget to remove\n    $account = $this->getUserAccount();\n  }\n\n  public function loadModel($model_name, $var_name)\n  {\n     // blah blah blah\n     $obj = new $model_name();\n     $this->$var_name = $obj;\n  }\n\n  public function getUserAccount() {\n    assert( is_object($this->Model) );  // debug, don't forget to remove\n    assert( is_callable(array($this->Model, 'getAccount')) );  // debug, don't forget to remove\n    $account = $this->Model->getAccount($_SESSION["account"]["user_account_id"]);\n  }