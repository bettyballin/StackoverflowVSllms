/**\n * Convert an IP address from presentation to decimal(39,0) format suitable for storage in MySQL\n *\n * @param string $ip_address An IP address in IPv4, IPv6 or decimal notation\n * @return string The IP address in decimal notation\n */\nfunction inet_ptod($ip_address)\n{\n    // IPv4 address\n    if (strpos($ip_address, ':') === false && strpos($ip_address, '.') !== false) {\n        $ip_address = '::' . $ip_address;\n    }\n\n    // IPv6 address\n    if (strpos($ip_address, ':') !== false) {\n        $network = inet_pton($ip_address);\n        $parts = unpack('N*', $network);\n\n        foreach ($parts as &$part) {\n            if ($part < 0) {\n                $part = bcadd((string) $part, '4294967296');\n            }\n\n            if (!is_string($part)) {\n                $part = (string) $part;\n            }\n        }\n\n        $decimal = $parts[4];\n        $decimal = bcadd($decimal, bcmul($parts[3], '4294967296'));\n        $decimal = bcadd($decimal, bcmul($parts[2], '18446744073709551616'));\n        $decimal = bcadd($decimal, bcmul($parts[1], '79228162514264337593543950336'));\n\n        return $decimal;\n    }\n\n    // Decimal address\n    return $ip_address;\n}\n\n/**\n * Convert an IP address from decimal format to presentation format\n *\n * @param string $decimal An IP address in IPv4, IPv6 or decimal notation\n * @return string The IP address in presentation format\n */\nfunction inet_dtop($decimal)\n{\n    // IPv4 or IPv6 format\n    if (strpos($decimal, ':') !== false || strpos($decimal, '.') !== false) {\n        return $decimal;\n    }\n\n    // Decimal format\n    $parts = array();\n    $parts[1] = bcdiv($decimal, '79228162514264337593543950336', 0);\n    $decimal = bcsub($decimal, bcmul($parts[1], '79228162514264337593543950336'));\n    $parts[2] = bcdiv($decimal, '18446744073709551616', 0);\n    $decimal = bcsub($decimal, bcmul($parts[2], '18446744073709551616'));\n    $parts[3] = bcdiv($decimal, '4294967296', 0);\n    $decimal = bcsub($decimal, bcmul($parts[3], '4294967296'));\n    $parts[4] = $decimal;\n\n    foreach ($parts as &$part) {\n        if (bccomp($part, '2147483647') == 1) {\n            $part = bcsub($part, '4294967296');\n        }\n\n        $part = (int) $part;\n    }\n\n    $network = pack('N4', $parts[1], $parts[2], $parts[3], $parts[4]);\n    $ip_address = inet_ntop($network);\n\n    // Turn IPv6 to IPv4 if it's IPv4\n    if (preg_match('/^::\d+.\d+.\d+.\d+$/', $ip_address)) {\n        return substr($ip_address, 2);\n    }\n\n    return $ip_address;\n}