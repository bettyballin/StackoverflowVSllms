/**\n * Build A XML Data Set\n *\n * @param array $data Associative Array containing values to be parsed into an XML Data Set(s)\n * @param string $startElement Root Opening Tag, default fx_request\n * @param string $xml_version XML Version, default 1.0\n * @param string $xml_encoding XML Encoding, default UTF-8\n * @return string XML String containig values\n * @return mixed Boolean false on failure, string XML result on success\n */\npublic function buildXMLData($data, $startElement = 'fx_request', $xml_version = '1.0', $xml_encoding = 'UTF-8') {\n    if(!is_array($data)) {\n        $err = 'Invalid variable type supplied, expected array not found on line '.__LINE__." in Class: ".__CLASS__." Method: ".__METHOD__;\n        trigger_error($err);\n        if($this->_debug) echo $err;\n        return false; //return false error occurred\n    }\n    $xml = new XmlWriter();\n    $xml->openMemory();\n    $xml->startDocument($xml_version, $xml_encoding);\n    $xml->startElement($startElement);\n\n    /**\n     * Write XML as per Associative Array\n     * @param object $xml XMLWriter Object\n     * @param array $data Associative Data Array\n     */\n     function write(XMLWriter $xml, $data) {\n         foreach($data as $key => $value) {\n             if(is_array($value)) {\n                 $xml->startElement($key);\n                 write($xml, $value);\n                 $xml->endElement();\n                 continue;\n             }\n             $xml->writeElement($key, $value);\n         }\n     }\n     write($xml, $data);\n\n     $xml->endElement();//write end element\n     //Return the XML results\n     return $xml->outputMemory(true); \n}