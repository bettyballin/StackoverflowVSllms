<?php\n\nabstract class Model_Abstract\n{\n    protected $_gatewayName = null;\n    protected $_gateway = null;\n\n    protected function _init()\n    {\n        $this->_gateway = new $this->_gatewayName();\n    }\n\n    protected function __construct($row = null)\n    {\n        $this->_init();\n        if ($row) {\n            $this->_data = $row;\n        }\n    }\n\n    public static function getAbstract($class, $param)\n    {\n        $model = new $class();\n        if($param instanceof Zend_Db_Table_Row_Abstract)\n        {\n                $row = $param;\n        }\n        elseif(is_numeric($param))\n        {\n                $row = $model->_gateway->find($param)->current();\n        }\n\n        return new $class($row);\n    }\n\n    public static function getAbstractCollection($class, $param = null)\n    {\n        $model = new $class();\n        if($param instanceof Zend_Db_Table_Rowset_Abstract)\n        {\n                $rowset = $param;\n        }\n        elseif($param === null)\n        {\n                $rowset = $model->_gateway->fetchAll();\n        }\n\n        $array = array ();\n\n        foreach ($rowset as $row)\n        {\n                $array[] = new $class($row);\n        }\n\n        return $array;\n    }\n\n    abstract public static function get($param);\n    abstract public static function getCollection($param = null);\n}\n\nclass Model_Company extends Model_Abstract\n{\n    protected $_gatewayName = 'Model_Table_Company';\n\n    public static function get($param) {\n        return self::getAbstract(__CLASS__, $param);\n    }\n\n    public static function getCollection($param = null) {\n        return self::getAbstractCollection(__CLASS__, $param);\n    }\n}\n\nclass Model_Table_Company extends Zend_Db_Table_Abstract\n{\n    protected $_name = 'company';\n}\n\n$model = Model_Company::get(1);\nprint "Got an object of type ".get_class($model)."\n";\n\n$models = Model_Company::getCollection();\nprint "Got ".count($models)." objects of type ".get_class($models[0])."\n";\n\n?>