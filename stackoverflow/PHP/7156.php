// Usage\n$main = new SimpleTemplate("templating/html.php");\n$main->extract($someObject);\n$main->extract($someArray);\n$main->name = "my name";\n$subTemplate = new SimpleTemplate("templating/another.php");\n$subTemplate->parent($main);\n$main->placeholderForAnotherTemplate = $subTemplate->run();\necho $main; // or $main->run(); \n\n// html.php\n<html><body><h1>Title <?= $name ?></h1><p><?= $placeHolderForAnotherTemplate ?></p></body></html>\n\n    <?php\n// SimpleTemplate.php\nfunction object_to_array($object)\n{\n    $array = array();\n    foreach($object as $property => $value)\n    {\n        $array[$property] = $value;\n    }\n\n    return $array;\n}\n\nclass SimpleTemplate\n{\n    public $source;\n    public $path;\n    public $result;\n    public $parent;\n\n    public function SimpleTemplate($path=false, $source=false)\n    {\n        $this->source = array();\n        $this->extract($source);\n        $this->path($path);\n    }\n\n    public function __toString()\n    {\n        return $this->run();\n    }\n\n    public function extract($source)\n    {\n        if ($source)\n        {\n            foreach ($source as $property => $value)\n            {\n                $this->source[$property] = $value;\n            }\n        }\n    }\n\n    public function parent($parent)\n    {\n        $this->parent = $parent;\n    }\n\n    public function path($path)\n    {\n        $this->path = $path;\n    }\n\n    public function __set($name, $value)\n    {\n        $this->source[$name] = $value;\n    }\n\n    public function __get($name)\n    {\n        return isset($this->source[$name]) ? $this->source[$name] : "";\n    }\n\n    public function mergeSource()\n    {\n        if (isset($this->parent))\n            return array_merge($this->parent->mergeSource(), $this->source);\n        else\n            return $this->source;\n    }\n\n    public function run()\n    {\n        ob_start();\n        extract ($this->mergeSource());\n        include $this->path;\n        $this->result = ob_get_contents();\n        ob_end_clean();\n        return $this->result;\n    }\n}