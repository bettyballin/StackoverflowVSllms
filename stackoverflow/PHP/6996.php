<?php\nrequire_once 'Zend/Loader.php';\nZend_Loader::registerAutoload();\n\n$db = Zend_Db::factory('mysqli', array('dbname'=>'test',\n    'username'=>'root', 'password'=>'xxxx'));\nZend_Db_Table_Abstract::setDefaultAdapter($db);\n\nclass Table_Person extends Zend_Db_Table_Abstract\n{\n    protected $_name = 'person';\n}\n\nclass Model_Person\n{\n    /** @var Zend_Db_Table */\n    protected static $table = null;\n\n    /** @var Zend_Db_Table_Row */\n    protected $person;\n\n    public static function init() {\n        if (self::$table == null) {\n            self::$table = new Table_Person();\n        }\n    }\n\n    protected static function factory(Zend_Db_Table_Row $personRow) {\n        $personClass = 'Model_Person_' . ucfirst($personRow->person_type);\n        return new $personClass($personRow);\n    }\n\n    public static function get($id) {\n        self::init();\n        $personRow = self::$table->find($id)->current();\n        return self::factory($personRow);\n    }\n\n    public static function getCollection() {\n        self::init();\n        $personRowset = self::$table->fetchAll();\n        $personArray = array();\n        foreach ($personRowset as $person) {\n            $personArray[] = self::factory($person);\n        }\n        return $personArray;\n    }\n\n    // protected constructor can only be called from this class, e.g. factory()\n    protected function __construct(Zend_Db_Table_Row $personRow) {\n        $this->person = $personRow;\n    }\n\n    public function login($password) {\n        if ($this->person->password_hash ==\n            hash('sha256', $this->person->password_salt . $password)) {\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    public function setPassword($newPassword) {\n        $this->person->password_hash = hash('sha256',\n            $this->person->password_salt . $newPassword);\n        $this->person->save();\n    }\n}\n\nclass Model_Person_Admin extends Model_Person { }\nclass Model_Person_Associate extends Model_Person { }\n\n$person = Model_Person::get(1);\nprint "Got object of type ".get_class($person)."\n";\n$person->setPassword('potrzebie');\n\n$people = Model_Person::getCollection();\nprint "Got ".count($people)." people objects:\n";\nforeach ($people as $i => $person) {\n    print "\t$i: ".get_class($person)."\n";\n}