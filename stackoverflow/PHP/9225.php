<?php\n    session_start();\n    require_once($_SERVER['DOCUMENT_ROOT'].'/config.php');\n    require_once(SITE_ROOT.'includes/exceptions.php');\n    require_once(SITE_ROOT.'data/model.php');\n\n    /*\n     * The purpose of this class is to manage\n     * access to the application, making sure the\n     * users are logged in before they can access\n     * certain features\n     */\n\n    class Auth extends Model\n    {\n        function isUserLoggedIn()\n        {\n            /*\n             *  Check for the user_id in $_SESSION\n             * and see if it's the database. Return\n             * true or false\n             *\n             */\n\n            return isset($_SESSION['user']);\n        }\n\n        static function redirectToLogin()\n        {\n            header("location: http://". DOMAIN .APP_DIR . "index.php?action=login");\n        }\n\n        static function redirectToMain()\n        {\n            header("location: http://". DOMAIN . APP_DIR . "index.php?action=main");\n        }\n\n        static function login($user)\n        {\n            /*\n             * Authenticate the user passing to the function\n             * a instance of the User object\n             */\n\n            $db = parent::getConnection();\n            $pass = $user->getPassword(); // replaced getPassword in the query with this variable, else there is no need to set it here.\n            $query = "select username, password from users where username = '".$user->getUsername()."' and password = '".$pass."'";\n            $results = $db->query($query);             \n\n            if(empty($results)) {\n                throw new Exception('There was a problem logging you in', EX_LOGIN_ERROR);\n            }            \n\n            $row = $results->fetch_assoc();           \n            $_SESSION['user'] = $row['username'];\n\n            // Why bother surrounding with try...catch just to throw the same exception\n        }\n\n        static function logout()\n        {\n            // what is $old_user used for? I can't see it set as a global variable anywhere\n            $old_user = $_SESSION['user'];\n            unset($_SESSION['user']);\n            session_destroy();\n        }\n\n    }\n    ?>