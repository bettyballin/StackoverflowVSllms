class MultiMatcherTest extends PHPUnit_Framework_TestCase\n{\n    public function testTheComparisonIsCaseInsensitive()\n    {\n        $needles  = array('hot');\n        $haystack = array('Southern Hotel');\n        $result   = match($needles, $haystack);\n\n        $this->assertEquals(array('Southern Hotel' => 1), $result);\n    }\n\n    public function testNeedleMatchesOnlyCharsAtBeginningOfWord()\n    {\n        $needles  = array('resta');\n        $haystack = array('Errestas');\n        $result   = match($needles, $haystack);\n\n        $this->assertEquals(array('Errestas' => 0), $result);\n    }\n\n    public function testMatcherCountsNeedlesNotOccurences()\n    {\n        $needles  = array('hot');\n        $haystack = array('Southern Hotel', 'Grange Restaurant & Hotel');\n        $expected = array('Southern Hotel'            => 1,\n                          'Grange Restaurant & Hotel' => 1);\n        $result   = match($needles, $haystack);\n\n        $this->assertEquals($expected, $result);\n    }\n\n    public function testAcceptance()\n    {\n        $needles  = array('ba','hot','resta');\n        $haystack = array(\n            'Southern Hotel',\n            'Grange Restaurant & Hotel',\n            'Austral Hotel',\n            'Barsmith Hotel',\n            'Errestas',\n        );\n        $expected = array(\n            'Southern Hotel'            => 1,\n            'Grange Restaurant & Hotel' => 2,\n            'Austral Hotel'             => 1,\n            'Barsmith Hotel'            => 2,\n            'Errestas'                  => 0,\n        );\n\n        $result = match($needles, $haystack);\n\n        $this->assertEquals($expected, $result);\n    }\n}