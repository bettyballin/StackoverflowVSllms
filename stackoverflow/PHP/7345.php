function validEmail($email, $skipDNS = false)\n{\n   $isValid = true;\n   $atIndex = strrpos($email, "@");\n   if (is_bool($atIndex) && !$atIndex)\n   {\n      $isValid = false;\n   }\n   else\n   {\n      $domain = substr($email, $atIndex+1);\n      $local = substr($email, 0, $atIndex);\n      $localLen = strlen($local);\n      $domainLen = strlen($domain);\n      if ($localLen < 1 || $localLen > 64)\n      {\n         // local part length exceeded\n         $isValid = false;\n      }\n      else if ($domainLen < 1 || $domainLen > 255)\n      {\n         // domain part length exceeded\n         $isValid = false;\n      }\n      else if ($local[0] == '.' || $local[$localLen-1] == '.')\n      {\n         // local part starts or ends with '.'\n         $isValid = false;\n      }\n      else if (preg_match('/\\.\\./', $local))\n      {\n         // local part has two consecutive dots\n         $isValid = false;\n      }\n      else if (!preg_match('/^[A-Za-z0-9\\-\\.]+$/', $domain))\n      {\n         // character not valid in domain part\n         $isValid = false;\n      }\n      else if (preg_match('/\\.\\./', $domain))\n      {\n         // domain part has two consecutive dots\n         $isValid = false;\n      }\n      else if (!preg_match('/^(\\\\.|[A-Za-z0-9!#%&`_=\\/$\'*+?^{}|~.-])+$/', str_replace("\\\\","",$local)))\n      {\n         // character not valid in local part unless \n         // local part is quoted\n         if (!preg_match('/^"(\\\\"|[^"])+"$/', str_replace("\\\\","",$local)))\n         {\n            $isValid = false;\n         }\n      }\n      \n      if(!$skipDNS)\n      {\n          if ($isValid && !(checkdnsrr($domain,"MX") || checkdnsrr($domain,"A")))\n          {\n             // domain not found in DNS\n             $isValid = false;\n          }\n      }\n   }\n   return $isValid;\n}