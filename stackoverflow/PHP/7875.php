class data_comp\n{\n    var $fetched_tree = array();\n\n    function tree_fetch($parent = 0)\n    {\n        $query = 'SELECT node.id, node.name, node.parent, (COUNT(parent.name) - 1) AS depth FROM test_competence AS node, test_competence AS parent WHERE node.lft BETWEEN parent.lft AND parent.rgt GROUP BY node.name ORDER BY node.name';\n        $result = mysql_query($query) or die(mysql_error());\n        $tree = array();\n\n        while($data = mysql_fetch_assoc($result))\n        {\n            $tree[$data['parent']][$data['id']] = array('name' => $data['name'], 'depth' => $data['depth']);\n        }\n\n        $this->tree_print($tree, $parent);\n    }\n\n    function tree_print($tree, $parent)\n    {\n        foreach($tree[$parent] as $id => $value)\n        {\n            $this->fetched_tree[] = array('id' => $id, 'name' => $value['name'], 'depth' => $value['depth']);\n\n            if(isset($tree[$id]) && is_array($tree[$id]))\n            {\n                $this->tree_print($tree, $id);\n            }\n        }\n    }\n}