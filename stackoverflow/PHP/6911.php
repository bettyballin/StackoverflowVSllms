function thumbnail_box($img, $box_w, $box_h) {\n    //create the image, of the required size\n    $new = imagecreatetruecolor($box_w, $box_h);\n    if($new === false) {\n        //creation failed -- probably not enough memory\n        return null;\n    }\n\n\n    //Fill the image with a light grey color\n    //(this will be visible in the padding around the image,\n    //if the aspect ratios of the image and the thumbnail do not match)\n    //Replace this with any color you want, or comment it out for black.\n    //I used grey for testing =)\n    $fill = imagecolorallocate($new, 200, 200, 205);\n    imagefill($new, 0, 0, $fill);\n\n    //compute resize ratio\n    $hratio = $box_h / imagesy($img);\n    $wratio = $box_w / imagesx($img);\n    $ratio = min($hratio, $wratio);\n\n    //if the source is smaller than the thumbnail size, \n    //don't resize -- add a margin instead\n    //(that is, dont magnify images)\n    if($ratio > 1.0)\n        $ratio = 1.0;\n\n    //compute sizes\n    $sy = floor(imagesy($img) * $ratio);\n    $sx = floor(imagesx($img) * $ratio);\n\n    //compute margins\n    //Using these margins centers the image in the thumbnail.\n    //If you always want the image to the top left, \n    //set both of these to 0\n    $m_y = floor(($box_h - $sy) / 2);\n    $m_x = floor(($box_w - $sx) / 2);\n\n    //Copy the image data, and resample\n    //\n    //If you want a fast and ugly thumbnail,\n    //replace imagecopyresampled with imagecopyresized\n    if(!imagecopyresampled($new, $img,\n        $m_x, $m_y, //dest x, y (margins)\n        0, 0, //src x, y (0,0 means top left)\n        $sx, $sy,//dest w, h (resample to this size (computed above)\n        imagesx($img), imagesy($img)) //src w, h (the full size of the original)\n    ) {\n        //copy failed\n        imagedestroy($new);\n        return null;\n    }\n    //copy successful\n    return $new;\n}