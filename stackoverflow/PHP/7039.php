class TestClass\n{   \n    public static $currentValue;\n\n    private static $_instance = null;\n\n    private function __construct () { }\n\n    public static function getInstance ()\n    {\n        if (self::$_instance === null) {\n            self::$_instance = new self;\n        }\n\n        return self::$_instance;\n    }\n\n    public function toValue($value) {\n        self::$currentValue = $value;\n        return $this;\n    }\n\n    public function add($value) {\n        self::$currentValue = self::$currentValue + $value;\n        return $this;\n    }\n\n    public function subtract($value) {\n        self::$currentValue = self::$currentValue - $value;\n        return $this;\n    }\n\n    public function result() {\n        return self::$currentValue;\n    }\n}\n\n// Example Usage:\n$result = TestClass::getInstance ()\n    ->toValue(5)\n    ->add(3)\n    ->subtract(2)\n    ->add(8)\n    ->result();