<?php\n//The function returns the no. of business days between two dates and it skips the holidays\nfunction getWorkingDays($startDate,$endDate,$holidays){\n    // do strtotime calculations just once\n    $endDate = strtotime($endDate);\n    $startDate = strtotime($startDate);\n\n\n    //The total number of days between the two dates. We compute the no. of seconds and divide it to 60*60*24\n    //We add one to inlude both dates in the interval.\n    $days = ($endDate - $startDate) / 86400 + 1;\n\n    $no_full_weeks = floor($days / 7);\n    $no_remaining_days = fmod($days, 7);\n\n    //It will return 1 if it's Monday,.. ,7 for Sunday\n    $the_first_day_of_week = date("N", $startDate);\n    $the_last_day_of_week = date("N", $endDate);\n\n    //---->The two can be equal in leap years when february has 29 days, the equal sign is added here\n    //In the first case the whole interval is within a week, in the second case the interval falls in two weeks.\n    if ($the_first_day_of_week <= $the_last_day_of_week) {\n        if ($the_first_day_of_week <= 6 && 6 <= $the_last_day_of_week) $no_remaining_days--;\n        if ($the_first_day_of_week <= 7 && 7 <= $the_last_day_of_week) $no_remaining_days--;\n    }\n    else {\n        // (edit by Tokes to fix an edge case where the start day was a Sunday\n        // and the end day was NOT a Saturday)\n\n        // the day of the week for start is later than the day of the week for end\n        if ($the_first_day_of_week == 7) {\n            // if the start date is a Sunday, then we definitely subtract 1 day\n            $no_remaining_days--;\n\n            if ($the_last_day_of_week == 6) {\n                // if the end date is a Saturday, then we subtract another day\n                $no_remaining_days--;\n            }\n        }\n        else {\n            // the start date was a Saturday (or earlier), and the end date was (Mon..Fri)\n            // so we skip an entire weekend and subtract 2 days\n            $no_remaining_days -= 2;\n        }\n    }\n\n    //The no. of business days is: (number of weeks between the two dates) * (5 working days) + the remainder\n//---->february in none leap years gave a remainder of 0 but still calculated weekends between first and last day, this is one way to fix it\n   $workingDays = $no_full_weeks * 5;\n    if ($no_remaining_days > 0 )\n    {\n      $workingDays += $no_remaining_days;\n    }\n\n    //We subtract the holidays\n    foreach($holidays as $holiday){\n        $time_stamp=strtotime($holiday);\n        //If the holiday doesn't fall in weekend\n        if ($startDate <= $time_stamp && $time_stamp <= $endDate && date("N",$time_stamp) != 6 && date("N",$time_stamp) != 7)\n            $workingDays--;\n    }\n\n    return $workingDays;\n}\n\n//Example:\n\n$holidays=array("2008-12-25","2008-12-26","2009-01-01");\n\necho getWorkingDays("2008-12-22","2009-01-02",$holidays)\n// => will return 7\n?>