Private _SourceCode As String = Nothing\nPrivate ReadOnly Property SourceCode() As String\n                Get\n                    If _SourceCode = Nothing Then\n                        Dim thisCodeFile As String = Server.MapPath("~").ToString & "\" & Type.GetType(Me.GetType.BaseType.FullName).ToString & ".aspx.vb"\n                        _SourceCode = My.Computer.FileSystem.ReadAllText(thisCodeFile)\n                    End If\n                    Return _SourceCode\n                End Get\nEnd Property  \n\nPrivate Function extractProcedureDefinition(ByVal procedureName As String) As String\n   Return extractStringContents(Me.SourceCode, "Sub " & procedureName & "()", "End Sub", True)\nEnd Function  \n\nPrivate Function extractFunctionDefinition(ByVal procedureName As String) As String\n   'TODO: This works now, but wouldn't if we wanted includeTags = False, as it does not properly handle the "As xxxxx" portion\n   Return extractStringContents(Me.SourceCode, "Function " & procedureName, "End Sub", True)\nEnd Function\n\n    Private Function extractStringContents(ByVal body As String, ByVal openTag As String, ByVal closeTag As String, ByVal includeTags As Boolean) As String\n                Dim iStart As Integer = body.IndexOf(openTag)\n                Dim iEnd As Integer = body.IndexOf(closeTag, iStart)\n                If includeTags Then\n                    iEnd += closeTag.Length\n                Else\n                    iStart += openTag.Length\n                End If\n                Return body.Substring(iStart, iEnd - iStart)\n    End Function  