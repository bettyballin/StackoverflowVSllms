Imports System.IO\n\nModule Module1\n  Sub Main()\n    ' We don't need to dispose any of the MemoryStream \n    ' because it is a managed object. However, just for \n    ' good practice, we'll close the MemoryStream.\n    Using ms As New MemoryStream\n      Dim sw As New StreamWriter(ms)\n      sw.WriteLine("Hello World")\n      ' The string is currently stored in the \n      ' StreamWriters buffer. Flushing the stream will \n      ' force the string into the MemoryStream.\n      sw.Flush()\n      ' If we dispose the StreamWriter now, it will close \n      ' the BaseStream (which is our MemoryStream) which \n      ' will prevent us from reading from our MemoryStream\n      'sw.Dispose()\n\n      ' The StreamReader will read from the current \n      ' position of the MemoryStream which is currently \n      ' set at the end of the string we just wrote to it. \n      ' We need to set the position to 0 in order to read \n      ' from the beginning.\n      ms.Position = 0\n      Dim sr As New StreamReader(ms)\n      Dim myStr = sr.ReadToEnd()\n      Console.WriteLine(myStr)\n\n      ' We can dispose our StreamWriter and StreamReader \n      ' now, though this isn't necessary (they don't hold \n      ' any resources open on their own).\n      sw.Dispose()\n      sr.Dispose()\n    End Using\n\n    Console.WriteLine("Press any key to continue.")\n    Console.ReadKey()\n  End Sub\nEnd Module