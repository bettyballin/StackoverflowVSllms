Function AddUser(Name, Email, IP )\n    dim sqlstmt\n    sqlstmt = "INSERT INTO tbluser (Name, Email, IP )"\n    sqlstmt = sqlstmt & " values (?, ?, ?)"\n    call RunSQL( sqlstmt, array( _\n        mp("@Name", adVarChar, 100, Name), _\n        mp("@Email", adVarChar, 100, Email), _\n        mp("@IP", adVarChar, 100, IP)))\nend Function\n\nFunction RunSQL(strSqlStmt , params())\n    On Error resume next\n\n    ''// Create the ADO objects\n    Dim cmd\n    Set cmd = server.createobject("ADODB.Command")\n\n    ''// Init the ADO objects & the stored proc parameters\n    cmd.ActiveConnection = GetConnectionString()\n    cmd.CommandText = strSqlStmt\n    cmd.CommandType = adCmdText\n    collectParams cmd, params\n\n    ''// Execute the query without returning a recordset\n    cmd.Execute , , adExecuteNoRecords\n    If err.number > 0 then\n        BuildErrorMessage()\n        exit function\n    end if\n\n    ''// Cleanup\n    Set cmd.ActiveConnection = Nothing\n    Set cmd = Nothing\n\n    Exit Function\n\nEnd Function\n\n\nPrivate Sub collectParams(cmd , argparams())\n    Dim params , v\n    Dim i , l , u\n\n    params = argparams\n\n\n    For i = LBound(params) To UBound(params)\n        l = LBound(params(i))\n        u = UBound(params(i))\n\n        ''// Check for nulls.\n        If u - l = 3 Then\n            If VarType(params(i)(3)) = vbString Then\n                If params(i)(3) = "" then\n                                    v = null\n                else\n                    v = params(i)(3)\n                end if\n            Else\n                v = params(i)(3)\n            End If\n\n        If params(i)(1) = adLongVarChar Then\n                Dim p ''// As New Parameter\n                Set p = cmd.CreateParameter(params(i)(0), params(i)(1), adParamInput)\n                p.Attributes = adParamLong + adParamSigned\n                If Not IsNull(v) Then\n                    p.AppendChunk v\n                    p.Size = Len(v)\n                Else\n                    p.Value = v\n                    p.Size = 10000\n                End If\n                cmd.Parameters.Append p\n            Else\n                cmd.Parameters.Append cmd.CreateParameter(params(i)(0), params(i)(1), adParamInput, params(i)(2), v)\n            End If\n        Else\n            RaiseError m_modName, "collectParams(...): incorrect # of parameters"\n        End If\n    Next\nEnd Sub