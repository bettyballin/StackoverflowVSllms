Private Type STARTUPINFO\n      cb As Long\n      lpReserved As String\n      lpDesktop As String\n      lpTitle As String\n      dwX As Long\n      dwY As Long\n      dwXSize As Long\n      dwYSize As Long\n      dwXCountChars As Long\n      dwYCountChars As Long\n      dwFillAttribute As Long\n      dwFlags As Long\n      wShowWindow As Integer\n      cbReserved2 As Integer\n      lpReserved2 As Long\n      hStdInput As Long\n      hStdOutput As Long\n      hStdError As Long\n   End Type\n\n   Private Type PROCESS_INFORMATION\n      hProcess As Long\n      hThread As Long\n      dwProcessID As Long\n      dwThreadID As Long\n   End Type\n\n   Private Declare Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long\n   Private Declare Function CreateProcessA Lib "kernel32" (ByVal lpApplicationName As Long, ByVal lpCommandLine As String, ByVal lpProcessAttributes As Long, ByVal lpThreadAttributes As Long, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As Long, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long\n   Private Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long\n   Private Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long\n\n   Private Const NORMAL_PRIORITY_CLASS = &H20&\n   Private Const INFINITE = -1&\n   Private Const SW_HIDE = 0\n   Private Const SW_SHOWMINNOACTIVE = 7\n\n   Public Function ExecCmd(cmdline As String, workdir As String) As Integer\n      Dim proc As PROCESS_INFORMATION\n      Dim start As STARTUPINFO\n      Dim ret as Long\n\n        ChDrive Left(workdir, 1) & ":"\n        ChDir workdir\n\n        start.cb = Len(start)\n        start.wShowWindow = SW_SHOWMINNOACTIVE\n\n        Call CreateProcessA(0&, cmdline, 0&, 0&, 1&, NORMAL_PRIORITY_CLASS, 0&, 0&, start, proc)\n        Call WaitForSingleObject(proc.hProcess, INFINITE)\n        Call GetExitCodeProcess(proc.hProcess, ret)\n        Call CloseHandle(proc.hThread)\n        Call CloseHandle(proc.hProcess)\n        ExecCmd=ret\n   End Functio