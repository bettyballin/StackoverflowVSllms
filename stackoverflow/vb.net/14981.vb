Module Module1\n\n    Interface ILifeform\n        ReadOnly Property Name() As String\n        Sub Speak()\n        Sub Eat()\n    End Interface\n\n    Class Dog\n        Implements ILifeform\n\n        Public ReadOnly Property Name() As String Implements ILifeform.Name\n            Get\n                Return "Doggy!"\n            End Get\n        End Property\n\n        Public Sub Speak() Implements ILifeform.Speak\n            Console.WriteLine("Woof!")\n        End Sub\n\n        Public Sub Eat() Implements ILifeform.Eat\n            Console.WriteLine("Yum, doggy biscuits!")\n        End Sub\n    End Class\n\n    Class Ninja\n        Implements ILifeform\n\n        Public ReadOnly Property Name() As String Implements ILifeform.Name\n            Get\n                Return "Ninja!!"\n            End Get\n        End Property\n\n        Public Sub Speak() Implements ILifeform.Speak\n            Console.WriteLine("Ninjas are silent, deadly killers")\n        End Sub\n\n        Public Sub Eat() Implements ILifeform.Eat\n            Console.WriteLine("Ninjas don't eat, they wail on guitars and kick ass")\n        End Sub\n    End Class\n\n    Class Monkey\n        Implements ILifeform\n\n\n        Public ReadOnly Property Name() As String Implements ILifeform.Name\n            Get\n                Return "Monkey!!!"\n            End Get\n        End Property\n\n        Public Sub Speak() Implements ILifeform.Speak\n            Console.WriteLine("Ook ook")\n        End Sub\n\n        Public Sub Eat() Implements ILifeform.Eat\n            Console.WriteLine("Bananas!")\n        End Sub\n    End Class\n\n\n    Sub Main()\n        Dim lifeforms As ILifeform() = New ILifeform() {New Dog(), New Ninja(), New Monkey()}\n        For Each x As ILifeform In lifeforms\n            HandleLifeform(x)\n        Next\n\n        Console.ReadKey(True)\n    End Sub\n\n    Sub HandleLifeform(ByVal x As ILifeform)\n        Console.WriteLine("Handling lifeform '{0}'", x.Name)\n        x.Speak()\n        x.Eat()\n        Console.WriteLine()\n    End Sub\nEnd Module