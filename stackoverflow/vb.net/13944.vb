' ---------------------- Directory Choosing Helper Functions -----------------------\n' Excel and VBA do not provide any convenient directory chooser or file chooser\n' dialogs, but these functions will provide a reference to a system DLL\n' with the necessary capabilities\nPrivate Type BROWSEINFO    ' used by the function GetFolderName\n    hOwner As Long\n    pidlRoot As Long\n    pszDisplayName As String\n    lpszTitle As String\n    ulFlags As Long\n    lpfn As Long\n    lParam As Long\n    iImage As Long\nEnd Type\n\nPrivate Declare Function SHGetPathFromIDList Lib "shell32.dll" _\n                                             Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long\nPrivate Declare Function SHBrowseForFolder Lib "shell32.dll" _\n                                           Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long\n\nFunction GetFolderName(Msg As String) As String\n    ' returns the name of the folder selected by the user\n    Dim bInfo As BROWSEINFO, path As String, r As Long\n    Dim X As Long, pos As Integer\n    bInfo.pidlRoot = 0&    ' Root folder = Desktop\n    If IsMissing(Msg) Then\n        bInfo.lpszTitle = "Select a folder."\n        ' the dialog title\n    Else\n        bInfo.lpszTitle = Msg    ' the dialog title\n    End If\n    bInfo.ulFlags = &H1    ' Type of directory to return\n    X = SHBrowseForFolder(bInfo)    ' display the dialog\n    ' Parse the result\n    path = Space$(512)\n    r = SHGetPathFromIDList(ByVal X, ByVal path)\n    If r Then\n        pos = InStr(path, Chr$(0))\n        GetFolderName = Left(path, pos - 1)\n    Else\n        GetFolderName = ""\n    End If\nEnd Function\n'---------------------- END Directory Chooser Helper Functions ----------------------\n\nPublic Sub DoTheExport()\n    Dim FName As Variant\n    Dim Sep As String\n    Dim wsSheet As Worksheet\n    Dim nFileNum As Integer\n    Dim csvPath As String\n\n\n    Sep = InputBox("Enter a single delimiter character (e.g., comma or semi-colon)", _\n                   "Export To Text File")\n    'csvPath = InputBox("Enter the full path to export CSV files to: ")\n\n    csvPath = GetFolderName("Choose the folder to export CSV files to:")\n    If csvPath = "" Then\n        MsgBox ("You didn't choose an export directory. Nothing will be exported.")\n        Exit Sub\n    End If\n\n    For Each wsSheet In Worksheets\n        wsSheet.Activate\n        nFileNum = FreeFile\n        Open csvPath & "\" & _\n             wsSheet.Name & ".csv" For Output As #nFileNum\n        ExportToTextFile CStr(nFileNum), Sep, False\n        Close nFileNum\n    Next wsSheet\n\nEnd Sub\n\n\n\nPublic Sub ExportToTextFile(nFileNum As Integer, _\n                            Sep As String, SelectionOnly As Boolean)\n\n    Dim WholeLine As String\n    Dim RowNdx As Long\n    Dim ColNdx As Integer\n    Dim StartRow As Long\n    Dim EndRow As Long\n    Dim StartCol As Integer\n    Dim EndCol As Integer\n    Dim CellValue As String\n\n    Application.ScreenUpdating = False\n    On Error GoTo EndMacro:\n\n    If SelectionOnly = True Then\n        With Selection\n            StartRow = .Cells(1).Row\n            StartCol = .Cells(1).Column\n            EndRow = .Cells(.Cells.Count).Row\n            EndCol = .Cells(.Cells.Count).Column\n        End With\n    Else\n        With ActiveSheet.UsedRange\n            StartRow = .Cells(1).Row\n            StartCol = .Cells(1).Column\n            EndRow = .Cells(.Cells.Count).Row\n            EndCol = .Cells(.Cells.Count).Column\n        End With\n    End If\n\n    For RowNdx = StartRow To EndRow\n        WholeLine = ""\n        For ColNdx = StartCol To EndCol\n            If Cells(RowNdx, ColNdx).Value = "" Then\n                CellValue = ""\n            Else\n                CellValue = Cells(RowNdx, ColNdx).Value\n            End If\n            WholeLine = WholeLine & CellValue & Sep\n        Next ColNdx\n        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))\n        Print #nFileNum, WholeLine\n    Next RowNdx\n\nEndMacro:\n    On Error GoTo 0\n    Application.ScreenUpdating = True\n\nEnd Sub