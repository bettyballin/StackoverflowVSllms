# config/initializers/mime_types.rb\nMime::Type.register 'application/vnd.oasis.opendocument.text', :odt\nMime::Type.register 'application/vnd.oasis.opendocument.presentation', :odp\nMime::Type.register 'application/vnd.oasis.opendocument.spreadsheet', :ods\n\n# controllers/my_controller.rb\nclass MyController < ApplicationController\n  def show\n    respond_to do |format|\n      format.odt { render_odf('show.odt.erb') }\n      format.odp { render_odf('show.odp.erb') }\n      format.ods { render_odf('show.ods.erb') }\n    end\n  end\n\n  private\n\n  def render_odf(template)\n    # Create a temporary directory to build the ODF file\n    tmp_dir = Dir.mktmpdir\n    odf_file = File.join(tmp_dir, 'content.xml')\n\n    # Render the ERb template to the temporary file\n    render_to_string(template, layout: 'layouts/content.xml.erb', locals: { /* locals */ })\n\n    # Create the ODF file structure\n    odf_dir = File.join(tmp_dir, 'ODF')\n    FileUtils.mkdir_p(odf_dir)\n    FileUtils.cp(odf_file, File.join(odf_dir, 'content.xml'))\n\n    # Add any additional files (e.g. styles.xml, meta.xml)\n    # ...\n\n    # Zip the ODF directory\n    zip_file = File.join(tmp_dir, 'output.odt')\n    system("zip -r #{zip_file} #{odf_dir}")\n\n    # Send the zip file as the response\n    send_file(zip_file, type: 'application/vnd.oasis.opendocument.text', disposition: 'attachment', filename: 'output.odt')\n\n    # Clean up the temporary directory\n    FileUtils.rm_rf(tmp_dir)\n  end\nend