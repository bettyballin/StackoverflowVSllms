class ContactForm\n  include ActiveModel::Validations\n\n  attr_accessor :name, :email, :message\n\n  validates :name, presence: true\n  validates :email, format: { with: /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i }\n  validates :message, presence: true\n\n  def initialize(attributes = {})\n    @name = attributes[:name]\n    @email = attributes[:email]\n    @message = attributes[:message]\n  end\n\n  def valid?\n    validate\n  end\n\n  private\n\n  def validate\n    errors.clear\n    validate_name\n    validate_email\n    validate_message\n  end\n\n  def validate_name\n    errors.add(:name, "can't be blank") if @name.blank?\n  end\n\n  def validate_email\n    errors.add(:email, "is invalid") unless @email =~ /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i\n  end\n\n  def validate_message\n    errors.add(:message, "can't be blank") if @message.blank?\n  end\nend