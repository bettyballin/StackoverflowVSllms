# Model with state machine\nclass MyModel < ApplicationRecord\n  include Statesman::Machine\n\n  state_machine do\n    state :step1\n    state :step2\n    # ...\n    state :final\n\n    event :next_step do\n      transition from: :step1, to: :step2\n      # ...\n    end\n  end\n\n  validation_group(:step1) do\n    validates :attribute1, presence: true\n  end\n\n  validation_group(:step2) do\n    validates :attribute2, presence: true\n  end\nend\n\n# Controller\nclass MyController < ApplicationController\n  def new\n    @my_model = MyModel.new\n    session[:my_model_data] = {}\n  end\n\n  def create\n    @my_model = MyModel.new(session[:my_model_data])\n    if @my_model.valid?(:step1)\n      # Store data in session and proceed to next step\n      session[:my_model_data] = @my_model.attributes\n      redirect_to next_step_path\n    else\n      render :new\n    end\n  end\n\n  def next_step\n    # Retrieve data from session\n    @my_model = MyModel.new(session[:my_model_data])\n    # Validate and proceed to next step or render error\n  end\n\n  def final\n    # Perform final validation on entire model\n    if @my_model.valid?\n      # Save model and redirect to success page\n    else\n      render :new\n    end\n  end\nend