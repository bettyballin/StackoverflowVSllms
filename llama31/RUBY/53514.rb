require 'packetfu'\n\n# Set up the ICMP echo request packet\npkt = PacketFu::ICMPPacket.new\npkt.icmp_type = 8  # ICMP Echo Request\npkt.icmp_code = 0\npkt.icmp_id = 0x1234  # Identifier\npkt.icmp_seq = 0x0001  # Sequence number\npkt.icmp_data = 'Hello, World!'  # Payload\npkt.ip_saddr = '192.168.1.100'  # Source IP\npkt.ip_daddr = '192.168.1.200'  # Destination IP\n\n# Send the packet and capture the response\ncap = PacketFu::Capture.new(:iface => 'eth0', :promisc => true, :timeout => 5)\ncap.capture(pkt.to_f)\n\n# Get the ICMP echo reply packet\nreply_pkt = cap.get_next_packet\n\n# Validate the contents of the reply packet\nif reply_pkt.is_a?(PacketFu::ICMPPacket) && reply_pkt.icmp_type == 0  # ICMP Echo Reply\n  if reply_pkt.icmp_id != pkt.icmp_id || reply_pkt.icmp_seq != pkt.icmp_seq\n    puts "Invalid ICMP echo reply"\n  elsif reply_pkt.icmp_data != pkt.icmp_data\n    puts "Payload mismatch"\n  else\n    puts "Payload match"\n  end\nend