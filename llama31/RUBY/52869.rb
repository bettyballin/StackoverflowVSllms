require 'zip'\n\ndef download_statistics\n  # Create a temporary directory to store the files\n  tmp_dir = Dir.mktmpdir\n\n  # Render the HTML page and save it to a file\n  html_file = File.join(tmp_dir, 'statistics.html')\n  render_to_string(:template => 'statistics/index.html.erb', :layout => false)\n  File.open(html_file, 'w') { |f| f.write(rendered_string) }\n\n  # Add images and CSS files to the temporary directory\n  # (assuming you have a list of image and CSS file paths)\n  image_files = ['image1.png', 'image2.png']\n  css_files = ['styles.css']\n  image_files.each do |image_file|\n    File.copy(image_file, File.join(tmp_dir, image_file))\n  end\n  css_files.each do |css_file|\n    File.copy(css_file, File.join(tmp_dir, css_file))\n  end\n\n  # Create a ZIP archive\n  zip_file = File.join(tmp_dir, 'statistics.zip')\n  Zip::File.open(zip_file, Zip::File::CREATE) do |zip|\n    zip.add('statistics.html', html_file)\n    image_files.each do |image_file|\n      zip.add(image_file, File.join(tmp_dir, image_file))\n    end\n    css_files.each do |css_file|\n      zip.add(css_file, File.join(tmp_dir, css_file))\n    end\n  end\n\n  # Set the response headers and send the ZIP file\n  headers['Content-Type'] = 'application/zip'\n  headers['Content-Disposition'] = "attachment; filename='statistics.zip'"\n  send_file(zip_file, :type => 'application/zip')\nensure\n  # Clean up the temporary directory\n  FileUtils.remove_entry_secure tmp_dir\nend