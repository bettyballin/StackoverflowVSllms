require 'net/imap'\n\n# Initial connection\nimap = Net::IMAP.new('imap.gmail.com', 993, true)\nimap.login('username', 'password')\nimap.select('INBOX')\n\n# Get UIDVALIDITY value\nuidvalidity = imap.status('INBOX', ['UIDVALIDITY']).uidvalidity\n\n# Get all UIDs\nuids = imap.search(['ALL']).map { |msg| msg.uid }\n\n# Store UIDVALIDITY and highest UID in database\n# ...\n\n# Subsequent connection\nimap = Net::IMAP.new('imap.gmail.com', 993, true)\nimap.login('username', 'password')\nimap.select('INBOX')\n\n# Get UIDVALIDITY value again\nnew_uidvalidity = imap.status('INBOX', ['UIDVALIDITY']).uidvalidity\n\n# If UIDVALIDITY has changed, re-sync entire mailbox\nif new_uidvalidity != uidvalidity\n  # ...\nelse\n  # Get new messages with UIDs higher than stored highest UID\n  new_uids = imap.search(['UID', "#{highest_uid + 1}:*"]).map { |msg| msg.uid }\n  # Fetch and process new messages\n  # ...\nend