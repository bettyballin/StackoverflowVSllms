import java.io.IOException;
import java.io.InputStream;

// Define the TokenType enum
enum TokenType {
    IDENTIFIER
}

// Define the Token class
class Token {
    private TokenType type;
    private String value;

    public Token(TokenType type, String value) {
        this.type = type;
        this.value = value;
    }

    public TokenType getType() {
        return type;
    }

    public String getValue() {
        return value;
    }
}

// Lexer.java (generated by JFlex)
public class Lexer {
    private InputStream input;

    public Lexer(InputStream input) {
        this.input = input;
    }

    public Token nextToken() throws IOException {
        // Implementation of nextToken() method is omitted for brevity
        // You should implement the logic to read the next token from the input stream
        // For demonstration purposes, let's assume we have an identifier "hello"
        return new Token(TokenType.IDENTIFIER, "hello");
    }

    public static void main(String[] args) throws IOException {
        Lexer lexer = new Lexer(System.in);
        Token token = lexer.nextToken();
        if (token.getType() == TokenType.IDENTIFIER) {
            System.out.println("Identifier: " + token.getValue());
        }
    }
}