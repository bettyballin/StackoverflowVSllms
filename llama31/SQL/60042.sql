CREATE FUNCTION fGetTransactionStatusLog\n(\n    @TransactionID  int\n)\nRETURNS varchar(8000) AS  \nBEGIN  \n\ndeclare StatusChanges cursor for\n    select  NewStatusID, FirstName + ' ' + LastName AS UserName, Stamp, CAST(Notes AS varchar(8000)) AS Notes\n      from TransactionStatusChanges tsc\n        left join Users us ON tsc.UserID = us.UserID\n      where TransactionID = @TransactionID ORDER BY StatusNum\n\ndeclare @output varchar(8000)\n\ndeclare @NewStatusID char(2)\ndeclare @UserName varchar(255)\ndeclare @Stamp datetime\ndeclare @Notes varchar(8000)\n\nset @output = ''\n\nOPEN StatusChanges\n  FETCH NEXT FROM StatusChanges INTO @NewStatusID, @UserName, @Stamp, @Notes\n  WHILE @@FETCH_STATUS = 0\n  BEGIN\n\n    set @output = @output + RTRIM(CAST(@Stamp AS varchar(30))) + ': ' + COALESCE(@NewStatusID, '') + ' by ' + COALESCE(@UserName, '') +  CHAR(13) + CHAR(10)\n\n    IF @Notes IS NOT NULL\n    BEGIN\n        set @output = @output + '---' + @Notes +  CHAR(13) + CHAR(10)\n    END\n\n    FETCH NEXT FROM StatusChanges INTO @NewStatusID, @UserName, @Stamp, @Notes\n  END\nCLOSE StatusChanges\nDEALLOCATE StatusChanges\n\nRETURN @output\n\nEND