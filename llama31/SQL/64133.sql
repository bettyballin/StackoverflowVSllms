WITH RecursiveGroups AS (\n  SELECT GroupID, Name, 0 AS Level\n  FROM tblGroup\n  WHERE GroupID = @RootGroupID\n  UNION ALL\n  SELECT g.GroupID, g.Name, Level + 1\n  FROM tblGroupGroup gg\n  INNER JOIN RecursiveGroups r ON gg.ParentGroupID = r.GroupID\n  INNER JOIN tblGroup g ON gg.ChildGroupID = g.GroupID\n)\nSELECT \n  p.PermissionID,\n  p.SecurityObjectID,\n  p.SecuredID,\n  p.TableName,\n  p.AllowFlag\nFROM \n  tblPermission p\n  LEFT JOIN (\n    SELECT \n      u.UserID,\n      g.GroupID,\n      MAX(CASE WHEN ug.AllowFlag = 0 THEN 1 ELSE 0 END) AS Denied\n    FROM \n      tblUser u\n      INNER JOIN tblGroupUser gu ON u.UserID = gu.UserID\n      INNER JOIN RecursiveGroups g ON gu.GroupID = g.GroupID\n      LEFT JOIN tblPermission ug ON u.UserID = ug.SecuredID AND ug.TableName = 'tblUser'\n    GROUP BY \n      u.UserID, g.GroupID\n  ) ug ON p.SecuredID = ug.UserID AND p.TableName = 'tblUser'\n  LEFT JOIN RecursiveGroups g ON p.SecurityObjectID = g.GroupID\nWHERE \n  (ug.Denied = 0 OR ug.Denied IS NULL) AND\n  (p.AllowFlag = 1 OR g.GroupID IS NOT NULL)