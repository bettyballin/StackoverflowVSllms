CREATE OR REPLACE FUNCTION update_unread_comments()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OPNAME = 'INSERT' THEN\n        UPDATE article_unread_comments\n        SET unread_count = unread_count + 1\n        WHERE article_id = NEW.article_id AND user_id != NEW.user_id;\n    ELSIF TG_OPNAME = 'UPDATE' AND NEW.read = TRUE THEN\n        UPDATE article_unread_comments\n        SET unread_count = unread_count - 1\n        WHERE article_id = NEW.article_id AND user_id = NEW.user_id;\n    ELSIF TG_OPNAME = 'DELETE' THEN\n        UPDATE article_unread_comments\n        SET unread_count = unread_count - 1\n        WHERE article_id = OLD.article_id AND user_id != OLD.user_id;\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER update_unread_comments_trigger\nAFTER INSERT OR UPDATE OR DELETE ON comments\nFOR EACH ROW EXECUTE PROCEDURE update_unread_comments();