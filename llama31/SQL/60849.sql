CREATE OR REPLACE TYPE test_payload AS OBJECT(\n   test_id   NUMBER,\n   test_dt   DATE);\n\nDECLARE\n   subscriber   SYS.aq$_agent;\nBEGIN\n   DBMS_AQADM.create_queue_table( queue_table => 'Test_MQT', queue_payload_type => 'TEST_PAYLOAD', multiple_consumers => TRUE );\n   DBMS_AQADM.create_queue( 'Test_Q', 'Test_MQT' );\n   DBMS_AQADM.start_queue( queue_name => 'Test_Q' );\n\n   DBMS_AQADM.create_queue_table( queue_table => 'Dest_MQT', queue_payload_type => 'TEST_PAYLOAD', multiple_consumers => TRUE );\n   DBMS_AQADM.create_queue( 'Dest_Q', 'Dest_MQT' );\n   DBMS_AQADM.start_queue( queue_name => 'Dest_Q' );\n\n   subscriber := SYS.aq$_agent( 'test_local_sub', 'Dest_Q', NULL );\n   DBMS_AQADM.add_subscriber( queue_name => 'Test_Q', subscriber => subscriber );\n   DBMS_AQADM.schedule_propagation( queue_name => 'Test_Q', destination_queue => 'Dest_Q' );\nEND;\n\nDECLARE\n   enqueue_options      DBMS_AQ.enqueue_options_t;\n   message_properties   DBMS_AQ.message_properties_t;\n   message_handle       RAW( 16 );\n   MESSAGE              test_payload;\nBEGIN\n   MESSAGE := test_payload( 2, SYSDATE );\n   DBMS_AQ.enqueue( queue_name => 'Test_Q', enqueue_options => enqueue_options, message_properties => message_properties, payload => MESSAGE, msgid => message_handle );\n   COMMIT;\nEND;\n\nDECLARE\n   dequeue_options      DBMS_AQ.dequeue_options_t;\n   message_properties   DBMS_AQ.message_properties_t;\n   message_handle       RAW( 16 );\n   MESSAGE              test_payload;\nBEGIN\n   dequeue_options.navigation := DBMS_AQ.first_message;\n   dequeue_options.wait := DBMS_AQ.forever; -- wait forever for a message\n   DBMS_AQ.dequeue( queue_name => 'Dest_Q', dequeue_options => dequeue_options, message_properties => message_properties, payload => MESSAGE, msgid => message_handle );\n   DBMS_OUTPUT.put_line( 'Test_ID: ' || MESSAGE.test_id );\n   DBMS_OUTPUT.put_line( 'Test_Date: ' || MESSAGE.test_dt );\n   COMMIT;\nEND;