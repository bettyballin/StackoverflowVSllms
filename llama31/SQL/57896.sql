CREATE PROCEDURE GenerateBoxLabel\nAS\nBEGIN\n  DECLARE @BoxSlotID INT\n  SELECT TOP 1 @BoxSlotID = BoxSlotID\n  FROM BoxSlots\n  WHERE BoxCount > 0\n  AND NOT EXISTS (SELECT 1 FROM Boxes WHERE BoxSlotID = BoxSlotID AND Scanned = 1)\n\n  IF @BoxSlotID IS NOT NULL\n  BEGIN\n    DECLARE @FloorName VARCHAR(50)\n    DECLARE @RowName VARCHAR(50)\n    DECLARE @ColumnName VARCHAR(50)\n    DECLARE @ShelfName VARCHAR(50)\n    DECLARE @BoxCount INT\n\n    SELECT \n      @FloorName = F.Name,\n      @RowName = R.Name,\n      @ColumnName = C.Name,\n      @ShelfName = S.Name,\n      @BoxCount = BS.BoxCount\n    FROM \n      BoxSlots BS\n      INNER JOIN Shelves S ON BS.ShelfID = S.ShelfID\n      INNER JOIN Columns C ON S.ColumnID = C.ColumnID\n      INNER JOIN Rows R ON C.RowID = R.RowID\n      INNER JOIN Floors F ON R.FloorID = F.FloorID\n    WHERE \n      BS.BoxSlotID = @BoxSlotID\n\n    DECLARE @Label VARCHAR(50)\n    SET @Label = 'F' + @FloorName + 'R' + @RowName + 'C' + @ColumnName + 'S' + @ShelfName + 'B' + CONVERT(VARCHAR, @BoxCount)\n\n    INSERT INTO Boxes (BoxSlotID, Label, Scanned, ScanDate)\n    VALUES (@BoxSlotID, @Label, 1, GETDATE())\n\n    UPDATE BoxSlots\n    SET BoxCount = BoxCount - 1\n    WHERE BoxSlotID = @BoxSlotID\n\n    RETURN @Label\n  END\n  ELSE\n  BEGIN\n    RETURN NULL\n  END\nEND