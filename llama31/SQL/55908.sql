CREATE FUNCTION GetBusinessHoursDiff (@startDate DATETIME, @endDate DATETIME)\nRETURNS INT\nAS\nBEGIN\n    DECLARE @startHour DECIMAL(5,2) = 8.5  -- 8:30\n    DECLARE @endHour DECIMAL(5,2) = 16.0  -- 16:00\n    DECLARE @weekend INT = 0  -- 0 = no weekend, 1 = weekend\n\n    DECLARE @diff INT = 0\n\n    WHILE @startDate < @endDate\n    BEGIN\n        IF DATENAME(WEEKDAY, @startDate) NOT IN ('Saturday', 'Sunday')  -- skip weekends\n        BEGIN\n            IF CONVERT(TIME, @startDate) >= CONVERT(TIME, @startHour) AND \n               CONVERT(TIME, @startDate) < CONVERT(TIME, @endHour)  -- within business hours\n            BEGIN\n                SET @diff += 1  -- increment hours\n            END\n        END\n        SET @startDate = DATEADD(HOUR, 1, @startDate)  -- increment hour\n    END\n\n    RETURN @diff\nEND\nGO\n\n-- example usage:\nSELECT \n    ID,\n    Date,\n    Reaction_Time = dbo.GetBusinessHoursDiff(Date, LEAD(Date) OVER (PARTITION BY ID ORDER BY Date)),\n    Overdue = CASE WHEN Reaction_Time > 5 THEN 'YES' ELSE '' END\nFROM \n    your_table\nORDER BY \n    ID, Date;