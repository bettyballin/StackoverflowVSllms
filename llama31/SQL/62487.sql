-- Retrieve table and column metadata\nSELECT \n  t.table_name, \n  c.column_name, \n  c.data_type\nINTO #temp_tables_columns\nFROM \n  QSYS2.SYSTABLES t\n  JOIN QSYS2.SYSCOLUMNS c ON t.table_name = c.table_name\nWHERE \n  t.table_name IN ('table1', 'table2', ...); -- specify your list of tables\n\n-- Generate dynamic SQL statements\nDECLARE c_columns CURSOR FOR\nSELECT \n  table_name, \n  column_name\nFROM \n  #temp_tables_columns;\n\nDECLARE \n  @sql VARCHAR(1024), \n  @table_name VARCHAR(128), \n  @column_name VARCHAR(128), \n  @count INTEGER;\n\nOPEN c_columns;\n\nFETCH NEXT FROM c_columns INTO @table_name, @column_name;\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n  SET @sql = 'SELECT COUNT(*) FROM ' + @table_name + ' WHERE ' + @column_name + ' IS NOT NULL AND ' + @column_name + ' != '''' AND ' + @column_name + ' != 0';\n\n  EXECUTE (@sql) INTO @count;\n\n  IF @count = 0\n  BEGIN\n    PRINT 'Column ' + @column_name + ' in table ' + @table_name + ' has only zero or blank values.';\n  END\n\n  FETCH NEXT FROM c_columns INTO @table_name, @column_name;\nEND\n\nCLOSE c_columns;\nDEALLOCATE c_columns;\nDROP TABLE #temp_tables_columns;