-- Set the linked server and database names\nDECLARE @linkedServer sysname = 'your_linked_server_name';\nDECLARE @database sysname = 'your_database_name';\n\n-- Set the table name pattern\nDECLARE @tableNamePattern nvarchar(50) = 'text%';\n\n-- Create a cursor to loop through the tables\nDECLARE cur CURSOR FOR\n    SELECT name \n    FROM sys.tables \n    WHERE name LIKE @tableNamePattern;\n\n-- Open the cursor\nOPEN cur;\n\n-- Declare variables to store the current table name and SQL statement\nDECLARE @currentTableName sysname;\nDECLARE @sql nvarchar(max);\n\n-- Loop through the tables\nFETCH NEXT FROM cur INTO @currentTableName;\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    -- Check if the table exists locally and drop it if it does\n    IF OBJECT_ID(@currentTableName, 'U') IS NOT NULL\n    BEGIN\n        SET @sql = 'DROP TABLE ' + QUOTENAME(@currentTableName);\n        EXEC sp_executesql @sql;\n    END\n\n    -- Select * into the local table from the linked server table\n    SET @sql = 'SELECT * INTO ' + QUOTENAME(@currentTableName) + ' FROM ' + QUOTENAME(@linkedServer) + '.' + QUOTENAME(@database) + '.' + QUOTENAME(@currentTableName);\n    EXEC sp_executesql @sql;\n\n    -- Check for errors and print a message if there's an issue\n    IF @@ERROR <> 0\n    BEGIN\n        PRINT 'Error copying table ' + @currentTableName;\n    END\n\n    -- Fetch the next table name\n    FETCH NEXT FROM cur INTO @currentTableName;\nEND\n\n-- Close and deallocate the cursor\nCLOSE cur;\nDEALLOCATE cur;