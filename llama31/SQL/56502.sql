-- Create a sample table\nCREATE TABLE Employees (\n    EmployeeID int,\n    Name nvarchar(50),\n    ManagerID int\n);\n\n-- Insert some sample data\nINSERT INTO Employees (EmployeeID, Name, ManagerID)\nVALUES\n(1, 'John Doe', null),\n(2, 'Jane Doe', 1),\n(3, 'Bob Smith', 1),\n(4, 'Alice Johnson', 2),\n(5, 'Mike Brown', 3);\n\n-- Create a view\nCREATE VIEW EmployeeHierarchy AS\nWITH RecursiveEmployees AS (\n    SELECT EmployeeID, Name, ManagerID, 0 AS Level\n    FROM Employees\n    WHERE ManagerID IS NULL\n    UNION ALL\n    SELECT e.EmployeeID, e.Name, e.ManagerID, Level + 1\n    FROM Employees e\n    INNER JOIN RecursiveEmployees m ON e.ManagerID = m.EmployeeID\n)\nSELECT * FROM RecursiveEmployees;\n\n-- Query the view\nSELECT * FROM EmployeeHierarchy;\n\n-- Use a CTE instead of the view\nWITH RecursiveEmployees AS (\n    SELECT EmployeeID, Name, ManagerID, 0 AS Level\n    FROM Employees\n    WHERE ManagerID IS NULL\n    UNION ALL\n    SELECT e.EmployeeID, e.Name, e.ManagerID, Level + 1\n    FROM Employees e\n    INNER JOIN RecursiveEmployees m ON e.ManagerID = m.EmployeeID\n)\nSELECT * FROM RecursiveEmployees;