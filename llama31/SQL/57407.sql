WITH CustomerPayments AS (\n  SELECT \n    c.CustomerId,\n    c.Name AS CustomerName,\n    p.PaymentId,\n    SUM(cp.Quantity * cp.UnitPrice) AS Amount,\n    SUM(bp.Amount) AS BonusAmount,\n    p.DateFrom,\n    p.DateTo\n  FROM \n    Customers c\n  INNER JOIN \n    Payments p ON c.CustomerId = p.CustomerId\n  LEFT JOIN \n    CampaignPayment cp ON p.PaymentId = cp.PaymentId\n  LEFT JOIN \n    BonusPayment bp ON p.PaymentId = bp.PaymentId\n  GROUP BY \n    c.CustomerId, c.Name, p.PaymentId, p.DateFrom, p.DateTo\n),\nEmptyRows AS (\n  SELECT \n    c.CustomerId,\n    c.Name AS CustomerName,\n    NULL AS PaymentId,\n    s.Earning - COALESCE(SUM(cp.Quantity * cp.UnitPrice), 0) AS Amount,\n    b.Amount - COALESCE(SUM(bp.Amount), 0) AS BonusAmount,\n    DATEADD(month, DATEDIFF(month, 0, s.Date), 0) AS DateFrom,\n    DATEADD(day, -1, DATEADD(month, DATEDIFF(month, 0, s.Date) + 1, 0)) AS DateTo\n  FROM \n    Customers c\n  INNER JOIN \n    Stats s ON c.CustomerId = s.CustomerId\n  LEFT JOIN \n    Bonus b ON c.CustomerId = b.CustomerId AND s.Date = b.Date\n  LEFT JOIN \n    Payments p ON c.CustomerId = p.CustomerId AND s.Date BETWEEN p.DateFrom AND p.DateTo\n  LEFT JOIN \n    CampaignPayment cp ON p.PaymentId = cp.PaymentId\n  LEFT JOIN \n    BonusPayment bp ON p.PaymentId = bp.PaymentId\n  GROUP BY \n    c.CustomerId, c.Name, s.Date, b.Amount\n  HAVING \n    NOT EXISTS (\n      SELECT 1\n      FROM Payments p2\n      WHERE p2.CustomerId = c.CustomerId AND s.Date BETWEEN p2.DateFrom AND p2.DateTo\n    )\n)\nSELECT * FROM CustomerPayments\nUNION ALL\nSELECT * FROM EmptyRows;