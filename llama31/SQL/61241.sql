DECLARE\n    -- Variable to hold the BLOB\n    v_blob BLOB;\n    -- Variable to hold the BFILE\n    v_bfile BFILE;\n    -- Variable to hold the file name and path for the BFILE\n    v_file_name VARCHAR2(100) := 'path/to/your/file.txt';\n    -- Variable to hold the file's content length\n    v_file_len NUMBER;\n\nBEGIN\n    -- Create a BFILE pointing to the file\n    v_bfile := BFILENAME(v_file_name);\n\n    -- Check if the file exists\n    IF DBMS_LOB.FILEEXISTS(v_bfile) = 1 THEN\n        -- Open the BFILE\n        DBMS_LOB.OPEN(v_bfile, DBMS_LOB.LOB_READONLY);\n        \n        -- Get the length of the file\n        v_file_len := DBMS_LOB.GETLENGTH(v_bfile);\n        \n        -- Initialize the BLOB\n        DBMS_LOB.CREATETEMPORARY(v_blob, TRUE, DBMS_LOB.SESSION);\n        DBMS_LOB.OPEN(v_blob, DBMS_LOB.LOB_READWRITE);\n        \n        -- Load the file into the BLOB\n        DBMS_LOB.LOADFROMFILE(v_blob, v_bfile, v_file_len);\n        \n        -- Close the BFILE and the BLOB\n        DBMS_LOB.CLOSE(v_bfile);\n        DBMS_LOB.CLOSE(v_blob);\n        \n        -- Insert the BLOB into a table or process it as needed\n        -- For example:\n        -- INSERT INTO your_table(blob_column) VALUES (v_blob);\n        -- COMMIT;\n    ELSE\n        DBMS_OUTPUT.PUT_LINE('File ' || v_file_name || ' does not exist.');\n    END IF;\n\n    -- Free the temporary BLOB\n    DBMS_LOB.FREETEMPORARY(v_blob);\nEND;\n/