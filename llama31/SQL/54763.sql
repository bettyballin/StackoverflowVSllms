SELECT \n  a.user_id AS 'User ID',\n  a.project_id AS 'Remix Project Id',\n  prjs.based_on_pid AS 'Original Project ID',\n  (CASE WHEN f.reasons IS NULL THEN 'N' ELSE 'Y' END) AS 'Flagged Y or N',\n  f.reasons,\n  f.timestamp,\n  min_timestamp\nFROM \n  view_stats a\n  JOIN (\n    SELECT \n      id, \n      based_on_pid, \n      user_id\n    FROM \n      projects p\n  ) prjs ON (a.project_id = prjs.id)\n  LEFT OUTER JOIN flaggers f ON (\n    f.project_id = a.project_id AND f.user_id = a.user_id\n  )\n  JOIN (\n    SELECT \n      project_id, \n      MIN(timestamp) AS min_timestamp\n    FROM \n      view_stats\n    GROUP BY \n      project_id\n  ) min_timestamps ON (a.project_id = min_timestamps.project_id)\nWHERE \n  a.project_id IN (\n    SELECT \n      DISTINCT b.id\n    FROM \n      projects b\n    WHERE \n      b.based_on_pid IN (\n        SELECT \n          DISTINCT c.id\n        FROM \n          projects c\n        WHERE \n          c.user_id = a.user_id\n      )\n  )\nORDER BY \n  f.reasons DESC, \n  a.user_id, \n  a.project_id;