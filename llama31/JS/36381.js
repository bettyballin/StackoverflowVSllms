function VerifyDate(source, args) {\n    // First, define the maximum allowed date (one year from now)\n    const maxDate = new Date();\n    maxDate.setFullYear(maxDate.getFullYear() + 1);\n\n    // Use a strict regular expression to match the format yyyyMMdd\n    const regexp = /^\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\n    const result = args.Value.match(regexp);\n\n    if (result) {\n        // Extract year, month, and day from the input string\n        const year = args.Value.substring(0, 4);\n        const month = args.Value.substring(4, 6);\n        const day = args.Value.substring(6, 8);\n\n        // Create a Date object from the input\n        const inputDate = new Date(year, month - 1, day); // Month is 0-based in JavaScript\n\n        // Check if the date is valid (the Date object will return NaN for the date parts if it's invalid)\n        if (!isNaN(inputDate.getTime())) {\n            // Check if the date is not more than one year in the future\n            if (inputDate <= maxDate) {\n                args.IsValid = true;\n                return;\n            }\n        }\n    }\n\n    args.IsValid = false;\n}