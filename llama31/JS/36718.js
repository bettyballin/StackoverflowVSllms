function buildHeadingHierarchy(headings) {\n  const hierarchy = [];\n  let currentLevel = 0;\n  let currentList = hierarchy;\n\n  headings.forEach((heading) => {\n    const level = parseInt(heading.tagName.substring(1));\n    const text = heading.textContent;\n\n    if (level > currentLevel) {\n      // Create a new sublist\n      const newList = [];\n      currentList.push({ text, children: newList });\n      currentList = newList;\n    } else if (level < currentLevel) {\n      // Move up the hierarchy\n      for (let i = 0; i < currentLevel - level; i++) {\n        currentList = currentList.parent;\n      }\n    } else {\n      // Add to current list\n      currentList.push({ text });\n    }\n\n    currentLevel = level;\n  });\n\n  return hierarchy;\n}\n\n// Example usage:\nconst headings = document.querySelectorAll('h1, h2, h3, h4');\nconst hierarchy = buildHeadingHierarchy(headings);\n\nfunction renderHierarchy(hierarchy) {\n  const ol = document.createElement('ol');\n  hierarchy.forEach((item) => {\n    const li = document.createElement('li');\n    li.textContent = item.text;\n    if (item.children) {\n      li.appendChild(renderHierarchy(item.children));\n    }\n    ol.appendChild(li);\n  });\n  return ol;\n}\n\nconst renderedHierarchy = renderHierarchy(hierarchy);\ndocument.body.appendChild(renderedHierarchy);