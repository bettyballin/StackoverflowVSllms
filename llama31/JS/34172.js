function MyUtils() {\n  // Member Variables (Constructor)\n  var x = getComplexData();\n  var y = doSomeInitialization();\n\n  // Objects\n  this.ParamHash = function() {\n    // Member variables\n    this.length = 0;\n    this.items = new Array();\n\n    // Constructor\n    for (var i = 0; i < arguments.length; i += 2) {\n      // Fill the items array.\n      this.items[arguments[i]] = arguments[i+1];\n      this.length++;\n    }\n  }\n\n  // Separate variable to hold the instance of ParamHash\n  this.myParamHash;\n\n  // Functions\n  this.doSomething = function() {\n    // Do something.\n    // Uses the items in the ParamHash object.\n    for (var i in this.myParamHash.items) {\n      // Really do something!\n    }\n\n    // Clear the ParamHash object\n    this.myParamHash = null;\n  }\n}\n\n// First call - works fine.\nvar utils = new MyUtils();\nutils.myParamHash = new utils.ParamHash("a", 1, "b", 2);\nutils.doSomething();\n\n// Consequent call - works fine now.\nutils.myParamHash = new utils.ParamHash("c", 3);\nutils.doSomething();