import { Semaphore } from 'async-mutex';\n\nclass Cache {\n  private semaphore = new Semaphore(1); // Allow only 1 concurrent access\n  private cache = {};\n\n  async get(key) {\n    await this.semaphore.acquire();\n    try {\n      return this.cache[key];\n    } finally {\n      this.semaphore.release();\n    }\n  }\n\n  async set(key, value) {\n    await this.semaphore.acquire();\n    try {\n      this.cache[key] = value;\n    } finally {\n      this.semaphore.release();\n    }\n  }\n}