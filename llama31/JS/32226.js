const mongoose = require('mongoose');\n\n// Define the User model\nconst UserSchema = new mongoose.Schema({\n  username: String,\n  password: String,\n  is_loggable: Boolean // Add a flag to disable login\n});\n\n// Create a separate authentication mechanism for non-loggable accounts\nconst NonLoggableAuth = async (req, res, next) => {\n  const token = req.headers['x-auth-token'];\n  if (!token) return res.status(401).send('Unauthorized');\n\n  const user = await User.findOne({ token });\n  if (!user || !user.is_loggable) return res.status(401).send('Unauthorized');\n\n  req.user = user;\n  next();\n};\n\n// Restrict access to sensitive resources and actions\nconst restrictAccess = async (req, res, next) => {\n  const user = req.user;\n  if (!user || !user.hasPermission('access_sensitive_resources')) {\n    return res.status(403).send('Forbidden');\n  }\n  next();\n};\n\n// Use the separate authentication mechanism and restrict access\napp.get('/sensitive-resource', NonLoggableAuth, restrictAccess, (req, res) => {\n  // Return the sensitive resource\n});