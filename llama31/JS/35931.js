function isElementReallyVisible(element) {\n  // Check if the element exists\n  if (!element) return false;\n\n  // Check display and visibility properties\n  var style = element.getStyle('display');\n  if (style === 'none') return false;\n\n  style = element.getStyle('visibility');\n  if (style === 'hidden') return false;\n\n  // Check the opacity and ensure it's not 0\n  style = element.getStyle('opacity');\n  if (parseFloat(style) === 0) return false;\n\n  // Get the element's dimensions and position\n  var elementRect = element.getBoundingClientRect();\n  var left = elementRect.left;\n  var top = elementRect.top;\n  var right = elementRect.right;\n  var bottom = elementRect.bottom;\n\n  // Check if the element is offscreen\n  if (left < 0 && right < 0 || top < 0 && bottom < 0 || left > globalThis.innerWidth || top > globalThis.innerHeight) {\n    return false;\n  }\n\n  // Check if the element is under another element\n  // This part can be tricky and might not cover all edge cases without using more advanced techniques like checking for overlap with all other elements\n  // Here, we'll keep it simple and consider the element on top if it's not covered by any other element directly above it\n  for (var otherElement = element.nextSibling; otherElement; otherElement = otherElement.nextSibling) {\n    if (otherElement.nodeType === 1) { // Only consider element nodes\n      var otherRect = otherElement.getBoundingClientRect();\n      if (otherRect.left < right && otherRect.right > left && otherRect.top < bottom && otherRect.bottom > top) {\n        return false; // Found another element on top\n      }\n    }\n  }\n\n  return true; // Element is visible\n}