// Get the table element\nconst table = document.getElementById('myTable');\n\n// Make the table cells draggable\ninteract('.draggable-cell', {\n  draggable: {\n    inertia: true,\n    restrict: {\n      restriction: 'parent',\n      endOnly: true,\n      elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    autoScroll: true,\n    onmove: dragMoveListener,\n    onend: dragEndListener\n  }\n});\n\nfunction dragMoveListener(event) {\n  const target = event.target;\n  const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n  const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n  target.style.webkitTransform = target.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n  target.setAttribute('data-x', x);\n  target.setAttribute('data-y', y);\n}\n\nfunction dragEndListener(event) {\n  const target = event.target;\n  const newTd = document.createElement('td');\n  newTd.style.width = target.offsetWidth + 'px';\n  // Insert the new td element at the correct position\n  const parent = target.parentNode;\n  const nextSibling = parent.childNodes[Array.prototype.indexOf.call(parent.childNodes, target) + 1];\n  parent.insertBefore(newTd, nextSibling);\n  // Adjust the width of the adjacent cells\n  const leftCell = parent.childNodes[Array.prototype.indexOf.call(parent.childNodes, newTd) - 1];\n  const rightCell = parent.childNodes[Array.prototype.indexOf.call(parent.childNodes, newTd) + 1];\n  leftCell.style.width = (leftCell.offsetWidth - target.offsetWidth) + 'px';\n  rightCell.style.width = (rightCell.offsetWidth - target.offsetWidth) + 'px';\n}