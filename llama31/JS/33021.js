// Function to suppress repeating values in a table\nfunction suppressRepeatingValues(table) {\n  // Get all rows in the table\n  var rows = table.rows;\n\n  // Iterate over each column\n  for (var col = 0; col < rows[0].cells.length; col++) {\n    // Store the previous value\n    var prevValue = null;\n\n    // Iterate over each row\n    for (var row = 0; row < rows.length; row++) {\n      // Get the current cell\n      var cell = rows[row].cells[col];\n\n      // If the current value is the same as the previous value, suppress it\n      if (cell.textContent === prevValue) {\n        cell.textContent = '';\n      }\n\n      // Update the previous value\n      prevValue = cell.textContent;\n    }\n  }\n}\n\n// Function to sort the table\nfunction sortTable(table, col) {\n  // Get all rows in the table\n  var rows = table.rows;\n\n  // Sort the rows based on the specified column\n  rows.sort(function(a, b) {\n    var aValue = a.cells[col].textContent;\n    var bValue = b.cells[col].textContent;\n\n    if (aValue < bValue) {\n      return -1;\n    } else if (aValue > bValue) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  // Rebuild the table with the sorted rows\n  table.tBodies[0].innerHTML = '';\n  for (var i = 0; i < rows.length; i++) {\n    table.tBodies[0].appendChild(rows[i]);\n  }\n\n  // Suppress repeating values after sorting\n  suppressRepeatingValues(table);\n}\n\n// Example usage\nvar table = document.getElementById('myTable');\n\n// Add event listeners to the table headers\nvar headers = table.tHead.rows[0].cells;\nfor (var i = 0; i < headers.length; i++) {\n  headers[i].addEventListener('click', function() {\n    sortTable(table, this.cellIndex);\n  });\n}\n\n// Initial suppression of repeating values\nsuppressRepeatingValues(table);