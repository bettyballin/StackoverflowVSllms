const log4js = require('log4js');\n\n// Configure log4js\nlog4js.configure({\n  appenders: {\n    file: {\n      type: 'file',\n      filename: 'logs/channel-${channelName}.log',\n      maxLogSize: 10 * 1024 * 1024, // 10MB\n      backups: 5,\n      compress: true\n    }\n  },\n  categories: {\n    default: {\n      appenders: ['file'],\n      level: 'info'\n    }\n  }\n});\n\n// Get a logger instance\nconst logger = log4js.getLogger('channel-${channelName}');\n\n// Buffer log messages\nconst logBuffer = [];\n\n// Log a message\nfunction log(message) {\n  logBuffer.push(message);\n}\n\n// Periodically flush the buffer\nsetInterval(() => {\n  if (logBuffer.length > 0) {\n    logger.info(logBuffer.join('\n'));\n    logBuffer.length = 0; // Clear the buffer\n  }\n}, 5 * 60 * 1000); // 5 minutes\n\n// Rotate log files daily\nlog4js.shutdown(() => {\n  // Rename the current log file\n  const currentLogFile = 'logs/channel-${channelName}.log';\n  const newLogFile = `logs/channel-${channelName}-${Date.now()}.log`;\n  fs.renameSync(currentLogFile, newLogFile);\n\n  // Create a new log file\n  fs.writeFileSync(currentLogFile, '');\n});