// Get the total count of records from the session variable\nvar totalCount = '<%= Session["totalCount"] %>';\n\n// Get the paginated data from the session variable\nvar paginatedData = '<%= Session["paginatedData"] %>';\n\n// Create a function to render the table with paginated data\nfunction renderTable(data) {\n  // Clear the table body\n  $('#tableBody').empty();\n\n  // Loop through the paginated data and render the table rows\n  $.each(data, function (index, item) {\n    var row = $('<tr>');\n    row.append($('<td>').text(item.column1));\n    row.append($('<td>').text(item.column2));\n    row.append($('<td>').text(item.column3));\n    $('#tableBody').append(row);\n  });\n}\n\n// Render the initial page\nrenderTable(paginatedData);\n\n// Create pagination links\nvar paginationHtml = '';\nfor (var i = 1; i <= Math.ceil(totalCount / pageSize); i++) {\n  paginationHtml += '<a href="#" data-page="' + i + '">' + i + '</a> ';\n}\n$('#pagination').html(paginationHtml);\n\n// Handle pagination link clicks\n$('#pagination a').on('click', function (e) {\n  e.preventDefault();\n  var nextPage = $(this).data('page');\n  // Make an AJAX call to the server to retrieve the next page of data\n  $.ajax({\n    type: 'POST',\n    url: '/your-controller/your-action',\n    data: { page: nextPage },\n    success: function (data) {\n      // Update the paginated data in the session variable\n      Session["paginatedData"] = data;\n      // Render the updated table\n      renderTable(data);\n    }\n  });\n});