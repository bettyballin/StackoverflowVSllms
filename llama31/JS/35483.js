// Set API key and initialize map\nconst apiKey = 'YOUR_API_KEY';\nconst map = new google.maps.Map(document.getElementById('map'), {\n  center: { lat: 37.7749, lng: -122.4194 },\n  zoom: 12\n});\n\n// Create a PlacesService instance\nconst placesService = new google.maps.places.PlacesService(map);\n\n// Define search parameters\nconst searchParams = {\n  location: null, // Set to city/state or zip code\n  radius: 5000 // Search within 5km radius (adjust to your needs)\n};\n\n// Function to perform search and display results\nfunction searchAndDisplay() {\n  // Set search location to city/state or zip code\n  searchParams.location = document.getElementById('search-input').value;\n\n  // Perform search using PlacesService\n  placesService.search(searchParams, (results, status) => {\n    if (status === google.maps.places.PlacesServiceStatus.OK) {\n      // Clear previous markers\n      map.clearMarkers();\n\n      // Create markers for each result\n      results.forEach((result) => {\n        const marker = new google.maps.Marker({\n          position: result.geometry.location,\n          map: map,\n          title: result.name\n        });\n\n        // Calculate distance between result and search location\n        const distance = google.maps.geometry.spherical.computeDistanceBetween(\n          searchParams.location,\n          result.geometry.location\n        );\n\n        // Add info window to marker with name and distance\n        const infowindow = new google.maps.InfoWindow({\n          content: `${result.name} (${distance.toFixed(2)} km)`\n        });\n        marker.addListener('click', () => {\n          infowindow.open(map, marker);\n        });\n      });\n    }\n  });\n}\n\n// Set up search input and button\nconst searchInput = document.getElementById('search-input');\nconst searchButton = document.getElementById('search-button');\nsearchButton.addEventListener('click', searchAndDisplay);