const express = require('express');\nconst jwt = require('jsonwebtoken');\n\nconst app = express();\n\n// Set up session store (e.g., Redis or a database)\nconst sessionStore = {};\n\n// Login endpoint\napp.post('/login', (req, res) => {\n  const { username, password } = req.body;\n  // Authenticate user...\n  if (/* authenticated */) {\n    const sessionID = generateSessionID();\n    sessionStore[username] = sessionID;\n    const token = jwt.sign({ sessionID }, process.env.SECRET_KEY, { expiresIn: '1h' });\n    res.json({ token });\n  } else {\n    res.status(401).send('Invalid credentials');\n  }\n});\n\n// Validate token on each request\napp.use((req, res, next) => {\n  const token = req.header('Authorization');\n  if (!token) {\n    res.status(401).send('Unauthorized');\n  } else {\n    try {\n      const decoded = jwt.verify(token, process.env.SECRET_KEY);\n      if (sessionStore[decoded.username] !== decoded.sessionID) {\n        res.status(401).send('Session already active');\n      } else {\n        next();\n      }\n    } catch (error) {\n      res.status(401).send('Invalid token');\n    }\n  }\n});