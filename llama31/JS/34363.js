const googleMaps = require('@google/maps');\n\n// User input (address or zip code)\nconst userInput = 'New York, NY 10021';\n\n// Geocode user input\ngoogleMaps.geocode({\n  address: userInput,\n  key: 'YOUR_API_KEY'\n}, (err, results) => {\n  if (err) {\n    console.error(err);\n  } else {\n    const userLocation = results[0].geometry.location;\n\n    // Store locations with coordinates\n    const storeLocations = [\n      { name: 'Store 1', lat: 40.7128, lng: -74.0060 },\n      { name: 'Store 2', lat: 40.7183, lng: -73.9945 },\n      // ...\n    ];\n\n    // Radius search and distance calculation\n    const nearbyStores = storeLocations.filter((store) => {\n      const distance = haversineDistance(userLocation, store);\n      return distance <= 5; // miles\n    });\n\n    // Sort and rank nearby stores by distance\n    nearbyStores.sort((a, b) => haversineDistance(userLocation, a) - haversineDistance(userLocation, b));\n\n    console.log(nearbyStores);\n  }\n});\n\n// Haversine distance formula\nfunction haversineDistance(loc1, loc2) {\n  const lat1 = loc1.lat * Math.PI / 180;\n  const lng1 = loc1.lng * Math.PI / 180;\n  const lat2 = loc2.lat * Math.PI / 180;\n  const lng2 = loc2.lng * Math.PI / 180;\n\n  const dLat = lat2 - lat1;\n  const dLng = lng2 - lng1;\n\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLng / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  const distance = 6371 * c; // kilometers\n  return distance * 0.621371; // miles\n}