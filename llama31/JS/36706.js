function MergeTokens(left, right) {\n  const leftTokens = left.split(';');\n  const rightTokens = right.split(';');\n  const result = {};\n\n  // Add right tokens to result, overriding any existing tokens\n  rightTokens.forEach(token => {\n    const [key, value] = token.split(':');\n    result[key] = value;\n  });\n\n  // Add left tokens to result, only if they don't exist on the right\n  leftTokens.forEach(token => {\n    const [key, value] = token.split(':');\n    if (!result[key]) {\n      result[key] = value;\n    }\n  });\n\n  // Join the result tokens back into a string\n  return Object.keys(result).map(key => `${key}:${result[key]}`).join(';');\n}\n\nconst test = MergeTokens('test:1;hello:five;just:23', 'yes:23;test:567');\nconsole.log(test); // Output: "test:567;hello:five;just:23;yes:23"