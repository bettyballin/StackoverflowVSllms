const express = require('express');\nconst session = require('express-session');\nconst jwt = require('jsonwebtoken');\n\nconst app = express();\n\n// Set up session store\napp.use(session({\n  secret: 'your-secret-key',\n  resave: false,\n  saveUninitialized: false,\n}));\n\n// Set up cookie options\nconst cookieOptions = {\n  httpOnly: true,\n  secure: true,\n  maxAge: 15 * 60 * 1000, // 15 minutes\n};\n\n// Authenticate user and set cookie + session\napp.post('/login', (req, res) => {\n  const { username, password } = req.body;\n  // Authenticate user...\n  const user = { id: 1, name: 'John Doe' };\n  const token = jwt.sign({ userId: user.id }, process.env.SECRET_KEY, {\n    expiresIn: '15m',\n  });\n  req.session.user = user;\n  res.cookie('authToken', token, cookieOptions);\n  res.redirect('/protected');\n});\n\n// Verify cookie and session on every request\napp.use((req, res, next) => {\n  const token = req.cookies.authToken;\n  if (!token) {\n    return res.status(401).send('Unauthorized');\n  }\n  try {\n    const decoded = jwt.verify(token, process.env.SECRET_KEY);\n    if (!req.session.user || req.session.user.id !== decoded.userId) {\n      return res.status(401).send('Unauthorized');\n    }\n  } catch (err) {\n    return res.status(401).send('Unauthorized');\n  }\n  next();\n});\n\n// Protected route\napp.get('/protected', (req, res) => {\n  res.send(`Hello, ${req.session.user.name}!`);\n});