public class FontFamilySurrogate : IDataContractSurrogate\n{\n    public object GetCustomDataToExport(Type clrType, Type dataContractType)\n    {\n        return null;\n    }\n\n    public object GetCustomDataToExport(MemberInfo memberInfo, Type dataContractType)\n    {\n        return null;\n    }\n\n    public Type GetDataContractType(Type type)\n    {\n        return type;\n    }\n\n    public object GetDeserializedObject(object obj, Type targetType)\n    {\n        if (obj is string fontName)\n        {\n            try\n            {\n                return new FontFamily(fontName);\n            }\n            catch (ArgumentException)\n            {\n                // Font family does not exist, return null\n                return null;\n            }\n        }\n        return obj;\n    }\n\n    public void GetKnownCustomDataTypes(Collection<Type> customDataTypes)\n    {\n    }\n\n    public object GetObjectToSerialize(object obj, Type targetType)\n    {\n        return obj;\n    }\n\n    public Type GetReferencedTypeOnImport(string typeName, string typeNamespace, object customData)\n    {\n        return null;\n    }\n\n    public CodeTypeDeclaration ProcessImportedType(CodeTypeDeclaration typeDeclaration, CodeCompileUnit compileUnit)\n    {\n        return typeDeclaration;\n    }\n}