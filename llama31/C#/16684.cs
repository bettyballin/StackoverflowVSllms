using Microsoft.Win32;\nusing System;\n\npublic class RegistryHelper\n{\n    public static string ReadKeyValue(string keyPath, string valueName)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            if (key != null)\n            {\n                return key.GetValue(valueName).ToString();\n            }\n            else\n            {\n                throw new Exception("Key not found");\n            }\n        }\n    }\n\n    public static void WriteKeyValue(string keyPath, string valueName, string value)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath, true))\n        {\n            if (key != null)\n            {\n                key.SetValue(valueName, value);\n            }\n            else\n            {\n                throw new Exception("Key not found");\n            }\n        }\n    }\n\n    public static string[] EnumerateKeyEntries(string keyPath)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            if (key != null)\n            {\n                return key.GetSubKeyNames();\n            }\n            else\n            {\n                throw new Exception("Key not found");\n            }\n        }\n    }\n\n    public static string[] EnumerateValueNames(string keyPath)\n    {\n        using (RegistryKey key = Registry.LocalMachine.OpenSubKey(keyPath))\n        {\n            if (key != null)\n            {\n                return key.GetValueNames();\n            }\n            else\n            {\n                throw new Exception("Key not found");\n            }\n        }\n    }\n}