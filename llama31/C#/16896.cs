public class RateLimitAttribute : ActionFilterAttribute\n{\n    private const int MaxRequestsPerHour = 10;\n\n    public override void OnActionExecuting(ActionExecutingContext filterContext)\n    {\n        var request = filterContext.HttpContext.Request;\n        var ip = request.UserHostAddress;\n\n        // Store IP addresses in a cache or database\n        var ipCache = new Dictionary<string, int>();\n\n        if (ipCache.ContainsKey(ip))\n        {\n            var requestCount = ipCache[ip];\n            if (requestCount >= MaxRequestsPerHour)\n            {\n                filterContext.Result = new HttpUnauthorizedResult();\n                return;\n            }\n            ipCache[ip] = requestCount + 1;\n        }\n        else\n        {\n            ipCache.Add(ip, 1);\n        }\n\n        base.OnActionExecuting(filterContext);\n    }\n}