using System;\nusing System.Web;\nusing System.Web.Security;\n\npublic class CustomSessionManager\n{\n    public void StartSession(string userId)\n    {\n        // Check if user already has an active session\n        var existingSession = GetActiveSession(userId);\n        if (existingSession != null)\n        {\n            // Update existing session to inactive\n            existingSession.Status = "inactive";\n            UpdateSession(existingSession);\n        }\n\n        // Create a new session\n        var newSession = new Session\n        {\n            UserId = userId,\n            SessionId = Guid.NewGuid().ToString(),\n            Status = "active"\n        };\n\n        // Store new session in database\n        InsertSession(newSession);\n    }\n\n    public void EndSession(string sessionId)\n    {\n        // Update session status to inactive\n        var session = GetSession(sessionId);\n        if (session != null)\n        {\n            session.Status = "inactive";\n            UpdateSession(session);\n        }\n    }\n\n    // Database operations (e.g., using Entity Framework)\n    private Session GetActiveSession(string userId)\n    {\n        // Retrieve active session from database\n    }\n\n    private void InsertSession(Session session)\n    {\n        // Insert new session into database\n    }\n\n    private void UpdateSession(Session session)\n    {\n        // Update existing session in database\n    }\n}\n\npublic class Session\n{\n    public string UserId { get; set; }\n    public string SessionId { get; set; }\n    public string Status { get; set; }\n}