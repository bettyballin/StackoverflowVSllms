using System.Web;\n\npublic class IpBlocker\n{\n    public void BlockIp(string ipAddress)\n    {\n        // Get the current IP block list from the database or a file\n        var blockList = GetIpBlockList();\n\n        // Add the new IP address to the block list\n        blockList.Add(ipAddress);\n\n        // Save the updated block list\n        SaveIpBlockList(blockList);\n    }\n\n    public bool IsIpBlocked(string ipAddress)\n    {\n        // Get the current IP block list from the database or a file\n        var blockList = GetIpBlockList();\n\n        // Check if the IP address is in the block list\n        return blockList.Contains(ipAddress);\n    }\n\n    // Implement GetIpBlockList and SaveIpBlockList methods\n    // to store and retrieve the IP block list from a database or a file\n}\n\npublic class Global : HttpApplication\n{\n    protected void Application_BeginRequest(object sender, EventArgs e)\n    {\n        var ipBlocker = new IpBlocker();\n        var ipAddress = HttpContext.Current.Request.UserHostAddress;\n\n        if (ipBlocker.IsIpBlocked(ipAddress))\n        {\n            // Return a 403 Forbidden response\n            HttpContext.Current.Response.StatusCode = 403;\n            HttpContext.Current.Response.StatusDescription = "Forbidden";\n            HttpContext.Current.Response.End();\n        }\n    }\n}