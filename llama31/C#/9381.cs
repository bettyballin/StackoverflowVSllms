public class CpuLimiter\n{\n    private readonly SemaphoreSlim _semaphore;\n    private readonly int _maxConcurrency;\n    private readonly TimeSpan _delay;\n\n    public CpuLimiter(int maxConcurrency, TimeSpan delay)\n    {\n        _semaphore = new SemaphoreSlim(maxConcurrency);\n        _maxConcurrency = maxConcurrency;\n        _delay = delay;\n    }\n\n    public async Task<T> ExecuteAsync<T>(Func<T> func)\n    {\n        await _semaphore.WaitAsync();\n        try\n        {\n            return func();\n        }\n        finally\n        {\n            _semaphore.Release();\n            await Task.Delay(_delay);\n        }\n    }\n}