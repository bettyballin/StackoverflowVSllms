using System;\nusing System.Runtime.InteropServices;\n\nclass KeyboardHook\n{\n    [DllImport("user32.dll")]\n    static extern IntPtr SetWindowsHookEx(int idHook, LowLevelKeyboardProc callback, IntPtr hInstance, uint threadId);\n\n    [DllImport("user32.dll")]\n    static extern bool UnhookWindowsHookEx(IntPtr idHook);\n\n    [DllImport("user32.dll")]\n    static extern IntPtr CallNextHookEx(IntPtr idHook, int nCode, IntPtr wParam, IntPtr lParam);\n\n    private delegate int LowLevelKeyboardProc(int nCode, IntPtr wParam, IntPtr lParam);\n\n    private IntPtr _hookId;\n\n    public KeyboardHook()\n    {\n        _hookId = SetWindowsHookEx(13, HookCallback, IntPtr.Zero, 0);\n    }\n\n    private int HookCallback(int nCode, IntPtr wParam, IntPtr lParam)\n    {\n        if (nCode >= 0 && wParam == (IntPtr)0x0100) // WM_KEYDOWN\n        {\n            Console.WriteLine("Key pressed: " + Marshal.ReadInt32(lParam));\n        }\n        return CallNextHookEx(_hookId, nCode, wParam, lParam);\n    }\n\n    ~KeyboardHook()\n    {\n        UnhookWindowsHookEx(_hookId);\n    }\n}