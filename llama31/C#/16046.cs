[TestFixture]\npublic class PersonTests\n{\n    [Test]\n    public void Name_Get_ReturnsDefaultValue()\n    {\n        // Arrange\n        var person = new Person();\n\n        // Act\n        var result = person.Name;\n\n        // Assert\n        Assert.AreEqual(string.Empty, result);\n    }\n\n    [Test]\n    public void Surname_Get_Set_ReturnsSetValue()\n    {\n        // Arrange\n        var person = new Person();\n        const string expectedValue = "Doe";\n\n        // Act\n        person.Surname = expectedValue;\n        var result = person.Surname;\n\n        // Assert\n        Assert.AreEqual(expectedValue, result);\n    }\n\n    [Test]\n    public void Surname_Set_Get_ReturnsSetValue_IndependentTest()\n    {\n        // Arrange\n        var person = new Person();\n        const string expectedValue = "Doe";\n        person._surname = expectedValue; // use reflection or a test-specific constructor to set the private field\n\n        // Act\n        var result = person.Surname;\n\n        // Assert\n        Assert.AreEqual(expectedValue, result);\n    }\n}