using System;\nusing System.Collections.Generic;\n\npublic class Node\n{\n    public string Name { get; set; }\n    public List<Node> NextNodes { get; set; }\n}\n\npublic class GraphTraversal\n{\n    public static List<List<string>> GetAllPaths(Node headNode, Node footNode)\n    {\n        var visited = new HashSet<Node>();\n        var paths = new List<List<string>>();\n\n        Traverse(headNode, new List<string> { headNode.Name }, visited, paths, footNode);\n\n        return paths;\n    }\n\n    private static void Traverse(Node currentNode, List<string> currentPath, HashSet<Node> visited, List<List<string>> paths, Node footNode)\n    {\n        visited.Add(currentNode);\n\n        if (currentNode == footNode)\n        {\n            paths.Add(currentPath);\n        }\n        else\n        {\n            foreach (var nextNode in currentNode.NextNodes)\n            {\n                if (!visited.Contains(nextNode))\n                {\n                    var newPath = new List<string>(currentPath);\n                    newPath.Add(nextNode.Name);\n                    Traverse(nextNode, newPath, visited, paths, footNode);\n                }\n            }\n        }\n\n        visited.Remove(currentNode);\n    }\n}