using Microsoft.Practices.EnterpriseLibrary.Validation;\n\npublic class BusinessObject\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n}\n\npublic class BusinessObjectValidator : Validator<BusinessObject>\n{\n    public BusinessObjectValidator()\n    {\n        // Define validation rules\n        Rule rule1 = new Rule("Name must not be empty", () => !string.IsNullOrEmpty(Name));\n        Rule rule2 = new Rule("Age must be between 18 and 65", () => Age >= 18 && Age <= 65);\n\n        // Add rules to the validator\n        this.AddRule(rule1);\n        this.AddRule(rule2);\n    }\n}\n\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        BusinessObject obj = new BusinessObject { Name = "John", Age = 30 };\n        BusinessObjectValidator validator = new BusinessObjectValidator();\n\n        ValidationResults results = validator.Validate(obj);\n\n        if (results.IsValid)\n        {\n            Console.WriteLine("Object is valid");\n        }\n        else\n        {\n            Console.WriteLine("Object is not valid:");\n            foreach (ValidationResult result in results)\n            {\n                Console.WriteLine(result.ErrorMessage);\n            }\n        }\n    }\n}