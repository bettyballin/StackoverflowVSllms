using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecureStorage\n{\n    private static byte[] _key;\n    private static byte[] _iv;\n\n    public static void Initialize(string key, string iv)\n    {\n        _key = Encoding.UTF8.GetBytes(key);\n        _iv = Encoding.UTF8.GetBytes(iv);\n    }\n\n    public static string Encrypt(string data)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = _key;\n            aes.IV = _iv;\n\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(data);\n                    }\n                    return Convert.ToBase64String(ms.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string encryptedData)\n    {\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = _key;\n            aes.IV = _iv;\n\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n\n            using (MemoryStream ms = new MemoryStream(Convert.FromBase64String(encryptedData)))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}