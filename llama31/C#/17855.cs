using System;\nusing System.CodeDom.Compiler;\nusing System.IO;\nusing Microsoft.CSharp;\n\n// Define the UserControl code as a string\nstring userControlCode = @"\n    using System.Windows;\n    using System.Windows.Controls;\n\n    namespace MyUserControl\n    {\n        public partial class MyUserControl : UserControl\n        {\n            public MyUserControl()\n            {\n                InitializeComponent();\n            }\n        }\n    }\n";\n\n// Create a new CSharpCodeProvider instance\nCSharpCodeProvider provider = new CSharpCodeProvider();\n\n// Set up the compiler parameters\nCompilerParameters parameters = new CompilerParameters();\nparameters.GenerateInMemory = false; // Save to file\nparameters.TempFiles.KeepFiles = true; // Keep the generated files\nparameters.OutputAssembly = "MyUserControl.dll"; // Output DLL file name\nparameters.ReferencedAssemblies.Add("System.Windows.dll"); // Reference WPF assemblies\nparameters.ReferencedAssemblies.Add("System.Windows.Controls.dll");\n\n// Compile the UserControl code\nCompilerResults results = provider.CompileAssemblyFromSource(parameters, userControlCode);\n\n// Check for compilation errors\nif (results.Errors.Count > 0)\n{\n    foreach (CompilerError error in results.Errors)\n    {\n        Console.WriteLine(error.ErrorText);\n    }\n}\nelse\n{\n    Console.WriteLine("Compilation successful!");\n}