using System;\nusing System.IO;\n\npublic class PdfHyperlinkExtractor\n{\n    public static void ExtractHyperlinks(byte[] pdfData)\n    {\n        // Find the Catalog object\n        int catalogOffset = FindCatalogOffset(pdfData);\n        if (catalogOffset == -1) return;\n\n        // Read the Catalog object\n        byte[] catalogData = ReadObject(pdfData, catalogOffset);\n\n        // Find the Page objects\n        int[] pageOffsets = FindPageOffsets(catalogData);\n        if (pageOffsets == null) return;\n\n        // Iterate through Page objects and find Annot objects\n        foreach (int pageOffset in pageOffsets)\n        {\n            byte[] pageData = ReadObject(pdfData, pageOffset);\n            int[] annotOffsets = FindAnnotOffsets(pageData);\n            if (annotOffsets == null) continue;\n\n            // Check if Annot object is a hyperlink\n            foreach (int annotOffset in annotOffsets)\n            {\n                byte[] annotData = ReadObject(pageData, annotOffset);\n                if (IsHyperlink(annotData))\n                {\n                    // Extract hyperlink URI\n                    string uri = ExtractUri(annotData);\n                    Console.WriteLine(uri);\n                }\n            }\n        }\n    }\n\n    // Helper methods to navigate the PDF structure\n    int FindCatalogOffset(byte[] pdfData) { /* implementation */ }\n    byte[] ReadObject(byte[] pdfData, int offset) { /* implementation */ }\n    int[] FindPageOffsets(byte[] catalogData) { /* implementation */ }\n    int[] FindAnnotOffsets(byte[] pageData) { /* implementation */ }\n    bool IsHyperlink(byte[] annotData) { /* implementation */ }\n    string ExtractUri(byte[] annotData) { /* implementation */ }\n}