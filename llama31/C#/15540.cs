using System;\nusing System.Diagnostics;\n\nclass PGPFileEncryptor\n{\n    public static void EncryptFile(string filePath, string recipient)\n    {\n        // Assuming GPG is installed and available in the PATH\n        string gpgPath = "gpg";\n\n        // Command to encrypt the file\n        string command = $"--encrypt --recipient {recipient} --yes --output {filePath}.gpg {filePath}";\n\n        try\n        {\n            ProcessStartInfo startInfo = new ProcessStartInfo();\n            startInfo.FileName = gpgPath;\n            startInfo.Arguments = command;\n            startInfo.UseShellExecute = false;\n            startInfo.RedirectStandardOutput = true;\n            startInfo.RedirectStandardError = true;\n\n            Process process = Process.Start(startInfo);\n            process.WaitForExit();\n\n            string output = process.StandardOutput.ReadToEnd();\n            string error = process.StandardError.ReadToEnd();\n\n            if (process.ExitCode == 0)\n            {\n                Console.WriteLine($"File encrypted successfully. Path: {filePath}.gpg");\n            }\n            else\n            {\n                Console.WriteLine($"Encryption failed. Exit code: {process.ExitCode}");\n                Console.WriteLine($"Error: {error}");\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n\n    static void Main(string[] args)\n    {\n        // Example usage\n        string filePath = @"C:\path\to\your\file.txt";\n        string recipient = "YourRecipientEmailOrKeyId"; // The ID or email associated with the public key in your keyring\n        EncryptFile(filePath, recipient);\n    }\n}