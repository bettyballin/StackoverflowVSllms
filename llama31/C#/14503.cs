using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class TotpAuthenticator\n{\n    private readonly byte[] _sharedSecretKey;\n\n    public TotpAuthenticator(byte[] sharedSecretKey)\n    {\n        _sharedSecretKey = sharedSecretKey;\n    }\n\n    public bool ValidateTokenCode(string userEnteredCode)\n    {\n        // Get the current time in seconds\n        var currentTime = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\n\n        // Generate the TOTP code using the shared secret key and current time\n        var generatedCode = GenerateTotPCode(_sharedSecretKey, currentTime);\n\n        // Compare the user-entered code with the generated code\n        return userEnteredCode == generatedCode;\n    }\n\n    private string GenerateTotPCode(byte[] sharedSecretKey, int currentTime)\n    {\n        // Use the HMAC-SHA1 algorithm to generate the TOTP code\n        using (var hmac = new HMACSHA1(sharedSecretKey))\n        {\n            var timeBytes = BitConverter.GetBytes(currentTime / 30); // 30-second interval\n            var hash = hmac.ComputeHash(timeBytes);\n\n            // Convert the hash to a 6-digit code\n            var code = BitConverter.ToInt32(hash, 0) % 1000000;\n            return code.ToString("D6");\n        }\n    }\n}