using System;\nusing System.Runtime.InteropServices;\n\nclass WifiInfo\n{\n    [DllImport("wlanapi.dll")]\n    private static extern IntPtr WlanOpenHandle(\n        uint dwClientVersion,\n        IntPtr pReserved,\n        out IntPtr phClientHandle\n    );\n\n    [DllImport("wlanapi.dll")]\n    private static extern void WlanCloseHandle(\n        IntPtr hClientHandle,\n        IntPtr pReserved\n    );\n\n    [DllImport("wlanapi.dll")]\n    private static extern uint WlanQueryInterface(\n        IntPtr hClientHandle,\n        ref Guid pInterfaceGuid,\n        IntPtr pReserved,\n        IntPtr ppData,\n        ref uint pdwDataSize,\n        ref IntPtr ppData2,\n        ref uint pdwDataSize2\n    );\n\n    [DllImport("wlanapi.dll")]\n    private static extern uint WlanGetNetworkBssList(\n        IntPtr hClientHandle,\n        ref Guid pInterfaceGuid,\n        IntPtr ppNetworkList,\n        ref uint pdwNumberOfItems,\n        ref IntPtr ppNetworkList2,\n        ref uint pdwNumberOfItems2\n    );\n\n    public static string GetSSID()\n    {\n        IntPtr clientHandle = IntPtr.Zero;\n        IntPtr networkList = IntPtr.Zero;\n        uint numNetworks = 0;\n\n        try\n        {\n            WlanOpenHandle(2, IntPtr.Zero, out clientHandle);\n            Guid interfaceGuid = new Guid("DCBB6C8B-3E8F-4C5C-9E5E-8C8D46EAE5F5");\n            WlanQueryInterface(clientHandle, ref interfaceGuid, IntPtr.Zero, IntPtr.Zero, ref numNetworks, ref networkList, ref numNetworks);\n\n            if (numNetworks > 0)\n            {\n                WlanGetNetworkBssList(clientHandle, ref interfaceGuid, networkList, ref numNetworks, ref networkList, ref numNetworks);\n                IntPtr pNetworkList = Marshal.ReadIntPtr(networkList);\n\n                while (numNetworks > 0)\n                {\n                    IntPtr pNetwork = Marshal.ReadIntPtr(pNetworkList);\n                    IntPtr pSSID = Marshal.ReadIntPtr(pNetwork, 0x10);\n                    string ssid = Marshal.PtrToStringUni(pSSID);\n\n                    if (ssid != null)\n                    {\n                        return ssid;\n                    }\n\n                    pNetworkList = Marshal.ReadIntPtr(pNetworkList, 4);\n                    numNetworks--;\n                }\n            }\n        }\n        finally\n        {\n            if (networkList != IntPtr.Zero)\n            {\n                Marshal.FreeHGlobal(networkList);\n            }\n\n            if (clientHandle != IntPtr.Zero)\n            {\n                WlanCloseHandle(clientHandle, IntPtr.Zero);\n            }\n        }\n\n        return null;\n    }\n}