using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Category\n{\n    public string Id { get; set; }\n    public string ParentCategoryId { get; set; }\n    public List<Category> Children { get; set; }\n}\n\npublic class CategoryCollection\n{\n    private Dictionary<string, Category> _categories;\n\n    public CategoryCollection(List<Category> categories)\n    {\n        _categories = categories.ToDictionary(c => c.Id);\n        foreach (var category in categories)\n        {\n            if (!string.IsNullOrEmpty(category.ParentCategoryId) && _categories.ContainsKey(category.ParentCategoryId))\n            {\n                var parent = _categories[category.ParentCategoryId];\n                if (parent.Children == null)\n                {\n                    parent.Children = new List<Category>();\n                }\n                parent.Children.Add(category);\n            }\n        }\n    }\n\n    public List<Category> GetRootCategories()\n    {\n        return _categories.Values.Where(c => string.IsNullOrEmpty(c.ParentCategoryId)).ToList();\n    }\n}