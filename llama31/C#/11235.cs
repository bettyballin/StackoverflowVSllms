using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class CustomSessionManager\n{\n    private const string encryptionKey = "your_encryption_key_here";\n\n    public string CreateSession(string data)\n    {\n        // Encrypt data using AES\n        byte[] encryptedData;\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(encryptionKey);\n            aes.GenerateIV();\n            ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(data);\n                    }\n                    encryptedData = ms.ToArray();\n                }\n            }\n        }\n\n        // Return encrypted data as a base64-encoded string\n        return Convert.ToBase64String(encryptedData);\n    }\n\n    public string GetSession(string encryptedData)\n    {\n        // Decrypt data using AES\n        byte[] decryptedData;\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Encoding.UTF8.GetBytes(encryptionKey);\n            byte[] iv = new byte[16];\n            Array.Copy(encryptedData, iv, 16);\n            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, iv);\n            using (MemoryStream ms = new MemoryStream(encryptedData, 16, encryptedData.Length - 16))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        decryptedData = Encoding.UTF8.GetBytes(sr.ReadToEnd());\n                    }\n                }\n            }\n        }\n\n        // Return decrypted data as a string\n        return Encoding.UTF8.GetString(decryptedData);\n    }\n}