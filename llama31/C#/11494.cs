using System;\nusing System.Xml;\nusing System.Xml.XPath;\n\npublic class XPathExporter\n{\n    public void ExportNodes(XPathNavigator[] nodes, string outputFile)\n    {\n        using (XmlWriter writer = XmlWriter.Create(outputFile))\n        {\n            writer.WriteStartDocument();\n\n            foreach (XPathNavigator node in nodes)\n            {\n                XPathNavigator ancestor = node.Clone();\n                ancestor.MoveToRoot();\n\n                while (ancestor.MoveToNext())\n                {\n                    if (ancestor.HasChildren)\n                    {\n                        writer.WriteStartElement(ancestor.LocalName, ancestor.NamespaceURI);\n                        if (ancestor.HasAttributes)\n                        {\n                            for (int i = 0; i < ancestor.AttributeCount; i++)\n                            {\n                                ancestor.MoveToAttribute(i);\n                                writer.WriteAttributeString(ancestor.LocalName, ancestor.NamespaceURI, ancestor.Value);\n                                ancestor.MoveToParent();\n                            }\n                        }\n                    }\n\n                    if (ancestor.IsSamePosition(node))\n                    {\n                        writer.WriteStartElement(node.LocalName, node.NamespaceURI);\n                        if (node.HasAttributes)\n                        {\n                            for (int i = 0; i < node.AttributeCount; i++)\n                            {\n                                node.MoveToAttribute(i);\n                                writer.WriteAttributeString(node.LocalName, node.NamespaceURI, node.Value);\n                                node.MoveToParent();\n                            }\n                        }\n                        writer.WriteEndElement();\n                        break;\n                    }\n                }\n            }\n\n            writer.WriteEndDocument();\n        }\n    }\n}