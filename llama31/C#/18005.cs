using System.Runtime.InteropServices;\n\n[DllImport("kernel32.dll")]\nstatic extern IntPtr CreateFile(string lpFileName, uint dwDesiredAccess, uint dwShareMode, IntPtr lpSecurityAttributes, uint dwCreationDisposition, uint dwFlagsAndAttributes, IntPtr hTemplateFile);\n\n[DllImport("kernel32.dll")]\nstatic extern bool DeviceIoControl(IntPtr hDevice, uint dwIoControlCode, IntPtr lpInBuffer, uint nInBufferSize, IntPtr lpOutBuffer, uint nOutBufferSize, out uint lpBytesReturned, IntPtr lpOverlapped);\n\nIntPtr hDevice = CreateFile(@"\\.\PCI0#", 0, 0, IntPtr.Zero, 3, 0, IntPtr.Zero);\n\nuint ioControlCode = 0x70000; // IOCTL_PCI_READ_CONFIG\nIntPtr inBuffer = IntPtr.Zero;\nuint inBufferSize = 0;\nIntPtr outBuffer = Marshal.AllocHGlobal(4);\nuint outBufferSize = 4;\nuint bytesReturned;\n\nDeviceIoControl(hDevice, ioControlCode, inBuffer, inBufferSize, outBuffer, outBufferSize, out bytesReturned, IntPtr.Zero);\n\nConsole.WriteLine(Marshal.ReadInt32(outBuffer));