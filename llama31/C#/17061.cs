using System;\nusing System.IO;\nusing System.Reflection;\n\npublic interface IReport\n{\n    string GetTitle();\n    string GetDescription();\n    void SetParameter();\n    void Print();\n}\n\npublic abstract class Report : IReport\n{\n    // Common implementation for reports\n}\n\npublic class CustomersReport : Report\n{\n    // Implementation for CustomersReport\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] dllFiles = Directory.GetFiles(@"C:\Reports", "*.dll");\n\n        foreach (string dllFile in dllFiles)\n        {\n            Assembly assembly = Assembly.LoadFrom(dllFile);\n\n            foreach (Type type in assembly.GetTypes())\n            {\n                if (type.IsClass && typeof(IReport).IsAssignableFrom(type))\n                {\n                    IReport report = Activator.CreateInstance(type) as IReport;\n                    if (report != null)\n                    {\n                        Console.WriteLine(report.GetTitle());\n                        report.Print();\n                    }\n                }\n            }\n        }\n    }\n}