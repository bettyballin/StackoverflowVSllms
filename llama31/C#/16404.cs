using System.Security.Cryptography;\nusing System.IO;\nusing System.Text;\n\npublic class SecureSessionHelper\n{\n    private static byte[] encryptionKey = // Generate a strong encryption key\n\n    public static void SetSecureSessionData(string key, object value)\n    {\n        var encryptedValue = Encrypt(value);\n        HttpContext.Current.Session[key] = encryptedValue;\n    }\n\n    public static object GetSecureSessionData(string key)\n    {\n        var encryptedValue = HttpContext.Current.Session[key];\n        return Decrypt(encryptedValue);\n    }\n\n    private static byte[] Encrypt(object value)\n    {\n        using (var ms = new MemoryStream())\n        {\n            using (var cs = new CryptoStream(ms, new AesCryptoServiceProvider().CreateEncryptor(encryptionKey, null), CryptoStreamMode.Write))\n            {\n                using (var sw = new StreamWriter(cs))\n                {\n                    sw.Write(value.ToString());\n                }\n                return ms.ToArray();\n            }\n        }\n    }\n\n    private static object Decrypt(byte[] encryptedValue)\n    {\n        using (var ms = new MemoryStream(encryptedValue))\n        {\n            using (var cs = new CryptoStream(ms, new AesCryptoServiceProvider().CreateDecryptor(encryptionKey, null), CryptoStreamMode.Read))\n            {\n                using (var sr = new StreamReader(cs))\n                {\n                    return sr.ReadToEnd();\n                }\n            }\n        }\n    }\n}