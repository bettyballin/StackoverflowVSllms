// Claims Store\npublic interface IClaimsStore\n{\n    IEnumerable<Claim> GetClaimsForUser(string username);\n}\n\n// Claims Provider\npublic class ClaimsProvider : IClaimsProvider\n{\n    private readonly IClaimsStore _claimsStore;\n\n    public ClaimsProvider(IClaimsStore claimsStore)\n    {\n        _claimsStore = claimsStore;\n    }\n\n    public IEnumerable<Claim> GetClaimsForUser(string username)\n    {\n        return _claimsStore.GetClaimsForUser(username);\n    }\n}\n\n// Authorization Manager\npublic class AuthorizationManager : IAuthorizationManager\n{\n    private readonly IClaimsProvider _claimsProvider;\n\n    public AuthorizationManager(IClaimsProvider claimsProvider)\n    {\n        _claimsProvider = claimsProvider;\n    }\n\n    public bool Authorize(string username, string action)\n    {\n        var claims = _claimsProvider.GetClaimsForUser(username);\n        // Evaluate claims and make authorization decision\n    }\n}\n\n// Attribute-Based Authorization\n[Authorize(Roles = "Admin")]\npublic class MyController : Controller\n{\n    [Authorize(Roles = "Editor")]\n    public ActionResult MyAction()\n    {\n        // Code here\n    }\n}