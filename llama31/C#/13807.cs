public static class AxisCalculator\n{\n    public static (double, double, double) CalculateAxis(double minY, double maxY, int numTicks, double? optionalValue = null)\n    {\n        double range = maxY - minY;\n\n        // Adjust range to ensure max value is between top two tick marks\n        double adjustedMax = maxY + (range / (numTicks - 1)) / 2;\n\n        // Adjust range to ensure min value is between bottom two tick marks\n        double adjustedMin = minY - (range / (numTicks - 1)) / 2;\n\n        if (optionalValue.HasValue)\n        {\n            // Adjust range to include optional value as a tick mark\n            adjustedMin = Math.Min(adjustedMin, optionalValue.Value);\n            adjustedMax = Math.Max(adjustedMax, optionalValue.Value);\n        }\n\n        // Calculate interval size\n        double interval = (adjustedMax - adjustedMin) / (numTicks - 1);\n\n        // Round interval to a "reasonable" size\n        interval = RoundToSignificantFigures(interval, 2);\n\n        return (adjustedMin, adjustedMax, interval);\n    }\n\n    private static double RoundToSignificantFigures(double value, int significantFigures)\n    {\n        double magnitude = Math.Pow(10, significantFigures - (int)Math.Log10(Math.Abs(value)));\n        return Math.Round(value * magnitude) / magnitude;\n    }\n}