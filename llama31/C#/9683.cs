public class MultipleHostHeadersServiceHostFactory : ServiceHostFactory\n{\n    protected override ServiceHost CreateServiceHost(Type serviceType, Uri[] baseAddresses)\n    {\n        var serviceHost = new ServiceHost(serviceType, baseAddresses);\n        serviceHost.Description.Behaviors.Add(new MultipleHostHeadersServiceBehavior());\n        return serviceHost;\n    }\n}\n\npublic class MultipleHostHeadersServiceBehavior : IServiceBehavior\n{\n    public void AddBindingParameters(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase, Collection<ServiceEndpoint> endpoints, BindingParameterCollection bindingParameters)\n    {\n        // Add a filter to ignore the "This collection already contains an address with scheme http" error\n        bindingParameters.Add(new IgnoreDuplicateAddressFilter());\n    }\n\n    public void ApplyDispatchBehavior(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase)\n    {\n        // Do nothing\n    }\n\n    public void Validate(ServiceDescription serviceDescription, ServiceHostBase serviceHostBase)\n    {\n        // Do nothing\n    }\n}\n\npublic class IgnoreDuplicateAddressFilter : IEndpointBehavior\n{\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)\n    {\n        // Do nothing\n    }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n    {\n        // Do nothing\n    }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)\n    {\n        // Do nothing\n    }\n\n    public void Validate(ServiceEndpoint endpoint)\n    {\n        // Ignore the "This collection already contains an address with scheme http" error\n        endpoint.Address = new Uri(endpoint.Address.ToString(), UriKind.RelativeOrAbsolute);\n    }\n}