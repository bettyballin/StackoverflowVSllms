public class OrderRepository\n{\n    private readonly SubSonicRepository _subSonicRepo;\n\n    public OrderRepository(SubSonicRepository subSonicRepo)\n    {\n        _subSonicRepo = subSonicRepo;\n    }\n\n    public Order GetOrder(int orderId)\n    {\n        var order = _subSonicRepo.Single<Order>(o => o.OrderID == orderId);\n        return new OrderProxy(order);\n    }\n}\n\npublic class OrderProxy : Order\n{\n    private readonly Order _innerOrder;\n    private readonly SubSonicRepository _subSonicRepo;\n\n    public OrderProxy(Order innerOrder)\n    {\n        _innerOrder = innerOrder;\n        _subSonicRepo = new SubSonicRepository();\n    }\n\n    public override ICollection<OrderItem> OrderItems\n    {\n        get\n        {\n            if (_innerOrder.OrderItems == null)\n            {\n                var query = _subSonicRepo.GetQuery<OrderItem>()\n                    .Where(o => o.OrderID == _innerOrder.OrderID);\n                _innerOrder.OrderItems = query.Execute().ToList();\n            }\n            return _innerOrder.OrderItems;\n        }\n    }\n}