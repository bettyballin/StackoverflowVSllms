public bool HasCycle(Dictionary<int, List<int>> graph)\n{\n    var visited = new HashSet<int>();\n    var recursionStack = new HashSet<int>();\n\n    foreach (var node in graph.Keys)\n    {\n        if (HasCycle(node, graph, visited, recursionStack))\n            return true;\n    }\n\n    return false;\n}\n\nprivate bool HasCycle(int node, Dictionary<int, List<int>> graph, HashSet<int> visited, HashSet<int> recursionStack)\n{\n    if (visited.Contains(node))\n        return recursionStack.Contains(node);\n\n    visited.Add(node);\n    recursionStack.Add(node);\n\n    foreach (var neighbor in graph[node])\n    {\n        if (HasCycle(neighbor, graph, visited, recursionStack))\n            return true;\n    }\n\n    recursionStack.Remove(node);\n    return false;\n}