using System;\nusing System.Collections.Generic;\n\npublic class MinHeap\n{\n    private double[] heap;\n    private int size;\n    private int capacity;\n\n    public MinHeap(int capacity)\n    {\n        this.capacity = capacity;\n        this.heap = new double[capacity + 1];\n        this.size = 0;\n    }\n\n    public void Insert(double value)\n    {\n        if (size == capacity)\n        {\n            if (value > heap[1])\n            {\n                heap[1] = value;\n                HeapifyDown(1);\n            }\n        }\n        else\n        {\n            heap[++size] = value;\n            HeapifyUp(size);\n        }\n    }\n\n    private void HeapifyUp(int index)\n    {\n        while (index > 1)\n        {\n            int parentIndex = index / 2;\n            if (heap[index] < heap[parentIndex])\n            {\n                double temp = heap[index];\n                heap[index] = heap[parentIndex];\n                heap[parentIndex] = temp;\n                index = parentIndex;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n\n    private void HeapifyDown(int index)\n    {\n        while (true)\n        {\n            int smallest = index;\n            int left = 2 * index;\n            int right = 2 * index + 1;\n\n            if (left <= size && heap[left] < heap[smallest])\n            {\n                smallest = left;\n            }\n\n            if (right <= size && heap[right] < heap[smallest])\n            {\n                smallest = right;\n            }\n\n            if (smallest != index)\n            {\n                double temp = heap[index];\n                heap[index] = heap[smallest];\n                heap[smallest] = temp;\n                index = smallest;\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n\n    public double[] GetHeap()\n    {\n        double[] result = new double[size];\n        Array.Copy(heap, 1, result, 0, size);\n        return result;\n    }\n}\n\npublic class Program\n{\n    public static double[] GreatestValues(double[][] matrix, int numberOfElements)\n    {\n        MinHeap minHeap = new MinHeap(numberOfElements);\n        foreach (double[] row in matrix)\n        {\n            foreach (double value in row)\n            {\n                minHeap.Insert(value);\n            }\n        }\n        return minHeap.GetHeap();\n    }\n\n    public static void Main(string[] args)\n    {\n        double[][] matrix = { new double[] { 1, 2, 3 }, new double[] { 4, 5, 6 }, new double[] { 7, 8, 9 } };\n        double[] result = GreatestValues(matrix, 3);\n        Array.Sort(result); // Sort the array in ascending order\n        Array.Reverse(result); // Reverse the array to get the greatest elements first\n        foreach (double value in result)\n        {\n            Console.WriteLine(value);\n        }\n    }\n}