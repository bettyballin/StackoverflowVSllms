public class Binder\n{\n    private Dictionary<Control, (Func<object> getter, Action<object> setter)> bindings = new Dictionary<Control, (Func<object> getter, Action<object> setter)>();\n\n    public void BindControl<T>(Control control, Expression<Func<T, object>> propertyExpression) where T : class\n    {\n        var propertyInfo = (PropertyInfo)propertyExpression.Body.Member;\n        var getter = propertyExpression.Compile();\n        var setter = CreateSetter(propertyInfo);\n\n        bindings[control] = (getter, setter);\n    }\n\n    private Action<object> CreateSetter(PropertyInfo propertyInfo)\n    {\n        return obj =>\n        {\n            var target = propertyInfo.DeclaringType;\n            var targetInstance = Activator.CreateInstance(target);\n            propertyInfo.SetValue(targetInstance, obj);\n        };\n    }\n}