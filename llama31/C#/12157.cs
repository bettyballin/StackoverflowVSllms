public class ObservableList<T> : ICollection<T>\n{\n    private List<T> _innerList = new List<T>();\n    public event NotifyCollectionChangedEventHandler CollectionChanged;\n\n    public void Add(T item)\n    {\n        _innerList.Add(item);\n        OnCollectionChanged(NotifyCollectionChangedAction.Add, item);\n    }\n\n    public void Remove(T item)\n    {\n        _innerList.Remove(item);\n        OnCollectionChanged(NotifyCollectionChangedAction.Remove, item);\n    }\n\n    // Implement other ICollection<T> members...\n\n    protected virtual void OnCollectionChanged(NotifyCollectionChangedAction action, T item)\n    {\n        CollectionChanged?.Invoke(this, new NotifyCollectionChangedEventArgs(action, item));\n    }\n}