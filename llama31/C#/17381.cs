using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecureKeyStorage\n{\n    public static void StoreKey(byte[] key)\n    {\n        // Get the current user's DPAPI key\n        byte[] entropy = new byte[16];\n        using (var rng = new RNGCryptoServiceProvider())\n        {\n            rng.GetBytes(entropy);\n        }\n\n        // Encrypt the key using DPAPI\n        byte[] encryptedKey = ProtectedData.Protect(key, entropy, DataProtectionScope.CurrentUser);\n\n        // Store the encrypted key and entropy\n        // You can store them in a file, registry, or any other secure location\n        // For demonstration purposes, we'll store them in a file\n        File.WriteAllBytes("encrypted_key.dat", encryptedKey);\n        File.WriteAllBytes("entropy.dat", entropy);\n    }\n\n    public static byte[] RetrieveKey()\n    {\n        // Load the encrypted key and entropy\n        byte[] encryptedKey = File.ReadAllBytes("encrypted_key.dat");\n        byte[] entropy = File.ReadAllBytes("entropy.dat");\n\n        // Decrypt the key using DPAPI\n        byte[] key = ProtectedData.Unprotect(encryptedKey, entropy, DataProtectionScope.CurrentUser);\n\n        return key;\n    }\n}