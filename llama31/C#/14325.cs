using Microsoft.AspNetCore.Cryptography.KeyDerivation;\n\n// Generate a random salt\nbyte[] salt = new byte[128 / 8];\nusing (var rng = RandomNumberGenerator.Create())\n{\n    rng.GetBytes(salt);\n}\n\n// Hash a password\nstring password = "mysecretpassword";\nbyte[] hashedPassword = KeyDerivation.Pbkdf2(\n    password: password,\n    salt: salt,\n    prf: KeyDerivationPrf.HMACSHA256,\n    iterationCount: 10000,\n    numBytesRequested: 256 / 8);\n\n// Verify a password\nbool isValid = KeyDerivation.Pbkdf2(\n    password: "mysecretpassword",\n    salt: salt,\n    prf: KeyDerivationPrf.HMACSHA256,\n    iterationCount: 10000,\n    numBytesRequested: 256 / 8).SequenceEqual(hashedPassword);