public static void ReverseUtf8ByteArray(byte[] utf8Bytes)\n{\n    int left = 0;\n    int right = utf8Bytes.Length - 1;\n\n    while (left < right)\n    {\n        if (utf8Bytes[left] >= 0xE0)\n        {\n            // 4-byte sequence\n            if (right - left < 3)\n            {\n                // Not enough bytes left\n                break;\n            }\n            Swap(utf8Bytes, left, right - 3);\n            Swap(utf8Bytes, left + 1, right - 2);\n            Swap(utf8Bytes, left + 2, right - 1);\n            Swap(utf8Bytes, left + 3, right);\n            left += 4;\n            right -= 4;\n        }\n        else if (utf8Bytes[left] >= 0xC0)\n        {\n            // 3-byte sequence\n            if (right - left < 2)\n            {\n                // Not enough bytes left\n                break;\n            }\n            Swap(utf8Bytes, left, right - 2);\n            Swap(utf8Bytes, left + 1, right - 1);\n            Swap(utf8Bytes, left + 2, right);\n            left += 3;\n            right -= 3;\n        }\n        else if (utf8Bytes[left] >= 0x80)\n        {\n            // Continuation byte, skip it\n            left++;\n        }\n        else\n        {\n            // 1-byte sequence\n            Swap(utf8Bytes, left, right);\n            left++;\n            right--;\n        }\n    }\n}\n\nprivate static void Swap(byte[] array, int i, int j)\n{\n    byte temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n}