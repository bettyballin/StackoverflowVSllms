using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EqualLengthEncryption\n{\n    private static readonly byte[] Key = new byte[16] // 128-bit key\n    {\n        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n        0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16\n    };\n\n    public static string Encrypt(string plaintext)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.Mode = CipherMode.ECB;\n            aes.Padding = PaddingMode.None;\n\n            var bytes = Encoding.UTF8.GetBytes(plaintext);\n            var encryptedBytes = aes.Encrypt(bytes);\n\n            return Encoding.UTF8.GetString(encryptedBytes);\n        }\n    }\n\n    public static string Decrypt(string ciphertext)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.Mode = CipherMode.ECB;\n            aes.Padding = PaddingMode.None;\n\n            var bytes = Encoding.UTF8.GetBytes(ciphertext);\n            var decryptedBytes = aes.Decrypt(bytes);\n\n            return Encoding.UTF8.GetString(decryptedBytes);\n        }\n    }\n}