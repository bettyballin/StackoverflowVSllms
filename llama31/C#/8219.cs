using System;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\npublic class DynamicPropertyDescriptor : PropertyDescriptor\n{\n    private string _propertyName;\n    private Type _propertyType;\n    private object _propertyValue;\n\n    public DynamicPropertyDescriptor(string propertyName, Type propertyType)\n        : base(propertyName, null)\n    {\n        _propertyName = propertyName;\n        _propertyType = propertyType;\n    }\n\n    public override string Name => _propertyName;\n    public override Type PropertyType => _propertyType;\n    public override object GetValue(object component) => _propertyValue;\n    public override void SetValue(object component, object value) => _propertyValue = value;\n    public override bool IsReadOnly => false;\n    public override bool ShouldSerializeValue(object component) => true;\n}\n\npublic class DynamicPropertyGrid : PropertyGrid\n{\n    private List<DynamicPropertyDescriptor> _descriptors = new List<DynamicPropertyDescriptor>();\n\n    public void AddProperty(string propertyName, Type propertyType)\n    {\n        var descriptor = new DynamicPropertyDescriptor(propertyName, propertyType);\n        _descriptors.Add(descriptor);\n    }\n\n    protected override PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)\n    {\n        var properties = new PropertyDescriptorCollection(_descriptors.ToArray());\n        return properties;\n    }\n}