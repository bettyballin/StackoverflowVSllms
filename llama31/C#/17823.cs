public static int KMP(string text, string pattern)\n{\n    int[] prefix = new int[pattern.Length];\n    prefix[0] = -1;\n\n    for (int i = 1; i < pattern.Length; i++)\n    {\n        int j = prefix[i - 1];\n        while (j >= 0 && pattern[i] != pattern[j + 1])\n        {\n            j = prefix[j];\n        }\n        if (pattern[i] == pattern[j + 1])\n        {\n            j++;\n        }\n        prefix[i] = j;\n    }\n\n    int k = 0;\n    for (int i = startPos; i < text.Length; i++)\n    {\n        while (k >= 0 && text[i] != pattern[k])\n        {\n            k = prefix[k - 1] + 1;\n        }\n        if (text[i] == pattern[k])\n        {\n            k++;\n        }\n        if (k == pattern.Length)\n        {\n            return i - pattern.Length + 1;\n        }\n    }\n    return -1;\n}