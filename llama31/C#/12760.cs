public class CachingRepository<TEntity> : IRepository<TEntity>\n{\n    private readonly MyDataContext _context;\n    private readonly ICache _cache;\n\n    public CachingRepository(MyDataContext context, ICache cache)\n    {\n        _context = context;\n        _cache = cache;\n    }\n\n    public IEnumerable<TEntity> GetAll()\n    {\n        var cacheKey = typeof(TEntity).Name + "_GetAll";\n        var results = _cache.Get(cacheKey);\n        if (results == null)\n        {\n            results = _context.GetTable<TEntity>().ToList();\n            _cache.Add(cacheKey, results);\n        }\n        return results;\n    }\n}