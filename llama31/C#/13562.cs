using System.IO;\nusing System.Security.Cryptography;\n\npublic class EncryptionHelper\n{\n    public void EncryptFile(string filePath, string encryptedFilePath, string password)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = GetKey(password, aes.KeySize / 8);\n            aes.IV = GetIV(password, aes.BlockSize / 8);\n\n            using (var fileStream = new FileStream(filePath, FileMode.Open))\n            {\n                using (var encryptedStream = new FileStream(encryptedFilePath, FileMode.Create))\n                {\n                    using (var cryptoStream = new CryptoStream(encryptedStream, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                    {\n                        fileStream.CopyTo(cryptoStream);\n                    }\n                }\n            }\n        }\n    }\n\n    private byte[] GetKey(string password, int keySize)\n    {\n        using (var deriveBytes = new Rfc2898DeriveBytes(password, new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))\n        {\n            return deriveBytes.GetBytes(keySize);\n        }\n    }\n\n    private byte[] GetIV(string password, int blockSize)\n    {\n        using (var deriveBytes = new Rfc2898DeriveBytes(password, new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))\n        {\n            return deriveBytes.GetBytes(blockSize);\n        }\n    }\n}