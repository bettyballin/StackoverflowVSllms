// Web service side\nusing NHibernate;\nusing NHibernate.Cfg;\n\n// Assume we have a database with a "Customers" table\npublic class CustomerService\n{\n    private ISessionFactory _sessionFactory;\n\n    public CustomerService()\n    {\n        _sessionFactory = new Configuration().Configure().BuildSessionFactory();\n    }\n\n    public Customer GetCustomer(int id)\n    {\n        using (var session = _sessionFactory.OpenSession())\n        {\n            return session.Get<Customer>(id);\n        }\n    }\n}\n\n// Business logic side\nusing System.Net.Http;\nusing System.Net.Http.Headers;\n\npublic class CustomerClient\n{\n    private HttpClient _httpClient;\n\n    public CustomerClient(string apiUrl)\n    {\n        _httpClient = new HttpClient { BaseAddress = new Uri(apiUrl) };\n    }\n\n    public Customer GetCustomer(int id)\n    {\n        var response = _httpClient.GetAsync($"customers/{id}").Result;\n        response.EnsureSuccessStatusCode();\n\n        var customer = response.Content.ReadAsAsync<Customer>().Result;\n        return customer;\n    }\n}