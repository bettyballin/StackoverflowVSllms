// Models\npublic class Order\n{\n    public int Id { get; set; }\n    public DateTime Date { get; set; }\n    public decimal Total { get; set; }\n}\n\n// Data Access Layer\npublic class OrderRepository : IOrderRepository\n{\n    private readonly DbContext _context;\n\n    public OrderRepository(DbContext context)\n    {\n        _context = context;\n    }\n\n    public IEnumerable<Order> GetOrders()\n    {\n        return _context.Orders.ToList();\n    }\n}\n\n// Business Logic Layer\npublic class OrderService : IOrderService\n{\n    private readonly IOrderRepository _repository;\n\n    public OrderService(IOrderRepository repository)\n    {\n        _repository = repository;\n    }\n\n    public void PlaceOrder(Order order)\n    {\n        // Business logic to place an order\n        _repository.SaveChanges();\n    }\n}\n\n// Presentation Layer (WPF)\npublic partial class OrderView : UserControl\n{\n    private readonly IOrderService _orderService;\n\n    public OrderView(IOrderService orderService)\n    {\n        InitializeComponent();\n        _orderService = orderService;\n    }\n\n    private void PlaceOrderButton_Click(object sender, RoutedEventArgs e)\n    {\n        var order = new Order { Date = DateTime.Now, Total = 10.99m };\n        _orderService.PlaceOrder(order);\n    }\n}