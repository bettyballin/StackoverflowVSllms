using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\npublic static class Profiler\n{\n    [DllImport("kernel32.dll")]\n    private static extern bool QueryPerformanceCounter(out long value);\n\n    public static void Profile(string description, int iterations, Action func)\n    {\n        // Warm-up (5 iterations should be enough for JIT optimization)\n        for (int i = 0; i < 5; i++)\n        {\n            func();\n        }\n\n        // Prevent GC pauses during measurement\n        GC.TryStartNoGCRegion(GC.TryStartNoGCRegionSize.Small);\n\n        long startTicks;\n        QueryPerformanceCounter(out startTicks);\n\n        for (int i = 0; i < iterations; i++)\n        {\n            func();\n        }\n\n        long endTicks;\n        QueryPerformanceCounter(out endTicks);\n\n        GC.EndNoGCRegion();\n\n        Console.Write(description);\n        Console.WriteLine(" Time Elapsed {0} ms", (endTicks - startTicks) * 1000 / Stopwatch.Frequency);\n    }\n}