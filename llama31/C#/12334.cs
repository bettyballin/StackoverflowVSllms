using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class PdfSigner\n{\n    public void SignPdf(string pdfFilePath, string certificateFilePath, string password)\n    {\n        // Load the digital certificate\n        X509Certificate2 certificate = new X509Certificate2(certificateFilePath, password);\n\n        // Load the PDF file\n        byte[] pdfBytes = File.ReadAllBytes(pdfFilePath);\n\n        // Create a new PDF signature\n        byte[] signature = SignData(pdfBytes, certificate);\n\n        // Save the signed PDF file\n        string signedPdfFilePath = pdfFilePath + ".signed.pdf";\n        File.WriteAllBytes(signedPdfFilePath, signature);\n    }\n\n    private byte[] SignData(byte[] data, X509Certificate2 certificate)\n    {\n        // Create a new SHA256 hash of the data\n        byte[] hash;\n        using (SHA256 sha256 = SHA256.Create())\n        {\n            hash = sha256.ComputeHash(data);\n        }\n\n        // Sign the hash using the digital certificate\n        byte[] signature;\n        using (RSAPKCS1SignatureFormatter formatter = new RSAPKCS1SignatureFormatter(certificate.PrivateKey))\n        {\n            signature = formatter.CreateSignature(hash);\n        }\n\n        // Embed the signature into the PDF file\n        byte[] signedData = new byte[data.Length + signature.Length];\n        Array.Copy(data, 0, signedData, 0, data.Length);\n        Array.Copy(signature, 0, signedData, data.Length, signature.Length);\n\n        return signedData;\n    }\n}