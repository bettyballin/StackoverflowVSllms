using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class ConfigEncryptor\n{\n    private readonly string _keyContainerName;\n\n    public ConfigEncryptor(string keyContainerName)\n    {\n        _keyContainerName = keyContainerName;\n    }\n\n    public string Encrypt(string plainText)\n    {\n        // Load the public key from the KeyContainer\n        var publicKey = LoadPublicKey();\n\n        // Create an AES instance with the public key\n        using (var aes = Aes.Create())\n        {\n            aes.Key = publicKey;\n            aes.GenerateIV();\n\n            // Encrypt the plain text\n            var encryptor = aes.CreateEncryptor();\n            var encryptedBytes = encryptor.TransformFinalBlock(Encoding.UTF8.GetBytes(plainText), 0, plainText.Length);\n\n            // Return the encrypted text as a base64-encoded string\n            return Convert.ToBase64String(encryptedBytes);\n        }\n    }\n\n    public string Decrypt(string encryptedText)\n    {\n        // Load the private key from the KeyContainer\n        var privateKey = LoadPrivateKey();\n\n        // Create an AES instance with the private key\n        using (var aes = Aes.Create())\n        {\n            aes.Key = privateKey;\n\n            // Decrypt the encrypted text\n            var decryptor = aes.CreateDecryptor();\n            var decryptedBytes = decryptor.TransformFinalBlock(Convert.FromBase64String(encryptedText), 0, encryptedText.Length);\n\n            // Return the decrypted text\n            return Encoding.UTF8.GetString(decryptedBytes);\n        }\n    }\n\n    private byte[] LoadPublicKey()\n    {\n        // Load the public key from the KeyContainer\n        // This implementation is omitted for brevity\n        // You can use a library like Microsoft's `System.Security.Cryptography.RSAProtectedConfigurationProvider`\n    }\n\n    private byte[] LoadPrivateKey()\n    {\n        // Load the private key from the KeyContainer\n        // This implementation is omitted for brevity\n        // You can use a library like Microsoft's `System.Security.Cryptography.RSAProtectedConfigurationProvider`\n    }\n}