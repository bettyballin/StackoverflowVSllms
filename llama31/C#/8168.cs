// The following example checks if the given file is a .NET assembly or not.\n// If so, it loads the assembly and prints out the checksum of the IL code of a\n// class of that assembly.\nusing System;\nusing System.Reflection;\nusing System.Reflection.Emit;\n\npublic class Test\n{\n    public static void Main(string[] args)\n    {\n        if (args.Length < 1)\n        {\n            Console.WriteLine("Please provide a file to check.");\n            return;\n        }\n\n        var filePath = args[0];\n\n        if (filePath.EndsWith(".dll", StringComparison.OrdinalIgnoreCase) ||\n            filePath.EndsWith(".exe", StringComparison.OrdinalIgnoreCase))\n        {\n            try\n            {\n                var assembly = Assembly.LoadFrom(filePath);\n\n                foreach (var module in assembly.GetModules())\n                {\n                    foreach (var type in module.GetTypes())\n                    {\n                        if (type.Name == "MyClass")\n                        {\n                            foreach (var method in type.GetMethods())\n                            {\n                                if (method.Name == "MyFunction")\n                                {\n                                    var methodBody = method.GetMethodBody();\n                                    var ilCode = methodBody.GetILAsByteArray();\n\n                                    // Calculate the checksum of the IL code\n                                    var checksum = 0;\n                                    foreach (var b in ilCode)\n                                    {\n                                        checksum = unchecked((checksum * 31 + b) & 0x7FFFFFFF);\n                                    }\n\n                                    Console.WriteLine($"Checksum: {checksum}");\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine($"Failed to load assembly: {e.Message}");\n                return;\n            }\n        }\n        else\n        {\n            Console.WriteLine("File is not a .NET assembly.");\n            return;\n        }\n    }\n}