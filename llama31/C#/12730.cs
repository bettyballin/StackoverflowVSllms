using System;\nusing System.IO;\nusing System.Security.Cryptography.Xml;\nusing System.Xml;\n\npublic class LicenseValidator\n{\n    public bool ValidateLicense(string licenseFile, string publicKey)\n    {\n        try\n        {\n            // Load the license file\n            XmlDocument xmlDoc = new XmlDocument();\n            xmlDoc.Load(licenseFile);\n\n            // Create a new SignedXml object\n            SignedXml signedXml = new SignedXml(xmlDoc);\n\n            // Set the public key\n            signedXml.KeyInfo.AddClause(new RSAKeyValue(publicKey));\n\n            // Check the signature\n            if (!signedXml.CheckSignature())\n                return false;\n\n            // Validate the expiration date\n            string expirationDate = xmlDoc.SelectSingleNode("/License/ExpirationDate").InnerText;\n            if (DateTime.Parse(expirationDate) < DateTime.Now)\n                return false;\n\n            // Validate the product name\n            string productName = xmlDoc.SelectSingleNode("/License/ProductName").InnerText;\n            if (productName != "Your Product Name")\n                return false;\n\n            return true;\n        }\n        catch (Exception ex)\n        {\n            // Handle validation errors\n            Console.WriteLine(ex.Message);\n            return false;\n        }\n    }\n}