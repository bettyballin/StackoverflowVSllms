public string Sign(string SigReason, string SigContact, string SigLocation, bool visible)\n{\n    string bugLog = "";\n\n    try\n    {\n        PdfReader reader = new PdfReader(this.inputPDF);\n\n        // Activate MultiSignatures\n        PdfStamper st = PdfStamper.CreateSignature(reader, new FileStream(this.outputPDF, FileMode.Create, FileAccess.Write), '\0', null, true);\n\n        if (st == null)\n        {\n            bugLog += " ERROR Sign: PdfStamper is null.";\n            return bugLog;\n        }\n\n        st.MoreInfo = this.metadata.getMetaData();\n        st.XmpMetadata = this.metadata.getStreamedMetaData();\n\n        PdfSignatureAppearance sap = st.SignatureAppearance;\n\n        if (sap == null)\n        {\n            bugLog += " ERROR Sign: PdfSignatureAppearance is null.";\n            return bugLog;\n        }\n\n        sap.SetCrypto(this.myCert.Akp, this.myCert.Chain, null, PdfSignatureAppearance.WINCER_SIGNED);\n\n        sap.Reason = SigReason;\n        sap.Contact = SigContact;\n        sap.Location = SigLocation;\n\n        if (visible)\n            sap.SetVisibleSignature(new iTextSharp.text.Rectangle(100, 100, 250, 150), 1, null);\n\n        if (st != null)\n        {\n            st.Close();\n        }\n    }\n    catch (Exception e)\n    {\n        bugLog += " ERROR Sign: " + e.Message;\n    }\n\n    return bugLog;\n}