[ComVisible(true)]\n[ClassInterface(ClassInterfaceType.AutoDispatch)]\npublic class MyComClass\n{\n    [ComVisible(true)]\n    public void MyMethod()\n    {\n        try\n        {\n            // Code that might throw an exception\n        }\n        catch (Exception ex)\n        {\n            // Create an IErrorInfo instance\n            var errorInfo = new ErrorInfo();\n            errorInfo.Description = ex.Message;\n            errorInfo.Source = ex.Source;\n\n            // Set the error info as the current error\n            Marshal.GetIErrorInfo(0, out var errorInfoPtr);\n            Marshal.SetErrorInfo(0, errorInfo);\n\n            // Return an HRESULT that indicates an error occurred\n            return HRESULTS.E_FAIL;\n        }\n    }\n}\n\n[ComVisible(true)]\n[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\npublic interface IMyComInterface\n{\n    void MyMethod();\n}\n\n[ComVisible(true)]\npublic class ErrorInfo : IErrorInfo\n{\n    public string Description { get; set; }\n    public string Source { get; set; }\n\n    public HRESULT GetDescription(out IntPtr description)\n    {\n        description = Marshal.StringToCoTaskMemUni(Description);\n        return HRESULTS.S_OK;\n    }\n\n    public HRESULT GetSource(out IntPtr source)\n    {\n        source = Marshal.StringToCoTaskMemUni(Source);\n        return HRESULTS.S_OK;\n    }\n\n    public HRESULT GetHelpFile(out IntPtr helpFile)\n    {\n        helpFile = IntPtr.Zero;\n        return HRESULTS.S_OK;\n    }\n\n    public HRESULT GetHelpContext(out int helpContext)\n    {\n        helpContext = 0;\n        return HRESULTS.S_OK;\n    }\n}