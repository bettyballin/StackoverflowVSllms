using System;\nusing System.Web.Services.Protocols;\nusing System.IO;\nusing System.Text;\n\npublic class TraceExtension : SoapExtension\n{\n    private Stream _originalStream;\n    private MemoryStream _bufferStream;\n\n    public override Stream ChainStream(Stream stream)\n    {\n        _originalStream = stream;\n        _bufferStream = new MemoryStream();\n        return _bufferStream;\n    }\n\n    public override void ProcessMessage(SoapMessage message)\n    {\n        if (message.Stage == SoapMessageStage.BeforeDeserialize)\n        {\n            try\n            {\n                // Read the incoming SOAP message\n                _bufferStream.Position = 0;\n                StreamReader reader = new StreamReader(_bufferStream);\n                string soapMessage = reader.ReadToEnd();\n                reader.Close();\n\n                // Log the SOAP message\n                LogSoapMessage(soapMessage);\n            }\n            catch (Exception ex)\n            {\n                // Log the exception\n                LogException(ex);\n            }\n        }\n\n        // Copy the SOAP message to the original stream\n        _bufferStream.Position = 0;\n        _originalStream.CopyFrom(_bufferStream);\n    }\n\n    private void LogSoapMessage(string soapMessage)\n    {\n        // Implement logging logic here\n    }\n\n    private void LogException(Exception ex)\n    {\n        // Implement logging logic here\n    }\n}