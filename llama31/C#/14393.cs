using System;\nusing System.Runtime.InteropServices;\nusing Microsoft.Office.Interop.Excel;\n\nnamespace ExcelController\n{\n    class Program\n    {\n        [DllImport("user32")]\n        private static extern IntPtr GetWindowThreadProcessId(IntPtr hWnd, out IntPtr processId);\n\n        static void Main(string[] args)\n        {\n            // Create a new Excel application instance\n            Application excelApp1 = new Application();\n            excelApp1.Visible = true;\n\n            // Create another Excel application instance\n            Application excelApp2 = new Application();\n            excelApp2.Visible = true;\n\n            // Get the process IDs of the Excel instances\n            IntPtr hWnd1 = excelApp1.Hwnd;\n            IntPtr processId1;\n            GetWindowThreadProcessId(hWnd1, out processId1);\n\n            IntPtr hWnd2 = excelApp2.Hwnd;\n            IntPtr processId2;\n            GetWindowThreadProcessId(hWnd2, out processId2);\n\n            // Start a new workbook in the first Excel instance\n            Workbook workbook1 = excelApp1.Workbooks.Add();\n\n            // Start a new workbook in the second Excel instance\n            Workbook workbook2 = excelApp2.Workbooks.Add();\n\n            // Perform some actions on the workbooks\n            worksheet1 = workbook1.Sheets["Sheet1"];\n            worksheet1.Cells[1, 1] = "Hello, World!";\n\n            worksheet2 = workbook2.Sheets["Sheet1"];\n            worksheet2.Cells[1, 1] = "Hello, World!";\n\n            // Stop the Excel instances\n            excelApp1.Quit();\n            excelApp2.Quit();\n\n            // Release COM objects\n            Marshal.ReleaseComObject(workbook1);\n            Marshal.ReleaseComObject(workbook2);\n            Marshal.ReleaseComObject(excelApp1);\n            Marshal.ReleaseComObject(excelApp2);\n        }\n    }\n}