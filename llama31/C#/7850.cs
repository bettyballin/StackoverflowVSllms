public class PurchaseOrderService\n{\n    private readonly IPurchaseOrderRepository _repository;\n\n    public PurchaseOrderService(IPurchaseOrderRepository repository)\n    {\n        _repository = repository;\n    }\n\n    public void UpdateFactory(PurchaseOrder purchaseOrder, string newFactory)\n    {\n        // Perform validation\n        if (!IsFactoryValid(newFactory, purchaseOrder.Product))\n        {\n            throw new InvalidOperationException("Factory is not valid for this product");\n        }\n\n        // Update the purchase order\n        purchaseOrder.Factory = newFactory;\n        _repository.UpdatePurchaseOrder(purchaseOrder);\n    }\n\n    private bool IsFactoryValid(string factory, string product)\n    {\n        // Call the data access layer to check if the factory is valid\n        return _repository.IsFactoryValid(factory, product);\n    }\n}