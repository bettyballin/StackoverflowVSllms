using System;\nusing System.Net;\nusing System.Net.Sockets;\n\npublic class ConditionalSocketAccept\n{\n    public static void Main()\n    {\n        // Create a socket and bind it to a local endpoint\n        Socket listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n        listenSocket.Bind(new IPEndPoint(IPAddress.Any, 8080));\n\n        // Enable ReuseAddress option to allow multiple bindings to the same endpoint\n        listenSocket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);\n\n        // Listen for incoming connections\n        listenSocket.Listen(10);\n\n        while (true)\n        {\n            // Poll the socket to check for pending connections\n            if (listenSocket.Poll(1000, SelectMode.SelectRead))\n            {\n                // Get the pending connection\n                Socket pendingSocket = listenSocket.Accept();\n\n                // Check the source IP address of the pending connection\n                IPEndPoint remoteEndPoint = (IPEndPoint)pendingSocket.RemoteEndPoint;\n                IPAddress sourceAddress = remoteEndPoint.Address;\n\n                // Decide whether to accept or reject the connection\n                if (IsAllowedSource(sourceAddress))\n                {\n                    Console.WriteLine("Accepting connection from " + sourceAddress);\n                    // Accept the connection and process it...\n                }\n                else\n                {\n                    Console.WriteLine("Rejecting connection from " + sourceAddress);\n                    // Close the socket without accepting the connection\n                    pendingSocket.Close();\n                }\n            }\n        }\n    }\n\n    private static bool IsAllowedSource(IPAddress sourceAddress)\n    {\n        // Implement your logic to check if the source IP address is allowed\n        // For example:\n        return sourceAddress.Equals(IPAddress.Parse("192.168.1.100"));\n    }\n}