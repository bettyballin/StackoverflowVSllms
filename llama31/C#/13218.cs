using System;\nusing System.Diagnostics;\n\nclass ParsingPerformance\n{\n    static void Main()\n    {\n        const int iterations = 1000000;\n        const string validInput = "123";\n        const string invalidInput = "abc";\n\n        // Parse (valid input)\n        var sw = Stopwatch.StartNew();\n        for (int i = 0; i < iterations; i++)\n        {\n            int.Parse(validInput);\n        }\n        sw.Stop();\n        Console.WriteLine($"Parse (valid input): {sw.ElapsedMilliseconds} ms");\n\n        // TryParse (valid input)\n        sw.Restart();\n        for (int i = 0; i < iterations; i++)\n        {\n            int.TryParse(validInput, out _);\n        }\n        sw.Stop();\n        Console.WriteLine($"TryParse (valid input): {sw.ElapsedMilliseconds} ms");\n\n        // TryParse (invalid input)\n        sw.Restart();\n        for (int i = 0; i < iterations; i++)\n        {\n            int.TryParse(invalidInput, out _);\n        }\n        sw.Stop();\n        Console.WriteLine($"TryParse (invalid input): {sw.ElapsedMilliseconds} ms");\n\n        // Parse (invalid input) with exception handling\n        sw.Restart();\n        for (int i = 0; i < iterations; i++)\n        {\n            try\n            {\n                int.Parse(invalidInput);\n            }\n            catch\n            {\n                // Ignore exception\n            }\n        }\n        sw.Stop();\n        Console.WriteLine($"Parse (invalid input) with exception handling: {sw.ElapsedMilliseconds} ms");\n    }\n}