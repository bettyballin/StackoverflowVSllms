// Assuming you have a ComboBox named 'cmbType' and a BindingSource named 'customerBindingSource'\n\n// Add a null item to the combobox\ncmbType.Items.Add(new ComboBoxItem { Content = "" }); // or "None", "Select Type", etc.\n\n// Set the SelectedItem property to null when the bound value is null\ncmbType.SelectionChanged += (sender, e) => {\n    if (customerBindingSource.Current != null && ((Customer)customerBindingSource.Current).Type == null)\n        cmbType.SelectedItem = null;\n};\n\n// You can also use a converter to achieve this\npublic class NullableToSelectedItemConverter : IValueConverter\n{\n    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)\n    {\n        if (value == null)\n            return null;\n        // return the selected item based on the value\n    }\n\n    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)\n    {\n        if (value == null)\n            return null;\n        // return the value based on the selected item\n    }\n}