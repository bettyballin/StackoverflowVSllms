using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text.RegularExpressions;\n\nclass WordFrequency\n{\n    public static void Main(string[] args)\n    {\n        // Load a large corpus of English text, e.g., books from Project Gutenberg\n        string corpusPath = @"path\to\corpus.txt";\n\n        // Read the corpus into a string\n        string corpusText = File.ReadAllText(corpusPath);\n\n        // Convert to lowercase and remove punctuation\n        corpusText = corpusText.ToLower();\n        corpusText = Regex.Replace(corpusText, @"[^\w\s]", "");\n\n        // Split the text into individual words\n        string[] words = corpusText.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\n        // Create a dictionary to store word frequencies\n        Dictionary<string, int> wordFrequencies = new Dictionary<string, int>();\n\n        // Count the frequency of each word\n        foreach (string word in words)\n        {\n            if (wordFrequencies.ContainsKey(word))\n            {\n                wordFrequencies[word]++;\n            }\n            else\n            {\n                wordFrequencies[word] = 1;\n            }\n        }\n\n        // Sort the word frequencies in descending order\n        var sortedWordFrequencies = wordFrequencies.OrderByDescending(x => x.Value).Take(10000);\n\n        // Save the top 10,000 word frequencies to a file\n        using (StreamWriter writer = new StreamWriter(@"path\to\output.txt"))\n        {\n            foreach (var wordFrequency in sortedWordFrequencies)\n            {\n                writer.WriteLine($"{wordFrequency.Key}\t{wordFrequency.Value}");\n            }\n        }\n    }\n}