using System;\nusing System.ComponentModel.Composition;\nusing System.ComponentModel.Composition.Hosting;\n\n// Define a contract for the dependency\n[InheritedExport]\npublic interface ILogger\n{\n    void Log(string message);\n}\n\n// Implement the dependency\n[Export(typeof(ILogger))]\npublic class ConsoleLogger : ILogger\n{\n    public void Log(string message)\n    {\n        Console.WriteLine(message);\n    }\n}\n\n// Use MEF to compose the dependency\nclass Program\n{\n    [Import]\n    private ILogger logger;\n\n    static void Main(string[] args)\n    {\n        var program = new Program();\n        program.Run();\n    }\n\n    public void Run()\n    {\n        // Create a composition container\n        var container = new CompositionContainer(new DirectoryCatalog("."));\n\n        // Compose the parts\n        container.ComposeParts(this);\n\n        // Use the dependency\n        logger.Log("Hello, world!");\n    }\n}