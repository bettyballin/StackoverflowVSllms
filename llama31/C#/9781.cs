public class GenericProxy<T>\n    where T: ClientBase\n{\n    T _proxy;\n    public GenericProxy(string configName)\n    {\n        var constructor = typeof(T).GetConstructor(new[] { typeof(string) });\n        if (constructor == null)\n        {\n            throw new InvalidOperationException($"Type {typeof(T).Name} does not have a constructor that takes a string");\n        }\n        _proxy = (T)constructor.Invoke(new[] { configName });\n    }\n}