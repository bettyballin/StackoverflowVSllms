using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SensitiveDataEncryptor\n{\n    private readonly byte[] _key;\n    private readonly byte[] _iv;\n\n    public SensitiveDataEncryptor(byte[] key, byte[] iv)\n    {\n        _key = key;\n        _iv = iv;\n    }\n\n    public string Encrypt(string plainText)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _key;\n            aes.IV = _iv;\n            aes.Mode = CipherMode.GCM;\n            aes.Padding = PaddingMode.PKCS7;\n\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n                }\n\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public string Decrypt(string cipherText)\n    {\n        // Similar implementation as Encrypt, but with CreateDecryptor()\n    }\n}