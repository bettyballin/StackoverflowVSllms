[DllImport("kernel32", SetLastError = true)]\nstatic extern IntPtr LoadLibrary(string lpFileName);\n\n[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]\nstatic extern IntPtr GetProcAddress(IntPtr hModule, string procName);\n\n[DllImport("kernel32")]\nstatic extern bool FreeLibrary(IntPtr hModule);\n\npublic class MyAspNetPage {\n    [DllImport("myunmanageddll")]\n    static extern int MyUnmanagedFunction();\n\n    public void MyAspNetMethod() {\n        // Load the unmanaged DLL\n        IntPtr hModule = LoadLibrary("myunmanageddll.dll");\n        if (hModule == IntPtr.Zero) {\n            throw new Win32Exception(Marshal.GetLastWin32Error());\n        }\n\n        // Get the function pointer\n        IntPtr funcPtr = GetProcAddress(hModule, "MyUnmanagedFunction");\n        if (funcPtr == IntPtr.Zero) {\n            throw new Win32Exception(Marshal.GetLastWin32Error());\n        }\n\n        // Call the unmanaged function\n        int result = MyUnmanagedFunction();\n\n        // Free the library\n        FreeLibrary(hModule);\n    }\n}