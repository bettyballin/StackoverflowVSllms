[TestClass]\npublic class UserTests\n{\n    [TestMethod]\n    public void AddUser_ValidData_UserAdded()\n    {\n        // Arrange\n        var userRepository = new UserRepository();\n        var user = new User { Name = "John Doe", Email = "johndoe@example.com" };\n\n        // Act\n        userRepository.AddUser(user);\n\n        // Assert\n        Assert.IsTrue(userRepository.GetUser(user.Id) != null);\n    }\n\n    [TestMethod]\n    public void AddUser_InvalidData_UserNotAdded()\n    {\n        // Arrange\n        var userRepository = new UserRepository();\n        var user = new User { Name = "", Email = "" };\n\n        // Act\n        userRepository.AddUser(user);\n\n        // Assert\n        Assert.IsFalse(userRepository.GetUser(user.Id) != null);\n    }\n\n    [TestMethod]\n    public void GetUser_ValidId_UserRetrieved()\n    {\n        // Arrange\n        var userRepository = new UserRepository();\n        var user = new User { Name = "John Doe", Email = "johndoe@example.com" };\n        userRepository.AddUser(user);\n\n        // Act\n        var retrievedUser = userRepository.GetUser(user.Id);\n\n        // Assert\n        Assert.AreEqual(user, retrievedUser);\n    }\n}