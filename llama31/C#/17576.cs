using System;\nusing System.Collections.Generic;\nusing System.Data.SqlClient;\nusing System.Web.Security;\n\npublic class CustomAuthorizationManager : IAuthorizationManager\n{\n    private readonly string _connectionString;\n\n    public CustomAuthorizationManager(string connectionString)\n    {\n        _connectionString = connectionString;\n    }\n\n    public bool Authorize(string userName, string permissionName)\n    {\n        using (SqlConnection connection = new SqlConnection(_connectionString))\n        {\n            connection.Open();\n\n            SqlCommand command = new SqlCommand("SELECT COUNT(*) FROM RolePermissions RP INNER JOIN Roles R ON RP.RoleId = R.RoleId INNER JOIN Permissions P ON RP.PermissionId = P.PermissionId WHERE R.RoleName = @RoleName AND P.PermissionName = @PermissionName", connection);\n\n            command.Parameters.AddWithValue("@RoleName", GetRoleNameForUser(userName));\n            command.Parameters.AddWithValue("@PermissionName", permissionName);\n\n            int count = (int)command.ExecuteScalar();\n\n            return count > 0;\n        }\n    }\n\n    private string GetRoleNameForUser(string userName)\n    {\n        // Implement logic to retrieve the role name for the given user\n    }\n}