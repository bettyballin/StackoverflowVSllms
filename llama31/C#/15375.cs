using System;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\n\npublic class UserHelper\n{\n    [DllImport("netapi32.dll", SetLastError = true)]\n    static extern int NetUserGetLocalGroups(\n        [MarshalAs(UnmanagedType.LPWStr)] string serverName,\n        [MarshalAs(UnmanagedType.LPWStr)] string userName,\n        int level,\n        out IntPtr bufPtr,\n        int prefMaxLen,\n        out int entriesRead,\n        out int totalEntries,\n        ref IntPtr resumeHandle);\n\n    public static bool IsUserAdmin(string domain, string username)\n    {\n        IntPtr bufPtr;\n        int entriesRead, totalEntries;\n        IntPtr resumeHandle = IntPtr.Zero;\n\n        try\n        {\n            int result = NetUserGetLocalGroups(null, $"{domain}\\{username}", 0, out bufPtr, -1, out entriesRead, out totalEntries, ref resumeHandle);\n            if (result == 0)\n            {\n                var groups = new LOCALGROUP_USERS_INFO_0[entriesRead];\n                IntPtr ptr = bufPtr;\n                for (int i = 0; i < entriesRead; i++)\n                {\n                    groups[i] = (LOCALGROUP_USERS_INFO_0)Marshal.PtrToStructure(ptr, typeof(LOCALGROUP_USERS_INFO_0));\n                    ptr = (IntPtr)(ptr.ToInt64() + Marshal.SizeOf(typeof(LOCALGROUP_USERS_INFO_0)));\n                }\n\n                foreach (var group in groups)\n                {\n                    if (IsBuiltInAdminGroup(group.lgrui0_name))\n                    {\n                        return true;\n                    }\n                }\n            }\n            else\n            {\n                throw new Exception("Failed to retrieve user groups", Marshal.GetExceptionForHR(result));\n            }\n        }\n        finally\n        {\n            if (bufPtr != IntPtr.Zero)\n            {\n                NetApiBufferFree(bufPtr);\n            }\n        }\n\n        return false;\n    }\n\n    [DllImport("netapi32.dll")]\n    static extern int NetApiBufferFree(IntPtr Buffer);\n\n    private static bool IsBuiltInAdminGroup(string groupName)\n    {\n        return groupName.Equals("Administrators", StringComparison.OrdinalIgnoreCase) ||\n               groupName.Equals("S-1-5-32-544", StringComparison.OrdinalIgnoreCase);\n    }\n\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n    public struct LOCALGROUP_USERS_INFO_0\n    {\n        public string lgrui0_name;\n    }\n}