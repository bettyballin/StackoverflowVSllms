using System.Data.Objects;\nusing System.Xml.Linq;\nusing System.Xml.Serialization;\n\npublic class EntitySerializer\n{\n    public XDocument SerializeObjectContext(ObjectContext context)\n    {\n        var entities = context.DetachAllEntities();\n        var serializer = new XmlSerializer(entities.GetType());\n        var xdoc = new XDocument();\n        using (var writer = xdoc.CreateWriter())\n        {\n            serializer.Serialize(writer, entities);\n        }\n        return xdoc;\n    }\n}\n\npublic static class ObjectContextExtensions\n{\n    public static object DetachAllEntities(this ObjectContext context)\n    {\n        var entities = new List<object>();\n        foreach (var entry in context.ObjectStateManager.GetObjectStateEntries(EntityState.Added | EntityState.Modified | EntityState.Unchanged))\n        {\n            entities.Add(entry.Entity);\n            context.Detach(entry.Entity);\n        }\n        return entities;\n    }\n}