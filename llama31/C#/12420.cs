using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class PasswordEncryptor\n{\n    private static readonly byte[] _key = new byte[32] // 256-bit key\n    {\n        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n        0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,\n        0x17, 0x18, 0x19, 0x20, 0x21, 0x22, 0x23, 0x24,\n        0x25, 0x26, 0x27, 0x28, 0x29, 0x30, 0x31, 0x32\n    };\n\n    private static readonly byte[] _iv = new byte[16] // 128-bit IV\n    {\n        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n        0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16\n    };\n\n    public static string EncryptPassword(string password)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _key;\n            aes.IV = _iv;\n\n            var encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(password);\n                    }\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public static string DecryptPassword(string encryptedPassword)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _key;\n            aes.IV = _iv;\n\n            var decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n            using (var ms = new MemoryStream(Convert.FromBase64String(encryptedPassword)))\n            {\n                using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (var sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}