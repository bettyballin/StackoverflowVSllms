private byte[] buffer = new byte[1024]; // Receive buffer\nprivate int bytesToRead = 0; // Number of bytes to read\nprivate int payloadSize = 0; // Size of the payload\nprivate int payloadOffset = 0; // Offset of the payload in the buffer\n\nprivate void ReceiveCallback(IAsyncResult ar)\n{\n    Socket socket = (Socket)ar.AsyncState;\n    int bytesRead = socket.EndReceive(ar);\n\n    // Process the received data\n    ProcessData(bytesRead);\n\n    // Wait for more data\n    socket.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, ReceiveCallback, socket);\n}\n\nprivate void ProcessData(int bytesRead)\n{\n    // Append the received data to the buffer\n    bytesToRead += bytesRead;\n\n    // Process the buffer\n    while (bytesToRead > 0)\n    {\n        // Get the payload size\n        if (payloadSize == 0)\n        {\n            // Assuming the payload size is an int\n            payloadSize = BitConverter.ToInt32(buffer, 0);\n            payloadOffset = 4; // Offset of the payload in the buffer\n        }\n\n        // Check if the payload is complete\n        if (bytesToRead >= payloadSize + payloadOffset)\n        {\n            // Process the payload\n            byte[] payload = new byte[payloadSize];\n            Array.Copy(buffer, payloadOffset, payload, 0, payloadSize);\n\n            // Do something with the payload\n            ProcessPayload(payload);\n\n            // Remove the processed payload from the buffer\n            bytesToRead -= payloadSize + payloadOffset;\n            payloadSize = 0;\n            payloadOffset = 0;\n\n            // Shift the remaining data to the beginning of the buffer\n            Array.Copy(buffer, payloadSize + payloadOffset, buffer, 0, bytesToRead);\n        }\n        else\n        {\n            // Wait for more data\n            break;\n        }\n    }\n}\n\nprivate void ProcessPayload(byte[] payload)\n{\n    // Do something with the payload\n    Console.WriteLine("Received payload: " + Encoding.ASCII.GetString(payload));\n}