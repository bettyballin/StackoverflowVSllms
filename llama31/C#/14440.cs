using Microsoft.Win32;\nusing System;\nusing System.Diagnostics;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string extension = ".jpg";\n        var associatedApplicationPath = GetAssociatedApplicationPath(extension);\n        if (!string.IsNullOrEmpty(associatedApplicationPath))\n        {\n            Console.WriteLine($"Launching associated application: {associatedApplicationPath}");\n            Process.Start(associatedApplicationPath);\n        }\n        else\n        {\n            Console.WriteLine("No associated application found.");\n        }\n    }\n\n    static string GetAssociatedApplicationPath(string extension)\n    {\n        using (RegistryKey key = Registry.ClassesRoot.OpenSubKey(extension))\n        {\n            if (key != null)\n            {\n                string association = key.GetValue(null) as string;\n                if (association != null)\n                {\n                    using (RegistryKey assocKey = Registry.ClassesRoot.OpenSubKey(association + "\\shell\\open\\command"))\n                    {\n                        if (assocKey != null)\n                        {\n                            string command = assocKey.GetValue(null) as string;\n                            if (command != null)\n                            {\n                                // Example: command could be like "C:\Program Files\MyApp\MyApp.exe" "%1"\n                                // We split by the first quote not preceded by a backslash to find the executable path\n                                int quoteIndex = command.IndexOf('"', StringComparison.Ordinal);\n                                if (quoteIndex > -1)\n                                {\n                                    int endIndex = command.IndexOf('"', quoteIndex + 1, StringComparison.Ordinal);\n                                    if (endIndex > -1)\n                                    {\n                                        return command.Substring(quoteIndex + 1, endIndex - quoteIndex - 1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n}