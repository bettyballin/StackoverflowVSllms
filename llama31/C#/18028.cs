using System;\nusing System.Linq;\n\npublic Interval[] GetRandomIntervals(DateTime start, DateTime end, StateSummary[] sums, int totalEvents)\n{\n    // Calculate the total duration for each state\n    var totalDurations = sums.ToDictionary(s => s.State, s => s.TotalSeconds);\n\n    // Calculate the remaining duration for each state\n    var remainingDurations = totalDurations.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);\n\n    // Initialize the list of intervals\n    var intervals = new Interval[totalEvents];\n\n    // Initialize the current date\n    var currentDate = start;\n\n    // Generate random intervals\n    var random = new Random();\n    for (int i = 0; i < totalEvents; i++)\n    {\n        // Select a random state\n        var state = random.Next(1, 4); // Assuming states are 1, 2, and 3\n\n        // Calculate the maximum duration for the selected state\n        var maxDuration = remainingDurations[state];\n\n        // Generate a random duration within the allowed range\n        var duration = (long)(random.NextDouble() * maxDuration);\n\n        // Update the remaining duration for the selected state\n        remainingDurations[state] -= duration;\n\n        // Create a new interval\n        intervals[i] = new Interval\n        {\n            Date = currentDate,\n            Duration = duration,\n            State = state\n        };\n\n        // Update the current date\n        currentDate = currentDate.AddSeconds(duration);\n    }\n\n    return intervals;\n}