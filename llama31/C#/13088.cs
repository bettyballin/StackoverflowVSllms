public class DomainTrie\n{\n    private readonly TrieNode _root;\n\n    public DomainTrie()\n    {\n        _root = new TrieNode();\n    }\n\n    public void AddEntry(string entry)\n    {\n        var parts = entry.Split('.');\n        var node = _root;\n\n        foreach (var part in parts.Reverse())\n        {\n            if (part == "*")\n            {\n                node.Wildcard = true;\n                break;\n            }\n            else\n            {\n                node = node.Children[part] ?? (node.Children[part] = new TrieNode());\n            }\n        }\n    }\n\n    public bool Match(string domain)\n    {\n        var parts = domain.Split('.');\n        var node = _root;\n\n        foreach (var part in parts.Reverse())\n        {\n            if (node.Wildcard)\n                return true;\n\n            if (!node.Children.TryGetValue(part, out node))\n                return false;\n        }\n\n        return true;\n    }\n\n    private class TrieNode\n    {\n        public Dictionary<string, TrieNode> Children { get; } = new Dictionary<string, TrieNode>();\n        public bool Wildcard { get; set; }\n    }\n}