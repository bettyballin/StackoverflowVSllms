using Microsoft.VisualStudio.TestTools.UnitTesting;\nusing Moq;\nusing System.Security.Principal;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic class MyControllerTests\n{\n    [TestMethod]\n    public void MyAction_AuthenticatedUser_ReturnsView()\n    {\n        // Arrange\n        var mockHttpContext = new Mock<HttpContextBase>();\n        var mockPrincipal = new Mock<IPrincipal>();\n        mockPrincipal.Setup(p => p.Identity.IsAuthenticated).Returns(true);\n        mockHttpContext.SetupGet(c => c.User).Returns(mockPrincipal.Object);\n\n        var controller = new MyController();\n        controller.ControllerContext = new ControllerContext(mockHttpContext.Object, new RouteData(), controller);\n\n        // Act\n        var result = controller.MyAction() as ViewResult;\n\n        // Assert\n        Assert.IsNotNull(result);\n    }\n\n    [TestMethod]\n    public void MyAction_UnauthenticatedUser_ReturnsRedirect()\n    {\n        // Arrange\n        var mockHttpContext = new Mock<HttpContextBase>();\n        var mockPrincipal = new Mock<IPrincipal>();\n        mockPrincipal.Setup(p => p.Identity.IsAuthenticated).Returns(false);\n        mockHttpContext.SetupGet(c => c.User).Returns(mockPrincipal.Object);\n\n        var controller = new MyController();\n        controller.ControllerContext = new ControllerContext(mockHttpContext.Object, new RouteData(), controller);\n\n        // Act\n        var result = controller.MyAction() as RedirectToRouteResult;\n\n        // Assert\n        Assert.IsNotNull(result);\n    }\n}