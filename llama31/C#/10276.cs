using System.Runtime.InteropServices;\n\n[DllImport("kernel32.dll", SetLastError = true)]\nprivate static extern bool GetFileInformationByHandle(IntPtr hFile, out BY_HANDLE_FILE_INFORMATION lpFileInformation);\n\n[StructLayout(LayoutKind.Sequential)]\npublic struct BY_HANDLE_FILE_INFORMATION\n{\n    public uint dwFileAttributes;\n    public FILETIME ftCreationTime;\n    public FILETIME ftLastAccessTime;\n    public FILETIME ftLastWriteTime;\n    public uint dwVolumeSerialNumber;\n    public uint nFileSizeHigh;\n    public uint nFileSizeLow;\n    public uint nNumberOfLinks;\n    public uint nFileIndexHigh;\n    public uint nFileIndexLow;\n}\n\npublic bool ArePathsSameFile(string path1, string path2)\n{\n    IntPtr handle1 = CreateFile(path1, 0, FileShare.ReadWrite, IntPtr.Zero, FileMode.Open, 0, IntPtr.Zero);\n    IntPtr handle2 = CreateFile(path2, 0, FileShare.ReadWrite, IntPtr.Zero, FileMode.Open, 0, IntPtr.Zero);\n\n    BY_HANDLE_FILE_INFORMATION fileInfo1;\n    BY_HANDLE_FILE_INFORMATION fileInfo2;\n\n    GetFileInformationByHandle(handle1, out fileInfo1);\n    GetFileInformationByHandle(handle2, out fileInfo2);\n\n    CloseHandle(handle1);\n    CloseHandle(handle2);\n\n    return fileInfo1.nFileIndexHigh == fileInfo2.nFileIndexHigh && fileInfo1.nFileIndexLow == fileInfo2.nFileIndexLow;\n}