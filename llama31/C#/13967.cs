using System.Diagnostics;\nusing System.Linq;\n\npublic class ProcessHelper\n{\n    public static int GetChildProcessCount(string serviceName)\n    {\n        // Get the service process\n        var serviceProcess = Process.GetProcessesByName(serviceName).FirstOrDefault();\n\n        if (serviceProcess == null)\n        {\n            // Service not found\n            return 0;\n        }\n\n        // Get the child processes\n        var childProcesses = Process.GetProcesses()\n            .Where(p => p.Parent().Id == serviceProcess.Id && p.ProcessName == "process.exe");\n\n        return childProcesses.Count();\n    }\n}\n\npublic static class ProcessExtensions\n{\n    public static Process Parent(this Process process)\n    {\n        var parentPid = GetParentProcessId(process.Id);\n        return Process.GetProcessById(parentPid);\n    }\n\n    private static int GetParentProcessId(int pid)\n    {\n        var query = $"SELECT ParentProcessId FROM Win32_Process WHERE ProcessId = {pid}";\n        var searcher = new System.Management.ManagementObjectSearcher(query);\n        var results = searcher.Get().GetEnumerator();\n        results.MoveNext();\n        var queryObj = results.Current;\n        return Convert.ToInt32(queryObj["ParentProcessId"]);\n    }\n}