using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class TagFrequencyAnalysis\n{\n    public Dictionary<string, int> GetFrequentTags(List<HashSet<string>> questionTags, HashSet<string> originalTags)\n    {\n        var tagFrequencies = new Dictionary<string, int>();\n\n        foreach (var questionTagSet in questionTags)\n        {\n            var intersection = questionTagSet.Intersect(originalTags);\n            var union = questionTagSet.Union(originalTags);\n\n            foreach (var tag in union)\n            {\n                if (!tagFrequencies.ContainsKey(tag))\n                {\n                    tagFrequencies[tag] = 0;\n                }\n\n                tagFrequencies[tag]++;\n            }\n        }\n\n        // Filter out original tags and sort by frequency\n        var suggestedTags = tagFrequencies.Where(x => !originalTags.Contains(x.Key))\n                                         .OrderByDescending(x => x.Value)\n                                         .Take(10) // top 10 suggested tags\n                                         .ToList();\n\n        return suggestedTags.ToDictionary(x => x.Key, x => x.Value);\n    }\n}