using System.Diagnostics;\n\npublic class MemoryUsage\n{\n    public static void GetMemoryUsage()\n    {\n        Process process = Process.GetCurrentProcess();\n\n        // Total Memory in use (whether in RAM or paged or whatever)\n        long totalMemoryInUse = process.WorkingSet64 + process.VirtualMemorySize64;\n        Console.WriteLine($"Total Memory in use: {totalMemoryInUse / 1024 / 1024} MB");\n\n        // Total RAM in use\n        long totalRamInUse = process.WorkingSet64;\n        Console.WriteLine($"Total RAM in use: {totalRamInUse / 1024 / 1024} MB");\n\n        // Total Memory actually used by the program (not counting the extra overhead the GC keeps around)\n        long totalMemoryUsedByProgram = GC.GetTotalMemory(true);\n        Console.WriteLine($"Total Memory used by program: {totalMemoryUsedByProgram / 1024 / 1024} MB");\n\n        // Total Memory usage that is solely used by my program (not counting shared libraries/shared memory)\n        long totalPrivateMemory = process.PrivateMemorySize64;\n        Console.WriteLine($"Total Private Memory: {totalPrivateMemory / 1024 / 1024} MB");\n\n        // Total Shared memory usage\n        long totalSharedMemory = process.WorkingSet64 - process.PrivateMemorySize64;\n        Console.WriteLine($"Total Shared Memory: {totalSharedMemory / 1024 / 1024} MB");\n    }\n}