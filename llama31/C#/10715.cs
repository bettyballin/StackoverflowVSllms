using System.DirectoryServices;\n\nstatic void Main(string[] args)\n{\n    ValidateSPN("K2Server/jonathand-vpc:5252");\n}\n\nstatic void ValidateSPN(string spn)\n{\n    const string queryFormat = "(ServicePrincipalName={0})";\n\n    // Use a more specific filter to reduce the search scope\n    string filter = string.Format(queryFormat, spn);\n\n    // Use the current domain's directory entry\n    DirectoryEntry directoryEntry = Domain.GetCurrentDomain().GetDirectoryEntry();\n\n    // Create a new DirectorySearcher instance\n    using (DirectorySearcher search = new DirectorySearcher(directoryEntry))\n    {\n        search.Filter = filter;\n        search.SearchScope = SearchScope.Subtree;\n\n        // Use the FindOne() method instead of FindAll() to reduce unnecessary searches\n        SearchResult result = search.FindOne();\n\n        if (result != null)\n        {\n            // Check for duplicates by searching for other entries with the same SPN\n            search.Filter = string.Format("(ServicePrincipalName={0})(!(distinguishedName={1}))", spn, result.Properties["distinguishedName"][0].ToString());\n            SearchResultCollection duplicateResults = search.FindAll();\n\n            if (duplicateResults.Count > 0)\n            {\n                throw new Exception("Duplicate SPNs found.");\n            }\n        }\n        else\n        {\n            throw new Exception("No such SPN");\n        }\n    }\n}