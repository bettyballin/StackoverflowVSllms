using System.Web.Services.Protocols;\n\npublic class MyService : SoapHttpClientProtocol\n{\n    public MyService()\n    {\n        Url = "http://myserviceurl.com";\n    }\n\n    [SoapDocumentMethod]\n    public void MyMethod()\n    {\n        // Create the SOAP request\n        var request = new SoapRequest\n        {\n            MethodName = "MyMethod",\n            Parameters = new object[] { },\n            Headers = new SoapHeaderCollection\n            {\n                new SecurityHeader\n                {\n                    Username = "myusername",\n                    Password = "mypassword"\n                }\n            }\n        };\n\n        // Send the SOAP request\n        var response = base.Invoke("MyMethod", new object[] { }, request.Headers);\n    }\n}\n\npublic class SecurityHeader : SoapHeader\n{\n    public string Username { get; set; }\n    public string Password { get; set; }\n\n    public override string Name\n    {\n        get { return "Security"; }\n    }\n\n    public override string Namespace\n    {\n        get { return "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"; }\n    }\n}