HashSet<string> keysToReturn = new HashSet<string>();\nint numberPossibleToGet = (cachedKeys.Length <= requestedNumberToGet) ? \n    cachedKeys.Length : requestedNumberToGet;\nRandom rand = new Random();\n\nDateTime breakoutTime = DateTime.Now.AddMilliseconds(5);\n\nwhile (DateTime.Now < breakoutTime\n    && keysToReturn.Count < numberPossibleToGet\n    && cachedKeys.Length >= numberPossibleToGet)\n{\n    string randomKey = cachedKeys[rand.Next(0, cachedKeys.Length)];\n    if (keysToReturn.Add(randomKey))\n    {\n        // key was added successfully\n    }\n}\n\nif (keysToReturn.Count != numberPossibleToGet)\n    Debugger.Break();