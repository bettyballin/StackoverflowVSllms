using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Windows.Forms;\n\npublic class TcpServer : Form\n{\n    private Socket _listenSocket;\n    private Socket _clientSocket;\n\n    public TcpServer()\n    {\n        _listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n        _listenSocket.Bind(new IPEndPoint(IPAddress.Any, 12345));\n        _listenSocket.Listen(10);\n        _listenSocket.BeginAccept(AcceptCallback, null);\n    }\n\n    private void AcceptCallback(IAsyncResult ar)\n    {\n        _clientSocket = _listenSocket.EndAccept(ar);\n        SendPacketToClient();\n    }\n\n    private void SendPacketToClient()\n    {\n        byte[] packet = Encoding.ASCII.GetBytes("Hello, client!");\n        _clientSocket.Send(packet);\n    }\n\n    protected override void WndProc(ref Message m)\n    {\n        switch (m.Msg)\n        {\n            case Values.MESSAGE_ASYNC:\n                switch (m.LParam.ToInt32())\n                {\n                    case Values.FD_READ:\n                        ReceiveData();\n                        break;\n                    case Values.FD_CLOSE:\n                        CloseClientSocket();\n                        break;\n                }\n                break;\n\n            default:\n                base.WndProc(ref m);\n                break;\n        }\n    }\n\n    private void ReceiveData()\n    {\n        byte[] buffer = new byte[1024];\n        _clientSocket.Receive(buffer);\n        // Process received data\n    }\n\n    private void CloseClientSocket()\n    {\n        _clientSocket.Close();\n    }\n}