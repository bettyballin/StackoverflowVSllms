public class IndexedCollection<T>\n{\n    private Dictionary<T, int> _indexMap = new Dictionary<T, int>();\n    private List<T> _list = new List<T>();\n\n    public void Add(T item)\n    {\n        _list.Add(item);\n        _indexMap[item] = _list.Count - 1;\n    }\n\n    public void Insert(int index, T item)\n    {\n        _list.Insert(index, item);\n        UpdateIndexMap(index);\n    }\n\n    public void Remove(T item)\n    {\n        int index = _indexMap[item];\n        _list.RemoveAt(index);\n        UpdateIndexMap(index);\n    }\n\n    private void UpdateIndexMap(int startIndex)\n    {\n        for (int i = startIndex; i < _list.Count; i++)\n        {\n            _indexMap[_list[i]] = i;\n        }\n    }\n\n    public int IndexOf(T item)\n    {\n        return _indexMap[item];\n    }\n}