bool CanDrop(DragEventArgs e)\n{\n    if (!IsValidDropTarget(e)) return false;\n    if (!HasValidData(e)) return false;\n    if (!IsDropAllowed(e)) return false;\n\n    return true;\n}\n\nbool IsValidDropTarget(DragEventArgs e)\n{\n    Point point = tree.PointToClient(new Point(e.X, e.Y));\n    TreeNode target = tree.GetNodeAt(point);\n    return target != null && CanWrite(target);\n}\n\nbool HasValidData(DragEventArgs e)\n{\n    return e.Data.GetData(typeof(DataInfoObject)) != null ||\n           (tree.SelectedNode.Tag.GetType() != typeof(TreeRow) &&\n            (e.Effect == DragDropEffects.Copy || e.Effect == DragDropEffects.Move));\n}\n\nbool IsDropAllowed(DragEventArgs e)\n{\n    TreeNode target = tree.GetNodeAt(tree.PointToClient(new Point(e.X, e.Y)));\n    TreeNode source = tree.SelectedNode;\n\n    // Use TreeView's built-in functionality to check if the target is a child of the source\n    return !target.IsDescendantOf(source);\n}