public static void SendErrorEmail (HttpContext context, string errorType, string errorDescription, string errorHtml)\n{\n    // Build the email subject.\n    string Subject = "EM: " + errorType + ": " + context.Request.ServerVariables["SCRIPT_NAME"];\n\n    // Build the email body.\n    string Body;\n\n    StringBuilder sb = new StringBuilder("");\n    sb.Append("Server:\r\n");\n    sb.Append(Globals.Server.ToString() + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("URL:\r\n");\n    sb.Append(Globals.GetFullUrl(context) + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Error Type" + ":\r\n");\n    sb.Append(errorType + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Error Description" + ":\r\n");\n    sb.Append(errorDescription + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Referring Page:\r\n");\n    sb.Append(context.Request.ServerVariables["HTTP_REFERER"] + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Date/Time:\r\n");\n    sb.Append(DateTime.Now.ToString() + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Remote IP:\r\n");\n    sb.Append(context.Request.ServerVariables["REMOTE_ADDR"] + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("User Agent:\r\n");\n    sb.Append(context.Request.ServerVariables["HTTP_USER_AGENT"] + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Crawler:\r\n");\n    sb.Append(context.Request.Browser.Crawler.ToString() + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("Admin User:\r\n");\n    sb.Append(context.User.Identity.Name + "\r\n");\n    sb.Append("\r\n");\n    sb.Append("\r\n");\n    Body = sb.ToString();\n\n    // If there's HTML to represent the error (usually from HttpUnhandledException),\n    // then stuff the body text into the HTML (if possible).\n    bool HtmlMessage = false;\n\n    if (errorHtml != "")\n    {\n        Regex r = new Regex("(?<thebodytext><body.*?>)", RegexOptions.IgnoreCase);\n        if (r.IsMatch(errorHtml))\n        {\n            Body = Body.Replace("\r\n", "<br>");\n            Body = r.Replace(errorHtml, "${thebodytext}" + Body, 1);\n            HtmlMessage = true;\n        }\n    }\n\n    // Send an email to the TTI developers.\n    MailMessage objMail;\n    objMail = new MailMessage();\n    objMail.From = new MailAddress("from-address");\n    objMail.To.Add(new MailAddress("to-address"));\n    objMail.CC.Add(new MailAddress("cc-address"));\n    objMail.CC.Add(new MailAddress("another-cc-address"));\n    if (HtmlMessage)\n        objMail.IsBodyHtml = true;\n    else\n        objMail.IsBodyHtml = false;\n    if (errorType == "404")\n        objMail.Priority = MailPriority.Low;\n    else\n        objMail.Priority = MailPriority.High;\n    objMail.Subject = Subject;\n    objMail.Body = Body;\n\n    // Remove the CC header.\n    objMail.Headers.Remove("cc");\n\n    try\n    {\n        SmtpClient objSmtpClient = new SmtpClient();\n        objSmtpClient.Send(objMail);\n    }\n    finally\n    {\n        // Do nothing.\n    }\n}