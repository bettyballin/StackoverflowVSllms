using System;\nusing System.Runtime.InteropServices;\n\npublic class MonitorEnumerator\n{\n    [DllImport("user32")]\n    private static extern bool EnumDisplayMonitors(IntPtr hdc, IntPtr lprcClip, MonitorEnumProc lpfnEnum, IntPtr dwData);\n\n    [DllImport("user32")]\n    private static extern bool GetMonitorInfo(IntPtr hMonitor, [In, Out] MONITORINFO lpmi);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct MONITORINFO\n    {\n        public int cbSize;\n        public RECT rcMonitor;\n        public RECT rcWork;\n        public uint dwFlags;\n    }\n\n    public delegate bool MonitorEnumProc(IntPtr hMonitor, IntPtr hdcMonitor, ref RECT lprcMonitor, IntPtr dwData);\n\n    public static void EnumerateMonitors()\n    {\n        EnumDisplayMonitors(IntPtr.Zero, IntPtr.Zero, MonitorEnumProcCallback, IntPtr.Zero);\n    }\n\n    private static bool MonitorEnumProcCallback(IntPtr hMonitor, IntPtr hdcMonitor, ref RECT lprcMonitor, IntPtr dwData)\n    {\n        MONITORINFO monitorInfo = new MONITORINFO();\n        monitorInfo.cbSize = Marshal.SizeOf(monitorInfo);\n        GetMonitorInfo(hMonitor, monitorInfo);\n\n        // Process monitor information\n        Console.WriteLine($"Monitor Resolution: {monitorInfo.rcMonitor.Width}x{monitorInfo.rcMonitor.Height}");\n\n        return true;\n    }\n}