public class AsyncUsernameValidator : BaseValidator, IScriptControl\n{\n    // Implement BaseValidator's EvaluateIsValid for server-side validation\n    protected override bool EvaluateIsValid()\n    {\n        // Your logic here to check username availability\n        // This is a simplified example; you'll need to implement your actual logic\n        string username = Page.Request.Form["username"];\n        return IsUsernameAvailable(username); // Assume this method checks availability\n    }\n\n    // Implement IScriptControl methods for client-side script management\n    public IEnumerable<ScriptDescriptor> GetScriptDescriptors()\n    {\n        ScriptControlDescriptor descriptor = new ScriptControlDescriptor("YourNamespace.AsyncUsernameValidator", ClientID);\n        // Add properties or methods for client-side script to interact with\n        return new ScriptDescriptor[] { descriptor };\n    }\n\n    public IEnumerable<ScriptReference> GetScriptReferences()\n    {\n        // Reference your client-side scripts here\n        ScriptReference reference = new ScriptReference("YourNamespace.AsyncUsernameValidator.js");\n        return new ScriptReference[] { reference };\n    }\n\n    // Other necessary control implementation...\n}