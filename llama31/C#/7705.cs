using System;\nusing System.IO;\nusing System.IO.Compression;\nusing System.Security.Cryptography;\n\npublic class ZipAesEncryption\n{\n    public void CompressAndEncrypt(string inputFilePath, string outputFilePath, string password)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = GetKey(password);\n            aes.IV = GetIV();\n\n            using (var fs = new FileStream(outputFilePath, FileMode.Create))\n            {\n                using (var cs = new CryptoStream(fs, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (var zip = new ZipArchive(cs, ZipArchiveMode.Create))\n                    {\n                        zip.CreateEntryFromFile(inputFilePath, Path.GetFileName(inputFilePath));\n                    }\n                }\n            }\n        }\n    }\n\n    private byte[] GetKey(string password)\n    {\n        using (var sha256 = SHA256.Create())\n        {\n            return sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\n        }\n    }\n\n    private byte[] GetIV()\n    {\n        using (var rng = RandomNumberGenerator.Create())\n        {\n            var iv = new byte[16];\n            rng.GetBytes(iv);\n            return iv;\n        }\n    }\n}