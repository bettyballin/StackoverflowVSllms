using System;\nusing System.Xml.Serialization;\n\npublic class OriginalClass\n{\n    public string Property1 { get; set; }\n    public string Property2 { get; set; }\n}\n\npublic class SerializationOverrides\n{\n    public static XmlAttributeOverrides GetOverrides()\n    {\n        var overrides = new XmlAttributeOverrides();\n        var attributes = new XmlAttributes();\n\n        // Add serialization instructions for Property1\n        attributes.XmlElements.Add(new XmlElementAttribute("NewNameForProperty1"));\n        overrides.Add(typeof(OriginalClass), "Property1", attributes);\n\n        // Add serialization instructions for Property2\n        attributes = new XmlAttributes();\n        attributes.XmlIgnore = true;\n        overrides.Add(typeof(OriginalClass), "Property2", attributes);\n\n        return overrides;\n    }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        var original = new OriginalClass { Property1 = "Value1", Property2 = "Value2" };\n\n        var serializer = new XmlSerializer(typeof(OriginalClass), SerializationOverrides.GetOverrides());\n        var writer = new StringWriter();\n        serializer.Serialize(writer, original);\n\n        Console.WriteLine(writer.ToString());\n    }\n}