using System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nclass WebsiteChecker\n{\n    private readonly HttpClient _httpClient;\n    private readonly string _websiteUrl;\n    private readonly int _intervalMinutes;\n\n    public WebsiteChecker(string websiteUrl, int intervalMinutes)\n    {\n        _websiteUrl = websiteUrl;\n        _intervalMinutes = intervalMinutes;\n        _httpClient = new HttpClient { Timeout = TimeSpan.FromSeconds(30) };\n    }\n\n    public async Task CheckWebsiteStatusAsync()\n    {\n        while (true)\n        {\n            try\n            {\n                var response = await _httpClient.GetAsync(_websiteUrl);\n                response.EnsureSuccessStatusCode(); // throws if status code is not 200-299\n\n                Console.WriteLine($"Website is up and running. Status code: {response.StatusCode}");\n            }\n            catch (HttpRequestException ex)\n            {\n                Console.WriteLine($"Website is down or has an error: {ex.Message}");\n                // Show a message on the screen or perform some action\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($"An error occurred: {ex.Message}");\n            }\n\n            await Task.Delay(TimeSpan.FromMinutes(_intervalMinutes));\n        }\n    }\n}\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var websiteChecker = new WebsiteChecker("https://example.com", 5);\n        await websiteChecker.CheckWebsiteStatusAsync();\n    }\n}