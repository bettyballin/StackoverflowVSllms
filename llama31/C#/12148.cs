// ValidateUserDetailsTests.cs\n[TestFixture]\npublic class ValidateUserDetailsTests\n{\n    [Test]\n    public void InvalidDetails_ThrowsException()\n    {\n        // Arrange\n        var details = new UserDetails { /* invalid data */ };\n\n        // Act and Assert\n        Assert.Throws<ValidationException>(() => ValidateUserDetails(details));\n    }\n\n    // More tests for different validation scenarios...\n}\n\n// CreateUserTests.cs\n[TestFixture]\npublic class CreateUserTests\n{\n    [Test]\n    public void ValidInput_CreatesUser()\n    {\n        // Arrange\n        var username = "valid_username";\n        var password = "valid_password";\n        var details = new UserDetails { /* valid data */ };\n\n        // Act\n        var user = CreateUser(username, password, details);\n\n        // Assert\n        Assert.IsNotNull(user);\n        // More assertions for the created user...\n    }\n\n    // More tests for different scenarios...\n}