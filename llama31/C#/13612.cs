public class PaddedStringFormatInfo : IFormatProvider\n{\n    public object GetFormat(Type formatType)\n    {\n        if (formatType == typeof(ICustomFormatter))\n            return new PaddedStringCustomFormatter();\n        else\n            return null;\n    }\n}\n\npublic class PaddedStringCustomFormatter : ICustomFormatter\n{\n    public string Format(string format, object arg, IFormatProvider formatProvider)\n    {\n        var parts = format.Split(':');\n        if (parts.Length < 2)\n            return arg.ToString();\n\n        var length = int.Parse(parts[0]);\n        var paddingChar = parts[1][0];\n        var isLeftPadded = length > 0;\n\n        var argStr = arg.ToString();\n        var padding = new string(paddingChar, Math.Abs(length) - argStr.Length);\n\n        return isLeftPadded ? padding + argStr : argStr + padding;\n    }\n}