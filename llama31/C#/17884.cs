var sequences = new List<Sequence>\n{\n    new Sequence { Username = "A", Date = 1, LoginTime = 1, Amount = 50 },\n    new Sequence { Username = "A", Date = 1, LoginTime = 2, Amount = 50 },\n    new Sequence { Username = "A", Date = 2, LoginTime = 1, Amount = 20 },\n    new Sequence { Username = "A", Date = 2, LoginTime = 2, Amount = 60 },\n    new Sequence { Username = "B", Date = 1, LoginTime = 1, Amount = 35 },\n    new Sequence { Username = "B", Date = 1, LoginTime = 2, Amount = 35 },\n    new Sequence { Username = "C", Date = 1, LoginTime = 1, Amount = 80 },\n    new Sequence { Username = "D", Date = 1, LoginTime = 1, Amount = 12 },\n    new Sequence { Username = "D", Date = 1, LoginTime = 2, Amount = 12 },\n    new Sequence { Username = "D", Date = 1, LoginTime = 3, Amount = 15 },\n    new Sequence { Username = "D", Date = 2, LoginTime = 1, Amount = 12 },\n};\n\nvar groupedSequences = sequences.GroupBy(s => new { s.Username, s.Date })\n                                .SelectMany(g => g.OrderByDescending(x => x.LoginTime)\n                                                 .Select((x, i) => new { Sequence = x, Index = i }))\n                                .ToList();\n\nforeach (var sequence in groupedSequences)\n{\n    if (sequence.Index != 0)\n    {\n        sequence.Sequence.Amount = 0;\n    }\n}