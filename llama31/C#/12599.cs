using System.Data.SqlClient;\nusing System.Threading.Tasks;\nusing System.Web.Caching;\n\npublic class CustomMembershipProvider : SqlMembershipProvider\n{\n    private readonly Cache _cache;\n\n    public CustomMembershipProvider()\n    {\n        _cache = new Cache();\n    }\n\n    public override async Task<MembershipUser> GetUserAsync(string username, bool userIsOnline)\n    {\n        // Try to retrieve the user from cache\n        var cachedUser = _cache[username];\n        if (cachedUser != null)\n        {\n            return (MembershipUser)cachedUser;\n        }\n\n        // If not in cache, retrieve from database\n        using (var connection = new SqlConnection(connectionString))\n        {\n            await connection.OpenAsync();\n            var command = new SqlCommand("SELECT * FROM aspnet_Membership WHERE Username = @Username", connection);\n            command.Parameters.AddWithValue("@Username", username);\n            var reader = await command.ExecuteReaderAsync();\n            if (reader.Read())\n            {\n                var user = new MembershipUser(reader);\n                // Cache the user for future requests\n                _cache[username] = user;\n                return user;\n            }\n        }\n        return null;\n    }\n}