public static int LevenshteinDistance(string s1, string s2)\n{\n    int m = s1.Length;\n    int n = s2.Length;\n    int[,] d = new int[m + 1, n + 1];\n\n    for (int i = 0; i <= m; i++)\n        d[i, 0] = i;\n\n    for (int j = 0; j <= n; j++)\n        d[0, j] = j;\n\n    for (int i = 1; i <= m; i++)\n        for (int j = 1; j <= n; j++)\n        {\n            int cost = (s1[i - 1] == s2[j - 1]) ? 0 : 1;\n            d[i, j] = Math.Min(Math.Min(d[i - 1, j] + 1, d[i, j - 1] + 1), d[i - 1, j - 1] + cost);\n        }\n\n    return d[m, n];\n}