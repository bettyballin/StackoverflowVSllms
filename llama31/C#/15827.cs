public static class MyUtility\n{\n    private static readonly object _lock = new object();\n    private static readonly RijndaelManaged _rijndaelManaged;\n    private static readonly ICryptoTransform _encryptorTransform;\n    private static readonly ICryptoTransform _decryptorTransform;\n\n    static MyUtility()\n    {\n        _rijndaelManaged = new RijndaelManaged();\n        _encryptorTransform = _rijndaelManaged.CreateEncryptor(MyUtility.MyKey, MyUtility.MyIV);\n        _decryptorTransform = _rijndaelManaged.CreateDecryptor(MyUtility.MyKey, MyUtility.MyIV);\n    }\n\n    public static byte[] Encrypt(byte[] data)\n    {\n        lock (_lock)\n        {\n            return _encryptorTransform.TransformFinalBlock(data, 0, data.Length);\n        }\n    }\n\n    public static byte[] Decrypt(byte[] data)\n    {\n        lock (_lock)\n        {\n            return _decryptorTransform.TransformFinalBlock(data, 0, data.Length);\n        }\n    }\n}