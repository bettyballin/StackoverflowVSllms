using System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\npublic class CustomHttpClientHandler : HttpClientHandler\n{\n    private readonly string _host;\n    private readonly IPAddress _ipAddress;\n\n    public CustomHttpClientHandler(string host, IPAddress ipAddress)\n    {\n        _host = host;\n        _ipAddress = ipAddress;\n    }\n\n    protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    {\n        // Override DNS resolution for the specified host\n        if (request.RequestUri.Host == _host)\n        {\n            request.RequestUri = new UriBuilder(request.RequestUri) { Host = _ipAddress.ToString() }.Uri;\n        }\n\n        return await base.SendAsync(request, cancellationToken);\n    }\n}\n\npublic class Program\n{\n    public static async Task Main()\n    {\n        string host = "services.mysite.com";\n        IPAddress ipAddress = IPAddress.Parse("192.1.1.100");\n\n        var handler = new CustomHttpClientHandler(host, ipAddress);\n        var client = new HttpClient(handler);\n\n        var response = await client.GetAsync($"https://{host}/data/data.asmx");\n\n        Console.WriteLine(response.StatusCode);\n    }\n}