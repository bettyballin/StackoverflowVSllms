public class TranslationUserType : IUserType\n{\n  public object Assemble(object cached, ISessionImplementor session, object owner)\n  {\n    return cached;\n  }\n\n  public object Disassemble(object value, ISessionImplementor session, object owner)\n  {\n    return value;\n  }\n\n  public object Replace(object original, object target, ISessionImplementor session, object owner)\n  {\n    return original;\n  }\n\n  public Type ReturnedType\n  {\n    get { return typeof(string); }\n  }\n\n  public SqlType[] SqlTypes\n  {\n    get { return new[] { SqlTypeFactory.GetString(50) }; }\n  }\n\n  public object NullSafeGet(IDataReader rs, string[] names, ISessionImplementor session, object owner)\n  {\n    var languageCode = Thread.CurrentThread.CurrentCulture.Name;\n    var translation = (ProductTranslation)session.CreateQuery("from ProductTranslation where LanguageCode = :languageCode")\n      .SetString("languageCode", languageCode)\n      .UniqueResult();\n    return translation != null ? translation.Name : null;\n  }\n\n  public void NullSafeSet(IDbCommand cmd, object value, int index, ISessionImplementor session)\n  {\n    var languageCode = Thread.CurrentThread.CurrentCulture.Name;\n    var translation = new ProductTranslation { LanguageCode = languageCode, Name = (string)value };\n    session.SaveOrUpdate(translation);\n  }\n}