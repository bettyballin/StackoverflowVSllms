using NHibernate;\nusing NHibernate.Cfg;\n\npublic class DataAccessLayer\n{\n    private ISessionFactory sessionFactory;\n\n    public DataAccessLayer()\n    {\n        sessionFactory = new Configuration().Configure().BuildSessionFactory();\n    }\n\n    public void Create(object entity)\n    {\n        using (ISession session = sessionFactory.OpenSession())\n        {\n            using (ITransaction transaction = session.BeginTransaction())\n            {\n                session.Save(entity);\n                transaction.Commit();\n            }\n        }\n    }\n\n    public object Read(Type entityType, int id)\n    {\n        using (ISession session = sessionFactory.OpenSession())\n        {\n            return session.Get(entityType, id);\n        }\n    }\n\n    public void Update(object entity)\n    {\n        using (ISession session = sessionFactory.OpenSession())\n        {\n            using (ITransaction transaction = session.BeginTransaction())\n            {\n                session.Update(entity);\n                transaction.Commit();\n            }\n        }\n    }\n\n    public void Delete(object entity)\n    {\n        using (ISession session = sessionFactory.OpenSession())\n        {\n            using (ITransaction transaction = session.BeginTransaction())\n            {\n                session.Delete(entity);\n                transaction.Commit();\n            }\n        }\n    }\n}