using System;\nusing System.Linq;\n\npublic class People\n{\n    public int Id { get; set; }\n}\n\npublic class Compatibility\n{\n    public People[] People { get; set; }\n    public int Score { get; set; }\n}\n\npublic class CompatibilityCache\n{\n    private Dictionary<string, Compatibility> cache = new Dictionary<string, Compatibility>();\n\n    public Compatibility GetOrAdd(People[] people)\n    {\n        var key = string.Join(",", people.OrderBy(p => p.Id).Select(p => p.Id));\n        if (cache.TryGetValue(key, out Compatibility compatibility))\n        {\n            return compatibility;\n        }\n        // create a new compatibility object and add it to the cache\n        compatibility = new Compatibility { People = people, Score = CalculateScore(people) };\n        cache[key] = compatibility;\n        return compatibility;\n    }\n\n    private int CalculateScore(People[] people)\n    {\n        // your score calculation logic here\n    }\n}