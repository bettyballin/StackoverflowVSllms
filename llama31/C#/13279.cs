using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\n\nclass TcpClient\n{\n    private Socket _socket;\n    private AsyncCallback _receiveCallback;\n\n    public TcpClient(string hostname, int port)\n    {\n        _socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n        _receiveCallback = new AsyncCallback(ReceiveCallback);\n\n        // Connect to the server\n        _socket.Connect(hostname, port);\n\n        // Start receiving data asynchronously\n        _socket.ReceiveAsync(new SocketAsyncEventArgs { UserToken = _receiveCallback });\n    }\n\n    private void ReceiveCallback(IAsyncResult ar)\n    {\n        // Get the socket and the received data\n        Socket socket = (Socket)ar.AsyncState;\n        SocketAsyncEventArgs e = (SocketAsyncEventArgs)ar;\n\n        // Check if the connection is still active\n        if (e.SocketError == SocketError.Success)\n        {\n            // Process the received data\n            byte[] data = e.Buffer;\n            // ...\n\n            // Start receiving data again\n            socket.ReceiveAsync(e);\n        }\n        else\n        {\n            // Handle the error or disconnection\n            Console.WriteLine("Connection closed or error: " + e.SocketError);\n        }\n    }\n}