public static void QuickSort<T>(T[] array) where T : IComparable<T> {\n    QuickSort(array, 0, array.Length - 1);\n}\n\nprivate static void QuickSort<T>(T[] array, int left, int right) {\n    if (left < right) {\n        int pivot = Partition(array, left, right);\n        QuickSort(array, left, pivot - 1);\n        QuickSort(array, pivot + 1, right);\n    }\n}\n\nprivate static int Partition<T>(T[] array, int left, int right) {\n    T pivot = array[right];\n    int i = left;\n    for (int j = left; j < right; j++) {\n        if (array[j].CompareTo(pivot) < 0) {\n            Swap(array, i, j);\n            i++;\n        }\n    }\n    Swap(array, i, right);\n    return i;\n}