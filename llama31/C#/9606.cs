public static IEnumerable<T[]> Permute<T>(T[] list)\n{\n    if (list.Length == 1)\n        return new T[][] { list };\n\n    var result = new List<T[]>();\n\n    for (int i = 0; i < list.Length; i++)\n    {\n        T head = list[i];\n        T[] rest = new T[list.Length - 1];\n        Array.Copy(list, 0, rest, 0, i);\n        Array.Copy(list, i + 1, rest, i, list.Length - i - 1);\n\n        foreach (T[] p in Permute(rest))\n        {\n            T[] perm = new T[list.Length];\n            perm[0] = head;\n            Array.Copy(p, 0, perm, 1, list.Length - 1);\n            yield return perm;\n        }\n    }\n}