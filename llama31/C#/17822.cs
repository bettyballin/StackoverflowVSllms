using System.Security.Cryptography;\nusing System.Text;\n\npublic class PasswordHasher\n{\n    public static string HashPassword(string password)\n    {\n        // Generate a random salt\n        byte[] salt = new byte[32];\n        using (var rng = RandomNumberGenerator.Create())\n        {\n            rng.GetBytes(salt);\n        }\n\n        // Hash the password with the salt\n        using (var sha256 = SHA256.Create())\n        {\n            byte[] bytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(password + Convert.ToBase64String(salt)));\n            return Convert.ToBase64String(bytes) + ":" + Convert.ToBase64String(salt);\n        }\n    }\n\n    public static bool VerifyPassword(string password, string hashedPassword)\n    {\n        // Extract the salt from the hashed password\n        string[] parts = hashedPassword.Split(':');\n        byte[] salt = Convert.FromBase64String(parts[1]);\n\n        // Hash the provided password with the salt\n        using (var sha256 = SHA256.Create())\n        {\n            byte[] bytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(password + Convert.ToBase64String(salt)));\n            return Convert.ToBase64String(bytes) == parts[0];\n        }\n    }\n}