public ref struct StringTokenizer\n{\n    private ReadOnlySpan<char> _span;\n    private char _delimiter;\n\n    public StringTokenizer(ReadOnlySpan<char> span, char delimiter)\n    {\n        _span = span;\n        _delimiter = delimiter;\n    }\n\n    public bool TryGetNextToken(out ReadOnlySpan<char> token)\n    {\n        var index = _span.IndexOf(_delimiter);\n        if (index == -1)\n        {\n            token = _span;\n            _span = ReadOnlySpan<char>.Empty;\n            return true;\n        }\n\n        token = _span.Slice(0, index);\n        _span = _span.Slice(index + 1);\n        return true;\n    }\n}\n\n// Usage:\nvar tokenizer = new StringTokenizer(line.AsSpan(), delimiter);\nwhile (tokenizer.TryGetNextToken(out var token))\n{\n    // Use token as ReadOnlySpan<char>\n}