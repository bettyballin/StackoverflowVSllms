using System;\nusing System.IO;\n\npublic class BinaryFileSearch\n{\n    public static void SearchBinaryFile(string filePath, byte[] pattern)\n    {\n        using (var fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read))\n        {\n            using (var binaryReader = new BinaryReader(fileStream))\n            {\n                var chunk = new byte[4096]; // Read 4KB chunks\n                int bytesRead;\n\n                while ((bytesRead = binaryReader.Read(chunk, 0, chunk.Length)) > 0)\n                {\n                    var chunkSpan = new Span<byte>(chunk, 0, bytesRead);\n                    var patternSpan = new Span<byte>(pattern);\n\n                    var index = chunkSpan.IndexOf(patternSpan);\n\n                    if (index != -1)\n                    {\n                        Console.WriteLine($"Pattern found at offset {fileStream.Position - bytesRead + index}");\n                    }\n                }\n            }\n        }\n    }\n\n    public static void Main()\n    {\n        var pattern = Encoding.UTF8.GetBytes(".debug_info");\n        SearchBinaryFile("path_to_your_executable", pattern);\n    }\n}