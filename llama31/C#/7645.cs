public class Caption\n{\n    public event EventHandler CaptionChanged;\n\n    private string _text;\n    public string Text\n    {\n        get { return _text; }\n        set\n        {\n            _text = value;\n            OnCaptionChanged();\n        }\n    }\n\n    protected virtual void OnCaptionChanged()\n    {\n        CaptionChanged?.Invoke(this, EventArgs.Empty);\n    }\n}\n\npublic class Gauge\n{\n    public Caption Caption { get; set; }\n\n    public Gauge()\n    {\n        Caption = new Caption();\n        Caption.CaptionChanged += Caption_CaptionChanged;\n    }\n\n    private void Caption_CaptionChanged(object sender, EventArgs e)\n    {\n        // Handle the event here\n        Console.WriteLine("Caption changed");\n    }\n}