// Domain layer\npublic class Person {\n    public void AttachToCampaign(Campaign campaign) {\n        // Business logic...\n        _eventRepository.AddEventsForPersonInCampaign(this, campaign);\n    }\n}\n\n// Repository layer\npublic interface IEventRepository {\n    void AddEventsForPersonInCampaign(Person person, Campaign campaign);\n}\n\npublic class EventRepository : IEventRepository {\n    private readonly IUnitOfWork _unitOfWork;\n\n    public EventRepository(IUnitOfWork unitOfWork) {\n        _unitOfWork = unitOfWork;\n    }\n\n    public void AddEventsForPersonInCampaign(Person person, Campaign campaign) {\n        // Data access logic...\n        _unitOfWork.AddEventsForPersonInCampaign(person, campaign);\n    }\n}\n\n// Unit of Work layer\npublic interface IUnitOfWork {\n    void AddEventsForPersonInCampaign(Person person, Campaign campaign);\n}\n\npublic class UnitOfWork : IUnitOfWork {\n    private readonly IDataMapper _dataMapper;\n\n    public UnitOfWork(IDataMapper dataMapper) {\n        _dataMapper = dataMapper;\n    }\n\n    public void AddEventsForPersonInCampaign(Person person, Campaign campaign) {\n        // Data access logic...\n        _dataMapper.InsertEventsForPersonInCampaign(person, campaign);\n    }\n}\n\n// Data Mapper layer\npublic interface IDataMapper {\n    void InsertEventsForPersonInCampaign(Person person, Campaign campaign);\n}\n\npublic class DataMapper : IDataMapper {\n    // Data access logic...\n    public void InsertEventsForPersonInCampaign(Person person, Campaign campaign) {\n        // Insert events into database...\n    }\n}