using System;\nusing System.Collections.Generic;\nusing System.Xml;\n\npublic class XmlNodeEqualityComparer : IEqualityComparer<XmlNode>\n{\n    public bool Equals(XmlNode x, XmlNode y)\n    {\n        if (x == null && y == null) return true;\n        if (x == null || y == null) return false;\n\n        // Compare attributes\n        if (x.Attributes.Count != y.Attributes.Count) return false;\n        for (int i = 0; i < x.Attributes.Count; i++)\n        {\n            if (x.Attributes[i].Name != y.Attributes[i].Name || x.Attributes[i].Value != y.Attributes[i].Value)\n                return false;\n        }\n\n        // Compare child nodes\n        if (x.HasChildNodes && y.HasChildNodes)\n        {\n            if (x.ChildNodes.Count != y.ChildNodes.Count) return false;\n            for (int i = 0; i < x.ChildNodes.Count; i++)\n            {\n                if (!Equals(x.ChildNodes[i], y.ChildNodes[i])) return false;\n            }\n        }\n        else if (x.HasChildNodes || y.HasChildNodes)\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    public int GetHashCode(XmlNode obj)\n    {\n        unchecked\n        {\n            int hash = 17;\n            foreach (XmlAttribute attr in obj.Attributes)\n            {\n                hash = hash * 23 + attr.Name.GetHashCode() + attr.Value.GetHashCode();\n            }\n            foreach (XmlNode child in obj.ChildNodes)\n            {\n                hash = hash * 23 + child.GetHashCode();\n            }\n            return hash;\n        }\n    }\n}