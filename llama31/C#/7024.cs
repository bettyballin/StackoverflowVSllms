// Existing code using old framework\npublic class OldService {\n    public void DoWork() {\n        // ...\n    }\n}\n\n// New framework introduced incrementally\npublic class NewService {\n    public void DoWork() {\n        // New framework features\n    }\n}\n\n// Incremental adoption through composition\npublic class CompositeService {\n    private readonly OldService _oldService;\n    private readonly NewService _newService;\n\n    public CompositeService(OldService oldService, NewService newService) {\n        _oldService = oldService;\n        _newService = newService;\n    }\n\n    public void DoWork() {\n        // Call old service for existing functionality\n        _oldService.DoWork();\n        // Call new service for new features\n        _newService.DoWork();\n    }\n}