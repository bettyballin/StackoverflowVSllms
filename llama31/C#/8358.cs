using System.Security.Cryptography;\nusing System.Runtime.InteropServices;\n\n[DllImport("Advapi32.dll", EntryPoint = "CredReadW")]\nprivate static extern bool CredRead(string targetName, int type, int flags, out IntPtr credentialPtr);\n\n[DllImport("Advapi32.dll", EntryPoint = "CredWriteW")]\nprivate static extern bool CredWrite(string targetName, int type, int flags, IntPtr credentialPtr);\n\npublic void StoreCredentials(string username, string password)\n{\n    var cred = new Credential\n    {\n        TargetName = "MyServiceCredentials",\n        Username = username,\n        Password = password\n    };\n\n    IntPtr credPtr = Marshal.AllocHGlobal(Marshal.SizeOf(cred));\n    Marshal.StructureToPtr(cred, credPtr, true);\n\n    CredWrite(cred.TargetName, 0, 0, credPtr);\n}\n\npublic Credential GetCredentials()\n{\n    IntPtr credPtr;\n    if (CredRead("MyServiceCredentials", 0, 0, out credPtr))\n    {\n        var cred = (Credential)Marshal.PtrToStructure(credPtr, typeof(Credential));\n        return cred;\n    }\n    return null;\n}\n\n[StructLayout(LayoutKind.Sequential)]\nprivate struct Credential\n{\n    public string TargetName;\n    public string Username;\n    public string Password;\n}