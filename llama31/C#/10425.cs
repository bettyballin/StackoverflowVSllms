public class UserRepository : IRepository<User>\n{\n    public bool CanSaveChanges(out List<ValidationResult> validationResults)\n    {\n        validationResults = new List<ValidationResult>();\n\n        // Check for unique username\n        foreach (var user in GetChangedUsers())\n        {\n            if (UserExists(user.Username))\n            {\n                validationResults.Add(new ValidationResult("Username already exists"));\n                return false;\n            }\n        }\n\n        // Other validation checks...\n\n        return true;\n    }\n\n    public void SaveChanges()\n    {\n        if (!CanSaveChanges(out List<ValidationResult> validationResults))\n        {\n            throw new ValidationException(validationResults);\n        }\n\n        // Save changes to database\n    }\n}