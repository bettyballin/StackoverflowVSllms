using System;\nusing System.Threading;\nusing System.Windows;\n\npublic partial class App : Application\n{\n    private const string MutexName = "MyAppMutex";\n\n    protected override void OnStartup(StartupEventArgs e)\n    {\n        base.OnStartup(e);\n\n        bool createdNew;\n        var mutex = new Mutex(true, MutexName, out createdNew);\n\n        if (!createdNew)\n        {\n            // Another instance is already running, bring it to the front\n            Process currentProcess = Process.GetCurrentProcess();\n            foreach (Process process in Process.GetProcessesByName(currentProcess.ProcessName))\n            {\n                if (process.Id != currentProcess.Id)\n                {\n                    NativeMethods.SetForegroundWindow(process.MainWindowHandle);\n                    break;\n                }\n            }\n\n            // Shut down this instance\n            Shutdown();\n            return;\n        }\n\n        // Start the main window\n        MainWindow = new MainWindow();\n        MainWindow.Show();\n    }\n}\n\ninternal static class NativeMethods\n{\n    [DllImport("user32.dll")]\n    public static extern bool SetForegroundWindow(IntPtr hWnd);\n}