// Approach 1: Separate DTOs for each backend\npublic class SqlServerUserDto\n{\n    [SqlServerAttribute]\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic class XmlUserDto\n{\n    [XmlAttribute]\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\n// Approach 2: Single DTO with interfaces and adapters\npublic class UserDto\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic interface ISqlServerDto\n{\n    [SqlServerAttribute]\n    int Id { get; set; }\n}\n\npublic class SqlServerUserDtoAdapter : ISqlServerDto\n{\n    private UserDto _dto;\n\n    public SqlServerUserDtoAdapter(UserDto dto)\n    {\n        _dto = dto;\n    }\n\n    public int Id\n    {\n        get { return _dto.Id; }\n        set { _dto.Id = value; }\n    }\n}