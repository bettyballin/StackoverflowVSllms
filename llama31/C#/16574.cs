using System.Security.Cryptography;\n\npublic class AesEncryption\n{\n    private static readonly byte[] Key = new byte[32] { /* your key here */ };\n    private static readonly byte[] IV = new byte[16] { /* your IV here */ };\n\n    public static string Encrypt(string plainText)\n    {\n        using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            aes.Padding = PaddingMode.PKCS7;\n\n            byte[] encryptedBytes;\n            using (MemoryStream ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n                    encryptedBytes = ms.ToArray();\n                }\n            }\n            return Convert.ToBase64String(encryptedBytes);\n        }\n    }\n\n    public static string Decrypt(string cipherText)\n    {\n        using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            aes.Padding = PaddingMode.PKCS7;\n\n            byte[] decryptedBytes;\n            using (MemoryStream ms = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}