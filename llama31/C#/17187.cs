public interface ISubtractable<T>\n{\n    T Subtract(T other);\n}\n\npublic class MyGenericClass<T> where T : ISubtractable<T>\n{\n    public T Subtract(T a, T b)\n    {\n        return a.Subtract(b);\n    }\n}\n\npublic class MyType : ISubtractable<MyType>\n{\n    public int Value { get; set; }\n\n    public MyType Subtract(MyType other)\n    {\n        return new MyType { Value = this.Value - other.Value };\n    }\n\n    public static MyType operator -(MyType a, MyType b)\n    {\n        return a.Subtract(b);\n    }\n}