// Shared contract (interface)\npublic interface ICommandService\n{\n    string ExecuteCommand(string command);\n}\n\n// Slave application (WCF service)\npublic class CommandService : ICommandService\n{\n    public string ExecuteCommand(string command)\n    {\n        // Execute command and return response\n        return "Command executed successfully";\n    }\n}\n\n// Master application (WCF client)\npublic class MasterApp\n{\n    private ICommandService _commandService;\n\n    public MasterApp()\n    {\n        _commandService = new ChannelFactory<ICommandService>("CommandServiceEndpoint").CreateChannel();\n    }\n\n    public void SendCommand(string command)\n    {\n        string response = _commandService.ExecuteCommand(command);\n        Console.WriteLine(response);\n    }\n}