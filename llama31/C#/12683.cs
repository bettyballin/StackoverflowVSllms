// create a command builder to generate the insert command\nSqlCommandBuilder cb = new SqlCommandBuilder(da);\n\n// get the insert command\nSqlCommand insertCmd = cb.GetInsertCommand();\n\n// add an output parameter for the @@IDENTITY value\nSqlParameter identityParam = new SqlParameter("@Identity", SqlDbType.Int, 4, ParameterDirection.Output, false, 0, 0, "Id", DataRowVersion.Default, null);\ninsertCmd.Parameters.Add(identityParam);\n\n// modify the insert command to include the output parameter\ninsertCmd.CommandText += "; SELECT @Identity = @@IDENTITY";\n\n// attach an event handler to the RowUpdated event\nda.RowUpdated += (sender, e) => {\n    if (e.StatementType == StatementType.Insert) {\n        // retrieve the @@IDENTITY value from the output parameter\n        int newId = (int)e.Command.Parameters["@Identity"].Value;\n        // do something with the new id...\n    }\n};