public class FormattedTextHitTester\n{\n    private readonly FormattedText _formattedText;\n\n    public FormattedTextHitTester(FormattedText formattedText)\n    {\n        _formattedText = formattedText;\n    }\n\n    public int GetCharIndexFromPoint(Point point)\n    {\n        var textSource = new TextSource(_formattedText.Text);\n        var typeface = _formattedText.Typeface;\n        var highlightLayer = null as TextHighlightLayer;\n\n        var caretIndex = TextPointerUtils.GetCaretIndex(\n            textSource, \n            _formattedText.Text.Length, \n            typeface, \n            point);\n\n        return caretIndex;\n    }\n}\n\npublic static class TextPointerUtils\n{\n    public static int GetCaretIndex(\n        ITextSource textSource, \n        int textLength, \n        Typeface typeface, \n        Point point)\n    {\n        var caretIndex = 0;\n\n        var glypRun = new GlyphRun(\n            textSource, \n            textLength, \n            typeface, \n            point, \n            out var width);\n\n        if (width > point.X)\n        {\n            // hit test with glyphRun\n            caretIndex = glypRun.GetCaretIndex(point);\n        }\n        else\n        {\n            // walk through each line and its glyphs to find the one the user clicked\n            for (int i = 0; i < textLength; i++)\n            {\n                var line = textSource.GetLine(i);\n                if (line.Contains(point))\n                {\n                    var glyph = line.GetGlyph(point);\n                    caretIndex = glyph.GetCaretIndex(point);\n                    break;\n                }\n            }\n        }\n\n        return caretIndex;\n    }\n}