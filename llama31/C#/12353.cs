using System;\nusing System.Runtime.InteropServices;\n\npublic class TaskSchedulerPermissions\n{\n    [DllImport("advapi32.dll", SetLastError = true)]\n    static extern bool LsaAddAccountRights(IntPtr PolicyHandle, IntPtr AccountSid, LSA_UNICODE_STRING[] UserRights, int CountOfRights);\n\n    public static void GrantPermissions()\n    {\n        // Get the ASPNET account\n        NTAccount aspnetAccount = new NTAccount("ASPNET");\n\n        // Get the SeBatchLogonRight and SeServiceLogonRight privileges\n        string[] privileges = new string[] { "SeBatchLogonRight", "SeServiceLogonRight" };\n\n        // Grant the ASPNET account the necessary permissions\n        foreach (string privilege in privileges)\n        {\n            LSA_UNICODE_STRING[] userRights = new LSA_UNICODE_STRING[] { new LSA_UNICODE_STRING(privilege) };\n            IntPtr policyHandle = IntPtr.Zero;\n            IntPtr accountSid = IntPtr.Zero;\n\n            try\n            {\n                // Open the local security policy\n                policyHandle = LsaOpenPolicy(null, 0, 3);\n\n                // Get the ASPNET account SID\n                accountSid = GetSidForAccount(aspnetAccount);\n\n                // Grant the ASPNET account the necessary permissions\n                LsaAddAccountRights(policyHandle, accountSid, userRights, userRights.Length);\n            }\n            finally\n            {\n                // Close the local security policy\n                LsaClose(policyHandle);\n\n                // Free the ASPNET account SID\n                FreeSid(accountSid);\n            }\n        }\n    }\n}