using System;\nusing System.Collections.Generic;\nusing System.Data.Entity;\nusing System.Linq;\n\npublic class Task\n{\n    public int Id { get; set; }\n    public string Title { get; set; }\n    public string Description { get; set; }\n    public DateTime DueDate { get; set; }\n    public TaskStatus Status { get; set; }\n}\n\npublic enum TaskStatus\n{\n    New,\n    InProgress,\n    Completed\n}\n\npublic class TaskRepository : IRepository<Task>\n{\n    private readonly DbContext _context;\n\n    public TaskRepository(DbContext context)\n    {\n        _context = context;\n    }\n\n    public IEnumerable<Task> GetAll()\n    {\n        return _context.Tasks.ToList();\n    }\n\n    public Task GetById(int id)\n    {\n        return _context.Tasks.Find(id);\n    }\n\n    public void Add(Task task)\n    {\n        _context.Tasks.Add(task);\n        _context.SaveChanges();\n    }\n\n    public void Update(Task task)\n    {\n        _context.Tasks.Attach(task);\n        _context.Entry(task).State = EntityState.Modified;\n        _context.SaveChanges();\n    }\n\n    public void Delete(int id)\n    {\n        var task = GetById(id);\n        if (task != null)\n        {\n            _context.Tasks.Remove(task);\n            _context.SaveChanges();\n        }\n    }\n}