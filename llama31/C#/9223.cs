using System;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class FileTreeNode\n{\n    public string FilePath { get; set; }\n    public string FileName { get; set; }\n    public List<FileTreeNode> Children { get; set; }\n\n    public FileTreeNode(string filePath)\n    {\n        FilePath = filePath;\n        FileName = System.IO.Path.GetFileName(filePath);\n        Children = new List<FileTreeNode>();\n    }\n}\n\npublic class TreeViewBuilder\n{\n    private Dictionary<string, FileTreeNode> nodes = new Dictionary<string, FileTreeNode>();\n\n    public TreeView BuildTreeView(List<string> filePaths)\n    {\n        TreeView treeView = new TreeView();\n\n        foreach (string filePath in filePaths)\n        {\n            FileTreeNode node = GetNode(filePath);\n            treeView.Nodes.Add(node);\n        }\n\n        return treeView;\n    }\n\n    private FileTreeNode GetNode(string filePath)\n    {\n        if (nodes.ContainsKey(filePath))\n        {\n            return nodes[filePath];\n        }\n\n        FileTreeNode node = new FileTreeNode(filePath);\n        nodes.Add(filePath, node);\n\n        string parentPath = System.IO.Path.GetDirectoryName(filePath);\n        if (!string.IsNullOrEmpty(parentPath))\n        {\n            FileTreeNode parentNode = GetNode(parentPath);\n            parentNode.Children.Add(node);\n        }\n\n        return node;\n    }\n}