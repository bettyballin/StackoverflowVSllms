[Test]\npublic void TestThreadSafety()\n{\n    var sharedResource = new SharedResource();\n    var threads = new List<Thread>();\n\n    for (int i = 0; i < 10; i++)\n    {\n        var thread = new Thread(() =>\n        {\n            sharedResource.AccessSharedResource();\n        });\n        threads.Add(thread);\n        thread.Start();\n    }\n\n    foreach (var thread in threads)\n    {\n        thread.Join();\n    }\n\n    Assert.IsFalse(sharedResource.HasThreadingError());\n}\n\npublic class SharedResource\n{\n    private readonly object _lock = new object();\n    private bool _threadingError;\n\n    public void AccessSharedResource()\n    {\n        lock (_lock)\n        {\n            // Simulate some work\n            Thread.Sleep(10);\n        }\n    }\n\n    public bool HasThreadingError()\n    {\n        return _threadingError;\n    }\n}