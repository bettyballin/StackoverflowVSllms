using System.Security.Cryptography;\nusing System.Text;\n\npublic class QueryStringProtector\n{\n    private readonly byte[] _secretKey;\n\n    public QueryStringProtector(byte[] secretKey)\n    {\n        _secretKey = secretKey;\n    }\n\n    public string ProtectQueryString(string queryString)\n    {\n        var hash = GetHmacSha256Hash(queryString, _secretKey);\n        return $"{queryString}&hash={hash}";\n    }\n\n    public bool ValidateQueryString(string queryString)\n    {\n        var parts = queryString.Split('&');\n        var hash = parts.Last().Split('=')[1];\n        var expectedHash = GetHmacSha256Hash(string.Join("&", parts.Take(parts.Length - 1)), _secretKey);\n        return hash == expectedHash;\n    }\n\n    private string GetHmacSha256Hash(string input, byte[] key)\n    {\n        using var hmac = new HMACSHA256(key);\n        var hashBytes = hmac.ComputeHash(Encoding.UTF8.GetBytes(input));\n        return BitConverter.ToString(hashBytes).Replace("-", "").ToLower();\n    }\n}