using Microsoft.SqlServer.TransactSql.ScriptDom;\nusing System;\nusing System.Collections.Generic;\n\npublic class SqlParser\n{\n    public Dictionary<string, (string tableName, string columnName)> ParseQuery(string sqlQuery)\n    {\n        var parser = new TSql150Parser(false);\n        var tree = parser.Parse(sqlQuery, out var errors);\n\n        if (errors.Count > 0)\n        {\n            throw new ArgumentException("Invalid SQL query", nameof(sqlQuery));\n        }\n\n        var result = new Dictionary<string, (string tableName, string columnName)>();\n\n        var selectStatement = tree as SelectStatement;\n        if (selectStatement != null)\n        {\n            foreach (var column in selectStatement.QueryExpression.SelectElements)\n            {\n                var columnExpression = column as ColumnReferenceExpression;\n                if (columnExpression != null)\n                {\n                    var tableName = columnExpression.MultiPartIdentifier.Identifiers[0].Value;\n                    var columnName = columnExpression.MultiPartIdentifier.Identifiers[1].Value;\n\n                    result[column.Alias?.Value ?? columnName] = (tableName, columnName);\n                }\n            }\n        }\n\n        return result;\n    }\n}