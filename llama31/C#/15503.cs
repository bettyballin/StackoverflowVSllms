using DotNetNuke.Services.Tokens;\n\n// ...\n\npublic class MyModule : ModuleBase\n{\n    // ...\n\n    protected override void OnInit(EventArgs e)\n    {\n        base.OnInit(e);\n\n        // Get the template from the module settings\n        string template = Settings["MyTemplate"].ToString();\n\n        // Replace tokens in the template\n        template = TokenReplace.ReplaceTokens(template, Context, ModuleId);\n\n        // Create a new Template class for the Repeater\n        Template repeaterTemplate = new Template();\n        repeaterTemplate.ItemTemplate = new CompiledTemplateBuilder(template, RepeaterItemType.Item);\n        repeaterTemplate.HeaderTemplate = new CompiledTemplateBuilder(template, RepeaterItemType.Header);\n        repeaterTemplate.FooterTemplate = new CompiledTemplateBuilder(template, RepeaterItemType.Footer);\n\n        // Assign the template to the Repeater\n        myRepeater.TemplateSource = repeaterTemplate;\n    }\n\n    // ...\n}\n\npublic class CompiledTemplateBuilder : ITemplate\n{\n    private string _template;\n    private RepeaterItemType _type;\n\n    public CompiledTemplateBuilder(string template, RepeaterItemType type)\n    {\n        _template = template;\n        _type = type;\n    }\n\n    public void InstantiateIn(Control container)\n    {\n        LiteralControl lc = new LiteralControl();\n        lc.Text = _template;\n        container.Controls.Add(lc);\n    }\n}