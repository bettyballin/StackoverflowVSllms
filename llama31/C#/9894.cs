private static ManualResetEvent _mainThreadBusy = new ManualResetEvent(false);\nprivate static Thread _monitorThread;\n\nstatic void Main(string[] args)\n{\n    // Start the monitoring thread\n    _monitorThread = new Thread(MonitorConsoleClose);\n    _monitorThread.Start();\n\n    // Do some work...\n    _mainThreadBusy.Set(); // Signal the monitoring thread that we're busy\n    // Do some more work...\n    _mainThreadBusy.Reset(); // Signal the monitoring thread that we're not busy anymore\n}\n\nprivate static void MonitorConsoleClose()\n{\n    SetConsoleCtrlHandler(new HandlerRoutine(ConsoleCtrlCheck), true);\n\n    while (true)\n    {\n        if (_mainThreadBusy.WaitOne(0)) // Check if the main thread is busy\n        {\n            // Block the console close event\n            while (true)\n            {\n                Thread.Sleep(1000);\n            }\n        }\n        else\n        {\n            Thread.Sleep(100); // Sleep a bit and then check again\n        }\n    }\n}\n\nprivate static bool ConsoleCtrlCheck(CtrlTypes ctrlType)\n{\n    if (ctrlType == CtrlTypes.CTRL_CLOSE_EVENT)\n    {\n        // If the main thread is busy, block the console close event\n        if (_mainThreadBusy.WaitOne(0))\n        {\n            while (true)\n            {\n                Thread.Sleep(1000);\n            }\n        }\n    }\n    return true;\n}