using System;\nusing System.Reflection;\nusing System.IO;\nusing System.Collections.Generic;\n\npublic interface ICommand\n{\n    void Execute();\n}\n\npublic class CommandLoader\n{\n    public List<ICommand> LoadCommands(string folderPath)\n    {\n        List<ICommand> commands = new List<ICommand>();\n\n        string[] dllFiles = Directory.GetFiles(folderPath, "*.dll");\n\n        foreach (string dllFile in dllFiles)\n        {\n            Assembly assembly = Assembly.LoadFrom(dllFile);\n\n            foreach (Type type in assembly.GetTypes())\n            {\n                if (type.GetInterface(typeof(ICommand).FullName) != null)\n                {\n                    ICommand command = (ICommand)Activator.CreateInstance(type);\n                    commands.Add(command);\n                }\n            }\n        }\n\n        return commands;\n    }\n}