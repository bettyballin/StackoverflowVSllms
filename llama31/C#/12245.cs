// Calculate the normal vector for the collided side\nVector3 normal = Vector3.Zero;\nif (ballPosition.X < cubeMin.X) {\n    normal = -Vector3.UnitX;\n} else if (ballPosition.X > cubeMax.X) {\n    normal = Vector3.UnitX;\n} // ... and so on for the other sides\n\n// Reflect the ball's velocity around the normal vector\nVector3 reflectedVelocity = Vector3.Reflect(Ball.Velocity, normal);\nBall.Velocity = reflectedVelocity;