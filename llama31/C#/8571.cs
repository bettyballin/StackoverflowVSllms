using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecureDataStorage\n{\n    private static readonly byte[] _encryptionKey = GetEncryptionKey();\n\n    public static string Encrypt(string plaintext)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _encryptionKey;\n            aes.Mode = CipherMode.CBC;\n            aes.Padding = PaddingMode.PKCS7;\n\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plaintext);\n                    }\n                    return Convert.ToBase64String(ms.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string ciphertext)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _encryptionKey;\n            aes.Mode = CipherMode.CBC;\n            aes.Padding = PaddingMode.PKCS7;\n\n            using (var ms = new MemoryStream(Convert.FromBase64String(ciphertext)))\n            {\n                using (var cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Read))\n                {\n                    using (var sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    private static byte[] GetEncryptionKey()\n    {\n        // Retrieve the encryption key from a secure location\n        // ...\n    }\n}