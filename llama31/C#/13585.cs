public class StringsEnumerator : IEnumerator<string>\n{\n    private int state;\n    private IEnumerator<string> enumerator2;\n    private IEnumerator<string> argsEnumerator;\n    private string arg;\n    private string current;\n\n    public StringsEnumerator(IEnumerable<string> args)\n    {\n        this.argsEnumerator = args.GetEnumerator();\n        this.state = 0;\n    }\n\n    public bool MoveNext()\n    {\n        switch (this.state)\n        {\n            case 0:\n                this.enumerator2 = getAnotherEnumerator();\n                this.state = 1;\n                goto case 1;\n            case 1:\n                if (this.argsEnumerator.MoveNext())\n                {\n                    this.arg = this.argsEnumerator.Current;\n                    this.enumerator2.MoveNext();\n                    this.current = this.arg + this.enumerator2.Current;\n                    this.state = 2;\n                    return true;\n                }\n                this.state = -1;\n                if (this.argsEnumerator != null) this.argsEnumerator.Dispose();\n                return false;\n            case 2:\n                this.state = 1;\n                goto case 1;\n            default:\n                return false;\n        }\n    }\n\n    public string Current\n    {\n        get { return this.current; }\n    }\n\n    public void Reset()\n    {\n        this.state = 0;\n        this.argsEnumerator.Reset();\n    }\n\n    public void Dispose()\n    {\n        if (this.argsEnumerator != null) this.argsEnumerator.Dispose();\n    }\n}