public class IStreamWrapper : System.IO.Stream\n{\n    private IStream _stream;\n\n    public IStreamWrapper(IStream stream)\n    {\n        _stream = stream;\n    }\n\n    public override void Close()\n    {\n        _stream.Commit(0);\n        Marshal.ReleaseComObject(_stream);\n    }\n\n    public override void Flush()\n    {\n        _stream.Commit(0);\n    }\n\n    public override int Read(byte[] buffer, int offset, int count)\n    {\n        IntPtr bytesRead = IntPtr.Zero;\n        _stream.Read(buffer, count, bytesRead);\n        return bytesRead.ToInt32();\n    }\n\n    public override int Write(byte[] buffer, int offset, int count)\n    {\n        IntPtr bytesWritten = IntPtr.Zero;\n        _stream.Write(buffer, count, bytesWritten);\n        return bytesWritten.ToInt32();\n    }\n\n    public override long Seek(long offset, SeekOrigin origin)\n    {\n        IntPtr position = IntPtr.Zero;\n        _stream.Seek(offset, (int)origin, position);\n        return position.ToInt64();\n    }\n\n    public override void SetLength(long value)\n    {\n        _stream.SetSize(value);\n    }\n\n    public override bool CanRead\n    {\n        get { return true; }\n    }\n\n    public override bool CanWrite\n    {\n        get { return true; }\n    }\n\n    public override bool CanSeek\n    {\n        get { return true; }\n    }\n\n    public override long Length\n    {\n        get\n        {\n            IntPtr length = IntPtr.Zero;\n            _stream.Stat(out length, IntPtr.Zero);\n            return length.ToInt64();\n        }\n    }\n\n    public override long Position\n    {\n        get\n        {\n            IntPtr position = IntPtr.Zero;\n            _stream.Seek(0, 1, position);\n            return position.ToInt64();\n        }\n        set\n        {\n            _stream.Seek(value, 0, IntPtr.Zero);\n        }\n    }\n}