using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Data.SqlClient;\n\npublic class DatasetComparer\n{\n    public void CompareDatasets(DataSet ds, DataSet clientDS)\n    {\n        if (ds.Tables[0].Rows.Count == 0 || clientDS.Tables[0].Rows.Count == 0)\n            return;\n\n        var idsInClientDS = new HashSet<string>();\n        foreach (DataRow row in clientDS.Tables[0].Rows)\n        {\n            idsInClientDS.Add(row["Id"].ToString());\n        }\n\n        var updates = new List<SqlParameter[]>();\n        var inserts = new List<SqlParameter[]>();\n\n        foreach (DataRow row in ds.Tables[0].Rows)\n        {\n            var id = row["Id"].ToString();\n            if (idsInClientDS.Contains(id))\n            {\n                updates.Add(new SqlParameter[]\n                {\n                    new SqlParameter("@Name", row["Name"].ToString()),\n                    new SqlParameter("@ContactPerson", row["ContactPerson"].ToString()),\n                    new SqlParameter("@Address", row["Address"].ToString()),\n                    new SqlParameter("@TinNo", row["TinNo"].ToString()),\n                    new SqlParameter("@ContactNo", row["Contactno"].ToString()),\n                    new SqlParameter("@Report", row["Report"].ToString()),\n                    new SqlParameter("@Id", id)\n                });\n            }\n            else\n            {\n                inserts.Add(new SqlParameter[]\n                {\n                    new SqlParameter("@Id", id),\n                    new SqlParameter("@Name", row["Name"].ToString()),\n                    new SqlParameter("@ContactPerson", row["ContactPerson"].ToString()),\n                    new SqlParameter("@Address", row["Address"].ToString()),\n                    new SqlParameter("@TinNo", row["TinNo"].ToString()),\n                    new SqlParameter("@ContactNo", row["Contactno"].ToString()),\n                    new SqlParameter("@Report", row["Report"].ToString())\n                });\n            }\n        }\n\n        using (var connection = new SqlConnection("Your connection string"))\n        {\n            connection.Open();\n\n            using (var transaction = connection.BeginTransaction())\n            {\n                try\n                {\n                    foreach (var updateParams in updates)\n                    {\n                        using (var command = new SqlCommand("update customers set Name=@Name, ContactPerson=@ContactPerson, Address=@Address, TinNo=@TinNo, ContactNo=@ContactNo, Report=@Report where id=@Id", connection, transaction))\n                        {\n                            command.Parameters.AddRange(updateParams);\n                            command.ExecuteNonQuery();\n                        }\n                    }\n\n                    foreach (var insertParams in inserts)\n                    {\n                        using (var command = new SqlCommand("insert into customers(id, Name, ContactPerson, Address, TinNo, ContactNo, Report) values(@Id, @Name, @ContactPerson, @Address, @TinNo, @ContactNo, @Report)", connection, transaction))\n                        {\n                            command.Parameters.AddRange(insertParams);\n                            command.ExecuteNonQuery();\n                        }\n                    }\n\n                    transaction.Commit();\n                }\n                catch\n                {\n                    transaction.Rollback();\n                    throw;\n                }\n            }\n        }\n    }\n}