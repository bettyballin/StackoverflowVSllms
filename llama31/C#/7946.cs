var formatter = new BinaryFormatter\n{\n    Binder = new MefAssemblyBinder(container)\n};\n\n// ...\n\npublic class MefAssemblyBinder : SerializationBinder\n{\n    private readonly CompositionContainer _container;\n\n    public MefAssemblyBinder(CompositionContainer container)\n    {\n        _container = container;\n    }\n\n    public override Type BindToType(string assemblyName, string typeName)\n    {\n        var assembly = _container.GetExports<Assembly>().FirstOrDefault(a => a.Metadata.Name == assemblyName);\n        if (assembly != null)\n        {\n            return assembly.GetType(typeName);\n        }\n        return null;\n    }\n}