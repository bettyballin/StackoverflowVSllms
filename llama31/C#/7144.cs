using System.Collections.Generic;\n\npublic class WorkFlowStep\n{\n    public int WorkFlowStepID { get; set; }\n    public int? ParentWorkFlowStepID { get; set; }\n}\n\npublic class LinkedListExample\n{\n    public static void Main()\n    {\n        LinkedList<WorkFlowStep> linkedList = new LinkedList<WorkFlowStep>();\n\n        // Assuming you have a data reader object\n        while (dataReader.Read())\n        {\n            WorkFlowStep step = new WorkFlowStep\n            {\n                WorkFlowStepID = dataReader.GetInt32(1),\n                ParentWorkFlowStepID = dataReader.IsDBNull(2) ? (int?)null : dataReader.GetInt32(2)\n            };\n\n            if (linkedList.Count == 0)\n            {\n                linkedList.AddFirst(step);\n            }\n            else\n            {\n                LinkedListNode<WorkFlowStep> node = linkedList.Find(step.ParentWorkFlowStepID);\n                if (node != null)\n                {\n                    linkedList.AddAfter(node, step);\n                }\n                else\n                {\n                    // Handle case where parent step is not found\n                }\n            }\n        }\n    }\n}