using System;\n\npublic bool ValidateDateRange(string dateString)\n{\n    var dateParts = dateString.Split(new[] { " - " }, StringSplitOptions.None);\n    if (dateParts.Length != 2)\n    {\n        return false; // invalid format\n    }\n    \n    DateTime startDate;\n    DateTime endDate;\n    \n    if (!DateTime.TryParseExact(dateParts[0], "MM/dd/yyyy", null, System.Globalization.DateTimeStyles.None, out startDate) ||\n        !DateTime.TryParseExact(dateParts[1], "MM/dd/yyyy", null, System.Globalization.DateTimeStyles.None, out endDate))\n    {\n        return false; // invalid dates\n    }\n    \n    if (startDate >= endDate)\n    {\n        return false; // start date should be before end date\n    }\n    \n    return true;\n}\n\n// Example usage:\nstring dateString = Request.Form["dateRangeInput"];\nif (!ValidateDateRange(dateString))\n{\n    ModelState.AddModelError("dateRangeInput", "Invalid date range");\n}