using System.Runtime.InteropServices;\n\n[StructLayout(LayoutKind.Sequential)]\npublic struct FILETIME\n{\n    public uint dwLowDateTime;\n    public uint dwHighDateTime;\n}\n\n[DllImport("kernel32.dll")]\npublic static extern bool GetProcessTimes(IntPtr hProcess, out FILETIME lpCreationTime, out FILETIME lpExitTime, out FILETIME lpKernelTime, out FILETIME lpUserTime);\n\n// Get the current process handle\nIntPtr processHandle = Process.GetCurrentProcess().Handle;\n\n// Get the process times\nFILETIME creationTime, exitTime, kernelTime, userTime;\nGetProcessTimes(processHandle, out creationTime, out exitTime, out kernelTime, out userTime);\n\n// Calculate the CPU usage\nuint kernelTimeTicks = (uint)((kernelTime.dwHighDateTime << 32) | kernelTime.dwLowDateTime);\nuint userTimeTicks = (uint)((userTime.dwHighDateTime << 32) | userTime.dwLowDateTime);\nfloat cpuUsage = (kernelTimeTicks + userTimeTicks) / (float)Stopwatch.Frequency;\n\n// Log the CPU usage\nConsole.WriteLine($"CPU usage: {cpuUsage}%");