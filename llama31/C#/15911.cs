public static T CalcSqSum<T>(IEnumerable<T> list) where T : struct\n{\n    if (!typeof(T).IsNumeric())\n    {\n        throw new ArgumentException("Type must be numeric", nameof(T));\n    }\n\n    dynamic sumSq = default(T);\n\n    foreach (dynamic item in list)\n    {\n        sumSq += item * item;\n    }\n\n    return sumSq;\n}\n\npublic static bool IsNumeric(this Type type)\n{\n    return type == typeof(int) || type == typeof(double) || type == typeof(decimal) || type == typeof(float) || type == typeof(long) || type == typeof(short) || type == typeof(byte);\n}