using System;\nusing System.Runtime.InteropServices;\n\nclass AppDomainEnumerator\n{\n    [DllImport("mscoree.dll")]\n    private static extern IntPtr CorGetProcess(IntPtr hProcess, out IntPtr hProcessHandle);\n\n    [DllImport("mscoree.dll")]\n    private static extern IntPtr CorGetAppDomain(IntPtr hProcessHandle, out IntPtr hAppDomainHandle);\n\n    [DllImport("mscoree.dll")]\n    private static extern IntPtr CorAppDomainEnum(IntPtr hAppDomainHandle, out IntPtr hEnumHandle);\n\n    [DllImport("mscoree.dll")]\n    private static extern bool CorEnumAppDomain(IntPtr hEnumHandle, out IntPtr hAppDomainHandle);\n\n    [DllImport("mscoree.dll")]\n    private static extern void CorAppDomainClose(IntPtr hAppDomainHandle);\n\n    public static void Main()\n    {\n        IntPtr hProcess = IntPtr.Zero;\n        IntPtr hProcessHandle = IntPtr.Zero;\n        IntPtr hAppDomainHandle = IntPtr.Zero;\n        IntPtr hEnumHandle = IntPtr.Zero;\n\n        try\n        {\n            // Get the process handle\n            hProcess = Process.GetCurrentProcess().Handle;\n\n            // Get the process handle from the runtime\n            CorGetProcess(hProcess, out hProcessHandle);\n\n            // Get the app domain handle\n            CorGetAppDomain(hProcessHandle, out hAppDomainHandle);\n\n            // Create an enumeration handle\n            CorAppDomainEnum(hAppDomainHandle, out hEnumHandle);\n\n            // Enumerate app domains\n            while (CorEnumAppDomain(hEnumHandle, out hAppDomainHandle))\n            {\n                Console.WriteLine($"AppDomain: {AppDomain.FromHandle(hAppDomainHandle).FriendlyName}");\n            }\n        }\n        finally\n        {\n            // Close handles\n            CorAppDomainClose(hAppDomainHandle);\n            CorAppDomainClose(hEnumHandle);\n        }\n    }\n}