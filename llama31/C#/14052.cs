using System.IdentityModel.Tokens;\nusing System.Security.Claims;\nusing System.ServiceModel;\n\n[ServiceContract]\npublic interface IMyService\n{\n    [OperationContract]\n    string MyMethod();\n}\n\npublic class MyService : IMyService\n{\n    [Authorize]\n    public string MyMethod()\n    {\n        // implementation\n    }\n}\n\npublic class OAuthAuthorizationManager : ServiceAuthorizationManager\n{\n    protected override bool CheckAccess(OperationContext operationContext, ref Message message)\n    {\n        var token = operationContext.IncomingMessageHeaders.FindHeader("Authorization");\n        if (token != null)\n        {\n            var tokenHandler = new JwtSecurityTokenHandler();\n            var principal = tokenHandler.ValidateToken(token.Value, new TokenValidationParameters\n            {\n                ValidateIssuer = true,\n                ValidateAudience = true,\n                ValidateLifetime = true,\n                IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes("your_secret_key"))\n            }, out var validatedToken);\n\n            if (principal != null)\n            {\n                operationContext.ServiceSecurityContext.AuthorizationContext.Properties["Principal"] = principal;\n                return true;\n            }\n        }\n        return false;\n    }\n}