using System;\nusing System.Reflection;\n\n// Assuming you have a class with methods\npublic class MyClass\n{\n    public void MethodName()\n    {\n        Console.WriteLine("MethodName invoked");\n    }\n}\n\npublic class DynamicInvoker\n{\n    public static void InvokeMethod(string methodName)\n    {\n        // Get the type of the class\n        Type type = typeof(MyClass);\n\n        // Get the method info\n        MethodInfo method = type.GetMethod(methodName);\n\n        if (method != null)\n        {\n            // Create an instance of the class\n            object instance = Activator.CreateInstance(type);\n\n            // Invoke the method\n            method.Invoke(instance, null);\n        }\n        else\n        {\n            Console.WriteLine("Method not found");\n        }\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        string methodName = "MethodName"; // Retrieve from configuration database\n        DynamicInvoker.InvokeMethod(methodName);\n    }\n}