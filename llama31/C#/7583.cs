if (!IsValidEnumValue(typeof(T), value))\n{\n    throw new ArgumentOutOfRangeException("value", value, "Value not defined in enum, " + typeof(T).Name);\n}\n\n// ...\n\nprivate static bool IsValidEnumValue(Type enumType, object value)\n{\n    var values = Enum.GetValues(enumType);\n    var intValue = Convert.ToInt64(value);\n\n    foreach (var v in values)\n    {\n        if ((intValue & Convert.ToInt64(v)) != 0)\n        {\n            intValue &= ~Convert.ToInt64(v);\n        }\n    }\n\n    return intValue == 0;\n}