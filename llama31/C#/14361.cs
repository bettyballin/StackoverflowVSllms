using System;\nusing System.Runtime.InteropServices;\n\nclass KeyboardHook\n{\n    [DllImport("user32.dll")]\n    private static extern IntPtr SetWindowsHookEx(int idHook, KeyboardProc callback, IntPtr hInstance, uint threadId);\n\n    [DllImport("user32.dll")]\n    private static extern bool UnhookWindowsHookEx(IntPtr hHook);\n\n    private delegate int KeyboardProc(int nCode, IntPtr wParam, IntPtr lParam);\n\n    private const int WH_KEYBOARD_LL = 13;\n\n    public KeyboardHook()\n    {\n        _hookHandle = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardCallback, IntPtr.Zero, 0);\n    }\n\n    private IntPtr _hookHandle;\n\n    private int KeyboardCallback(int nCode, IntPtr wParam, IntPtr lParam)\n    {\n        if (nCode >= 0 && wParam == (IntPtr)WM_KEYDOWN)\n        {\n            // Check for card swipe sentinel characters and handle input accordingly\n        }\n        return CallNextHookEx(_hookHandle, nCode, wParam, lParam);\n    }\n\n    [DllImport("user32.dll")]\n    private static extern int CallNextHookEx(IntPtr hHook, int nCode, IntPtr wParam, IntPtr lParam);\n}