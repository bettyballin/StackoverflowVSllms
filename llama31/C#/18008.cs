public class GridPanel : Panel\n{\n    protected override Size MeasureOverride(Size availableSize)\n    {\n        var size = new Size(0, 0);\n        foreach (var child in Children)\n        {\n            child.Measure(availableSize);\n            size.Width = Math.Max(size.Width, child.DesiredSize.Width);\n            size.Height = Math.Max(size.Height, child.DesiredSize.Height);\n        }\n        return size;\n    }\n\n    protected override Size ArrangeOverride(Size finalSize)\n    {\n        var columnWidth = finalSize.Width / 2;\n        var rowHeight = finalSize.Height / 2;\n        var columnIndex = 0;\n        var rowIndex = 0;\n\n        foreach (var child in Children)\n        {\n            var rect = new Rect(columnIndex * columnWidth, rowIndex * rowHeight, columnWidth, rowHeight);\n            child.Arrange(rect);\n\n            columnIndex++;\n            if (columnIndex >= 2)\n            {\n                columnIndex = 0;\n                rowIndex++;\n            }\n        }\n\n        return finalSize;\n    }\n}