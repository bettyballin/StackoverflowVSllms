using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\n\n// Custom message structure\n[StructLayout(LayoutKind.Sequential)]\npublic struct Message {\n    public int id;\n    public string data;\n}\n\nclass Client {\n    public void SendMessage() {\n        // Create a TCP client\n        TcpClient client = new TcpClient();\n\n        // Connect to the server\n        client.Connect("localhost", 12345);\n\n        // Create a message\n        Message message = new Message { id = 1, data = "Hello, server!" };\n\n        // Serialize the message\n        byte[] buffer = new byte[Marshal.SizeOf(message)];\n        IntPtr ptr = Marshal.AllocHGlobal(buffer.Length);\n        Marshal.StructureToPtr(message, ptr, true);\n        Marshal.Copy(ptr, buffer, 0, buffer.Length);\n        Marshal.FreeHGlobal(ptr);\n\n        // Send the message\n        client.GetStream().Write(buffer, 0, buffer.Length);\n    }\n}