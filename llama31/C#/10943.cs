using System;\nusing System.Collections.Generic;\nusing System.Data.SqlClient;\nusing System.Web.Security;\n\npublic class CustomRoleProvider : RoleProvider\n{\n    private string connectionString;\n\n    public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config)\n    {\n        connectionString = config["connectionString"];\n        base.Initialize(name, config);\n    }\n\n    public override bool IsUserInRole(string username, string roleName)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            connection.Open();\n\n            SqlCommand command = new SqlCommand("SELECT COUNT(*) FROM Roles WHERE Username = @Username AND RoleName = @RoleName", connection);\n            command.Parameters.AddWithValue("@Username", username);\n            command.Parameters.AddWithValue("@RoleName", roleName);\n\n            int count = (int)command.ExecuteScalar();\n\n            return count > 0;\n        }\n    }\n\n    // Implement other role provider methods as needed\n}