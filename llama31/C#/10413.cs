using System;\nusing System.Net;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace WebServiceSecurity\n{\n    public class WebService\n    {\n        [BasicAuthentication]\n        public async Task<string> VerifyAsync(string accountNumber, string productName)\n        {\n            // Verify logic here\n            return "Verified";\n        }\n    }\n\n    public class BasicAuthenticationAttribute : Attribute, IAuthenticationFilter\n    {\n        public async Task AuthenticateAsync(HttpAuthenticationContext context, CancellationToken cancellationToken)\n        {\n            var request = context.Request;\n            var headers = request.Headers;\n\n            if (!headers.Contains("Authorization"))\n            {\n                context.ErrorResult = new UnauthorizedResult();\n                return;\n            }\n\n            var authHeader = headers.GetValues("Authorization").FirstOrDefault();\n            var credentials = authHeader.Split(':');\n\n            if (credentials.Length != 2)\n            {\n                context.ErrorResult = new UnauthorizedResult();\n                return;\n            }\n\n            var username = credentials[0].Trim();\n            var password = credentials[1].Trim();\n\n            // Validate username and password here\n            if (!ValidateCredentials(username, password))\n            {\n                context.ErrorResult = new UnauthorizedResult();\n                return;\n            }\n\n            context.Principal = new ClaimsPrincipal(new ClaimsIdentity(username));\n        }\n\n        private bool ValidateCredentials(string username, string password)\n        {\n            // Implement your validation logic here\n            return true;\n        }\n    }\n}