using System.Reflection;\n\npublic class ApplicationTypeDetector\n{\n    public static ApplicationType GetApplicationType()\n    {\n        // Get the current process\n        Process currentProcess = Process.GetCurrentProcess();\n\n        // Get the main module of the current process\n        ProcessModule mainModule = currentProcess.MainModule;\n\n        // Get the assembly of the main module\n        Assembly mainAssembly = Assembly.LoadFrom(mainModule.FileName);\n\n        // Get the entry point of the assembly\n        MethodInfo entryPoint = mainAssembly.EntryPoint;\n\n        // Check the entry point to determine the application type\n        if (entryPoint.Name == "Main" && entryPoint.DeclaringType.Namespace == "System")\n        {\n            return ApplicationType.Console;\n        }\n        else if (entryPoint.Name == "WinMain" && entryPoint.DeclaringType.Namespace == "System.Windows.Forms")\n        {\n            return ApplicationType.WinForms;\n        }\n        else if (entryPoint.Name == "Application_Start" && entryPoint.DeclaringType.Namespace == "System.Web")\n        {\n            return ApplicationType.AspNet;\n        }\n        else if (entryPoint.Name == "ServiceMain" && entryPoint.DeclaringType.Namespace == "System.ServiceProcess")\n        {\n            return ApplicationType.WindowsService;\n        }\n        else\n        {\n            return ApplicationType.Unknown;\n        }\n    }\n}\n\npublic enum ApplicationType\n{\n    Console,\n    WinForms,\n    AspNet,\n    WindowsService,\n    Unknown\n}