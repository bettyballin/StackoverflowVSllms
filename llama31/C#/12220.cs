using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Configuration.Install;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Text;\n\nnamespace CreateAppPoolCA\n{\n    [RunInstaller(true)]\n    public partial class CreateAppPool : Installer\n    {\n        public CreateAppPool()\n        {\n            InitializeComponent();\n        }\n\n        public override void Install(IDictionary stateSaver)\n        {\n            base.Install(stateSaver);\n\n            // Get the application pool name from the custom action data\n            string appPoolName = this.Context.Parameters["AppPoolName"];\n\n            // Create the application pool\n            CreateApplicationPool(appPoolName);\n        }\n\n        private void CreateApplicationPool(string appPoolName)\n        {\n            // Get the IIS metabase path\n            string metabasePath = "IIS://localhost/W3SVC/AppPools";\n\n            // Create the application pool\n            using (DirectoryEntry appPools = new DirectoryEntry(metabasePath))\n            {\n                DirectoryEntry newAppPool = appPools.Children.Add(appPoolName, "IIsApplicationPool");\n\n                // Set the application pool properties\n                newAppPool.Properties["ManagedPipelineMode"].Value = 0; // Integrated\n                newAppPool.Properties["AutoStart"].Value = true;\n                newAppPool.Properties["Enable32BitAppOnWin64"].Value = true;\n\n                // Save the changes\n                newAppPool.CommitChanges();\n            }\n        }\n    }\n}