using System.Text.RegularExpressions;\n\npublic class AddressParser\n{\n    private static readonly Regex AddressRegex = new Regex(\n        @"^(?<StreetNumber>\d+)\s*" +\n        @"(?<PreDirection>N|S|E|W|North|South|East|West)?\s*" +\n        @"(?<StreetName>.+?)\s*" +\n        @"(?<StreetType>St|Street|Ave|Avenue|Blvd|Boulevard|Ln|Lane|Dr|Drive|Ct|Court|Pl|Place)\s*" +\n        @"(?<PostDirection>N|S|E|W|North|South|East|West)?$",\n        RegexOptions.IgnoreCase | RegexOptions.Compiled\n    );\n\n    public static Address ParseAddress(string input)\n    {\n        var match = AddressRegex.Match(input);\n        if (match.Success)\n        {\n            return new Address\n            {\n                StreetNumber = match.Groups["StreetNumber"].Value,\n                PreDirection = match.Groups["PreDirection"].Value,\n                StreetName = match.Groups["StreetName"].Value,\n                StreetType = match.Groups["StreetType"].Value,\n                PostDirection = match.Groups["PostDirection"].Value\n            };\n        }\n        return null;\n    }\n\n    public class Address\n    {\n        public string StreetNumber { get; set; }\n        public string PreDirection { get; set; }\n        public string StreetName { get; set; }\n        public string StreetType { get; set; }\n        public string PostDirection { get; set; }\n    }\n}