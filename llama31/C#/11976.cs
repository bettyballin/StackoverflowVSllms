public static string ReadLine(BinaryReader reader)\n{\n    var buffer = new byte[1024];\n    var bytesRead = 0;\n    var line = new StringBuilder();\n\n    while (true)\n    {\n        bytesRead = reader.Read(buffer, 0, buffer.Length);\n        if (bytesRead == 0) break; // end of stream\n\n        for (int i = 0; i < bytesRead; i++)\n        {\n            if (buffer[i] == '\r' && i + 1 < bytesRead && buffer[i + 1] == '\n')\n            {\n                // Found a complete line\n                line.Append(Encoding.UTF8.GetString(buffer, 0, i));\n                reader.BaseStream.Position -= bytesRead - i - 2; // rewind to the next char after \r\n\n                return line.ToString();\n            }\n            else if (buffer[i] == '\r' || buffer[i] == '\n')\n            {\n                // Ignore soft carriage returns\n                continue;\n            }\n            else\n            {\n                line.Append((char)buffer[i]);\n            }\n        }\n    }\n\n    // If we reach this point, it's the last line without a \r\n\n    return line.ToString();\n}