using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\n\nclass GuidBenchmark\n{\n    static void Main(string[] args)\n    {\n        int iterations = 1000000;\n        var guidDict = new Dictionary<Guid, int>();\n        var stringDict = new Dictionary<string, int>();\n\n        // Populate dictionaries\n        for (int i = 0; i < iterations; i++)\n        {\n            var guid = Guid.NewGuid();\n            guidDict[guid] = i;\n            stringDict[guid.ToString()] = i;\n        }\n\n        // Benchmark lookup\n        var sw = Stopwatch.StartNew();\n        for (int i = 0; i < iterations; i++)\n        {\n            var guid = Guid.NewGuid();\n            int value;\n            guidDict.TryGetValue(guid, out value);\n        }\n        sw.Stop();\n        Console.WriteLine($"Guid lookup: {sw.ElapsedMilliseconds} ms");\n\n        sw.Restart();\n        for (int i = 0; i < iterations; i++)\n        {\n            var guid = Guid.NewGuid();\n            int value;\n            stringDict.TryGetValue(guid.ToString(), out value);\n        }\n        sw.Stop();\n        Console.WriteLine($"String lookup: {sw.ElapsedMilliseconds} ms");\n    }\n}