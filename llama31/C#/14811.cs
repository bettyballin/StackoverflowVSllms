using System;\nusing System.IO;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\n\npublic class FileSystemRedirector : IDisposable\n{\n    private readonly HttpListener _listener;\n\n    public FileSystemRedirector(string sharePath, string httpUrl)\n    {\n        _listener = new HttpListener();\n        _listener.Prefixes.Add(sharePath + "/");\n        _listener.Start();\n\n        while (_listener.IsListening)\n        {\n            var context = _listener.GetContext();\n            var request = context.Request;\n            var response = context.Response;\n\n            var filePath = request.Url.AbsolutePath;\n            var httpRequest = new HttpRequestMessage(HttpMethod.Get, httpUrl + filePath);\n            var httpResponse = new HttpClient().SendAsync(httpRequest).Result;\n\n            response.ContentType = httpResponse.Content.Headers.ContentType.ToString();\n            response.OutputStream.Write(httpResponse.Content.ReadAsByteArrayAsync().Result, 0, httpResponse.Content.ReadAsByteArrayAsync().Result.Length);\n            response.Close();\n        }\n    }\n\n    public void Dispose()\n    {\n        _listener.Stop();\n        _listener.Close();\n    }\n}