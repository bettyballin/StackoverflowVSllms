public class UnitOfWork : IDisposable\n{\n    private readonly ISessionFactory _sessionFactory;\n    private readonly ISession _session;\n    private readonly ITransaction _transaction;\n\n    public UnitOfWork(ISessionFactory sessionFactory)\n    {\n        _sessionFactory = sessionFactory;\n        _session = _sessionFactory.OpenSession();\n        _transaction = _session.BeginTransaction();\n    }\n\n    public ISession Session { get { return _session; } }\n\n    public void Commit()\n    {\n        _transaction.Commit();\n    }\n\n    public void Rollback()\n    {\n        _transaction.Rollback();\n    }\n\n    public void Dispose()\n    {\n        _transaction.Dispose();\n        _session.Dispose();\n    }\n}