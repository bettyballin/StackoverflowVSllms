using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SalaryEncryptor\n{\n    private static readonly byte[] _secretKey = Convert.FromBase64String("your_secret_key_here");\n\n    public static string EncryptSalary(string salary)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _secretKey;\n            aes.GenerateIV();\n            var encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(salary);\n                    }\n                    return Convert.ToBase64String(ms.ToArray());\n                }\n            }\n        }\n    }\n\n    public static string DecryptSalary(string encryptedSalary)\n    {\n        using (var aes = Aes.Create())\n        {\n            aes.Key = _secretKey;\n            var iv = new byte[16];\n            Array.Copy(Convert.FromBase64String(encryptedSalary), iv, 16);\n            aes.IV = iv;\n            var decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(Convert.FromBase64String(encryptedSalary), 16, Convert.FromBase64String(encryptedSalary).Length - 16);\n                    }\n                    return Encoding.UTF8.GetString(ms.ToArray());\n                }\n            }\n        }\n    }\n}