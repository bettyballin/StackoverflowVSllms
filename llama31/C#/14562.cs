using System;\nusing System.Runtime.InteropServices;\n\n[ComImport, InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\npublic interface IRAPIStream\n{\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT Seek(long dlibMove, int dwOrigin, out long plibNewPosition);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT SetSize(long libNewSize);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT CopyTo(IRAPIStream pstm, long cb, out long pcbRead, out long pcbWritten);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT Commit(int grfCommitFlags);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT Revert();\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT LockRegion(long libOffset, long cb, int dwLockType);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT UnlockRegion(long libOffset, long cb, int dwLockType);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT Stat(out STATSTG pstatstg, int grfStatFlag);\n\n    [MethodImpl(MethodImplOptions.PreserveSig)]\n    HRESULT Clone(out IRAPIStream ppstm);\n}\n\n[StructLayout(LayoutKind.Sequential)]\npublic struct STATSTG\n{\n    public IntPtr pwcsName;\n    public int type;\n    public long cbSize;\n    public FILETIME mtime;\n    public FILETIME ctime;\n    public FILETIME atime;\n    public int grfMode;\n    public int grfLocksSupported;\n    public Guid clsid;\n    public int grfStateBits;\n    public int reserved;\n}\n\n[DllImport("rapi.dll")]\npublic static extern HRESULT CeRapiInit();\n\n[DllImport("rapi.dll")]\npublic static extern HRESULT CeRapiUninit();\n\n[DllImport("rapi.dll")]\npublic static extern HRESULT CeRapiInvoke(\n    string pDllPath,\n    string pFunctionName,\n    int cbInput,\n    IntPtr pInput,\n    int cbOutput,\n    IntPtr pOutput,\n    out int pcbOutput,\n    IRAPIStream pStream,\n    int dwReserved\n);\n\n// Example usage:\npublic class RAPITest\n{\n    public void Test()\n    {\n        HRESULT hr = CeRapiInit();\n        if (hr == HRESULT.S_OK)\n        {\n            IRAPIStream stream = null;\n            // Create an instance of the stream interface\n            hr = CeRapiInvoke(null, "CreateStream", 0, IntPtr.Zero, 0, IntPtr.Zero, out int pcbOutput, out stream, 0);\n            if (hr == HRESULT.S_OK)\n            {\n                // Use the stream interface\n                hr = stream.Seek(0, 0, out long newPosition);\n                // ...\n            }\n            CeRapiUninit();\n        }\n    }\n}