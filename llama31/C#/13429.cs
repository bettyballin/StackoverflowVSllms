[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]\npublic class LogAspect : OnMethodBoundaryAspect\n{\n    private readonly ILogger _logger;\n\n    public LogAspect(ILogger logger)\n    {\n        _logger = logger;\n    }\n\n    public override void OnEntry(MethodExecutionArgs args)\n    {\n        if (_logger.IsEnabled(LogLevel.Debug))\n        {\n            // log method entry with arguments at debug level\n        }\n    }\n\n    public override void OnExit(MethodExecutionArgs args)\n    {\n        if (_logger.IsEnabled(LogLevel.Info))\n        {\n            // log method exit with return value or exception at info level\n        }\n    }\n}