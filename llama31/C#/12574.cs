string className = "MyCustomGenericCollection(of MyCustomObjectClass)";\nstring assemblyName = null; // you don't know the assembly name\n\n// Get the Type object\nType genericType = Type.GetType(className, assemblyName);\n\n// Get the type arguments\nstring[] typeArgs = className.Split(new[] { "(of " }, StringSplitOptions.None)[1].Split(')')[0].Split(',');\n\n// Create the generic type\nType[] typeArguments = typeArgs.Select(t => Type.GetType(t.Trim())).ToArray();\nType constructedType = genericType.MakeGenericType(typeArguments);\n\n// Create an instance of the generic type\nobject instance = Activator.CreateInstance(constructedType);