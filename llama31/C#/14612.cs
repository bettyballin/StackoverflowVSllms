using System;\nusing System.Runtime.InteropServices;\n\nclass MyBitmap : IDisposable\n{\n    [DllImport("gdi32")]\n    static extern IntPtr CreateBitmap(int width, int height, int planes, int bitsPerPixel, IntPtr data);\n\n    IntPtr _hBitmap;\n\n    public MyBitmap(int width, int height)\n    {\n        _hBitmap = CreateBitmap(width, height, 1, 32, IntPtr.Zero);\n        GC.AddMemoryPressure(2 * 1024 * 1024); // 2MB unmanaged allocation\n    }\n\n    ~MyBitmap()\n    {\n        Dispose(false);\n    }\n\n    public void Dispose()\n    {\n        Dispose(true);\n        GC.SuppressFinalize(this);\n    }\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (_hBitmap != IntPtr.Zero)\n        {\n            DeleteObject(_hBitmap);\n            _hBitmap = IntPtr.Zero;\n        }\n        GC.RemoveMemoryPressure(2 * 1024 * 1024);\n    }\n\n    [DllImport("gdi32")]\n    static extern bool DeleteObject(IntPtr hObject);\n}