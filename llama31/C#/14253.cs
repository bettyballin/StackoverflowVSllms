using System.Data;\nusing System.Collections.Generic;\nusing System.Reflection;\n\npublic class YourObject\n{\n    public string Property1 { get; set; }\n    public string Property2 { get; set; }\n    // ... and so on for all 9 properties\n}\n\npublic DataSet ConvertListToDataSet(List<YourObject> list)\n{\n    DataSet dataSet = new DataSet();\n    DataTable dataTable = new DataTable();\n\n    // Add columns to the DataTable\n    foreach (PropertyInfo property in typeof(YourObject).GetProperties())\n    {\n        dataTable.Columns.Add(property.Name, typeof(string));\n    }\n\n    // Add rows to the DataTable\n    foreach (YourObject obj in list)\n    {\n        DataRow row = dataTable.NewRow();\n        foreach (PropertyInfo property in typeof(YourObject).GetProperties())\n        {\n            row[property.Name] = property.GetValue(obj);\n        }\n        dataTable.Rows.Add(row);\n    }\n\n    dataSet.Tables.Add(dataTable);\n    return dataSet;\n}