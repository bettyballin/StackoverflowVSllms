using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class RSAEncryption\n{\n    public static void EncryptFile(string publicKey, string inputFile, string outputFile)\n    {\n        // Generate a random symmetric key\n        byte[] symmetricKey = GenerateRandomKey(32);\n\n        // Encrypt the symmetric key with RSA\n        byte[] encryptedSymmetricKey = EncryptSymmetricKey(publicKey, symmetricKey);\n\n        // Encrypt the file with AES\n        EncryptFileWithAES(inputFile, outputFile, symmetricKey);\n\n        // Write the encrypted symmetric key to the output file\n        using (FileStream fs = new FileStream(outputFile, FileMode.Append))\n        {\n            fs.Write(encryptedSymmetricKey, 0, encryptedSymmetricKey.Length);\n        }\n    }\n\n    private static byte[] GenerateRandomKey(int keySize)\n    {\n        using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider())\n        {\n            aes.KeySize = keySize * 8;\n            aes.GenerateKey();\n            return aes.Key;\n        }\n    }\n\n    private static byte[] EncryptSymmetricKey(string publicKey, byte[] symmetricKey)\n    {\n        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())\n        {\n            rsa.ImportCspBlob(Convert.FromBase64String(publicKey));\n            return rsa.Encrypt(symmetricKey, true);\n        }\n    }\n\n    private static void EncryptFileWithAES(string inputFile, string outputFile, byte[] symmetricKey)\n    {\n        using (AesCryptoServiceProvider aes = new AesCryptoServiceProvider())\n        {\n            aes.Key = symmetricKey;\n            aes.GenerateIV();\n\n            using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n            {\n                using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n                {\n                    using (CryptoStream cs = new CryptoStream(fsOutput, aes.CreateEncryptor(), CryptoStreamMode.Write))\n                    {\n                        byte[] buffer = new byte[4096];\n                        int read;\n                        while ((read = fsInput.Read(buffer, 0, buffer.Length)) > 0)\n                        {\n                            cs.Write(buffer, 0, read);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}