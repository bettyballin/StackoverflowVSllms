public void drawLine(int x1, int x2, int y1, int y2)\n{\n  int dx = x2 - x1;\n  int dy = y2 - y1;\n\n  // If line is steep, rotate by 90 degrees\n  if (Math.abs(dy) > Math.abs(dx))\n  {\n    // Swap x's and y's in subsequent operations\n    int temp = x1;\n    x1 = y1;\n    y1 = temp;\n    temp = x2;\n    x2 = y2;\n    y2 = temp;\n    dx = x2 - x1;\n    dy = y2 - y1;\n  }\n\n  // Line is not steep.  Use standard Bresenham algorithm\n  int p = 2 * dy - dx;  // Decision variable\n  int twoDy = 2 * dy;\n  int twoDyDx = 2 * (dy - dx);\n\n  for (int x = x1, y = y1; x <= x2; x++)\n  {\n    if (p < 0)\n      p += twoDy;\n    else\n    {\n      p += twoDyDx;\n      y++;\n    }\n\n    setPixel(x, y);  // Set the pixel at (x, y)\n  }\n}