using Microsoft.AspNet.Identity;\nusing Microsoft.AspNet.Identity.EntityFramework;\n\npublic class AccountController : Controller\n{\n    private readonly UserManager<IdentityUser> _userManager;\n\n    public AccountController(UserManager<IdentityUser> userManager)\n    {\n        _userManager = userManager;\n    }\n\n    [HttpPost]\n    public async Task<ActionResult> Login(LoginModel model)\n    {\n        if (ModelState.IsValid)\n        {\n            var user = await _userManager.FindAsync(model.UserName, model.Password);\n            if (user != null)\n            {\n                await SignInAsync(user, false);\n                return RedirectToAction("Index", "Home");\n            }\n            else\n            {\n                ModelState.AddModelError("", "Invalid username or password.");\n            }\n        }\n        return View(model);\n    }\n\n    private async Task SignInAsync(IdentityUser user, bool isPersistent)\n    {\n        var authenticationManager = HttpContext.GetOwinContext().Authentication;\n        var identity = await _userManager.CreateIdentityAsync(user, DefaultAuthenticationTypes.ApplicationCookie);\n        authenticationManager.SignIn(new AuthenticationProperties { IsPersistent = isPersistent }, identity);\n    }\n}