using System;\nusing System.Runtime.InteropServices;\n\npublic class NetworkShareConnector\n{\n    [DllImport("mpr.dll")]\n    private static extern int WNetAddConnection2(ref NetResource netResource, string password, string userName, int flags);\n\n    [DllImport("mpr.dll")]\n    private static extern int WNetCancelConnection2(string name, int flags, bool force);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct NetResource\n    {\n        public int dwScope;\n        public int dwType;\n        public int dwDisplayType;\n        public int dwUsage;\n        public string lpLocalName;\n        public string lpRemoteName;\n        public string lpComment;\n        public string lpProvider;\n    }\n\n    public void ConnectToShare(string shareName)\n    {\n        NetResource netResource = new NetResource();\n        netResource.dwType = 1; // RESOURCETYPE_ANY\n        netResource.lpLocalName = null;\n        netResource.lpRemoteName = shareName;\n        netResource.lpProvider = null;\n\n        int result = WNetAddConnection2(ref netResource, null, null, 0);\n        if (result == 0)\n        {\n            Console.WriteLine("Connected to share");\n        }\n        else\n        {\n            Console.WriteLine("Error connecting to share: " + result);\n        }\n    }\n\n    public void DisconnectFromShare(string shareName)\n    {\n        int result = WNetCancelConnection2(shareName, 0, true);\n        if (result == 0)\n        {\n            Console.WriteLine("Disconnected from share");\n        }\n        else\n        {\n            Console.WriteLine("Error disconnecting from share: " + result);\n        }\n    }\n}