using Microsoft.EntityFrameworkCore;\nusing System;\nusing System.Linq;\n\npublic class Order\n{\n    public int Id { get; set; }\n    public int ProductId { get; set; }\n    public int CustomerId { get; set; }\n    public int OrderTypeId { get; set; }\n    public int ProviderId { get; set; }\n\n    public Product Product { get; set; }\n    public Customer Customer { get; set; }\n    public OrderType OrderType { get; set; }\n    public Provider Provider { get; set; }\n}\n\npublic class Product\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic class Customer\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic class OrderType\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic class Provider\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<Order> Orders { get; set; }\n    public DbSet<Product> Products { get; set; }\n    public DbSet<Customer> Customers { get; set; }\n    public DbSet<OrderType> OrderTypes { get; set; }\n    public DbSet<Provider> Providers { get; set; }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<Order>()\n            .HasOne(o => o.Product)\n            .WithMany()\n            .HasForeignKey(o => o.ProductId);\n\n        modelBuilder.Entity<Order>()\n            .HasOne(o => o.Customer)\n            .WithMany()\n            .HasForeignKey(o => o.CustomerId);\n\n        modelBuilder.Entity<Order>()\n            .HasOne(o => o.OrderType)\n            .WithMany()\n            .HasForeignKey(o => o.OrderTypeId);\n\n        modelBuilder.Entity<Order>()\n            .HasOne(o => o.Provider)\n            .WithMany()\n            .HasForeignKey(o => o.ProviderId);\n    }\n}\n\npublic class MyService\n{\n    private readonly MyDbContext _context;\n\n    public MyService(MyDbContext context)\n    {\n        _context = context;\n    }\n\n    public Order GetOrder(int id)\n    {\n        return _context.Orders\n            .Include(o => o.Product).ThenInclude(p => p.Name)\n            .Include(o => o.Customer).ThenInclude(c => c.Name)\n            .Include(o => o.OrderType).ThenInclude(ot => ot.Name)\n            .Include(o => o.Provider).ThenInclude(p => p.Name)\n            .FirstOrDefault(o => o.Id == id);\n    }\n}