using System.Drawing;\n\npublic static Region FloodFill(Graphics g, int x, int y, Color boundaryColor)\n{\n    Bitmap bmp = new Bitmap(g.ClipBounds.Width, g.ClipBounds.Height);\n    g.DrawImage(bmp, 0, 0);\n\n    Stack<Point> stack = new Stack<Point>();\n    stack.Push(new Point(x, y));\n\n    Color targetColor = bmp.GetPixel(x, y);\n    Color fillColor = Color.FromArgb(255, 255, 255); // white\n\n    while (stack.Count > 0)\n    {\n        Point p = stack.Pop();\n        if (bmp.GetPixel(p.X, p.Y) == targetColor)\n        {\n            bmp.SetPixel(p.X, p.Y, fillColor);\n\n            if (p.X > 0 && bmp.GetPixel(p.X - 1, p.Y) == targetColor)\n                stack.Push(new Point(p.X - 1, p.Y));\n            if (p.X < bmp.Width - 1 && bmp.GetPixel(p.X + 1, p.Y) == targetColor)\n                stack.Push(new Point(p.X + 1, p.Y));\n            if (p.Y > 0 && bmp.GetPixel(p.X, p.Y - 1) == targetColor)\n                stack.Push(new Point(p.X, p.Y - 1));\n            if (p.Y < bmp.Height - 1 && bmp.GetPixel(p.X, p.Y + 1) == targetColor)\n                stack.Push(new Point(p.X, p.Y + 1));\n        }\n    }\n\n    GraphicsPath path = new GraphicsPath();\n    path.AddRectangle(new Rectangle(0, 0, bmp.Width, bmp.Height));\n    Region region = new Region(path);\n    region.Exclude(bmp);\n\n    return region;\n}