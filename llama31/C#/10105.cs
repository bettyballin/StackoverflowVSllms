using System.Runtime.InteropServices;\n\n// ...\n\n[DllImport("shell32.dll", CharSet = CharSet.Auto)]\nstatic extern bool ShellExecuteEx(ref SHELLEXECUTEINFO lpExecInfo);\n\n[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\npublic struct SHELLEXECUTEINFO\n{\n    public int cbSize;\n    public uint fMask;\n    public IntPtr hwnd;\n    [MarshalAs(UnmanagedType.LPTStr)]\n    public string lpVerb;\n    [MarshalAs(UnmanagedType.LPTStr)]\n    public string lpFile;\n    [MarshalAs(UnmanagedType.LPTStr)]\n    public string lpParameters;\n    [MarshalAs(UnmanagedType.LPTStr)]\n    public string lpDirectory;\n    public int nShow;\n    public IntPtr hInstApp;\n}\n\n// ...\n\nSHELLEXECUTEINFO info = new SHELLEXECUTEINFO();\ninfo.cbSize = Marshal.SizeOf(info);\ninfo.fMask = 0x00000040; // SEE_MASK_NOCLOSEPROCESS\ninfo.hwnd = IntPtr.Zero;\ninfo.lpVerb = "runas";\ninfo.lpFile = "your_service.exe";\nShellExecuteEx(ref info);