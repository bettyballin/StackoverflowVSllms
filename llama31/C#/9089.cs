[Test]\npublic void ReshuffledSequence_IsNotInSameOrder_AsOriginalSequence()\n{\n    // Arrange\n    var originalSequence = Enumerable.Range(1, 100).ToList();\n    var reshuffledSequence = MyModule.Reshuffle(originalSequence);\n\n    // Act\n    var sameOrderCount = 0;\n    for (int i = 0; i < 1000; i++) // Run the test 1000 times\n    {\n        reshuffledSequence = MyModule.Reshuffle(originalSequence);\n        if (reshuffledSequence.SequenceEqual(originalSequence))\n        {\n            sameOrderCount++;\n        }\n    }\n\n    // Assert\n    Assert.Less(sameOrderCount, 10); // e.g., allow up to 1% chance of same order\n}