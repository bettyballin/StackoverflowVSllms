using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\nclass ProxyServer\n{\n    private TcpListener _listener;\n    private readonly string _targetHost;\n    private readonly int _targetPort;\n\n    public ProxyServer(int listenPort, string targetHost, int targetPort)\n    {\n        _listener = new TcpListener(IPAddress.Any, listenPort);\n        _targetHost = targetHost;\n        _targetPort = targetPort;\n    }\n\n    public void Start()\n    {\n        _listener.Start();\n        Console.WriteLine($"Proxy server listening on port {_listener.LocalEndpoint}");\n\n        while (true)\n        {\n            var client = _listener.AcceptTcpClient();\n            Console.WriteLine($"Client connected from {client.Client.RemoteEndPoint}");\n\n            var thread = new Thread(() => HandleClient(client));\n            thread.Start();\n        }\n    }\n\n    private void HandleClient(TcpClient client)\n    {\n        var target = new TcpClient(_targetHost, _targetPort);\n\n        using (var clientStream = client.GetStream())\n        using (var targetStream = target.GetStream())\n        {\n            var buffer = new byte[4096];\n\n            while (true)\n            {\n                var bytesRead = clientStream.Read(buffer, 0, buffer.Length);\n                if (bytesRead == 0)\n                {\n                    break;\n                }\n\n                targetStream.Write(buffer, 0, bytesRead);\n                targetStream.Flush();\n\n                bytesRead = targetStream.Read(buffer, 0, buffer.Length);\n                if (bytesRead == 0)\n                {\n                    break;\n                }\n\n                clientStream.Write(buffer, 0, bytesRead);\n                clientStream.Flush();\n            }\n        }\n\n        client.Close();\n        target.Close();\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var proxy = new ProxyServer(8080, "www.example.com", 80);\n        proxy.Start();\n    }\n}