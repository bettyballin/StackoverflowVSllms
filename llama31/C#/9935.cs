using NUnit.Framework;\nusing Moq;\n\npublic class MyObjectTests\n{\n    [Test]\n    public void Test_Event_Is_Raised()\n    {\n        // Arrange\n        var mockMonitor = new Mock<IMyMonitor>();\n        var myObject = new MyObject();\n\n        // Act\n        myObject.DoSomethingThatRaisesEvent();\n\n        // Assert\n        mockMonitor.Verify(m => m.EventRaised(It.IsAny<MyEventArgs>()), Times.Once);\n    }\n\n    [Test]\n    public void Test_Event_Arguments_Are_Correct()\n    {\n        // Arrange\n        var mockMonitor = new Mock<IMyMonitor>();\n        var myObject = new MyObject();\n\n        // Act\n        myObject.DoSomethingThatRaisesEvent();\n\n        // Assert\n        mockMonitor.Verify(m => m.EventRaised(It.Is<MyEventArgs>(e => e.Data == "ExpectedData")), Times.Once);\n    }\n}\n\npublic interface IMyMonitor\n{\n    void EventRaised(MyEventArgs args);\n}\n\npublic class MyEventArgs : EventArgs\n{\n    public string Data { get; set; }\n}