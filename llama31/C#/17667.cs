using System;\nusing System.Runtime.InteropServices;\n\nclass RemoteFileDeleter\n{\n    [DllImport("mpr.dll")]\n    static extern int WNetAddConnection2(ref NETRESOURCE netResource, string password, string userName, int flags);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct NETRESOURCE\n    {\n        public int dwScope;\n        public int dwType;\n        public int dwDisplayType;\n        public int dwUsage;\n        [MarshalAs(UnmanagedType.LPStr)]\n        public string lpLocalName;\n        [MarshalAs(UnmanagedType.LPStr)]\n        public string lpRemoteName;\n        [MarshalAs(UnmanagedType.LPStr)]\n        public string lpComment;\n        [MarshalAs(UnmanagedType.LPStr)]\n        public string lpProvider;\n    }\n\n    static void Main(string[] args)\n    {\n        string remoteDirectory = @"\\remoteComputer\share\directory";\n        string localDriveLetter = @"Z:\";\n\n        NETRESOURCE netResource = new NETRESOURCE();\n        netResource.dwType = 1; // RESOURCETYPE_ANY\n        netResource.lpLocalName = localDriveLetter;\n        netResource.lpRemoteName = remoteDirectory;\n\n        int result = WNetAddConnection2(ref netResource, null, null, 0);\n        if (result != 0)\n        {\n            Console.WriteLine("Error mapping remote directory: " + result);\n            return;\n        }\n\n        // Now you can use the DirectoryInfo and FileInfo classes to delete files\n        DirectoryInfo di = new DirectoryInfo(localDriveLetter);\n        FileInfo[] fi = di.GetFiles("*.xml");\n\n        foreach (FileInfo f in fi)\n        {\n            try\n            {\n                Console.WriteLine(f.FullName);\n                f.Delete();\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.ToString());\n            }\n        }\n\n        // Don't forget to disconnect the remote directory when you're done\n        WNetCancelConnection2(localDriveLetter, 0, true);\n    }\n}