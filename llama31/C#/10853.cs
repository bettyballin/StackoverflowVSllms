using System;\nusing System.Collections.Generic;\nusing System.Data.SqlClient;\nusing System.Transactions;\n\npublic class NewsInserter\n{\n    private readonly Dictionary<int, string> _tagsCache;\n\n    public NewsInserter()\n    {\n        _tagsCache = new Dictionary<int, string>();\n        using (var connection = new SqlConnection("your_connection_string"))\n        {\n            connection.Open();\n            using (var command = new SqlCommand("SELECT ID, Tag FROM Tags", connection))\n            {\n                using (var reader = command.ExecuteReader())\n                {\n                    while (reader.Read())\n                    {\n                        _tagsCache.Add(reader.GetInt32(0), reader.GetString(1));\n                    }\n                }\n            }\n        }\n    }\n\n    public void BulkInsertNews(List<NewsItem> newsItems)\n    {\n        using (var transaction = new TransactionScope())\n        {\n            using (var connection = new SqlConnection("your_connection_string"))\n            {\n                connection.Open();\n                foreach (var newsItem in newsItems)\n                {\n                    int tagId;\n                    if (!_tagsCache.TryGetValue(newsItem.Tag, out tagId))\n                    {\n                        // Insert new tag and retrieve ID\n                        using (var command = new SqlCommand("INSERT INTO Tags (Tag) VALUES (@Tag); SELECT SCOPE_IDENTITY()", connection))\n                        {\n                            command.Parameters.AddWithValue("@Tag", newsItem.Tag);\n                            tagId = (int)command.ExecuteScalar();\n                            _tagsCache.Add(tagId, newsItem.Tag);\n                        }\n                    }\n\n                    // Insert news item\n                    using (var command = new SqlCommand("INSERT INTO News (Title, TagID) VALUES (@Title, @TagID)", connection))\n                    {\n                        command.Parameters.AddWithValue("@Title", newsItem.Title);\n                        command.Parameters.AddWithValue("@TagID", tagId);\n                        command.ExecuteNonQuery();\n                    }\n                }\n            }\n            transaction.Complete();\n        }\n    }\n}\n\npublic class NewsItem\n{\n    public string Title { get; set; }\n    public string Tag { get; set; }\n}