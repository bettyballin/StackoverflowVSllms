using System;\nusing System.Runtime.InteropServices;\n\nclass IconExtractor\n{\n    [DllImport("shell32.dll")]\n    static extern int SHGetFileInfo(string pszPath, uint dwFileAttributes, ref SHFILEINFO psfi, uint cbFileInfo, uint uFlags);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct SHFILEINFO\n    {\n        public IntPtr hIcon;\n        public int iIcon;\n        public uint dwAttributes;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)]\n        public string szDisplayName;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 80)]\n        public string szTypeName;\n    }\n\n    public static IntPtr GetIcon(string filePath)\n    {\n        SHFILEINFO info = new SHFILEINFO();\n        uint flags = 0x100 | 0x00000800; // SHGFI_ICON | SHGFI_USEFILEATTRIBUTES\n\n        int result = SHGetFileInfo(filePath, 0, ref info, (uint)Marshal.SizeOf(info), flags);\n\n        if (result != 0)\n        {\n            return info.hIcon;\n        }\n        else\n        {\n            return IntPtr.Zero;\n        }\n    }\n}