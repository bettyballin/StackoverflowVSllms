// Create a new session for each client\npublic class ClientSessionManager\n{\n    public ISession CreateSession(Client client)\n    {\n        return sessionFactory.OpenSession();\n    }\n}\n\n// Periodically flush and commit the session\npublic class SessionFlusher\n{\n    public void FlushSession(ISession session)\n    {\n        session.Flush();\n        session.Commit();\n    }\n}\n\n// Use transactions for bulk updates\npublic class BulkUpdateService\n{\n    public void UpdateEntities(ISession session, IEnumerable<Entity> entities)\n    {\n        using (var transaction = session.BeginTransaction())\n        {\n            foreach (var entity in entities)\n            {\n                session.Update(entity);\n            }\n            transaction.Commit();\n        }\n    }\n}