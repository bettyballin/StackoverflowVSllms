using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Outlook = Microsoft.Office.Interop.Outlook;\n\npublic class EmbeddedImageMail\n{\n    public void SendMail(string to, string subject, string htmlBody)\n    {\n        Outlook.Application olkApp = new Outlook.Application();\n        Outlook.MailItem objMail = (Outlook.MailItem)olkApp.CreateItem(Outlook.OlItemType.olMailItem);\n\n        objMail.To = to;\n        objMail.Subject = subject;\n\n        // Replace image links with cid references\n        List<string> imagePaths = new List<string>();\n        htmlBody = ReplaceImageLinks(htmlBody, imagePaths);\n\n        // Add images as attachments with cid\n        for (int i = 0; i < imagePaths.Count; i++)\n        {\n            string imagePath = imagePaths[i];\n            Outlook.Attachment attachment = objMail.Attachments.Add(imagePath, Outlook.OlAttachmentType.olByValue);\n            attachment.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/proptag/0x3712001E", $"image{i}");\n        }\n\n        objMail.HTMLBody = htmlBody;\n\n        objMail.Send();\n    }\n\n    private string ReplaceImageLinks(string htmlBody, List<string> imagePaths)\n    {\n        string pattern = @"<img\s+src=""([^""]+)""\s+width=""(\d+)""\s+height=""(\d+)""\s+alt=""([^""]+)""\s*>";\n        MatchCollection matches = Regex.Matches(htmlBody, pattern);\n\n        for (int i = 0; i < matches.Count; i++)\n        {\n            Match match = matches[i];\n            string imagePath = match.Groups[1].Value;\n            string cid = $"cid:image{i}";\n\n            // Add image path to list\n            imagePaths.Add(imagePath);\n\n            // Replace image link with cid reference\n            htmlBody = htmlBody.Replace(match.Value, $"<img src=\"{cid}\" width=\"{match.Groups[2].Value}\" height=\"{match.Groups[3].Value}\" alt=\"{match.Groups[4].Value}\">");\n        }\n\n        return htmlBody;\n    }\n}