using System;\nusing System.Runtime.InteropServices;\n\npublic class WindowsHook\n{\n    [DllImport("user32")]\n    private static extern IntPtr SetWindowsHookEx(int hookType, HookProc lpfn, IntPtr hMod, uint dwThreadId);\n\n    [DllImport("user32")]\n    private static extern bool UnhookWindowsHookEx(IntPtr hhk);\n\n    [DllImport("user32")]\n    private static extern IntPtr CallNextHookEx(IntPtr hhk, int nCode, IntPtr wParam, IntPtr lParam);\n\n    private const int WH_CBT = 5;\n\n    private delegate int HookProc(int nCode, IntPtr wParam, IntPtr lParam);\n\n    private static HookProc _hookProc;\n\n    public static void InstallHook()\n    {\n        _hookProc = new HookProc(HookCallback);\n        IntPtr hMod = IntPtr.Zero;\n        SetWindowsHookEx(WH_CBT, _hookProc, hMod, 0);\n    }\n\n    public static void UninstallHook()\n    {\n        UnhookWindowsHookEx(IntPtr.Zero);\n    }\n\n    private static int HookCallback(int nCode, IntPtr wParam, IntPtr lParam)\n    {\n        if (nCode == 3) // HCBT_CREATEWND\n        {\n            // Filter out the unwanted dialog boxes\n            if (Marshal.PtrToStringAuto(wParam) == "Dialog")\n            {\n                return 1; // Block the dialog box creation\n            }\n        }\n        return CallNextHookEx(IntPtr.Zero, nCode, wParam, lParam);\n    }\n}