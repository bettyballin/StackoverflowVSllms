using System.Collections.Generic;\nusing System.Linq;\n\npublic class Class\n{\n    public int IDLinea { get; set; }\n    public int Posizione { get; set; }\n}\n\npublic List<List<Class>> GetDistinctLists(List<List<Class>> lists)\n{\n    return lists\n        .GroupBy(l => string.Join(",", l.OrderBy(c => c.IDLinea).Select(c => $"{c.IDLinea}_{c.Posizione}")))\n        .Select(g => g.First())\n        .ToList();\n}\n\n// Example usage:\nList<List<Class>> L = new List<List<Class>>();\n\nvar A = new List<Class>\n{\n    new Class { IDLinea = 1, Posizione = 5 },\n    new Class { IDLinea = 2, Posizione = 1 }\n};\nL.Add(A);\n\nvar B = new List<Class>\n{\n    new Class { IDLinea = 1, Posizione = 3 },\n    new Class { IDLinea = 2, Posizione = 1 }\n};\nL.Add(B);\n\nvar D = new List<Class>\n{\n    new Class { IDLinea = 4, Posizione = 1 },\n    new Class { IDLinea = 2, Posizione = 4 }\n};\nL.Add(D);\n\nList<List<Class>> result = GetDistinctLists(L);\n// result will contain lists A and D