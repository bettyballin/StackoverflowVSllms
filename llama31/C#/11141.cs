using System;\nusing System.Dynamic;\nusing System.Reflection;\n\npublic class DynamicClass\n{\n    public static object CreateDynamicClass(string className)\n    {\n        // Create a new dynamic object\n        dynamic expando = new ExpandoObject();\n\n        // Add properties to the object\n        var dictionary = (IDictionary<string, object>)expando;\n        dictionary[className] = new ExpandoObject();\n\n        return expando;\n    }\n\n    public static void AddProperty(object instance, string propertyName, object value)\n    {\n        // Get the dictionary from the ExpandoObject\n        var dictionary = (IDictionary<string, object>)instance;\n\n        // Add a new property to the dictionary\n        dictionary[propertyName] = value;\n    }\n\n    public static object GetProperty(object instance, string propertyName)\n    {\n        // Get the dictionary from the ExpandoObject\n        var dictionary = (IDictionary<string, object>)instance;\n\n        // Get the property value from the dictionary\n        return dictionary[propertyName];\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        // Create a dynamic class\n        var dynamicClass = DynamicClass.CreateDynamicClass("MyDynamicClass");\n\n        // Add properties to the class\n        DynamicClass.AddProperty(dynamicClass, "FirstName", "John");\n        DynamicClass.AddProperty(dynamicClass, "LastName", "Doe");\n\n        // Get property values\n        var firstName = DynamicClass.GetProperty(dynamicClass, "FirstName");\n        var lastName = DynamicClass.GetProperty(dynamicClass, "LastName");\n\n        Console.WriteLine($"First Name: {firstName}, Last Name: {lastName}");\n    }\n}