using System.Runtime.InteropServices;\nusing System.Security.Principal;\n\n[DllImport("advapi32.dll", SetLastError = true)]\nstatic extern bool OpenProcessToken(IntPtr processHandle, uint desiredAccess, out IntPtr tokenHandle);\n\n[DllImport("advapi32.dll", SetLastError = true)]\nstatic extern bool GetTokenInformation(IntPtr tokenHandle, uint tokenInfoClass, IntPtr tokenInfo, uint tokenInfoLength, out uint returnLength);\n\nstring GetProcessOwner(int processId)\n{\n    IntPtr tokenHandle;\n    if (!OpenProcessToken(Process.GetProcessById(processId).Handle, 8, out tokenHandle))\n    {\n        throw new Exception("Failed to open process token");\n    }\n\n    try\n    {\n        uint tokenInfoLength;\n        IntPtr tokenInfo = Marshal.AllocHGlobal(256);\n        if (!GetTokenInformation(tokenHandle, 12, tokenInfo, 256, out tokenInfoLength))\n        {\n            throw new Exception("Failed to get token information");\n        }\n\n        string userName = Marshal.PtrToStringAuto(tokenInfo);\n        Marshal.FreeHGlobal(tokenInfo);\n        return userName;\n    }\n    finally\n    {\n        CloseHandle(tokenHandle);\n    }\n}