using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Xml.Serialization;\n\npublic class Person\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n}\n\npublic class Program\n{\n    private static byte[] key = new byte[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08 };\n    private static byte[] iv = new byte[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08 };\n\n    public static void Main()\n    {\n        Person person = new Person { Name = "John Doe", Age = 30 };\n\n        using (FileStream fs = new FileStream("person.dat", FileMode.Create))\n        {\n            EncryptAndSerialize(person, fs);\n        }\n\n        using (FileStream fs = new FileStream("person.dat", FileMode.Open))\n        {\n            Person deserializedPerson = DecryptAndDeserialize(fs);\n            Console.WriteLine($"Name: {deserializedPerson.Name}, Age: {deserializedPerson.Age}");\n        }\n    }\n\n    public static void EncryptAndSerialize(Person person, Stream stream)\n    {\n        using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())\n        {\n            des.Key = key;\n            des.IV = iv;\n\n            ICryptoTransform encryptor = des.CreateEncryptor(des.Key, des.IV);\n            using (CryptoStream cryptoStream = new CryptoStream(stream, encryptor, CryptoStreamMode.Write))\n            {\n                XmlSerializer serializer = new XmlSerializer(typeof(Person));\n                serializer.Serialize(cryptoStream, person);\n            }\n        }\n    }\n\n    public static Person DecryptAndDeserialize(Stream stream)\n    {\n        using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())\n        {\n            des.Key = key;\n            des.IV = iv;\n\n            ICryptoTransform decryptor = des.CreateDecryptor(des.Key, des.IV);\n            using (CryptoStream cryptoStream = new CryptoStream(stream, decryptor, CryptoStreamMode.Read))\n            {\n                XmlSerializer serializer = new XmlSerializer(typeof(Person));\n                return (Person)serializer.Deserialize(cryptoStream);\n            }\n        }\n    }\n}