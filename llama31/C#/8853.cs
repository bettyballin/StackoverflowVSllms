using System;\nusing System.Runtime.InteropServices;\nusing System.Xml;\n\nnamespace SmsArchiver\n{\n    class Program\n    {\n        [DllImport("rapi.dll")]\n        static extern IntPtr CeOpenDatabase(IntPtr pDatabase, uint dwDesiredAccess);\n\n        [DllImport("rapi.dll")]\n        static extern IntPtr CeReadRecord(IntPtr hDatabase, uint dwRecordId);\n\n        [DllImport("rapi.dll")]\n        static extern void CeCloseDatabase(IntPtr hDatabase);\n\n        static void Main(string[] args)\n        {\n            // Connect to the device\n            IntPtr hDatabase = CeOpenDatabase(IntPtr.Zero, 0);\n\n            // Open the SMS database\n            IntPtr hSmsDatabase = CeOpenDatabase(new IntPtr(0x80040001), 0); // 0x80040001 is the GUID for the SMS database\n\n            // Read SMS records\n            uint recordId = 0;\n            while (true)\n            {\n                IntPtr pRecord = CeReadRecord(hSmsDatabase, recordId);\n                if (pRecord == IntPtr.Zero) break;\n\n                // Process the SMS record\n                byte[] recordData = new byte[Marshal.SizeOf(typeof(SmsRecord))];\n                Marshal.Copy(pRecord, recordData, 0, recordData.Length);\n                SmsRecord record = (SmsRecord)Marshal.PtrToStructure(pRecord, typeof(SmsRecord));\n\n                // Create an XML node for the SMS record\n                XmlDocument xmlDoc = new XmlDocument();\n                XmlElement xmlRecord = xmlDoc.CreateElement("SmsRecord");\n                xmlRecord.SetAttribute("Id", record.Id.ToString());\n                xmlRecord.SetAttribute("Sender", record.Sender);\n                xmlRecord.SetAttribute("Text", record.Text);\n\n                // Add the XML node to the document\n                xmlDoc.AppendChild(xmlRecord);\n\n                // Save the XML document to a file\n                xmlDoc.Save("sms_archive.xml");\n\n                // Release resources\n                Marshal.FreeHGlobal(pRecord);\n\n                recordId++;\n            }\n\n            // Close the SMS database\n            CeCloseDatabase(hSmsDatabase);\n\n            // Close the device connection\n            CeCloseDatabase(hDatabase);\n        }\n    }\n\n    [StructLayout(LayoutKind.Sequential, Pack = 1)]\n    public struct SmsRecord\n    {\n        public uint Id;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 256)]\n        public string Sender;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 1024)]\n        public string Text;\n    }\n}