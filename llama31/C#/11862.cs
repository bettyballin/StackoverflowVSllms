public class CustomBasicAuthModule : IHttpModule\n{\n    public void Init(HttpApplication context)\n    {\n        context.AuthenticateRequest += new EventHandler(OnAuthenticateRequest);\n    }\n\n    public void Dispose() { }\n\n    private void OnAuthenticateRequest(object sender, EventArgs e)\n    {\n        HttpApplication app = (HttpApplication)sender;\n        HttpRequest request = app.Request;\n        HttpResponse response = app.Response;\n\n        string authHeader = request.Headers["Authorization"];\n        if (authHeader == null || !authHeader.StartsWith("Basic "))\n        {\n            response.StatusCode = 401;\n            response.StatusDescription = "Unauthorized";\n            response.Headers.Add("WWW-Authenticate", "Basic realm=\"My Realm\"");\n            response.End();\n            return;\n        }\n\n        string[] credentials = authHeader.Substring(6).Split(':');\n        string username = credentials[0].Trim();\n        string password = credentials[1].Trim();\n\n        if (username == "foo" && password == "bar")\n        {\n            // Set Thread.CurrentPrincipal\n            IPrincipal principal = new GenericPrincipal(new GenericIdentity(username), new string[] { });\n            Thread.CurrentThread.SetPrincipal(principal);\n        }\n        else\n        {\n            response.StatusCode = 401;\n            response.StatusDescription = "Unauthorized";\n            response.End();\n        }\n    }\n}