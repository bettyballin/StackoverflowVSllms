public class UInt32ToLongUserType : IUserType\n{\n    public object Assemble(object cached, ISessionImplementor session, object owner)\n    {\n        return cached;\n    }\n\n    public object DeepCopy(object value)\n    {\n        return value;\n    }\n\n    public object Disassemble(object value, ISessionImplementor session)\n    {\n        return value;\n    }\n\n    public int GetHashCode(object x)\n    {\n        return x.GetHashCode();\n    }\n\n    public bool IsMutable\n    {\n        get { return false; }\n    }\n\n    public object NullSafeGet(IDataReader rs, string[] names, ISessionImplementor session, object owner)\n    {\n        var value = rs[names[0]];\n        return value == DBNull.Value ? (uint)0 : (uint)(long)value;\n    }\n\n    public void NullSafeSet(IDbCommand cmd, object value, int index, ISessionImplementor session)\n    {\n        var uintValue = (uint)value;\n        var longValue = (long)uintValue;\n        cmd.Parameters[index].Value = longValue;\n    }\n\n    public object Replace(object original, object target, ISessionImplementor session, object owner)\n    {\n        return original;\n    }\n\n    public Type ReturnedType\n    {\n        get { return typeof(uint); }\n    }\n\n    public SqlType[] SqlTypes\n    {\n        get { return new[] { new SqlType(DbType.Int64) }; }\n    }\n}