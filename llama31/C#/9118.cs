class MyClass\n{\n    public Int32 SomeValue1 = 1;\n    public Int32 SomeValue2 = 25;\n\n    public override bool Equals(object obj)\n    {\n        return Equals(obj as MyClass);\n    }\n\n    public bool Equals(MyClass obj)\n    {\n        return obj != null\n            && SomeValue1.Equals(obj.SomeValue1)\n            && SomeValue2.Equals(obj.SomeValue2);\n    }\n\n    public override int GetHashCode()\n    {\n        return (SomeValue1, SomeValue2).GetHashCode();\n    }\n}\n\nclass MyDerivedClass : MyClass\n{\n    public Int32 YetAnotherValue = 2;\n\n    public override bool Equals(object obj)\n    {\n        return Equals(obj as MyDerivedClass);\n    }\n\n    public bool Equals(MyDerivedClass obj)\n    {\n        return base.Equals(obj)\n            && YetAnotherValue.Equals(obj?.YetAnotherValue);\n    }\n\n    public override int GetHashCode()\n    {\n        return (base.GetHashCode(), YetAnotherValue).GetHashCode();\n    }\n}