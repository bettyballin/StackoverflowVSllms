using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryption\n{\n    private static readonly byte[] Key = new byte[] { /* your secret key here */ };\n    private static readonly byte[] IV = new byte[] { /* your initialization vector here */ };\n\n    public static string Encrypt(string plainText)\n    {\n        // Create an AES object\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            aes.Mode = CipherMode.CBC;\n            aes.Padding = PaddingMode.PKCS7;\n\n            // Create an encryptor object\n            ICryptoTransform encryptor = aes.CreateEncryptor();\n\n            // Create a MemoryStream to hold the encrypted data\n            using (MemoryStream ms = new MemoryStream())\n            {\n                // Create a CryptoStream to perform the encryption\n                using (CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    // Write the plain text to the CryptoStream\n                    using (StreamWriter sw = new StreamWriter(cs))\n                    {\n                        sw.Write(plainText);\n                    }\n\n                    // Get the encrypted data\n                    byte[] encryptedData = ms.ToArray();\n\n                    // Return the encrypted data as a base64-encoded string\n                    return Convert.ToBase64String(encryptedData);\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string encryptedText)\n    {\n        // Create an AES object\n        using (Aes aes = Aes.Create())\n        {\n            aes.Key = Key;\n            aes.IV = IV;\n            aes.Mode = CipherMode.CBC;\n            aes.Padding = PaddingMode.PKCS7;\n\n            // Create a decryptor object\n            ICryptoTransform decryptor = aes.CreateDecryptor();\n\n            // Create a MemoryStream to hold the decrypted data\n            using (MemoryStream ms = new MemoryStream())\n            {\n                // Create a CryptoStream to perform the decryption\n                using (CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Write))\n                {\n                    // Write the encrypted data to the CryptoStream\n                    byte[] encryptedData = Convert.FromBase64String(encryptedText);\n                    cs.Write(encryptedData, 0, encryptedData.Length);\n\n                    // Get the decrypted data\n                    byte[] decryptedData = ms.ToArray();\n\n                    // Return the decrypted data as a string\n                    return Encoding.UTF8.GetString(decryptedData);\n                }\n            }\n        }\n    }\n}