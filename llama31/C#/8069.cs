using System;\nusing System.Runtime.InteropServices;\n\nclass ComDllPath\n{\n    [DllImport("mscoree.dll")]\n    static extern int CLRCreateInstance(ref Guid clsid, ref Guid riid, out IntPtr ptr);\n\n    static void Main(string[] args)\n    {\n        Guid clsid = new Guid("your_com_class_guid");\n        Guid riid = new Guid("00000000-0000-0000-0000-000000000000");\n        IntPtr ptr;\n\n        int result = CLRCreateInstance(ref clsid, ref riid, out ptr);\n\n        if (result == 0)\n        {\n            string dllPath = GetDllPath(ptr);\n            Console.WriteLine(dllPath);\n        }\n    }\n\n    static string GetDllPath(IntPtr ptr)\n    {\n        string dllPath = "";\n        IntPtr pUnk = IntPtr.Zero;\n\n        try\n        {\n            pUnk = Marshal.GetIUnknownForObject(ptr);\n            IntPtr pClsid = Marshal.ReadIntPtr(pUnk, 4);\n            Guid clsid = (Guid)Marshal.PtrToStructure(pClsid, typeof(Guid));\n\n            using (RegistryKey regKey = Registry.ClassesRoot.OpenSubKey(@"CLSID\" + clsid.ToString("B")))\n            {\n                if (regKey != null)\n                {\n                    string inprocServer32 = (string)regKey.GetValue("InprocServer32");\n\n                    if (!string.IsNullOrEmpty(inprocServer32))\n                    {\n                        dllPath = inprocServer32;\n                    }\n                }\n            }\n        }\n        finally\n        {\n            if (pUnk != IntPtr.Zero)\n            {\n                Marshal.Release(pUnk);\n            }\n        }\n\n        return dllPath;\n    }\n}