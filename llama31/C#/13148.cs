// Controller\npublic class UserController : Controller\n{\n    private readonly IUserService _userService;\n\n    public UserController(IUserService userService)\n    {\n        _userService = userService;\n    }\n\n    [HttpPost]\n    public IActionResult CreateUser(UserModel model)\n    {\n        if (!ModelState.IsValid)\n        {\n            return View(model);\n        }\n\n        _userService.CreateUser(model);\n        return RedirectToAction("Index");\n    }\n}\n\n// Service\npublic class UserService : IUserService\n{\n    private readonly IUserRepository _userRepository;\n\n    public UserService(IUserRepository userRepository)\n    {\n        _userRepository = userRepository;\n    }\n\n    public void CreateUser(UserModel model)\n    {\n        // Business logic here\n        if (model.Username.Length < 3)\n        {\n            throw new ValidationException("Username must be at least 3 characters long");\n        }\n\n        _userRepository.CreateUser(model);\n    }\n}\n\n// Repository\npublic class UserRepository : IUserRepository\n{\n    public void CreateUser(UserModel model)\n    {\n        // Data access logic here\n        using (var dbContext = new MyDbContext())\n        {\n            dbContext.Users.Add(model);\n            dbContext.SaveChanges();\n        }\n    }\n}