import xml.etree.ElementTree as ET\nimport math\n\ndef calculate_distance(lat1, lon1, lat2, lon2):\n    # Radius of the Earth in kilometers\n    R = 6371.0\n\n    # Convert degrees to radians\n    lat_rad1 = math.radians(lat1)\n    lon_rad1 = math.radians(lon1)\n    lat_rad2 = math.radians(lat2)\n    lon_rad2 = math.radians(lon2)\n\n    # Haversine formula\n    dlon = lon_rad2 - lon_rad1\n    dlat = lat_rad2 - lat_rad1\n    a = math.sin(dlat / 2) ** 2 + math.cos(lat_rad1) * math.cos(lat_rad2) * math.sin(dlon / 2) ** 2\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n    distance = R * c\n\n    return distance\n\ndef parse_gpx(file_path):\n    tree = ET.parse(file_path)\n    root = tree.getroot()\n\n    track_points = []\n    for trkpt in root.findall('.//trkpt'):\n        lat = float(trkpt.attrib['lat'])\n        lon = float(trkpt.attrib['lon'])\n        track_points.append((lat, lon))\n\n    distance = 0.0\n    for i in range(1, len(track_points)):\n        lat1, lon1 = track_points[i - 1]\n        lat2, lon2 = track_points[i]\n        distance += calculate_distance(lat1, lon1, lat2, lon2)\n\n    return distance\n\n# Example usage:\nfile_path = 'path/to/your/gpx/file.gpx'\ndistance = parse_gpx(file_path)\nprint('Distance covered:', distance, 'km')