import networkx as nx\nimport random\n\ndef six_degrees_of_separation(graph, num_start_nodes):\n    results = []\n    for _ in range(num_start_nodes):\n        start_node = random.choice(list(graph.nodes()))\n        visited = set()\n        queue = [(start_node, 0)]  # (node, degree)\n        while queue:\n            node, degree = queue.pop(0)\n            if node not in visited:\n                visited.add(node)\n                results.append(degree)\n                for neighbor in graph.neighbors(node):\n                    queue.append((neighbor, degree + 1))\n    return results\n\n# Load your graph data into a NetworkX graph object\ngraph = nx.read_edgelist("your_data.txt", create_using=nx.Graph())\n\nnum_start_nodes = 1000\nresults = six_degrees_of_separation(graph, num_start_nodes)\n\n# Analyze the results (e.g., calculate the average degree of separation)\naverage_degree = sum(results) / len(results)\nprint("Average degree of separation:", average_degree)