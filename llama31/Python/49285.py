import random\n\ndef generate_keypair(p, q):\n    n = p * q\n    phi = (p-1) * (q-1)\n\n    # Choose e such that 1 < e < phi and gcd(e, phi) = 1\n    e = random.randrange(1, phi)\n    while gcd(e, phi) != 1:\n        e = random.randrange(1, phi)\n\n    # Compute d such that d*e = 1 (mod phi)\n    d = mod_inverse(e, phi)\n\n    return ((e, n), (d, n))\n\ndef encrypt(pk, plaintext):\n    key, n = pk\n    cipher = [pow(ord(char), key, n) for char in plaintext]\n    return cipher\n\ndef decrypt(pk, ciphertext):\n    key, n = pk\n    plain = [chr(pow(char, key, n)) for char in ciphertext]\n    return ''.join(plain)\n\n# Example usage\np = 61\nq = 53\npublic_key, private_key = generate_keypair(p, q)\nplaintext = "Hello, World!"\nciphertext = encrypt(public_key, plaintext)\ndecrypted_text = decrypt(private_key, ciphertext)\n\nprint("Plaintext:", plaintext)\nprint("Ciphertext:", ciphertext)\nprint("Decrypted text:", decrypted_text)