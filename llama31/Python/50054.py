import hashlib\nimport random\n\ndef generate_verification_code(secret_key, num_digits=6):\n    # Generate a random number\n    random_num = str(random.randint(10**(num_digits-1), 10**num_digits - 1))\n\n    # Hash the random number and secret key\n    hash_object = hashlib.sha256((random_num + secret_key).encode())\n    hash_hex = hash_object.hexdigest()\n\n    # Take a subset of the hash\n    verification_code = hash_hex[:num_digits]\n\n    # Calculate a check digit using the Luhn algorithm\n    def luhn_check_digit(code):\n        sum = 0\n        for i, digit in enumerate(code[::-1]):\n            if i % 2 == 0:\n                digit = int(digit) * 2\n                if digit > 9:\n                    digit -= 9\n            sum += int(digit)\n        return (10 - sum % 10) % 10\n\n    check_digit = luhn_check_digit(verification_code)\n\n    return verification_code + str(check_digit)\n\nsecret_key = "your_secret_key_here"\nverification_code = generate_verification_code(secret_key)\nprint(verification_code)