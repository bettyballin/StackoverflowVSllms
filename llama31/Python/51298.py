def reconstruct_tree(preorder, postorder):\n    if not preorder or not postorder:\n        return None\n\n    root = preorder[0]\n    left_preorder = preorder[1:]\n    left_postorder = []\n    right_postorder = []\n\n    i = 0\n    while postorder[i] != root:\n        left_postorder.append(postorder[i])\n        i += 1\n\n    right_postorder = postorder[i+1:]\n\n    left_tree = reconstruct_tree(left_preorder, left_postorder)\n    right_tree = reconstruct_tree(right_postorder, right_postorder)\n\n    return {'value': root, 'children': [left_tree, right_tree]}\n\n# Example usage:\npreorder = [1, 2, 3, 4, 5, 6]\npostorder = [3, 4, 2, 6, 5, 1]\ntree = reconstruct_tree(preorder, postorder)\nprint(tree)