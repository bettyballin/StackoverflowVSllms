def min_cost_items(items, min_value):\n    dp = [[float('inf')] * (min_value + 1) for _ in range(len(items) + 1)]\n    dp[0][0] = 0\n\n    for i in range(1, len(items) + 1):\n        value, cost = items[i - 1]\n        for j in range(min_value + 1):\n            if j < value:\n                dp[i][j] = dp[i - 1][j]\n            else:\n                dp[i][j] = min(dp[i - 1][j], dp[i - 1][j - value] + cost)\n\n    # Reconstruct the solution\n    result = []\n    i, j = len(items), min_value\n    while i > 0 and j > 0:\n        if dp[i][j] != dp[i - 1][j]:\n            result.append(items[i - 1])\n            j -= items[i - 1][0]\n        i -= 1\n\n    return result\n\nitems = [(20, 11), (7, 5), (1, 2)]\nmin_value = 30\nprint(min_cost_items(items, min_value))  # Output: [(20, 11), (7, 5), (7, 5)]