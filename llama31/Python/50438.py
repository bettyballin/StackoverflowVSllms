from collections import defaultdict\n\ndef topological_sort(graph):\n    visited = set()\n    ordering = []\n\n    def dfs(node):\n        visited.add(node)\n        for neighbor in graph[node]:\n            if neighbor not in visited:\n                dfs(neighbor)\n        ordering.append(node)\n\n    for node in graph:\n        if node not in visited:\n            dfs(node)\n\n    return ordering[::-1]\n\n# Example usage:\ngraph = {\n    'A': ['B', 'C'],\n    'B': ['D'],\n    'C': ['D'],\n    'D': []\n}\n\nsorted_order = topological_sort(graph)\nprint(sorted_order)  # Output: ['A', 'C', 'B', 'D']