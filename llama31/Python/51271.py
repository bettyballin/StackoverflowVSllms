def count_independent_sets(graph):\n    def count_independent_sets_recursive(graph, current_set, current_node):\n        if current_node == len(graph):\n            return 1\n        else:\n            count = 0\n            # Try including the current node in the set\n            if not any(graph[current_node][i] for i in current_set):\n                count += count_independent_sets_recursive(graph, current_set + [current_node], current_node + 1)\n            # Try excluding the current node from the set\n            count += count_independent_sets_recursive(graph, current_set, current_node + 1)\n            return count\n\n    return count_independent_sets_recursive(graph, [], 0)\n\n# Example usage:\ngraph = [\n    [False, True, False, False, False, False, False, False, False, False, False, False],\n    [True, False, False, False, False, False, False, False, False, False, False, False],\n    [False, False, False, True, False, False, False, False, False, False, False, False],\n    [False, False, True, False, False, False, False, False, False, False, False, False],\n    [False, False, False, False, False, False, False, False, False, False, False, False],\n    [False, False, False, False, False, False, True, False, False, False, False, False],\n    [False, False, False, False, False, True, False, False, False, False, False, False],\n    [False, False, False, False, False, False, False, False, True, False, False, False],\n    [False, False, False, False, False, False, False, True, False, False, False, False],\n    [False, False, False, False, False, False, False, False, False, False, False, False],\n    [False, False, False, False, False, False, False, False, False, False, False, False],\n    [False, False, False, False, False, False, False, False, False, False, False, False]\n]\n\nprint(count_independent_sets(graph))