def is_internal(triangle, polygon):\n    # Count the number of intersections between triangle edges and polygon edges\n    intersections = 0\n    for edge in triangle:\n        for poly_edge in polygon:\n            if intersect(edge, poly_edge):\n                intersections += 1\n\n    # If the number of intersections is odd, the triangle is internal\n    return intersections % 2 != 0\n\ndef intersect(edge1, edge2):\n    # Check if two line segments intersect\n    p1, q1 = edge1\n    p2, q2 = edge2\n    def ccw(A, B, C):\n        return (C[1]-A[1]) * (B[0]-A[0]) > (B[1]-A[1]) * (C[0]-A[0])\n    return ccw(p1, q1, p2) != ccw(p1, q1, q2) and ccw(p2, q2, p1) != ccw(p2, q2, q1)