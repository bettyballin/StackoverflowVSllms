import numpy as np\n\nclass WeightedMovingAverage:\n    def __init__(self, window_size, weights):\n        self.window_size = window_size\n        self.weights = weights\n        self.orders = []\n\n    def update(self, order):\n        self.orders.append(order)\n        if len(self.orders) > self.window_size:\n            self.orders.pop(0)\n\n    def calculate_price(self):\n        weighted_sum = sum([order * weight for order, weight in zip(self.orders, self.weights)])\n        return weighted_sum / sum(self.weights)\n\n# Example usage:\nwma = WeightedMovingAverage(window_size=10, weights=[0.1, 0.2, 0.3, 0.2, 0.1, 0.05, 0.05, 0.05, 0.05, 0.05])\norders = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\nfor order in orders:\n    wma.update(order)\n    print(wma.calculate_price())