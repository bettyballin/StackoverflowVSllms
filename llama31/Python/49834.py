import math\n\ndef sat_to_bemp(clauses):\n    # Create a Boolean expression that is the conjunction of all clauses\n    expression = ' && '.join([' || '.join([f'x{i}' if polarity else f'!x{i}' for i, polarity in enumerate(clause)]) for clause in clauses])\n    \n    # Ask whether there is an equivalent expression with at most k literals\n    k = len(clauses[0])  # number of variables\n    return expression, k