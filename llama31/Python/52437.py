import random\nimport collections\n\ndef shuffle_array(arr):\n    random.shuffle(arr)\n    return arr\n\ndef test_shuffle_array(arr, num_trials=10000):\n    # Initialize a dictionary to store the frequency of each permutation\n    frequencies = collections.defaultdict(int)\n\n    # Run the shuffle function multiple times and count the frequency of each permutation\n    for _ in range(num_trials):\n        shuffled_arr = tuple(shuffle_array(arr[:]))  # Create a copy of the array and shuffle it\n        frequencies[shuffled_arr] += 1\n\n    # Calculate the expected frequency of each permutation\n    expected_frequency = num_trials / math.factorial(len(arr))\n\n    # Check if the observed frequencies are close to the expected frequency\n    for frequency in frequencies.values():\n        assert abs(frequency - expected_frequency) < 0.1 * expected_frequency, "Frequencies are not uniformly distributed"\n\nimport math\narr = [1, 2, 3]\ntest_shuffle_array(arr)