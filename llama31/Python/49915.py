import numpy as np\n\ndef select_consecutive_features(probabilities, n):\n    """\n    Select n consecutive features with the largest sum of probabilities.\n\n    Parameters:\n    probabilities (numpy array): Normalized vector of probabilities.\n    n (int): Number of features to select.\n\n    Returns:\n    selected_features (numpy array): Indices of the selected features.\n    """\n    # Calculate the cumulative sum of probabilities\n    cum_sum = np.cumsum(probabilities)\n\n    # Calculate the sum of probabilities for each window of n consecutive features\n    window_sums = cum_sum[n:] - cum_sum[:-n]\n\n    # Find the window with the largest sum\n    max_window_sum_idx = np.argmax(window_sums)\n\n    # Select the features corresponding to the window with the largest sum\n    selected_features = np.arange(max_window_sum_idx, max_window_sum_idx + n)\n\n    return selected_features