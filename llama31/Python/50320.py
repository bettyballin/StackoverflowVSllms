import hashlib\n\ndef calculate_similarity(file1, file2, block_size=4096):\n    # Initialize hash sets\n    hashes1 = set()\n    hashes2 = set()\n\n    # Calculate hash values for each block in both files\n    with open(file1, "rb") as f1, open(file2, "rb") as f2:\n        while True:\n            block1 = f1.read(block_size)\n            block2 = f2.read(block_size)\n            if not block1 or not block2:\n                break\n            hash1 = hashlib.sha256(block1).hexdigest()\n            hash2 = hashlib.sha256(block2).hexdigest()\n            hashes1.add(hash1)\n            hashes2.add(hash2)\n\n    # Calculate Jaccard similarity\n    intersection = hashes1.intersection(hashes2)\n    union = hashes1.union(hashes2)\n    similarity = len(intersection) / len(union)\n\n    return similarity\n\n# Example usage\nsimilarity = calculate_similarity("file1.bin", "file2.bin")\nprint(f"Similarity: {similarity:.2%}")