import colorsys\nimport hashlib\n\ndef hash_to_color(value):\n    # Create a hash object\n    hash_object = hashlib.sha256()\n    hash_object.update(str(value).encode('utf-8'))\n    # Get the hash value as a hexadecimal string\n    hash_hex = hash_object.hexdigest()\n    # Convert the hash value to an integer\n    hash_int = int(hash_hex, 16)\n    # Normalize the integer to a value between 0 and 1\n    normalized_value = hash_int % 2**32 / 2**32\n    # Convert the normalized value to an HSV color\n    h = normalized_value * 360  # hue\n    s = 0.8  # saturation\n    v = 0.8  # value\n    # Convert the HSV color to RGB\n    r, g, b = colorsys.hsv_to_rgb(h/360, s, v)\n    return (r, g, b)\n\n# Example usage:\nnumbers = [123, 456, 789, 012]\ncolors = [hash_to_color(n) for n in numbers]\nprint(colors)