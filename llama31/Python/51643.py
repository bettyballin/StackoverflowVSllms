def pack_rectangles(rectangles, max_size):\n    # Sort rectangles by height in decreasing order\n    rectangles.sort(key=lambda x: x[1], reverse=True)\n    \n    bins = []\n    current_bin = {'width': 0, 'height': 0, 'rectangles': []}\n    \n    for rectangle in rectangles:\n        # Check if rectangle can fit in current bin\n        if rectangle[0] <= current_bin['width'] and rectangle[1] <= current_bin['height']:\n            current_bin['rectangles'].append(rectangle)\n        else:\n            # Start a new bin\n            bins.append(current_bin)\n            current_bin = {'width': rectangle[0], 'height': rectangle[1], 'rectangles': [rectangle]}\n    \n    # Add the last bin\n    bins.append(current_bin)\n    \n    # Find the maximum width and height of all bins\n    max_width = max(bin['width'] for bin in bins)\n    max_height = max(bin['height'] for bin in bins)\n    \n    # Round up to the nearest power of 2\n    container_width = 2 ** ((max_width - 1).bit_length())\n    container_height = 2 ** ((max_height - 1).bit_length())\n    \n    # Ensure the container size does not exceed the maximum size\n    container_width = min(container_width, max_size)\n    container_height = min(container_height, max_size)\n    \n    return container_width, container_height