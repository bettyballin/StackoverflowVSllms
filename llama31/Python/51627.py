def minimize_test_suite(actions):\n    while True:\n        # Find the step that is least likely to affect the final state\n        least_important_step = None\n        for i, action in enumerate(actions):\n            # Temporarily remove the action and check if the final state is still reached\n            temp_actions = actions[:i] + actions[i+1:]\n            if is_final_state_reached(temp_actions):\n                least_important_step = i\n                break\n\n        # If no step can be removed, stop\n        if least_important_step is None:\n            break\n\n        # Remove the least important step\n        actions.pop(least_important_step)\n\n    return actions