from pulp import LpMaximize, LpProblem, lpSum, LpVariable\n\n# Define the problem\nprob = LpProblem("Cutting_Stock_Problem", LpMaximize)\n\n# Define the variables\nx = LpVariable.dicts("Cut", range(len(smaller_lengths)), lowBound=0, cat="Integer")\n\n# Define the objective function (minimize waste)\nprob += lpSum([x[i] * smaller_lengths[i] for i in range(len(smaller_lengths))])\n\n# Define the constraints (each 5m length can be used only once)\nfor i in range(len(smaller_lengths)):\n    prob += lpSum([x[j] for j in range(len(smaller_lengths)) if smaller_lengths[j] <= 5 - smaller_lengths[i]]) <= 1\n\n# Solve the problem\nprob.solve()\n\n# Print the solution\nfor i in range(len(smaller_lengths)):\n    if x[i].value() > 0:\n        print(f"Cut {smaller_lengths[i]}m from 5m length")