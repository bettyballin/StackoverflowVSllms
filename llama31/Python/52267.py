def minimize_dfa(dfa):\n    # Create a table to store the distinguishable states\n    table = {}\n    for state in dfa.states:\n        table[state] = {}\n\n    # Iterate over the states and transitions\n    for state in dfa.states:\n        for transition in dfa.transitions[state]:\n            next_state = dfa.transitions[state][transition]\n            if next_state not in table[state]:\n                table[state][next_state] = {}\n\n    # Minimize the DFA\n    minimized_dfa = DFA()\n    for state in table:\n        for next_state in table[state]:\n            minimized_dfa.add_transition(state, next_state)\n\n    return minimized_dfa