from datetime import datetime, timedelta\nfrom airflow import DAG\nfrom airflow.operators.bash_operator import BashOperator\nfrom airflow.operators.python_operator import PythonOperator\n\ndefault_args = {\n    'owner': 'airflow',\n    'depends_on_past': False,\n    'start_date': datetime(2023, 3, 21),\n    'retries': 1,\n    'retry_delay': timedelta(minutes=5),\n}\n\ndag = DAG(\n    'example_workflow',\n    default_args=default_args,\n    schedule_interval=timedelta(days=1),\n)\n\ndef invoke_service(**kwargs):\n    # Invoke a service using a Python client\n    pass\n\ntask1 = BashOperator(\n    task_id='task1',\n    bash_command='echo "Task 1 completed"',\n    dag=dag,\n)\n\ntask2 = PythonOperator(\n    task_id='task2',\n    python_callable=invoke_service,\n    dag=dag,\n)\n\ntask3 = BashOperator(\n    task_id='task3',\n    bash_command='echo "Task 3 completed"',\n    dag=dag,\n)\n\ntask1 >> task2 >> task3