import numpy as np\n\n# Define the game matrix\ngame_matrix = np.array([\n    [-1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -1, -1, 0, 0, 0, 0, 0, 0],\n    [0, 0, -1, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, -1, -1, -1, 0, 0, 0],\n    [0, 0, 0, 0, -1, -1, -1, 0, 0],\n    [0, 0, 0, 0, 0, -1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, -1, -1, 0],\n    [0, 0, 0, 0, 0, 0, 0, -1, -1],\n    [0, 0, 0, 0, 0, 0, 0, 0, -1]\n])\n\n# Define the solution vector\nsolution_vector = np.array([-1, -1, -1, -1, -1, -1, -1, -1, -1])\n\n# Perform Gaussian elimination\nx = np.linalg.solve(game_matrix, solution_vector)\n\n# Check if the solution is valid (i.e., all elements are 0 or 1)\nif np.all(np.logical_or(x == 0, x == 1)):\n    print("Game is solvable")\nelse:\n    print("Game is not solvable")