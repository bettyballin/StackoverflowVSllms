import anytree\nfrom fuzzywuzzy import fuzz\n\n# Define two sample hierarchies\nroot1 = anytree.AnyNode(name="root")\nchild11 = anytree.AnyNode(name="child1", parent=root1)\nchild12 = anytree.AnyNode(name="child2", parent=root1)\n\nroot2 = anytree.AnyNode(name="root")\nchild21 = anytree.AnyNode(name="child1", parent=root2)\nchild22 = anytree.AnyNode(name="child3", parent=root2)\n\n# Define a function to compare two nodes\ndef compare_nodes(node1, node2):\n    similarity = fuzz.ratio(node1.name, node2.name)\n    return similarity > 80  # Adjust the threshold as needed\n\n# Compare the two hierarchies\ndef compare_hierarchies(root1, root2):\n    if not compare_nodes(root1, root2):\n        return False\n    \n    children1 = list(root1.children)\n    children2 = list(root2.children)\n    \n    # Ignore order of child nodes\n    children1.sort(key=lambda x: x.name)\n    children2.sort(key=lambda x: x.name)\n    \n    for child1, child2 in zip(children1, children2):\n        if not compare_hierarchies(child1, child2):\n            return False\n    \n    return True\n\nprint(compare_hierarchies(root1, root2))