import atexit\nimport os.path\n\ntry:\n    import readline\nexcept ImportError:\n    pass\nelse:\n    import rlcompleter\n\n    class IrlCompleter(rlcompleter.Completer):\n        def __init__(self, tab='\t'):\n            self.tab = tab\n            rlcompleter.Completer.__init__(self)\n\n        def complete(self, text, state):\n            if text == '':\n                readline.insert_text(self.tab)\n                return None\n            else:\n                return rlcompleter.Completer.complete(self, text, state)\n\n    readline.parse_and_bind('tab: complete')\n    readline.set_completer(IrlCompleter('\t').complete)\n\n    # Add this line to treat tabs as literal characters\n    readline.parse_and_bind('set disable-completion on')\n\n# Restore our command-line history, and save it when Python exits.\nhistory_path = os.path.expanduser('~/.pyhistory')\nif os.path.isfile(history_path):\n    readline.read_history_file(history_path)\natexit.register(lambda x=history_path: readline.write_history_file(x))