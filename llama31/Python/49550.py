import win32com.server.register\nimport win32com.server.exception\nimport threading\n\nclass InMemoryDB:\n    _instance = None\n    _lock = threading.Lock()\n\n    def __new__(cls):\n        if cls._instance is None:\n            cls._instance = super(InMemoryDB, cls).__new__(cls)\n            cls._instance.data = {}\n        return cls._instance\n\n    def __init__(self):\n        pass\n\n    def put(self, key, value):\n        with self._lock:\n            self.data[key] = value\n\n    def get(self, key):\n        with self._lock:\n            return self.data.get(key)\n\nclass COMServer:\n    _public_methods_ = ['put', 'get']\n    _reg_progid_ = 'InMemoryDB.COMServer'\n\n    def __init__(self):\n        self.db = InMemoryDB()\n\n    def put(self, key, value):\n        self.db.put(key, value)\n\n    def get(self, key):\n        return self.db.get(key)\n\nif __name__ == '__main__':\n    win32com.server.register.UseCommandLine(COMServer)