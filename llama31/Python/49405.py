def de_bruijn(k, n):\n    a = [0] * k * n\n    sequence = []\n    def db(t, p):\n        if t > n:\n            if n % p == 0:\n                sequence.extend(a[1:p + 1])\n        else:\n            a[t] = a[t - p]\n            db(t + 1, p)\n            for j in range(a[t - p] + 1, k):\n                a[t] = j\n                db(t + 1, t)\n    db(1, 1)\n    return sequence\n\n# Generate a De Bruijn sequence for 12-bit binary strings\nsequence = de_bruijn(2, 12)\n\n# Convert the sequence to a binary string\nbinary_string = ''.join(map(str, sequence))\n\nprint(binary_string)