from decimal import Decimal, getcontext\n\ndef gauss_legendre(n):\n    getcontext().prec = n + 10  # Set precision for Decimal module\n\n    a = Decimal(1)\n    b = Decimal(1) / Decimal(2).sqrt()\n    t = Decimal(1) / Decimal(4)\n    p = Decimal(1)\n\n    for _ in range(n):\n        a_n = (a + b) / Decimal(2)\n        b_n = (a * b).sqrt()\n        t_n = t - p * (a - a_n) ** 2\n        p_n = Decimal(2) * p\n\n        a, b, t, p = a_n, b_n, t_n, p_n\n\n    pi = (a + b) ** 2 / (Decimal(4) * t)\n    return pi\n\n# Example usage:\nn = 50  # Number of iterations\npi_approx = gauss_legendre(n)\nprint(f"Approximation of pi after {n} iterations: {pi_approx}")