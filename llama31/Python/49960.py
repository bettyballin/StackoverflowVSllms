import ctypes\nfrom ctypes import wintypes\n\ndef check_create_file_permission(directory):\n    # Get the security descriptor for the directory\n    sd = wintypes.PSECURITY_DESCRIPTOR()\n    ctypes.windll.advapi32.GetFileSecurityW(directory, 0x01, sd, ctypes.sizeof(sd), ctypes.byref(wintypes.DWORD()))\n\n    # Create a DACL (Discretionary Access Control List) from the security descriptor\n    dacl = wintypes.PACL()\n    ctypes.windll.advapi32.GetSecurityDescriptorDacl(sd, ctypes.byref(dacl), ctypes.byref(wintypes.BOOL()))\n\n    # Get the current user's token\n    token = wintypes.HANDLE()\n    ctypes.windll.advapi32.OpenProcessToken(ctypes.windll.kernel32.GetCurrentProcess(), 0x0008, ctypes.byref(token))\n\n    # Check if the current user has FILE_GENERIC_WRITE access to the directory\n    access_mask = 0x40000000  # FILE_GENERIC_WRITE\n    result = ctypes.windll.advapi32.AccessCheck(dacl, token, access_mask, ctypes.byref(wintypes.DWORD()))\n\n    # Clean up\n    ctypes.windll.kernel32.CloseHandle(token)\n\n    return result == 1  # 1 indicates access is allowed\n\ndirectory = r'C:\foo'\nif check_create_file_permission(directory):\n    print('Current user has permission to create files in', directory)\nelse:\n    print('Current user does not have permission to create files in', directory)