def generate_numbers(num_bits, num_set_bits):\n    def recursive_generate(current, num_set_bits, start):\n        if num_set_bits == 0:\n            yield current\n        for i in range(start, num_bits):\n            yield from recursive_generate(current | (1 << i), num_set_bits - 1, i + 1)\n\n    return list(recursive_generate(0, num_set_bits, 0))\n\n# Example usage:\nnumbers = generate_numbers(32, 5)\nprint(numbers)