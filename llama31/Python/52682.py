import time\nfrom watchdog.observers import Observer\nfrom watchdog.events import FileSystemEventHandler\n\nclass MyHandler(FileSystemEventHandler):\n    def on_modified(self, event):\n        print(f"File {event.src_path} has been modified")\n\n    def on_created(self, event):\n        print(f"File {event.src_path} has been created")\n\n    def on_deleted(self, event):\n        print(f"File {event.src_path} has been deleted")\n\n    def on_moved(self, event):\n        print(f"File {event.src_path} has been moved to {event.dest_path}")\n\nif __name__ == "__main__":\n    event_handler = MyHandler()\n    observer = Observer()\n    observer.schedule(event_handler, path='.', recursive=True)\n    observer.start()\n\n    try:\n        while True:\n            time.sleep(1)\n    except KeyboardInterrupt:\n        observer.stop()\n    observer.join()