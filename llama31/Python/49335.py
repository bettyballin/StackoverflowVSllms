import numpy as np\n\ndef dbscan(points, epsilon, min_pts):\n    clusters = []\n    visited = set()\n\n    def find_neighbors(point):\n        return [p for p in points if np.linalg.norm(p - point) <= epsilon]\n\n    for point in points:\n        if point in visited:\n            continue\n\n        visited.add(point)\n        neighbors = find_neighbors(point)\n\n        if len(neighbors) >= min_pts:\n            cluster = [point]\n            for neighbor in neighbors:\n                if neighbor not in visited:\n                    visited.add(neighbor)\n                    cluster.append(neighbor)\n                    neighbors.extend(find_neighbors(neighbor))\n            clusters.append(cluster)\n\n    return clusters\n\n# Example usage\npoints = np.random.rand(100, 2)  # 100 random 2D points\nepsilon = 0.5\nmin_pts = 5\n\nclusters = dbscan(points, epsilon, min_pts)\nprint(clusters)