from flask import Flask, jsonify, request\n\napp = Flask(__name__)\n\n# Sample in-memory data store\nbooks = [\n    {"id": 1, "title": "Book 1", "author": "Author 1"},\n    {"id": 2, "title": "Book 2", "author": "Author 2"}\n]\n\n# GET /books\n@app.route("/books", methods=["GET"])\ndef get_books():\n    return jsonify({"books": books})\n\n# GET /books/:id\n@app.route("/books/<int:book_id>", methods=["GET"])\ndef get_book(book_id):\n    book = next((book for book in books if book["id"] == book_id), None)\n    if book is None:\n        return jsonify({"error": "Book not found"}), 404\n    return jsonify({"book": book})\n\n# POST /books\n@app.route("/books", methods=["POST"])\ndef create_book():\n    new_book = {\n        "id": len(books) + 1,\n        "title": request.json["title"],\n        "author": request.json["author"]\n    }\n    books.append(new_book)\n    return jsonify({"book": new_book}), 201\n\n# PUT /books/:id\n@app.route("/books/<int:book_id>", methods=["PUT"])\ndef update_book(book_id):\n    book = next((book for book in books if book["id"] == book_id), None)\n    if book is None:\n        return jsonify({"error": "Book not found"}), 404\n    book["title"] = request.json["title"]\n    book["author"] = request.json["author"]\n    return jsonify({"book": book})\n\n# DELETE /books/:id\n@app.route("/books/<int:book_id>", methods=["DELETE"])\ndef delete_book(book_id):\n    book = next((book for book in books if book["id"] == book_id), None)\n    if book is None:\n        return jsonify({"error": "Book not found"}), 404\n    books.remove(book)\n    return jsonify({"message": "Book deleted"})\n\nif __name__ == "__main__":\n    app.run(debug=True)