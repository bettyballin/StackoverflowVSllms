import secrets\nimport hashlib\n\n# Client-side\ndef client_dh_key_exchange(p, g, server_public_key):\n    client_private_key = secrets.randbelow(p)\n    client_public_key = pow(g, client_private_key, p)\n    shared_secret = pow(server_public_key, client_private_key, p)\n    return client_public_key, shared_secret\n\n# Server-side\ndef server_dh_key_exchange(p, g, client_public_key):\n    server_private_key = secrets.randbelow(p)\n    server_public_key = pow(g, server_private_key, p)\n    shared_secret = pow(client_public_key, server_private_key, p)\n    return server_public_key, shared_secret\n\n# Example usage\np = 23  # prime number\ng = 5   # generator\nclient_public_key, client_shared_secret = client_dh_key_exchange(p, g, server_public_key=3)\nserver_public_key, server_shared_secret = server_dh_key_exchange(p, g, client_public_key)\n\nprint("Client shared secret:", client_shared_secret)\nprint("Server shared secret:", server_shared_secret)