class BannerRotation:\n    def __init__(self):\n        self.banners = []\n        self.bias = {}\n\n    def add_banner(self, banner):\n        self.banners.append(banner)\n        self.bias[banner.client] = 0\n\n    def select_banner(self):\n        total_weight = sum(banner.weight for banner in self.banners)\n        selection = random.random() * total_weight\n        for banner in self.banners:\n            selection -= banner.weight * (1 - self.bias[banner.client])\n            if selection <= 0:\n                self.bias[banner.client] += 0.1\n                return banner\n        self.bias = {client: max(0, bias - 0.1) for client, bias in self.bias.items()}\n        return self.select_banner()