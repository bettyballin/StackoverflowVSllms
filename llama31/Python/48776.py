import numpy as np\n\ndef connected_component_labeling(matrix):\n    rows, cols = matrix.shape\n    labeled_matrix = np.zeros((rows, cols), dtype=int)\n    label = 1\n\n    for row in range(rows):\n        for col in range(cols):\n            if matrix[row, col] != 0 and labeled_matrix[row, col] == 0:\n                # found a new cluster\n                stack = [(row, col)]\n                while stack:\n                    r, c = stack.pop()\n                    labeled_matrix[r, c] = label\n                    for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                        nr, nc = r + dr, c + dc\n                        if (0 <= nr < rows and 0 <= nc < cols and\n                                matrix[nr, nc] != 0 and labeled_matrix[nr, nc] == 0):\n                            stack.append((nr, nc))\n                label += 1\n\n    return labeled_matrix\n\n# example usage\nmatrix = np.array([\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0, 1, 1, 1, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 1, 0, 0, 0, 0]\n])\n\nlabeled_matrix = connected_component_labeling(matrix)\nprint(labeled_matrix)