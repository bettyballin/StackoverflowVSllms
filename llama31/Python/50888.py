import asyncio\nimport aiohttp\n\nasync def handle_request(reader, writer):\n    # Read request from client\n    request = await reader.read(1024)\n    # Modify request according to rules/filters (not implemented here)\n    # ...\n    # Forward request to target server\n    async with aiohttp.ClientSession() as session:\n        async with session.request('GET', 'https://example.com') as resp:\n            # Read response from target server\n            response = await resp.read()\n            # Modify response according to rules/filters (not implemented here)\n            # ...\n            # Send response back to client\n            writer.write(response)\n            await writer.drain()\n            writer.close()\n\nasync def main():\n    server = await asyncio.start_server(handle_request, 'localhost', 8080)\n    async with server:\n        await server.serve_forever()\n\nasyncio.run(main())