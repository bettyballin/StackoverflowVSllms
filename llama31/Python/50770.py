import numpy as np\nfrom scipy.spatial import distance\nfrom scipy.linalg import eigh\n\ndef mds(D, k):\n    n = D.shape[0]\n    # Centering\n    D_centered = D - np.mean(D, axis=0) - np.mean(D, axis=1)[:, np.newaxis]\n    # Eigenvalue decomposition\n    eigvals, eigvecs = eigh(D_centered)\n    # Selecting dimensions\n    idx = np.argsort(eigvals)[::-1][:k]\n    eigvecs = eigvecs[:, idx]\n    # Projection\n    X = np.dot(D_centered, eigvecs)\n    return X\n\n# Example usage\nD = np.array([[0, 10, 20], [10, 0, 15], [20, 15, 0]])  # Distance matrix\nX = mds(D, 2)  # Reconstruct 2D points\nprint(X)