import numpy as np\n\ndef calculate_cost(person, event, availability, priority):\n    # Base cost for each person\n    base_cost = 1000\n\n    # Adjust cost based on availability\n    if availability[person][event] == 0:  # person is not available for this event\n        return np.inf  # assign a very high cost\n\n    # Adjust cost based on priority\n    priority_factor = priority[person]\n    cost = base_cost / priority_factor\n\n    # Adjust cost based on frequency of availability\n    frequency_factor = availability[person].sum()  # count the number of available events for this person\n    cost *= frequency_factor\n\n    return cost\n\n# Example usage:\navailability = np.array([\n    [1, 0, 1, 0],  # Person A is available for events 1 and 3\n    [0, 1, 1, 1],  # Person B is available for events 2, 3, and 4\n    [1, 1, 0, 1]   # Person C is available for events 1, 2, and 4\n])\n\npriority = np.array([2, 3, 1])  # priority for each person\n\nevents = 4\npersons = 3\n\ncost_matrix = np.zeros((persons, events))\n\nfor i in range(persons):\n    for j in range(events):\n        cost_matrix[i, j] = calculate_cost(i, j, availability, priority)\n\nprint(cost_matrix)