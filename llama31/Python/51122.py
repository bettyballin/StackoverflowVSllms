import hashlib\nimport os\nfrom cryptography.fernet import Fernet\n\ndef generate_key(password):\n    # Generate a key from the user's password\n    hashed_password = hashlib.sha256(password.encode()).digest()\n    return Fernet(hashed_password)\n\ndef encrypt_credentials(plaintext, key):\n    # Encrypt the credentials using the generated key\n    cipher_suite = Fernet(key)\n    ciphertext = cipher_suite.encrypt(plaintext.encode())\n    return ciphertext\n\ndef decrypt_credentials(ciphertext, key):\n    # Decrypt the credentials using the generated key\n    cipher_suite = Fernet(key)\n    plaintext = cipher_suite.decrypt(ciphertext).decode()\n    return plaintext\n\n# Example usage:\npassword = "my_secret_password"\nkey = generate_key(password)\ncredentials = "my_im_service_username:my_im_service_password"\n\nencrypted_credentials = encrypt_credentials(credentials, key)\nprint("Encrypted credentials:", encrypted_credentials)\n\ndecrypted_credentials = decrypt_credentials(encrypted_credentials, key)\nprint("Decrypted credentials:", decrypted_credentials)