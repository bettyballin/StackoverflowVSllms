def sat_to_math_expression(sat_instance):\n    # assume sat_instance is a list of clauses, where each clause is a list of literals\n    n = len(sat_instance)\n    a = [1 if x else 0 for x in sat_instance]\n    t = 1\n    expression = ""\n\n    for i in range(n):\n        clause = sat_instance[i]\n        for j in range(len(clause)):\n            literal = clause[j]\n            if literal > 0:  # positive literal\n                expression += f"({a[i]} + "\n            else:  # negative literal\n                expression += f"({a[i]} - "\n        expression += ")*"\n    expression += f"= {t}"\n\n    return expressio