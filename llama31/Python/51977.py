import hashlib\n\ndef rolling_hash(data, window_size):\n    hashes = []\n    for i in range(len(data) - window_size + 1):\n        window = data[i:i+window_size]\n        hash = hashlib.md5(window).hexdigest()\n        hashes.append(hash)\n    return hashes\n\ndef find_matching_sequences(file1, file2, window_size):\n    with open(file1, "rb") as f1, open(file2, "rb") as f2:\n        data1 = f1.read()\n        data2 = f2.read()\n    \n    hashes1 = rolling_hash(data1, window_size)\n    hashes2 = rolling_hash(data2, window_size)\n    \n    matches = []\n    for i, hash1 in enumerate(hashes1):\n        for j, hash2 in enumerate(hashes2):\n            if hash1 == hash2:\n                match = (i, j, window_size)\n                matches.append(match)\n    \n    return matches\n\nwindow_size = 1024  # adjust this value as needed\nfile1 = "spybotsd160.exe"\nfile2 = "TestuffSetup.exe"\n\nmatches = find_matching_sequences(file1, file2, window_size)\nfor match in matches:\n    print(f"Match found at offset {match[0]} in {file1} and offset {match[1]} in {file2}")