import uuid\n\nclass Client:\n    def __init__(self):\n        self.counter = 0\n\n    def send_request(self):\n        request_id = str(uuid.uuid4())\n        # Simulate sending the request\n        server_response = Server.process_request(self.counter, request_id)\n        # Handle server response\n        if server_response.get("ack") and server_response["request_id"] == request_id:\n            self.counter = server_response["new_counter"]\n            print("Counter updated:", self.counter)\n        else:\n            print("Error: Retrying request...")\n            self.send_request()\n\nclass Server:\n    def __init__(self):\n        self.counter = 0\n\n    @staticmethod\n    def process_request(counter, request_id):\n        # Simulate server processing\n        if counter == Server.counter:\n            Server.counter += 1\n            return {"ack": True, "request_id": request_id, "new_counter": Server.counter}\n        else:\n            return {"ack": False, "request_id": request_id}\n\n# Example usage\nclient = Client()\nclient.send_request()