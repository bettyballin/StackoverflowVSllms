from django.db.models.expressions import RawSQL\n\n# Define your raw SQL query\nraw_sql = """\n    SELECT myapp_mymodel.id, myapp_mymodel.name, myapp_relatedmodel.id, myapp_relatedmodel.related_name\n    FROM myapp_mymodel\n    INNER JOIN myapp_relatedmodel ON myapp_mymodel.related_id = myapp_relatedmodel.id\n"""\n\n# Define your model and related model\nfrom .models import MyModel, RelatedModel\n\n# Execute the raw SQL query\nresults = MyModel.objects.raw(raw_sql)\n\n# Create a list to hold the model instances\nmodel_instances = []\n\n# Iterate over the results\nfor result in results:\n    # Get the field names and row data\n    field_names = [field.name for field in result.__class__.__fields__.values()]\n    row_data = [getattr(result, field_name) for field_name in field_names]\n\n    # Split the row data into model and related model data\n    model_data = row_data[:len(MyModel.__fields__)]\n    related_model_data = row_data[len(MyModel.__fields__):]\n\n    # Create a MyModel instance\n    model_instance = MyModel(**dict(zip(MyModel.__fields__.keys(), model_data)))\n\n    # Create a RelatedModel instance\n    related_model_instance = RelatedModel(**dict(zip(RelatedModel.__fields__.keys(), related_model_data)))\n\n    # Set the related model on the model instance\n    model_instance.related = related_model_instance\n\n    # Add the model instance to the list\n    model_instances.append(model_instance)