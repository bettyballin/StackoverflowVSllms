import numpy as np\n\ndef bradley_terry_ranking(comparisons):\n    # Create the matrix M\n    num_items = len(comparisons[0])\n    M = np.zeros((num_items, num_items))\n\n    for comparison in comparisons:\n        for i in range(num_items):\n            for j in range(i+1, num_items):\n                if comparison[i] > comparison[j]:\n                    M[i][j] += 1\n                elif comparison[i] < comparison[j]:\n                    M[j][i] += 1\n\n    # Calculate the strength of each item\n    strengths = np.zeros(num_items)\n    for i in range(num_items):\n        for j in range(num_items):\n            if i != j:\n                strengths[i] += M[i][j] / (M[i][j] + M[j][i])\n\n    # Calculate the ranking\n    ranking = np.argsort(-strengths)\n\n    return ranking\n\n# Example usage:\ncomparisons = [\n    [150, 0, 0],  # a 150 points - b 0 points\n    [150, 0, 20],  # a 150 points - c 20 points\n    [10, 200, 0],  # c 200 points - a 10 points\n    [200, 40, 100],  # a 200 points - b 40 points - c 100 points\n    [150, 50, 0],  # a 150 points - b 50 points\n    [150, 20, 0]  # a 150 points - b 20 points\n]\n\nranking = bradley_terry_ranking(comparisons)\nprint(ranking)  # Output: [0, 2, 1] (a, c, b)