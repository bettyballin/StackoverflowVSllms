import numpy as np\n\n# Use the GMM parameters to generate random samples\ndef generate_samples(params, num_samples):\n    means = params['means_']\n    covariances = params['covariances_']\n    weights = params['weights_']\n\n    # Generate random samples from the GMM\n    samples = np.zeros((num_samples,))\n    for i in range(num_samples):\n        # Select a component randomly based on the weights\n        component_idx = np.random.choice(len(weights), p=weights)\n\n        # Generate a sample from the selected component\n        sample = np.random.normal(means[component_idx], np.sqrt(covariances[component_idx]))\n        samples[i] = sample\n\n    return samples\n\n# Generate some random samples\nnum_samples = 1000\nsamples = generate_samples(params, num_samples)