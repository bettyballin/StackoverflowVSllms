def dissect_ranges(ranges):\n    # Sort the ranges by their start value\n    ranges.sort(key=lambda x: x[0])\n\n    # Initialize the result list\n    result = []\n\n    # Initialize the current range\n    current_start = ranges[0][0]\n    current_end = ranges[0][1]\n    current_labels = [ranges[0][2]]\n\n    # Iterate over the ranges\n    for start, end, label in ranges[1:]:\n        # If the current range overlaps with the next range\n        if start <= current_end:\n            # Update the current range's end value if necessary\n            current_end = max(current_end, end)\n            # Add the next range's label to the current range's labels\n            current_labels.append(label)\n        else:\n            # Add the current range to the result list\n            result.append((current_start, current_end, current_labels))\n            # Update the current range to the next range\n            current_start = start\n            current_end = end\n            current_labels = [label]\n\n    # Add the last range to the result list\n    result.append((current_start, current_end, current_labels))\n\n    return result\n\n# Example usage:\nranges = [(0, 100, 'a'), (0, 75, 'b'), (95, 150, 'c'), (120, 130, 'd')]\nresult = dissect_ranges(ranges)\nfor start, end, labels in result:\n    print(f"{start} - {end}: {', '.join(labels)}")