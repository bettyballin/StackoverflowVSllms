def metric_embedding(distances):\n    points = list(distances.keys())\n    sequence = [points[0]]\n\n    while len(sequence) < len(points):\n        min_distance = float('inf')\n        next_point = None\n\n        for point in points:\n            if point not in sequence:\n                distance = distances[sequence[-1]][point]\n                if distance < min_distance:\n                    min_distance = distance\n                    next_point = point\n\n        sequence.append(next_point)\n\n    return sequence\n\ndistances = {\n    'a': {'b': 100, 'c': 80, 'd': 170},\n    'b': {'a': 100, 'c': 20, 'd': 90},\n    'c': {'a': 80, 'b': 20, 'd': 70},\n    'd': {'a': 170, 'b': 90, 'c': 70}\n}\n\nprint(metric_embedding(distances))