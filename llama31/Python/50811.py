import numpy as np\nfrom scipy.spatial.distance import pdist, squareform\n\ndef compute_shape_histogram(points, num_bins=10):\n    distances = pdist(points)\n    distance_histogram, bin_edges = np.histogram(distances, bins=num_bins)\n    return distance_histogram\n\ndef compare_shapes(points1, points2):\n    histogram1 = compute_shape_histogram(points1)\n    histogram2 = compute_shape_histogram(points2)\n    return np.linalg.norm(histogram1 - histogram2)\n\n# Example usage\npoints1 = np.random.rand(100, 3)\npoints2 = np.random.rand(100, 3)\npoints2_rotated = np.dot(points2, np.array([[0, 1, 0], [-1, 0, 0], [0, 0, 1]]))  # Rotate points2 by 90 degrees\n\nprint(compare_shapes(points1, points2))  # Should be different\nprint(compare_shapes(points2, points2_rotated))  # Should be similar