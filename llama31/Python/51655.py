import hmac\nimport hashlib\nimport base64\n\ndef generate_oauth_signature(method, url, params, oauth_token, oauth_token_secret):\n    # Sort and encode parameters\n    sorted_params = sorted(params.items())\n    encoded_params = '&'.join(f'{key}={value}' for key, value in sorted_params)\n\n    # Create the base string\n    base_string = f'{method}&{url}&{encoded_params}'\n\n    # Create the signing key\n    signing_key = f'{oauth_token_secret}&'\n\n    # Sign the request\n    signature = hmac.new(signing_key.encode(), base_string.encode(), hashlib.sha1).digest()\n    signature = base64.b64encode(signature).decode()\n\n    return signature\n\n# Example usage\nmethod = 'GET'\nurl = 'https://example.com/api/endpoint'\nparams = {'param1': 'value1', 'param2': 'value2'}\noauth_token = 'your_oauth_token'\noauth_token_secret = 'your_oauth_token_secret'\n\nsignature = generate_oauth_signature(method, url, params, oauth_token, oauth_token_secret)\n\n# Include the signature in the Authorization header\nheaders = {\n    'Authorization': f'OAuth oauth_token="{oauth_token}", oauth_signature="{signature}"'\n}\n\n# Make the request\nrequests.get(url, headers=headers, params=params)