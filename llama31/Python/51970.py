def guillotine_algorithm(images):\n    # Sort images by height in decreasing order\n    images.sort(key=lambda x: x[1], reverse=True)\n\n    # Initialize current x and y coordinates\n    x, y = 0, 0\n\n    # Initialize current row height\n    row_height = 0\n\n    # Iterate through sorted list of images\n    for width, height in images:\n        if x + width <= max_width:  # Check if image can fit in current row\n            # Place image at current x and y coordinates\n            # Increment x coordinate by image width\n            x += width\n            row_height = max(row_height, height)\n        else:\n            # Move to next row\n            y += row_height\n            x = 0\n            row_height = height\n\n    return x, y