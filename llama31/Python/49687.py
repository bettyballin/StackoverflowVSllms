import itertools\n\ndef social_golfer(num_people, table_size, num_rounds):\n    # Calculate the number of tables\n    num_tables = (num_people + table_size - 1) // table_size\n\n    # Create a resolvable design\n    design = []\n    for round_num in range(num_rounds):\n        round_design = []\n        for table_num in range(num_tables):\n            table = []\n            for person_num in range(table_size):\n                person = (round_num * num_tables * table_size) + (table_num * table_size) + person_num\n                person %= num_people  # Wrap around to the beginning if necessary\n                table.append(person)\n            round_design.append(table)\n        design.append(round_design)\n\n    # Print the schedule\n    for round_num, round_design in enumerate(design):\n        print(f"Round {round_num+1}:")\n        for table_num, table in enumerate(round_design):\n            print(f"Table {table_num+1}: {', '.join(str(person+1) for person in table)}")\n        print()\n\n# Example usage:\nnum_people = 40\ntable_size = 8\nnum_rounds = 5  # You can adjust this to control the number of rounds\nsocial_golfer(num_people, table_size, num_rounds)