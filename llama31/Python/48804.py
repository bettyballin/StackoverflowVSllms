import SocketServer\nimport socket\nimport netstring\nimport sys, os, os.path\nimport string\nimport time\n\nclass MyRequestHandler(SocketServer.BaseRequestHandler):\n    def handle(self):\n        try:\n            print "Connected:", self.client_address\n\n            user = self.request.recv(1024).strip().split(":")[1]\n            user = int(user)\n            self.request.send('Welcome #%s' % user)\n\n            self.usocket_path = '/tmp/u%s.sock' % user\n            if os.path.exists(self.usocket_path):\n                os.remove(self.usocket_path)\n\n            self.usocket = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)\n            self.usocket.bind(self.usocket_path)\n            self.usocket.listen(1)\n\n            while 1:\n                usocket_conn, addr = self.usocket.accept()\n                while 1:\n                    data = usocket_conn.recv(1024)\n                    if not data: break\n                    self.request.send(data)\n                    break\n                usocket_conn.close()\n                time.sleep(0.1)\n\n        except KeyboardInterrupt:\n            self.request.send('close')\n            self.request.close()\n        except Exception as e:\n            print "Error:", e\n\nmyServer = SocketServer.ThreadingTCPServer(('', 8081), MyRequestHandler)\nmyServer.serve_forever()