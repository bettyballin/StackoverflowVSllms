from datetime import timedelta\nfrom django.db.models import Q\n\ndef find_free_slots(properties, start_date, end_date, duration):\n    # Retrieve bookings for the desired date range and properties\n    bookings = Booking.objects.filter(\n        Q(property__in=properties) &\n        Q(start_date__lte=end_date) &\n        Q(end_date__gte=start_date)\n    )\n\n    # Create a calendar-like data structure to represent availability\n    availability = [True] * (end_date - start_date + 1).days\n\n    # Mark occupied days\n    for booking in bookings:\n        for day in range((booking.end_date - booking.start_date + 1).days):\n            availability[(booking.start_date - start_date).days + day] = False\n\n    # Find contiguous free slots\n    free_slots = []\n    current_slot = []\n    for i, available in enumerate(availability):\n        if available:\n            current_slot.append(i)\n        elif current_slot:\n            if len(current_slot) >= duration:\n                free_slots.append((start_date + timedelta(days=current_slot[0]), start_date + timedelta(days=current_slot[-1])))\n            current_slot = []\n\n    return free_slots