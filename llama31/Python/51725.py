import random\n\nclass Banner:\n    def __init__(self, client, impressions, clicks, revenue, time_window):\n        self.client = client\n        self.impressions = impressions\n        self.clicks = clicks\n        self.revenue = revenue\n        self.time_window = time_window\n        self.weight = self.calculate_weight()\n\n    def calculate_weight(self):\n        # Assign a higher weight to banners with a time window\n        if self.time_window:\n            return self.revenue / self.impressions\n        else:\n            return self.revenue / (self.impressions + self.clicks)\n\nclass BannerRotation:\n    def __init__(self):\n        self.banners = []\n\n    def add_banner(self, banner):\n        self.banners.append(banner)\n\n    def select_banner(self):\n        total_weight = sum(banner.weight for banner in self.banners)\n        selection = random.random() * total_weight\n        for banner in self.banners:\n            selection -= banner.weight\n            if selection <= 0:\n                return banner\n\n# Create banners\nbanner1 = Banner("Client 1", 10000, 0, 10000, True)\nbanner2 = Banner("Client 2", 1000, 0, 100, False)\nbanner3 = Banner("Client 3", 10000, 1000, 5000, False)\n\n# Create banner rotation\nrotation = BannerRotation()\nrotation.add_banner(banner1)\nrotation.add_banner(banner2)\nrotation.add_banner(banner3)\n\n# Select a banner\nselected_banner = rotation.select_banner()\nprint(selected_banner.client)