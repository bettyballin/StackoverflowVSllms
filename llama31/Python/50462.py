import hmac\nimport hashlib\n\n# Assume 'eeprom_data' is the encrypted EEPROM content\neeprom_data = b'...'\n\n# Generate a digital signature of the encrypted data\nsignature = hmac.new(b'secret_key', eeprom_data, hashlib.sha256).digest()\n\n# Store the signature in a separate non-volatile location\n# (e.g., a separate EEPROM or a fuse)\n\n# Upon boot, verify the signature\nstored_signature = read_signature_from_non_volatile_location()\nif hmac.compare_digest(signature, stored_signature):\n    print("EEPROM content is valid")\nelse:\n    print("EEPROM content has been tampered with")