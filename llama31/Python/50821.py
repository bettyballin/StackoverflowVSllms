import numpy as np\n\ndef eigen_trust(graph, alpha=0.5, max_iter=100):\n    num_nodes = len(graph)\n    trust_scores = np.random.rand(num_nodes)\n\n    for _ in range(max_iter):\n        new_trust_scores = np.zeros(num_nodes)\n        for i in range(num_nodes):\n            neighbors = graph[i]\n            neighbor_trust = np.sum([trust_scores[j] for j in neighbors])\n            new_trust_scores[i] = (1 - alpha) * trust_scores[i] + alpha * neighbor_trust\n\n        trust_scores = new_trust_scores\n\n    return trust_scores\n\n# Example usage:\ngraph = {\n    0: [1, 2],\n    1: [0, 3],\n    2: [0, 3],\n    3: [1, 2]\n}\n\ntrust_scores = eigen_trust(graph)\nprint(trust_scores)