import secrets\nimport hashlib\n\n# Generate a token for an album\nalbum_token = secrets.token_urlsafe(32)\n\n# Store the token in the database\ndb.insert('album_tokens', {'album_id': 5, 'token': album_token})\n\n# Redirect endpoint for short URL\n@app.route('/Zneg8rjK')\ndef redirect_to_album():\n    token = request.args.get('token')\n    if token and db.exists('album_tokens', {'token': token}):\n        session['album_token'] = token\n        return redirect(url_for('album', album_id=5))\n    return 'Invalid token', 403\n\n# Album and photo access control\n@app.route('/album/<int:album_id>/')\ndef album(album_id):\n    if 'album_token' in session and db.exists('album_tokens', {'album_id': album_id, 'token': session['album_token']}):\n        # Grant access to the album\n        return render_template('album.html', album_id=album_id)\n    return 'Access denied', 403\n\n@app.route('/photo/<int:photo_id>/')\ndef photo(photo_id):\n    album_id = db.get('photo_album', {'photo_id': photo_id})\n    if 'album_token' in session and db.exists('album_tokens', {'album_id': album_id, 'token': session['album_token']}):\n        # Grant access to the photo\n        return render_template('photo.html', photo_id=photo_id)\n    return 'Access denied', 403