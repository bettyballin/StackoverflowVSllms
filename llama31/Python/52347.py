from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.backends import default_backend\n\ndef load_private_key(private_key_path, passphrase):\n    with open(private_key_path, "rb") as key_file:\n        private_key = serialization.load_pem_private_key(\n            key_file.read(),\n            password=passphrase.encode(),\n            backend=default_backend()\n        )\n    return private_key\n\ndef decrypt_message(private_key, encrypted_message):\n    return private_key.decrypt(\n        encrypted_message,\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n\n# Example usage\nprivate_key_path = "path/to/private/key.pem"\npassphrase = "your_passphrase"\nencrypted_message = b"your_encrypted_message"\n\nprivate_key = load_private_key(private_key_path, passphrase)\ndecrypted_message = decrypt_message(private_key, encrypted_message)\n\nprint(decrypted_message.decode())