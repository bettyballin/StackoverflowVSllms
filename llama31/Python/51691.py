def calculate_weighted_score(contact):\n    recency_scores = {\n        'same_day': 10,\n        'last_3_days': 8,\n        'last_week': 6,\n        'last_month': 4,\n        'last_6_months': 2,\n        'older': 1\n    }\n\n    frequency_scores = {\n        '25+': 10,\n        '15-24': 8,\n        '10-14': 6,\n        '5-9': 4,\n        '2-4': 2,\n        '1': 1\n    }\n\n    recency_score = recency_scores[get_recency_category(contact)]\n    frequency_score = frequency_scores[get_frequency_category(contact)]\n\n    weighted_score = recency_score Ã— frequency_score\n\n    return weighted_score\n\ndef get_recency_category(contact):\n    # implement logic to determine recency category based on contact's timestamp\n\ndef get_frequency_category(contact):\n    # implement logic to determine frequency category based on contact's frequency