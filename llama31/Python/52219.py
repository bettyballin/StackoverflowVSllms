import math\n\ndef is_point_in_cone(cone_origin, cone_direction, cone_angle, point):\n    # Normalize the cone direction vector\n    cone_direction = cone_direction / math.sqrt(cone_direction[0]**2 + cone_direction[1]**2)\n\n    # Calculate the vector from the cone's origin to the point\n    vector_to_point = (point[0] - cone_origin[0], point[1] - cone_origin[1])\n\n    # Calculate the dot product\n    dot_product = cone_direction[0] * vector_to_point[0] + cone_direction[1] * vector_to_point[1]\n\n    # Check if the dot product is within the range\n    return dot_product >= math.cos(cone_angle/2) and dot_product <= 1