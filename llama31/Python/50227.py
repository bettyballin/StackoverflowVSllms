import ctypes\nfrom ctypes import wintypes\nfrom ctypes.wintypes import DWORD\n\n# Constants\nCRYPTPROTECT_UI_FORBIDDEN = 0x01\n\n# Extra entropy (static, but should be generated randomly in practice)\nextra_entropy = b"cl;ad13 \0al;323kjd #(adl;k$#ajsd"\n\nclass DATA_BLOB(ctypes.Structure):\n    _fields_ = [("cbData", DWORD), ("pbData", ctypes.POINTER(ctypes.c_char))]\n\ndef get_data(blob_out):\n    cb_data = int(blob_out.cbData)\n    pb_data = blob_out.pbData\n    buffer = ctypes.create_string_buffer(cb_data)\n    ctypes.memmove(buffer, pb_data, cb_data)\n    ctypes.windll.kernel32.LocalFree(pb_data)\n    return buffer.raw\n\ndef win32_crypt_protect_data(plain_text, entropy):\n    buffer_in = ctypes.create_string_buffer(plain_text, len(plain_text))\n    blob_in = DATA_BLOB(len(plain_text), buffer_in)\n    buffer_entropy = ctypes.create_string_buffer(entropy, len(entropy))\n    blob_entropy = DATA_BLOB(len(entropy), buffer_entropy)\n    blob_out = DATA_BLOB()\n\n    if ctypes.windll.crypt32.CryptProtectData(\n        ctypes.byref(blob_in),\n        None,\n        ctypes.byref(blob_entropy),\n        None,\n        None,\n        CRYPTPROTECT_UI_FORBIDDEN,\n        ctypes.byref(blob_out)\n    ):\n        return get_data(blob_out)\n    else:\n        return b""\n\ndef win32_crypt_unprotect_data(cipher_text, entropy):\n    buffer_in = ctypes.create_string_buffer(cipher_text, len(cipher_text))\n    blob_in = DATA_BLOB(len(cipher_text), buffer_in)\n    buffer_entropy = ctypes.create_string_buffer(entropy, len(entropy))\n    blob_entropy = DATA_BLOB(len(entropy), buffer_entropy)\n    blob_out = DATA_BLOB()\n\n    if ctypes.windll.crypt32.CryptUnprotectData(\n        ctypes.byref(blob_in),\n        None,\n        ctypes.byref(blob_entropy),\n        None,\n        None,\n        CRYPTPROTECT_UI_FORBIDDEN,\n        ctypes.byref(blob_out)\n    ):\n        return get_data(blob_out)\n    else:\n        return b""\n\ndef crypt_data(text):\n    return win32_crypt_protect_data(text.encode(), extra_entropy)\n\ndef decrypt_data(cipher_text):\n    return win32_crypt_unprotect_data(cipher_text, extra_entropy).decode()