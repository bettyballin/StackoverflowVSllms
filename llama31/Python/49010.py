def group_files(file_sizes, n):\n    # Sort file sizes in decreasing order\n    file_sizes.sort(reverse=True)\n\n    # Initialize n empty groups\n    groups = [[] for _ in range(n)]\n    group_capacities = [0] * n\n\n    for file_size in file_sizes:\n        # Find the first group with enough remaining capacity\n        for i, group in enumerate(groups):\n            if group_capacities[i] + file_size <= sum(file_sizes) / n:\n                group.append(file_size)\n                group_capacities[i] += file_size\n                break\n        else:\n            # Add file to the group with the most remaining capacity\n            max_remaining_capacity_idx = group_capacities.index(max(group_capacities))\n            groups[max_remaining_capacity_idx].append(file_size)\n            group_capacities[max_remaining_capacity_idx] += file_size\n\n    return groups\n\n# Example usage:\nfile_sizes = [10, 20, 30, 40, 50, 60, 70]\nn = 3\ngroups = group_files(file_sizes, n)\nprint(groups)