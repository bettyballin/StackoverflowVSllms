import random\n\ndef naive_shuffle(deck):\n    for i in range(len(deck)):\n        j = random.randint(0, len(deck) - 1)\n        deck[i], deck[j] = deck[j], deck[i]\n    return deck\n\ndef analyze_shuffle(shuffle_func, num_trials=100000):\n    counts = [0] * 52\n    for _ in range(num_trials):\n        deck = list(range(52))\n        shuffled_deck = shuffle_func(deck)\n        counts[shuffled_deck[0]] += 1\n    return counts\n\nnaive_counts = analyze_shuffle(naive_shuffle)\n\n# Print the probability of each card being in the first position\nfor i, count in enumerate(naive_counts):\n    print(f"Card {i}: {count / sum(naive_counts):.4f}")