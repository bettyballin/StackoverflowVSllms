import numpy as np\n\n# User-item interaction matrix\nR = np.array([\n    [5, 3, 0, 1],\n    [4, 0, 0, 1],\n    [1, 1, 0, 5],\n    [1, 0, 0, 4],\n    [0, 1, 5, 4]\n])\n\n# Number of latent factors\nK = 2\n\n# Initialize user and item latent factor matrices\nU = np.random.rand(R.shape[0], K)\nV = np.random.rand(R.shape[1], K)\n\n# Matrix factorization\nfor _ in range(100):\n    for u in range(R.shape[0]):\n        for i in range(R.shape[1]):\n            if R[u, i] > 0:\n                # Calculate the predicted rating\n                pred_rating = np.dot(U[u], V[i])\n                # Update the latent factors\n                U[u] += 0.01 * (R[u, i] - pred_rating) * V[i]\n                V[i] += 0.01 * (R[u, i] - pred_rating) * U[u]\n\n# Get the recommended items for a user\ndef get_recommendations(user_id, num_recs):\n    scores = np.dot(U[user_id], V.T)\n    return np.argsort(-scores)[:num_recs]\n\nprint(get_recommendations(0, 3))  # [1, 3, 4]