import nltk\nfrom nltk.tokenize import word_tokenize\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import accuracy_score, classification_report\n\n# Load your dataset\ntrain_data = ...\n\n# Preprocess text data\nnltk.download('stopwords')\nstop_words = set(nltk.corpus.stopwords.words('english'))\n\ndef preprocess_text(text):\n    tokens = word_tokenize(text.lower())\n    tokens = [t for t in tokens if t not in stop_words]\n    return ' '.join(tokens)\n\ntrain_data['text'] = train_data['text'].apply(preprocess_text)\n\n# Create TF-IDF features\nvectorizer = TfidfVectorizer(max_features=5000)\nX_train = vectorizer.fit_transform(train_data['text'])\ny_train = train_data['label']\n\n# Train a Naive Bayes classifier\nclf = MultinomialNB()\nclf.fit(X_train, y_train)\n\n# Evaluate the model\ny_pred = clf.predict(X_train)\nprint("Accuracy:", accuracy_score(y_train, y_pred))\nprint("Classification Report:")\nprint(classification_report(y_train, y_pred))