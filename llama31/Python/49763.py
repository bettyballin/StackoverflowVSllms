import pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n\n# Load dataset containing user behavior and device information\ndf = pd.read_csv("user_data.csv")\n\n# Define features and target variable\nX = df[["device_fingerprint", "login_attempts", "geo_location", "time_of_day"]]\ny = df["is_legitimate"]\n\n# Split data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a machine learning model (Random Forest Classifier in this example)\nmodel = RandomForestClassifier(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)\n\n# Define a function to predict the risk score for a new authentication attempt\ndef predict_risk_score(device_fingerprint, login_attempts, geo_location, time_of_day):\n    input_data = pd.DataFrame([[device_fingerprint, login_attempts, geo_location, time_of_day]], columns=X.columns)\n    prediction = model.predict_proba(input_data)[:, 1][0]\n    return prediction\n\n# Example usage:\ndevice_fingerprint = " Chrome/83.0.4103.106"\nlogin_attempts = 3\ngeo_location = "192.168.1.100"\ntime_of_day = 12\n\nrisk_score = predict_risk_score(device_fingerprint, login_attempts, geo_location, time_of_day)\n\nif risk_score > 0.8:\n    print("High-risk attempt. Require 2FA.")\nelif risk_score > 0.4:\n    print("Medium-risk attempt. Display CAPTCHA.")\nelse:\n    print("Low-risk attempt. Seamless login experience.")