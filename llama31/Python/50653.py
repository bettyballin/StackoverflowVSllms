import itertools\n\ndef is_clique(graph, clique):\n    """\n    Check if a given subset of vertices is a clique in the graph.\n    \n    Args:\n    graph: Adjacency matrix representation of the graph\n    clique: Subset of vertices to check\n    \n    Returns:\n    True if the subset is a clique, False otherwise\n    """\n    for v1, v2 in itertools.combinations(clique, 2):\n        if graph[v1][v2] == 0:\n            return False\n    return True\n\n\ndef find_clique(graph, k):\n    """\n    Find a clique of size k in the graph.\n    \n    Args:\n    graph: Adjacency matrix representation of the graph\n    k: Size of the clique to find\n    \n    Returns:\n    A clique of size k if one exists, otherwise None\n    """\n    vertices = range(len(graph))\n    for clique in itertools.combinations(vertices, k):\n        if is_clique(graph, clique):\n            return clique\n    return None\n\n\n# Example usage\ngraph = [[0, 1, 1, 0],\n         [1, 0, 1, 1],\n         [1, 1, 0, 1],\n         [0, 1, 1, 0]]\n\nclique_size = 3\nresult = find_clique(graph, clique_size)\n\nif result is not None:\n    print(f"Clique of size {clique_size} found:", result)\nelse:\n    print(f"No clique of size {clique_size} found")