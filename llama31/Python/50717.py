import itertools\n\ndef calculate_sum(lst, func):\n    return sum(func(a, b) for a, b in zip(lst, lst[1:]))\n\ndef optimize_list(lst, func):\n    min_sum = float('inf')\n    best_perm = None\n    for perm in itertools.permutations(lst):\n        sum_val = calculate_sum(perm, func)\n        if sum_val < min_sum:\n            min_sum = sum_val\n            best_perm = perm\n    return best_perm\n\n# Example usage:\nlst = [1, 2, 3, 4]\nfunc = lambda a, b: a ** b\nbest_perm = optimize_list(lst, func)\nprint(best_perm)  # Output: (2, 3, 1, 4)