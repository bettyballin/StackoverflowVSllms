import numpy as np\n\ndef schoenhage_strassen(a, b):\n    # Split input integers into smaller chunks (digits)\n    a_digits = [int(d) for d in str(a)]\n    b_digits = [int(d) for d in str(b)]\n\n    # Apply FFT to each chunk\n    a_fft = np.fft.fft(a_digits)\n    b_fft = np.fft.fft(b_digits)\n\n    # Perform convolution using FFT\n    conv_fft = np.fft.ifft(a_fft * b_fft)\n\n    # Apply inverse FFT to obtain final product\n    product = np.fft.fft(conv_fft).real\n\n    # Combine chunks to form final product\n    product = int(''.join(map(str, product)))\n\n    return product\n\n# Example usage:\na = 12345678901234567890\nb = 98765432109876543210\n\nresult = schoenhage_strassen(a, b)\nprint(result)