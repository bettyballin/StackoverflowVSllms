import xmlrpc.client\n\nclass DynamicRPC:\n    def __init__(self, menuText, RPC_params, RPC_call):\n        self.rpc = xmlrpc.client.ServerProxy('http://example.com/xmlrpc')\n        self.RPC_call = RPC_call\n\n    def call_RPC(self):\n        # Treat the params\n        params = self.treat_params(RPC_params)\n\n        # Get the method from the ServerProxy object\n        method = getattr(self.rpc, 'serve.' + self.RPC_call)\n\n        # Call the method with the treated params\n        result = method(*params)\n\n        return result\n\n    def treat_params(self, params):\n        # Treat the params here\n        return params\n\n# Example usage:\ndynamic_rpc = DynamicRPC('menuText', ['param1', 'param2'], 'my_function')\nresult = dynamic_rpc.call_RPC()