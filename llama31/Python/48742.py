# Simple example of a generative algorithm (GAN) in Python\nimport numpy as np\n\n# Generator network\ndef generator(z):\n    return np.tanh(np.dot(z, np.random.rand(100, 784)))\n\n# Discriminator network\ndef discriminator(x):\n    return np.sigmoid(np.dot(x, np.random.rand(784, 1)))\n\n# Training process\nfor epoch in range(100):\n    # Sample random noise vector z\n    z = np.random.randn(1, 100)\n    \n    # Generate new sample\n    x_gen = generator(z)\n    \n    # Train discriminator\n    d_loss = -np.mean(np.log(discriminator(x_gen)) + np.log(1 - discriminator(x_gen)))\n    \n    # Train generator\n    g_loss = -np.mean(np.log(discriminator(x_gen)))