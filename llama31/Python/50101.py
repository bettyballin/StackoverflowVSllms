def intersect(p1, p2, p3, p4):\n    """Calculate intersection of two line segments"""\n    def ccw(A, B, C):\n        return (C[1]-A[1]) * (B[0]-A[0]) > (B[1]-A[1]) * (C[0]-A[0])\n    return ccw(p1, p3, p4) != ccw(p2, p3, p4) and ccw(p1, p2, p3) != ccw(p1, p2, p4)\n\ndef clip(subject_polygon, clipper_polygon):\n    """Clip subject_polygon against clipper_polygon using Sutherland-Hodgman"""\n    result = subject_polygon\n    for clipper_edge in clipper_polygon:\n        new_result = []\n        for i in range(len(result)):\n            current_vertex = result[i]\n            next_vertex = result[(i + 1) % len(result)]\n            intersection = intersect(current_vertex, next_vertex, clipper_edge[0], clipper_edge[1])\n            if intersection:\n                new_result.append(intersection)\n            if inside(current_vertex, clipper_edge):\n                new_result.append(current_vertex)\n        result = new_result\n    return result\n\ndef inside(point, edge):\n    """Check if point is inside edge"""\n    return (edge[1][0] - edge[0][0]) * (point[1] - edge[0][1]) < (edge[1][1] - edge[0][1]) * (point[0] - edge[0][0])\n\n# Example usage:\nred_rectangle = [(0, 0), (2, 0), (2, 2), (0, 2)]\nblack_rectangle = [(1, 1), (3, 1), (3, 3), (1, 3)]\nresult_polygon = clip(black_rectangle, red_rectangle)\nprint(result_polygon)