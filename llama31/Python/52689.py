def distribute_documents(documents):\n    # Sort the documents by name\n    documents.sort(key=lambda x: x[0])\n\n    # Split the documents into groups by first letter\n    groups = {}\n    for document in documents:\n        first_letter = document[0]\n        if first_letter in groups:\n            groups[first_letter].append(document)\n        else:\n            groups[first_letter] = [document]\n\n    # Calculate the ideal number of documents per column\n    num_columns = 3\n    total_documents = len(documents)\n    ideal_documents_per_column = total_documents // num_columns\n\n    # Distribute the groups into columns\n    columns = [[] for _ in range(num_columns)]\n    current_column = 0\n    current_documents = 0\n\n    for group in groups.values():\n        # Add the group to the current column\n        columns[current_column].extend(group)\n        current_documents += len(group)\n\n        # If the current column has exceeded the ideal number of documents,\n        # move to the next column\n        if current_documents > ideal_documents_per_column:\n            current_column = (current_column + 1) % num_columns\n            current_documents = 0\n\n    return columns\n\n# Example usage\ndocuments = ["Apple", "Ant", "Boy", "Bat", "Cat", "Dog", "Elephant", "Fish", "Goat"]\ncolumns = distribute_documents(documents)\n\n# Print the columns\nfor i in range(max(len(columns[0]), len(columns[1]), len(columns[2]))):\n    for column in columns:\n        if i < len(column):\n            print(column[i], end=" | ")\n        else:\n            print("  ", end=" | ")\n    print()