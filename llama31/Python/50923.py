import hashlib\n\n# Obfuscation (ROT13)\ndef rot13(text):\n    return text.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz', 'nopqrstuvwxyzabcdefghijklm'))\n\n# Hashing (SHA-256)\ndef hash_data(data):\n    return hashlib.sha256(data.encode()).hexdigest()\n\n# Encryption ( AES-256-CBC)\nimport cryptography\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\n\ndef encrypt_data(data, key):\n    cipher = Cipher(algorithms.AES(key), modes.CBC(b'\0' * 16), backend=default_backend())\n    encryptor = cipher.encryptor()\n    return encryptor.update(data) + encryptor.finalize()\n\n# Example usage\ndata = "Hello, World!"\n\nobfuscated_data = rot13(data)\nprint("Obfuscated:", obfuscated_data)\n\nhashed_data = hash_data(data)\nprint("Hashed:", hashed_data)\n\nkey = b'\x00' * 32  # 256-bit key\nencrypted_data = encrypt_data(data.encode(), key)\nprint("Encrypted:", encrypted_data.hex())