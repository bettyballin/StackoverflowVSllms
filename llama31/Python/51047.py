def longest_increasing_subsequence(arr):\n    n = len(arr)\n    lis = [1] * n\n    predecessors = [-1] * n\n\n    for i in range(1, n):\n        for j in range(i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n                predecessors[i] = j\n\n    max_length = max(lis)\n    max_index = lis.index(max_length)\n\n    subset = []\n    while max_index != -1:\n        subset.append(arr[max_index])\n        max_index = predecessors[max_index]\n\n    return subset[::-1]\n\n# Example usage:\narr = [50, 1, 4, 9, 2, 18, 6, 3, 7, 10]\nprint(longest_increasing_subsequence(arr))  # Output: [1, 4, 6, 7, 10]