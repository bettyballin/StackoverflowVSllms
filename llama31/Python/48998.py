def min_sticks(stick_lengths, stick_counts, target_sum):\n    dp = [[] for _ in range(target_sum + 1)]\n    dp[0] = [[]]\n\n    for length, count in zip(stick_lengths, stick_counts):\n        for i in range(target_sum, length - 1, -1):\n            for j in range(1, min(count, i // length) + 1):\n                for combination in dp[i - j * length]:\n                    dp[i].append(combination + [length] * j)\n\n    min_sticks = float('inf')\n    for combination in dp[target_sum]:\n        min_sticks = min(min_sticks, len(combination))\n\n    return min_sticks\n\n# Test the function\nstick_lengths = [11, 7, 5, 4]\nstick_counts = [1, 1, 3, 3]\ntarget_sum = 45\nprint(min_sticks(stick_lengths, stick_counts, target_sum))  # Output: 3