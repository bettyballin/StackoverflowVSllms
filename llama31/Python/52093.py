from PIL import Image\n\ndef image_to_ascii(image_path, width=80, height=24):\n    # Open the image and resize it\n    img = Image.open(image_path)\n    img = img.resize((width, height))\n\n    # Convert the image to grayscale\n    img = img.convert('L')\n\n    # Define the character set\n    chars = '@%#*+=-:. '\n\n    # Create an empty text buffer\n    text = ''\n\n    # Iterate over each pixel in the image\n    for y in range(img.height):\n        for x in range(img.width):\n            # Get the grayscale value of the pixel\n            pixel_value = img.getpixel((x, y))\n\n            # Find the character that best matches the pixel's grayscale value\n            char_index = int((len(chars) - 1) * (pixel_value / 255))\n            char = chars[char_index]\n\n            # Append the character to the text buffer\n            text += char\n\n        # Add a newline character at the end of each row\n        text += '\n'\n\n    return text\n\n# Example usage:\nimage_path = 'example.jpg'\nascii_art = image_to_ascii(image_path)\nprint(ascii_art)