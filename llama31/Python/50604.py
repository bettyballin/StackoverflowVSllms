from flask import Flask, request, redirect, url_for\nfrom flask_sqlalchemy import SQLAlchemy\nfrom openid.store.sqlstore import SQLAlchemyOpenIDStore\n\napp = Flask(__name__)\napp.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///users.db"\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    openid_url = db.Column(db.String(200), unique=True, nullable=False)\n    nickname = db.Column(db.String(50), nullable=False)\n\n@app.route("/register", methods=["GET", "POST"])\ndef register():\n    if request.method == "POST":\n        openid_url = request.form["openid_url"]\n        nickname = request.form["nickname"]\n        \n        # Check if nickname is already in use\n        existing_user = User.query.filter_by(nickname=nickname).first()\n        if existing_user:\n            # Ask user to choose a different nickname or append a unique identifier\n            new_nickname = f"{nickname}1"\n            user = User(openid_url=openid_url, nickname=new_nickname)\n        else:\n            user = User(openid_url=openid_url, nickname=nickname)\n        \n        db.session.add(user)\n        db.session.commit()\n        \n        return redirect(url_for("profile", openid_url=openid_url))\n    \n    return render_template("register.html")\n\n@app.route("/profile/<openid_url>")\ndef profile(openid_url):\n    user = User.query.filter_by(openid_url=openid_url).first()\n    return render_template("profile.html", user=user)\n\nif __name__ == "__main__":\n    app.run(debug=True)