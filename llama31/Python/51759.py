import socket\n\nclass Node:\n    def __init__(self, host, port):\n        self.host = host\n        self.port = port\n        self.neighbors = []\n\n    def join_group(self, group_host, group_port):\n        # Send join request to the group\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        sock.sendto(b"JOIN", (group_host, group_port))\n\n    def leave_group(self):\n        # Send leave request to the group\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        sock.sendto(b"LEAVE", (self.host, self.port))\n\n    def receive_data(self, data):\n        # Replicate data to neighbors\n        for neighbor in self.neighbors:\n            sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n            sock.sendto(data, neighbor)\n\nclass Source(Node):\n    def __init__(self, host, port):\n        super().__init__(host, port)\n\n    def send_data(self, data):\n        # Send data to the group\n        for neighbor in self.neighbors:\n            sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n            sock.sendto(data, neighbor)\n\n# Example usage\nsource = Source("localhost", 1234)\nnode1 = Node("localhost", 5678)\nnode2 = Node("localhost", 9012)\n\nsource.join_group("localhost", 1111)\nnode1.join_group("localhost", 1111)\nnode2.join_group("localhost", 1111)\n\nsource.neighbors.append(("localhost", 5678))\nsource.neighbors.append(("localhost", 9012))\n\nnode1.neighbors.append(("localhost", 9012))\n\nsource.send_data(b"Hello, world!")\n\nnode1.receive_data(b"Hello, world!")  # replicates to node2\nnode2.receive_data(b"Hello, world!")  # prints the message