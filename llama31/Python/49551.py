import bisect\nimport random\n\ndef select_words(word_freq_pairs, p):\n    # Compute partial sums\n    partial_sums = [0]\n    for word, freq in word_freq_pairs:\n        partial_sums.append(partial_sums[-1] + freq)\n\n    # Create a list of tuples containing the word and its corresponding partial sum range\n    word_ranges = [(word, (partial_sums[i], partial_sums[i+1])) for i, (word, _) in enumerate(word_freq_pairs)]\n\n    # Select p words using binary search\n    selected_words = []\n    for _ in range(p):\n        x = random.randint(0, partial_sums[-1] - 1)\n        idx = bisect.bisect_right([r[1][0] for r in word_ranges], x)\n        selected_words.append(word_ranges[idx-1][0])\n\n    return selected_words