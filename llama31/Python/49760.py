def factorial(*args):\n    def calc_factorial(n):\n        """Calculate the factorial of a number."""\n        if not isinstance(n, int) or n < 0:\n            raise ValueError("Input must be a non-negative integer.")\n        elif n == 0 or n == 1:\n            return 1\n        else:\n            return n * calc_factorial(n-1)\n\n    # If args contains more than one element, or if the single element is an iterable (not a single number), calculate factorial for each number\n    if len(args) > 1 or (len(args) == 1 and hasattr(args[0], '__iter__')):\n        # Flatten the input if it's an iterable within an iterable\n        if len(args) == 1 and hasattr(args[0], '__iter__'):\n            args = args[0]\n        return [calc_factorial(n) for n in args]\n    # If args contains a single non-iterable element, calculate its factorial\n    elif len(args) == 1:\n        return calc_factorial(args[0])\n    else:\n        raise ValueError("Input is required.")\n\n# Testing the function\nprint(factorial(5))  # Output: 120\nprint(factorial([1,2,3,4,5]))  # Output: [1, 2, 6, 24, 120]\nprint(factorial(1,2,3,4,5))  # Output: [1, 2, 6, 24, 120]