import re\n\ndef log_message_clustering(log_messages):\n    # Regular expression to match integers\n    int_regex = r'\d+'\n    \n    # Initialize an empty dictionary to store the clusters\n    clusters = {}\n    \n    for message in log_messages:\n        # Find all integers in the message\n        ints = re.findall(int_regex, message)\n        \n        # Create a signature for the message by replacing integers with placeholders\n        signature = re.sub(int_regex, '%d', message)\n        \n        # Add the message to the corresponding cluster\n        if signature not in clusters:\n            clusters[signature] = []\n        clusters[signature].append(tuple(map(int, ints)))\n    \n    return clusters\n\nlog_messages = [\n    "The temperature at P1 is 35F.",\n    "The temperature at P1 is 40F.",\n    "The temperature at P3 is 35F.",\n    "Logger stopped.",\n    "Logger started.",\n    "The temperature at P1 is 40F."\n]\n\nclusters = log_message_clustering(log_messages)\n\nfor signature, values in clusters.items():\n    print(f"Signature: {signature}")\n    print(f"Values: {values}")