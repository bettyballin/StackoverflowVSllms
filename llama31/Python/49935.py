def has_perfect_matching(tree):\n    # Initialize a dictionary to store the number of children for each node\n    children_count = {}\n    \n    # Perform a depth-first search to count the number of children for each node\n    def dfs(node, parent):\n        children_count[node] = 0\n        for child in tree[node]:\n            if child != parent:\n                dfs(child, node)\n                children_count[node] += 1\n    \n    # Start the depth-first search from an arbitrary node (e.g., the root)\n    dfs(next(iter(tree)), None)\n    \n    # Check if the tree has a perfect matching\n    for node in tree:\n        if children_count[node] != 1:\n            return False\n    \n    return True