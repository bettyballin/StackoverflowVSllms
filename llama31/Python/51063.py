import numpy as np\n\ndef transform_polynomial(coeffs, T):\n    n = len(coeffs)\n    new_coeffs = np.zeros(n)\n    for k, coeff in enumerate(coeffs):\n        new_coeff = coeff * T[0, 0]**(n-k-1)\n        for i in range(1, n-k):\n            new_coeff += (n-k-1) * coeffs[k+i-1] * T[0, 0]**(n-k-i-1) * T[0, 1]**i\n        new_coeffs[k] = new_coeff\n    return new_coeffs\n\n# Example usage:\nT = np.array([[2, 3], [0, 1]])  # transformation matrix\ncoeffs = [1, 2, 3, 4]  # original coefficients\nnew_coeffs = transform_polynomial(coeffs, T)\nprint(new_coeffs)