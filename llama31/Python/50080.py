import numpy as np\n\ndef rdp(points, epsilon=0.0):\n    if len(points) < 3:\n        return points\n\n    dmax = 0.0\n    index = 0\n    for i in range(1, len(points) - 1):\n        d = perpendicular_distance(points[i], points[0], points[-1])\n        if d > dmax:\n            index = i\n            dmax = d\n\n    if dmax > epsilon:\n        results = rdp(points[:index+1], epsilon) + \\n                  rdp(points[index:], epsilon)\n    else:\n        results = [points[0], points[-1]]\n\n    return results\n\ndef perpendicular_distance(point, start, end):\n    x0, y0 = point\n    x1, y1 = start\n    x2, y2 = end\n    numerator = abs((x2 - x1) * (y1 - y0) - (x1 - x0) * (y2 - y1))\n    denominator = np.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n    return numerator / denominator