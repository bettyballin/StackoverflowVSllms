from collections import defaultdict\n\ndef invert_dag(graph):\n    inverted_graph = defaultdict(list)\n    visited = set()\n\n    def dfs(node):\n        visited.add(node)\n        for child in graph[node]:\n            inverted_graph[child].append(node)\n            if child not in visited:\n                dfs(child)\n\n    for root in graph:\n        if root not in visited:\n            dfs(root)\n\n    return inverted_graph\n\n# Example usage:\ngraph = {\n    'A': ['B', 'C'],\n    'B': ['G'],\n    'C': ['E', 'D'],\n    'E': ['F'],\n    'D': ['F'],\n    'G': [],\n    'F': []\n}\n\ninverted_graph = invert_dag(graph)\nprint(inverted_graph)