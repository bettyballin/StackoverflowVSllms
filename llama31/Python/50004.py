def round_floats_to_ints(floats):\n    n = len(floats)\n    total = int(sum(floats))\n    dp = [[float('inf')] * (total + 1) for _ in range(n + 1)]\n    dp[0][0] = 0\n    for i in range(1, n + 1):\n        for j in range(total + 1):\n            if j - int(floats[i - 1]) >= 0:\n                dp[i][j] = min(dp[i][j], dp[i - 1][j - int(floats[i - 1])] + (floats[i - 1] - int(floats[i - 1])) ** 2)\n            if j - int(floats[i - 1]) - 1 >= 0:\n                dp[i][j] = min(dp[i][j], dp[i - 1][j - int(floats[i - 1]) - 1] + (floats[i - 1] - int(floats[i - 1]) - 1) ** 2)\n    rounded = []\n    j = total\n    for i in range(n, 0, -1):\n        if j - int(floats[i - 1]) >= 0 and dp[i][j] == dp[i - 1][j - int(floats[i - 1])] + (floats[i - 1] - int(floats[i - 1])) ** 2:\n            rounded.append(int(floats[i - 1]))\n            j -= int(floats[i - 1])\n        else:\n            rounded.append(int(floats[i - 1]) + 1)\n            j -= int(floats[i - 1]) + 1\n    return list(reversed(rounded))