import logging\nimport cx_Oracle\n\nclass OracleHandler(logging.Handler):\n    def __init__(self, oracle_conn_str, table_name):\n        logging.Handler.__init__(self)\n        self.oracle_conn_str = oracle_conn_str\n        self.table_name = table_name\n        self.conn = None\n        self.cursor = None\n\n    def emit(self, record):\n        try:\n            if not self.conn:\n                self.conn = cx_Oracle.connect(self.oracle_conn_str)\n                self.cursor = self.conn.cursor()\n            self.cursor.execute(f"INSERT INTO {self.table_name} (log_level, message) VALUES (:1, :2)",\n                                [record.levelname, record.getMessage()])\n            self.conn.commit()\n        except cx_Oracle.Error as e:\n            # Log the error to a separate logging destination\n            logging.getLogger('oracle_handler_errors').error(f"Error logging to Oracle: {e}")\n\n    def close(self):\n        if self.conn:\n            self.conn.close()\n\n# Example usage:\noracle_handler = OracleHandler('username/password@host:port/service', 'log_table')\nlogger = logging.getLogger()\nlogger.addHandler(oracle_handler)\nlogger.setLevel(logging.INFO)