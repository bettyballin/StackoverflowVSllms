import re\nfrom fuzzywuzzy import fuzz\n\ndef detect_typos(search_query, product_names):\n    # Preprocessing\n    search_tokens = re.split(r'\W+', search_query.lower())\n    search_tokens = [token for token in search_tokens if token not in stop_words]\n\n    # Fuzzy matching\n    suggested_corrections = []\n    for product_name in product_names:\n        product_tokens = re.split(r'\W+', product_name.lower())\n        product_tokens = [token for token in product_tokens if token not in stop_words]\n\n        similarity_score = fuzz.token_sort_ratio(search_tokens, product_tokens)\n        if similarity_score >= 80:  # Adjust the threshold as needed\n            suggested_corrections.append((product_name, similarity_score))\n\n    # Ranking\n    suggested_corrections.sort(key=lambda x: x[1], reverse=True)\n    return suggested_corrections\n\n# Example usage\nproduct_names = ["fork handles", "fork handsets", "hand forks"]\nsearch_query = "fork handels"\nsuggested_corrections = detect_typos(search_query, product_names)\nprint("Did you mean:", suggested_corrections[0][0])