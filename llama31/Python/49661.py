import numpy as np\n\ndef kalman_filter(z, Q, R):\n    """\n    z: measurement (latitude, longitude)\n    Q: process variance\n    R: measurement variance\n    """\n    # Initialize state and covariance\n    x = np.array([[z[0]], [z[1]]])\n    P = np.eye(2)\n\n    # Predict step\n    x_pred = x\n    P_pred = P + Q\n\n    # Update step\n    K = P_pred / (P_pred + R)\n    x_upd = x_pred + K * (z - x_pred)\n    P_upd = (1 - K) * P_pred\n\n    return x_upd, P_upd