// 2D grid representing the simulation domain\nconst int gridSize = 100;\nbool grid[gridSize][gridSize];\n\n// Simple rules for updating cell states\nvoid updateGrid() {\n    for (int i = 0; i < gridSize; i++) {\n        for (int j = 0; j < gridSize; j++) {\n            // Count neighboring cells\n            int neighbors = 0;\n            for (int x = -1; x <= 1; x++) {\n                for (int y = -1; y <= 1; y++) {\n                    if (x == 0 && y == 0) continue;\n                    int nx = i + x;\n                    int ny = j + y;\n                    if (nx >= 0 && nx < gridSize && ny >= 0 && ny < gridSize) {\n                        if (grid[nx][ny]) neighbors++;\n                    }\n                }\n            }\n            // Update cell state based on neighbors\n            if (grid[i][j]) {\n                if (neighbors < 2) grid[i][j] = false; // underpopulation\n                else if (neighbors > 3) grid[i][j] = false; // overpopulation\n            } else {\n                if (neighbors == 3) grid[i][j] = true; // reproduction\n            }\n        }\n    }\n}