#include <Windows.h>\n\n// Define the function signature you want to monitor\ntypedef int (__stdcall *MYFUNC)(int, int);\n\n// Define the hook function\nint __stdcall HookFunc(int a, int b) {\n    // Log the parameters\n    printf("MYFUNC called with %d, %d\n", a, b);\n    // Call the original function\n    return ((MYFUNC)GetProcAddress(GetModuleHandle("mydll.dll"), "MYFUNC"))(a, b);\n}\n\nint main() {\n    // Set the hook\n    HHOOK hook = SetWindowsHookEx(WH_CALLWNDPROC, HookFunc, GetModuleHandle(NULL), GetCurrentThreadId());\n    if (hook == NULL) {\n        printf("Error setting hook: %d\n", GetLastError());\n    }\n    // Start the VB6 application\n    // ...\n    // Remove the hook\n    UnhookWindowsHookEx(hook);\n    return 0;\n}