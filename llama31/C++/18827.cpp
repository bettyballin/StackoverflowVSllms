#include <iostream>\n#include <vector>\n\nstd::vector<int> sieveOfEratosthenes(int limit) {\n    std::vector<bool> isPrime(limit + 1, true);\n    isPrime[0] = isPrime[1] = false;\n    for (int i = 2; i * i <= limit; i++) {\n        if (isPrime[i]) {\n            for (int j = i * i; j <= limit; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n    std::vector<int> primes;\n    for (int i = 2; i <= limit; i++) {\n        if (isPrime[i]) {\n            primes.push_back(i);\n        }\n    }\n    return primes;\n}\n\nint main() {\n    int limit = 10000;\n    std::vector<int> primes = sieveOfEratosthenes(limit);\n    for (int prime : primes) {\n        std::cout << prime << std::endl;\n    }\n    return 0;\n}