#include <Windows.h>\n#include <iostream>\n#include <chrono>\n\nint main() {\n    const int numIterations = 1000000;\n\n    CRITICAL_SECTION cs;\n    InitializeCriticalSection(&cs);\n\n    HANDLE mutex = CreateMutex(NULL, FALSE, NULL);\n\n    auto csStart = std::chrono::high_resolution_clock::now();\n    for (int i = 0; i < numIterations; i++) {\n        EnterCriticalSection(&cs);\n        LeaveCriticalSection(&cs);\n    }\n    auto csEnd = std::chrono::high_resolution_clock::now();\n\n    auto mutexStart = std::chrono::high_resolution_clock::now();\n    for (int i = 0; i < numIterations; i++) {\n        WaitForSingleObject(mutex, INFINITE);\n        ReleaseMutex(mutex);\n    }\n    auto mutexEnd = std::chrono::high_resolution_clock::now();\n\n    std::cout << "Critical Section time: " << std::chrono::duration_cast<std::chrono::milliseconds>(csEnd - csStart).count() << " ms" << std::endl;\n    std::cout << "Mutex time: " << std::chrono::duration_cast<std::chrono::milliseconds>(mutexEnd - mutexStart).count() << " ms" << std::endl;\n\n    DeleteCriticalSection(&cs);\n    CloseHandle(mutex);\n\n    return 0;\n}