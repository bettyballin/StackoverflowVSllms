volatile bool quitted = false, paused = false;\nvolatile bool should_quit = false, should_pause = false;\n\nvoid downloader_thread() {\n    quitted = false;\n    while (!should_quit) {\n        fill_buffer(bfr);\n        if (should_pause) {\n            is_paused = true;\n            while (should_pause) {\n                asm volatile("mfence" ::: "memory");\n                sleep(50);\n            }\n            is_paused = false;\n        }\n    }\n    quitted = true;\n}\n\nvoid ui_thread() {\n    // ...\n    should_pause = true;\n    while (!is_paused) {\n        asm volatile("mfence" ::: "memory");\n        sleep(50);\n    }\n    // resize buffer or something else non-thread-safe\n    should_pause = false;\n}