class Console {\npublic:\n    enum Result { NOTHING, ENTERED, ESCAPED };\n\n    static Result HandleInput(SDL_Event& event) {\n        if (event.type == SDL_KEYDOWN) {\n            if (event.key.keysym.sym == SDLK_RETURN) {\n                return ENTERED;\n            } else if (event.key.keysym.sym == SDLK_ESCAPE) {\n                return ESCAPED;\n            } else if (event.key.keysym.sym >= SDLK_a && event.key.keysym.sym <= SDLK_z) {\n                input += static_cast<char>(event.key.keysym.sym);\n            } else if (event.key.keysym.sym >= SDLK_0 && event.key.keysym.sym <= SDLK_9) {\n                input += static_cast<char>(event.key.keysym.sym);\n            } else if (event.key.keysym.sym == SDLK_BACKSPACE) {\n                if (!input.empty()) {\n                    input.pop_back();\n                }\n            }\n        }\n        return NOTHING;\n    }\n\n    static const std::string& GetInput() { return input; }\n\nprivate:\n    static std::string input;\n};\n\nstd::string Console::input;