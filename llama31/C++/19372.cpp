// YourWrapperClass.h\nclass YourWrapperClass : public IYourWrapperInterface\n{\npublic:\n    YourWrapperClass();\n    ~YourWrapperClass();\n\n    HRESULT Initialize(const BSTR serviceName);\n    HRESULT DoSomething();\n    HRESULT Disconnect();\n\nprivate:\n    BSTR m_serviceName;\n    // Other state variables...\n};\n\n// YourWrapperClass.cpp\nYourWrapperClass::YourWrapperClass()\n{\n    m_serviceName = NULL;\n}\n\nYourWrapperClass::~YourWrapperClass()\n{\n    if (m_serviceName != NULL)\n    {\n        SysFreeString(m_serviceName);\n    }\n}\n\nHRESULT YourWrapperClass::Initialize(const BSTR serviceName)\n{\n    if (m_serviceName != NULL)\n    {\n        // Already initialized, return an error\n        return E_FAIL;\n    }\n\n    m_serviceName = serviceName;\n    // Initialize the wrapped DLL with the service name...\n    return S_OK;\n}\n\nHRESULT YourWrapperClass::DoSomething()\n{\n    // Do something with the wrapped DLL...\n    return S_OK;\n}\n\nHRESULT YourWrapperClass::Disconnect()\n{\n    // Disconnect from the wrapped DLL...\n    return S_OK;\n}