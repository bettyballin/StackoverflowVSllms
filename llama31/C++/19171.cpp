class GameEngine {\npublic:\n    // ...\n    void update() {\n        // ...\n        for (const auto& ship : ships_) {\n            for (const auto& component : ship.getComponents()) {\n                int gridX = component.getRotatedPosition().x / gridSize_;\n                int gridY = component.getRotatedPosition().y / gridSize_;\n                // check collisions with other components in the same grid cell\n                for (const auto& otherComponent : grid_[gridX][gridY]) {\n                    if (component != otherComponent && component.intersects(otherComponent)) {\n                        // handle collision...\n                    }\n                }\n            }\n        }\n    }\n    // ...\nprivate:\n    std::vector<std::vector<std::vector<Component*>>> grid_;\n    int gridSize_;\n};