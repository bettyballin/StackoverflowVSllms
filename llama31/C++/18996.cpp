// Define a struct for your game objects\nstruct GameObject {\n    int x, y, width, height;\n};\n\n// Define a function for collision detection using SAT\nbool isColliding(GameObject& sprite, GameObject& bush) {\n    int overlapX = (sprite.x + sprite.width) - bush.x;\n    int overlapY = (sprite.y + sprite.height) - bush.y;\n\n    if (overlapX < 0 || overlapY < 0) return false;\n\n    int minOverlap = std::min(overlapX, overlapY);\n    return minOverlap > 0;\n}\n\n// Update your game logic\nif (osl_keys->held.down) {\n    if (isColliding(sprite, bush)) {\n        // Handle collision response\n        sprite.y = bush.y + bush.height;\n    } else {\n        sprite.y += 3;\n    }\n}\n\n// Repeat for other directions...