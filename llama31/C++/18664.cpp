#include <Windows.h>\n#include <Objbase.h>\n\n// Assuming you have IMyComInterface and IMyComEvents defined and implemented\n// with the necessary COM boilerplate.\n\nint main() {\n    // Initialize COM\n    CoInitialize(NULL);\n\n    // Create an instance of your COM object\n    IMyComInterface* pMyComObject;\n    CoCreateInstance(CLSID_MyComObject, NULL, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&pMyComObject));\n\n    // Set up event handling\n    IMyComEvents* pMyComEvents;\n    pMyComObject->QueryInterface(IID_PPV_ARGS(&pMyComEvents));\n\n    // Create an event handle\n    HANDLE hEvent = CreateEvent(NULL, FALSE, FALSE, NULL);\n\n    // Make sure your event handling object knows about the event handle\n    // and signals it when the COM server notifies it of an event\n\n    // Main loop\n    while (true) {\n        // Use CoWaitForMultipleHandles to wait for the event\n        DWORD dwResult = CoWaitForMultipleHandles(0, INFINITE, 1, &hEvent);\n        if (dwResult == S_OK) {\n            // The event was signaled, process it\n            // You might want to reset the event handle here\n            ResetEvent(hEvent);\n            // Handle the event as needed\n        } else {\n            // Handle any errors or unexpected results\n            break;\n        }\n    }\n\n    // Clean up\n    CoUninitialize();\n\n    return 0;\n}