#include <dirent.h>\n#include <iostream>\n#include <vector>\n#include <string>\n\n// Function to get a list of files in a directory\nstd::vector<std::string> getFilesInDirectory(const std::string& dirPath) {\n    DIR* dir;\n    struct dirent* ent;\n    std::vector<std::string> files;\n\n    // Open the directory\n    if ((dir = opendir(dirPath.c_str())) == NULL) {\n        std::cerr << "Error: Unable to open directory " << dirPath << std::endl;\n        return files;\n    }\n\n    // Iterate over the directory entries\n    while ((ent = readdir(dir)) != NULL) {\n        // Check if the entry is a regular file\n        if (ent->d_type == DT_REG) {\n            files.push_back(ent->d_name);\n        }\n    }\n\n    // Close the directory\n    closedir(dir);\n\n    return files;\n}\n\nint main() {\n    std::string dirPath = ".";  // Change to the desired directory\n    std::vector<std::string> files = getFilesInDirectory(dirPath);\n\n    // Process each file\n    for (const auto& file : files) {\n        std::cout << file << std::endl;\n        // Add your file processing logic here\n    }\n\n    return 0;\n}