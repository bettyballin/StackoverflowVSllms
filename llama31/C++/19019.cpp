template <typename Iter>\nvoid algorithm(Iter first, Iter last) {\n    // Dispatch to the correct implementation based on the iterator category\n    algorithm_impl(first, last, iterator_category<Iter>());\n}\n\n// Implementation for random access iterators\ntemplate <typename Iter>\nvoid algorithm_impl(Iter first, Iter last, random_access_iterator_tag) {\n    // Use random access iterator-specific implementation\n}\n\n// Implementation for bidirectional iterators\ntemplate <typename Iter>\nvoid algorithm_impl(Iter first, Iter last, bidirectional_iterator_tag) {\n    // Use bidirectional iterator-specific implementation\n}