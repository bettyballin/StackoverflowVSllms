#include <cstdint>\n\ntemplate <std::size_t N>\nstruct next_power_of_two {\n    static constexpr std::size_t value = (N == 1) ? 1 : next_power_of_two<(N + 1) / 2>::value * 2;\n};\n\ntemplate <>\nstruct next_power_of_two<0> {\n    static constexpr std::size_t value = 1;\n};\n\ntemplate <typename T>\nstruct padded_struct {\n    T internal;\n    char pad[next_power_of_two<sizeof(T)>::value - sizeof(T)];\n};\n\n// Usage:\nstruct Message {\n    unsigned long member1;\n    unsigned long member2;\n    unsigned long member3;\n    /* more members */\n};\n\ntypedef padded_struct<Message> PaddedMessage;