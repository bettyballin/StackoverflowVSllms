#include <boost/interprocess/sync/interprocess_mutex.hpp>\n#include <boost/interprocess/sync/interprocess_condition.hpp>\n#include <boost/interprocess/sync/scoped_lock.hpp>\n\n// ...\n\nboost::interprocess::interprocess_mutex mtx;\nboost::interprocess::interprocess_condition cond;\n\n// Client side\nvoid client() {\n    boost::interprocess::scoped_lock<boost::interprocess::interprocess_mutex> lock(mtx);\n    if (!lock.try_lock()) {\n        // Wait for 20 seconds\n        if (!cond.timed_wait(lock, boost::posix_time::seconds(20))) {\n            // Mutex has been abandoned, take ownership\n            mtx.unlock();\n            lock.lock();\n        }\n    }\n    // Talk to server\n}\n\n// Server side\nvoid server() {\n    // ...\n    // When a client dies unexpectedly\n    cond.notify_all();\n}