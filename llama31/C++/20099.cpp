// server.cpp\n#include <windows.h>\n#include <rpc.h>\n\n// Define the interface\nUUID uuid = { 0x12345678, 0x1234, 0x1234, { 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56 } };\n\ninterface IMyInterface\n{\n    HRESULT MyMethod([in] int param, [out] int* result);\n};\n\n// Implement the interface\nHRESULT STDMETHODCALLTYPE MyMethod(int param, int* result)\n{\n    *result = param * 2;\n    return S_OK;\n}\n\nint main()\n{\n    RPC_STATUS status;\n    IMyInterface* pInterface = NULL;\n\n    // Initialize RPC\n    RpcInitialize(NULL);\n\n    // Register the interface\n    RpcServerRegisterIf(uuid, (RPC_IF_HANDLE*)&pInterface, NULL, NULL);\n\n    // Start the RPC server\n    RpcServerListen(1, RPC_C_LISTEN_MAX_CALLS_DEFAULT, NULL);\n\n    // Process RPC calls\n    while (TRUE)\n    {\n        RpcTryExcept\n        {\n            RpcReceive(NULL, NULL, NULL);\n        }\n        RpcExcept(1)\n        {\n            RpcEndExcept;\n        }\n        RpcEndTryExcept\n    }\n\n    // Shutdown RPC\n    RpcServerUnregisterIf(uuid, NULL, NULL);\n    RpcShutdown();\n    return 0;\n}