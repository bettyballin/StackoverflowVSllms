#include <dirent.h>\n#include <unistd.h>\n#include <iostream>\n#include <string>\n\nint main() {\n    DIR* dir;\n    struct dirent* ent;\n\n    if ((dir = opendir("/proc")) != NULL) {\n        while ((ent = readdir(dir)) != NULL) {\n            // Check if the entry is a directory (process) and its name is numeric\n            if (ent->d_type == DT_DIR && std::string(ent->d_name).find_first_not_of("0123456789") == std::string::npos) {\n                std::string pid = ent->d_name;\n                std::string commPath = "/proc/" + pid + "/comm";\n\n                // Read the process name from /proc/<pid>/comm\n                FILE* file = fopen(commPath.c_str(), "r");\n                if (file != NULL) {\n                    char buffer[1024];\n                    fscanf(file, "%s", buffer);\n                    fclose(file);\n\n                    std::cout << "PID: " << pid << " Name: " << buffer << std::endl;\n                }\n            }\n        }\n        closedir(dir);\n    } else {\n        std::cerr << "Could not open /proc directory" << std::endl;\n        return 1;\n    }\n\n    return 0;\n}