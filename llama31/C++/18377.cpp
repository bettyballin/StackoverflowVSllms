#include <Windows.h>\n#include <string>\n#include <stdexcept>\n\nvoid readAndWriteRegistryKey(const std::string& keyPath) {\n    // Split the input string into the root key and the subkey\n    size_t pos = keyPath.find('\\');\n    if (pos == std::string::npos) {\n        throw std::invalid_argument("Invalid registry key path");\n    }\n\n    HKEY rootKey;\n    if (keyPath.substr(0, pos) == "HKEY_CURRENT_USER") {\n        rootKey = HKEY_CURRENT_USER;\n    } else {\n        throw std::invalid_argument("Unsupported root key");\n    }\n\n    std::string subkey = keyPath.substr(pos + 1);\n\n    // Open the registry key\n    HKEY hKey;\n    LONG result = RegOpenKeyEx(rootKey, subkey.c_str(), 0, KEY_READ | KEY_WRITE, &hKey);\n    if (result != ERROR_SUCCESS) {\n        throw std::runtime_error("Failed to open registry key");\n    }\n\n    // Read the value from the registry key\n    DWORD value;\n    DWORD size = sizeof(value);\n    result = RegQueryValueEx(hKey, NULL, NULL, NULL, (LPBYTE)&value, &size);\n    if (result != ERROR_SUCCESS) {\n        throw std::runtime_error("Failed to read registry value");\n    }\n\n    // Write a new value to the registry key\n    DWORD newValue = 42; // Replace with your desired value\n    result = RegSetValueEx(hKey, NULL, NULL, REG_DWORD, (LPBYTE)&newValue, sizeof(newValue));\n    if (result != ERROR_SUCCESS) {\n        throw std::runtime_error("Failed to write registry value");\n    }\n\n    // Close the registry key\n    RegCloseKey(hKey);\n}