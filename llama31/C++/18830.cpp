#include <iostream>\n#include <string>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\n// ...\n\n// Set Keep-Alive header\nstd::string keepAliveHeader = "Keep-Alive: timeout=10, max=100\r\n";\nresponse += keepAliveHeader;\n\n// Send response\nsend(socket, response.c_str(), response.size(), 0);\n\n// Keep the socket open for pipelining\nwhile (true) {\n    // Check for incoming requests\n    fd_set read_fds;\n    FD_ZERO(&read_fds);\n    FD_SET(socket, &read_fds);\n    struct timeval tv = {10, 0}; // 10-second timeout\n    select(socket + 1, &read_fds, NULL, NULL, &tv);\n\n    if (FD_ISSET(socket, &read_fds)) {\n        // Handle incoming request\n        char buffer[1024];\n        recv(socket, buffer, 1024, 0);\n        // Process the request...\n    } else {\n        // No incoming requests, close the socket\n        close(socket);\n        break;\n    }\n}