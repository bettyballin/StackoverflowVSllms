#include <outlook.h>\n\nclass MyAddin : public IDispatchImpl<IDTExtensibility2>\n{\npublic:\n    // IDTExtensibility2 methods\n    STDMETHODIMP OnConnection(IDispatch* Application, ext_ConnectMode ConnectMode, IDispatch* AddInInst, SAFEARRAY** custom);\n    STDMETHODIMP OnDisconnection(ext_DisconnectMode RemoveMode, SAFEARRAY** custom);\n    STDMETHODIMP OnAddInsUpdate(SAFEARRAY** custom);\n    STDMETHODIMP OnStartupComplete(SAFEARRAY** custom);\n    STDMETHODIMP OnBeginShutdown(SAFEARRAY** custom);\n\n    // ApplicationEvents methods\n    STDMETHODIMP ApplicationEvents_Event(ApplicationEvents* pAppEvents);\n\nprivate:\n    CComPtr<ApplicationEvents> m_pAppEvents;\n    CComPtr<MAPIFolder> m_pNavPane;\n};\n\nSTDMETHODIMP MyAddin::OnConnection(IDispatch* Application, ext_ConnectMode ConnectMode, IDispatch* AddInInst, SAFEARRAY** custom)\n{\n    // Hook into ApplicationEvents\n    m_pAppEvents = new ApplicationEvents();\n    m_pAppEvents->AddRef();\n    m_pAppEvents->put_Application(Application);\n\n    // Get the navigation pane\n    m_pNavPane = new MAPIFolder();\n    m_pNavPane->AddRef();\n    m_pNavPane->put_Name(_bstr_t("My New Button"));\n\n    return S_OK;\n}\n\nSTDMETHODIMP MyAddin::ApplicationEvents_Event(ApplicationEvents* pAppEvents)\n{\n    // Handle events, such as clicking on the new button\n    return S_OK;\n}