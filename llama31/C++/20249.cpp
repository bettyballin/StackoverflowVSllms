#include <boost/asio.hpp>\n\nclass HttpRequestHandler {\npublic:\n    void handleRequest(boost::asio::ip::tcp::socket& socket) {\n        // Read request\n        boost::asio::async_read_until(socket, buffer, "\r\n\r\n",\n            [this](boost::system::error_code ec, std::size_t bytes_transferred) {\n                if (!ec) {\n                    // Process request\n                    processRequest(buffer);\n                    // Write response\n                    boost::asio::async_write(socket, responseBuffer,\n                        [this](boost::system::error_code ec, std::size_t bytes_transferred) {\n                            if (!ec) {\n                                // Handle next request\n                                handleRequest(socket);\n                            }\n                        });\n                }\n            });\n    }\n\nprivate:\n    boost::asio::streambuf buffer;\n    boost::asio::streambuf responseBuffer;\n};