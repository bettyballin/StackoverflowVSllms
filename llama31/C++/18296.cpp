#include <d3d9.h>\n\n// Function to retrieve the graphics card model using DirectX 9.0c\nstd::string getGraphicsCardModel() {\n    // Create the DirectX 9 device interface if not already created\n    IDirect3D9* d3d9 = Direct3DCreate9(D3D_SDK_VERSION);\n    if (d3d9 == nullptr) {\n        // Handle failure\n        return "Failed to create DirectX 9 device";\n    }\n\n    // Get the adapter count\n    UINT adapterCount = d3d9->GetAdapterCount();\n\n    // Iterate through adapters, for simplicity we'll just look at the first one\n    for (UINT adapter = 0; adapter < adapterCount; adapter++) {\n        D3DADAPTER_IDENTIFIER9 identifier;\n        HRESULT hr = d3d9->GetAdapterIdentifier(adapter, 0, &identifier);\n        if (SUCCEEDED(hr)) {\n            // The identifier contains the device info, including the driver and description which often has the model name\n            return std::string(identifier.Description);\n        }\n    }\n\n    // Clean up\n    d3d9->Release();\n\n    // Nothing found or all failed\n    return "Graphics card model not found";\n}