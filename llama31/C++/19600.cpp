// myclass.h\nclass MyClass {\npublic:\n    void foo();\n};\n\n// myclass.cpp\n#include "myclass.h"\n\nvoid MyClass::foo() {\n    // implementation\n}\n\n// wrapper.h\nextern "C" {\n    __declspec(dllexport) void* createMyClass();\n    __declspec(dllexport) void deleteMyClass(void*);\n    __declspec(dllexport) void myClassFoo(void*);\n}\n\n// wrapper.cpp\n#include "wrapper.h"\n#include "myclass.h"\n\nvoid* createMyClass() {\n    return new MyClass();\n}\n\nvoid deleteMyClass(void* ptr) {\n    delete static_cast<MyClass*>(ptr);\n}\n\nvoid myClassFoo(void* ptr) {\n    static_cast<MyClass*>(ptr)->foo();\n}