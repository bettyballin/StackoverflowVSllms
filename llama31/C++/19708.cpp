template <typename InputIterator1, typename InputIterator2, typename OutputIterator, typename Compare>\nOutputIterator __merge_without_buffer(InputIterator1 first1, InputIterator1 last1,\n                                      InputIterator2 first2, InputIterator2 last2,\n                                      OutputIterator result, Compare comp) {\n  while (first1 != last1 && first2 != last2) {\n    if (comp(*first1, *first2)) {\n      *result = *first1;\n      ++first1;\n    } else {\n      *result = *first2;\n      ++first2;\n    }\n    ++result;\n  }\n\n  // Copy remaining elements from first range, if any\n  while (first1 != last1) {\n    *result = *first1;\n    ++first1;\n    ++result;\n  }\n\n  // Copy remaining elements from second range, if any\n  while (first2 != last2) {\n    *result = *first2;\n    ++first2;\n    ++result;\n  }\n\n  return result;\n}