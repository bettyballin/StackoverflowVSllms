#include <iostream>\n\n// Node structure\nstruct Node {\n    int data;\n    Node* next;\n};\n\n// Linked list class\nclass LinkedList {\npublic:\n    Node* head;\n\n    // Constructor\n    LinkedList() {\n        head = nullptr;\n    }\n\n    // Add node to the end of the list\n    void append(int data) {\n        Node* new_node = new Node();\n        new_node->data = data;\n        new_node->next = nullptr;\n\n        if (head == nullptr) {\n            head = new_node;\n        } else {\n            Node* current = head;\n            while (current->next != nullptr) {\n                current = current->next;\n            }\n            current->next = new_node;\n        }\n    }\n\n    // Print the linked list\n    void print() {\n        Node* current = head;\n        while (current != nullptr) {\n            std::cout << current->data << " ";\n            current = current->next;\n        }\n    }\n};\n\nint main() {\n    LinkedList my_list;\n\n    // Add elements to the linked list\n    my_list.append(1);\n    my_list.append(2);\n    my_list.append(3);\n\n    // Print the linked list\n    my_list.print();\n\n    return 0;\n}