template <typename Tag>\nstruct WrappedInt {\n    int v;\n    explicit WrappedInt(int val) : v(val) {}\n    // ...\n};\n\nstruct MyTag {};\n\ntemplate <typename T>\nT fizzbuzz(T n) {\n    T count(0);\n    #if CONST\n        const T div(3);\n    #else\n        T div(3);\n    #endif\n    for (T i(0); i <= n; ++i) {\n        if (i % div == T(0)) count += i;\n    }\n    return count;\n}\n\nint main() {\n    WrappedInt<MyTag> w(123456789);\n    std::cout << fizzbuzz(w) << "\n";\n}