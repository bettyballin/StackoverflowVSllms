#include <Windows.h>\n#include <iostream>\n\nint main() {\n    HANDLE hThread = OpenThread(THREAD_QUERY_INFORMATION, FALSE, threadId);\n    if (hThread == NULL) {\n        std::cerr << "Error opening thread" << std::endl;\n        return 1;\n    }\n\n    FILETIME createTime, exitTime, kernelTime, userTime;\n    if (!GetThreadTimes(hThread, &createTime, &exitTime, &kernelTime, &userTime)) {\n        std::cerr << "Error getting thread times" << std::endl;\n        CloseHandle(hThread);\n        return 1;\n    }\n\n    ULONGLONG kernelTime100ns = (((ULONGLONG)kernelTime.dwHighDateTime) << 32) + kernelTime.dwLowDateTime;\n    ULONGLONG userTime100ns = (((ULONGLONG)userTime.dwHighDateTime) << 32) + userTime.dwLowDateTime;\n\n    double kernelTimeS = (double)kernelTime100ns / 10000000.0;\n    double userTimeS = (double)userTime100ns / 10000000.0;\n\n    std::cout << "Kernel time: " << kernelTimeS << " seconds" << std::endl;\n    std::cout << "User time: " << userTimeS << " seconds" << std::endl;\n\n    CloseHandle(hThread);\n    return 0;\n}