class QueryBuilder {\npublic:\n    QueryBuilder(DatabaseConnection* dbConnection) : dbConnection_(dbConnection) {}\n\n    QueryBuilder& Select(const std::string& columns) {\n        query_ += "SELECT " + columns;\n        return *this;\n    }\n\n    QueryBuilder& From(const std::string& table) {\n        query_ += " FROM " + table;\n        return *this;\n    }\n\n    QueryBuilder& Where(const std::string& condition) {\n        query_ += " WHERE " + condition;\n        return *this;\n    }\n\n    std::string Generate() {\n        // Here, you can modify the query to accommodate database-specific syntax\n        if (dbConnection_->getDatabaseType() == "AVEC_DB") {\n            query_.replace(query_.find("FROM"), 4, "AVEC");\n        }\n        return query_;\n    }\n\nprivate:\n    std::string query_;\n    DatabaseConnection* dbConnection_;\n};