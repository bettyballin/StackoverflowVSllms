void inPlaceRadixSort(char **strings, int n, int k) {\n  int *counts = new int[256]; // assuming ASCII characters\n  int *buckets = new int[n];\n\n  for (int i = k - 1; i >= 0; i--) {\n    // Counting sort\n    memset(counts, 0, 256 * sizeof(int));\n    for (int j = 0; j < n; j++) {\n      counts[strings[j][i]]++;\n    }\n    for (int j = 1; j < 256; j++) {\n      counts[j] += counts[j - 1];\n    }\n\n    // Bucket sort\n    for (int j = 0; j < n; j++) {\n      int bucket = counts[strings[j][i]] - 1;\n      buckets[bucket] = j;\n      counts[strings[j][i]]--;\n    }\n\n    // Permute strings\n    for (int j = 0; j < n; j++) {\n      int idx = buckets[j];\n      char *tmp = strings[j];\n      strings[j] = strings[idx];\n      strings[idx] = tmp;\n    }\n  }\n\n  delete[] counts;\n  delete[] buckets;\n}