#include <curl/curl.h>\n\nint main() {\n    CURL *curl;\n    CURLcode res;\n\n    curl_global_init(CURL_GLOBAL_DEFAULT);\n    curl = curl_easy_init();\n    if(curl) {\n        struct curl_slist *recipients = NULL;\n        recipients = curl_slist_append(recipients, "recipient_email@example.com");\n\n        curl_easy_setopt(curl, CURLOPT_URL, "smtp://smtp.example.com:587");\n        curl_easy_setopt(curl, CURLOPT_MAIL_FROM, "your_email@example.com");\n        curl_easy_setopt(curl, CURLOPT_MAIL_RCPT, recipients);\n        curl_easy_setopt(curl, CURLOPT_READFUNCTION, NULL);\n        curl_easy_setopt(curl, CURLOPT_READDATA, NULL);\n        curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);\n        curl_easy_setopt(curl, CURLOPT_USERNAME, "your_email@example.com");\n        curl_easy_setopt(curl, CURLOPT_PASSWORD, "your_password");\n\n        const char *msg = "This is a test email sent from C++";\n        curl_easy_setopt(curl, CURLOPT_READDATA, &msg);\n\n        res = curl_easy_perform(curl);\n        if(res != CURLE_OK) {\n            printf("curl_easy_perform() failed: %s\n", curl_easy_strerror(res));\n        }\n\n        curl_easy_cleanup(curl);\n    }\n    curl_global_cleanup();\n\n    return 0;\n}