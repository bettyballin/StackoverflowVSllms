#include <Windows.h>\n\n// Define the hook procedure\nLRESULT CALLBACK ProcessHookProc(INT nCode, WPARAM wParam, LPARAM lParam)\n{\n    if (nCode == HC_ACTION && wParam == CREATE_PROCESS)\n    {\n        // Get the process information\n        CREATE_PROCESS_INFORMATION* pInfo = (CREATE_PROCESS_INFORMATION*)lParam;\n        if (pInfo->lpApplicationName && !lstrcmpi(pInfo->lpApplicationName, L"xyz.exe"))\n        {\n            // Show a message box when xyz.exe starts\n            MessageBox(NULL, L"xyz.exe has started", L"Process Monitor", MB_OK);\n        }\n    }\n    return CallNextHookEx(NULL, nCode, wParam, lParam);\n}\n\nint main()\n{\n    // Install the hook\n    HHOOK hHook = SetWindowsHookEx(WH_SHELL, ProcessHookProc, NULL, GetCurrentThreadId());\n    if (hHook)\n    {\n        // The hook is installed, wait for events\n        MSG msg;\n        while (GetMessage(&msg, NULL, 0, 0))\n        {\n            TranslateMessage(&msg);\n            DispatchMessage(&msg);\n        }\n        // Uninstall the hook\n        UnhookWindowsHookEx(hHook);\n    }\n    return 0;\n}