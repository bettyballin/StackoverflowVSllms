#include <opencv2/opencv.hpp>\n\nint main() {\n  // Load the target image\n  cv::Mat target = cv::imread("target.png");\n\n  // Load the desktop screenshot\n  cv::Mat desktop = cv::imread("desktop.png");\n\n  // Define the template matching method\n  int method = cv::TM_CCOEFF_NORMED;\n\n  // Create a result matrix to store the matching scores\n  cv::Mat result(desktop.rows - target.rows + 1, desktop.cols - target.cols + 1, CV_32FC1);\n\n  // Perform template matching\n  cv::matchTemplate(desktop, target, result, method);\n\n  // Find the best match\n  double minVal, maxVal;\n  cv::Point minLoc, maxLoc;\n  cv::minMaxLoc(result, &minVal, &maxVal, &minLoc, &maxLoc);\n\n  // Get the coordinates of the best match\n  int x = maxLoc.x;\n  int y = maxLoc.y;\n\n  // Draw a rectangle around the matched region\n  cv::rectangle(desktop, cv::Point(x, y), cv::Point(x + target.cols, y + target.rows), cv::Scalar(0, 255, 0), 2);\n\n  // Display the output\n  cv::imshow("Desktop", desktop);\n  cv::waitKey(0);\n  cv::destroyAllWindows();\n\n  return 0;\n}