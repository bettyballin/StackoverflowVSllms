const int MAX_ATTEMPTS = 5;\nconst DWORD INITIAL_SLEEP_MS = 100;\n\nfor (int attempt = 0; attempt < MAX_ATTEMPTS; attempt++) {\n    try {\n        // Check if file is locked\n        HANDLE hFile = CreateFile(fileName, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);\n        if (hFile != INVALID_HANDLE_VALUE) {\n            // File is not locked, proceed with operation\n            performOperation();\n            CloseHandle(hFile);\n            break;\n        } else {\n            // File is locked, retry after a short delay\n            DWORD sleepMs = INITIAL_SLEEP_MS * (1 << attempt); // exponential backoff\n            Sleep(sleepMs);\n        }\n    } catch (...) {\n        // Handle other exceptions, if any\n    }\n}\n\nif (attempt == MAX_ATTEMPTS) {\n    // All attempts failed, throw an error\n    throw std::runtime_error("Failed to perform operation due to file locking");\n}