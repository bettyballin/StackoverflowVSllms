int CMyPane::OnCreate(LPCREATESTRUCT lpCreateStruct)\n{\n    // Removed all "return -1 on error" code for better readability\n\n    CDockablePane::OnCreate(lpCreateStruct);\n\n    if(m_toolBar.Create(this, AFX_DEFAULT_TOOLBAR_STYLE, IDR_MY_TOOLBAR) &&\n       m_toolBar.LoadToolBar(IDR_MY_TOOLBAR, 0, 0, TRUE /* Is locked */))\n    {\n        if(theApp.m_bHiColorIcons) // Is true, i.e. following code is executed\n        {\n            // Load the bitmap with the magenta mask\n            CBitmap bitmap;\n            bitmap.LoadBitmap(IDB_MY_TOOLBAR_24);\n\n            // Create a new bitmap with the same size as the original one\n            CBitmap transparentBitmap;\n            transparentBitmap.CreateCompatibleBitmap(GetDC(), bitmap.GetWidth(), bitmap.GetHeight());\n\n            // Draw the original bitmap onto the new one, replacing the magenta pixels with transparent ones\n            CDC dc;\n            dc.CreateCompatibleDC(GetDC());\n            CBitmap* pOldBitmap = dc.SelectObject(&bitmap);\n            transparentBitmap.GetBitmap(&dc);\n            dc.SetBkColor(RGB(255, 0, 255)); // Magenta\n            dc.SetBkMode(TRANSPARENT);\n            dc.BitBlt(0, 0, bitmap.GetWidth(), bitmap.GetHeight(), &dc, 0, 0, SRCCOPY);\n            dc.SelectObject(pOldBitmap);\n\n            // Load the new bitmap into the toolbar\n            m_toolBar.CleanUpLockedImages();\n            m_toolBar.LoadBitmap(transparentBitmap, 0, 0, TRUE /*Locked*/);\n        }\n\n        m_toolBar.SetPaneStyle(m_toolBar.GetPaneStyle() | CBRS_TOOLTIPS | CBRS_FLYBY);\n        m_toolBar.SetPaneStyle(m_toolBar.GetPaneStyle() & ~(CBRS_GRIPPER | CBRS_SIZE_DYNAMIC | CBRS_BORDER_TOP | CBRS_BORDER_BOTTOM | CBRS_BORDER_LEFT | CBRS_BORDER_RIGHT));\n\n        m_toolBar.SetOwner(this);\n\n        // All commands will be routed via this control , not via the parent frame:\n        m_toolBar.SetRouteCommandsViaFrame(FALSE);\n    }\n\n    return 0;\n}