class A {\npublic:\n    typedef void (*EventFunction)(int nEvent);\n\n    void SetEvent(EventFunction func) { handler = func; }\n\n    void EventOne() { handler(1); }\n\nprivate:\n    EventFunction handler;\n};\n\nclass B {\npublic:\n    struct Functor {\n        void (*func)(B*, int);\n        B* self;\n\n        void operator()(int nEvent) {\n            func(self, nEvent);\n        }\n    };\n\n    B() { \n        Functor functor = {&B::EventFromA, this};\n        a.SetEvent(&Functor::operator()); \n    }\n\n    static void EventFromA(B* self, int nEvent) { \n        self->EventFromAImpl(nEvent); \n    }\n\n    void EventFromAImpl(int nEvent) { \n        // do stuff \n    }\n\nprivate:\n    A a;\n};