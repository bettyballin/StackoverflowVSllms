#include <functional>\n#include <iostream>\n\n// Fixed point combinator (Y-combinator)\nstd::function<int(int)> fix(std::function<std::function<int(int)>(std::function<int(int)>)> f) {\n    return f([f](int x) { return fix(f)(x); });\n}\n\n// Recursive factorial function using the fixed point combinator\nint factorial(int n) {\n    return fix([&](std::function<int(int)> f) {\n        return [n, f](int x) { return x == 0 ? 1 : x * f(x-1); };\n    })(n);\n}\n\nint main() {\n    std::cout << factorial(5) << std::endl; // Output: 120\n    return 0;\n}