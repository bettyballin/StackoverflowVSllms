#include <sys/socket.h>\n#include <net/if.h>\n#include <ifaddrs.h>\n#include <iostream>\n\n// ...\n\nstruct ifaddrs *ifaddr, *ifa;\nint family, s, n;\n\nif (getifaddrs(&ifaddr) == -1) {\n    std::cerr << "getifaddrs failed." << std::endl;\n    exit(-1);\n}\n\n// Iterate through interfaces\nfor (ifa = ifaddr, n = 0; ifa != NULL; ifa = ifa->ifa_next, n++) {\n    if (ifa->ifa_addr == NULL) continue;\n\n    // Check if the interface is not loopback\n    if (!(ifa->ifa_flags & IFF_LOOPBACK)) {\n        // Get the first non-loopback interface address\n        struct sockaddr *addr = ifa->ifa_addr;\n\n        // Create a socket\n        int sock = socket(addr->sa_family, SOCK_STREAM, 0);\n        if (sock == -1) {\n            std::cerr << "socket failed." << std::endl;\n            exit(-1);\n        }\n\n        // Bind the socket to the interface address\n        if (bind(sock, addr, sizeof(struct sockaddr)) == -1) {\n            std::cerr << "bind failed." << std::endl;\n            exit(-1);\n        }\n\n        // ... Use the bound socket ...\n        break;\n    }\n}\n\nfreeifaddrs(ifaddr);