#if __GNUC__ < 3\n#include <strstream>\n#else\n#include <sstream>\n#endif\n\nclass MyStringStream {\npublic:\n    MyStringStream(const char* str = "") {\n#if __GNUC__ < 3\n        str_ = new strstream;\n        (*str_) << str;\n#else\n        str_ = new std::stringstream(str);\n#endif\n    }\n\n    ~MyStringStream() { delete str_; }\n\n    template <typename T>\n    MyStringStream& operator<<(T value) {\n#if __GNUC__ < 3\n        (*str_) << value;\n#else\n        (*str_) << value;\n#endif\n        return *this;\n    }\n\n    std::string str() {\n#if __GNUC__ < 3\n        return str_->str();\n#else\n        return str_->str();\n#endif\n    }\n\nprivate:\n#if __GNUC__ < 3\n    strstream* str_;\n#else\n    std::stringstream* str_;\n#endif\n};