// client.cpp\n#include <windows.h>\n#include <rpc.h>\n\n// Define the interface\nUUID uuid = { 0x12345678, 0x1234, 0x1234, { 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56 } };\n\ninterface IMyInterface\n{\n    HRESULT MyMethod([in] int param, [out] int* result);\n};\n\nint main()\n{\n    RPC_STATUS status;\n    IMyInterface* pInterface = NULL;\n\n    // Initialize RPC\n    RpcInitialize(NULL);\n\n    // Create a binding handle\n    RPC_BINDING_HANDLE hBinding;\n    RpcStringBindingCompose(NULL, (RPC_WSTR)L"ncacn_ip_tcp", (RPC_WSTR)L"localhost", (RPC_WSTR)L"1234", NULL, &hBinding);\n\n    // Create a proxy\n    RpcCreateProxy(hBinding, uuid, (RPC_IF_HANDLE*)&pInterface);\n\n    // Call the RPC method\n    int result;\n    HRESULT hr = pInterface->MyMethod(5, &result);\n\n    // Print the result\n    printf("Result: %d\n", result);\n\n    // Free resources\n    RpcDestroyProxy(pInterface);\n    RpcStringFree(hBinding);\n    RpcShutdown();\n    return 0;\n}