#include <iostream>\n#include <string>\n#include <vector>\n#include <unordered_map>\n\n// Simple hash function (MurmurHash)\nuint64_t hash(const std::string& token) {\n  uint64_t h = 2166136261;\n  for (char c : token) {\n    h ^= c;\n    h *= 1664525;\n  }\n  return h;\n}\n\n// Create a signature for a document\nuint128_t createSignature(const std::vector<std::string>& tokens) {\n  uint128_t signature = 0;\n  for (const auto& token : tokens) {\n    uint64_t hashedToken = hash(token);\n    signature |= (uint128_t)hashedToken << 64;\n  }\n  return signature;\n}\n\nint main() {\n  // Example usage\n  std::vector<std::string> tokens = {"hello", "world", "example"};\n  uint128_t signature = createSignature(tokens);\n  std::cout << "Signature: " << std::hex << signature << std::endl;\n  return 0;\n}