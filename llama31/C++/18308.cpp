#include <mutex>\n#include <condition_variable>\n\nclass Monitor {\npublic:\n    void lock() {\n        mutex_.lock();\n    }\n\n    void unlock() {\n        mutex_.unlock();\n    }\n\n    void wait() {\n        cond_.wait(mutex_);\n    }\n\n    void signal() {\n        cond_.notify_one();\n    }\n\n    void broadcast() {\n        cond_.notify_all();\n    }\n\nprivate:\n    std::mutex mutex_;\n    std::condition_variable cond_;\n};