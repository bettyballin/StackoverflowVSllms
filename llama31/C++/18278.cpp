// Scene node structure\nstruct SceneNode {\n    // ...\n    bool dirty = false; // dirty flag\n};\n\n// Delta list structure\nstruct DeltaList {\n    std::vector<SceneNode*> nodes;\n    std::vector<Change> changes; // Change struct contains node changes (e.g., position, rotation, scale)\n};\n\n// Physics thread\nvoid PhysicsThread() {\n    // Update scene nodes and mark them as dirty\n    sceneNode->dirty = true;\n    deltaList.nodes.push_back(sceneNode);\n    deltaList.changes.push_back(change);\n}\n\n// Graphics thread\nvoid GraphicsThread() {\n    // Receive delta list from physics thread\n    DeltaList deltaList = receiveDeltaList();\n\n    // Apply changes to local scene node structure\n    for (size_t i = 0; i < deltaList.nodes.size(); i++) {\n        SceneNode* node = deltaList.nodes[i];\n        Change change = deltaList.changes[i];\n\n        // Apply change to node\n        node->position = change.position;\n        // ...\n    }\n}