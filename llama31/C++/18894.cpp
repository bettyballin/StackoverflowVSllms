class A {\npublic:\n    typedef void (*EventFunction)(int nEvent);\n\n    void SetEvent(EventFunction func) { handler = func; }\n\n    void EventOne() { handler(1); }\n\nprivate:\n    EventFunction handler;\n};\n\nclass B {\npublic:\n    B() { \n        a.SetEvent(&B::Thunk); \n    }\n\n    static void Thunk(int nEvent) {\n        B* self = static_cast<B*>(thunkData);\n        self->EventFromA(nEvent);\n    }\n\n    void EventFromA(int nEvent) { \n        // do stuff \n    }\n\nprivate:\n    static B* thunkData;\n    A a;\n};\n\nB* B::thunkData = nullptr;