// Define the event interface\nclass CS8SimulationEvents : public IS8SimulationEvents\n{\npublic:\n    // Implement the event methods\n    HRESULT OnSimulationStarted()\n    {\n        // Client logic when simulation started\n        return S_OK;\n    }\n\n    HRESULT OnSimulationStopped()\n    {\n        // Client logic when simulation stopped\n        return S_OK;\n    }\n};\n\n// Create an instance of the event sink\nCS8SimulationEvents* pEventSink = new CS8SimulationEvents();\n\n// Get the connection point container\nhresult = pis8->QueryInterface(__uuidof(IConnectionPointContainer), (void **) &pContainer);\n\n// Find the connection point for the event interface\nhresult = pContainer->FindConnectionPoint(__uuidof(IS8SimulationEvents), &pConnection);\n\n// Advise the event sink\nhresult = pConnection->Advise(pEventSink, &dwCookie);\n\n// Release the connection point container and connection point\npContainer->Release();\npConnection->Release();