void testConcurrentReadWrite() {\n    ReadWriteLock lock;\n    std::vector<std::thread> threads;\n\n    // Create multiple reader threads\n    for (int i = 0; i < 10; i++) {\n        threads.emplace_back([&lock] {\n            lock.readLock();\n            // Simulate read operation\n            std::this_thread::sleep_for(std::chrono::milliseconds(10));\n            lock.readUnlock();\n        });\n    }\n\n    // Create a writer thread\n    threads.emplace_back([&lock] {\n        lock.writeLock();\n        // Simulate write operation\n        std::this_thread::sleep_for(std::chrono::milliseconds(50));\n        lock.writeUnlock();\n    });\n\n    // Wait for all threads to finish\n    for (auto& thread : threads) {\n        thread.join();\n    }\n}