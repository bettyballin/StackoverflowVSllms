#include <Windows.h>\n#include <ShlObj.h>\n\n// Your GUID here\nDEFINE_GUID(CLSID_EncryptionSystem, 0x00000000, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);\n\nclass CEncryptionSystem : public IContextMenu\n{\npublic:\n    STDMETHODIMP QueryContextMenu(HMENU hMenu, UINT indexMenu, UINT idCmdFirst, UINT idCmdLast, UINT uFlags)\n    {\n        // Add your "Open With" menu item here\n        InsertMenu(hMenu, indexMenu, MF_BYPOSITION, idCmdFirst, _T("Open with EncryptionSystem"));\n        return S_OK;\n    }\n\n    STDMETHODIMP InvokeCommand(LPCMINVOKECOMMANDINFO pici)\n    {\n        // Handle the "Open With" command here\n        if (pici->cbSize == sizeof(CMINVOKECOMMANDINFO) && pici->fMask & CMIC_MASK_FLAG_NO_UI)\n        {\n            // Get the selected file\n            LPITEMIDLIST pidl = (LPITEMIDLIST)pici->lpDirectory;\n            LPCWSTR pszFile = NULL;\n            if (pidl)\n            {\n                pszFile = (LPCWSTR)malloc(pidl->mkid.cb);\n                if (pszFile)\n                {\n                    memcpy(pszFile, pidl->mkid.abID, pidl->mkid.cb);\n                }\n            }\n\n            // Open the file with your program\n            SHELLEXECUTEINFO sei = { sizeof(sei) };\n            sei.fMask = SEE_MASK_NOCLOSEPROCESS;\n            sei.lpFile = pszFile;\n            sei.lpParameters = NULL;\n            sei.lpDirectory = NULL;\n            sei.nShow = SW_SHOWNORMAL;\n            ShellExecuteEx(&sei);\n\n            free(pszFile);\n        }\n        return S_OK;\n    }\n\n    STDMETHODIMP GetCommandString(UINT_PTR idCmd, UINT uType, UINT *pReserved, LPSTR pszName, UINT cchMax)\n    {\n        // Return the "Open With" command string here\n        if (idCmd == 0 && uType == GCS_VERBW && cchMax > 0)\n        {\n            lstrcpyA(pszName, "Open with EncryptionSystem");\n            return S_OK;\n        }\n        return E_NOTIMPL;\n    }\n};\n\nSTDAPI DllRegisterServer(void)\n{\n    // Register the shell extension\n    HRESULT hr = S_OK;\n    hr = RegisterServer(CLSID_EncryptionSystem, L"EncryptionSystem Context Menu Handler", L"C:\\Program Files\\EncryptionSystem\\EncryptionSystem.dll", NULL);\n    return hr;\n}\n\nSTDAPI DllUnregisterServer(void)\n{\n    // Unregister the shell extension\n    HRESULT hr = S_OK;\n    hr = UnregisterServer(CLSID_EncryptionSystem);\n    return hr;\n}