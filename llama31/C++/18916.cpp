#include <Windows.h>\n\nclass MessageWindow {\npublic:\n    MessageWindow() : hwnd_(nullptr) {}\n    ~MessageWindow() {\n        if (hwnd_) {\n            DestroyWindow(hwnd_);\n        }\n    }\n\n    bool Create() {\n        hwnd_ = CreateWindowEx(0, L"STATIC", nullptr, 0, 0, 0, 0, 0, HWND_MESSAGE, nullptr, nullptr, nullptr);\n        return hwnd_ != nullptr;\n    }\n\n    LRESULT CALLBACK WindowProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {\n        switch (msg) {\n            case WM_CLOSE:\n                PostQuitMessage(0);\n                break;\n            default:\n                return DefWindowProc(hwnd, msg, wParam, lParam);\n        }\n        return 0;\n    }\n\n    bool Run() {\n        MSG msg;\n        while (GetMessage(&msg, hwnd_, 0, 0)) {\n            TranslateMessage(&msg);\n            DispatchMessage(&msg);\n        }\n        return true;\n    }\n\nprivate:\n    HWND hwnd_;\n};