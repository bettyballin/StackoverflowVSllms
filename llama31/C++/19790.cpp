template <class ItemType>\nclass ContainerBase {\nprotected:\n    int _metaData;\n    ItemType _item;\n\n    void setMetaData(int metaData) { _metaData = metaData; }\n    void setItem(const ItemType& item) { _item = item; }\n    int getMetaData() const { return _metaData; }\n    ItemType getItem() const { return _item; }\n};\n\ntemplate <class ItemType, class Functor>\nclass MyContainer : public ContainerBase<ItemType> {\npublic:\n    template <class RHSFunctor>\n    void CopyFrom(const MyContainer<ItemType, RHSFunctor>& copyFrom) {\n        setMetaData(copyFrom.getMetaData());\n        setItem(copyFrom.getItem());\n    }\n};