#include <string>\n#include <cctype>\n\nbool varies_in_single_number_field(const std::string& str1, const std::string& str2) {\n    bool in_differing_substring = false;\n    bool passed_differing_substring = false;\n    size_t i = 0, j = 0;\n\n    while (i < str1.size() && j < str2.size()) {\n        if (str1[i] != str2[j]) {\n            if (passed_differing_substring) {\n                return false;\n            }\n            in_differing_substring = true;\n            if (!std::isdigit(str1[i]) || !std::isdigit(str2[j])) {\n                return false;\n            }\n        } else if (in_differing_substring) {\n            in_differing_substring = false;\n            passed_differing_substring = true;\n        }\n        ++i;\n        ++j;\n    }\n\n    // If one string is longer than the other and the diff is at the end\n    if (i < str1.size()) {\n        if (passed_differing_substring || !std::isdigit(str1[i])) {\n            return false;\n        }\n        while (i < str1.size()) {\n            if (!std::isdigit(str1[i])) {\n                return false;\n            }\n            ++i;\n        }\n        passed_differing_substring = true;\n    } else if (j < str2.size()) {\n        if (passed_differing_substring || !std::isdigit(str2[j])) {\n            return false;\n        }\n        while (j < str2.size()) {\n            if (!std::isdigit(str2[j])) {\n                return false;\n            }\n            ++j;\n        }\n        passed_differing_substring = true;\n    }\n\n    return passed_differing_substring;\n}