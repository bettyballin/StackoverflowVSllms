#include <fstream>\n#include <cstdio>\n\n// Function to get a FILE* from a std::fstream\nFILE* get_file_ptr(std::fstream& fs) {\n#ifdef _WIN32\n    // On Windows, use _fdopen\n    return _fdopen(fs.rdbuf()->fd(), fs.is_open() ? "rb+" : "wb+");\n#elif defined(__unix__) || defined(__APPLE__)\n    // On Unix-like systems, use fdopen\n    return fdopen(fs.rdbuf()->fd(), fs.is_open() ? "r+" : "w+");\n#else\n    // Handle other platforms (not tested)\n    return nullptr;\n#endif\n}\n\nint main() {\n    std::fstream fs("example.txt", std::ios_base::in | std::ios_base::out);\n    if (fs.is_open()) {\n        FILE* file_ptr = get_file_ptr(fs);\n        if (file_ptr) {\n            // Use the FILE* with your C library\n            // Don't forget to fclose(file_ptr) when done\n            fclose(file_ptr);\n        }\n        fs.close();\n    }\n    return 0;\n}