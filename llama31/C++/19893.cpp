#include <Windows.h>\n#include <iostream>\n\nint main() {\n    HKEY hKey;\n    DWORD dwValue = 0;\n    DWORD dwBufferSize = sizeof(dwValue);\n\n    // Open the registry key\n    LONG lRes = RegOpenKeyEx(HKEY_CURRENT_USER, L"Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer", 0, KEY_READ | KEY_WRITE, &hKey);\n    if (lRes != ERROR_SUCCESS) {\n        std::cerr << "Failed to open key" << std::endl;\n        return 1;\n    }\n\n    // Read the value\n    lRes = RegQueryValueEx(hKey, L"NoDriveTypeAutoRun", 0, NULL, (LPBYTE)&dwValue, &dwBufferSize);\n    if (lRes != ERROR_SUCCESS) {\n        std::cerr << "Failed to read value" << std::endl;\n        RegCloseKey(hKey);\n        return 1;\n    }\n\n    // Check if 0x20 is in the value and subtract it if present\n    if (dwValue & 0x20) {\n        dwValue &= ~0x20; // Subtract 0x20 from the value (bitwise AND with the complement of 0x20)\n        // Write the new value back\n        lRes = RegSetValueEx(hKey, L"NoDriveTypeAutoRun", 0, REG_DWORD, (LPBYTE)&dwValue, sizeof(dwValue));\n        if (lRes != ERROR_SUCCESS) {\n            std::cerr << "Failed to write new value" << std::endl;\n        }\n    }\n\n    RegCloseKey(hKey);\n\n    return 0;\n}