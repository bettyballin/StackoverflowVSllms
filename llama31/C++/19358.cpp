#include <iostream>\n\n// Define a struct to represent a simple expression\nstruct Expr {\n    int op;  // operator (e.g., +, -, \*, /)\n    int arg1;  // first argument\n    int arg2;  // second argument\n};\n\n// Define a function that takes an Expr and evaluates it\nint eval(Expr expr) {\n    switch (expr.op) {\n        case 0:  // addition\n            return expr.arg1 + expr.arg2;\n        case 1:  // subtraction\n            return expr.arg1 - expr.arg2;\n        // ...\n    }\n}\n\nint main() {\n    // Create an Expr instance that represents the expression "2 + 3"\n    Expr expr = {0, 2, 3};\n\n    // Evaluate the expression and print the result\n    int result = eval(expr);\n    std::cout << "Result: " << result << std::endl;\n\n    // Now, manipulate the Expr instance to change the operator to subtraction\n    expr.op = 1;\n\n    // Evaluate the modified expression and print the result\n    result = eval(expr);\n    std::cout << "Result: " << result << std::endl;\n\n    return 0;\n}