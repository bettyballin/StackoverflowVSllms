int maxSumRec(const vector<int>& a, int left, int right) {\n    if (left == right) {\n        return max(a[left], 0);\n    }\n\n    int center = (left + right) / 2;\n    int maxLeftSum = maxSumRec(a, left, center);\n    int maxRightSum = maxSumRec(a, center + 1, right);\n\n    int leftBorderSum = 0, leftBorderMax = 0;\n    for (int i = center; i >= left; --i) {\n        leftBorderSum += a[i];\n        leftBorderMax = max(leftBorderMax, leftBorderSum);\n    }\n\n    int rightBorderSum = 0, rightBorderMax = 0;\n    for (int i = center + 1; i <= right; ++i) {\n        rightBorderSum += a[i];\n        rightBorderMax = max(rightBorderMax, rightBorderSum);\n    }\n\n    return max(maxLeftSum, max(maxRightSum, leftBorderMax + rightBorderMax));\n}