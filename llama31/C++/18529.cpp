// dll.h\n#define DLLAPI __declspec(dllexport)\n\nclass DLLAPI Base\n{\npublic:\n    virtual void B();\n};\n\nclass Derived : public Base // Not exported\n{\npublic:\n    virtual void B();\n    virtual void D();\n};\n\n// dll.cpp\nvoid Base::B() {}\nvoid Derived::B() {}\nvoid Derived::D() {}\n\n// main.cpp (outside the DLL)\n#include "dll.h"\n\nint main()\n{\n    Base* base = new Base(); // OK\n    base->B(); // OK\n\n    Derived* derived = new Derived(); // Error: 'Derived' is not accessible\n    derived->B(); // Error: 'Derived' is not accessible\n    derived->D(); // Error: 'Derived' is not accessible\n\n    return 0;\n}