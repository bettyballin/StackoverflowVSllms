template <class HashingSolution>\nstruct State {\n    void Update(int idx, int val) {\n        UpdateHash(idx, val);\n    }\n\n    int GetState(int idx) {\n        return ...;\n    }\n\n    template <class T = HashingSolution>\n    void UpdateHash(int idx, int val) {\n        T::UpdateHash(idx, val, *this);\n    }\n};\n\nstruct MyHashingSolution {\n    template <class State>\n    static void UpdateHash(int idx, int val, State& state) {\n        // Now you have access to state.GetState()\n        state.GetState(idx);\n    }\n\n    void RecalcHash() {\n        // ...\n        UpdateHash(idx, val, *this); // Works!\n        // ...\n    }\n};