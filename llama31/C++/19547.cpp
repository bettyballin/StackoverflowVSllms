#include <functional>\n#include <unordered_set>\n#include <vector>\n\n// Assuming Tile is a struct or class representing a tile\nstruct Tile {\n    // ...\n};\n\n// Hash function for a vector of tiles\nstruct TileVectorHash {\n    std::size_t operator()(const std::vector<Tile>& tiles) const {\n        std::size_t hash = 0;\n        for (const auto& tile : tiles) {\n            // Combine tile properties into a single hash value\n            hash ^= std::hash<Tile>{}(tile);\n        }\n        return hash;\n    }\n};\n\n// Store hashed positions in an unordered set\nstd::unordered_set<std::vector<Tile>, TileVectorHash> badPositions;