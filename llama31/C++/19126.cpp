#include <windows.h>\n#include <objidl.h>\n#include <unknwn.h>\n\n// Assuming MyApp.ApplicationClass is a registered COM coclass\nMyApp::ApplicationClass* pApp = new MyApp::ApplicationClass();\n\n// Get the running object table\nIRunningObjectTable* pROT = NULL;\nHRESULT hr = GetRunningObjectTable(0, &pROT);\nif (FAILED(hr)) {\n    // Handle error\n}\n\n// Get the IUnknown interface of the instantiated COM object\nIUnknown* pUnk = NULL;\nhr = pROT->GetObject(pApp->GetIID(), &pUnk);\nif (FAILED(hr)) {\n    // Handle error\n}\n\n// Query for the IPersist interface\nIPersist* pPersist = NULL;\nhr = pUnk->QueryInterface(IID_IPersist, (void**)&pPersist);\nif (FAILED(hr)) {\n    // Handle error\n}\n\n// Get the HANDLE of the process that owns the object\nHANDLE hProcess = NULL;\nhr = pPersist->GetOwner(&hProcess);\nif (FAILED(hr)) {\n    // Handle error\n}\n\n// Get the PID from the HANDLE\nDWORD dwPID = GetProcessId(hProcess);\n\n// Clean up\npPersist->Release();\npUnk->Release();\npROT->Release();