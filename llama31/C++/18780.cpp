// Node types\nenum NodeType {\n    INTEGER,\n    SYMBOL,\n    LIST\n};\n\n// Node structure\nstruct Node {\n    NodeType type;\n    int value; // for INTEGER nodes\n    std::string symbol; // for SYMBOL nodes\n    std::vector<Node*> children; // for LIST nodes\n};\n\n// Evaluator function\nint eval(Node* node) {\n    switch (node->type) {\n        case INTEGER:\n            return node->value;\n        case SYMBOL:\n            // Handle symbol lookup and binding\n            break;\n        case LIST:\n            // Recursively evaluate children and apply builtins\n            break;\n    }\n}