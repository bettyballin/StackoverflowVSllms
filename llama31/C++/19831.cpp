#include <mshtml.h>\n#include <exdisp.h>\n\n// Your plugin class\nclass MyPlugin : public IDispatch {\npublic:\n    // ...\n\n    // Implement the DWebBrowserEvents2 interface\n    BEGIN_INTERFACE_PART(DWebBrowserEvents2, IID_DWebBrowserEvents2)\n        STDMETHOD(OnNavigateComplete2)(IDispatch* pDisp, VARIANT* URL) {\n            // Navigation complete, check if the user navigated away from the page\n            if (pDisp != NULL && URL != NULL) {\n                BSTR bstrURL = URL->bstrVal;\n                if (bstrURL != NULL) {\n                    // Compare the current URL with the previous one\n                    // If they are different, the user navigated away\n                    if (wcscmp(bstrURL, m_prevURL) != 0) {\n                        // Destroy the window\n                        DestroyWindow(m_hWnd);\n                    }\n                    SysFreeString(bstrURL);\n                }\n            }\n            return S_OK;\n        }\n\n        STDMETHOD(OnBeforeNavigate2)(IDispatch* pDisp, VARIANT* URL, VARIANT* Flags, VARIANT* TargetFrameName, VARIANT* PostData, VARIANT* Headers, VARIANT_BOOL* Cancel) {\n            // Store the current URL\n            if (URL != NULL) {\n                m_prevURL = URL->bstrVal;\n            }\n            return S_OK;\n        }\n    END_INTERFACE_PART(DWebBrowserEvents2)\n\n    // ...\n};\n\n// Your plugin initialization code\nHRESULT MyPlugin::Init() {\n    // ...\n\n    // Register for DWebBrowserEvents2 events\n    HRESULT hr = ConnectObject(m_pWebBrowser, IID_DWebBrowserEvents2, (IUnknown*)this, &m_dwCookie);\n    if (FAILED(hr)) {\n        // Handle error\n    }\n\n    return S_OK;\n}