// Define a federated search class\nclass FederatedSearch {\n    private $sources;\n\n    public function __construct($sources) {\n        $this->sources = $sources;\n    }\n\n    public function search($query, $limit, $offset) {\n        $results = array();\n        foreach ($this->sources as $source) {\n            $results = array_merge($results, $source->search($query, $limit, $offset));\n        }\n        usort($results, function($a, $b) {\n            return strtotime($a['date']) - strtotime($b['date']);\n        });\n        return array_slice($results, $offset, $limit);\n    }\n}\n\n// Create a federated search instance\n$federatedSearch = new FederatedSearch(array(\n    new OurDatabaseSource(),\n    new ApiSource()\n));\n\n// Perform a search\n$results = $federatedSearch->search('VIDEO', 20, 0);