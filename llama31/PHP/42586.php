class Bib {\n   protected $bibid;\n\n   public function __construct($new_bibid) {\n      if (!$this->bibid = self::validate_bibid($new_bibid)) {\n         throw new InvalidArgumentException('Invalid bibid');\n      }\n      // carry on with other stuff if valid bibid\n   }\n\n   private static function validate_bibid($test_bibid) {\n      // call this method every time you get a bibid from the user\n      if (!is_int($test_bibid)) {\n         return false;\n      }\n      return (int)$test_bibid;\n   }\n}