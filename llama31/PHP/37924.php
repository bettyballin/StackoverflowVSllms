use Cake\Controller\Controller;\nuse Cake\Utility\Hash;\nuse League\OAuth2\Client\Provider\GenericProvider;\n\nclass UsersController extends Controller\n{\n    public function login()\n    {\n        $provider = new GenericProvider(\n            [\n                'clientId' => Configure::read('providers.wordpress.clientId'),\n                'clientSecret' => Configure::read('providers.wordpress.clientSecret'),\n                'authorizationUrl' => Configure::read('providers.wordpress.authorizationUrl'),\n                'tokenUrl' => Configure::read('providers.wordpress.tokenUrl'),\n            ]\n        );\n\n        // Redirect to WordPress IdP for authentication\n        $authUrl = $provider->getAuthorizationUrl();\n        return $this->redirect($authUrl);\n    }\n\n    public function callback()\n    {\n        // Handle authorization code flow\n        $code = $this->request->getQuery('code');\n        $provider = new GenericProvider(\n            [\n                'clientId' => Configure::read('providers.wordpress.clientId'),\n                'clientSecret' => Configure::read('providers.wordpress.clientSecret'),\n                'tokenUrl' => Configure::read('providers.wordpress.tokenUrl'),\n            ]\n        );\n\n        // Exchange authorization code for access token\n        $token = $provider->getAccessToken('authorization_code', [\n            'code' => $code,\n        ]);\n\n        // Verify access token\n        $introspectionUrl = Configure::read('providers.wordpress.introspectionUrl');\n        $response = $provider->getHttpClient()->get($introspectionUrl, [\n            'headers' => [\n                'Authorization' => 'Bearer ' . $token->getToken(),\n            ],\n        ]);\n\n        $userData = json_decode($response->getBody(), true);\n        // Use $userData to authenticate the user in CakePHP\n    }\n}