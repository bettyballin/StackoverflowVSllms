interface DatabaseConnection {\n    public function connect($db);\n}\n\nclass DatabaseConnector implements DatabaseConnection {\n    public function connect($db) {\n        // database connection logic\n    }\n}\n\nclass ObjectFactory {\n    private $databaseConnector;\n\n    public function __construct(DatabaseConnector $databaseConnector) {\n        $this->databaseConnector = $databaseConnector;\n    }\n\n    public function create($class, $params = null) {\n        // create object logic\n    }\n}\n\nclass Secondary {\n    private $databaseConnection;\n\n    public function __construct(DatabaseConnection $databaseConnection) {\n        $this->databaseConnection = $databaseConnection;\n    }\n\n    public function doSomething() {\n        $this->databaseConnection->connect('users');\n        // do something with the database connection\n    }\n}