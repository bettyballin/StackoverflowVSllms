class CustomIterator implements Iterator {\n    private $array;\n\n    public function __construct(array $array) {\n        $this->array = $array;\n    }\n\n    public function rewind() {\n        reset($this->array);\n    }\n\n    public function current() {\n        return current($this->array);\n    }\n\n    public function key() {\n        return key($this->array);\n    }\n\n    public function next() {\n        next($this->array);\n    }\n\n    public function valid() {\n        return key($this->array) !== null;\n    }\n}\n\nclass Foo implements IteratorAggregate {\n    protected $_array = array('foo'=>'bar', 'baz'=>'quux');\n\n    public function getIterator() {\n        return new CustomIterator($this->_array);\n    }\n}