function extractWords($text) {\n    $text = strtolower($text);\n    $text = preg_replace('/[^\w\s]/', '', $text);\n    $words = explode(' ', $text);\n    return array_unique($words);\n}\n\nfunction calculateWeights($text) {\n    $words = extractWords($text);\n    $weights = array();\n    foreach ($words as $word) {\n        $weights[$word] = substr_count($text, $word);\n    }\n    return $weights;\n}\n\nfunction buildMatrix($documents) {\n    $allWords = array();\n    foreach ($documents as $document) {\n        $words = extractWords($document);\n        $allWords = array_merge($allWords, $words);\n    }\n    $allWords = array_unique($allWords);\n    sort($allWords);\n\n    $matrix = array();\n    foreach ($allWords as $word) {\n        $row = array();\n        foreach ($documents as $document) {\n            $weights = calculateWeights($document);\n            $row[] = isset($weights[$word]) ? $weights[$word] : 0;\n        }\n        $matrix[] = $row;\n    }\n    return $matrix;\n}\n\n$documents = array("This is a test document.", "Another test document.");\n$matrix = buildMatrix($documents);\nlist($U, $S, $V) = svd($matrix); // svd function is not defined here\n\nfunction reduceDimension($S, $k) {\n    $reducedS = array();\n    for ($i = 0; $i < $k; $i++) {\n        $reducedS[] = $S[$i];\n    }\n    return $reducedS;\n}\n\n$k = 2; // reduce dimensionality to 2\n$reducedS = reduceDimension($S, $k);