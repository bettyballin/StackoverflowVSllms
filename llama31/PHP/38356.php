function isValidUtf8($string) {\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        $byte1 = ord($string[$i]);\n\n        if ($byte1 <= 127) {\n            // ASCII byte, valid\n            continue;\n        }\n\n        if ($byte1 >= 194 && $byte1 <= 223) {\n            // 2-byte sequence\n            if ($i + 1 >= $len) {\n                return false; // Not enough bytes left\n            }\n            $byte2 = ord($string[$i + 1]);\n            if ($byte2 < 128 || $byte2 > 191) {\n                return false; // Invalid second byte\n            }\n            $i += 1;\n            continue;\n        }\n\n        if ($byte1 >= 224 && $byte1 <= 239) {\n            // 3-byte sequence\n            if ($i + 2 >= $len) {\n                return false; // Not enough bytes left\n            }\n            $byte2 = ord($string[$i + 1]);\n            $byte3 = ord($string[$i + 2]);\n            if ($byte2 < 128 || $byte2 > 191 || $byte3 < 128 || $byte3 > 191) {\n                return false; // Invalid second or third byte\n            }\n            $i += 2;\n            continue;\n        }\n\n        if ($byte1 >= 240 && $byte1 <= 247) {\n            // 4-byte sequence\n            if ($i + 3 >= $len) {\n                return false; // Not enough bytes left\n            }\n            $byte2 = ord($string[$i + 1]);\n            $byte3 = ord($string[$i + 2]);\n            $byte4 = ord($string[$i + 3]);\n            if ($byte2 < 128 || $byte2 > 191 || $byte3 < 128 || $byte3 > 191 || $byte4 < 128 || $byte4 > 191) {\n                return false; // Invalid second, third, or fourth byte\n            }\n            $i += 3;\n            continue;\n        }\n\n        // Invalid first byte\n        return false;\n    }\n\n    return true; // String is valid UTF-8\n}