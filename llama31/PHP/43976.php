abstract class Item {\n    protected $id;\n    protected $name;\n    protected $description;\n    protected $type; // e.g. "weapon", "potion", "teleport"\n\n    public function __construct($id, $name, $description, $type) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->description = $description;\n        $this->type = $type;\n    }\n\n    abstract public function use();\n}\n\nclass Weapon extends Item {\n    private $damage;\n\n    public function __construct($id, $name, $description, $damage) {\n        parent::__construct($id, $name, $description, "weapon");\n        $this->damage = $damage;\n    }\n\n    public function use() {\n        // Code to equip the weapon and calculate damage\n    }\n}\n\nclass Potion extends Item {\n    private $healingAmount;\n\n    public function __construct($id, $name, $description, $healingAmount) {\n        parent::__construct($id, $name, $description, "potion");\n        $this->healingAmount = $healingAmount;\n    }\n\n    public function use() {\n        // Code to heal the player\n    }\n}\n\nclass Teleport extends Item {\n    private $location;\n\n    public function __construct($id, $name, $description, $location) {\n        parent::__construct($id, $name, $description, "teleport");\n        $this->location = $location;\n    }\n\n    public function use() {\n        // Code to teleport the player\n    }\n}