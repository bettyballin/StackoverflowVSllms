// Field.php\nabstract class Field {\n    protected $name;\n    protected $label;\n    protected $type;\n\n    public function __construct($name, $label, $type) {\n        $this->name = $name;\n        $this->label = $label;\n        $this->type = $type;\n    }\n\n    abstract public function render();\n}\n\n// TextField.php\nclass TextField extends Field {\n    public function render() {\n        return "<label for='{$this->name}'>{$this->label}</label><input type='text' name='{$this->name}' id='{$this->name}'>";\n    }\n}\n\n// DropdownField.php\nclass DropdownField extends Field {\n    private $options;\n\n    public function __construct($name, $label, $options) {\n        parent::__construct($name, $label, 'select');\n        $this->options = $options;\n    }\n\n    public function render() {\n        $optionsHtml = '';\n        foreach ($this->options as $value => $text) {\n            $optionsHtml .= "<option value='{$value}'>{$text}</option>";\n        }\n        return "<label for='{$this->name}'>{$this->label}</label><select name='{$this->name}' id='{$this->name}'>{$optionsHtml}</select>";\n    }\n}\n\n// Form.php\nclass Form {\n    private $fields;\n\n    public function __construct() {\n        $this->fields = [];\n    }\n\n    public function addField(Field $field) {\n        $this->fields[] = $field;\n    }\n\n    public function render() {\n        $formHtml = '';\n        foreach ($this->fields as $field) {\n            $formHtml .= $field->render();\n        }\n        return "<form>{$formHtml}</form>";\n    }\n}\n\n// Example usage:\n$form = new Form();\n\n$textField = new TextField('username', 'Username');\n$form->addField($textField);\n\n$dropdownOptions = ['admin' => 'Admin', 'moderator' => 'Moderator'];\n$dropdownField = new DropdownField('role', 'Role', $dropdownOptions);\n$form->addField($dropdownField);\n\necho $form->render();