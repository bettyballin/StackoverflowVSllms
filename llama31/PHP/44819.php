function validate_email($email) {\n    $pattern = '/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/';\n    return preg_match($pattern, $email);\n}\n\nfunction send_email($name, $from, $to, $subject, $message, $bcc = null, $attachments = null) {\n    if (!validate_email($from)) {\n        throw new Exception("Invalid from email address");\n    }\n    \n    if (!is_array($to)) {\n        $to = explode(',', $to);\n    }\n    \n    foreach ($to as $email) {\n        if (!validate_email($email)) {\n            throw new Exception("Invalid to email address");\n        }\n    }\n    \n    $boundary = md5(microtime(true) . mt_rand(0, PHP_INT_MAX));\n    \n    $headers = array(\n        'MIME-Version: 1.0',\n        'Content-Type: multipart/mixed; boundary="Mixed' . $boundary . '"',\n        'Date: ' . date('r', time()),\n        'From: "' . $name . '" <' . $from . '>',\n        'Reply-To: "' . $name . '" <' . $from . '>',\n        'Return-Path: "' . $name . '" <' . $from . '>',\n        'X-Mailer: PHP ' . phpversion(),\n        'X-Priority: 2',\n        'X-MSMail-Priority: High',\n        'X-Originating-IP: ' . $_SERVER['SERVER_ADDR'],\n    );\n    \n    if (!is_null($bcc)) {\n        if (!is_array($bcc)) {\n            $bcc = explode(',', $bcc);\n        }\n        \n        foreach ($bcc as $email) {\n            if (!validate_email($email)) {\n                throw new Exception("Invalid bcc email address");\n            }\n        }\n        \n        $headers[] = 'BCC: ' . implode(', ', $bcc);\n    }\n    \n    if (!is_null($attachments)) {\n        settype($attachments, 'array');\n        \n        foreach ($attachments as $key => $value) {\n            if (!is_file($value)) {\n                unset($attachments[$key]);\n            }\n        }\n    }\n    \n    $message = array(\n        'This is a multi-part message in MIME format.',\n        '',\n        '--Mixed' . $boundary,\n        'Content-Type: multipart/alternative; boundary="Alt' . $boundary . '"',\n        '',\n        '--Alt' . $boundary,\n        'Content-Type: text/plain; charset="UTF-8"',\n        'Content-Disposition: inline',\n        'Content-Transfer-Encoding: quoted-printable',\n        '',\n        quoted_printable_encode(trim(strip_tags($message, '<a>'))),\n        '',\n        '--Alt' . $boundary,\n        'Content-Type: text/html; charset="UTF-8"',\n        'Content-Disposition: inline',\n        'Content-Transfer-Encoding: quoted-printable',\n        '',\n        quoted_printable_encode(trim($message)),\n        '',\n        '--Alt' . $boundary . '--',\n    );\n    \n    if (!is_null($attachments)) {\n        $message[] = '';\n        foreach ($attachments as $attachment) {\n            $message[] = '--Mixed' . $boundary;\n            $message[] = 'Content-Type: application/octet-stream; name="' . basename($attachment) . '"';\n            $message[] = 'Content-Disposition: attachment; filename="' . basename($attachment) . '"';\n            $message[] = 'Content-Transfer-Encoding: base64';\n            $message[] = '';\n            $message[] = trim(chunk_split(base64_encode(file_get_contents($attachment))));\n        }\n        $message[] = '--Mixed' . $boundary . '--';\n    }\n    \n    $message = implode("\n", $message);\n    \n    if (!mail($to, stripslashes($subject), $message, implode("\n", $headers))) {\n        throw new Exception("Failed to send email");\n    }\n    \n    return true;\n}