class CommentHandler {\n    private $db;\n\n    public function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function displayCommentForm() {\n        // Display a simple comment form\n        $html = '<form action="" method="post">';\n        $html .= '<textarea name="comment"></textarea>';\n        $html .= '<input type="submit" value="Post Comment">';\n        $html .= '</form>';\n        return $html;\n    }\n\n    public function validateComment($comment) {\n        // Basic validation, you might want to add more\n        $comment = trim($comment);\n        if (empty($comment)) {\n            throw new Exception("Comment cannot be empty");\n        }\n        return $comment;\n    }\n\n    public function sanitizeComment($comment) {\n        // Sanitize user input to prevent XSS\n        return htmlspecialchars($comment, ENT_QUOTES, 'UTF-8');\n    }\n\n    public function insertCommentIntoDatabase($comment) {\n        // Insert comment into database\n        $query = "INSERT INTO comments (comment) VALUES (:comment)";\n        $stmt = $this->db->prepare($query);\n        $stmt->bindParam(':comment', $comment);\n        $stmt->execute();\n    }\n\n    public function handleCommentSubmission() {\n        if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n            try {\n                $comment = $this->validateComment($_POST['comment']);\n                $comment = $this->sanitizeComment($comment);\n                $this->insertCommentIntoDatabase($comment);\n                echo "Comment posted successfully!";\n            } catch (Exception $e) {\n                echo "Error: " . $e->getMessage();\n            }\n        }\n    }\n}