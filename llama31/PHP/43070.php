static function getAll($conditions = ' ')\n{\n    /* Retrieve all the records from the\n     * database according subject to\n     * conditions\n     */\n\n    $db = null;\n    $results = null;\n    $records = array();\n    $query = "SELECT id, created, modified, username, url, title, description, points, ranking, \n              (SELECT COUNT(*) FROM votes WHERE article_id = articles.id) AS vote_count\n              FROM articles $conditions";\n    try\n    {\n        $db = parent::getConnection(); \n        $results = parent::execSql($query);\n\n        while($row = $results->fetch_assoc())\n        {\n            $r_id = $row['id'];\n            $r_created = $row['created'];\n            $r_modified = $row['modified'];\n\n            $r_title = $row['title'];\n            $r_description = $row['description'];\n\n            if(!get_magic_quotes_gpc())\n            {\n                $r_title = stripslashes($r_title);\n                $r_description = stripslashes($r_description);\n            }\n\n            $r_url = $row['url'];\n            $r_username = $row['username'];\n            $r_points = $row['points'];\n            $r_ranking = $row['ranking'];\n            $vote_count = $row['vote_count'];\n\n            $article = new Article($r_title, $r_description , $r_url, $r_username, $r_created, $r_modified);\n            $article->id = $r_id;\n            $article->points = $r_points;\n            $article->ranking = $r_ranking;\n            $article->vote_count = $vote_count;\n\n            // If the article has only one vote, sort by created date in descending order\n            if ($vote_count == 1) {\n                $records[] = $article;\n                usort($records, function($a, $b) {\n                    return strtotime($b->created) - strtotime($a->created);\n                });\n            } else {\n                $records[] = $article;\n            }\n        }\n        parent::closeConnection($db);\n    }\n    catch(Exception $e)\n    {\n        throw $e;\n    }\n\n    return $records;\n}