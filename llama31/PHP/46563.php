class Singleton {\n    // object instance\n    private static $instance;\n\n    protected function __construct() { }\n    public function __clone() { }\n    public function __wakeup() { }\n\n    protected static function getInstance() {\n        if (!static::$instance instanceof static) { \n            static::$instance = new static;\n\n            if(static::$instance instanceof Singleton)\n                echo "made Singleton object<br />";\n\n            if(static::$instance instanceof Test)\n                echo "made Test object<br />";\n        }\n        return static::$instance;\n    }\n}\n\nclass Test extends Singleton {\n    private static $values=array();\n\n    protected function load(){\n        $this->values['a-value'] = "test";\n    }\n\n    public static function get($arg){\n        if(count(static::getInstance()->values)===0)\n            static::getInstance()->load();\n\n        if(isset(static::getInstance()->values[$arg]))\n            return static::getInstance()->values[$arg];\n\n        return false;\n    }\n}