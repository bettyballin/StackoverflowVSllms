// In your Bootstrap.php file\npublic function _initLayout()\n{\n    $layout = Zend_Layout::startMvc();\n    $view = $layout->getView();\n    $view->addHelperPath('My/View/Helper', 'My_View_Helper');\n    $layout->setLayoutPath(APPLICATION_PATH . '/layouts/scripts');\n    $layout->setViewSuffix('phtml');\n}\n\n// Create a custom layout helper\n// application/layouts/helpers/Layout.php\nclass My_View_Helper_Layout extends Zend_View_Helper_Abstract\n{\n    public function layout()\n    {\n        $layout = Zend_Layout::getMvcInstance();\n        return $layout;\n    }\n}\n\n// In your controller action\npublic function indexAction()\n{\n    // Get the layout instance\n    $layout = $this->view->layout()->getMvcInstance();\n    \n    // Get the page contents from the database\n    $contents = $this->_getPageContents();\n    \n    // Iterate through the contents and execute the actions\n    foreach ($contents as $item) {\n        $action = $item['action'];\n        $controller = $item['controller'];\n        $params = array('content' => $item);\n        \n        // Use the ActionStack to execute the actions\n        $stack = Zend_Controller_Action_HelperBroker::getStaticHelper('actionStack');\n        $stack->pushStack($controller, $action, $params);\n    }\n    \n    // Set the layout containers\n    $layout->getView()->left_container = $this->view->render('left.phtml');\n    $layout->getView()->center_container = $this->view->render('center.phtml');\n    $layout->getView()->right_container = $this->view->render('right.phtml');\n}