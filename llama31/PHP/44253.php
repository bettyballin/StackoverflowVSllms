<?php\n  // Store the last message ID in a file\n  $lastMessageIdFile = 'last_message_id.txt';\n\n  // Function to update the last message ID\n  function updateLastMessageId($id) {\n    global $lastMessageIdFile;\n    file_put_contents($lastMessageIdFile, $id);\n  }\n\n  // Function to get the last message ID\n  function getLastMessageId() {\n    global $lastMessageIdFile;\n    return (int) file_get_contents($lastMessageIdFile);\n  }\n\n  // Simulate new messages being added\n  function getNewMessages($lastId) {\n    // Simulate a database query or any other data source\n    $messages = array(\n      array('id' => 1, 'message' => 'Hello, world!'),\n      array('id' => 2, 'message' => 'Long polling is cool!'),\n      array('id' => 3, 'message' => 'New message!')\n    );\n\n    $newMessages = array_filter($messages, function($message) use ($lastId) {\n      return $message['id'] > $lastId;\n    });\n\n    return $newMessages;\n  }\n\n  // Long polling endpoint\n  function longPoll($lastId) {\n    $newMessages = getNewMessages($lastId);\n    if (!empty($newMessages)) {\n      updateLastMessageId(max(array_column($newMessages, 'id')));\n      echo json_encode($newMessages);\n    } else {\n      // Sleep for 10 seconds and try again\n      sleep(10);\n      longPoll($lastId);\n    }\n  }\n\n  // Handle the long polling request\n  if (isset($_GET['lastId'])) {\n    $lastId = (int) $_GET['lastId'];\n    longPoll($lastId);\n  } else {\n    echo 'Invalid request';\n  }\n?>