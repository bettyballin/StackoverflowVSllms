<?php\n// ...\n\n// Use prepared statements to prevent SQL injection\n$stmt = $pdo->prepare("SELECT * FROM nordstromlisting WHERE ShopperID = :ShopperID");\n$stmt->bindParam(':ShopperID', $ShopperID);\n$stmt->execute();\n$nordstromstore = $stmt->fetch();\n\n// ...\n\n// Escape and sanitize variables to prevent XSS\n$storename = htmlspecialchars($storename);\n\n// ...\n\n// Use a CSRF token to protect the PayPal form\n$csrfToken = bin2hex(random_bytes(32));\n$_SESSION['csrfToken'] = $csrfToken;\n\n// ...\n?>\n\n<form action="https://www.paypal.com/cgi-bin/webscr" target="blank" method="post">\n    <input type="hidden" name="business" value="<?= htmlspecialchars($VillainPaypal) ?>">\n    <input type="hidden" name="cmd" value="_xclick">\n    <input type="hidden" name="item_name" value="<?= htmlspecialchars($itemname) ?>">\n    <input type="hidden" name="shipping" value="<?= htmlspecialchars($shipping) ?>">\n    <input type="hidden" name="tax" value="<?= htmlspecialchars($tax) ?>">\n    <input type="hidden" name="amount" value="<?= htmlspecialchars($row['DiscountedPrice']) ?>">\n    <input type="hidden" name="currency_code" value="USD">\n    <input type="hidden" name="csrfToken" value="<?= $csrfToken ?>">\n    <input type="image" name="submit" border="0" src="https://www.paypal.com/en_US/i/btn/btn_buynow_LG.gif" alt="PayPal - The safer, easier way to pay online">\n    <img alt="blahblah" border="0" width="1" height="1" src="https://www.paypal.com/en_US/i/scr/pixel.gif">\n</form>