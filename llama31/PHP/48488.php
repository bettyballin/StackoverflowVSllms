function timeDiff($firstTime, $lastTime) {\n    // Validate input to prevent potential security vulnerabilities\n    if (!preg_match('/^(\d{1,2}):(\d{2})$/', $firstTime, $match1) || \n        !preg_match('/^(\d{1,2}):(\d{2})$/', $lastTime, $match2)) {\n        throw new InvalidArgumentException('Invalid time format');\n    }\n\n    // Extract minutes and seconds from input\n    $firstMinutes = (int) $match1[1];\n    $firstSeconds = (int) $match1[2];\n    $lastMinutes = (int) $match2[1];\n    $lastSeconds = (int) $match2[2];\n\n    // Calculate total seconds for each time\n    $firstTotalSeconds = $firstMinutes * 60 + $firstSeconds;\n    $lastTotalSeconds = $lastMinutes * 60 + $lastSeconds;\n\n    // Calculate difference in seconds\n    $timeDiff = abs($lastTotalSeconds - $firstTotalSeconds);\n\n    // Format difference as MM:SS\n    $minutes = floor($timeDiff / 60);\n    $seconds = $timeDiff % 60;\n    return sprintf('%02d:%02d', $minutes, $seconds);\n}\n\n// Example usage:\necho timeDiff('1:07', '2:30'); // Output: 01:23