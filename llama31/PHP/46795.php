class MemcacheConnection {\n    private static $instance;\n    private $memcache;\n\n    private function __construct() {\n        $this->memcache = memcache_connect(...);\n    }\n\n    public static function getInstance() {\n        if (!self::$instance) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n\n    public function getMemcache() {\n        return $this->memcache;\n    }\n}\n\nclass CacheClass {\n    private $memcache;\n\n    public function __construct() {\n        $this->memcache = MemcacheConnection::getInstance()->getMemcache();\n    }\n\n    public function insert() {\n        memcache_set($this->memcache, ...);\n    }\n\n    public function get() {\n        return memcache_get($this->memcache, ...);\n    }\n}