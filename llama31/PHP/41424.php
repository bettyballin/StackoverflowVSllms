function check($text1, $text2) {\n    $tfidf1 = tfidf($text1);\n    $tfidf2 = tfidf($text2);\n    $cosineSimilarity = cosineSimilarity($tfidf1, $tfidf2);\n    $threshold = 0.7; // adjust this value to suit your needs\n    return $cosineSimilarity >= $threshold;\n}\n\nfunction tfidf($text) {\n    $words = text_splitter($text);\n    $tfidf = array();\n    foreach ($words as $word) {\n        $tf = termFrequency($word, $text);\n        $idf = inverseDocumentFrequency($word);\n        $tfidf[$word] = $tf * $idf;\n    }\n    return $tfidf;\n}\n\nfunction termFrequency($word, $text) {\n    $words = text_splitter($text);\n    $count = 0;\n    foreach ($words as $w) {\n        if ($w == $word) {\n            $count++;\n        }\n    }\n    return $count / count($words);\n}\n\nfunction inverseDocumentFrequency($word) {\n    $docs = array(); // assume this is an array of all documents\n    $count = 0;\n    foreach ($docs as $doc) {\n        if (strpos($doc, $word) !== false) {\n            $count++;\n        }\n    }\n    return log(count($docs) / $count);\n}\n\nfunction cosineSimilarity($vector1, $vector2) {\n    $dotProduct = 0;\n    $magnitude1 = 0;\n    $magnitude2 = 0;\n    foreach ($vector1 as $word => $value) {\n        if (isset($vector2[$word])) {\n            $dotProduct += $value * $vector2[$word];\n        }\n        $magnitude1 += $value ** 2;\n    }\n    foreach ($vector2 as $value) {\n        $magnitude2 += $value ** 2;\n    }\n    return $dotProduct / sqrt($magnitude1 * $magnitude2);\n}