class ErrorHandler {\n    private $errorTypes = array(\n        'user' => array('404', '403', '500'),\n        'framework' => array('database', 'file_system')\n    );\n\n    public function handleException(Exception $e) {\n        // Determine the error type\n        $errorType = $this->getErrorType($e);\n\n        // Log the error\n        $this->logError($e, $errorType);\n\n        // Take action based on the error type\n        switch ($errorType) {\n            case 'user':\n                // Handle user errors\n                $this->handleUserError($e);\n                break;\n            case 'framework':\n                // Handle framework errors\n                $this->handleFrameworkError($e);\n                break;\n            default:\n                // Handle unknown errors\n                $this->handleUnknownError($e);\n                break;\n        }\n    }\n\n    private function getErrorType(Exception $e) {\n        // Determine the error type based on the exception message or code\n        // ...\n    }\n\n    private function logError(Exception $e, $errorType) {\n        // Log the error to a file or database\n        // ...\n    }\n\n    private function handleUserError(Exception $e) {\n        // Handle user errors (e.g., redirect to a custom 404 page)\n        // ...\n    }\n\n    private function handleFrameworkError(Exception $e) {\n        // Handle framework errors (e.g., send an email to the dev team)\n        // ...\n    }\n\n    private function handleUnknownError(Exception $e) {\n        // Handle unknown errors (e.g., display a generic error message)\n        // ...\n    }\n}