// In your controller\npublic function uploadImage() {\n    // Generate a unique identifier\n    $uuid = Cake\Utility\Text::uuid();\n\n    // Set the TTL (30 minutes)\n    $ttl = 30 * 60;\n\n    // Store the upload in the temporary folder\n    $tmpFolder = WWW_ROOT . 'tmp' . DS . 'uploads' . DS;\n    $filename = $uuid . '.' . pathinfo($_FILES['image']['name'], PATHINFO_EXTENSION);\n    move_uploaded_file($_FILES['image']['tmp_name'], $tmpFolder . $filename);\n\n    // Store the identifier and TTL in the user's session\n    $this->request->session()->write('image_upload', [\n        'uuid' => $uuid,\n        'ttl' => time() + $ttl\n    ]);\n}\n\n// In your scheduled task (e.g., a Console command)\npublic function cleanTempUploads() {\n    $tmpFolder = WWW_ROOT . 'tmp' . DS . 'uploads' . DS;\n    $files = scandir($tmpFolder);\n\n    foreach ($files as $file) {\n        if ($file === '.' || $file === '..') {\n            continue;\n        }\n\n        $filePath = $tmpFolder . $file;\n        $fileInfo = pathinfo($file);\n\n        // Check if the file has exceeded its TTL\n        if (file_exists($filePath) && $fileInfo['extension'] !== '') {\n            $uuid = $fileInfo['filename'];\n            $sessionKey = 'image_upload_' . $uuid;\n\n            // If the session key is not found or the TTL has expired, delete the file\n            if (!$this->request->session()->check($sessionKey) || $this->request->session()->read($sessionKey)['ttl'] < time()) {\n                unlink($filePath);\n            }\n        }\n    }\n}