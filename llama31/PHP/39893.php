function validateDate($dateString) {\n    // Define the input format\n    $inputFormat = 'Y-m-d';\n    \n    // Attempt to create a DateTime object\n    $dt = DateTime::createFromFormat($inputFormat, $dateString);\n    \n    // Check if the date is valid\n    if ($dt !== false && !array_sum($dt->getLastErrors())) {\n        // Check if the date is not in the future\n        if ($dt->getTimestamp() <= strtotime('today')) {\n            return $dt;\n        }\n    }\n    \n    // If any check fails, return null\n    return null;\n}\n\n// Test dates\n$dates = ['1983-07-10', '1492-10-11', '-200-01-01']; // Note: For B.C. dates, use a negative year\n\n// Validate and sort the dates\n$sortedDates = [];\nforeach ($dates as $dateString) {\n    $dt = validateDate($dateString);\n    if ($dt !== null) {\n        $sortedDates[] = $dt;\n    }\n}\n\n// Sort the dates\nusort($sortedDates, function($a, $b) {\n    return $a->getTimestamp() - $b->getTimestamp();\n});\n\n// Print the sorted dates\nforeach ($sortedDates as $dt) {\n    echo $dt->format('Y-m-d') . "\n";\n}