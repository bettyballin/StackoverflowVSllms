class HTML {\n    public static function __callStatic($method, $args) {\n        $tag = strtolower($method);\n        if (!preg_match('/^[a-z]+$/', $tag)) {\n            throw new Exception("Invalid tag name: $tag");\n        }\n        return new HTMLTag($tag, $args[0], $args[1]);\n    }\n}\n\nclass HTMLTag {\n    private $tag;\n    private $contents;\n    private $attributes;\n\n    public function __construct($tag, $contents = '', $attributes = array()) {\n        $this->tag = $tag;\n        $this->contents = $contents;\n        $this->attributes = $attributes;\n    }\n\n    public function render() {\n        $html = "<{$this->tag}";\n        foreach ($this->attributes as $key => $value) {\n            $html .= " $key=\"$value\"";\n        }\n        $html .= ">{$this->contents}</{$this->tag}>";\n        return $html;\n    }\n}\n\n// Usage example:\n$page = new HTMLPage('My wonderful page');\n$page->addContents(HTML::p('It works', array('id' => 'helloworld', 'class' => 'somecssclass')));\necho $page->render();