function findCircularMatch($userId, $db) {\n  $visited = array();\n  $stack = array($userId);\n\n  while ($stack) {\n    $currentUserId = array_pop($stack);\n    $visited[] = $currentUserId;\n\n    $user = $db->getUser($currentUserId);\n    $hasCard = $user['has_card'];\n    $wantsCard = $user['want_card'];\n\n    $nextUser = $db->getUserWithCard($wantsCard);\n    if ($nextUser && !in_array($nextUser['id'], $visited)) {\n      $stack[] = $nextUser['id'];\n    } elseif ($nextUser && $nextUser['id'] == $userId) {\n      // Found a cycle!\n      return array($currentUserId, $nextUser['id']);\n    }\n  }\n\n  return null; // No cycle found\n}\n\n// Example usage:\n$db = new YourDatabaseClass();\n$userId = 1; // Start with User #1\n$result = findCircularMatch($userId, $db);\n\nif ($result) {\n  list($user2Id, $user3Id) = $result;\n  echo "Found cycle: User #$userId -> User #$user3Id -> User #$user2Id";\n} else {\n  echo "No cycle found";\n}