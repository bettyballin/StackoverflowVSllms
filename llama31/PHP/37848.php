class TrieNode {\n    public $children = [];\n    public $link = null;\n}\n\nclass Trie {\n    public $root;\n\n    public function __construct() {\n        $this->root = new TrieNode();\n    }\n\n    public function insert($word, $link) {\n        $node = $this->root;\n        foreach (str_split($word) as $char) {\n            if (!isset($node->children[$char])) {\n                $node->children[$char] = new TrieNode();\n            }\n            $node = $node->children[$char];\n        }\n        $node->link = $link;\n    }\n\n    public function search($word) {\n        $node = $this->root;\n        foreach (str_split($word) as $char) {\n            if (!isset($node->children[$char])) {\n                return null;\n            }\n            $node = $node->children[$char];\n        }\n        return $node->link;\n    }\n}\n\n$trie = new Trie();\n\n// Populate the Trie with your keyword list\n$result = mysql_query("SELECT word, link FROM words");\nwhile ($row = mysql_fetch_assoc($result)) {\n    $trie->insert($row['word'], $row['link']);\n}\n\n// Preprocess your text and match keywords in the Trie\n$text = "Your text here...";\n$tokens = explode(" ", $text);\nforeach ($tokens as &$token) {\n    $link = $trie->search($token);\n    if ($link) {\n        $token = "<a href=\"$link\">$token</a>";\n    }\n}\n\n// Reconstruct the linked text\n$linkedText = implode(" ", $tokens);\n\necho $linkedText;