function getAbsoluteUrl($baseUrl, $relativeUrl) {\n    // Parse the base URL\n    $baseUrlParts = parse_url($baseUrl);\n    \n    // If the relative URL is already absolute, return it\n    if (parse_url($relativeUrl, PHP_URL_SCHEME)) {\n        return $relativeUrl;\n    }\n    \n    // If the relative URL starts with "//", it's a protocol-relative URL\n    if (strpos($relativeUrl, '//') === 0) {\n        return $baseUrlParts['scheme'] . ':' . $relativeUrl;\n    }\n    \n    // If the relative URL starts with "/", it's a domain-relative URL\n    if (strpos($relativeUrl, '/') === 0) {\n        return $baseUrlParts['scheme'] . '://' . $baseUrlParts['host'] . $relativeUrl;\n    }\n    \n    // Otherwise, it's a path-relative URL\n    $path = dirname($baseUrlParts['path']);\n    $absoluteUrl = $baseUrlParts['scheme'] . '://' . $baseUrlParts['host'] . $path . '/' . $relativeUrl;\n    \n    // Remove any duplicate "/" characters\n    $absoluteUrl = preg_replace('/\/+/', '/', $absoluteUrl);\n    \n    return $absoluteUrl;\n}\n\n// Example usage:\n$baseUrl = 'http://example.com/path/to/page.html';\n$relativeUrl = '../folder/folder2/blah/page.html';\necho getAbsoluteUrl($baseUrl, $relativeUrl);