class CircularBuffer {\n    private $buffer;\n    private $pointer;\n    private $size;\n\n    public function __construct($size) {\n        $this->buffer = array_fill(0, $size, array('paramA' => 0, 'paramB' => 0));\n        $this->pointer = 0;\n        $this->size = $size;\n    }\n\n    public function addData($data) {\n        $this->buffer[$this->pointer] = $data;\n        $this->pointer = ($this->pointer + 1) % $this->size;\n    }\n\n    public function getData($index) {\n        return $this->buffer[($this->pointer + $index) % $this->size];\n    }\n}\n\n// Usage\n$buffer = new CircularBuffer(15);\n\n// Add data every 10 seconds\n$time = time();\nwhile (true) {\n    $data = array('paramA' => calcul_temp(), 'paramB' => 0);\n    $buffer->addData($data);\n    sleep(10);\n}\n\n// Get data for the 3rd cycle (21 sec to 30 sec from the beginning time)\n$data = $buffer->getData(2);