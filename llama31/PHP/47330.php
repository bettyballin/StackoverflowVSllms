// Auth Service Interface\ninterface AuthServiceInterface\n{\n    public function authenticate($username, $password);\n    public function checkAcl($resource, $action);\n}\n\n// Auth Service Implementation\nclass AuthService implements AuthServiceInterface\n{\n    private $authAdapter;\n    private $acl;\n\n    public function __construct(AuthAdapter $authAdapter, Acl $acl)\n    {\n        $this->authAdapter = $authAdapter;\n        $this->acl = $acl;\n    }\n\n    public function authenticate($username, $password)\n    {\n        $this->authAdapter->setIdentity($username);\n        $this->authAdapter->setCredential($password);\n        $result = Zend_Auth::getInstance()->authenticate($this->authAdapter);\n        if ($result->isValid()) {\n            // login successful\n        } else {\n            // login failed\n        }\n    }\n\n    public function checkAcl($resource, $action)\n    {\n        return $this->acl->isAllowed($resource, $action);\n    }\n}\n\n// Auth Adapter (wraps Zend_Auth_Adapter)\nclass AuthAdapter extends Zend_Auth_Adapter_DbTable\n{\n    // override to customize authentication logic\n}\n\n// Acl (wraps Zend_Acl)\nclass Acl extends Zend_Acl\n{\n    // override to customize acl logic\n}\n\n// Controller\nclass MyController extends Zend_Controller_Action\n{\n    private $authService;\n\n    public function __construct(AuthServiceInterface $authService)\n    {\n        $this->authService = $authService;\n    }\n\n    public function loginAction()\n    {\n        $username = $this->getRequest()->getParam('username');\n        $password = $this->getRequest()->getParam('password');\n        if ($this->authService->authenticate($username, $password)) {\n            // login successful\n        } else {\n            // login failed\n        }\n    }\n\n    public function adminAction()\n    {\n        if ($this->authService->checkAcl('admin', 'view')) {\n            // display admin page\n        } else {\n            // display error page\n        }\n    }\n}