class XmlBuilder {\n    private $xml;\n\n    public function __construct() {\n        $this->xml = new xmlElement('data');\n    }\n\n    public function arrayToXml($array, $parentElement = null) {\n        if (is_null($parentElement)) {\n            $parentElement = $this->xml;\n        }\n        foreach ($array as $key => $value) {\n            $element = $parentElement->append(new xmlElement($key));\n            if (is_array($value)) {\n                $this->arrayToXml($value, $element);\n            } else {\n                $element->write($value);\n            }\n        }\n    }\n\n    public function build($result) {\n        $hierarchicalArray = array();\n        while ($row = pg_fetch_assoc($result)) {\n            // Here you need to implement logic to convert your row data into a hierarchical array\n            // The implementation depends on the exact structure of your data and the desired XML output\n        }\n        $this->arrayToXml($hierarchicalArray);\n        return $this->xml;\n    }\n}