interface Observer {\n    public function update($property, $value);\n}\n\nclass StorageObserver implements Observer {\n    public function update($property, $value) {\n        // Log change to property\n        // ...\n        // Update persistent storage\n        // ...\n    }\n}\n\nclass Storage {\n    private $observers = [];\n\n    public function attach(Observer $observer) {\n        $this->observers[] = $observer;\n    }\n\n    public function __set($property, $value) {\n        // Notify observers\n        foreach ($this->observers as $observer) {\n            $observer->update($property, $value);\n        }\n    }\n}