// Assume you have the original image URL and the requested thumbnail size\n$originalImageUrl = 'https://example.s3.amazonaws.com/original-image.jpg';\n$thumbnailSize = '200x200';\n\n// Check caching layer for thumbnail metadata\n$cacheKey = "thumbnail:{$originalImageUrl}:{$thumbnailSize}";\n$metadata = Redis::get($cacheKey);\n\nif ($metadata) {\n    // Serve cached thumbnail\n    $thumbnailUrl = $metadata['url'];\n    header('Location: ' . $thumbnailUrl);\n    exit;\n}\n\n// Process image on the fly\n$thumbnail = imagecreatetruecolor($thumbnailSize[0], $thumbnailSize[1]);\nimagecopyresampled($thumbnail, imagecreatefromjpeg($originalImageUrl), 0, 0, 0, 0, $thumbnailSize[0], $thumbnailSize[1], imagesx($originalImageUrl), imagesy($originalImageUrl));\nimagedestroy($originalImageUrl);\n\n// Store thumbnail metadata in caching layer\n$metadata = [\n    'url' => 'https://example.s3.amazonaws.com/thumbnail-' . $thumbnailSize . '.jpg',\n    'size' => $thumbnailSize,\n];\nRedis::set($cacheKey, $metadata);\n\n// Serve thumbnail\nheader('Location: ' . $metadata['url']);\nexit;