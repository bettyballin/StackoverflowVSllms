function getStatusCode($url) {\n    $headers = @get_headers($url, 1);\n    if ($headers === false) {\n        return null;\n    }\n    $status_line = $headers[0];\n    if (!preg_match('/^HTTP\/[12]\.[0-9] ([0-9]{3})/', $status_line, $matches)) {\n        return null;\n    }\n    return (int)$matches[1];\n}\n\n// Assuming you have a PDO connection to your database\n$dbh = new PDO('mysql:host=localhost;dbname=yourdb', 'yourusername', 'yourpassword');\n\n$stmt = $dbh->prepare('SELECT url FROM yourtable');\n$stmt->execute();\n\nwhile ($row = $stmt->fetch()) {\n    $url = $row['url'];\n    $status_code = getStatusCode($url);\n    if ($status_code === null) {\n        echo "Failed to get status code for $url\n";\n    } elseif ($status_code >= 400) {\n        echo "$url returned status code $status_code\n";\n        // You can add code here to update the database to mark this URL as invalid\n    }\n}