// Entity\nclass User {\n    private $id;\n    private $name;\n\n    // getters and setters\n}\n\n// Repository\nclass UserRepository {\n    private $mapper;\n    private $uow;\n\n    public function __construct(UserMapper $mapper, UnitOfWork $uow) {\n        $this->mapper = $mapper;\n        $this->uow = $uow;\n    }\n\n    public function save(User $user) {\n        $this->uow->registerDirty($user);\n    }\n\n    public function commit() {\n        $this->uow->commit();\n    }\n}\n\n// Unit of Work\nclass UnitOfWork {\n    private $dirtyEntities = [];\n\n    public function registerDirty($entity) {\n        $this->dirtyEntities[] = $entity;\n    }\n\n    public function commit() {\n        foreach ($this->dirtyEntities as $entity) {\n            // Use the Data Mapper to save the entity\n            $mapper = new UserMapper();\n            $mapper->save($entity);\n        }\n        $this->dirtyEntities = [];\n    }\n}