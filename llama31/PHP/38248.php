class LogProxy implements LoggerInterface {\n    private $database;\n    private $log;\n\n    public function __construct(Database $database) {\n        $this->database = $database;\n    }\n\n    public function logMessage($message) {\n        $this->getLog()->logMessage($message);\n    }\n\n    public function logDatabaseQuery($query) {\n        $this->getLog()->logDatabaseQuery($query);\n    }\n\n    private function getLog() {\n        if (!$this->log) {\n            $this->log = new Log($this->database);\n        }\n        return $this->log;\n    }\n}