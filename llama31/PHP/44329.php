class AsyncDispatcher {\n    private $callbacks = [];\n\n    public function addCallback($callback) {\n        $this->callbacks[] = $callback;\n    }\n\n    public function dispatch($response) {\n        foreach ($this->callbacks as $callback) {\n            $callback($response);\n        }\n    }\n}\n\nclass MyClass {\n    public function myCallback($response) {\n        echo "Received response: $response";\n    }\n}\n\n$obj = new MyClass();\n$dispatcher = new AsyncDispatcher();\n\n// Add a callback using a closure\n$dispatcher->addCallback(function($response) use ($obj) {\n    $obj->myCallback($response);\n});\n\n// Dispatch the response\n$dispatcher->dispatch("Hello, world!");