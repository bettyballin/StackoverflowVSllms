// Define a custom error class\nclass CustomError {\n    private $code;\n    private $message;\n\n    public function __construct($code, $message) {\n        $this->code = $code;\n        $this->message = $message;\n    }\n\n    public function getCode() {\n        return $this->code;\n    }\n\n    public function getMessage() {\n        return $this->message;\n    }\n}\n\n// Define a function that returns an error code or throws a custom error\nfunction divide($a, $b) {\n    if ($b == 0) {\n        return new CustomError('DIVISION_BY_ZERO', 'Cannot divide by zero!');\n    }\n    return $a / $b;\n}\n\n// Call the function and handle the error\n$result = divide(10, 0);\nif ($result instanceof CustomError) {\n    echo "Error " . $result->getCode() . ": " . $result->getMessage();\n} else {\n    echo "Result: " . $result;\n}