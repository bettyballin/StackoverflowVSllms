class third_party_library_wrapper {\n    private $original;\n\n    public function __construct(third_party_library $original) {\n        $this->original = $original;\n    }\n\n    public function __call($method, $args) {\n        if ($method === 'buggy_function') {\n            return 'good result';\n        }\n        return call_user_func_array([$this->original, $method], $args);\n    }\n}\n\n$original = new third_party_library();\n$wrapped = new third_party_library_wrapper($original);