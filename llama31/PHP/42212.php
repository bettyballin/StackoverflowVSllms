<?php\n\n// Include necessary libraries\ninclude('encrypt.php');\ninclude('invoice.class.php');\n\n// Define a secret key for encryption and HMAC\n$secretKey = 'your_secret_key_here';\n\n// Function to encrypt and HMAC the object\nfunction encryptObject($object) {\n    $encryptedData = encrypt(serialize($object), $secretKey);\n    $hmac = hash_hmac('sha256', $encryptedData, $secretKey);\n    return base64_encode($encryptedData . ':' . $hmac);\n}\n\n// Function to decrypt and validate the object\nfunction decryptObject($encryptedData) {\n    $decryptedData = base64_decode($encryptedData);\n    list($encryptedObject, $hmac) = explode(':', $decryptedData);\n    if (hash_hmac('sha256', $encryptedObject, $secretKey) !== $hmac) {\n        throw new Exception('Invalid HMAC');\n    }\n    return unserialize(decrypt($encryptedObject, $secretKey));\n}\n\n// Create or retrieve the invoice object\nif (isset($_REQUEST['invoice'])) {\n    $invoice = decryptObject($_REQUEST['invoice']);\n    if (!($invoice instanceof Invoice)) {\n        throw new Exception('Invalid invoice object');\n    }\n} else {\n    $invoice = new Invoice();\n}\n\n// Perform actions on the invoice object\nif (isset($_REQUEST['action']) && $_REQUEST['action'] == 'addLine') {\n    $invoice->addLine(new InvoiceLine($_REQUEST['description'], $_REQUEST['qty'], $_REQUEST['unitprice']));\n}\n\n// Generate a secure token for the form\n$secureToken = bin2hex(random_bytes(16));\n\n?>\n\n<!-- Include the secure token in the form -->\n<form action="index.php" method="post">\n    <input type="text" name="qty" />\n    ...\n    <input type="hidden" name="invoice" value="<?php echo encryptObject($invoice); ?>" />\n    <input type="hidden" name="secure_token" value="<?php echo $secureToken; ?>" />\n</form>\n\n<?php\n\n// Validate the secure token on form submission\nif (isset($_REQUEST['secure_token']) && $_REQUEST['secure_token'] !== $secureToken) {\n    throw new Exception('Invalid secure token');\n}\n\n?>