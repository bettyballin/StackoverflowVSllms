$pid = pcntl_fork();\n\nif ($pid == -1) {\n    die('could not fork');\n} elseif ($pid) {\n    // we are the parent\n    pcntl_signal(SIGUSR1, "signal_handler");\n    pcntl_signal(SIGCHLD, "child_handler");\n\n    // wait for child to finish\n    pcntl_waitpid($pid, $status);\n\n    // check the status of the child\n    if (pcntl_wifexited($status)) {\n        // child exited normally\n        echo "Child exited with status " . pcntl_wexitstatus($status) . "\n";\n    } elseif (pcntl_wifsignaled($status)) {\n        // child was terminated by a signal\n        echo "Child was terminated by signal " . pcntl_wtermsig($status) . "\n";\n    } else {\n        // child is still running\n        echo "Child is still running\n";\n    }\n} else {\n    // we are the child\n    pcntl_exec("/path/to/php/script");\n    echo "Could not Execute...";\n}\n\nfunction signal_handler($signo) {\n    // handle SIGUSR1 signal from child\n    echo "Received SIGUSR1 signal from child\n";\n}\n\nfunction child_handler($signo) {\n    // handle SIGCHLD signal when child exits\n    global $pid;\n    pcntl_waitpid($pid, $status);\n}