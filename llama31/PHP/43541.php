// InputValidator.php\nclass InputValidator {\n    public function sanitize($input) {\n        // Sanitization logic here\n        return $input;\n    }\n}\n\n// InputValidatorTest.php\nuse PHPUnit\Framework\TestCase;\n\nclass InputValidatorTest extends TestCase {\n    private $validator;\n\n    public function setUp() {\n        $this->validator = new InputValidator();\n    }\n\n    public function testSanitizeGetInput() {\n        $input = ['foo' => 'bar'];\n        $sanitized = $this->validator->sanitize($input);\n        $this->assertEquals(['foo' => 'bar'], $sanitized);\n    }\n\n    public function testSanitizePostInput() {\n        $input = ['foo' => 'bar'];\n        $sanitized = $this->validator->sanitize($input);\n        $this->assertEquals(['foo' => 'bar'], $sanitized);\n    }\n\n    public function testSanitizeMaliciousInput() {\n        $input = ['foo' => '<script>alert("XSS")</script>'];\n        $sanitized = $this->validator->sanitize($input);\n        $this->assertEquals(['foo' => ''], $sanitized);\n    }\n}