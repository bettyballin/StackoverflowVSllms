// Person.php\nclass Person {\n    protected $gateway;\n\n    public function __construct(PersonGateway $gateway) {\n        $this->gateway = $gateway;\n    }\n\n    // basic functionality common to all types of users\n}\n\n// PersonFactory.php\nclass PersonFactory {\n    public static function createPerson($userType, PersonGateway $gateway) {\n        switch ($userType) {\n            case 'admin':\n                return new Admin($gateway);\n            case 'buyer':\n                return new Buyer($gateway);\n            case 'associate':\n                return new Associate($gateway);\n            case 'supervisor':\n                return new Supervisor($gateway);\n            default:\n                throw new Exception('Invalid user type');\n        }\n    }\n}\n\n// Admin.php\nclass Admin extends Person {\n    // specific business logic for admins\n}\n\n// Buyer.php\nclass Buyer extends Person {\n    // specific business logic for buyers\n}\n\n// Associate.php\nclass Associate extends Person {\n    // specific business logic for associates\n}\n\n// Supervisor.php\nclass Supervisor extends Person {\n    // specific business logic for supervisors\n}