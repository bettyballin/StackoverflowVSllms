class BookShelf implements ArrayAccess, Countable, SeekableIterator {\n    protected $_books = array();\n    protected $_magazines = array();\n    protected $_position = 0;\n    protected $_combinedCount = 0;\n\n    public function __construct() {\n        // Initialize the combined count\n        $this->_combinedCount = count($this->_books) + count($this->_magazines);\n    }\n\n    // SeekableIterator implementation\n\n    public function seek($position) {\n        if ($position < 0 || $position >= $this->_combinedCount) {\n            throw new OutOfBoundsException('Invalid position');\n        }\n        $this->_position = $position;\n    }\n\n    public function rewind() {\n        $this->_position = 0;\n    }\n\n    public function current() {\n        if ($this->_position < count($this->_books)) {\n            return $this->_books[$this->_position];\n        } else {\n            return $this->_magazines[$this->_position - count($this->_books)];\n        }\n    }\n\n    public function key() {\n        return $this->_position;\n    }\n\n    public function next() {\n        $this->_position++;\n    }\n\n    public function valid() {\n        return $this->_position < $this->_combinedCount;\n    }\n\n    // Other interface implementations...\n}