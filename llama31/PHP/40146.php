function smoothArray($array, $targetSize) {\n    $smoothenedArray = [];\n    $chunkSize = floor(count($array) / $targetSize);\n    $remainder = count($array) % $targetSize;\n\n    $index = 0;\n    foreach ($array as $key => $value) {\n        if ($index % $chunkSize == 0 && count($smoothenedArray) < $targetSize) {\n            $smoothenedArray[] = $value;\n        } else {\n            $smoothenedArray[count($smoothenedArray) - 1] += $value;\n        }\n        $index++;\n    }\n\n    // Distribute the remainder\n    for ($i = 0; $i < $remainder; $i++) {\n        $smoothenedArray[$i] += $array[count($array) - 1 - $i];\n    }\n\n    // Adjust the values\n    foreach ($smoothenedArray as &$value) {\n        $value /= floor(count($array) / $targetSize);\n    }\n\n    return $smoothenedArray;\n}\n\n// Example usage:\n$array = [10, 15, 20, 25];\n$targetSize = 2;\n$smoothenedArray = smoothArray($array, $targetSize);\nprint_r($smoothenedArray);\n\n// Output:\n// Array\n// (\n//     [0] => 25\n//     [1] => 45\n// )