interface DatabaseInterface {\n    public function query($query);\n}\n\nclass MySQL implements DatabaseInterface {\n    public function query($query) {\n        // implementation\n    }\n}\n\nclass Display {\n    private $database;\n\n    public function __construct(DatabaseInterface $database) {\n        $this->database = $database;\n    }\n\n    // ...\n}\n\nclass IndexPHP extends Display {\n    private $user;\n\n    public function __construct(DatabaseInterface $database, User $user) {\n        parent::__construct($database);\n        $this->user = $user;\n    }\n\n    // ...\n}\n\nclass User {\n    private $database;\n\n    public function __construct(DatabaseInterface $database) {\n        $this->database = $database;\n    }\n\n    // ...\n}\n\n$database = new MySQL();\n$user = new User($database);\n$page = new IndexPHP($database, $user);\n$page->displayPage();