function circlesOverlap($searchCenterLat, $searchCenterLon, $searchRadiusKm, $objectLat, $objectLon, $objectRadiusKm) {\n  // Convert coordinates to radians\n  $searchCenterLatRad = deg2rad($searchCenterLat);\n  $searchCenterLonRad = deg2rad($searchCenterLon);\n  $objectLatRad = deg2rad($objectLat);\n  $objectLonRad = deg2rad($objectLon);\n\n  // Calculate distance between centers using Haversine formula\n  $distanceKm = haversineDistance($searchCenterLatRad, $searchCenterLonRad, $objectLatRad, $objectLonRad);\n\n  // Check if circles overlap\n  return ($distanceKm <= ($searchRadiusKm + $objectRadiusKm));\n}\n\nfunction haversineDistance($lat1, $lon1, $lat2, $lon2) {\n  $dLat = $lat2 - $lat1;\n  $dLon = $lon2 - $lon1;\n  $a = sin($dLat / 2) ** 2 + cos($lat1) * cos($lat2) * sin($dLon / 2) ** 2;\n  $c = 2 * atan2(sqrt($a), sqrt(1 - $a));\n  $earthRadiusKm = 6371;\n  return $earthRadiusKm * $c;\n}\n\nfunction deg2rad($deg) {\n  return $deg * pi() / 180;\n}