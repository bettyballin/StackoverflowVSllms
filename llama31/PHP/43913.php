function get_ucs2_codepoint($char) {\n    $ord = ord($char[0]);\n    if ($ord < 128) {\n        return sprintf("%04X", $ord);\n    } elseif ($ord < 224) {\n        // UTF-8 2-byte sequence\n        $ord2 = ord($char[1]);\n        return sprintf("%04X", ((($ord & 31) << 6) | ($ord2 & 63)));\n    } elseif ($ord < 240) {\n        // UTF-8 3-byte sequence\n        $ord2 = ord($char[1]);\n        $ord3 = ord($char[2]);\n        return sprintf("%04X", ((($ord & 15) << 12) | (($ord2 & 63) << 6) | ($ord3 & 63)));\n    } elseif ($ord < 248) {\n        // UTF-8 4-byte sequence\n        $ord2 = ord($char[1]);\n        $ord3 = ord($char[2]);\n        $ord4 = ord($char[3]);\n        $codepoint = ((($ord & 7) << 18) | (($ord2 & 63) << 12) | (($ord3 & 63) << 6) | ($ord4 & 63));\n        // UCS-2 can't represent codepoints above 0xFFFF\n        // You might want to handle this case differently depending on your needs\n        if ($codepoint > 0xFFFF) {\n            return "FFFF"; // or handle as an error\n        }\n        return sprintf("%04X", $codepoint);\n    }\n}\n\n// Example usage:\n$str = "hello";\nfor ($i = 0; $i < strlen($str); $i++) {\n    $char = substr($str, $i, 1);\n    if (ord($char) >= 128) {\n        // Multibyte character, ensure we pass the full character to get_ucs2_codepoint\n        $charLen = strlen(iconv('UTF-8', 'UTF-16', $char));\n        $char = substr($str, $i, $charLen);\n        $i += $charLen - 1; // Adjust index\n    }\n    echo get_ucs2_codepoint($char) . " ";\n}