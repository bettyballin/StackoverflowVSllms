function insert($param, $table) {\n    $sqlString = "INSERT INTO $table (" . implode(', ', array_keys($param)) . ') VALUES (' . str_repeat('?, ', (count($param) - 1)) . '?)';\n    if ($statement = $this->conn->prepare($sqlString)) {\n        $types = $this->bindParams($param);\n        $parameters = array_merge([$types], array_values($param));\n        call_user_func_array([$statement, 'bind_param'], $parameters);\n        if (!$statement->execute()) {\n            die('Error! ' . $statement->error);\n        }\n        $statement->close();\n        return true;\n    } else {\n        die("Could Not Run Statement: " . $this->conn->error);\n    }\n}\n\n// Assuming your bindParams function returns a string with the types\nfunction bindParams($param) {\n    $types = '';\n    foreach ($param as $value) {\n        if (is_int($value)) {\n            $types .= 'i';\n        } elseif (is_float($value)) {\n            $types .= 'd';\n        } else {\n            $types .= 's';\n        }\n    }\n    return $types;\n}