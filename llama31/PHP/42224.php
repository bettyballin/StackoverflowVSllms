// Define the configuration interface\ninterface ConfigInterface {\n    public function getHost();\n    public function getUsername();\n    public function getPassword();\n}\n\n// Create a default configuration implementation\nclass DefaultConfig implements ConfigInterface {\n    public function getHost() {\n        return 'localhost';\n    }\n\n    public function getUsername() {\n        return 'username';\n    }\n\n    public function getPassword() {\n        return 'password';\n    }\n}\n\n// Create a debug configuration implementation\nclass DebugConfig implements ConfigInterface {\n    public function getHost() {\n        return 'debug-host';\n    }\n\n    public function getUsername() {\n        return 'debug-username';\n    }\n\n    public function getPassword() {\n        return 'debug-password';\n    }\n}\n\n// Update your Mysql class to depend on the ConfigInterface\nclass Mysql {\n    private $mysqli;\n    private $config;\n\n    public function __construct(ConfigInterface $config) {\n        $this->config = $config;\n        $this->mysqli = new Mysqli(\n            $config->getHost(),\n            $config->getUsername(),\n            $config->getPassword()\n        );\n    }\n}\n\n// Usage:\n$defaultConfig = new DefaultConfig();\n$debugConfig = new DebugConfig();\n\n$mysqlDefault = new Mysql($defaultConfig);\n$mysqlDebug = new Mysql($debugConfig);