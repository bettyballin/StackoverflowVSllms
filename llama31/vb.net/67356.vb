Imports System.Security.Principal\n\nPublic Shared Function Login(ByVal uid As String, ByVal pwd As String) As Boolean\n    ' ...\n\n    If LogonUser(uid, domainName, pwd, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, token) Then\n        Dim impersonationContext As WindowsImpersonationContext = WindowsIdentity.Impersonate(token)\n        Try\n            ' If the login succeeds, then impersonate that user by changing CurrentPrincipal.\n            Dim wi As New Principal.WindowsIdentity(token)\n            Dim wp As New Principal.WindowsPrincipal(wi)\n\n            My.User.CurrentPrincipal = wp\n\n            ' Make sure to impersonate the user for the entire process\n            impersonationContext.Undo()\n            WindowsIdentity.Impersonate(token)\n\n            Return True\n        Catch ex As Exception\n            ' Handle any exceptions that occur during impersonation\n            impersonationContext.Undo()\n            Throw\n        End Try\n    Else\n        Return False\n    End If\nEnd Functio