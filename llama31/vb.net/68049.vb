Private Declare Function OpenProcessToken Lib "advapi32.dll" (ByVal hObject As Long, ByVal dwDesiredAccess As Long, ByRef phToken As Long) As Long\nPrivate Declare Function GetTokenInformation Lib "advapi32.dll" (ByVal TokenHandle As Long, ByVal TokenInformationClass As Long, ByVal TokenInformation As Long, ByVal TokenInformationLength As Long, ByRef ReturnLength As Long) As Long\nPrivate Declare Function LookupAccountSid Lib "advapi32.dll" Alias "LookupAccountSidA" (ByVal lpSystemName As String, ByVal Sid As Long, ByVal Name As String, ByRef cchName As Long, ByVal ReferencedDomainName As String, ByRef cchReferencedDomainName As Long, ByRef peUse As Long) As Long\n\nPrivate Const TOKEN_QUERY = &H8\nPrivate Const TokenGroups = 2\n\nPrivate Sub GetCurrentUserGroups()\n    Dim hToken As Long\n    Dim dwBufferSize As Long\n    Dim pGroups As Long\n\n    ' Open the current process token\n    OpenProcessToken GetCurrentProcess(), TOKEN_QUERY, hToken\n\n    ' Get the buffer size required for the group information\n    GetTokenInformation hToken, TokenGroups, 0&, 0&, dwBufferSize\n\n    ' Allocate the buffer for the group information\n    pGroups = GlobalAlloc(GMEM_FIXED, dwBufferSize)\n\n    ' Get the group information\n    GetTokenInformation hToken, TokenGroups, pGroups, dwBufferSize, dwBufferSize\n\n    ' Print the group names\n    Dim i As Long\n    For i = 0 To dwBufferSize / 4 - 1\n        Dim szGroupName As String\n        Dim dwGroupNameSize As Long\n        dwGroupNameSize = 256\n\n        ' Get the group name from the SID\n        LookupAccountSid 0&, ByVal pGroups + (i * 4), szGroupName, dwGroupNameSize, 0&, 0&, 0&\n\n        Debug.Print szGroupName\n    Next i\n\n    ' Free the buffer and close the token handle\n    GlobalFree pGroups\n    CloseHandle hToken\nEnd Sub