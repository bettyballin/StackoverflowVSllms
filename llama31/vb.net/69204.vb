Imports System.Runtime.InteropServices\n\nPublic Class ProcessLauncher\n    <DllImport("advapi32.dll", EntryPoint:="CreateProcessWithLogonW", SetLastError:=True, CharSet:=CharSet.Unicode)> _\n    Private Shared Function CreateProcessWithLogonW( _\n        ByVal userName As String, _\n        ByVal domain As String, _\n        ByVal password As String, _\n        ByVal logonFlags As Integer, _\n        ByVal applicationName As String, _\n        ByVal commandLine As String, _\n        ByVal creationFlags As Integer, _\n        ByVal environment As IntPtr, _\n        ByVal currentDirectory As String, _\n        ByVal startupInfo As STARTUPINFO, _\n        ByVal processInfo As PROCESS_INFORMATION) As Boolean\n    End Function\n\n    <DllImport("kernel32.dll", SetLastError:=True)> _\n    Private Shared Function CloseHandle(ByVal hObject As IntPtr) As Boolean\n    End Function\n\n    <StructLayout(LayoutKind.Sequential)> _\n    Public Structure STARTUPINFO\n        Public cb As Integer\n        Public lpReserved As String\n        Public lpDesktop As String\n        Public lpTitle As String\n        Public dwX As Integer\n        Public dwY As Integer\n        Public dwXSize As Integer\n        Public dwYSize As Integer\n        Public dwXCountChars As Integer\n        Public dwYCountChars As Integer\n        Public dwFillAttribute As Integer\n        Public dwFlags As Integer\n        Public wShowWindow As Short\n        Public cbReserved2 As Short\n        Public lpReserved2 As IntPtr\n        Public hStdInput As IntPtr\n        Public hStdOutput As IntPtr\n        Public hStdError As IntPtr\n    End Structure\n\n    <StructLayout(LayoutKind.Sequential)> _\n    Public Structure PROCESS_INFORMATION\n        Public hProcess As IntPtr\n        Public hThread As IntPtr\n        Public dwProcessId As Integer\n        Public dwThreadId As Integer\n    End Structure\n\n    Const LOGON_TYPE_NEW_CREDENTIALS As Integer = 9\n\n    Public Shared Function LaunchProcessAsUser(ByVal userName As String, ByVal domain As String, ByVal password As String, ByVal applicationName As String, ByVal commandLine As String) As Boolean\n        Dim startupInfo As New STARTUPINFO()\n        startupInfo.cb = Marshal.SizeOf(startupInfo)\n\n        Dim processInfo As New PROCESS_INFORMATION()\n\n        Try\n            If CreateProcessWithLogonW(userName, domain, password, LOGON_TYPE_NEW_CREDENTIALS, applicationName, commandLine, 0, IntPtr.Zero, Nothing, startupInfo, processInfo) Then\n                CloseHandle(processInfo.hProcess)\n                CloseHandle(processInfo.hThread)\n                Return True\n            Else\n                Return False\n            End If\n        Catch ex As Exception\n            Return False\n        End Try\n    End Function\nEnd Class