Imports System.Threading\n\nPublic Class ThreadedOperation\n    Public Event SomthingHappend(ByVal result As Integer)\n    Private _thread As Threading.Thread\n    Private _syncContext As SynchronizationContext\n\n    Public Sub New()\n        _syncContext = SynchronizationContext.Current\n    End Sub\n\n    Public Sub start()\n        If _thread Is Nothing Then\n            _thread = New Threading.Thread(AddressOf Work)\n        End If\n        _thread.Start()\n    End Sub\n\n    Private Sub Work()\n        For i As Integer = 0 To 10\n            _syncContext.Post(Sub(state) RaiseEvent SomthingHappend(state), i)\n            Threading.Thread.Sleep(500)\n        Next\n    End Sub\nEnd Class