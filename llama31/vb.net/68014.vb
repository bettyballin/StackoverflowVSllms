Imports System.Collections\n\nPublic Class Form1\n    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\n        ' Sample hash table (replace with your actual data source)\n        Dim hashTable As Hashtable = New Hashtable()\n        hashTable.Add("Key1", "Value1")\n        hashTable.Add("Key2", "Value2")\n        hashTable.Add("Key3", "Value3")\n\n        ' Add initial items from hash table to combo box\n        For Each key As String In hashTable.Keys\n            ComboBox1.Items.Add(New KeyValuePair(key, hashTable(key)))\n        Next\n\n        ' Add extra values to the combo box\n        ComboBox1.Items.Add(New KeyValuePair("ExtraKey1", "ExtraValue1"))\n        ComboBox1.Items.Add(New KeyValuePair("ExtraKey2", "ExtraValue2"))\n\n        ' Ensure to set the DisplayMember and ValueMember properties\n        ComboBox1.DisplayMember = "Value"\n        ComboBox1.ValueMember = "Key"\n    End Sub\n\n    Private Sub ComboBox1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ComboBox1.SelectedIndexChanged\n        If ComboBox1.SelectedItem IsNot Nothing Then\n            Dim selectedItem = DirectCast(ComboBox1.SelectedItem, KeyValuePair)\n            Console.WriteLine($"Selected Key: {selectedItem.Key}, Selected Value: {selectedItem.Value}")\n        End If\n    End Sub\nEnd Class\n\n' Simple KeyValuePair class for demonstration\nPublic Class KeyValuePair\n    Public Key As String\n    Public Value As String\n\n    Public Sub New(key As String, value As String)\n        Me.Key = key\n        Me.Value = value\n    End Sub\n\n    Public Overrides Function ToString() As String\n        Return Value\n    End Function\nEnd Class