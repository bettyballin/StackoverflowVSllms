Imports System.Linq.Expressions\n\nPublic Class PredicateBuilder\n    Public Shared Function [Or](Of T)(ByVal left As Expression(Of Func(Of T, Boolean)), ByVal right As Expression(Of Func(Of T, Boolean))) As Expression(Of Func(Of T, Boolean))\n        Return Expression.Lambda(Of Func(Of T, Boolean))(Expression.OrElse(left.Body, right.Body), left.Parameters(0))\n    End Function\nEnd Class\n\n' Usage:\nDim myItems As New List(Of MyItem) From {New MyItem With {.a = 1, .b = 2}, New MyItem With {.a = 1, .b = 4}, New MyItem With {.a = 2, .b = 4}}\n\nDim query As IQueryable(Of MyTable) = context.MyTables\n\nDim predicate As Expression(Of Func(Of MyTable, Boolean)) = Nothing\n\nFor Each item In myItems\n    Dim itemPredicate As Expression(Of Func(Of MyTable, Boolean)) = Function(x) x.this = item.a AndAlso x.that = item.b\n    If predicate Is Nothing Then\n        predicate = itemPredicate\n    Else\n        predicate = PredicateBuilder.Or(predicate, itemPredicate)\n    End If\nNext\n\nquery = query.Where(predicate)\n\n' Execute the query\nDim results = query.ToList()