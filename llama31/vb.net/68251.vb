Imports System.Security.Cryptography\nImports System.Text\n\nPublic Class CredentialEncryptor\n    Private Shared ReadOnly encryptionKey As Byte() = GenerateKey()\n\n    Public Shared Function EncryptPassword(password As String) As String\n        Using aes As New AesCryptoServiceProvider()\n            aes.Key = encryptionKey\n            aes.GenerateIV()\n            Dim iv As Byte() = aes.IV\n            Using ms As New MemoryStream()\n                Using cs As New CryptoStream(ms, aes.CreateEncryptor(), CryptoStreamMode.Write)\n                    Using sw As New StreamWriter(cs)\n                        sw.Write(password)\n                    End Using\n                End Using\n                Dim encrypted As Byte() = ms.ToArray()\n                Return Convert.ToBase64String(iv.Concat(encrypted).ToArray())\n            End Using\n        End Using\n    End Function\n\n    Public Shared Function DecryptPassword(encryptedPassword As String) As String\n        Using aes As New AesCryptoServiceProvider()\n            aes.Key = encryptionKey\n            Dim ivAndEncrypted As Byte() = Convert.FromBase64String(encryptedPassword)\n            Dim iv As Byte() = New Byte(15) {}\n            Array.Copy(ivAndEncrypted, iv, 16)\n            Dim encrypted As Byte() = New Byte(ivAndEncrypted.Length - 16 - 1) {}\n            Array.Copy(ivAndEncrypted, 16, encrypted, 0, ivAndEncrypted.Length - 16)\n            aes.IV = iv\n            Using ms As New MemoryStream(encrypted)\n                Using cs As New CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Read)\n                    Using sr As New StreamReader(cs)\n                        Return sr.ReadToEnd()\n                    End Using\n                End Using\n            End Using\n        End Using\n    End Function\n\n    Private Shared Function GenerateKey() As Byte()\n        Using aes As New AesCryptoServiceProvider()\n            aes.GenerateKey()\n            Return aes.Key\n        End Using\n    End Function\nEnd Class