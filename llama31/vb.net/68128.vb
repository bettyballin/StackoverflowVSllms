Private Declare Function EnumProcesses Lib "psapi" ( _\n    ByVal lpidProcess As Long, _\n    ByVal cb As Long, _\n    ByVal cbNeeded As Long) As Long\n\nPrivate Declare Function OpenProcess Lib "kernel32" ( _\n    ByVal dwDesiredAccess As Long, _\n    ByVal bInheritHandle As Long, _\n    ByVal dwProcessId As Long) As Long\n\nPrivate Declare Function GetProcessImageFileName Lib "psapi" ( _\n    ByVal hProcess As Long, _\n    ByVal lpImageFileName As String, _\n    ByVal nSize As Long) As Long\n\nPrivate Sub EnumerateProcesses()\n    Const MAX_PATH As Long = 260\n    Dim lpidProcess(0 To 1023) As Long\n    Dim cb As Long\n    Dim cbNeeded As Long\n    Dim i As Long\n    Dim hProcess As Long\n    Dim sImageFileName As String\n    \n    cb = 1024 * 4\n    If EnumProcesses(lpidProcess(0), cb, cbNeeded) = 0 Then\n        ' Handle error\n    Else\n        For i = 0 To cbNeeded / 4 - 1\n            hProcess = OpenProcess(&H400, 0, lpidProcess(i))\n            If hProcess Then\n                sImageFileName = Space(MAX_PATH)\n                GetProcessImageFileName hProcess, sImageFileName, MAX_PATH\n                ' Do something with the process information\n                CloseHandle hProcess\n            End If\n        Next\n    End If\nEnd Sub