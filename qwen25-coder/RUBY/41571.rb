# Gemfile\ngem 'devise'\ngem 'omniauth-vbulletin'  # Assuming there exists an omniauth strategy for VBulletin\n\n# Run bundle install and then:\n# rails generate devise:install\n# rails generate devise User\n# rails generate devise:views\n\n# config/initializers/devise.rb\nDevise.setup do |config|\n  config.omniauth :vbulletin, VBULLETIN_APPLICATION_ID, VBULLETIN_SECRET_KEY,\n    scope: 'read write', # Permissions required\n    client_options: {\n      site: 'https://your-vbulletin-site.com',\n      authorize_url: '/oauth/authorize',\n      token_url: '/oauth/token'\n    }\nend\n\n# app/models/user.rb\nclass User < ApplicationRecord\n  devise :omniauthable, omniauth_providers: [:vbulletin]\n  \n  def self.from_omniauth(auth)\n    where(provider: auth.provider, uid: auth.uid).first_or_create do |user|\n      user.email = auth.info.email\n      # Add other fields as necessary\n    end\n  end\nend\n\n# config/routes.rb\ndevise_for :users, controllers: { omniauth_callbacks: 'users/omniauth_callbacks' }\n\n# Create a callback controller app/controllers/users/omniauth_callbacks_controller.rb\nclass Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController\n  def vbulletin\n    @user = User.from_omniauth(request.env['omniauth.auth'])\n\n    if @user.persisted?\n      sign_in_and_redirect @user, event: :authentication #this will throw if @user is not activated\n      set_flash_message(:notice, :success, kind: 'VBulletin') if is_navigational_format?\n    else\n      session["devise.vbulletin_data"] = request.env['omniauth.auth'].except("extra") # Removing extra as it can overflow some session stores\n      redirect_to new_user_registration_url, alert: @user.errors.full_messages.join("\n")\n    end\n  end\n\n  def failure\n    redirect_to root_path, alert: "Authentication error: #{params[:message].humanize}"\n  end\nend