# In config/application.rb or an initializer\nconfig.force_ssl = true # Enforces SSL for the entire application\n\nclass PurchasesController < ApplicationController\n  def payment\n    @billing_address = params[:billing_address]\n  end\n\n  def summary\n    @credit_card = credit_card_params\n    @billing_address = billing_address_params\n    @cart = get_cart\n    @purchases = @cart.purchases\n    @total = @cart.total\n  end\n\n  def finish\n    @cart = get_cart\n    @total = @cart.total\n\n    credit_card = ActiveMerchant::Billing::CreditCard.new(credit_card_params)\n    billing_address = billing_address_params\n\n    flash[:notice] = credit_card.errors.full_messages.to_sentence and return unless credit_card.valid?\n\n    gateway = ActiveMerchant::Billing::PaypalGateway.new(login: $PAYPAL_LOGIN, password: $PAYPAL_PASSWORD)\n\n    res = gateway.authorize(@total*100, credit_card, ip: request.remote_ip, billing_address: billing_address) # Multiply by 100 if your amount is in dollars\n\n    if res.success?\n      response_code = gateway.capture(@total*100, res.authorization)\n      flash[:notice] = "Authorized"\n      # Clear session data or redirect as needed\n    else\n      flash[:alert] = "Failure: #{res.message}"\n    end\n  end\n\n  private\n\n  def billing_address_params\n    params.require(:billing_address).permit(:name, :address1, :city, :state, :zip, :country)\n  end\n\n  def credit_card_params\n    params.require(:credit_card).permit(:number, :month, :year, :verification_value)\n  end\nend