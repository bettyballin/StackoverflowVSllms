require 'openssl'\nrequire 'base64'\n\n# Generate RSA key pair\nkey = OpenSSL::PKey::RSA.new(2048)\n\n# Encrypt the private key using AES-128-CBC and a passphrase\nciph = OpenSSL::Cipher::AES128_CBC.new(:encrypt)\nciph.random_iv # Initialize random IV\npassphrase_bytes = '123456'.byteslice(0, ciph.key_len) # Use passphrase bytes for key\npassphrase_md5 = OpenSSL::Digest.md5(passphrase_bytes + ciph.iv).to_s\npassphrase_key = [passphrase_bytes, passphrase_md5].flatten.pack('c*')\nciph.key = passphrase_key\n\n# Encrypt the private key\nenc_key = ciph.update(key.to_pem) + ciph.final\n\n# Create SSH-style header and footer for private key\nssh_header = "-----BEGIN RSA PRIVATE KEY-----\n"\nssh_footer = "\n-----END RSA PRIVATE KEY-----"\nssh_private_key = ssh_header + Base64.strict_encode64(enc_key) + ssh_footer\n\nputs "Encrypted Private Key:\n#{ssh_private_key}"\n\n# Extract public key in SSH format\npublic_key = "#{key.ssh_type} #{[key.public_to_blob].pack('m0').strip} your_email@example.com"\n\nputs "\nPublic Key for SSH:\n#{public_key}"