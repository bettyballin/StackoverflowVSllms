# Encrypting an email\ndef encrypt_email(to_key_id, message)\n  gpg = GPGME::Engine.new\n  encrypted_message = gpg.encrypt(\n    message,\n    { recipients: [to_key_id], always_trust: true }\n  )\n  encrypted_message.to_s\nend\n\n# Decrypting an email\ndef decrypt_email(encrypted_message)\n  gpg = GPGME::Engine.new\n  decrypted_data = gpg.decrypt(\n    encrypted_message\n  )\n  decrypted_data.plaintext\nend\n\n# Example usage\npublic_key_id = 'recipient@example.com' # The key ID of the recipient's public key\nprivate_key_password = 'your_private_key_password'\n\nGPGME::Key.import(File.read('path_to_recipient_public_key.asc'))\n\nmessage = "Hello, this is a test message."\nencrypted_message = encrypt_email(public_key_id, message)\nputs "Encrypted: #{encrypted_message}"\n\n# When receiving an email\nreceived_encrypted_message = encrypted_message # This would be the email content you receive\ndecrypted_message = decrypt_email(received_encrypted_message)\nputs "Decrypted: #{decrypted_message}"