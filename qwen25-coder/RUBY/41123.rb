module IdAndNameRedefine\n  def self.included(base)\n    base.extend(ClassMethods)\n  end\n\n  module ClassMethods\n    def use_id_and_name_from_module(use_attribute)\n      class_eval do\n        define_method(:id_and_name) do\n          "#{id}-#{instance_variable_get("@#{use_attribute}").downcase}"\n        end\n      end\n    end\n  end\nend\n\nclass Model\n  include IdAndNameRedefine\n\n  attr_reader :id, :name1, :name2\n\n  def initialize(id, name1, name2)\n    @id = id\n    @name1 = name1\n    @name2 = name2\n  end\n\n  use_id_and_name_from_module(:name2)\nend\n\nmodel = Model.new(1, "TesT", "Test number TWO")\nputs model.id_and_name