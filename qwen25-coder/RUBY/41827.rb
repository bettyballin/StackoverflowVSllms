require 'axlsx'\nrequire 'tmpdir'\n\n# Function to create a drop-down list for open/closed status\ndef add_dropdown_to_cell(worksheet, row_index, col_index)\n  worksheet.add_validation "R#{row_index + 1}C#{col_index + 1}:R#{row_index + 1}C#{col_index + 1}",\n                          { sqref: "R#{row_index + 1}C#{col_index + 1}", formula1: '"Open,Closed"', showInput: true, showDropDown: true }\nend\n\n# Create a new Excel workbook and worksheet\nAxlsx::Package.new do |p|\n  p.workbook.add_worksheet(name: 'Scan Results') do |sheet|\n    # Define ports you want to check\n    ports = [22, 80] # Add more ports as needed\n    headers = ['IP'] + ports.map { |port| "Port #{port}" }\n\n    # Add headers to the first row of the sheet\n    sheet.add_row(headers)\n\n    # Example data: Replace this with your nmap scan results\n    example_data = [\n      ['192.168.1.1', 'Open', 'Closed'],\n      ['10.0.0.1', 'Closed', 'Open']\n    ]\n\n    # Add rows for each host and add drop-down lists for ports\n    example_data.each_with_index do |data, row_index|\n      sheet.add_row(data)\n      ports.size.times do |col_index|\n        add_dropdown_to_cell(sheet, row_index + 1, col_index + 1) # +1 because headers are in the first row\n      end\n    end\n\n  end\n  # Save the Excel file to a temporary directory or any path you prefer\n  p.serialize File.join(Dir.tmpdir, 'scan_results.xlsx')\nend