def generate_nested_list(paths)\n  hierarchy = {}\n  paths.each do |path|\n    parts = path.split('/')\n    current_level = hierarchy\n    parts.each_with_index do |part, index|\n      if index == parts.size - 1\n        # This is a file, add it to the current directory level with its full path as value\n        current_level[part] ||= { '__files__' => [] }\n        current_level[part]['__files__'] << path\n      else\n        # Create directories if they don't exist\n        current_level[part] ||= {}\n      end\n      current_level = current_level[part]\n    end\n  end\n\n  tree_to_html(hierarchy)\nend\n\ndef tree_to_html(tree, indent = '')\n  html = ''\n  tree.each do |key, value|\n    if key == '__files__'\n      value.each do |file_path|\n        # Generate checkbox for each file with full path as value\n        html += "#{indent}<li><label><input type='checkbox' name='paths[]' value='#{file_path}'> #{File.basename(file_path)}</label></li>"\n      end\n    else\n      html += "#{indent}<li>#{key}"\n      if value.is_a?(Hash) && !value.empty?\n        html += "<ul>"\n        html += tree_to_html(value, indent + "  ")\n        html += "</ul>"\n      end\n      html += "</li>"\n    end\n  end\n  html\nend\n\npaths = ['file1', 'dir1/file2', 'dir1/subdir1/file3']\nputs generate_nested_list(paths)