require 'yaml'\n\ndef parse_template(file_path)\n  content = File.read(file_path)\n\n  # Regular expression to match YAML front matter in --- ... ---\n  if content.match(/\A---\s*([\s\S]*?)\s*---\n(.*)/m)\n    metadata_block = $1\n    template_content = $2\n\n    # Parse the YAML block into a hash\n    metadata = YAML.safe_load(metadata_block)\n\n    # Return both the metadata and the template content\n    return [metadata, template_content]\n  else\n    # No front matter found, return empty metadata and full content as template\n    return [{}, content]\n  end\nend\n\n# Usage example\nfile_path = 'path/to/your/template_file.erb'\n@metadata, erb_template = parse_template(file_path)\n\n# Now you can use @metadata in your ERB rendering logic\nrequire 'erb'\n\ntemplate = ERB.new(erb_template)\nputs template.result(binding) # Ensure @metadata is available to the ERB binding