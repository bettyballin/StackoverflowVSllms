# Source App - Controller for the API to expose data\nclass SyncController < ApplicationController\n  def sync_data\n    @data = YourModel.all # You might want to add constraints like `updated_at > last_sync_time`\n    render json: @data.as_json(only: [:id, :name, :value]) # Customize the fields\n  end\nend\n\n# Target App - Service Class for syncing data from source\nclass SyncFromSourceService\n  def self.perform\n    uri = URI.parse("http://sourceapp.com/sync_data")\n    response = Net::HTTP.get_response(uri)\n\n    if response.is_a?(Net::HTTPSuccess)\n      JSON.parse(response.body).each do |item|\n        record = YourModel.find_or_initialize_by(id: item['id'])\n        record.update!(name: item['name'], value: item['value'])\n      end\n    else\n      Rails.logger.error "Failed to fetch data from source: #{response.message}"\n    end\n  end\nend\n\n# Add a periodic job in target app, e.g., using Whenever or Clockwork\nevery 1.day do\n  runner "SyncFromSourceService.perform"\nend