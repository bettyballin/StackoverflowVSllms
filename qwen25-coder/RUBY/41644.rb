require 'active_ldap'\n\nclass LDAPManager\n  def initialize(host)\n    ActiveLdap::Base.establish_connection(\n      host: host,\n      base: 'dc=example,dc=com'\n    )\n    ActiveLdap::Entry.setup(nil)\n  end\n\n  def delete_ou_with_subtree(ou_dn)\n    entry = ActiveLdap::Entry.find_by_branch(ou_dn)\n    entry.each_leaf do |leaf|\n      leaf.destroy\n    end\n    entry.destroy if entry.exists?\n  rescue StandardError => e\n    puts "An error occurred: #{e.message}"\n  end\nend\n\n# Usage\nldap_manager = LDAPManager.new(' ldap.example.com')\nldap_manager.delete_ou_with_subtree('ou=TestOU,dc=example,dc=com')