# Assuming:\n# class ModelA < ApplicationRecord\n#   has_many :model_a_model_bs, dependent: :destroy\n#   has_many :model_bs, through: :model_a_model_bs\n#\n# class ModelB < ApplicationRecord\n#   has_many :model_a_model_bs, dependent: :destroy\n#   has_many :model_as, through: :model_a_model_bs\n#\n# class ModelAModelB < ApplicationRecord\n#   belongs_to :model_a\n#   belongs_to :model_b\n# end\n\ndef find_model_as_associated_with_all_model_bs(model_b_ids)\n  return [] if model_b_ids.empty?\n\n  query = ModelA.joins(:model_a_model_bs)\n\n  model_b_ids.each do |id|\n    query = query.merge(ModelAModelB.where(model_b_id: id))\n  end\n\n  query\nend\n\n# Usage:\nmodel_bs_ids_to_filter_by = [model_b_1.id, model_b_2.id]\nmodel_as = find_model_as_associated_with_all_model_bs(model_bs_ids_to_filter_by)