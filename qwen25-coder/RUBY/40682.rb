# User model\nclass User < ApplicationRecord\n  has_many :users_roles, dependent: :destroy\n  has_many :roles, through: :users_roles\n\n  # Method to check if user has a certain permission\n  def can?(action, subject)\n    roles.joins(:permissions).where(\n      permissions: { action: action, subject_class: subject.class.name, subject_id: subject.id }\n    ).exists?\n  end\nend\n\n# Role model\nclass Role < ApplicationRecord\n  has_many :users_roles, dependent: :destroy\n  has_many :users, through: :users_roles\n  has_many :roles_permissions, dependent: :destroy\n  has_many :permissions, through: :roles_permissions\nend\n\n# Permission model\nclass Permission < ApplicationRecord\n  has_many :roles_permissions, dependent: :destroy\n  has_many :roles, through: :roles_permissions\nend\n\n# UsersRoles join table model (optional)\nclass UserRole < ApplicationRecord\n  belongs_to :user\n  belongs_to :role\nend\n\n# RolesPermissions join table model (optional)\nclass RolePermission < ApplicationRecord\n  belongs_to :role\n  belongs_to :permission\nend