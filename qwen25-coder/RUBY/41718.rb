module Superpower\n\n    # instance method\n    def turn_invisible\n        puts "Becoming invisible!"\n    end\n\n    # module method\n    def self.turn_into_toad(bad_guy)\n        puts "#{bad_guy} is turned into a toad!"\n    end\n\n    module Fly\n        def flap_wings\n            puts "Flapping wings to fly away!"\n        end\n    end\n\nend\n\nclass Superman\n    include Superpower\n    include Superpower::Fly  # Include the nested module\n\n    def run_away\n        flap_wings          # Can call directly as if defined in this class\n        turn_invisible      # Also can call directly as if defined in this class\n    end\n\n    def see_bad_guys(bad_guy = "Lex Luthor")\n        Superpower.turn_into_toad(bad_guy)  # Correct call to module method\n    end\n\nend\n\n# Example usage:\nsuperman = Superman.new\nsuperman.run_away                # Outputs: Flapping wings to fly away! \n Becoming invisible!\nsuperman.see_bad_guys            # Outputs: Lex Luthor is turned into a toad!