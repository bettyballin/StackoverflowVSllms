require 'unicode_utils'\n\ndef split_into_sentences(text)\n  # Regular expression pattern to match sentence-ending punctuation\n  pattern = /\n    (?<=[.!?])      # Lookbehind for punctuation marks that may end sentences\n    \s+            # One or more whitespace characters following the punctuation\n    (?!             # Negative lookahead ensuring not followed by:\n      [a-z]        # Lowercase letters which usually come in abbreviations\n    )\n  /x\n\n  # Split text using pattern while handling Unicode\n  sentences = text.split(pattern)\n\n  # Trim empty strings and return\n  sentences.select { |sentence| !sentence.strip.empty? }\nend\n\ntext = "Getting data from Mr. Jones felt the warm sun on his face as he stepped out onto the balcony of his summer home in Italy. He was happy to be alive."\nputs split_into_sentences(text).inspect