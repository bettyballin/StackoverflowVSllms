# Models\n\nclass Movie < ApplicationRecord\n  has_many :cast_members\n  has_many :actors, through: :cast_members\n  has_many :crew_members\n  has_many :filming_locations\nend\n\nclass User < ApplicationRecord\n  # Auth details and other user-specific fields here\nend\n\nclass Actor < ApplicationRecord\n  has_many :cast_members\n  has_many :movies, through: :cast_members\nend\n\nclass Director < ApplicationRecord\n  has_many :crew_members, as: :person\n  has_many :movies, through: :crew_members\nend\n\nclass Character < ApplicationRecord\n  belongs_to :movie\n  belongs_to :actor, optional: true\nend\n\nclass FilmingLocation < ApplicationRecord\n  has_and_belongs_to_many :movies\nend\n\nclass CastMember < ApplicationRecord\n  belongs_to :movie\n  belongs_to :actor\nend\n\nclass CrewMember < ApplicationRecord\n  belongs_to :movie\n  # Using polymorphic association for person (can be an actor, director, etc.)\n  belongs_to :person, polymorphic: true\nend\n\n# Optional Person model if you decide to unify different roles under one table\nclass Person < ApplicationRecord\n  has_many :crew_members, as: :person\n  has_many :movies, through: :crew_members\nend