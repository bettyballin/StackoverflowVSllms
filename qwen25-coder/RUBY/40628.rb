require 'yaml'\n\nclass Lock\n  include YAML::Serializable\n\n  def encode_with(coder)\n    # Do not add anything here if you want to skip serialization of this object\n    # or add a specific representation\n    coder.map = {} \n  end\nend\n\n# Example usage remains the same\nlock_instance = Lock.new\ndata_to_serialize = { info: "Some info", lock: lock_instance }\nserialized_data = YAML.dump(data_to_serialize)\n\nputs serialized_data