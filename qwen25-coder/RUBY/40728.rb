require 'shoes'\n\ndef select_interface(interfaces, &callback)\n  interface = nil\n\n  Shoes.app do\n    @selected = false\n\n    list_box :items => interfaces do |list|\n      interface = list.text\n      @selected = true\n      callback.call(interface) if block_given?\n      close # Close the app after selection is made\n    end\n  end\n\n  # Alternatively, you could poll in a non-blocking way if needed.\n  wait_until_selected unless block_given?\n\n  return interface # This will only be executed if no block is passed and selection happens within same thread.\nend\n\ndef wait_until_selected\n  while !@selected do\n    sleep(0.1) # Small delay to prevent busy waiting\n  end\nend\n\n# Usage with a callback:\nselect_interface(['eth0', 'wlan0']) do |interface|\n  puts "Selected interface: #{interface}"\n  # Rest of the program logic here.\nend\n\n# Alternatively, if you want to continue in the same block:\nselected_interface = select_interface(['eth0', 'wlan0'])\nputs "Continuing with interface: #{selected_interface}"