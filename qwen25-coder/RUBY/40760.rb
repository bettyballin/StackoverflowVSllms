# Avoid single-letter variable unless in small contexts\n(1..10).each do |num|  # good\n    puts num * num\nend\n\n# Use methods instead of chaining for side effects\nnumbers = [1, 2, 3]\nnumbers.each { |num| some_complex_side_effect(num) }  # better than chaining with side effects\n\n# Avoid global variables\n# $global_var = 'No!'  # avoid!\n\n# Be cautious about metaprogramming\nclass MyClass\n    def initialize(name)\n        @name = name\n    end\n    \n    # Prefer direct method definition over metaprogramming when possible\nend\n\n# Use comments to explain non-obvious code\ndef calculate_discount(price, discount_percentage)\n    discounted_price = price - (price * discount_percentage / 100.0)\n    # This line calculates the final price after applying a discount.\n    final_price = discounted_price.round(2)  # Round to two decimal places\n    final_price\nend