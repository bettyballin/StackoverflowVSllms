using System;\nusing System.ComponentModel;\nusing System.Configuration.Install;\nusing Microsoft.Win32;\n\n[RunInstaller(true)]\npublic class CustomServiceInstaller : Installer\n{\n    public override void Install(IDictionary stateSaver)\n    {\n        base.Install(stateSaver);\n\n        string serviceName = Context.Parameters["servicename"];\n        if (string.IsNullOrEmpty(serviceName))\n            throw new ArgumentException("The 'servicename' parameter is required.");\n\n        using (RegistryKey system = Registry.LocalMachine.OpenSubKey(@"System\CurrentControlSet\Services", true))\n        {\n            using (RegistryKey service = system.OpenSubKey(serviceName, true))\n            {\n                if (service == null)\n                    throw new InstallException("Service not found in registry: " + serviceName);\n\n                // Modify the ImagePath to include your command-line argument\n                string imagePath = service.GetValue("ImagePath") as string;\n                if (!string.IsNullOrEmpty(imagePath))\n                {\n                    // Append the command-line option\n                    imagePath += " -commandlineoption";\n                    service.SetValue("ImagePath", imagePath);\n                }\n            }\n        }\n    }\n\n    public override void Uninstall(IDictionary savedState)\n    {\n        base.Uninstall(savedState);\n\n        string serviceName = Context.Parameters["servicename"];\n        if (string.IsNullOrEmpty(serviceName))\n            throw new ArgumentException("The 'servicename' parameter is required.");\n\n        using (RegistryKey system = Registry.LocalMachine.OpenSubKey(@"System\CurrentControlSet\Services", true))\n        {\n            using (RegistryKey service = system.OpenSubKey(serviceName, true))\n            {\n                if (service == null)\n                    throw new InstallException("Service not found in registry: " + serviceName);\n\n                // Optionally revert ImagePath or clean up\n                string imagePath = service.GetValue("ImagePath") as string;\n                if (!string.IsNullOrEmpty(imagePath) && imagePath.EndsWith(" -commandlineoption"))\n                {\n                    imagePath = imagePath.Substring(0, imagePath.Length - " -commandlineoption".Length);\n                    service.SetValue("ImagePath", imagePath);\n                }\n            }\n        }\n    }\n}