using System;\nusing System.Collections.Generic;\nusing System.IO;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string inputFilePath = "path_to_input.reg";\n        string outputFilePath = "path_to_output_cleaned.reg";\n\n        var entries = new Dictionary<string, HashSet<string>>();\n\n        foreach (string line in File.ReadLines(inputFilePath))\n        {\n            if (!line.Contains("[")) // We're only interested in lines with settings\n            {\n                AddEntry(line.Trim(), entries);\n            }\n        }\n\n        using (StreamWriter writer = new StreamWriter(outputFilePath))\n        {\n            string currentKey = null;\n\n            foreach (KeyValuePair<string, HashSet<string>> entry in entries.OrderBy(e => e.Key))\n            {\n                if (entry.Key != currentKey)\n                {\n                    writer.WriteLine(entry.Key);\n                    currentKey = entry.Key;\n                }\n\n                foreach (var value in entry.Value)\n                {\n                    writer.WriteLine(value);\n                }\n            }\n        }\n    }\n\n    private static void AddEntry(string line, Dictionary<string, HashSet<string>> entries)\n    {\n        int index = line.IndexOf("\\", StringComparison.Ordinal) + 1;\n\n        while (index < line.Length && char.IsLetterOrDigit(line[index]) || line[index] == '_' || line[index] == '-')\n            index++;\n\n        string key = line.Substring(0, index);\n        string value = line.Substring(index).Trim();\n\n        if (!entries.ContainsKey(key))\n        {\n            entries[key] = new HashSet<string>();\n        }\n\n        entries[key].Add(value);\n    }\n}