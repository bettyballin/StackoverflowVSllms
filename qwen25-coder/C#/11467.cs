public class MyDbContext : DbContext\n{\n    public DbSet<User> Users { get; set; }\n    public DbSet<Company> Companies { get; set; }\n\n    protected override void OnModelCreating(DbModelBuilder modelBuilder)\n    {\n        // Configure the User entity to ignore the Company navigation property.\n        modelBuilder.Entity<User>()\n            .HasOptional(u => u.Company) // or HasRequired if it's required\n            .WithMany() // no collection for inverse navigation\n            .HasForeignKey(u => u.CompanyId)\n            .WillCascadeOnDelete(false); // Adjust this as needed\n\n        // To remove the Company navigation property entirely:\n        modelBuilder.Entity<User>()\n            .Ignore(u => u.Company);\n    }\n}\n\npublic class User\n{\n    public int UserId { get; set; }\n    public int? CompanyId { get; set; }\n\n    [ForeignKey("CompanyId")]\n    public virtual Company Company { get; set; } // You can remove this line if you want no navigation property at all.\n}\n\npublic class Company\n{\n    public int CompanyId { get; set; }\n    // Other properties...\n}