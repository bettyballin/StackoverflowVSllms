public class OperationResult<T>\n{\n    public bool IsSuccess { get; private set; }\n    public T Data { get; private set; }\n    public List<string> Errors { get; private set; }\n\n    protected OperationResult(bool isSuccess, T data, List<string> errors)\n    {\n        IsSuccess = isSuccess;\n        Data = data;\n        Errors = errors ?? new List<string>();\n    }\n\n    public static OperationResult<T> Success(T data)\n    {\n        return new OperationResult<T>(true, data, null);\n    }\n\n    public static OperationResult<T> Failure(List<string> errors)\n    {\n        return new OperationResult<T>(false, default(T), errors);\n    }\n}\n\npublic class PersonServices\n{\n    private readonly PersonRepository _personRepository;\n\n    public PersonServices(PersonRepository personRepository)\n    {\n        _personRepository = personRepository;\n    }\n\n    public OperationResult<bool> AddPerson(Person person)\n    {\n        var validationResult = Validate(person);\n        if (!validationResult.IsSuccess)\n        {\n            return OperationResult<bool>.Failure(validationResult.Errors);\n        }\n\n        // Assuming the repository returns a boolean indicating success or failure\n        bool isAdded = _personRepository.AddPerson(person);\n        if (isAdded)\n        {\n            return OperationResult<bool>.Success(true);\n        }\n        else\n        {\n            return OperationResult<bool>.Failure(new List<string> { "Failed to add person to the repository." });\n        }\n    }\n\n    private OperationResult<bool> Validate(Person person)\n    {\n        var errors = new List<string>();\n\n        if (string.IsNullOrWhiteSpace(person.FirstName))\n        {\n            errors.Add("First name is required.");\n        }\n\n        if (string.IsNullOrWhiteSpace(person.LastName))\n        {\n            errors.Add("Last name is required.");\n        }\n\n        if (_personRepository.PersonExists(person))\n        {\n            errors.Add("Person already exists.");\n        }\n\n        return errors.Count == 0\n            ? OperationResult<bool>.Success(true)\n            : OperationResult<bool>.Failure(errors);\n    }\n}