using System;\nusing System.Runtime.InteropServices;\n\nclass TreeViewControlHelper\n{\n    // Constants for TVIF_STATE and INDEXTOSTATEID\n    private const int TVIF_STATE = 0x8;\n    private const int INDEXTOSTATEID = 0x8000;\n\n    // Importing TreeView functions from user32.dll\n    [DllImport("user32.dll")]\n    private static extern IntPtr TreeView_GetRoot(IntPtr hwnd);\n\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    private static extern bool TreeView_GetItem(IntPtr hwnd, ref TVITEM tvitem);\n\n    // Structure to hold tree item information\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\n    private struct TVITEM\n    {\n        public int mask;\n        public IntPtr hItem;\n        public int state;\n        public int stateMask;\n        [MarshalAs(UnmanagedType.LPTStr)]\n        public string pszText;\n        public int cchTextMax;\n        public IntPtr iImage;\n        public IntPtr iParam;\n        public int iSelectedImage;\n        public int cChildren;\n        public IntPtr lParam;\n    }\n\n    // Function to get the check state of a tree item\n    private static int TreeView_GetCheckState(IntPtr hwnd, IntPtr hItem)\n    {\n        TVITEM tvi = new TVITEM();\n        tvi.mask = TVIF_STATE;\n        tvi.hItem = hItem;\n        tvi.stateMask = INDEXTOSTATEID * 1; // Get the state mask for the first index (check box state)\n\n        if (!TreeView_GetItem(hwnd, ref tvi))\n        {\n            throw new Exception("Failed to retrieve item information.");\n        }\n\n        return tvi.state >> 12; // Check state is stored in the high-order byte\n    }\n\n    public static int GetCheckState(IntPtr hwnd)\n    {\n        IntPtr hRootItem = TreeView_GetRoot(hwnd);\n        if (hRootItem == IntPtr.Zero)\n        {\n            throw new Exception("Failed to get root item.");\n        }\n\n        return TreeView_GetCheckState(hwnd, hRootItem);\n    }\n}\n\n// Usage\nclass Program\n{\n    static void Main()\n    {\n        IntPtr hwnd = /* assign your window handle here */;\n        \n        int checkState = TreeViewControlHelper.GetCheckState(hwnd);\n\n        switch (checkState)\n        {\n            case 0:\n                Console.WriteLine("Unchecked");\n                break;\n            case 1:\n                Console.WriteLine("Checked");\n                break;\n            default:\n                Console.WriteLine("Indeterminate");\n                break;\n        }\n    }\n}