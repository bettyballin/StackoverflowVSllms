using System.Xml;\nusing FluentNHibernate.Cfg;\nusing FluentNHibernate.Cfg.Db;\nusing NHibernate.Cfg;\nusing NHibernate.Burrow.Configuration;\n\npublic class NhBurrowConfig\n{\n    public static PersistenceXmlConfiguration Configure()\n    {\n        var nhConfig = Fluently.Configure()\n            .Database(MsSqlConfiguration.MsSql2012.ConnectionString("your-connection-string"))\n            .Mappings(m => m.FluentMappings.AddFromAssemblyOf<YourEntity>())\n            .BuildConfiguration();\n\n        XmlDocument xmlDoc = new XmlDocument();\n        using (var stringWriter = new System.IO.StringWriter())\n        using (XmlTextWriter xmlWriter = XmlWriter.Create(stringWriter))\n        {\n            nhConfig.WriteToXml(xmlWriter);\n            xmlDoc.LoadXml(stringWriter.ToString());\n        }\n\n        var persistenceConfig = new PersistenceXmlConfiguration\n        {\n            ConfigurationHolderFactory = () => new InMemoryConfigurationHolder(new NHibernate.Cfg.Configuration().Configure(xmlDoc))\n        };\n\n        return persistenceConfig;\n    }\n}