using System.ServiceProcess;\n\npublic static class ServiceInstaller\n{\n    public static void InstallService(ServiceController sc)\n    {\n        if (sc.Status == ServiceControllerStatus.Running || sc.Status == ServiceControllerStatus.Stopped)\n        {\n            // Change the service start mode to Automatic\n            using (var changeStartMode = new System.ServiceProcess.ServiceController(sc.ServiceName, sc.MachineName))\n            {\n                ChangeServiceConfig(changeStartMode.ServiceHandle.DangerousGetHandle(),\n                    SERVICE_NO_CHANGE, SERVICE_AUTO_START, SERVICE_NO_CHANGE,\n                    null, null, IntPtr.Zero, null, null, null, null);\n\n                // Start the service if it's not running\n                if (sc.Status == ServiceControllerStatus.Stopped)\n                {\n                    sc.Start();\n                    sc.WaitForStatus(ServiceControllerStatus.Running);\n                }\n            }\n        }\n    }\n\n    [System.Runtime.InteropServices.DllImport("advapi32.dll", CharSet = System.Runtime.InteropServices.CharSet.Unicode, SetLastError = true)]\n    private static extern bool ChangeServiceConfig(IntPtr hService, int nServiceType, int nStartType, int nErrorControl, string lpBinaryPathName,\n                                                  string lpLoadOrderGroup, IntPtr lpdwTagId, string lpDependencies, string lpServiceStartName, string lpPassword, string lpDisplayName);\n\n    private const int SERVICE_AUTO_START = 0x00000002;\n    private const int SERVICE_NO_CHANGE = -1;\n}