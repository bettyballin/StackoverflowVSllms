using System;\nusing System.Net;\nusing System.Net.Security;\nusing System.Net.Sockets;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Security.Authentication;\n\npublic static void StartServer()\n{\n    string serverCertPath = "path_to_server.pfx";\n    string serverCertPass = "server_certificate_password";\n\n    X509Certificate2 certificate = new X509Certificate2(serverCertPath, serverCertPass);\n\n    using (TcpListener listener = new TcpListener(IPAddress.Any, 8443))\n    {\n        listener.Start();\n        Console.WriteLine("Server started on port 8443");\n\n        while (true)\n        {\n            TcpClient client = listener.AcceptTcpClient();\n\n            SslStream sslStream = new SslStream(client.GetStream(), false,\n                RemoteCertificateValidationCallback delegate { return true; },\n                LocalCertificateSelectionCallback SelectLocalCertificate);\n\n            sslStream.AuthenticateAsServer(certificate, requireClientCert: true, enabledSslProtocols: SslProtocols.Tls12 | SslProtocols.Tls13, checkCertificateRevocationList: false);\n\n            // Perform SSL/TLS communication here\n        }\n    }\n}\n\nprivate static X509Certificate SelectLocalCertificate(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuer)\n{\n    return new X509Certificate2("path_to_server.pfx", "server_certificate_password");\n}