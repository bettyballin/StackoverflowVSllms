public ValidationError Validate<T>(T entityProperty, string[] entityPropertyName)\n{\n    ICollection<T> businessObjectList = FetchObjectsByType<T>();\n\n    // Create an anonymous type to store the combined property values\n    var propertyValues = from name in entityPropertyName\n                         let value = getPropertyValue(entityProperty, name).ToString()\n                         select new { Name = name, Value = value };\n\n    var entityID = ((IBusinessObjectBase)entityProperty).ID.ToString();\n\n    // Check for duplicates by comparing all specified properties\n    bool isDuplicate = businessObjectList.Any(obj =>\n        obj.GetType().GetProperty("ID").GetValue(obj, null).ToString() != entityID &&\n        propertyValues.All(propVal => getPropertyValue(obj, propVal.Name).ToString() == propVal.Value));\n\n    if (isDuplicate)\n    {\n        return new ValidationError(_DuplicateMessage);\n    }\n    else\n    {\n        return ValidationError.Empty;\n    }\n}