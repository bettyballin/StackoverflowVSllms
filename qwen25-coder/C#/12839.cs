using System;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading.Tasks;\n\npublic class TcpSocketServer\n{\n    public static async Task StartAsync(int port)\n    {\n        var listener = new TcpListener(System.Net.IPAddress.Any, port);\n        listener.Start();\n        Console.WriteLine("Started listening for connections...");\n\n        while (true)\n        {\n            TcpClient client = await listener.AcceptTcpClientAsync();\n            _ = ProcessClientAsync(client); // Run the process in a background task\n        }\n    }\n\n    private static async Task ProcessClientAsync(TcpClient client)\n    {\n        NetworkStream stream = client.GetStream();\n        byte[] buffer = new byte[1024];\n\n        try\n        {\n            while (true)\n            {\n                int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n                if (bytesRead == 0) break; // Client closed the connection\n\n                string dataReceived = Encoding.ASCII.GetString(buffer, 0, bytesRead);\n                Console.WriteLine($"Received: {dataReceived}");\n\n                // Echo the received message back to the client\n                await stream.WriteAsync(Encoding.ASCII.GetBytes(dataReceived), 0, dataReceived.Length);\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine($"Error: {e.Message}");\n        }\n        finally\n        {\n            client.Close();\n        }\n    }\n\n    public static async Task Main(string[] args) => await StartAsync(5000);\n}