using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace GenApp.Utils.Security\n{\n    public interface IEncryptorStrategy\n    {\n        string Encrypt(string plainText);\n    }\n\n    public class SHA1Encryptor : IEncryptorStrategy\n    {\n        public string Encrypt(string plainText)\n        {\n            using (SHA1 sha1Hash = SHA1.Create())\n            {\n                byte[] dataBytes = Encoding.UTF8.GetBytes(plainText);\n                byte[] hashBytes = sha1Hash.ComputeHash(dataBytes);\n                return Convert.ToBase64String(hashBytes);\n            }\n        }\n    }\n\n    public class MD5Encryptor : IEncryptorStrategy\n    {\n        public string Encrypt(string plainText)\n        {\n            using (MD5 md5Hash = MD5.Create())\n            {\n                byte[] dataBytes = Encoding.UTF8.GetBytes(plainText);\n                byte[] hashBytes = md5Hash.ComputeHash(dataBytes);\n                return Convert.ToBase64String(hashBytes);\n            }\n        }\n    }\n\n    // Add new algorithms here by implementing IEncryptorStrategy\n\n    public class Encrypter\n    {\n        private static readonly Dictionary<string, IEncryptorStrategy> Strategies = new()\n        {\n            { "SHA1", new SHA1Encryptor() },\n            { "MD5", new MD5Encryptor() }\n            // Add new algorithms here\n        };\n\n        public static string Encrypt(string strPlainTxt, string strAlgorithmName)\n        {\n            if (Strategies.TryGetValue(strAlgorithmName, out IEncryptorStrategy strategy))\n            {\n                return strategy.Encrypt(strPlainTxt);\n            }\n\n            throw new ArgumentException($"Encryption provider called by invalid simple name: {strAlgorithmName}");\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string strPlainTxt = "UnEncryptedText";\n            string strAlgorithmName;\n            string strHashedTxt;\n\n            foreach (var algorithm in new string[] { "SHA1", "MD5" })\n            {\n                Console.WriteLine($"Using the {algorithm} START");\n                Console.WriteLine("The plain text is " + strPlainTxt);\n                Console.WriteLine("The encrypting algorithm is " + algorithm);\n                strAlgorithmName = algorithm;\n                strHashedTxt = Encrypter.Encrypt(strPlainTxt, strAlgorithmName);\n                Console.WriteLine("The hashed text is " + strHashedTxt);\n                Console.WriteLine($"Using the {algorithm} END\n");\n            }\n\n            Console.WriteLine("Hit enter to exit");\n            Console.ReadLine();\n        }\n    }\n}