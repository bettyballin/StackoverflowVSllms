using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]\n    private static extern bool GetVolumeInformation(\n        string lpRootPathName,\n        StringBuilder lpVolumeNameBuffer,\n        uint nVolumeNameSize,\n        ref uint lpVolumeSerialNumber,\n        ref uint lpMaximumComponentLength,\n        ref uint lpFileSystemFlags,\n        StringBuilder lpFileSystemNameBuffer,\n        uint nFileSystemNameSize);\n\n    public static bool GetDriveSN(string driveLetter, out string serialNumber)\n    {\n        uint volumeSerial = 0;\n        uint maxFileNameLength = 0;\n        uint fileSystemFlags = 0;\n\n        StringBuilder sbVolumeName = new StringBuilder(256);\n        StringBuilder sbFileSystemName = new StringBuilder(256);\n\n        bool result = GetVolumeInformation(\n            driveLetter + ":\\",\n            sbVolumeName,\n            (uint)sbVolumeName.Capacity,\n            ref volumeSerial,\n            ref maxFileNameLength,\n            ref fileSystemFlags,\n            sbFileSystemName,\n            (uint)sbFileSystemName.Capacity);\n\n        serialNumber = string.Empty;\n        if (result)\n        {\n            serialNumber = Convert.ToString(volumeSerial, 16).ToUpper().PadLeft(8, '0');\n        }\n\n        return result;\n    }\n\n    public static void Main()\n    {\n        foreach (var drive in System.IO.DriveInfo.GetDrives())\n        {\n            if (drive.IsReady)\n            {\n                GetDriveSN(drive.Name[0].ToString(), out string serial);\n                Console.WriteLine($"Drive {drive.Name}: Serial Number = {serial.Insert(4, "-")}");\n            }\n        }\n    }\n}