using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing Moq;\n\n[TestClass]\npublic class DatabaseTests\n{\n    [TestMethod]\n    public void ExecuteQuery_WithValidParameters_ReturnsExpectedDataTable()\n    {\n        // Arrange\n        var mockConnection = new Mock<SqlConnection>();\n        var mockCommand = new Mock<SqlCommand>();\n        var mockDataAdapter = new Mock<SqlDataAdapter>();\n\n        DataTable expectedTable = new DataTable();\n        expectedTable.Columns.Add("TestColumn");\n\n        SqlParameter testParameter = new SqlParameter("@test", "value");\n        SqlParameterCollection parameters = new SqlCommand().Parameters;\n        parameters.Add(testParameter);\n\n        mockConnection.Setup(c => c.CreateCommand()).Returns(mockCommand.Object);\n        mockCommand.Setup(cmd => cmd.Parameters).Returns(parameters);\n        mockDataAdapter.Setup(adp => adp.Fill(It.IsAny<DataTable>())).Callback<DataTable>(dt => dt.Merge(expectedTable));\n\n        var dbService = new DatabaseService();\n\n        // Act\n        DataTable resultTable = dbService.ExecuteQuery(mockConnection.Object, "SELECT * FROM Test", parameters);\n\n        // Assert\n        mockConnection.Verify(c => c.CreateCommand(), Times.Once);\n        mockCommand.VerifySet(cmd => cmd.CommandText = "SELECT * FROM Test");\n        mockDataAdapter.Verify(adp => adp.Fill(resultTable), Times.Once);\n        Assert.AreEqual(1, resultTable.Columns.Count);\n    }\n}\n\npublic class DatabaseService\n{\n    public DataTable ExecuteQuery(SqlConnection activeConnection, string query, SqlParameterCollection parameters)\n    {\n        DataTable resultSet = new DataTable();\n        SqlCommand queryCommand = new SqlCommand();\n\n        try\n        {\n            queryCommand.Connection = activeConnection;\n            queryCommand.CommandText = query;\n\n            if (parameters != null)\n            {\n                foreach (SqlParameter param in parameters)\n                {\n                    queryCommand.Parameters.Add(param);\n                }\n            }\n\n            SqlDataAdapter queryDA = new SqlDataAdapter(queryCommand);\n            queryDA.Fill(resultSet);\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n\n        return resultSet;\n    }\n}