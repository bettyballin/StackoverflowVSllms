using System;\nusing System.Windows.Forms;\n\npublic class MyForm : Form\n{\n    private WebBrowser webBrowser;\n\n    public MyForm()\n    {\n        // Initialize the WebBrowser control\n        webBrowser = new WebBrowser { Dock = DockStyle.Fill };\n        webBrowser.DocumentCompleted += WebBrowser_DocumentCompleted;\n        Controls.Add(webBrowser);\n        \n        // Load a sample page for demonstration\n        webBrowser.Navigate("http://yourpage.com");\n    }\n\n    private void WebBrowser_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)\n    {\n        var document = webBrowser.Document;\n\n        // Inject JavaScript to detect DOM changes\n        string script = @"\n            (function() {\n                var lastHtml = '';\n                function checkForUpdates() {\n                    if(document.body && document.body.innerHTML !== lastHtml) {\n                        lastHtml = document.body.innerHTML;\n                        window.external.OnDomChanged();\n                    }\n                }\n                setInterval(checkForUpdates, 100); // Check every 100ms\n            })();\n        ";\n\n        // Add the script to the webpage\n        if (document != null)\n        {\n            var htmlElementCollection = document.GetElementsByTagName("head");\n            HtmlElement headElement = htmlElementCollection[0];\n            HtmlElement scriptElement = document.CreateElement("script");\n\n            IHTMLScriptElement se = (IHTMLScriptElement)scriptElement.DomElement;\n            se.text = script;\n\n            headElement.AppendChild(scriptElement);\n        }\n    }\n\n    private void OnDomChanged()\n    {\n        // Handle DOM change event here\n        MessageBox.Show("DOM has changed!");\n    }\n\n    [ComVisible(true)]\n    public class ScriptObject\n    {\n        private MyForm form;\n\n        public ScriptObject(MyForm form)\n        {\n            this.form = form;\n        }\n\n        public void OnDomChanged()\n        {\n            if (form.InvokeRequired)\n            {\n                form.BeginInvoke(new MethodInvoker(form.OnDomChanged));\n            }\n            else\n            {\n                form.OnDomChanged();\n            }\n        }\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n\n        MyForm form = new MyForm();\n        // Create a script object and add it to the web browser\n        ScriptObject scriptObj = new ScriptObject(form);\n        form.webBrowser.ObjectForScripting = scriptObj;\n\n        Application.Run(form);\n    }\n}\n\n// COM Interop Interface for IE specific HTMLScriptElement\n[ComImport, TypeLibType((short) 4096), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]\npublic interface IHTMLScriptElement\n{\n    void Setonreadystatechange(object p);\n    [DispId(1000)]\n    object onreadystatechange { get; set; }\n    [DispId(-2147413085)]\n    string text { set; [return: MarshalAs(UnmanagedType.BStr)] get; }\n}