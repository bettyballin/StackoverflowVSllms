private string Decrypt(string cipherText)\n{\n    if (clientCert == null)\n    {\n        // Get certificate\n        var store = new X509Store(StoreName.My, StoreLocation.LocalMachine);\n        store.Open(OpenFlags.ReadOnly);\n        foreach (var certificate in store.Certificates)\n        {\n            if (certificate.GetNameInfo(X509NameType.SimpleName, false) == CERT)\n            {\n                clientCert = certificate;\n                break;\n            }\n        }\n    }\n\n    using (var rsa = clientCert.GetRSAPrivateKey())\n    {\n        try\n        {\n            var encryptedBytes = Convert.FromBase64String(cipherText);\n            // Ensure the padding scheme is set to PKCS#1 v1.5\n            var decryptedBytes = rsa.Decrypt(encryptedBytes, RSAEncryptionPadding.Pkcs1);\n            var plaintext = Encoding.UTF8.GetString(decryptedBytes);\n            return plaintext;\n        }\n        catch (CryptographicException e)\n        {\n            throw new ApplicationException("Unable to decrypt payload.", e);\n        }\n    }\n}