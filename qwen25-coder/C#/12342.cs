using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Item\n{\n    public int Id { get; set; }\n    public string Code { get; set; }\n    public string Description { get; set; }\n}\n\npublic static Hashtable ConvertListToHashtable(List<Item> items)\n{\n    return items.ToDictionary(item => item.Description, item => (object)item.Id).ToHashtable();\n}\n\npublic static class DictionaryExt\n{\n    // Extension method to convert a dictionary to a hashtable\n    public static Hashtable ToHashtable(this IDictionary<string, object> dictionary)\n    {\n        var hashtable = new Hashtable(dictionary.Count);\n        foreach (var kvp in dictionary)\n        {\n            hashtable[kvp.Key] = kvp.Value;\n        }\n        return hashtable;\n    }\n}\n\n// Example usage:\npublic class Program\n{\n    public static void Main()\n    {\n        List<Item> items = new List<Item>\n        {\n            new Item { Id = 1, Code = "A001", Description = "Item One" },\n            new Item { Id = 2, Code = "B002", Description = "Item Two" }\n        };\n\n        Hashtable hashtable = ConvertListToHashtable(items);\n\n        // Serialize to JSON using a JSON library like Newtonsoft.Json\n        string json = Newtonsoft.Json.JsonConvert.SerializeObject(hashtable);\n        Console.WriteLine(json);\n    }\n}