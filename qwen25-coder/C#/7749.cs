using System;\nusing System.IO;\nusing System.Net.Mail;\n\npublic void CreateMimeFile(MailMessage mail)\n{\n    // Specify the path to save the mime file.\n    string directory = Server.MapPath("~/Emails/");\n    if (!Directory.Exists(directory))\n        Directory.CreateDirectory(directory);\n\n    string fileName = Path.Combine(directory, "email.mime");\n    \n    // Open a StreamWriter with the file name and the MIME type\n    using (StreamWriter writer = new StreamWriter(fileName))\n    {\n        // Write out the sender's address\n        writer.WriteLine("From: {0}", mail.From.Address);\n        \n        // Write out the recepient(s) addresses\n        foreach (MailAddress to in mail.To)\n            writer.WriteLine("To: {0}", to);\n\n        // Write Bcc Addresses if present.\n        if(mail.Bcc.Count > 0){\n            writer.Write("Bcc: ");\n            foreach (MailAddress bcc in mail.Bcc)\n                writer.Write(bcc + ";");\n            writer.WriteLine();\n        }\n\n        // Write Cc addresses if present.\n        if(mail.CC.Count > 0){\n            writer.Write("Cc: ");\n            foreach (MailAddress cc in mail.CC)\n                writer.Write(cc + ";");\n            writer.WriteLine();\n        }\n\n        // write the subject line\n        writer.WriteLine("Subject: {0}", mail.Subject);\n\n        // Write MIME-Version header.\n        writer.WriteLine("MIME-Version: 1.0");\n\n        if (mail.AlternateViews.Count > 0)\n        {\n            writer.WriteLine("Content-Type: multipart/alternative; boundary=\"{0}\"", Guid.NewGuid().ToString());\n            \n            foreach (AlternateView mailMessage in mail.AlternateViews)\n            {\n                // Define the alternate view for each content type included.\n                string contentType = mailMessage.ContentType.MediaType;\n                \n                writer.WriteLine();\n                writer.WriteLine("--{0}", Guid.NewGuid().ToString());\n                writer.WriteLine("Content-Type: {0}; charset=\"utf-8\"", contentType);\n                writer.WriteLine();\n\n                if (mail.IsBodyHtml && contentType.Equals("text/html", StringComparison.OrdinalIgnoreCase))\n                    writer.Write(HtmlToPlainText(mailMessage.ContentStream));\n                else\n                    writer.Write(StreamToString(mailMessage.ContentStream));\n            }\n\n            writer.WriteLine("--{0}--", Guid.NewGuid().ToString());\n        }\n        else // Plain text only email.\n        {\n            writer.WriteLine();\n\n            // Write body.\n            writer.Write(StreamToString(mail.BodyStream));\n        }\n    }\n\n    // Optionally, offer the MIME file for download to the user.\n    FileInfo file = new FileInfo(fileName);\n    Response.Clear();\n    Response.ContentType = "application/octet-stream";\n    Response.AddHeader("Content-Disposition", string.Format("attachment;filename={0}", file.Name));\n    Response.WriteFile(file.FullName);\n    Response.End();\n}\n\n// Helper method if you want to convert HTML content to plain text.\nprivate string HtmlToPlainText(Stream stream)\n{\n    // Implement your own conversion logic or use a library.\n    using (StreamReader reader = new StreamReader(stream))\n        return reader.ReadToEnd(); // Simple implementation without actually converting HTML to plain text\n}\n\n// This is a simple method to read the content from a Stream into a String.\nprivate string StreamToString(Stream stream)\n{\n    using (StreamReader reader = new StreamReader(stream))\n        return reader.ReadToEnd();\n}