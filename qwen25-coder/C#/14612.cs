using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic static class ListExtensions\n{\n    public static IList<T> SubList<T>(this IList<T> list, int startIndex, int endIndex)\n    {\n        if (startIndex < 0 || endIndex > list.Count || startIndex >= endIndex)\n        {\n            throw new ArgumentException("Invalid start or end index");\n        }\n\n        return list.Skip(startIndex).Take(endIndex - startIndex).ToList();\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        List<int> list = new List<int> { 1, 2, 3, 4, 5 };\n        int startIndex = 1;\n        int endIndex = 4;\n\n        // Using the custom SubList extension method\n        IList<int> subList = list.SubList(startIndex, endIndex);\n\n        Console.WriteLine(string.Join(", ", subList));\n    }\n}