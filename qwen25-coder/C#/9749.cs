using System.Security.Principal;\nusing System.Web;\nusing System.Web.Mvc;\nusing System.Web.Routing;\nusing Moq;\nusing NUnit.Framework;\n\n[TestFixture]\npublic class SecurityTests\n{\n    [Test]\n    public void TestUserAccess()\n    {\n        // Arrange\n        var mockHttpContext = new Mock<HttpContextBase>();\n        var mockIdentity = new Mock<IIdentity>();\n        var principal = new GenericPrincipal(mockIdentity.Object, new[] { "Admin", "User" });\n\n        mockIdentity.Setup(i => i.IsAuthenticated).Returns(true);\n        mockHttpContext.Setup(c => c.User).Returns(principal);\n\n        var requestContext = new RequestContext(mockHttpContext.Object, new RouteData());\n        var controllerContext = new ControllerContext(requestContext, new Mock<ControllerBase>().Object);\n\n        var yourController = new YourController();\n        yourController.ControllerContext = controllerContext;\n\n        // Act\n        var result = yourController.SomeAction() as ViewResult;\n\n        // Assert\n        Assert.IsNotNull(result);\n    }\n}\n\npublic class YourController : Controller\n{\n    [Authorize(Roles = "Admin, User")]\n    public ActionResult SomeAction()\n    {\n        return View();\n    }\n}