public class Car\n{\n    public string Make;\n    public string Model;\n    public int Year;\n}\n\npublic class Program\n{\n    private static bool ByYear(int yearToFind, Car car)\n    {\n        return car.Year == yearToFind;\n    }\n\n    private static Predicate<Car> CreateByYearPredicate(int year)\n    {\n        // Capture the 'year' variable in a closure and return a new delegate\n        return delegate(Car car) { return ByYear(year, car); };\n    }\n\n    public static void Main()\n    {\n        List<Car> carList = new List<Car>\n        {\n            new Car { Make = "Toyota", Model = "Corolla", Year = 1985 },\n            new Car { Make = "Ford", Model = "Mustang", Year = 2000 },\n            // ... add more cars\n        };\n\n        for (int x = 1980; x < 2000; x++)\n        {\n            Car myCar = carList.Find(CreateByYearPredicate(x));\n            if (myCar != null)\n            {\n                Console.WriteLine(myCar.Make + " " + myCar.Model);\n            }\n            else\n            {\n                Console.WriteLine("No car found for year: " + x);\n            }\n        }\n    }\n}