public class MyEntity\n{\n    public int Id { get; set; }\n    public string Data { get; set; }\n    public bool IsDeleted { get; set; } // Bit field for logical delete\n\n    // Other properties...\n}\n\n// Example usage in a service method to mark an entity as deleted\npublic void DeleteEntity(int entityId)\n{\n    using (var context = new MyDbContext())\n    {\n        var entity = context.MyEntities.Find(entityId);\n        if (entity != null)\n        {\n            entity.IsDeleted = true;\n            context.SaveChanges();\n        }\n    }\n}\n\n// In your query logic, always filter out deleted records\npublic List<MyEntity> GetActiveEntities()\n{\n    using (var context = new MyDbContext())\n    {\n        return context.MyEntities.Where(e => !e.IsDeleted).ToList();\n    }\n}