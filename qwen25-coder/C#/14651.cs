using System;\nusing System.Collections.Generic;\n\nclass Event\n{\n    public int Priority { get; set; }\n    public double Duration { get; set; }\n    public double EarliestTime { get; set; }\n}\n\npublic static class EventScheduler\n{\n    public static List<Event> Sort(List<Event> events)\n    {\n        events.Sort((x, y) => x.Priority.CompareTo(y.Priority)); // Sort by priority first\n\n        List<Event> schedule = new List<Event>();\n        double currentTime = 0.0;\n\n        foreach (var ev in events)\n        {\n            // Ensure the event is scheduled after its earliest time\n            if (currentTime < ev.EarliestTime)\n            {\n                currentTime = ev.EarliestTime;\n            }\n\n            // Insert the event into the schedule at the current time\n            schedule.Add(ev);\n            currentTime += ev.Duration;\n        }\n\n        return schedule;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        Event a = new Event { Priority = 1, Duration = 4.0, EarliestTime = 0.0 };\n        Event b = new Event { Priority = 2, Duration = 5.0, EarliestTime = 6.0 };\n        Event c = new Event { Priority = 3, Duration = 3.0, EarliestTime = 0.0 };\n        Event d = new Event { Priority = 4, Duration = 2.0, EarliestTime = 0.0 };\n\n        List<Event> results = EventScheduler.Sort(new List<Event> { a, b, c, d });\n\n        // Output the sorted events\n        foreach (var ev in results)\n        {\n            Console.WriteLine($"Event with Priority {ev.Priority} at time: {ev.EarliestTime}");\n        }\n\n        // assertions based on your example would go here.\n    }\n}