using System;\nusing System.DirectoryServices.AccountManagement;\n\npublic string GetCurrentUserADIdentity()\n{\n    // Create PrincipalContext connected to your domain.\n    using (PrincipalContext context = new PrincipalContext(ContextType.Domain))\n    {\n        // Find the user in your domain.\n        UserPrincipal user = UserPrincipal.Current; // This will attempt to find current user in domain.\n\n        if (user != null)\n        {\n            Console.WriteLine("Display Name: " + user.DisplayName);\n            return user.SamAccountName;\n        }\n        else\n        {\n            throw new Exception("User is not authenticated with the domain.");\n        }\n    }\n}\n\npublic void GetUserGroups(string userName)\n{\n    using (PrincipalContext ctx = new PrincipalContext(ContextType.Domain))\n    {\n        UserPrincipal user = UserPrincipal.FindByIdentity(ctx, userName);\n\n        if (user != null)\n        {\n            PrincipalSearchResult<Principal> groups = user.GetAuthorizationGroups();\n\n            foreach (var group in groups)\n            {\n                Console.WriteLine("Group: " + group.Name);\n            }\n        }\n    }\n}