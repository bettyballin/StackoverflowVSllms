using System;\nusing System.Data.SqlClient;\nusing Microsoft.SqlServer.Management.Common;\nusing Microsoft.SqlServer.Management.Smo;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string serverName = ReadInstanceNameFromConfig(); // Implement reading from config file\n        ServerConnection connection = new ServerConnection(serverName);\n        \n        try\n        {\n            var server = new Server(connection);\n\n            // Get default data directory\n            string defaultDataPath = server.Settings.DefaultFile;\n            Console.WriteLine($"Default Data Path: {defaultDataPath}");\n\n            if (string.IsNullOrWhiteSpace(defaultDataPath))\n            {\n                throw new Exception("Could not retrieve the default data path.");\n            }\n\n            // Find SQL Service Account using WMI or other methods\n            string sqlServiceAccount = GetSqlServerServiceAccount(serverName);\n            Console.WriteLine($"SQL Service Account: {sqlServiceAccount}");\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n\n    static string ReadInstanceNameFromConfig()\n    {\n        // Implement your actual config reading logic here\n        return "YourSqlServerInstanceName";\n    }\n\n    static string GetSqlServerServiceAccount(string serverName)\n    {\n        using (SqlConnection sqlConnection = new SqlConnection($"Server={serverName};Trusted_Connection=True;"))\n        {\n            sqlConnection.Open();\n            // Query to find the service account\n            var query = @"\n                SELECT servicename, serviceaccount \n                FROM sys.dm_server_registry \n                WHERE registry_key LIKE '%MSSQLServer%' AND value_name = 'ObjectName'";\n            using (SqlCommand command = new SqlCommand(query, sqlConnection))\n            {\n                using (SqlDataReader reader = command.ExecuteReader())\n                {\n                    if (reader.Read())\n                    {\n                        return reader["serviceaccount"].ToString();\n                    }\n                }\n            }\n        }\n        return string.Empty;\n    }\n}