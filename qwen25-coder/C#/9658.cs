using System.ComponentModel;\n\npublic partial class YourWindow : Window, INotifyPropertyChanged\n{\n    public YourWindow()\n    {\n        InitializeComponent();\n        base.DataContext = this;\n    }\n\n    private Visibility _actionsVisible;\n    public Visibility ActionsVisible\n    {\n        get { return _actionsVisible; }\n        set \n        { \n            if (_actionsVisible != value)\n            {\n                _actionsVisible = value;\n                OnPropertyChanged(nameof(ActionsVisible));\n            }\n        }\n    }\n\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    protected virtual void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n}