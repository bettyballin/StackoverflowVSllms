// Server side (Windows Service)\nusing System;\nusing System.ServiceModel.Channels;\nusing System.IO.Pipes;\n\npublic class NamedPipeServer : IDisposable {\n    private NamedPipeServerStream _server;\n\n    public NamedPipeServer(string pipeName) {\n        _server = new NamedPipeServerStream(pipeName, PipeDirection.InOut);\n    }\n\n    public void Start() {\n        _server.WaitForConnection();\n        using (var reader = new StreamReader(_server)) {\n            string msg = reader.ReadLine();\n            Console.WriteLine("Received from client: " + msg);\n\n            using (var writer = new StreamWriter(_server)) {\n                writer.WriteLine("Hello, Client!");\n                writer.Flush();\n            }\n        }\n    }\n\n    public void Dispose() {\n        _server.Dispose();\n    }\n}\n\n// Client side (Desktop application)\nusing System;\nusing System.IO.Pipes;\n\npublic class NamedPipeClient : IDisposable {\n    private NamedPipeClientStream _client;\n\n    public NamedPipeClient(string pipeName) {\n        _client = new NamedPipeClientStream(".", pipeName, PipeDirection.InOut);\n    }\n\n    public void SendAndReceive() {\n        _client.Connect();\n\n        using (var writer = new StreamWriter(_client)) {\n            writer.WriteLine("Hello Server!");\n            writer.Flush();\n        }\n\n        using (var reader = new StreamReader(_client)) {\n            string resp = reader.ReadLine();\n            Console.WriteLine("Received from server: " + resp);\n        }\n    }\n\n    public void Dispose() {\n        _client.Dispose();\n    }\n}