using System;\nusing System.IO;\nusing System.Net.Sockets;\nusing System.Text;\n\npublic class ChunkedResponseReader\n{\n    private readonly NetworkStream _networkStream;\n    private readonly StreamReader _reader;\n\n    public ChunkedResponseReader(TcpClient client)\n    {\n        _networkStream = client.GetStream();\n        _reader = new StreamReader(_networkStream, Encoding.ASCII);\n    }\n\n    public string ReadChunkedResponse()\n    {\n        var responseBody = new StringBuilder();\n\n        // Read the chunk size line\n        string line;\n        while ((line = _reader.ReadLine()) != null)\n        {\n            if (string.IsNullOrEmpty(line))\n                break; // End of headers\n        }\n\n        while ((line = _reader.ReadLine()) != null)\n        {\n            if (line.Length == 0) continue;\n\n            int chunkSize = Convert.ToInt32(line, 16); // Chunk size in hexadecimal\n\n            if (chunkSize > 0)\n            {\n                char[] buffer = new char[chunkSize];\n                int bytesRead = _reader.Read(buffer, 0, chunkSize);\n                responseBody.Append(buffer, 0, bytesRead);\n\n                // Discard the trailing CRLF after each chunk\n                _reader.ReadLine();\n            }\n            else if (chunkSize == 0)\n            {\n                break; // End of chunks\n            }\n        }\n\n        return responseBody.ToString();\n    }\n}