public static void Example2DArrayUsage()\n{\n    // Sample data initialization.\n    byte[,] input2DData = new byte[10, 1024]; // Populate your input buffer here.\n    int rowCount = input2DData.GetLength(0);\n    int colCount = input2DData.GetLength(1);\n    \n    BIG_INPUT_STRC inputParams;\n  \n    try\n    {\n        // Flatten the 2D array into a 1D array.\n        byte[] flattenedData = new byte[rowCount * colCount];\n        for (int i = 0; i < rowCount; ++i)\n            Buffer.BlockCopy(input2DData, i * colCount, flattenedData, i * colCount, colCount);\n\n        // Allocate memory.\n        inputParams.bufferPointer = Marshal.AllocHGlobal(flattenedData.Length);\n        Marshal.Copy(flattenedData, 0, inputParams.bufferPointer, flattenedData.Length);\n\n        // Call the unmanaged function.\n        ProcessChunk(IntPtr.Zero, ref inputParams, out BIG_OUTPUT_STRC outputParams);\n\n        // Optionally read from outputParams & reshape back to 2D as needed.\n    }\n    finally\n    {\n        // Free allocated memory.\n        if (inputParams.bufferPointer != IntPtr.Zero)\n        {\n            Marshal.FreeHGlobal(inputParams.bufferPointer);\n            inputParams.bufferPointer = IntPtr.Zero;\n        }\n    }\n}