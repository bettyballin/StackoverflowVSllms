using FluentNHibernate.Mapping;\n\npublic class DogMap : SubclassMap<Dog>\n{\n    public DogMap()\n    {\n        DiscriminatorValue("Dog");\n        // Map dog-specific properties if any\n    }\n}\n\npublic class CatMap : SubclassMap<Cat>\n{\n    public CatMap()\n    {\n        DiscriminatorValue("Cat");\n        // Map cat-specific properties if any\n    }\n}\n\npublic class AnimalOwnerMap : ClassMap<AnimalOwner>\n{\n    public AnimalOwnerMap()\n    {\n        Id(x => x.Id);\n        References(x => x.OwnedAnimal)\n            .Not.Nullable();\n    }\n}