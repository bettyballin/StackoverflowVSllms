using System;\nusing System.Collections.Generic;\n\npublic static class CollectionAlgorithms\n{\n    public static void Sort<T>(this IList<T> list) where T : IComparable<T>\n    {\n        if (list == null)\n            throw new ArgumentNullException(nameof(list));\n\n        // Convert to array, sort it, then copy back to the list\n        var array = new T[list.Count];\n        list.CopyTo(array, 0);\n        Array.Sort(array);\n\n        for (int i = 0; i < array.Length; i++)\n        {\n            list[i] = array[i];\n        }\n    }\n\n    public static int IndexOf<T>(this IList<T> list, T item) where T : IComparable<T>\n    {\n        if (list == null)\n            throw new ArgumentNullException(nameof(list));\n\n        for (int index = 0; index < list.Count; index++)\n        {\n            if (Equals(list[index], item))\n                return index;\n        }\n        return -1;\n    }\n}