public class CsvBatchPrinter : BaseBatchPrinter\n{\n    private static readonly object fileLock = new object();\n\n    public CsvBatchPrinter() : base(".csv")\n    {\n        RemoveDiatrics = false;\n    }\n\n    protected override void PrintDocuments(System.Collections.Generic.List<XmlDocument> documents, string xsltFileName, string directory, string tempImageDirectory)\n    {\n        base.PrintDocuments(documents, xsltFileName, directory, tempImageDirectory);\n\n        foreach (var file in new DirectoryInfo(tempImageDirectory).GetFiles())\n        {\n            var destination = directory + file.Name;\n            if (!File.Exists(destination))\n                file.CopyTo(destination);\n        }\n    }\n\n    protected override void PrintDocument(XmlDocument document, string xsltFileName, string directory, string tempImageDirectory)\n    {\n        StringUtils.EscapeQuotesInXmlNode(document);\n        if (RemoveDiatrics)\n        {\n            var docXml = StringUtils.RemoveDiatrics(document.OuterXml);\n            document = new XmlDocument();\n            document.LoadXml(docXml);\n        }\n\n        lock (fileLock) // Lock access to ensure only one thread writes at a time\n        {\n            using (var writer = new StreamWriter(string.Format("{0}{1}{2}", directory, "batch", FileExtension), true, Encoding.ASCII))\n            {\n                Transform(document, xsltFileName, writer);\n            }\n        }\n    }\n\n    public bool RemoveDiatrics { get; set; }\n}