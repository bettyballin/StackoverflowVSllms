using System;\nusing System.Drawing.Text;\nusing System.IO;\nusing stdole;\n\nclass FontLoader\n{\n    [System.Runtime.InteropServices.DllImport("gdi32.dll")]\n    private static extern int AddFontResourceEx(string lpszFileName, uint fl, IntPtr pdv);\n\n    public static IFontDisp LoadCustomFont(string fontFilePath)\n    {\n        if (!File.Exists(fontFilePath))\n            throw new FileNotFoundException("The specified font file does not exist.", fontFilePath);\n\n        // Add the font resource\n        var result = AddFontResourceEx(fontFilePath, 0, IntPtr.Zero);\n        if (result == 0)\n            throw new Exception("Failed to add font resource.");\n\n        // Create a PrivateFontCollection and load the font\n        PrivateFontCollection pfc = new PrivateFontCollection();\n        pfc.AddFontFile(fontFilePath);\n\n        // Get the font family from the collection\n        FontFamily fontFamily = pfc.Families[0];\n\n        // Create a GDI+ Font object\n        System.Drawing.Font gdiFont = new System.Drawing.Font(fontFamily, 12); // Replace 12 with your desired size\n\n        // Convert to IFontDisp (COM)\n        return COMFontConverter.ConvertToIFontDisp(gdiFont);\n    }\n}\n\n// Helper class to convert GDI+ Font to stdole.IFontDisp\nstatic class COMFontConverter\n{\n    public static IFontDisp ConvertToIFontDisp(System.Drawing.Font gdiFont)\n    {\n        var iFont = new StdFont();\n        iFont.Name = gdiFont.FontFamily.Name;\n        iFont.Size = (float)Math.Round(gdiFont.Size, 2);\n        iFont.Bold = gdiFont.Bold;\n        iFont.Italic = gdiFont.Italic;\n        iFont.Underline = gdiFont.Underline;\n        iFont.Strikethrough = gdiFont.Strikeout;\n        return (IFontDisp)iFont;\n    }\n}