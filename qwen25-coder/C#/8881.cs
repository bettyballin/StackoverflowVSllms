using System;\nusing System.Collections.Generic;\n\npublic class RangeSearcher\n{\n    private List<(int start, int end)> _ranges;\n\n    public RangeSearcher(List<string> rangeStrings)\n    {\n        _ranges = new List<(int start, int end)>();\n        foreach (var rangeString in rangeStrings)\n        {\n            var parts = rangeString.Split(',');\n            _ranges.Add((start: int.Parse(parts[0]), end: int.Parse(parts[1])));\n        }\n        // Ensure the ranges are sorted by start value\n        _ranges.Sort();\n    }\n\n    public bool IsInRange(int value)\n    {\n        int index = BinarySearch(value);\n        if (index >= 0 && value <= _ranges[index].end)\n        {\n            return true;\n        }\n        return false;\n    }\n\n    private int BinarySearch(int value)\n    {\n        int low = 0;\n        int high = _ranges.Count - 1;\n\n        while (low <= high)\n        {\n            int mid = low + (high - low) / 2;\n            if (_ranges[mid].start > value)\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n\n        // At the end, high is the largest index with start <= value\n        return high;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var rangeStrings = new List<string> { "1000, 20400", "22200, 24444" };\n        var searcher = new RangeSearcher(rangeStrings);\n\n        Console.WriteLine(searcher.IsInRange(5000)); // True\n        Console.WriteLine(searcher.IsInRange(23000)); // True\n        Console.WriteLine(searcher.IsInRange(100)); // False\n        Console.WriteLine(searcher.IsInRange(25000)); // False\n    }\n}