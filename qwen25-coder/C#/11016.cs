using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class SecurePasswordStorage\n{\n    // Encrypts the password and returns it as a base64 encoded string\n    public static string EncryptPassword(string plainText)\n    {\n        DataProtectionScope scope = DataProtectionScope.CurrentUser; // or DataProtectionScope.LocalMachine if needed\n        byte[] encrypted = ProtectedData.Protect(Encoding.UTF8.GetBytes(plainText), null, scope);\n        return Convert.ToBase64String(encrypted);\n    }\n\n    // Decrypts the base64 encoded encrypted password and returns the plain text\n    public static string DecryptPassword(string cipherText)\n    {\n        DataProtectionScope scope = DataProtectionScope.CurrentUser; // or DataProtectionScope.LocalMachine if needed\n        byte[] decrypted = ProtectedData.Unprotect(Convert.FromBase64String(cipherText), null, scope);\n        return Encoding.UTF8.GetString(decrypted);\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        string password = "YourSuperSecretPassword";\n        \n        // Encrypt and store the password securely\n        string encryptedPassword = SecurePasswordStorage.EncryptPassword(password);\n        Console.WriteLine("Encrypted: " + encryptedPassword);\n\n        // Retrieve, decrypt, and use the password at runtime\n        string decryptedPassword = SecurePasswordStorage.DecryptPassword(encryptedPassword);\n        Console.WriteLine("Decrypted: " + decryptedPassword);\n    }\n}