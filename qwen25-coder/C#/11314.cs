using System.IO;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing iText.Kernel.Pdf;\nusing iText.Layout;\nusing iText.Layout.Element;\n\nprotected void ExportToPdf(object sender, EventArgs e)\n{\n    using (var mem = new MemoryStream())\n    {\n        var writer = new PdfWriter(mem);\n        var pdfDoc = new PdfDocument(writer);\n        var document = new Document(pdfDoc);\n\n        // Add table to PDF\n        if (GridView1.Rows.Count > 0)\n        {\n            // Create a Table instance with the number of columns in GridView\n            int columnCount = GridView1.HeaderRow.Cells.Count;\n            iText.Layout.Element.Table table = new iText.Layout.Element.Table(UnitValue.CreatePercentArray(columnCount));\n\n            for (int cellHeader = 0; cellHeader < columnCount; cellHeader++)\n            {\n                // Add Headers to the PDF Table\n                Cell cH = new Cell();\n                cH.Add(new Paragraph(GridView1.HeaderRow.Cells[cellHeader].Text));\n                table.AddCell(cH);\n            }\n\n            foreach (GridViewRow row in GridView1.Rows)\n            {\n                for (int cellNum = 0; cellNum < columnCount; cellNum++)\n                {\n                    // Add Data Rows to the PDF Table\n                    Cell cD = new Cell();\n                    cD.Add(new Paragraph(row.Cells[cellNum].Text));\n                    table.AddCell(cD);\n                }\n            }\n\n            document.Add(table);\n        }\n\n        document.Close();\n\n        Response.ContentType = "application/pdf";\n        Response.AddHeader("content-disposition", "attachment;filename=Grid.pdf");\n        Response.BinaryWrite(mem.ToArray());\n    }\n}