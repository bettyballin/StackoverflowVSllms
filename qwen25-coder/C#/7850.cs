using System;\nusing System.Text;\n\nnamespace FastAsciiBytesToString\n{\n    static class StringEx\n    {\n        public static string AsciiBytesToString(this byte[] buffer, int offset, int maxLength)\n        {\n            if (buffer == null || buffer.Length == 0)\n                return string.Empty;\n\n            int length = Math.Min(maxLength, buffer.Length - offset);\n            for (int i = 0; i < length; i++)\n            {\n                if (buffer[offset + i] == 0) // Null terminator found\n                    return Encoding.ASCII.GetString(buffer, offset, i);\n            }\n            \n            // No null terminator within maxLength\n            return Encoding.ASCII.GetString(buffer, offset, length);\n        }\n\n        public static string UnsafeAsciiBytesToString(this byte[] buffer, int offset)\n        {\n            string result = null;\n\n            unsafe\n            {\n                fixed (byte* pAscii = &buffer[offset])\n                {\n                    for (int i = 0; ; i++)\n                    {\n                        if (*(pAscii + i) == 0) // Null terminator found\n                            return new string((sbyte*)pAscii, 0, i);\n                    }\n                }\n            }\n\n            // If no null terminator is found in the safe region, fallback to full length (though risky)\n            return Encoding.ASCII.GetString(buffer, offset, buffer.Length - offset);\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            byte[] asciiBytes = new byte[]{ 0, 0, 0, (byte)'a', (byte)'b', (byte)'c', 0, 0, 0 };\n\n            string result = asciiBytes.AsciiBytesToString(3, 6);\n\n            Console.WriteLine("AsciiBytesToString Result: \"{0}\"", result);\n\n            result = asciiBytes.UnsafeAsciiBytesToString(3);\n\n            Console.WriteLine("UnsafeAsciiBytesToString Result: \"{0}\"", result);\n\n            // Non-null terminated test.\n            asciiBytes = new byte[]{ 0, 0, 0, (byte)'a', (byte)'b', (byte)'c' };\n\n            result = asciiBytes.UnsafeAsciiBytesToString(3);\n\n            Console.WriteLine("UnsafeAsciiBytesToString Result: \"{0}\"", result);\n\n            Console.ReadLine();\n        }\n    }\n}