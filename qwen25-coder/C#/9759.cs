[ServiceContract]\npublic interface ICustomerService\n{\n    [OperationContract, WebGet(UriTemplate = "/customers/?name={name}")]\n    Message GetCustomerByName(string name);\n}\n\npublic class CustomerService : ICustomerService\n{\n    public Message GetCustomerByName(string name)\n    {\n        // Logic to find customer ID by name\n        int customerId = FindCustomerIdByName(name);\n\n        if (customerId > 0)\n        {\n            var newUri = new Uri("http://server/customers/" + customerId);\n            return WebOperationContext.Current.CreateRedirectResponse(newUri, true /* permanent redirect */);\n        }\n\n        throw new WebFaultException(HttpStatusCode.NotFound);\n    }\n\n    private int FindCustomerIdByName(string name)\n    {\n        // Implement your logic to find customer ID by name\n        // For demonstration purposes, let's assume we always find the customer with ID 324\n        return "John".Equals(name, StringComparison.OrdinalIgnoreCase) ? 324 : 0;\n    }\n}