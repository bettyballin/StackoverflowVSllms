using System;\nusing System.Net.Sockets;\nusing System.Text.RegularExpressions;\n\npublic class EmailValidator\n{\n    public static bool ValidateEmail(string email)\n    {\n        // Basic syntax check first\n        if (!Regex.IsMatch(email, @"^[^@\s]+@[^@\s]+\.[^@\s]+$"))\n            return false;\n        \n        var domain = email.Split('@')[1];\n        try\n        {\n            using (var client = new TcpClient(domain, 25))\n            {\n                // SMTP conversation to check if the user exists\n                // This is a simplified example and does not cover all edge cases or best practices\n                var reader = new System.IO.StreamReader(client.GetStream());\n                var writer = new System.IO.StreamWriter(client.GetStream());\n                \n                string response = ReadResponse(reader);\n                writer.WriteLine($"HELO {domain}");\n                writer.Flush();\n                response = ReadResponse(reader);\n\n                // Send MAIL FROM command\n                writer.WriteLine("MAIL FROM: <test@example.com>");\n                writer.Flush();\n                response = ReadResponse(reader);\n\n                // Send RCPT TO command\n                writer.WriteLine($"RCPT TO: <{email}>");\n                writer.Flush();\n                response = ReadResponse(reader);\n                \n                if (response.StartsWith("250", StringComparison.Ordinal))\n                    return true;  // accepted\n    \n                return false;\n\n            }\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    }\n\n    private static string ReadResponse(System.IO.StreamReader reader)\n    {\n        var response = reader.ReadLine();\n        while (reader.Peek() >= 0 && char.IsDigit((char)reader.Peek()))\n            response += reader.ReadLine();\n\n        return response.TrimEnd();\n    }\n}