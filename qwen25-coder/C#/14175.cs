using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\nnamespace GridTest\n{\n    public partial class Form1 : Form\n    {\n        private Point _snapPosition;\n\n        public Form1()\n        {\n            InitializeComponent();\n            splitContainer1.Panel2.Invalidate();\n        }\n\n        private void splitContainer1_Panel2_Paint(object sender, PaintEventArgs e)\n        {\n            DrawGrid(e.Graphics);\n            DrawSnapPoint(e.Graphics, _snapPosition);\n        }\n\n        private void DrawGrid(Graphics g)\n        {\n            const int gridSize = 20;\n            for (int x = 0; x < splitContainer1.Panel2.ClientSize.Width; x += gridSize)\n            {\n                g.DrawLine(Pens.Black, new Point(x, 0), new Point(x, splitContainer1.Panel2.ClientSize.Height));\n            }\n            for (int y = 0; y < splitContainer1.Panel2.ClientSize.Height; y += gridSize)\n            {\n                g.DrawLine(Pens.Black, new Point(0, y), new Point(splitContainer1.Panel2.ClientSize.Width, y));\n            }\n        }\n\n        private void DrawSnapPoint(Graphics g, Point position)\n        {\n            const int snapRadius = 4;\n            if (position != Point.Empty)\n            {\n                g.FillEllipse(Brushes.Red, position.X - snapRadius, position.Y - snapRadius, 2 * snapRadius, 2 * snapRadius);\n            }\n        }\n\n        private void splitContainer1_Panel2_MouseMove(object sender, MouseEventArgs e)\n        {\n            _snapPosition = RoundToNearest(20, e.Location);\n            splitContainer1.Panel2.Invalidate();\n        }\n\n        private Point RoundToNearest(int nearestRoundValue, Point currentPoint)\n        {\n            int newX = (int)Math.Round((double)currentPoint.X / nearestRoundValue) * nearestRoundValue;\n            int newY = (int)Math.Round((double)currentPoint.Y / nearestRoundValue) * nearestRoundValue;\n            return new Point(newX, newY);\n        }\n    }\n}