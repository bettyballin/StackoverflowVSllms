using (var session = sessionFactory.OpenSession())\n{\n    using (var transaction = session.BeginTransaction())\n    {\n        var criteria = session.CreateCriteria<Account>()\n            .Add(Restrictions.Lt("amount", 1000))\n            .SetProjection(Projections.ProjectionList()\n                .Add(Projections.RowCount()));\n\n        int? rowCountBeforeDelete = (int?)criteria.List<object>().Cast<int?>().FirstOrDefault();\n\n        var delete = session.CreateCriteria<Account>()\n            .Add(Restrictions.Lt("amount", 1000))\n            .GetExecutableIterator()\n            .ToList(); // This will execute the query but not load entities into memory\n\n        int rowCountAfterDelete = session.QueryOver<Account>()\n            .Where(x => x.amount < 1000)\n            .RowCount();\n\n        int deletedRows = (rowCountBeforeDelete ?? 0) - rowCountAfterDelete;\n        \n        Console.WriteLine($"{deletedRows} rows were deleted.");\n\n        transaction.Commit();\n    }\n}