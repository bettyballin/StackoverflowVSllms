using System;\nusing System.Net.Sockets;\nusing System.Text;\n\nclass TelnetClient {\n    private TcpClient _client;\n    private NetworkStream _stream;\n\n    public void Connect(string hostname, int port) {\n        _client = new TcpClient(hostname, port);\n        _stream = _client.GetStream();\n    }\n\n    public string ReadUntilPrompt(string prompt) {\n        StringBuilder sb = new StringBuilder();\n        while (true) {\n            byte[] data = new byte[1024];\n            int bytesReceived = _stream.Read(data, 0, data.Length);\n\n            if (bytesReceived == 0)\n                break;\n\n            string inputFromDevice = Encoding.ASCII.GetString(data, 0, bytesReceived);\n            sb.Append(inputFromDevice);\n\n            if (sb.ToString().IndexOf(prompt) != -1) {\n                break;\n            }\n        }\n\n        return sb.ToString();\n    }\n\n    public void Write(string command) {\n        byte[] dataToSend = Encoding.ASCII.GetBytes(command + "\r\n");\n        _stream.Write(dataToSend, 0, dataToSend.Length);\n    }\n\n    public void Disconnect() {\n        _client.Close();\n    }\n}\n\n// Example usage:\nclass Program {\n    static void Main() {\n        TelnetClient client = new TelnetClient();\n        try {\n            client.Connect("192.168.1.100", 23);\n            Console.WriteLine(client.ReadUntilPrompt("login: ")); // Expecting login prompt\n        } catch (Exception e) {\n            Console.WriteLine("Error: {0}", e.Message);\n        } finally {\n            client.Disconnect();\n        }\n    }\n}