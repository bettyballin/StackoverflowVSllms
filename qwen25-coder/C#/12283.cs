using System;\nusing System.IO;\nusing System.Reflection;\n\npublic class ComRegistrar {\n    [DllImport("kernel32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\n    public static extern IntPtr LoadLibrary(string lpszLibFilename);\n\n    [DllImport("ole32.dll", CallingConvention = CallingConvention.StdCall)]\n    public static extern int DllRegisterServer(IntPtr hModule);\n\n    public void RegisterLocalComDll() {\n        string dllName = "YourNamespace.OTAClient.dll"; // Full name, including namespace\n        string tempPath = Path.Combine(Path.GetTempPath(), "OTAClient.dll");\n        \n        using (Stream stream = Assembly.GetExecutingAssembly().GetManifestResourceStream(dllName)) {\n            if (stream == null) throw new FileNotFoundException("Could not find embedded resource", dllName);\n            \n            using (FileStream fileStream = File.Create(tempPath)) {\n                CopyStream(stream, fileStream);\n            }\n        }\n\n        IntPtr hModule = LoadLibrary(tempPath);\n        if (hModule != IntPtr.Zero) {\n            int result = DllRegisterServer(hModule);\n            if (result != 0) throw new Exception($"DllRegisterServer failed with error code: {result}");\n        } else {\n            throw new Win32Exception(Marshal.GetLastWin32Error());\n        }\n    }\n\n    private void CopyStream(Stream source, Stream destination) {\n        byte[] buffer = new byte[8192];\n        int bytesRead;\n        while ((bytesRead = source.Read(buffer, 0, buffer.Length)) > 0) {\n            destination.Write(buffer, 0, bytesRead);\n        }\n    }\n}