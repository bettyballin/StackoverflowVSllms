public class Widget\n{\n    public string FilePath { get; set; }\n    // other properties and methods\n}\n\npublic class WidgetManager\n{\n    private Dictionary<string, Widget> _widgetsByPath = new Dictionary<string, Widget>();\n\n    public void AddWidget(Widget widget)\n    {\n        if (!_widgetsByPath.ContainsKey(widget.FilePath))\n        {\n            _widgetsByPath[widget.FilePath] = widget;\n        }\n        else\n        {\n            throw new ArgumentException("A widget with the same file path already exists.");\n        }\n    }\n\n    public Widget GetWidgetByFilePath(string filePath)\n    {\n        _widgetsByPath.TryGetValue(filePath, out var widget);\n        return widget; // returns null if not found\n    }\n\n    public void UpdateWidgetFilePath(Widget widget, string newFilePath)\n    {\n        if (_widgetsByPath.Remove(widget.FilePath))\n        {\n            widget.FilePath = newFilePath;\n            AddWidget(widget); // Adds it with the new path\n        }\n        else\n        {\n            throw new ArgumentException("The widget is not managed by this manager.");\n        }\n    }\n}