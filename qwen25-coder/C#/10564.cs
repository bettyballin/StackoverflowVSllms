using System;\nusing System.Windows.Forms;\n\nclass Program : ApplicationContext {\n    [STAThread]\n    static void Main() {\n        Application.Run(new TrayApplicationContext());\n    }\n}\n\npublic class TrayApplicationContext : ApplicationContext {\n    private NotifyIcon trayIcon;\n\n    public TrayApplicationContext() {\n        trayIcon = new NotifyIcon() {\n            Icon = new System.Drawing.Icon("icon.ico"), // Ensure you have an icon file\n            Visible = true,\n            Text = "My Application"\n        };\n\n        trayIcon.Click += (sender, e) => MessageBox.Show("Tray Icon Clicked!");\n        trayIcon.ContextMenuStrip = new ContextMenuStrip();\n        trayIcon.ContextMenuStrip.Items.Add("Exit", null, Exit);\n\n        this.FormClosing += OnFormClosing;\n    }\n\n    private void Exit(object sender, EventArgs e) {\n        trayIcon.Visible = false;\n        Application.Exit();\n    }\n\n    private void OnFormClosing(object sender, FormClosingEventArgs e) {\n        e.Cancel = true; // Cancel the form closing event\n        ((Form)sender).WindowState = FormWindowState.Minimized; // Minimize instead of closing\n\n        // Optionally hide the main window from taskbar\n        ((Form)sender).Hide();\n    }\n}