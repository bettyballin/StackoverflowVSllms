// Define the contract interface without any WCF-specific attributes\npublic interface IFavoriteMovieService\n{\n    MyFavoriteMovie GetItem();\n}\n\n// Implement the core functionality in a separate class/library\npublic class FavoriteMovieCore : IFavoriteMovieService\n{\n    private readonly MyFavoriteMovie _item;\n\n    public FavoriteMovieCore(MyFavoriteMovie item)\n    {\n        _item = item;\n    }\n\n    public MyFavoriteMovie GetItem()\n    {\n        if (_item == null)\n            throw new InvalidOperationException("Movie not found.");\n        return _item;\n    }\n}\n\n// Implement the service layer with WCF-specific attributes\n[ServiceContract]\npublic interface IFavoriteMovieWebService : IFavoriteMovieService\n{\n    // Additional web-specific operations if any\n    [OperationContract]\n    [WebGet(ResponseFormat = WebMessageFormat.Json)]\n    MyFavoriteMovie GetItem();\n}\n\npublic class FavoriteMovieWebService : IFavoriteMovieWebService\n{\n    private readonly IFavoriteMovieService _coreService;\n\n    public FavoriteMovieWebService(IFavoriteMovieService coreService)\n    {\n        _coreService = coreService;\n    }\n\n    public MyFavoriteMovie GetItem()\n    {\n        try\n        {\n            return _coreService.GetItem();\n        }\n        catch (InvalidOperationException ex)\n        {\n            throw new WebFaultException<string>("Not Found", HttpStatusCode.NotFound);\n        }\n    }\n}