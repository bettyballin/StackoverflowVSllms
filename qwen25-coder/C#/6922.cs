using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    private static readonly string Key = Environment.GetEnvironmentVariable("ENCRYPTION_KEY");\n\n    static void Main()\n    {\n        if (string.IsNullOrEmpty(Key))\n        {\n            Console.WriteLine("Encryption key is not set.");\n            return;\n        }\n\n        var originalPassword = "mySecurePassword";\n        var encryptedData = Encrypt(originalPassword);\n        File.WriteAllText("credentials.xml", encryptedData);\n\n        var decryptedData = Decrypt(encryptedData);\n        Console.WriteLine($"Decrypted password: {decryptedData}");\n    }\n\n    public static string Encrypt(string clearText)\n    {\n        using (var cryptoProvider = new DESCryptoServiceProvider())\n        {\n            cryptoProvider.Key = Encoding.UTF8.GetBytes(Key.PadRight(8, '0'));\n            cryptoProvider.IV = Encoding.UTF8.GetBytes(Key.PadLeft(8, '7').Substring(0, 8));\n\n            ICryptoTransform encryptor = cryptoProvider.CreateEncryptor(cryptoProvider.Key, cryptoProvider.IV);\n            using (var ms = new MemoryStream())\n            {\n                using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))\n                {\n                    using (var sw = new StreamWriter(cs))\n                    {\n                        sw.Write(clearText);\n                    }\n                }\n                return Convert.ToBase64String(ms.ToArray());\n            }\n        }\n    }\n\n    public static string Decrypt(string cipherText)\n    {\n        using (var cryptoProvider = new DESCryptoServiceProvider())\n        {\n            cryptoProvider.Key = Encoding.UTF8.GetBytes(Key.PadRight(8, '0'));\n            cryptoProvider.IV = Encoding.UTF8.GetBytes(Key.PadLeft(8, '7').Substring(0, 8));\n\n            ICryptoTransform decryptor = cryptoProvider.CreateDecryptor(cryptoProvider.Key, cryptoProvider.IV);\n            using (var ms = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read))\n                {\n                    using (var sr = new StreamReader(cs))\n                    {\n                        return sr.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}