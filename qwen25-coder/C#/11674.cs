// Initialize the SslStream with callbacks\nsecureStream = new SslStream(stream, true, tlsRemoteCallback, tlsLocalCallback);\n\n// Define certificate selection logic in your LocalCertificateSelectionCallback\nX509Certificate tlsLocalCallback(\n    object sender,\n    string targetHost,\n    X509CertificateCollection localCertificates,\n    X509Certificate remoteCertificate,\n    string[] acceptableIssuers)\n{\n    // Implement your logic to select the appropriate certificate\n    return ...; // Return the selected X509Certificate\n}\n\n// When calling AuthenticateAsServer, pass a collection of certificates instead of a single one\nsecureStream.AuthenticateAsServer(\n    serverCertificates: new X509Certificate2Collection { /* add certificates here */ },\n    clientCertificateRequired: false,\n    enabledSslProtocols: SslProtocols.Tls13 | SslProtocols.Tls12,\n    checkCertificateRevocationList: true);