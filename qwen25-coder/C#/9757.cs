using System;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\nusing System.ServiceModel.Dispatcher;\n\npublic class MessageLogger : IClientMessageInspector\n{\n    public void AfterReceiveReply(ref Message reply, object correlationState)\n    {\n        // Log the response message if needed\n        Console.WriteLine(reply);\n    }\n\n    public object BeforeSendRequest(ref Message request, IClientChannel channel)\n    {\n        // Log the outgoing request\n        var buffer = request.CreateBufferedCopy(Int32.MaxValue);\n        request = buffer.CreateMessage();\n        Console.WriteLine(buffer.CreateMessage());\n        return buffer;\n    }\n}\n\npublic class MessageLoggerBehavior : IEndpointBehavior\n{\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters) { }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n    {\n        clientRuntime.MessageInspectors.Add(new MessageLogger());\n    }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher) { }\n\n    public void Validate(ServiceEndpoint endpoint) { }\n}\n\n// Usage in your ServiceClient\nvar binding = new BasicHttpBinding(); // or any other binding you use\nvar address = new EndpointAddress("yourWebserviceUrl");\nvar client = new YourServiceClient(binding, address);\nclient.Endpoint.EndpointBehaviors.Add(new MessageLoggerBehavior());