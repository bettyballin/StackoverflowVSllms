using System;\nusing System.Transactions;\nusing System.Data.SqlClient;\nusing System.Diagnostics;\n\nclass Program\n{\n    static void Main()\n    {\n        bool success = false;\n\n        // Define the connection strings for both databases (adjust as necessary)\n        string connectionString1 = "Server=instance1;Database=db1;Integrated Security=True;";\n        string connectionString2 = "Server=instance2;Database=db2;Integrated Security=True;";\n\n        using (TransactionScope scope = new TransactionScope())\n        {\n            try\n            {\n                // Perform the database operation in db1\n                using (SqlConnection conn1 = new SqlConnection(connectionString1))\n                {\n                    conn1.Open();\n                    SqlCommand cmd1 = new SqlCommand("INSERT INTO Users(...) VALUES(...)", conn1);\n                    cmd1.ExecuteNonQuery();\n                }\n\n                // Run the external command-line utility to create user in third-party app in db2\n                ProcessStartInfo psi = new ProcessStartInfo\n                {\n                    FileName = "path_to_your_utility.exe",\n                    Arguments = "user_creation_params",\n                    UseShellExecute = false,\n                    RedirectStandardOutput = true,\n                    CreateNoWindow = true\n                };\n\n                using (Process process = Process.Start(psi))\n                {\n                    string output = process.StandardOutput.ReadToEnd();\n                    process.WaitForExit();\n\n                    if (process.ExitCode != 0)\n                    {\n                        throw new Exception("External utility failed: " + output);\n                    }\n                }\n\n                // If we get here, both operations succeeded, so complete the transaction\n                success = true;\n                scope.Complete();\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine("Transaction failed. Manual rollback might be required: " + ex.Message);\n                // Attempt to manually cleanup if necessary\n            }\n        }\n\n        if (!success)\n        {\n            // Optionally, perform manual rollback logic here for any database changes that need undoing.\n            Console.WriteLine("Manual transaction roll back attempted.");\n            \n            using (SqlConnection conn2 = new SqlConnection(connectionString2))\n            {\n                conn2.Open();\n                SqlCommand cmdRollback = new SqlCommand("DELETE FROM Users WHERE ...", conn2);\n                cmdRollback.ExecuteNonQuery();\n            }\n        }\n    }\n}