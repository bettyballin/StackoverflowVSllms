// Program.cs\n   using System;\n   using System.Threading.Tasks;\n   using SuperSocket;\n\n   public class EchoPackageHandler : IPackageHandler<StringPackageInfo>\n   {\n       public async ValueTask HandleSessionAsync(AppSession session, StringPackageInfo package)\n       {\n           await session.SendAsync(package.Body);\n       }\n   }\n\n   public class Startup\n   {\n       public void ConfigureServices(IServiceCollection services)\n       {\n           services.AddSuperSocket(hostOptions =>\n           {\n               hostOptions.Name = "Echo Server";\n               hostOptions.NoDelay = true;\n           })\n           .UsePackageHandler(new LinePipelineFilter())\n           .UseCommand(() => new EchoCommand());\n       }\n\n       public void Configure(IServerHostBuilder server)\n       {\n           server.UseSession<PackageHandlingAppSession>();\n       }\n   }\n\n   class Program\n   {\n       static async Task Main(string[] args)\n       {\n           var host = SuperSocketHostBuilder.Create(args, true)\n               .UseStartup<Startup>()\n               .Build();\n\n           await host.RunAsync();\n       }\n   }