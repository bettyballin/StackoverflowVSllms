using System;\nusing System.Data;\nusing System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = "your_connection_string_here";\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlDataAdapter adapter = new SqlDataAdapter("SELECT * FROM YourTable", connection);\n            \n            SqlCommandBuilder builder = new SqlCommandBuilder(adapter);\n\n            // Modify the InsertCommand to include an OUTPUT parameter for identity value\n            builder.GetInsertCommand().CommandText += " ; SET @ID = SCOPE_IDENTITY();";\n            SqlParameter idParameter = new SqlParameter("@ID", SqlDbType.Int) { Direction = ParameterDirection.Output };\n            builder.GetInsertCommand().Parameters.Add(idParameter);\n\n            // Handle the RowUpdated event to retrieve the ID\n            adapter.RowUpdated += (s, e) =>\n            {\n                if (e.StatementType == StatementType.Insert)\n                {\n                    int identityValue = (int)e.Command.Parameters["@ID"].Value;\n                    Console.WriteLine($"Inserted row with ID: {identityValue}");\n                }\n            };\n\n            // Example DataTable and update\n            DataTable dataTable = new DataTable();\n            adapter.Fill(dataTable);\n\n            DataRow newRow = dataTable.NewRow();\n            newRow["YourColumn"] = "New Value"; // set other column values as necessary\n            dataTable.Rows.Add(newRow);\n\n            connection.Open();\n            adapter.Update(dataTable);\n        }\n    }\n}