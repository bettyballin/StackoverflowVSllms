using System;\nusing TagLib; // For handling generic metadata like artist, album, etc.\nusing FFmpeg.AutoGen;\n\npublic class MediaFileWrapper\n{\n    private string filePath;\n\n    public MediaFileWrapper(string filepath)\n    {\n        filePath = filepath;\n        ffmpeg.av_register_all();\n    }\n\n    public void ExtractMetadata()\n    {\n        try\n        {\n            // Using TagLib for generic media file metadata\n            var tagFile = Tag.Default.Id3v2Tag.Create(filePath, TagLib.File.AccessMode.Read);\n            Console.WriteLine("Title: " + tagFile.Title);\n            Console.WriteLine("Artist: " + tagFile.Artists[0]);\n            \n            // For video and audio details, use FFmpeg.AutoGen\n            using (var input = ffmpeg.avformat_alloc_context())\n            {\n                if (ffmpeg.avformat_open_input(&input, filePath, null, null) < 0)\n                    throw new Exception("Error opening file");\n\n                if (ffmpeg.avformat_find_stream_info(input, null) < 0)\n                    throw new Exception("Cannot find stream information");\n\n                Console.WriteLine("Duration: " + input.duration / ffmpeg.AV_TIME_BASE);\n                \n                for (int i = 0; i < input.nb_streams; i++)\n                {\n                    var codecPar = input.streams[i]->codecpar;\n                    Console.WriteLine($"Stream #{i}: {ffmpeg.av_get_codec_long_name(ffmpeg.avcodec_find_decoder(codecPar->codec_id))}");\n                    if (codecPar->codec_type == AVMediaType.AVMEDIA_TYPE_VIDEO)\n                    {\n                        Console.WriteLine("Resolution: " + codecPar->width + "x" + codecPar->height);\n                        Console.WriteLine("Bitrate: " + codecPar->bit_rate + " bps");\n                        Console.WriteLine("Frame Rate: " +\n                            ((double)codecPar->avg_frame_rate.num / codecPar->avg_frame_rate.den).ToString("f2") + " fps");\n                    }\n                }\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error extracting metadata: " + ex.Message);\n        }\n    }\n}