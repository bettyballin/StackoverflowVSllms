using System.Collections.Generic;\nusing System.Data.SqlClient;\nusing System.Linq;\n\npublic class LocationBatcher\n{\n    private readonly SqlConnection _connection;\n    private List<DeviceLocation> _locationQueue = new List<DeviceLocation>();\n    private const int BATCH_SIZE = 100; // Adjust batch size as needed\n\n    public LocationBatcher(SqlConnection connection)\n    {\n        _connection = connection;\n    }\n\n    public void AddUpdate(DeviceLocation location)\n    {\n        lock (_locationQueue)\n        {\n            _locationQueue.Add(location);\n            if (_locationQueue.Count >= BATCH_SIZE)\n                Flush();\n        }\n    }\n\n    private void Flush()\n    {\n        using (var command = new SqlCommand("InsertLocationUpdates", _connection))\n        {\n            command.CommandType = System.Data.CommandType.StoredProcedure;\n\n            var dataTable = ToDataTable(_locationQueue);\n            using (var tvpParam = new SqlParameter("@LocationUpdates", SqlDbType.Structured) { TypeName = "dbo.DT_TableType", Value = dataTable })\n            {\n                command.Parameters.Add(tvpParam);\n\n                _connection.Open();\n                command.ExecuteNonQuery();\n\n                lock (_locationQueue)\n                {\n                    _locationQueue.Clear();\n                }\n            }\n\n            if (_connection.State == System.Data.ConnectionState.Open)\n            {\n                _connection.Close();\n            }\n        }\n    }\n\n    private static DataTable ToDataTable(IEnumerable<DeviceLocation> locations)\n    {\n        // Convert locations to a DataTable suitable for TVP\n        var dataTable = new DataTable();\n        dataTable.Columns.Add("DeviceID", typeof(int));\n        dataTable.Columns.Add("Location", typeof(string));\n        dataTable.Columns.Add("UpdateTime", typeof(System.DateTime));\n\n        foreach (var location in locations)\n        {\n            dataTable.Rows.Add(location.DeviceID, location.Location, location.UpdateTime);\n        }\n\n        return dataTable;\n    }\n}\n\npublic class DeviceLocation\n{\n    public int DeviceID { get; set; }\n    public string Location { get; set; }\n    public System.DateTime UpdateTime { get; set; }\n}