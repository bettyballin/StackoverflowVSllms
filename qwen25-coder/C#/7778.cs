using Microsoft.EntityFrameworkCore;\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<MyEntity> Entities { get; set; }\n\n    protected override void OnConfiguring(DbContextOptionsBuilder options)\n        => options.UseSqlServer(@"Server=(localdb)\mssqllocaldb;Database=TestDb");\n}\n\npublic class MyEntity\n{\n    private int _id;\n    private string _name;\n\n    public MyEntity(int id, string name)\n    {\n        _id = id;\n        _name = name;\n    }\n\n    // EF Core can use this to read the ID value back from the database.\n    public int Id => _id;\n\n    // This property can be used for setting values via queries or migrations.\n    public string Name\n    {\n        get => _name;\n        private set => _name = value; // Private setter maintains encapsulation.\n    }\n}