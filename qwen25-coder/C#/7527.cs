// POCO classes for Parent and Child entities\npublic class Parent {\n    public int Id { get; set; }\n    public string Name { get; set; }\n\n    // Lazy loaded child collection\n    private List<Child> _children;\n    public IEnumerable<Child> Children {\n        get {\n            if (_children == null) {\n                var query = new SubSonic.Query.Select().From<Child>().Where(Child.Columns.ParentId).IsEqualTo(Id);\n                _children = query.ExecuteTypedList<Child>();\n            }\n            return _children;\n        }\n    }\n}\n\npublic class Child {\n    public int Id { get; set; }\n    public string Description { get; set; }\n    public int ParentId { get; set; }\n\n    // Lazy loaded parent\n    private Parent _parent;\n    public Parent Parent {\n        get {\n            if (_parent == null) {\n                var query = new SubSonic.Query.Select().From<Parent>().Where(Parent.Columns.Id).IsEqualTo(ParentId);\n                _parent = query.ExecuteSingleTypedList<Parent>().FirstOrDefault();\n            }\n            return _parent;\n        }\n    }\n}