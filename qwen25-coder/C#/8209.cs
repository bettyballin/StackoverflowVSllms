protected void Page_Load(object sender, EventArgs e)\n{\n    // Ensure this logic runs only not postback as we don't want to change IDs after initial render.\n    if (!IsPostBack)\n    {\n        SetValidationGroups();\n    }\n}\n\nprivate void SetValidationGroups()\n{\n    foreach (Control ctrl in this.Controls)\n    {\n        ConfigureValidators(ctrl);\n    }\n\n    ValidationSummary1.ValidationGroup = GetUniqueGroupName(this.ID); // Ensure consistent group naming\n}\n\nprivate void ConfigureValidators(Control container)\n{\n    foreach (Control c in container.Controls)\n    {\n        BaseValidator validator = c as BaseValidator;\n        if (validator != null)\n        {\n            validator.ValidationGroup = GetUniqueGroupName(this.ID);\n        }\n        \n        // Recursively configure child controls\n        if (c.HasControls())\n        {\n            ConfigureValidators(c);\n        }\n    }\n}\n\n// Method to create a unique validation group name, ideally should be unique per user control instance.\nprivate string GetUniqueGroupName(string baseName)\n{\n    return baseName.Replace("-", "_");  // Ensure no illegal characters for client IDs\n}