public interface ICommand\n   {\n       void Execute();\n   }\n\n   public class CommandInvoker\n   {\n       private readonly Queue<ICommand> _commands = new Queue<ICommand>();\n\n       public void Add(ICommand command)\n       {\n           _commands.Enqueue(command);\n       }\n\n       public void Process()\n       {\n           while (_commands.Count > 0)\n               _commands.Dequeue().Execute();\n       }\n   }