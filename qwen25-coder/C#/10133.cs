var results = db.YourStoredProcedureName(Parameter1);\n\nISingleResult<int> scalarResult = null;\nIMultipleResults multipleResults = null;\n\ntry\n{\n    // Check the first result set. If it's a scalar value, handle accordingly.\n    scalarResult = results.GetResult<int>().FirstOrDefault();\n}\ncatch (Exception)\n{\n    // It was not a scalar result, so attempt to get other types of results.\n    try\n    {\n        multipleResults = ((IOrderedAsyncResult)results).Cast<IMultipleResults>();\n\n        // Now you can iterate through the IMultipleResults and cast each part as needed,\n        // for example:\n        var firstResultset = multipleResults.GetResult<YourFirstResultType>();\n        var secondResultset = multipleResults.GetResult<YourSecondResultType>();\n\n        // Process your result sets here\n    }\n    catch (Exception ex)\n    {\n        // Handle exceptions if necessary.\n        Console.WriteLine($"Error processing results: {ex.Message}");\n    }\n}\n\nif (scalarResult != null)\n{\n    // Do something with the scalar result\n    Console.WriteLine($"Scalar Result: {scalarResult}");\n}