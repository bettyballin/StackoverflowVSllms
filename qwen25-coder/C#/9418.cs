using Ghostscript.NET.Rasterizer;\n   using System.Drawing;\n\n   public Bitmap ConvertEpsToThumbnail(string epsFilePath, string gsExecutablePath)\n   {\n       var rasterizer = new GhostscriptRasterizer();\n       \n       // Configure rasterizer settings\n       var switches = new GhostscriptSwitchCollection();\n       switches.Add("-dNOPAUSE");\n       switches.Add("-dBATCH");\n       switches.Add($"-sDEVICE=png16m");\n       switches.Add($"-r300x300");  // Set the output resolution to 300 DPI\n       switches.Add($"-g200x200");  // Set the size of the output to 200x200 pixels (adjust as needed)\n       switches.Add(epsFilePath);\n\n       try\n       {\n           using (var image = rasterizer.RasterizePage(gsExecutablePath, gsExecutablePath, 1)) // Adjust page number if necessary\n           {\n               return new Bitmap(image);\n           }\n       }\n       catch (Exception ex)\n       {\n           // Handle exceptions as appropriate for your application\n           Console.WriteLine($"Error: {ex.Message}");\n           return null;\n       }\n   }\n\n   // Usage Example\n   string epsFilePath = @"C:\path\to\yourfile.eps";\n   string gsExecutablePath = @"C:\Program Files\gs\gs9.52b\bin\gswin64c.exe";  // Adjust path accordingly\n\n   Bitmap thumbnail = ConvertEpsToThumbnail(epsFilePath, gsExecutablePath);\n\n   if (thumbnail != null)\n       thumbnail.Save("output.png");  // Save or display the thumbnail as needed