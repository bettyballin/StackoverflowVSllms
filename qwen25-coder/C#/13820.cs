using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Person\n{\n    public int PersonID { get; set; }\n}\n\npublic class Community\n{\n    public int CommunityID { get; set; }\n}\n\npublic class Contact\n{\n    public int ContactID { get; set; }\n    public int ContactType { get; set; } // Assuming constants for Business or Home\n    public string Address1 { get; set; }\n    public string Address2 { get; set; }\n}\n\npublic class PersonInCommunity\n{\n    public int CommunityID { get; set; }\n    public int PersonID { get; set; }\n}\n\npublic class PersonInContact\n{\n    public int ContactID { get; set; }\n    public int PersonID { get; set; }\n}\n\npublic class Program\n{\n    public static void Main()\n    {\n        const int BusinessContactType = 1;\n        const int HomeContactType = 2;\n\n        var persons = new List<Person>\n        {\n            new Person { PersonID = 1 },\n            // Add more persons as needed\n        };\n\n        var contacts = new List<Contact>\n        {\n            new Contact { ContactID = 1, ContactType = BusinessContactType, Address1 = "123 Business St" },\n            new Contact { ContactID = 2, ContactType = HomeContactType, Address1 = "456 Home St" },\n            // Add more contacts as needed\n        };\n\n        var personInCommunities = new List<PersonInCommunity>\n        {\n            new PersonInCommunity { CommunityID = 1, PersonID = 1 },\n            // Add more entries as needed\n        };\n\n        var personInContacts = new List<PersonInContact>\n        {\n            new PersonInContact { ContactID = 1, PersonID = 1 },\n            new PersonInContact { ContactID = 2, PersonID = 1 },\n            // Add more entries as needed\n        };\n\n        var result = from p in persons\n                     join pic in personInContacts on p.PersonID equals pic.PersonID\n                     join c in contacts on pic.ContactID equals c.ContactID\n                     group new { c, p } by p.PersonID into g\n                     select new\n                     {\n                         PersonID = g.Key,\n                         BusinessContact = g.FirstOrDefault(x => x.c.ContactType == BusinessContactType)?.c.Address1,\n                         HomeContact = g.FirstOrDefault(x => x.c.ContactType == HomeContactType)?.c.Address1\n                     };\n\n        foreach (var r in result)\n        {\n            Console.WriteLine($"PersonID: {r.PersonID}, BusinessContact: {r.BusinessContact}, HomeContact: {r.HomeContact}");\n        }\n    }\n}