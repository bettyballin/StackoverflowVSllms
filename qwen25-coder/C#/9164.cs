using System;\nusing System.Data.SqlTypes;\nusing Microsoft.SqlServer.Server;\nusing System.Security.Cryptography;\n\npublic class SymmetricEncryption\n{\n    [SqlProcedure]\n    public static void EncryptData(SqlString plainText, SqlString key, out SqlBytes encryptedData)\n    {\n        byte[] iv = new byte[16]; // Initialization vector\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key.Value);\n            aesAlg.IV = iv;\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText.Value);\n                    }\n                    encryptedData = new SqlBytes(msEncrypt.ToArray());\n                }\n            }\n        }\n    }\n\n    [SqlProcedure]\n    public static void DecryptData(SqlBytes cipherText, SqlString key, out SqlString plainText)\n    {\n        byte[] iv = new byte[16]; // Initialization vector\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key.Value);\n            aesAlg.IV = iv;\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText.Value))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        plainText = new SqlString(srDecrypt.ReadToEnd());\n                    }\n                }\n            }\n        }\n    }\n}