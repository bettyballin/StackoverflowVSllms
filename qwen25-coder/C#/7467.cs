using System;\nusing System.Collections.Generic;\nusing System.Xml;\nusing System.Xml.XPath;\n\npublic class XPathAncestorExtractor\n{\n    public static void ExtractNodesAndAncestors(string sourceXmlPath, string resultXmlPath, XPathExpression query)\n    {\n        XPathDocument document = new XPathDocument(sourceXmlPath);\n        XPathNavigator navigator = document.CreateNavigator();\n        XPathNodeIterator nodeIterator = navigator.Select(query);\n\n        XmlDocument resultDocument = new XmlDocument();\n\n        // Create a root element or merge into the context of your choice\n        XmlElement root = resultDocument.CreateElement("Root");\n        resultDocument.AppendChild(root);\n\n        HashSet<string> processedNodes = new HashSet<string>();\n\n        while (nodeIterator.MoveNext())\n        {\n            XPathNavigator currentNode = nodeIterator.Current;\n            Stack<XPathNavigator> ancestors = new Stack<XPathNavigator>();\n\n            // Collect all ancestors\n            while (currentNode != null && !processedNodes.Contains(GetUniqueNodeKey(currentNode)))\n            {\n                ancestors.Push(currentNode.Clone());\n                processedNodes.Add(GetUniqueNodeKey(currentNode));\n                currentNode.MoveToParent();\n            }\n\n            XmlDocumentFragment parentFrag = resultDocument.CreateDocumentFragment();\n\n            while (ancestors.Count > 0)\n            {\n                XPathNavigator ancestor = ancestors.Pop();\n                XmlElement newAncestor = AppendXmlElement(parentFrag, ancestor.OuterXml);\n                parentFrag = newAncestor;\n            }\n        }\n\n        // Save the resulting document\n        using (var writer = XmlWriter.Create(resultXmlPath))\n        {\n            resultDocument.Save(writer);\n        }\n    }\n\n    private static string GetUniqueNodeKey(XPathNavigator node)\n    {\n        return $"{node.Name}/{string.Join(",", node.Select("@*").Cast<XPathNavigator>().Select(x => x.OuterXml))}";\n    }\n\n    private static XmlElement AppendXmlElement(XmlNode parent, string xml)\n    {\n        XmlDocument doc = parent.OwnerDocument;\n        XmlNode importedNode = doc.ImportNode(doc.LoadXml($"<dummy>{xml}</dummy>").FirstChild, true);\n        return (XmlElement)parent.AppendChild(importedNode);\n    }\n}\n\n// Usage\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string sourcePath = "source.xml";\n        string outputPath = "output.xml";\n        XmlDocument doc = new XmlDocument();\n        doc.Load(sourcePath);\n\n        XPathNavigator nav = doc.CreateNavigator();\n        XPathExpression expr = nav.Compile("//c");\n\n        XPathAncestorExtractor.ExtractNodesAndAncestors(sourcePath, outputPath, expr);\n    }\n}