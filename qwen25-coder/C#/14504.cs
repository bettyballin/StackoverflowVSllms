public class ComContextManager\n{\n    private const string ContextKey = "UserSessionContext";\n\n    public MyComObject GetOrCreateContext()\n    {\n        if (HttpContext.Current.Session[ContextKey] != null)\n        {\n            return HttpContext.Current.Session[ContextKey] as MyComObject;\n        }\n\n        var context = new MyComObject(); // Assuming MyComObject is your COM wrapper\n        HttpContext.Current.Session[ContextKey] = context;\n        return context;\n    }\n\n    public void DisposeContext()\n    {\n        if (HttpContext.Current.Session[ContextKey] != null)\n        {\n            var context = HttpContext.Current.Session[ContextKey] as MyComObject;\n            context.Dispose(); // Ensure your COM wrapper implements IDisposable\n            Marshal.ReleaseComObject(context);\n            HttpContext.Current.Session.Remove(ContextKey);\n        }\n    }\n}