using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    // Define the IInternetZoneManager interface GUID and Interface ID from MSDN docs\n    [Guid("79eac9ee-baf9-11ce-8c82-00aa004ba90b")]\n    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n    public interface IInternetZoneManager\n    {\n        void Reserved0();\n        void GetZoneAttributes(int dwZone, ref tagINTERNETZONEATTRIBUTES pZoneAttributes);\n        int SetZoneAttributes(int dwZone, ref tagINTERNETZONEATTRIBUTES pZoneAttributes);\n        void GetZoneCustomPolicy(\n            int dwZone,\n            ref Guid guidKey,\n            out byte[] ppPolicy,\n            ref uint pcbPolicy,\n            ref byte[] pContext,\n            uint cbContext);\n        void SetZoneCustomPolicy(\n            int dwZone,\n            ref Guid guidKey,\n            byte[] pPolicy,\n            uint cbPolicy);\n        // ... other members ...\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct tagINTERNETZONEATTRIBUTES\n    {\n        public uint cbSize;\n        public uint szDisplayName;\n        public uint dwFlags;\n        public int fPrivacyFlags;\n        public int fTrackingProtection;\n    }\n\n    class InternetZoneManagerClass : IInternetZoneManager\n    {\n        [DllImport("urlmon.dll")]\n        private static extern int CoCreateInstance(\n            ref Guid clsid,\n            IntPtr pUnkOuter,\n            uint dwClsContext,\n            ref Guid riid,\n            out IInternetZoneManager ppv);\n\n        public InternetZoneManagerClass()\n        {\n            Guid CLSID_InternetZoneManager = new Guid("7b81be6a-ce2b-11d0-9335-00aa00bd931a");\n            Guid IID_IInternetZoneManager = new Guid("79eac9ee-baf9-11ce-8c82-00aa004ba90b");\n\n            CoCreateInstance(\n                ref CLSID_InternetZoneManager,\n                IntPtr.Zero,\n                0x00000001 /*CLSCTX_INPROC_SERVER*/,\n                ref IID_IInternetZoneManager,\n                out _zoneManager);\n        }\n\n        private readonly IInternetZoneManager _zoneManager;\n\n        public void Reserved0() => throw new NotImplementedException();\n\n        public void GetZoneAttributes(int dwZone, ref tagINTERNETZONEATTRIBUTES pZoneAttributes)\n            => _zoneManager.GetZoneAttributes(dwZone, ref pZoneAttributes);\n\n        public int SetZoneAttributes(int dwZone, ref tagINTERNETZONEATTRIBUTES pZoneAttributes)\n            => _zoneManager.SetZoneAttributes(dwZone, ref pZoneAttributes);\n\n        public void GetZoneCustomPolicy(\n            int dwZone,\n            ref Guid guidKey,\n            out byte[] ppPolicy,\n            ref uint pcbPolicy,\n            ref byte[] pContext,\n            uint cbContext) => throw new NotImplementedException();\n\n        public void SetZoneCustomPolicy(\n            int dwZone,\n            ref Guid guidKey,\n            byte[] pPolicy,\n            uint cbPolicy) => throw new NotImplementedException();\n    }\n\n    static void Main()\n    {\n        using (var zoneManager = new InternetZoneManagerClass())\n        {\n            const int URLZONE_LOCAL_MACHINE = 0;\n            tagINTERNETZONEATTRIBUTES internetZoneAttributes = new tagINTERNETZONEATTRIBUTES\n            {\n                cbSize = (uint)Marshal.SizeOf(typeof(tagINTERNETZONEATTRIBUTES))\n            };\n\n            zoneManager.GetZoneAttributes(URLZONE_LOCAL_MACHINE, ref internetZoneAttributes);\n\n            Console.WriteLine($"Flags: {internetZoneAttributes.dwFlags}");\n        }\n    }\n}