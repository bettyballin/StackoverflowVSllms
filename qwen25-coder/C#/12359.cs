using System;\n\nclass SpiralMatrix {\n    static void Main() {\n        int n = 6; // Number of columns/rows for the matrix (assuming a square matrix here)\n        int[,] result = new int[n, n];\n        \n        int topRow = 0;\n        int bottomRow = n - 1;\n        int leftCol = 0;\n        int rightCol = n - 1;\n        \n        int num = 1; // Starting number to fill in the matrix\n        \n        while (topRow <= bottomRow && leftCol <= rightCol) {\n            // Traverse from left to right along top row\n            for (int i = leftCol; i <= rightCol; i++) {\n                result[topRow, i] = num++;\n            }\n            topRow++;\n\n            // Traverse downwards along the right column\n            for (int i = topRow; i <= bottomRow; i++) {\n                result[i, rightCol] = num++;\n            }\n            rightCol--;\n\n            if (topRow <= bottomRow) {\n                // Traverse from right to left along the bottom row\n                for (int i = rightCol; i >= leftCol; i--) {\n                    result[bottomRow, i] = num++;\n                }\n                bottomRow--;\n            }\n\n            if (leftCol <= rightCol) {\n                // Traverse upwards along the left column\n                for (int i = bottomRow; i >= topRow; i--) {\n                    result[i, leftCol] = num++;\n                }\n                leftCol++;\n            }\n        }\n\n        // Print the matrix\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                Console.Write(result[i, j].ToString("D2") + " "); // D2 ensures two-digit formatting\n            }\n            Console.WriteLine();\n        }\n    }\n}