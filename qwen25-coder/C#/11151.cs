using System;\nusing System.ComponentModel;\nusing System.IO;\nusing System.Windows.Forms;\n\npublic class FileFolderDialog : Form\n{\n    private TreeView treeview;\n    private Button btnSelect, btnCancel;\n    private TextBox txtPath;\n\n    public string SelectedPath { get; set; }\n\n    public FileFolderDialog()\n    {\n        treeview = new TreeView();\n        btnSelect = new Button { Text = "Select" };\n        btnCancel = new Button { Text = "Cancel", DialogResult = DialogResult.Cancel };\n        txtPath = new TextBox();\n\n        InitializeComponent();\n        PopulateTree(treeview);\n    }\n\n    private void PopulateTree(TreeView tv)\n    {\n        tv.Dock = DockStyle.Fill;\n        TreeNode rootNode;\n\n        foreach (string drive in Environment.GetLogicalDrives())\n        {\n            DriveInfo info = new DriveInfo(drive);\n            if (!info.IsReady) continue;\n            rootNode = tv.Nodes.Add(drive, drive, 0, 0);\n            LoadSubDirs(rootNode);\n        }\n    }\n\n    private void LoadSubDirs(TreeNode node)\n    {\n        string path = node.FullPath;\n\n        try\n        {\n            foreach (string directory in Directory.GetDirectories(path))\n            {\n                TreeNode folderNode = new TreeNode(Path.GetFileName(directory), 1, 2) { Tag = directory };\n                node.Nodes.Add(folderNode);\n                folderNode.Nodes.Add(0);\n            }\n\n            foreach (string file in Directory.GetFiles(path))\n            {\n                TreeNode fileNode = new TreeNode(Path.GetFileName(file), 3, 4) { Tag = file };\n                node.Nodes.Add(fileNode);\n            }\n        }\n        catch\n        {\n            return;\n        }\n\n        node.Expand();\n    }\n\n    private void InitializeComponent()\n    {\n        this.treeview.AfterCollapse += delegate (object sender, TreeViewEventArgs e)\n        {\n            ((TreeNode)e.Node).Nodes[0] = new TreeNode { Text = "" };\n        };\n\n        this.treeview.BeforeExpand += delegate (object sender, TreeViewCancelEventArgs e)\n        {\n            if (e.Node.Nodes.Count > 1) return;\n            e.Node.Nodes.Clear();\n            LoadSubDirs(e.Node);\n        };\n\n        this.treeview.AfterSelect += delegate (object sender, TreeViewEventArgs e)\n        {\n            txtPath.Text = e.Node.Tag.ToString();\n        };\n\n        btnSelect.DialogResult = DialogResult.OK;\n\n        FlowLayoutPanel panel = new FlowLayoutPanel { Dock = DockStyle.Bottom };\n        Control[] ctrls = { txtPath, btnSelect, btnCancel };\n        panel.Controls.AddRange(ctrls);\n\n        this.Controls.Add(treeview);\n        this.Controls.Add(panel);\n\n        this.StartPosition = FormStartPosition.CenterScreen;\n        this.Text = "Select File or Folder";\n    }\n\n    public static string ShowDialog()\n    {\n        using (FileFolderDialog dialog = new FileFolderDialog())\n        {\n            if (dialog.ShowDialog() == DialogResult.OK)\n                return dialog.SelectedPath = dialog.txtPath.Text;\n\n            return null;\n        }\n    }\n}