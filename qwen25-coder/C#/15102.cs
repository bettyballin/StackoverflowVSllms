using System.Collections.Generic;\nusing System.Data.SqlClient;\n\npublic class Parent_Type\n{\n    public string Name { get; set; }\n    public List<Children_Type> Children { get; set; } = new List<Children_Type>();\n}\n\npublic class Children_Type\n{\n    public string Name { get; set; }\n}\n\npublic List<Parent_Type> FetchParentsAndChildren(string connectionString)\n{\n    var parents = new Dictionary<int, Parent_Type>();\n    \n    using (var connection = new SqlConnection(connectionString))\n    {\n        connection.Open();\n        \n        string query = "SELECT p.Name AS ParentName, c.Name AS ChildName FROM Parent p INNER JOIN Children c ON p.ParentID = c.ParentID";\n        using (var command = new SqlCommand(query, connection))\n        {\n            using (var reader = command.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    string parentName = reader["ParentName"].ToString();\n                    string childName = reader["ChildName"].ToString();\n                    \n                    if (!parents.ContainsKey(parentName.GetHashCode()))\n                    {\n                        parents[parentName.GetHashCode()] = new Parent_Type { Name = parentName };\n                    }\n                    \n                    var parent = parents[parentName.GetHashCode()];\n                    parent.Children.Add(new Children_Type { Name = childName });\n                }\n            }\n        }\n    }\n    \n    return new List<Parent_Type>(parents.Values);\n}