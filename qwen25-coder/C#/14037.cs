using System;\nusing System.Net.Sockets;\n\nclass SmtpValidator {\n    public static bool ValidateEmail(string domain, string email) {\n        TcpClient client = new TcpClient(domain, 25);\n        NetworkStream stream = client.GetStream();\n        var reader = new System.IO.StreamReader(stream);\n        var writer = new System.IO.StreamWriter(stream) { AutoFlush = true };\n\n        // Read the server's response\n        ReadResponse(reader);\n\n        writer.WriteLine($"HELO {domain}");\n        ReadResponse(reader);\n\n        writer.WriteLine($"MAIL FROM: <test@{domain}>");\n        ReadResponse(reader);\n\n        writer.WriteLine($"RCPT TO: <{email}>");\n\n        var response = ReadResponse(reader);\n        if (response.StartsWith("250")) {\n            // Email address likely exists\n            Console.WriteLine("Email is likely valid.");\n            return true;\n        } else {\n            // Email address likely does not exist\n            Console.WriteLine("Email is likely invalid.");\n            return false;\n        }\n\n        writer.WriteLine("QUIT");\n        ReadResponse(reader);\n\n        client.Close();\n        return response.StartsWith("250");\n    }\n\n    private static string ReadResponse(System.IO.StreamReader reader) {\n        var sb = new System.Text.StringBuilder();\n        while (reader.Peek() >= 0) {\n            string line = reader.ReadLine();\n            if (line.Length < 4) break;\n            if (line[3] == ' ') return sb.ToString();\n            sb.Append(line.Substring(4));\n        }\n        return null;\n    }\n\n    public static void Main(string[] args) {\n        var domain = "example.com";\n        var email = "user@example.com";\n\n        try {\n            bool isValid = ValidateEmail(domain, email);\n            Console.WriteLine($"Is {email} valid? {isValid}");\n        } catch (Exception ex) {\n            Console.WriteLine("There was an error: " + ex.Message);\n        }\n    }\n}