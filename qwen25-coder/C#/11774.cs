// Example of defining an interface in a separate project (Contracts.dll)\npublic interface ISomeService\n{\n    void DoSomething();\n}\n\n// Implementation in another project (Services.dll) that references Contracts.dll\npublic class SomeServiceImpl : ISomeService\n{\n    public void DoSomething()\n    {\n        // Implementation here\n    }\n}\n\n// Dependency registration in your Core project or Startup.cs if you're using ASP.NET Core\nvar services = new ServiceCollection();\nservices.AddTransient<ISomeService, SomeServiceImpl>();\nvar serviceProvider = services.BuildServiceProvider();\n\n// Usage of the service through its interface\nvar someService = serviceProvider.GetService<ISomeService>();\nsomeService.DoSomething();