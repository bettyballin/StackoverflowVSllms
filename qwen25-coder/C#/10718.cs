using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Configuration.Install;\nusing System.Configuration;\n\n[RunInstaller(true)]\npublic class Blah : Installer\n{\n    public override void Install(IDictionary stateSaver)\n    {\n        try\n        {\n            // Load the configuration file\n            var config = ConfigurationManager.OpenExeConfiguration(this.Context.Parameters["assemblypath"]);\n            string username = config.AppSettings.Settings["ServiceProcessUsername"]?.Value;\n            string password = config.AppSettings.Settings["ServiceProcessPassword"]?.Value;\n\n            if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))\n                throw new ArgumentException("Username and/or Password not found in the configuration file.");\n\n            // Create instances of your installers\n            ServiceProcessInstaller oServiceProcessInstaller = new ServiceProcessInstaller();\n            ServiceInstaller oServiceInstaller = new ServiceInstaller();\n\n            // Set properties on the installer instances you created earlier\n            oServiceProcessInstaller.Account = ServiceAccount.User;\n            oServiceProcessInstaller.Username = username;\n            oServiceProcessInstaller.Password = password;\n\n            // Add installers to this installer's collection.\n            Installers.Add(oServiceProcessInstaller);\n            Installers.Add(oServiceInstaller);\n\n            // Call the base class method\n            base.Install(stateSaver);\n        }\n        catch (Exception ex)\n        {\n            throw new InstallException("Failed to read configuration settings.", ex);\n        }\n    }\n}