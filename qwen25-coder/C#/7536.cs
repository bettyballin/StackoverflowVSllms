using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main()\n    {\n        List<FooObj> _list = new List<FooObj>();\n        // populate list with FooObj instances\n\n        string needle = "example";\n\n        // Measure Find() method\n        DateTime startFind = DateTime.Now;\n        for (int i = 0; i < 100000; i++)\n        {\n            var resultFind = _list.Find(delegate(FooObj foo)\n            {\n                return foo.Name == needle;\n            });\n        }\n        TimeSpan elapsedFind = DateTime.Now - startFind;\n\n        // Measure foreach method\n        DateTime startForeach = DateTime.Now;\n        for (int i = 0; i < 100000; i++)\n        {\n            foreach (FooObj foo in _list)\n            {\n                if (foo.Name == needle)\n                    break; // assuming return is not needed outside of the loop\n            }\n        }\n        TimeSpan elapsedForeach = DateTime.Now - startForeach;\n\n        Console.WriteLine($"Find() took: {elapsedFind.TotalMilliseconds} ms");\n        Console.WriteLine($"foreach took: {elapsedForeach.TotalMilliseconds} ms");\n    }\n\n    class FooObj\n    {\n        public string Name { get; set; }\n    }\n}