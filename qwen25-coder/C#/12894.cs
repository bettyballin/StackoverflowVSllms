using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class TCPServer : Form\n{\n    private const int MESSAGE_ASYNC = 0x401; // WM_USER + 1\n\n    [DllImport("Ws2_32.dll")]\n    public static extern int WSAAsyncSelect(IntPtr s, IntPtr hWnd, int msg, int lEvent);\n\n    private Socket listenSocket;\n    private Socket connectedSocket;\n\n    public TCPServer()\n    {\n        listenSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n        IPEndPoint ipep = new IPEndPoint(IPAddress.Any, 8080);\n        listenSocket.Bind(ipep);\n\n        listenSocket.Listen(10); // backlog of 10\n\n        WSAAsyncSelect(listenSocket.Handle, this.Handle, MESSAGE_ASYNC, (int)FD.FD_ACCEPT | (int)FD.FD_CLOSE);\n    }\n\n    protected override void WndProc(ref Message m)\n    {\n        switch (m.Msg)\n        {\n            case MESSAGE_ASYNC:\n                int eventCode = unchecked ((short)(m.WParam.ToInt64() >> 16));\n\n                if (((int)m.LParam & (int)FD.FD_ACCEPT) != 0 && eventCode == 0)\n                {\n                    // Handle accept\n                    connectedSocket = listenSocket.Accept();\n                    WSAAsyncSelect(connectedSocket.Handle, this.Handle, MESSAGE_ASYNC, (int)(FD.FD_READ | FD.FD_CLOSE));\n\n                    // Send a welcome message to the client\n                    byte[] dataToSend = System.Text.Encoding.ASCII.GetBytes("Welcome!");\n                    connectedSocket.Send(dataToSend);\n                }\n                else if (((int)m.LParam & (int)FD.FD_READ) != 0 && eventCode == 0)\n                {\n                    // Handle receive\n                    byte[] buffer = new byte[256];\n                    int receivedBytes = connectedSocket.Receive(buffer);\n\n                    string receivedData = System.Text.Encoding.ASCII.GetString(buffer, 0, receivedBytes);\n                    MessageBox.Show($"Received: {receivedData}");\n                }\n                else if (((int)m.LParam & (int)FD.FD_CLOSE) != 0)\n                {\n                    // Handle close\n                    connectedSocket.Close();\n                    connectedSocket.Dispose();\n                    WSAAsyncSelect(listenSocket.Handle, this.Handle, MESSAGE_ASYNC, (int)FD.FD_ACCEPT | (int)FD.FD_CLOSE);\n\n                    MessageBox.Show("Connection closed.");\n                }\n\n                break;\n\n            default:\n                base.WndProc(ref m);\n                break;\n        }\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new TCPServer());\n    }\n}\n\npublic enum FD : int\n{\n    FD_READ = 0x1,\n    FD_WRITE = 0x2,\n    FD_OOB = 0x4,\n    FD_ACCEPT = 0x8,\n    FD_CLOSE = 0x20,\n}