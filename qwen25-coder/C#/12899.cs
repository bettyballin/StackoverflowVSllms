public class EmployeeMap : ClassMap<Employee>\n{\n    public EmployeeMap()\n    {\n        Table("Employees");\n        Id(x => x.EmployeeID);\n        Map(x => x.FirstName);\n        Map(x => x.LastName);\n        Map(x => x.City);\n        Map(x => x.HireDate);\n        Map(x => x.Title);\n\n        HasMany(x => x.Orders)\n            .KeyColumn("EmployeeId") // Ensure this matches your database schema\n            .Inverse()\n            .Cascade.AllDeleteOrphan(); // Adjust cascade settings as needed\n    }\n}\n\npublic class OrdersMap : ClassMap<Order>\n{\n    public OrdersMap()\n    {\n        Table("Orders");\n        Id(x => x.OrderID);\n        Map(x => x.OrderDate);\n        Map(x => x.RequiredDate);\n        Map(x => x.ShippedDate);\n\n        References(x => x.Employee)\n            .Column("EmployeeId") // Ensure this matches your database schema\n            .ForeignKeyConstraintName("FK_Orders_Employees");\n\n        HasManyToMany(x => x.Products)\n            .Table("Order Details")\n            .ParentKeyColumn("OrderId")\n            .ChildKeyColumn("ProductId")\n            .Cascade.All(); // Adjust cascade settings as needed\n    }\n}\n\npublic class ProductsMap : ClassMap<Product>\n{\n    public ProductsMap()\n    {\n        Table("Products");\n        Id(x => x.ProductID);\n        Map(x => x.ProductName);\n        Map(x => x.UnitPrice);\n\n        HasManyToMany(x => x.Orders)\n            .Table("Order Details")\n            .ChildKeyColumn("ProductId")\n            .ParentKeyColumn("OrderId")\n            .Inverse()\n            .Cascade.All(); // Adjust cascade settings as needed\n    }\n}