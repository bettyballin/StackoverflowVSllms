using System;\nusing System.Web.Security;\n\npublic partial class ScriptExecutionPage : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            // Assume the user has provided username and password on a login form\n            string username = Request.Form["username"];\n            string password = Request.Form["password"];\n\n            // Encrypt the credentials before storing them in session\n            var encryptedCredentials = FormsAuthentication.Encrypt(\n                new FormsAuthenticationTicket(1, username, DateTime.Now,\n                    DateTime.Now.AddMinutes(5), false, password));\n\n            Session["EncryptedUserCredentials"] = encryptedCredentials;\n        }\n        else\n        {\n            // Decrypt the credentials when needed\n            if (Session["EncryptedUserCredentials"] != null)\n            {\n                var ticket = FormsAuthentication.Decrypt(Session["EncryptedUserCredentials"].ToString());\n                string username = ticket.Name;\n                string password = ticket.UserData;\n\n                // Use the decrypted credentials to connect and execute scripts\n                ExecuteDatabaseScript(username, password);\n            }\n        }\n    }\n\n    private void ExecuteDatabaseScript(string username, string password)\n    {\n        // Logic to execute database scripts using the provided credentials\n    }\n}