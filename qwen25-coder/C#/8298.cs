using System;\nusing System.Data;\nusing System.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        // Create dataset and add tables\n        DataSet dataSet = new DataSet("MyDataSet");\n\n        DataTable customersTable = new DataTable("Customers");\n        DataTable ordersTable = new DataTable("Orders");\n\n        // Define columns for Customers table\n        customersTable.Columns.Add(new DataColumn("CustomerID", typeof(int)));\n        customersTable.Columns.Add(new DataColumn("CompanyName", typeof(string)));\n\n        // Define columns for Orders table\n        ordersTable.Columns.Add(new DataColumn("OrderID", typeof(int)));\n        ordersTable.Columns.Add(new DataColumn("CustomerID", typeof(int))); // foreign key\n        ordersTable.Columns.Add(new DataColumn("OrderDate", typeof(DateTime)));\n\n        // Add tables to dataset\n        dataSet.Tables.Add(customersTable);\n        dataSet.Tables.Add(ordersTable);\n\n        // Create and set relation between Orders and Customers\n        DataRelation customerOrdersRelation = new DataRelation(\n            "CustomerOrders",\n            customersTable.Columns["CustomerID"],\n            ordersTable.Columns["CustomerID"]);\n        dataSet.Relations.Add(customerOrdersRelation);\n\n        // Add some data to tables\n        object[] customersRows = new object[] { 1, "Customer A" };\n        object[] ordersRows = new object[] { 101, 1, new DateTime(2023, 5, 21) };\n\n        customersTable.Rows.Add(customersRows);\n        ordersTable.Rows.Add(ordersRows);\n\n        // LINQ Query to traverse from Customers to Orders\n        var query = from customerRow in dataSet.Tables["Customers"].AsEnumerable()\n                    select new \n                    {\n                        CustomerID = customerRow.Field<int>("CustomerID"),\n                        CompanyName = customerRow.Field<string>("CompanyName"),\n                        Orders = customerRow.GetChildRows("CustomerOrders")\n                                .Select(orderRow => new \n                                { \n                                    OrderID = orderRow.Field<int>("OrderID"), \n                                    OrderDate = orderRow.Field<DateTime>("OrderDate") \n                                })\n                    };\n\n        // Execute the query and print results\n        foreach (var item in query)\n        {\n            Console.WriteLine($"Customer: {item.CompanyName} (ID: {item.CustomerID})");\n            foreach (var order in item.Orders)\n            {\n                Console.WriteLine($"\tOrder ID: {order.OrderID}, Date: {order.OrderDate.ToShortDateString()}");\n            }\n        }\n    }\n}