using System;\nusing System.Collections.Generic;\n\npublic class DomainMatcher\n{\n    private readonly HashSet<string> _absoluteDomains = new HashSet<string>();\n    private readonly Dictionary<string, List<string>> _wildcardDomains = new Dictionary<string, List<string>>();\n\n    public void AddEntry(string entry)\n    {\n        if (entry.StartsWith("*."))\n        {\n            string domainPart = entry.Substring(2);\n            if (!_wildcardDomains.ContainsKey(domainPart))\n                _wildcardDomains[domainPart] = new List<string>();\n\n            _wildcardDomains[domainPart].Add(entry);\n        }\n        else\n        {\n            _absoluteDomains.Add(entry);\n        }\n    }\n\n    public bool Matches(string domain)\n    {\n        // Check for absolute match\n        if (_absoluteDomains.Contains(domain))\n            return true;\n\n        string[] parts = domain.Split('.');\n        \n        // Iterate through segments from most specific to least\n        for (int i = 1; i < parts.Length; i++)\n        {\n            string suffix = String.Join(".", parts, i, parts.Length - i);\n            if (_wildcardDomains.ContainsKey(suffix))\n                return true;\n        }\n\n        return false;\n    }\n}\n\n// Usage example:\nclass Program\n{\n    static void Main()\n    {\n        DomainMatcher matcher = new DomainMatcher();\n        matcher.AddEntry("*.example.com");\n        matcher.AddEntry("www.example.com");\n\n        Console.WriteLine(matcher.Matches("www.example.com")); // True\n        Console.WriteLine(matcher.Matches("sub.www.example.com")); // True\n        Console.WriteLine(matcher.Matches("example.com")); // True\n        Console.WriteLine(matcher.Matches("anotherdomain.com")); // False\n    }\n}