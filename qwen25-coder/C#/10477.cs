using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading.Tasks;\n\nclass SimpleProxyServer\n{\n    private static readonly byte[] Buffer = new byte[8192]; // buffer size\n\n    public static async Task HandleClientAsync(TcpClient client)\n    {\n        var networkStream = client.GetStream();\n        try\n        {\n            networkStream.ReadTimeout = 5000; // read timeout in milliseconds\n\n            int bytesRead;\n            if ((bytesRead = await networkStream.ReadAsync(Buffer, 0, Buffer.Length)) > 0)\n            {\n                string requestMessage = System.Text.Encoding.UTF8.GetString(Buffer, 0, bytesRead);\n                Console.WriteLine($"Request: {requestMessage}");\n\n                // Parse HTTP request to get the host and port\n                Uri uri = new Uri(requestMessage.Split('\n')[0].Substring(4).Split(' ')[1]);\n                int targetPort = uri.Port == -1 ? (uri.Scheme == "https" ? 443 : 80) : uri.Port;\n\n                using (TcpClient serverChannel = new TcpClient(uri.Host, targetPort))\n                {\n                    var toServerStream = serverChannel.GetStream();\n\n                    // Relay request\n                    await toServerStream.WriteAsync(Buffer, 0, bytesRead);\n\n                    // Handle response from original server and relay it back to client\n                    while ((bytesRead = await toServerStream.ReadAsync(Buffer, 0, Buffer.Length)) > 0)\n                    {\n                        await networkStream.WriteAsync(Buffer, 0, bytesRead);\n                    }\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            client.Close();\n        }\n    }\n\n    public static async Task Main(string[] args)\n    {\n        TcpListener listener = new TcpListener(IPAddress.Any, 8080); // listen on port 8080\n        listener.Start();\n        Console.WriteLine("Proxy server is running on port 8080...");\n\n        while (true)\n        {\n            var clientSocket = await listener.AcceptTcpClientAsync();\n            _ = HandleClientAsync(clientSocket);\n        }\n    }\n}