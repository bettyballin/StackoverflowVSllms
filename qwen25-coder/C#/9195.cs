using System;\nusing System.Data.SqlClient; // Or your database provider's exception type\nusing System.Web.Mvc;\n\npublic class DinnerController : Controller\n{\n    public ActionResult Edit(int id)\n    {\n        var dinner = GetDinnerById(id);\n        if (dinner == null) return HttpNotFound();\n        return View(dinner);\n    }\n\n    [HttpPost]\n    public ActionResult Edit(Dinner dinner)\n    {\n        try\n        {\n            // Check business rules first\n            foreach (var ruleViolation in dinner.GetRuleViolations())\n                ModelState.AddModelError(String.Empty, ruleViolation.ErrorMessage);\n\n            if (!ModelState.IsValid) return View(dinner);\n\n            SaveDinnerToDatabase(dinner); // Assuming this is your DB save method\n\n            return RedirectToAction("Details", new { id = dinner.DinnerID });\n        }\n        catch (SqlException ex)\n        {\n            // Convert SqlException to friendly messages and add them as errors\n            foreach (SqlError error in ex.Errors)\n                ModelState.AddModelError("", $"Database Error: {error.Message}");\n            \n            // Optionally, you can map specific SQL Errors to Model properties if needed\n            return View(dinner);\n        }\n    }\n\n    private void SaveDinnerToDatabase(Dinner dinner)\n    {\n        // Code that interacts with the database and could throw exceptions\n    }\n\n    private Dinner GetDinnerById(int id)\n    {\n        // Dummy implementation for example purposes\n        return new Dinner { DinnerID = id };\n    }\n}\n\npublic class Dinner\n{\n    public int DinnerID { get; set; }\n    public DateTime EventDate { get; set; }\n\n    public IEnumerable<RuleViolation> GetRuleViolations()\n    {\n        if (string.IsNullOrEmpty(/* Some field */))\n            yield return new RuleViolation(/* error message */);\n        \n        // Add more rules as necessary\n    }\n}\n\npublic class RuleViolation\n{\n    public string ErrorMessage { get; private set; }\n\n    public RuleViolation(string errorMessage)\n    {\n        ErrorMessage = errorMessage;\n    }\n}