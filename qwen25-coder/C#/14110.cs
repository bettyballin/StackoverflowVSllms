using System;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic class CustomAuthorizeAttribute : AuthorizeAttribute\n{\n    protected override void HandleUnauthorizedRequest(AuthorizationContext filterContext)\n    {\n        if (filterContext.HttpContext.User.Identity.IsAuthenticated)\n            base.HandleUnauthorizedRequest(filterContext);\n        else\n            filterContext.Result = new RedirectResult("~/Account/Login");\n    }\n\n    public override void OnAuthorization(AuthorizationContext filterContext)\n    {\n        // Check if session exists and user is authenticated\n        var sessionUser = (UserSession)filterContext.HttpContext.Session["CurrentUser"];\n        if (sessionUser == null || !HttpContext.Current.User.Identity.IsAuthenticated)\n        {\n            HandleUnauthorizedRequest(filterContext);\n            return;\n        }\n\n        // IP check (for demonstration, adjust as needed for your needs)\n        string clientIp = filterContext.RequestContext.HttpContext.Request.UserHostAddress;\n        if (clientIp != sessionUser.IpAddress)\n        {\n            HandleUnauthorizedRequest(filterContext);\n            return;\n        }\n\n        // Check if the user has access to the specific area or resource\n        var requiredPermission = GetRequiredAction(filterContext.ActionDescriptor.ActionName, filterContext.Controller.GetType().Name);\n        bool hasAccess = sessionUser.Permissions.Contains(requiredPermission);\n        \n        if (!hasAccess)\n        {\n            filterContext.Result = new HttpUnauthorizedResult();\n            return;\n        }\n\n        base.OnAuthorization(filterContext);\n    }\n\n    private string GetRequiredAction(string actionName, string controllerName)\n    {\n        // Implement your logic to determine which permission is required for the given action and controller\n        return $"{controllerName}.{actionName}";\n    }\n}\n\npublic class UserSession\n{\n    public int UserId { get; set; }\n    public string Username { get; set; }\n    public string IpAddress { get; set; }\n    public List<string> Permissions { get; set; }\n}