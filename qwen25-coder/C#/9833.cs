using System;\nusing System.IO;\n\npublic class FileLogger\n{\n    private readonly string _filePath;\n    private readonly int _maxFileSize_kb; // maximum size before creating a new file\n\n    public enum LogLevel { Debug, Info, Warning, Error }\n\n    public FileLogger(string filePath, int maxFileSize_kb = 1024)\n    {\n        _filePath = filePath;\n        _maxFileSize_kb = maxFileSize_kb;\n    }\n\n    private void WriteLog(LogLevel level, string category, string message)\n    {\n        var logMessage = $"{DateTime.Now:yyyy-MM-dd HH:mm:ss} [{level}] {category}: {message}{Environment.NewLine}";\n\n        // Check file size and rename if necessary\n        if (File.Exists(_filePath) && new FileInfo(_filePath).Length > _maxFileSize_kb * 1024)\n        {\n            var fileInfo = new FileInfo(_filePath);\n            string newFilePath = Path.Combine(fileInfo.DirectoryName, $"{fileInfo.Name}_backup_{DateTime.Now.ToString("yyyyMMddHHmmss")}.log");\n            File.Move(_filePath, newFilePath);\n        }\n\n        // Write to the log file\n        File.AppendAllText(_filePath, logMessage);\n    }\n\n    public void Log(string category, LogLevel level, string message)\n    {\n        WriteLog(level, category, message);\n    }\n}