using System;\nusing System.ComponentModel;\nusing System.IO;\nusing System.Data.SqlClient;\n\npublic partial class MainForm : Form\n{\n    private BackgroundWorker _importWorker = new BackgroundWorker();\n\n    public MainForm()\n    {\n        InitializeComponent();\n        // Configure background worker\n        _importWorker.WorkerReportsProgress = true;\n        _importWorker.DoWork += ImportWorker_DoWork;\n        _importWorker.ProgressChanged += ImportWorker_ProgressChanged;\n        _importWorker.RunWorkerCompleted += ImportWorker_RunWorkerCompleted;\n    }\n\n    private void StartImportButton_Click(object sender, EventArgs e)\n    {\n        if (!_importWorker.IsBusy)\n        {\n            _importWorker.RunWorkerAsync(filePathTextBox.Text); // Pass file path as argument\n        }\n    }\n\n    private void ImportWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        string filePath = (string)e.Argument;\n        int totalLines = File.ReadAllLines(filePath).Length; // Count lines for progress calculation\n\n        using (SqlConnection connection = new SqlConnection("your_connection_string_here"))\n        {\n            connection.Open();\n\n            foreach (var line in File.ReadLines(filePath))\n            {\n                if (!_importWorker.CancellationPending)\n                {\n                    string[] parts = line.Split(',');\n                    InsertRowIntoDatabase(connection, parts);\n\n                    // Report progress\n                    _importWorker.ReportProgress((int)((float)(totalLines / File.ReadAllLines(filePath).Length) * 100));\n                }\n                else\n                {\n                    e.Cancel = true;\n                    return;\n                }\n            }\n        }\n\n        e.Result = "Import completed successfully"; // Result to pass to RunWorkerCompleted\n    }\n\n    private void InsertRowIntoDatabase(SqlConnection connection, string[] parts)\n    {\n        using (var command = new SqlCommand("INSERT INTO your_table_name VALUES (@Col1, @Col2)", connection))\n        {\n            // Example parameters binding\n            command.Parameters.AddWithValue("@Col1", parts[0]);\n            command.Parameters.AddWithValue("@Col2", parts[1]);\n\n            command.ExecuteNonQuery();\n        }\n    }\n\n    private void ImportWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n    {\n        progressBar.Value = e.ProgressPercentage;\n    }\n\n    private void ImportWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        if (e.Cancelled)\n        {\n            MessageBox.Show("Import cancelled.");\n        }\n        else if (e.Error != null)\n        {\n            MessageBox.Show("Error during import: " + e.Error.Message);\n        }\n        else\n        {\n            MessageBox.Show(e.Result as string);\n        }\n    }\n}