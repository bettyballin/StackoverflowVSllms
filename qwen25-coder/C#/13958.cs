public static double SquareRoot(double x) {\n    if (x < 0) throw new ArgumentException("Cannot take square root of negative number");\n    if (x == 0) return 0;\n\n    // Use bitwise operations to get a better initial guess\n    long i;\n    double y = x;\n    unsafe {\n        double* pflt = &y;\n        i = *(long*)pflt; // Interpret y as a long\n        i += (1L << 52) / -3; // Improve accuracy using bit manipulation\n        y = *((double*)&i);\n    }\n\n    double last = y;\n    double epsilon = 1e-10; // Precision level for convergence\n\n    while (true) {\n        y = (y + x / y) / 2;\n        if (Math.Abs(y - last) < epsilon)\n            break;\n        last = y;\n    }\n\n    return y;\n}