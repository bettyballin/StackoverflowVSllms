using Microsoft.TeamFoundation.Client;\nusing Microsoft.TeamFoundation.VersionControl.Client;\n\npublic void GetDeletedFiles(string tfsUri, string projectPath)\n{\n    // Connect to TFS server and get the Version Control service.\n    var tfs = TfsTeamProjectCollectionFactory.GetTeamProjectCollection(new Uri(tfsUri));\n    tfs.Authenticate();\n    \n    var versionControlServer = (VersionControlServer)tfs.GetService(typeof(VersionControlServer));\n\n    // Get a list of changes that include only deletes.\n    Change[] history = versionControlServer.QueryHistory(\n        projectPath,\n        VersionSpec.Latest,\n        0,\n        RecursionType.Full,\n        null,                    // user\n        new ChangesetVersionSpec(1), // from version\n        new ChangesetVersionSpec(Int32.MaxValue), // to version\n        Int32.MaxValue,           // max count\n        false,                   // generate diff URLs\n        true                     // include merges\n    ).Cast<Changeset>().SelectMany(c => c.Changes).Where(change => change.ChangeType.HasFlag(ChangeType.Delete)).ToArray();\n\n    foreach (var change in history)\n    {\n        Console.WriteLine($"Deleted file: {change.Item.ServerItem} in changeset {change.ChangesetId}");\n    }\n}