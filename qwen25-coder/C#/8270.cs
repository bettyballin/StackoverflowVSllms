using System;\nusing System.Runtime.InteropServices;\n\npublic class ParallelPortAccess\n{\n    // Import the inpout32.dll functions\n    [DllImport("inpout32.dll", EntryPoint = "Out32")]\n    private static extern void Output(int address, int value);\n\n    [DllImport("inpout32.dll", EntryPoint = "Inp32")]\n    private static extern int Input(int address);\n\n    // Parallel port base addresses (LPT1 is typically 0x378)\n    public const int LPT1_BASE_ADDRESS = 0x378;\n\n    public void WriteDataToParallelPort(byte dataToSend)\n    {\n        Output(LPT1_BASE_ADDRESS, dataToSend);\n    }\n\n    public byte ReadDataFromParallelPort()\n    {\n        return (byte)Input(LPT1_BASE_ADDRESS + 0); // Data Register\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ParallelPortAccess portAccess = new ParallelPortAccess();\n        \n        // Sending data to the parallel port\n        byte dataToSend = 0x0A; // Example byte value\n        portAccess.WriteDataToParallelPort(dataToSend);\n        Console.WriteLine("Sent data: " + Convert.ToString(dataToSend, 2));\n\n        // Receiving data from the parallel port\n        byte receivedData = portAccess.ReadDataFromParallelPort();\n        Console.WriteLine("Received data: " + Convert.ToString(receivedData, 2));\n    }\n}