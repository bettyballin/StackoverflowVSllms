public abstract class CachedRepositoryBase {\n    private readonly ICacheProvider _cacheProvider;\n\n    protected CachedRepositoryBase(ICacheProvider cacheProvider) {\n        _cacheProvider = cacheProvider;\n    }\n\n    protected T GetData<T>(string key, Func<T> getDataFunc, int cacheDurationInSeconds) {\n        if (_cacheProvider.IsInCache(key)) {\n            return _cacheProvider.Get<T>(key);\n        }\n        var data = getDataFunc();\n        _cacheProvider.Set(key, data, cacheDurationInSeconds);\n        return data;\n    }\n}