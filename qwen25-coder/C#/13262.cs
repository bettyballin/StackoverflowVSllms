using System;\nusing System.Collections.Concurrent;\nusing System.Threading;\n\npublic class ComObjectThreadHandler\n{\n    private readonly ConcurrentQueue<Action<YourComObjectType>> _actionQueue = new ConcurrentQueue<Action<YourComObjectType>>();\n    private BackgroundWorker _backgroundWorker;\n    private YourComObjectType _yourComObject;\n\n    public ComObjectThreadHandler()\n    {\n        Initialize();\n    }\n\n    private void Initialize()\n    {\n        // Create the COM object.\n        _yourComObject = new YourComObjectType(); \n\n        _backgroundWorker = new BackgroundWorker\n        {\n            WorkerReportsProgress = false,\n            WorkerSupportsCancellation = true\n        };\n        \n        _backgroundWorker.DoWork += BackgroundWorker_DoWork;\n\n        // Start the background worker thread.\n        _backgroundWorker.RunWorkerAsync();\n    }\n\n    private void BackgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        while (!_backgroundWorker.CancellationPending)\n        {\n            if (_actionQueue.TryDequeue(out var action))\n            {\n                try\n                {\n                    action?.Invoke(_yourComObject);\n                }\n                catch (Exception ex)\n                {\n                    // Handle exceptions as needed.\n                    Console.WriteLine(ex.ToString());\n                }\n            }\n\n            Thread.Sleep(100);  // Avoid busy-waiting.\n        }\n\n        e.Cancel = true;\n    }\n\n    public void Execute(Action<YourComObjectType> action)\n    {\n        _actionQueue.Enqueue(action);\n    }\n\n    public void Stop()\n    {\n        _backgroundWorker.CancelAsync();\n        \n        // Optional: Wait for the worker thread to finish any remaining actions before exiting.\n        while (_backgroundWorker.IsBusy) Thread.Sleep(100);\n    }\n}\n\n// Usage example:\npublic class Program\n{\n    static void Main(string[] args)\n    {\n        var comObjectThreadHandler = new ComObjectThreadHandler();\n\n        comObjectThreadHandler.Execute(comObj =>\n        {\n            // Perform actions on the COM object.\n            comObj.SomeMethod();\n        });\n\n        Thread.Sleep(500);  // Give some time for actions to process.\n\n        comObjectThreadHandler.Stop();  // Clean exit\n    }\n}