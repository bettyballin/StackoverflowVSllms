using System;\nusing System.Text;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("user32.dll", SetLastError = true)]\n    static extern IntPtr FindWindowEx(IntPtr parentHandle, IntPtr childAfter, string className, string windowTitle);\n\n    [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern int GetWindowText(IntPtr hWnd, StringBuilder text, int count);\n\n    [DllImport("kernel32.dll")]\n    private static extern uint GetLastError();\n\n    const int MaxLength = 1024;\n\n    static void Main()\n    {\n        IntPtr hwndParent = IntPtr.Zero;\n        IntPtr hwndChildAfter = IntPtr.Zero;\n        string windowTitleSearchCriteria = "Window Title -";\n\n        while (true)\n        {\n            IntPtr hWnd = FindWindowEx(hwndParent, hwndChildAfter, null, windowTitleSearchCriteria);\n\n            if (hWnd == IntPtr.Zero) break;\n\n            StringBuilder title = new StringBuilder(MaxLength);\n            int retVal = GetWindowText(hWnd, title, MaxLength);\n\n            if (retVal > 0 && title.ToString().StartsWith(windowTitleSearchCriteria))\n            {\n                Console.WriteLine("Window found with handle: " + hWnd);\n                // Break or continue as needed depending on your use case\n                break;\n            }\n\n            hwndChildAfter = hWnd; // Move to next window\n        }\n    }\n}