using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("mscorwks.dll", CharSet = CharSet.Unicode, ExactSpelling = true)]\n    static extern int CLRCreateInstance(ref Guid clsid, ref Guid riid, out IntPtr ppInterface);\n\n    private static readonly Guid CLSID_CLRMetaHostPolicy = new Guid(0x9280188D_0E8E_4867_B308_D9AAE7DFC85B);\n    private static readonly Guid IID_ICLRMetaHostPolicy = new Guid(0xc989ccfd_9b9e_4a7d_a53c_c513632b6cbb);\n\n    static void Main()\n    {\n        IntPtr pCLRMetaHostPolicy;\n        int hr = CLRCreateInstance(ref CLSID_CLRMetaHostPolicy, ref IID_ICLRMetaHostPolicy, out pCLRMetaHostPolicy);\n        if (hr >= 0)\n        {\n            // Successfully created an instance of ICLRMetaHostPolicy\n            // You can proceed to use this interface to get information about AppDomains.\n            // For simplicity, we'll just enumerate using System.Diagnostics.Process and app domain APIs.\n\n            Console.WriteLine("Enumerating AppDomains for the current process:");\n            foreach (var domain in System.AppDomain.CurrentDomain.GetAssemblies())\n            {\n                Console.WriteLine(domain.FullName);\n            }\n        }\n        else\n        {\n            Console.WriteLine($"Failed to create CLRMetaHostPolicy instance. Error code: {hr}");\n        }\n\n        // Alternatively, if you want to enumerate all AppDomains in the current process:\n        foreach (System.AppDomain domain in System.AppDomain.GetAllDomains())\n        {\n            Console.WriteLine($"AppDomain: {domain.FriendlyName}, ID: {domain.Id}");\n        }\n    }\n}