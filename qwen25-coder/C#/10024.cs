public class Student {\n    public string Name { get; set; }\n    // other properties...\n    public void UpdateStatus(string newStatus) {\n        // update student status\n    }\n}\n\npublic class ServerModel : INotifyPropertyChanged {\n    private List<Student> students;\n    private bool isOnline;\n\n    public ServerModel() {\n        students = new List<Student>();\n    }\n\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null) {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    // add student, remove student etc.\n    public void AddStudent(Student student) {\n        students.Add(student);\n        OnPropertyChanged(nameof(Students));\n    }\n\n    public void UpdateStudent(Student student, string status) {\n        var targetStudent = students.FirstOrDefault(s => s.Name == student.Name);\n        if (targetStudent != null) {\n            targetStudent.UpdateStatus(status);\n            OnPropertyChanged(nameof(Students));\n        }\n    }\n\n    // other server related functions...\n}\n\npublic class ServerController {\n    private ServerModel model;\n\n    public ServerController(ServerModel model) {\n        this.model = model;\n    }\n\n    public void ChangeStudentStatus(Student student, string status) {\n        model.UpdateStudent(student, status);\n    }\n\n    // other controller methods...\n}\n\npublic class MainView {\n    private ServerController controller;\n    private ServerModel model;\n\n    public MainView(ServerModel model, ServerController controller) {\n        this.model = model;\n        this.controller = controller;\n        model.PropertyChanged += ModelOnPropertyChanged;\n    }\n\n    private void ModelOnPropertyChanged(object sender, PropertyChangedEventArgs e) {\n        if (e.PropertyName == nameof(model.Students)) {\n            // Update view to reflect the list of students\n        }\n    }\n\n    public void StudentChanged(Student student, string newStatus) {\n        controller.ChangeStudentStatus(student, newStatus);\n    }\n\n    // other methods...\n}