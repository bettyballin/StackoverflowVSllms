using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\npublic class CryptoHelper\n{\n    public static void EncryptFile(string inputFile, string outputFile, byte[] key, byte[] iv)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = key;\n            aesAlg.IV = iv;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n            using (CryptoStream csEncrypt = new CryptoStream(fsOutput, encryptor, CryptoStreamMode.Write))\n            using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n            {\n                fsInput.CopyTo(csEncrypt);\n            }\n        }\n    }\n\n    public static void DecryptFile(string inputFile, string outputFile, byte[] key, byte[] iv)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = key;\n            aesAlg.IV = iv;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n            using (CryptoStream csDecrypt = new CryptoStream(fsInput, decryptor, CryptoStreamMode.Read))\n            using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n            {\n                csDecrypt.CopyTo(fsOutput);\n            }\n        }\n    }\n\n    public static byte[] GenerateRandomBytes(int length)\n    {\n        var random = RandomNumberGenerator.Create();\n        byte[] data = new byte[length];\n        random.GetBytes(data);\n        return data;\n    }\n}\n\n// Usage example\nclass Program\n{\n    static void Main()\n    {\n        string inputFile = "data.protobuf";\n        string encryptedFile = "data_encrypted.protobuf";\n        string decryptedFile = "data_decrypted.protobuf";\n\n        // Generate a random key and IV for AES encryption\n        byte[] key = CryptoHelper.GenerateRandomBytes(32); // 256-bit key\n        byte[] iv = CryptoHelper.GenerateRandomBytes(16);  // 128-bit IV\n\n        // Encrypt the ProtoBuf file\n        CryptoHelper.EncryptFile(inputFile, encryptedFile, key, iv);\n\n        // Decrypt the ProtoBuf file\n        CryptoHelper.DecryptFile(encryptedFile, decryptedFile, key, iv);\n    }\n}