using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesExampleDotNet {\n    public static void Main() {\n        string original = "Here is some data to encrypt!";\n        \n        using (Aes myAes = Aes.Create()) {\n            byte[] encrypted = EncryptStringToBytes_Aes(original, myAes.Key, myAes.IV);\n            \n            string roundtrip = DecryptStringFromBytes_Aes(encrypted, myAes.Key, myAes.IV);\n\n            Console.WriteLine($"Original:   {original}");\n            Console.WriteLine($"Round Trip: {roundtrip}");\n        }\n    }\n\n    static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV) {\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream()) {\n                using (CryptoStream csEncrypt =\n                    new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)) {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt)) {\n                        swEncrypt.Write(plainText);\n                    }\n                    return msEncrypt.ToArray();\n                }\n            }\n        }\n    }\n\n    static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV) {\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText)) {\n                using (CryptoStream csDecrypt =\n                    new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)) {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt)) {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}