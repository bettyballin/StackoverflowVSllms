public class MyController : Controller\n{\n    public ActionResult GetData()\n    {\n        var data = GetMyData(); // Assume this method fetches your data model\n\n        if (Request.IsAjaxRequest()) // If it's an AJAX request, return JSON\n        {\n            return Json(data, JsonRequestBehavior.AllowGet);\n        }\n\n        switch (Request.Headers["Accept"])\n        {\n            case "application/xml":\n                return new XmlResult(data);\n            case "text/xml":\n                return new XmlResult(data);\n            case "application/json":\n                return Json(data, JsonRequestBehavior.AllowGet);\n            default:\n                // Return HTML by default\n                ViewBag.Data = data;\n                return View();\n        }\n    }\n\n    private object GetMyData()\n    {\n        // Logic to fetch your data\n        return new { Message = "Hello, World!" };\n    }\n}\n\npublic class XmlResult : ActionResult\n{\n    public XmlResult(object data)\n    {\n        Data = data;\n    }\n\n    public object Data { get; set; }\n\n    public override void ExecuteResult(ControllerContext context)\n    {\n        if (context == null) throw new ArgumentNullException("context");\n\n        var response = context.HttpContext.Response;\n        response.ContentType = "application/xml";\n\n        using (var writer = XmlWriter.Create(response.Output))\n           (new System.Web.Script.Serialization.JavaScriptSerializer()).Serialize(Data, writer);\n    }\n}