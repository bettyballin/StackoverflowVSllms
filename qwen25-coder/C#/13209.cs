using System;\nusing System.Net;\nusing System.Net.Mail;\nusing System.Timers;\n\npublic class ServiceMonitor\n{\n    private Timer _timer;\n    private string[] _serviceUrls = new string[]\n    {\n        "http://company1/service1/health",\n        "http://company1/service2/health",\n        "http://company2/service1/health",\n        // Add more URLs as necessary\n    };\n\n    public ServiceMonitor()\n    {\n        _timer = new Timer(60000); // Check every 60 seconds\n        _timer.Elapsed += OnTimedEvent;\n        _timer.Start();\n    }\n\n    private void OnTimedEvent(Object source, ElapsedEventArgs e)\n    {\n        foreach (var url in _serviceUrls)\n        {\n            var status = GetServiceStatus(url);\n            UpdateUI(url, status);\n            if (!status.Equals("Green", StringComparison.OrdinalIgnoreCase))\n                SendAlert(url, status);\n        }\n    }\n\n    private string GetServiceStatus(string url)\n    {\n        try\n        {\n            using (var client = new WebClient())\n            {\n                var response = client.DownloadString(url);\n                // Assume the service returns "Healthy" or similar for good health\n                return response.Contains("Healthy") ? "Green" : "Red";\n            }\n        }\n        catch\n        {\n            return "Red"; // Consider any exception as a failure\n        }\n    }\n\n    private void UpdateUI(string url, string status)\n    {\n        // Logic to update UI elements\n        Console.WriteLine($"{url} - {status}");\n        // Example: Set label color or text in the UI thread\n    }\n\n    private void SendAlert(string url, string status)\n    {\n        var mail = new MailMessage("alert@yourcompany.com", "admin@yourcompany.com")\n        {\n            Subject = $"Service Alert",\n            Body = $"{url} is currently {status}"\n        };\n        using (var smtpClient = new SmtpClient("smtp.yourmailserver.com"))\n        {\n            smtpClient.Send(mail);\n        }\n    }\n\n    public static void Main()\n    {\n        new ServiceMonitor();\n        Console.ReadLine(); // Keep the console open\n    }\n}