public class AppConfig\n{\n    public string LogFileName { get; set; }\n    public int TransactionTimeout { get; set; }\n    public int SleepTimeInMilliseconds { get; set; }\n    public string CompanyName { get; set; }\n}\n\npublic interface IConfigProvider\n{\n    AppConfig GetConfig();\n}\n\npublic class ConfigProvider : IConfigProvider\n{\n    private readonly IConfiguration _configuration;\n\n    public ConfigProvider(IConfiguration configuration)\n    {\n        _configuration = configuration;\n    }\n\n    public AppConfig GetConfig()\n    {\n        return new AppConfig\n        {\n            LogFileName = _configuration["LogFileName"],\n            TransactionTimeout = int.Parse(_configuration["TransactionTimeout"]),\n            SleepTimeInMilliseconds = int.Parse(_configuration["SleepTimeInMilliseconds"]),\n            CompanyName = _configuration["CompanyName"]\n        };\n    }\n}\n\n[Fact]\npublic void should_log_to_correct_file()\n{\n    var mockConfigProvider = new Mock<IConfigProvider>();\n    mockConfigProvider.Setup(mock => mock.GetConfig()).Returns(new AppConfig\n    {\n        LogFileName = @"\\Traces\App208.txt"\n    });\n\n    var logger = new Logger(mockConfigProvider.Object);\n    logger.WriteLog("test");\n\n    Assert.True(File.Exists(@"\\Traces\App208.txt"));\n}