protected override void OnInit(EventArgs e)\n{\n    base.OnInit(e);\n    FirstView(); // Add initial set of controls here\n}\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n    if (!IsPostBack)\n    {\n        // If not a postback, initialize controls again (if needed, based on your logic)\n        // This is typically handled in OnInit for dynamic controls.\n    }\n}\n\nprivate void FirstView()\n{\n    // Your initial control creation logic\n    Button btnComments = new Button();\n    btnComments.ID = "mybtnComments" + someUniqueIdentifier); // Ensure unique ID\n    btnComments.Text = "Some Text"; // Example text\n    phBlog.Controls.Add(btnComments);\n    btnComments.CommandArgument = "someCommandArg"; // Set command argument if needed\n    btnComments.Command += new CommandEventHandler(Button1_Click);\n}\n\nprivate void CommentView(string ID)\n{\n    // Your logic to create comment-related controls\n    Button btnCommentSave = new Button();\n    btnCommentSave.ID = "mySavebtnComments" + someUniqueIdentifier; // Ensure unique ID\n    btnCommentSave.Text = "Publish";\n    phBlog.Controls.Add(btnCommentSave);\n    btnCommentSave.CommandArgument = row["ID"].ToString(); // Set command argument if needed\n    btnCommentSave.Click += new EventHandler(btnSave_Click); // Use Click event for saving\n}\n\nprotected void Button1_Click(object sender, CommandEventArgs e)\n{\n    CommentView(e.CommandArgument.ToString());\n}\n\nprotected void btnSave_Click(object sender, EventArgs e)\n{\n    // Handle save logic\n}