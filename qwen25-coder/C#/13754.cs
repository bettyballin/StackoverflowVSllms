using System;\n\npublic class TaskScheduler\n{\n    public static DateTime CalculateNextRunTime(DateTime startSeed, TimeSpan frequency)\n    {\n        // Get the current time\n        DateTime now = DateTime.UtcNow;\n        \n        // Convert both startSeed and now to TimeSpan since a common epoch (e.g., midnight of January 1, 0001)\n        TimeSpan seedTimeSinceEpoch = startSeed - DateTime.MinValue;\n        TimeSpan currentTimeSinceEpoch = now - DateTime.MinValue;\n\n        // Calculate the number of full frequency periods that have passed since the start seed\n        long cyclesPassed = (long)Math.Floor((currentTimeSinceEpoch - seedTimeSinceEpoch).TotalMilliseconds / frequency.TotalMilliseconds);\n        \n        // Calculate the next execution time by adding one more cycle to the last completed cycle's time\n        DateTime nextRunTime = startSeed + TimeSpan.FromMilliseconds(cyclesPassed * frequency.TotalMilliseconds) + frequency;\n        \n        return nextRunTime;\n    }\n}\n\n// Example usage:\nDateTime seedDate = new DateTime(2018, 6, 15, 9, 30, 0); // Example start seed\nTimeSpan taskFrequency = TimeSpan.FromHours(1); // Task runs every hour\n\nDateTime nextRun = TaskScheduler.CalculateNextRunTime(seedDate, taskFrequency);\nConsole.WriteLine("Next run time: " + nextRun);