using System;\nusing System.IO;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\n\npublic class RequestDuplicatorEndpointBehavior : IEndpointBehavior\n{\n    private readonly string _devServiceAddress;\n\n    public RequestDuplicatorEndpointBehavior(string devServiceAddress)\n    {\n        _devServiceAddress = devServiceAddress;\n    }\n\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)\n    {\n\n    }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n    {\n\n    }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)\n    {\n        endpointDispatcher.DispatchRuntime.MessageInspectors.Add(new CopyToDevChannelInspector(_devServiceAddress));\n    }\n\n    public void Validate(ServiceEndpoint endpoint)\n    {\n\n    }\n}\n\npublic class CopyToDevChannelInspector : IDispatchMessageInspector\n{\n    private readonly ChannelFactory<IMessageCopy> _channelFactory;\n    private IMessageCopy _messageCopyClient;\n\n    public CopyToDevChannelInspector(string devServiceAddress)\n    {\n        BasicHttpBinding binding = new BasicHttpBinding();\n        EndpointAddress address = new EndpointAddress(devServiceAddress);\n        _channelFactory = new ChannelFactory<IMessageCopy>(binding, address);\n        _messageCopyClient = _channelFactory.CreateChannel();\n    }\n\n    public object AfterReceiveRequest(ref Message request, IClientChannel channel, InstanceContext instanceContext)\n    {\n        // Duplicate the message to send a copy\n        MessageBuffer buffer = request.CreateBufferedCopy(int.MaxValue);\n        request = buffer.CreateMessage();\n\n        var copierRequest = buffer.CreateMessage();\n        _messageCopyClient.SendCopy(copierRequest);\n\n        return null;\n    }\n\n    public void BeforeSendReply(ref Message reply, object correlationState)\n    {\n        \n    }\n}\n\n// Define a simple contract for sending copies\n[ServiceContract]\npublic interface IMessageCopy\n{\n    [OperationContract(Action = "*", IsOneWay = true)]\n    void SendCopy(Message message);\n}