using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Oracle.ManagedDataAccess.Client; // Make sure to include this namespace\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = "YourConnectionStringHere";\n        string scriptPath = @"C:\path\to\yourscript.sql";\n\n        using (OracleConnection connection = new OracleConnection(connectionString))\n        {\n            connection.Open();\n            ExecuteScript(connection, scriptPath);\n        }\n    }\n\n    private static void ExecuteScript(OracleConnection conn, string filePath)\n    {\n        var sqlStatements = ReadSqlFile(filePath);\n\n        foreach (var statement in sqlStatements)\n        {\n            using (OracleCommand command = new OracleCommand(statement, conn))\n            {\n                try\n                {\n                    command.ExecuteNonQuery();\n                }\n                catch (Exception ex)\n                {\n                    // Handle exceptions here, e.g., log them or throw with more context\n                    Console.WriteLine("Error executing SQL statement: " + ex.Message);\n                }\n            }\n        }\n    }\n\n    private static List<string> ReadSqlFile(string filePath)\n    {\n        var sqlStatements = new List<string>();\n        using (StreamReader reader = new StreamReader(filePath))\n        {\n            string commandText = "";\n            string input;\n            while ((input = reader.ReadLine()) != null)\n            {\n                if (string.IsNullOrEmpty(input.Trim()))\n                    continue;\n\n                commandText += input + "\n";\n\n                // Assuming that each statement ends with a semicolon\n                if (commandText.EndsWith(";\n"))\n                {\n                    sqlStatements.Add(commandText.TrimEnd(';', '\n'));\n                    commandText = "";\n                }\n            }\n\n            // Add the last statement, in case it doesn't end with a newline character\n            if (!string.IsNullOrEmpty(commandText.Trim()))\n            {\n                sqlStatements.Add(commandText.Trim());\n            }\n        }\n\n        return sqlStatements;\n    }\n}