class PoleDisplay : SerialPort\n{\n    private SerialPort srPort = null;\n\n    public PoleDisplay()\n    {\n        try\n        {\n            srPort = new SerialPort("COM1", 9600, Parity.None, 8, StopBits.One);\n            if (!srPort.IsOpen) srPort.Open();\n        }\n        catch { /* Log this error or handle appropriately */ }\n    }\n\n    ~PoleDisplay()\n    {\n        srPort.Close();\n    }\n\n    // Command to clear display, assuming "\x0C" is the clear command for your pole display\n    public void ClearDisplay()\n    {\n        srPort.Write("\x0C");\n    }\n\n    // Display Function \n    //'line' 1 for First line and 2 For second line (assuming single byte commands)\n    public void Display(string textToDisplay, int line)\n    {\n        switch (line)\n        {\n            case 1:\n                srPort.Write(new byte[] { 0x80 }, 0, 1); // Assuming command to move cursor to first line\n                break;\n            case 2:\n                srPort.Write(new byte[] { 0xC0 }, 0, 1); // Assuming command to move cursor to second line\n                break;\n        }\n        srPort.Write(textToDisplay);\n    }\n\n    // Proper exception handling and resource management are critical for serial communications\n    public void Close()\n    {\n        if (srPort != null && srPort.IsOpen)\n            srPort.Close();\n    }\n}