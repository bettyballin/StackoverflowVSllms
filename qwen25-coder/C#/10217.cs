using System;\nusing System.IO;\n\npublic class LogFileReader\n{\n    private string _filePath;\n    private long _lastReadPosition;\n\n    public LogFileReader(string filePath)\n    {\n        _filePath = filePath;\n        _lastReadPosition = 0; // Start reading from the beginning\n    }\n\n    public void ReadNewLines()\n    {\n        using (FileStream fileStream = new FileStream(_filePath, FileMode.Open, FileAccess.Read, FileShare.Delete | FileShare.ReadWrite))\n        {\n            fileStream.Seek(_lastReadPosition, SeekOrigin.Begin); // Move to last read position\n\n            using (StreamReader reader = new StreamReader(fileStream))\n            {\n                string line;\n                while ((line = reader.ReadLine()) != null)\n                {\n                    ProcessLine(line);\n                    _lastReadPosition = fileStream.Position; // Update position after each line\n                }\n            }\n        }\n    }\n\n    private void ProcessLine(string line)\n    {\n        Console.WriteLine(line); // Or whatever processing you need to do with the line\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        LogFileReader reader = new LogFileReader("path_to_your_log_file.log");\n\n        while (true)\n        {\n            try\n            {\n                reader.ReadNewLines();\n            }\n            catch (FileNotFoundException) { }\n            catch (IOException) { } // Catch when file is being written to\n\n            System.Threading.Thread.Sleep(5000); // Wait for 5 seconds before reading again\n        }\n    }\n}