private List<int> ShiftPath(List<int> oldPath, int shift)\n{\n    // Find the index of the pivot point\n    int pivotIndex = oldPath.IndexOf(shift);\n    \n    if (pivotIndex == -1) {\n        throw new ArgumentException("The shift number is not found in the list.");\n    }\n\n    // Create a new list with the first part and then add reversed part from the pivot\n    List<int> newPath = new List<int>();\n    newPath.AddRange(oldPath.Take(pivotIndex + 1)); // Take everything up to and including the pivot\n    \n    // Add the reversed portion of the list starting after pivot to the end before pivot\n    for (int i = oldPath.Count - 1; i > pivotIndex; i--)\n    {\n        newPath.Add(oldPath[i]);\n    }\n    \n    return newPath;\n}