private void SendEmailAsync(MailMessage mail)\n{\n    using (var smtpClient = new SmtpClient())\n    {\n        // Configure SMTP client...\n        smtpClient.SendCompleted += OnSendCompleted;\n        smtpClient.SendMailAsync(mail, mail); // Passing MailMessage object as user state\n    }\n}\n\nprivate void OnSendCompleted(object sender, System.ComponentModel.AsyncCompletedEventArgs e)\n{\n    var mail = (MailMessage)e.UserState;\n\n    if (e.Error != null)\n    {\n        Console.WriteLine($"Error: {e.Error.Message}");\n    }\n\n    try\n    {\n        // Dispose attachments\n        for (int i = mail.Attachments.Count - 1; i >= 0; i--)\n        {\n            var attachment = mail.Attachments[i];\n            attachment.Dispose();\n            mail.Attachments.Remove(attachment);\n        }\n        \n        // Optionally, dispose the MailMessage itself\n        mail.Dispose();\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine($"Error disposing of attachments: {ex.Message}");\n    }\n}