using System;\nusing System.Linq.Expressions;\n\npublic class EmployeeFields\n{\n    public static readonly Expression<Func<Employee, decimal>> Salary = e => e.Salary;\n}\n\npublic class Employee\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public decimal Salary { get; set; }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        // The expression itself.\n        Expression<Func<Employee, bool>> predicate = e => e.Salary > 50000;\n        \n        // This is equivalent to what you see in the ORM call but more detailed\n        var parameter = Expression.Parameter(typeof(Employee), "e");\n        var salaryProperty = Expression.Property(parameter, "Salary");\n        var constant = Expression.Constant(50000.0m);\n        var greaterThan = Expression.GreaterThan(salaryProperty, constant);\n\n        // The final expression: e => e.Salary > 50000\n        var expression = Expression.Lambda<Func<Employee, bool>>(greaterThan, parameter);\n\n        // This is what might be passed to the ORM\n        Console.WriteLine(expression);\n    }\n}