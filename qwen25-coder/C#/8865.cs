using System;\nusing System.Reflection;\nusing System.Security;\nusing System.Security.Permissions;\n\npublic class UntrustedCodeExecutor\n{\n    public void ExecuteUntrustedAssembly(byte[] assemblyBytes)\n    {\n        // Create a new AppDomain\n        var appDomainSetup = new AppDomainSetup();\n        appDomainSetup.ApplicationBase = AppDomain.CurrentDomain.BaseDirectory;\n        \n        // Set up permissions and security policy\n        var permissionSet = new PermissionSet(PermissionState.None);\n        permissionSet.AddPermission(new SecurityPermission(SecurityPermissionFlag.Execution));\n        // Add more permissions as necessary, keeping them as limited as possible\n\n        var appDomain = AppDomain.CreateDomain("UntrustedCodeDomain", null, appDomainSetup, permissionSet);\n\n        try\n        {\n            // Load and execute the untrusted assembly in the new AppDomain\n            var assemblyName = (AssemblyName)appDomain.ExecuteAssembly(assemblyBytes);\n            Console.WriteLine($"Assembly {assemblyName} executed successfully.");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Failed to execute assembly: " + ex.Message);\n        }\n        finally\n        {\n            // Unload the AppDomain after execution\n            AppDomain.Unload(appDomain);\n        }\n    }\n}