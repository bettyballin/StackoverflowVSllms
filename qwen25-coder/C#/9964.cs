using System;\nusing System.IO;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string fileAPath = @"C:\Projects\YourProject\FileA.txt";\n        string fileBPath = @"C:\ThirParty\SomeLibrary.dll";\n\n        try\n        {\n            string relativePath = GetRelativePath(fileAPath, fileBPath);\n            Console.WriteLine("Relative Path: " + relativePath);\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n\n    public static string GetRelativePath(string fromFilePath, string toFilePath)\n    {\n        var fromUri = new Uri(fromFilePath);\n        var toUri = new Uri(toFilePath);\n\n        // Find the path\n        if (fromUri.Scheme.Equals(toUri.Scheme))\n        {\n            Uri relativeUri = fromUri.MakeRelativeUri(toUri);\n            string relativePath = Uri.UnescapeDataString(relativeUri.ToString());\n\n            if (toUri.Scheme.Equals(Uri.UriSchemeFile, StringComparison.InvariantCultureIgnoreCase))\n            {\n                relativePath = relativePath.Replace(Path.AltDirectorySeparatorChar, Path.DirectorySeparatorChar);\n            }\n\n            return relativePath;\n        }\n\n        throw new ArgumentException($"Paths {fromFilePath} and {toFilePath} are not on the same drive");\n    }\n}