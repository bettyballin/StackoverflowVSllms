using System;\nusing System.Runtime.InteropServices;\n\nclass DeviceEnumerator\n{\n    [DllImport("Setupapi.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern IntPtr SetupDiGetClassDevs(ref Guid classGuid,\n                                             IntPtr enumerator,\n                                             IntPtr hwndParent,\n                                             DiGetClassFlags flags);\n\n    [DllImport("SetupAPI.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern bool SetupDiEnumDeviceInfo(IntPtr deviceInfoSet,\n                                                int memberIndex,\n                                                ref SpDevinfoData deviceInfoData);\n\n    [DllImport("setupapi.dll", CallingConvention = CallingConvention.Winapi, CharSet = CharSet.Auto, SetLastError = true)]\n    private static extern IntPtr CM_Create_DevNodeA(\n        out uint pdnDevInst,\n        out char[] pszPathNameBuffer,\n        uint ulFlags\n    );\n\n    const int ERROR_NO_MORE_ITEMS = 128;\n    const int DIGCF_PRESENT = 0x02;\n    const int MAX_PATH = 260;\n\n    static void Main()\n    {\n        Guid guidDevClassUSB = new Guid("A5DCBF10-6530-11D2-901F-00C04FB951ED"); // USB devices\n        IntPtr deviceInfoSet = SetupDiGetClassDevs(ref guidDevClassUSB, IntPtr.Zero, IntPtr.Zero, DiGetClassFlags.DIGCF_DEVICEINTERFACE | DIGCF_PRESENT);\n\n        SpDevinfoData deviceInfoData = new SpDevinfoData();\n        deviceInfoData.cbSize = Marshal.SizeOf(deviceInfoData);\n\n        bool success;\n        for (int i = 0; true; i++)\n        {\n            success = SetupDiEnumDeviceInfo(deviceInfoSet, i, ref deviceInfoData);\n            if (!success)\n            {\n                int errno = Marshal.GetLastWin32Error();\n                if (errno != ERROR_NO_MORE_ITEMS)\n                    throw new Exception("SetupDiEnumDeviceInfo failed", new Win32Exception(errno));\n                break;\n            }\n\n            char[] pathNameBuffer = new char[MAX_PATH];\n            uint devInst;\n            CM_Create_DevNodeA(out devInst, out pathNameBuffer, 0);\n            Console.WriteLine($"Device {i}: {new string(pathNameBuffer).TrimEnd('\0')}");\n        }\n    }\n\n    enum DiGetClassFlags : uint\n    {\n        DIGCF_DEFAULT = 0x1,\n        DIGCF_PRESENT = 0x2,\n        DIGCF_ALLCLASSES = 0x4,\n        DIGCF_PROFILE = 0x8,\n        DIGCF_DEVICEINTERFACE = 0x10,\n    }\n\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\n    struct SpDevinfoData\n    {\n        public int cbSize;\n        public Guid ClassGuid;\n        public uint DevInst;\n        public IntPtr Reserved;\n    }\n}