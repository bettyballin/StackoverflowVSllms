// Server-side code (C#, ASP.NET)\nusing System;\nusing System.Security.Cryptography;\nusing System.Web;\n\npublic class SecureEndpoint\n{\n    public void ProcessRequest(HttpContext context)\n    {\n        string hmacHeader = context.Request.Headers["HMAC"];\n        string providedData = context.Request.Form["data"];\n\n        // Verify HMAC to ensure data integrity and authenticity\n        if (!VerifyHMAC(providedData, hmacHeader))\n        {\n            context.Response.StatusCode = 403; // Forbidden\n            return;\n        }\n\n        // Process data\n        UpdateDatabase(providedData);\n    }\n\n    private bool VerifyHMAC(string data, string receivedHmac)\n    {\n        byte[] key = Convert.FromBase64String("YourSecretKey");\n        using (var hmac = new HMACSHA256(key))\n        {\n            byte[] hashBytes = hmac.ComputeHash(System.Text.Encoding.UTF8.GetBytes(data));\n            string hashString = Convert.ToBase64String(hashBytes);\n\n            return CryptographicOperations.FixedTimeEquals(\n                Convert.FromBase64String(receivedHmac),\n                Convert.FromBase64String(hashString)\n            );\n        }\n    }\n\n    private void UpdateDatabase(string data)\n    {\n        // Implement database update logic here\n    }\n}