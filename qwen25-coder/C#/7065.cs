using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        string encryptedString = "YourEncryptedBase64EncodedPassword";\n        byte[] keyBytes = Encoding.UTF8.GetBytes("YourKeyHere"); // Make sure this matches the length required by your encryption settings (e.g., 16 bytes for AES-128, 32 bytes for AES-256).\n        \n        // Create a new Aes object to perform the decryption.\n        using Aes aes = Aes.Create();\n        aes.KeySize = keyBytes.Length * 8; // Determine KeySize from the length of keyBytes\n        aes.BlockSize = 128;\n        aes.Padding = PaddingMode.PKCS7;\n        \n        byte[] cipherTextBytes = Convert.FromBase64String(encryptedString);\n\n        // The IV typically is prepended or appended to the cipher text.\n        // Assuming it's prepended and is of block size (e.g., 128 bits / 16 bytes for AES)\n        if (cipherTextBytes.Length <= aes.BlockSize / 8) throw new ArgumentOutOfRangeException("Invalid cipher length.");\n\n        byte[] ivBytes = new byte[aes.BlockSize / 8];\n        Buffer.BlockCopy(cipherTextBytes, 0, ivBytes, 0, aes.BlockSize / 8);\n        byte[] actualCipherTextBytes = new byte[cipherTextBytes.Length - aes.BlockSize / 8];\n        Buffer.BlockCopy(cipherTextBytes, aes.BlockSize / 8, actualCipherTextBytes, 0, actualCipherTextBytes.Length);\n\n        aes.Key = keyBytes;\n        aes.IV = ivBytes;\n\n        ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n        using (MemoryStream msDecrypt = new MemoryStream(actualCipherTextBytes))\n        {\n            using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n            {\n                using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                {\n                    // Read the decrypted bytes from the decrypting stream\n                    string decryptedText = srDecrypt.ReadToEnd();\n\n                    Console.WriteLine("Decrypted password: " + decryptedText);\n                }\n            }\n        }\n    }\n}