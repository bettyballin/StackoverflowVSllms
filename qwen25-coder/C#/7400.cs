using System;\nusing System.Diagnostics;\nusing System.Threading.Tasks;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        ProcessStartInfo startInfo = new ProcessStartInfo();\n        startInfo.FileName = "your_program.exe"; // Replace with your program\n        startInfo.UseShellExecute = false;\n        startInfo.RedirectStandardOutput = true;\n        startInfo.CreateNoWindow = true;\n\n        using (Process process = new Process())\n        {\n            process.StartInfo = startInfo;\n            process.EnableRaisingEvents = true;\n\n            process.OutputDataReceived += (_, e) =>\n            {\n                if (!string.IsNullOrEmpty(e.Data))\n                {\n                    Console.WriteLine(e.Data);\n                }\n            };\n\n            process.Exited += (_, e) =>\n            {\n                // Signal the main task that the process has exited\n                tcs.SetResult(0);\n            };\n\n            var tcs = new TaskCompletionSource<int>();\n            \n            process.Start();\n            process.BeginOutputReadLine();\n\n            // Wait for both the output to be read and process to exit\n            await Task.WhenAll(process.WaitForExitAsync(), tcs.Task);\n\n            Console.WriteLine("Process has finished execution.");\n        }\n    }\n\n    public static async Task WaitForExitAsync(this Process process)\n    {\n        var task = Task.Run(() =>\n        {\n            process.WaitForExit();\n        });\n        await task;\n    }\n}