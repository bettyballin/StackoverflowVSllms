using System;\nusing System.Runtime.InteropServices;\nusing System.Text;\n\npublic class MIRCSender\n{\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    public static extern IntPtr FindWindow(string lpClassName, string lpWindowName);\n\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    public static extern IntPtr FindWindowEx(IntPtr parentHandle, IntPtr childAfter, string className, string windowTitle);\n\n    [DllImport("user32.dll", SetLastError = true)]\n    public static extern bool PostMessage(IntPtr hWnd, uint Msg, UIntPtr wParam, IntPtr lParam);\n\n    private const uint WM_SETTEXT = 0x000C;\n\n    public void SendTextToMirc(string text)\n    {\n        // Adjust the window titles if necessary\n        IntPtr mainHandle = FindWindow("mIRC", null);\n        if (mainHandle == IntPtr.Zero) throw new Exception("Main mIRC window not found.");\n\n        IntPtr serverHandle = FindWindowEx(mainHandle, IntPtr.Zero, "MDIClient", null);\n        if (serverHandle == IntPtr.Zero) throw new Exception("MDIClient handle not found.");\n\n        // Adjust class names and titles based on Spy++ or similar tool's findings\n        IntPtr chanHandle = FindWindowEx(serverHandle, IntPtr.Zero, "mIRC_Channel", null);\n        if (chanHandle == IntPtr.Zero) throw new Exception("mIRC_Channel handle not found.");\n\n        IntPtr editHandle = FindWindowEx(chanHandle, IntPtr.Zero, "Edit", null);\n        if (editHandle == IntPtr.Zero) throw new Exception("Edit control handle not found.");\n\n        PostMessage(editHandle, WM_SETTEXT, UIntPtr.Zero, Marshal.StringToHGlobalUni(text));\n    }\n}