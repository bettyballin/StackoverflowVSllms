using System;\nusing System.Net.Security;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class SslCertificateValidation\n{\n    public static void Main()\n    {\n        // The server URL to connect to.\n        string url = "https://your-device-url";\n\n        // Create a WebRequest and cast it to an HttpWebRequest.\n        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n        \n        // Assign the callback used to validate the certificate.\n        request.ServerCertificateValidationCallback += ValidateServerCertificate;\n\n        try\n        {\n            // Make the web request.\n            WebResponse response = request.GetResponse();\n            Console.WriteLine("Connect successful.");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Failed with exception: {0}", ex.Message);\n        }\n    }\n\n    public static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)\n    {\n        // Check the errors against your specific requirements.\n        if (sslPolicyErrors == SslPolicyErrors.None) return true;\n\n        // Your custom validation logic goes here\n        // i.e., check if the server's cert is issued by a trusted CA root.\n        X509Store store = new X509Store("MY", StoreLocation.CurrentUser);\n        store.Open(OpenFlags.ReadOnly);\n\n        foreach (X509Certificate2 cert in store.Certificates)\n        {\n            // Assume you've pre-loaded your trusted CA's certificate here\n            if (IsTrustedCA(cert, chain))\n            {\n                return true;\n            }\n        }\n\n        // The certificate is not valid.\n        Console.WriteLine("Certificate error: {0}", sslPolicyErrors);\n        return false;\n\n    }\n\n    private static bool IsTrustedCA(X509Certificate2 caCert, X509Chain chain)\n    {\n        foreach (X509ChainElement element in chain.ChainElements)\n        {\n            // Check if the element's certificate is issued by the trusted CA\n            if (element.Certificate.Issuer == caCert.Subject)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}