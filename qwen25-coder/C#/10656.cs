// Example of a simple generic repository interface\npublic interface IRepository<T> where T : class {\n    IEnumerable<T> GetAll();\n    void Add(T entity);\n}\n\n// An in-memory implementation suitable for testing\npublic class MemoryRepository<T> : IRepository<T> where T : class, new() {\n    private readonly List<T> _data = new List<T>();\n\n    public IEnumerable<T> GetAll() => _data.AsEnumerable();\n\n    public void Add(T entity) => _data.Add(entity);\n}\n\n// Usage in tests\n[Fact]\npublic void CanAddItem() {\n    var repo = new MemoryRepository<MyEntity>();\n    repo.Add(new MyEntity());\n    Assert.Single(repo.GetAll());\n}