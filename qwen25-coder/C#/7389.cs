using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string originalFile = "path_to_your_database.db";\n        string encryptedFile = "encrypted_database.db";\n        string decryptedFile = "decrypted_database.db";\n\n        // Prompt the user to enter a password.\n        Console.Write("Enter your password: ");\n        string password = Console.ReadLine();\n\n        // Encrypt the database file\n        try\n        {\n            using (Aes aesAlg = Aes.Create())\n            {\n                using (var key = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes("salt"), 10000))\n                {\n                    aesAlg.Key = key.GetBytes(32);\n                    aesAlg.IV = key.GetBytes(16);\n\n                    EncryptFile(originalFile, encryptedFile, aesAlg);\n                }\n            }\n\n            Console.WriteLine($"Database file encrypted to {encryptedFile}");\n\n            // Decrypt the database file to demonstrate\n            using (Aes aesAlg = Aes.Create())\n            {\n                using (var key = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes("salt"), 10000))\n                {\n                    aesAlg.Key = key.GetBytes(32);\n                    aesAlg.IV = key.GetBytes(16);\n\n                    DecryptFile(encryptedFile, decryptedFile, aesAlg);\n                }\n            }\n\n            Console.WriteLine($"Database file decrypted to {decryptedFile}");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("An error occurred: " + ex.Message);\n        }\n    }\n\n    static void EncryptFile(string inputFile, string outputFile, Aes aesAlg)\n    {\n        using (var inputStream = new FileStream(inputFile, FileMode.Open))\n        using (var outputStream = new FileStream(outputFile, FileMode.Create))\n        using (var encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV))\n        using (var cryptoStream = new CryptoStream(outputStream, encryptor, CryptoStreamMode.Write))\n        {\n            inputStream.CopyTo(cryptoStream);\n        }\n    }\n\n    static void DecryptFile(string inputFile, string outputFile, Aes aesAlg)\n    {\n        using (var inputStream = new FileStream(inputFile, FileMode.Open))\n        using (var outputStream = new FileStream(outputFile, FileMode.Create))\n        using (var decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV))\n        using (var cryptoStream = new CryptoStream(inputStream, decryptor, CryptoStreamMode.Read))\n        {\n            cryptoStream.CopyTo(outputStream);\n        }\n    }\n}