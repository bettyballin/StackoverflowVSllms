using System;\nusing System.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string siteUrl = "http://yoursharepointsite";\n        string listName = "{list GUID}"; // Replace with your list GUID\n        string itemId = "1"; // Replace with the item ID you want to check permissions for\n        string userName = @"DOMAIN\username"; // The username format might vary based on your authentication method\n\n        Lists.Lists listService = new Lists.Lists();\n        listService.Url = siteUrl + "/_vti_bin/Lists.asmx";\n        listService.Credentials = System.Net.CredentialCache.DefaultCredentials;\n\n        XmlDocument xmlDoc = new XmlDocument();\n\n        XmlNode ndQuery = xmlDoc.CreateNode(XmlNodeType.Element, "Query", "");\n        XmlNode ndViewFields = xmlDoc.CreateNode(XmlNodeType.Element, "ViewFields", "");\n        XmlNode ndRowLimit = xmlDoc.CreateNode(XmlNodeType.Element, "RowLimit", "");\n        ndRowLimit.InnerText = "1";\n        \n        XmlAttribute attrUrl = xmlDoc.CreateAttribute("url");\n        attrUrl.Value = siteUrl + "/" + listName;\n\n        XmlNode nodeQueryOptions = xmlDoc.CreateNode(XmlNodeType.Element, "QueryOptions", "");\n        nodeQueryOptions.Attributes.Append(attrUrl);\n\n        XmlNode nodeUserPermissions = listService.GetUserPermissions(\n            userName,\n            null // For checking permissions on a specific item, this can be the list GUID\n        );\n\n        Console.WriteLine(nodeUserPermissions.OuterXml);\n    }\n}