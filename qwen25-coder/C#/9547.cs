using System;\nusing System.Configuration;\n\npublic class ValidationConfigLoader\n{\n    public static void LoadValidationConfiguration(string configPath)\n    {\n        // Open current application configuration.\n        Configuration currentConfig = ConfigurationManager.OpenWebConfiguration("~/");\n\n        // Create a new file map pointing to the validation.config file.\n        ExeConfigurationFileMap configFileMap = new ExeConfigurationFileMap { ExeConfigFilename = configPath };\n\n        // Open the external validation.config file.\n        Configuration externalConfig = ConfigurationManager.OpenMappedExeConfiguration(configFileMap, ConfigurationUserLevel.None);\n\n        // Retrieve the 'validationRules' section (or whichever section you need from the external file).\n        var externalSection = externalConfig.GetSection("validationSettings/validationRules");\n\n        // Add or replace this section in the current application configuration.\n        if (externalSection != null)\n        {\n            currentConfig.Sections.Remove("validationSettings/validationRules");\n            currentConfig.Sections.Add("validationSettings/validationRules", externalSection);\n\n            // Save the changes to the application's web.config file.\n            currentConfig.Save(ConfigurationSaveMode.Modified);\n            ConfigurationManager.RefreshSection("validationSettings/validationRules");\n\n            Console.WriteLine("Validation configuration loaded successfully.");\n        }\n        else\n        {\n            throw new ConfigurationErrorsException("The validationRules section was not found in the specified config file.");\n        }\n    }\n}