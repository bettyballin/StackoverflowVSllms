using iTextSharp.text.pdf;\nusing iTextSharp.text.pdf.parser;\nusing System.IO;\nusing System.Collections.Generic;\n\npublic List<string> ExtractKeywords(string filePath)\n{\n    // Read the file content as text\n    string pdfText = PdfTextExtractor.GetTextFromPdf(new PdfReader(filePath));\n\n    // Split the text into words and convert to lower case for normalization\n    var words = pdfText.Split(new char[] { ' ', '\t', '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries);\n\n    // Define some common stopwords (you can extend this list)\n    HashSet<string> stopwords = new HashSet<string>(new string[] { "the", "of", "and", "a", "to", "in", "is", "it" });\n\n    // Create a set for keywords to avoid duplicates\n    HashSet<string> keywords = new HashSet<string>();\n\n    foreach (var word in words)\n    {\n        string cleanedWord = CleanWord(word); // Implement this method to remove punctuation and transform to lower case\n        if (!string.IsNullOrEmpty(cleanedWord) && !stopwords.Contains(cleanedWord))\n        {\n            keywords.Add(cleanedWord);\n        }\n    }\n\n    // Convert the set to a list for easier usage\n    return new List<string>(keywords);\n}\n\nprivate string CleanWord(string word)\n{\n    char[] punctuation = { '.', ',', ';', ':', '!', '?', '-', '_' };\n    word = word.Trim(punctuation).ToLower();\n    return word;\n}