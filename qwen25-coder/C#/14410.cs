using System;\nusing System.Linq;\nusing System.Net.NetworkInformation;\n\npublic class NetworkDiagnostic\n{\n    public static void TraceRouteAndCalculatePacketLoss(string host, int maxTtl = 30)\n    {\n        Ping pingSender = new Ping();\n        PingOptions options = new PingOptions(maxTtl, true);\n\n        // Use the default Ttl value which is 128,\n        // but change the fragmentation behavior.\n        options.DontFragment = true;\n\n        // Create a buffer of 32 bytes of data to be transmitted.\n        string data = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa";\n        byte[] buffer = System.Text.Encoding.ASCII.GetBytes(data);\n        int timeout = 120;\n        \n        PingReply[] replies = new PingReply[maxTtl];\n        int packetsSent = maxTtl;\n\n        Console.WriteLine($"Pinging {host} with {buffer.Length} bytes of data:");\n        for (int i = 1; i <= maxTtl; i++)\n        {\n            try\n            {\n                options.Ttl = i;\n                PingReply reply = pingSender.Send(host, timeout, buffer, options);\n                replies[i - 1] = reply;\n\n                string output;\n                if (reply.Status == IPStatus.Success)\n                {\n                    output = $"{reply.RoundtripTime} ms  TTL={i}    {reply.Address}";\n                }\n                else\n                {\n                    output = $"Request timed out. TTL: {i}";\n                    packetsSent--;\n                }\n\n                Console.WriteLine(output);\n            }\n            catch (PingException e)\n            {\n                Console.WriteLine(e.ToString());\n                break;\n            }\n        }\n\n        CalculatePacketLoss(replies, packetsSent);\n    }\n\n    private static void CalculatePacketLoss(PingReply[] replies, int packetsSent)\n    {\n        int receivedPackets = replies.Count(r => r?.Status == IPStatus.Success);\n        double packetLossPercentage = ((packetsSent - receivedPackets) / (double)packetsSent) * 100;\n\n        Console.WriteLine($"\nPacket Loss: {packetLossPercentage:F2}%");\n    }\n\n    public static void Main()\n    {\n        TraceRouteAndCalculatePacketLoss("www.stackoverflow.com");\n    }\n}