// IDataAccessLayer.cs - Interface for Data Access\npublic interface IDataAccessLayer\n{\n    IEnumerable<Product> GetProducts();\n}\n\n// DataAccessLayer.cs - Implementation of Data Layer\npublic class DataAccessLayer : IDataAccessLayer\n{\n    public IEnumerable<Product> GetProducts()\n    {\n        // Logic to fetch data from database or external source\n        return new List<Product>();\n    }\n}\n\n// IProductService.cs - Service Contract Interface\n[ServiceContract]\npublic interface IProductService\n{\n    [OperationContract]\n    IEnumerable<Product> RetrieveProducts();\n}\n\n// ProductService.cs - Service Implementing the Contract\npublic class ProductService : IProductService\n{\n    private readonly IDataAccessLayer _dataAccess;\n\n    public ProductService(IDataAccessLayer dataAccess)\n    {\n        _dataAccess = dataAccess;\n    }\n\n    public IEnumerable<Product> RetrieveProducts()\n    {\n        return _dataAccess.GetProducts();\n    }\n}\n\n// Product.cs - Data Model\n[DataContract]\npublic class Product\n{\n    [DataMember]\n    public int ID { get; set; }\n\n    [DataMember]\n    public string Name { get; set; }\n}