using System;\nusing System.IO;\nusing System.Net;\nusing System.Text;\nusing System.Web.Services;\nusing System.Security.Cryptography;\n\npublic class SimpleEncryptionService : WebService\n{\n    private string key = "0123456789abcdef"; // Must be 16, 24, or 32 bytes long for AES-128, AES-192, AES-256 respectively.\n    private string iv = "abcdef9876543210";\n\n    public string EncryptString(string plainText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create the streams used for encryption.\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        //Write all data to the stream.\n                        swEncrypt.Write(plainText);\n                    }\n                    return Convert.ToBase64String(msEncrypt.ToArray());\n                }\n            }\n        }\n    }\n\n    public string DecryptString(string cipherText)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Encoding.UTF8.GetBytes(key);\n            aesAlg.IV = Encoding.UTF8.GetBytes(iv);\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create the streams used for decryption.\n            using (MemoryStream msDecrypt = new MemoryStream(Convert.FromBase64String(cipherText)))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        // Read the decrypted bytes from the decrypting stream\n                        // and place them in a string.\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    [WebMethod]\n    public string SendEncryptedMessage(string message)\n    {\n        return EncryptString(message);\n    }\n\n    [WebMethod]\n    public string ReceiveEncryptedMessage(string encryptedMessage)\n    {\n        return DecryptString(encryptedMessage);\n    }\n}