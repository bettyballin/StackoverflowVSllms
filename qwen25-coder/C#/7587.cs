using System;\nusing System.Runtime.InteropServices;\n\npublic class AccessibleHelper\n{\n    [DllImport("oleacc.dll")]\n    public static extern int AccessibleObjectFromWindow(\n        IntPtr hwnd,\n        int dwObjectID,\n        ref Guid refID,\n        ref Accessibility.IAccessible ppvObject);\n\n    [DllImport("oleacc.dll")]\n    public static extern uint AccessibleChildren(\n        Accessibility.IAccessible paccContainer,\n        int iChildStart,\n        int cChildren,\n        [Out] object[] rgvarChildren,\n        out int pcObtained);\n\n    public Accessibility.IAccessible Test(int hWnd, string accessName)\n    {\n        Guid guidCOM = new Guid(0x618736E0, 0x3C3D, 0x11CF, 0x81, 0xC, 0x0, 0xAA, 0x0, 0x38, 0x9B, 0x71);\n        Accessibility.IAccessible a = null;\n\n        try\n        {\n            int result = AccessibleObjectFromWindow(\n                new IntPtr(hWnd),\n                -4,\n                ref guidCOM,\n                ref a);\n\n            if (result != 0 || a == null)\n            {\n                return null;\n            }\n\n            object[] children = new object[a.accChildCount];\n            int z;\n            uint childResult = AccessibleChildren(a, 0, children.Length, children, out z);\n\n            if (childResult == 0)\n            {\n                foreach (object child in children)\n                {\n                    Accessibility.IAccessible a2 = child as Accessibility.IAccessible;\n\n                    try\n                    {\n                        if (a2 != null && a2.get_accName(0) == accessName)\n                        {\n                            // You should not release a2 here because you're returning it.\n                            return a2;\n                        }\n                    }\n                    catch (Exception ex)\n                    {\n                        // Handle exception or log it as needed\n                    }\n                }\n            }\n\n            foreach (object child in children)\n            {\n                Accessibility.IAccessible a2 = child as Accessibility.IAccessible;\n\n                if (a2 != null)\n                {\n                    Marshal.ReleaseComObject(a2);\n                }\n            }\n        }\n        finally\n        {\n            // Release the top-level IAccessible object.\n            if (a != null)\n            {\n                Marshal.ReleaseComObject(a);\n            }\n        }\n\n        return null;\n    }\n}