using System;\nusing System.Runtime.InteropServices;\nusing System.Security.AccessControl;\n\nclass Program\n{\n    [DllImport("advapi32.dll", CharSet = CharSet.Unicode, SetLastError = true)]\n    static extern IntPtr OpenSCManager(string lpMachineName, string lpDatabaseName, uint dwDesiredAccess);\n\n    [DllImport("advapi32.dll", CharSet = CharSet.Unicode, SetLastError = true)]\n    static extern IntPtr OpenService(IntPtr hScManager, string lpServiceName, uint dwDesiredAccess);\n\n    [DllImport("advapi32.dll", SetLastError = true)]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    static extern bool CloseServiceHandle(IntPtr hObject);\n\n    private const UInt32 GENERIC_READ = 0x80000000;\n    private const UInt32 ACCESS_SYSTEM_SECURITY = 0x01000000;\n\n    static void Main()\n    {\n        string machineName = "\\\\RemoteMachine"; // Use the remote machine name\n        string serviceName = "YourServiceName";\n        \n        IntPtr scmHandle = OpenSCManager(machineName, null, GENERIC_READ | ACCESS_SYSTEM_SECURITY);\n        if (scmHandle == IntPtr.Zero)\n            throw new Exception("Failed to get handle to SCM");\n\n        IntPtr serviceHandle = OpenService(scmHandle, serviceName, GENERIC_READ | ACCESS_SYSTEM_SECURITY);\n        if (serviceHandle == IntPtr.Zero)\n        {\n            CloseServiceHandle(scmHandle);\n            throw new Exception("Failed to open service");\n        }\n\n        try\n        {\n            AccessControlSections accessSections = AccessControlSections.Audit | AccessControlSections.Access;\n            ServiceSecurity sSec = new ServiceSecurity(serviceHandle, accessSections);\n            string outputData = sSec.GetSecurityDescriptorSddlForm(accessSections);\n            Console.WriteLine(outputData);\n        }\n        finally\n        {\n            CloseServiceHandle(serviceHandle);\n            CloseServiceHandle(scmHandle);\n        }\n    }\n}\n\npublic class ServiceSecurity : NativeObjectSecurity\n{\n    public ServiceSecurity(IntPtr handle, AccessControlSections includeSections)\n        : base(true, ResourceType.Service, handle, includeSections)\n    { }\n\n    public ServiceSecurity(string serviceName, AccessControlSections includeSections)\n        : base(true, ResourceType.Service, serviceName, includeSections, null, null)\n    { }\n}