using System;\nusing System.Runtime.InteropServices;\nusing System.Text;\n\npublic class HardwareIDExtractor\n{\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    public static extern double GetCPUSpeed();\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern byte CPUFamily([MarshalAs(UnmanagedType.LPStr)] StringBuilder cpuFamily);\n\n    public static string GetCpuFamily()\n    {\n        StringBuilder sb = new StringBuilder(256);\n        CPUFamily(sb);\n        return sb.ToString();\n    }\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    public static extern int GetCpuTheoreticSpeed();\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    public static extern bool IsCPUIDAvailable();\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern byte GetCPUID(byte CpuCore, [MarshalAs(UnmanagedType.LPStr)] StringBuilder cpuId);\n\n    public static string GetCpuId(byte cpuCore)\n    {\n        StringBuilder sb = new StringBuilder(256);\n        GetCPUID(cpuCore, sb);\n        return sb.ToString();\n    }\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern byte GetCPUVendor([MarshalAs(UnmanagedType.LPStr)] StringBuilder cpuVendor);\n\n    public static string GetCpuVendor()\n    {\n        StringBuilder sb = new StringBuilder(256);\n        GetCPUVendor(sb);\n        return sb.ToString();\n    }\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    public static extern uint MemoryStatus(int memType);\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern byte MemoryStatus_MB(int memType, [MarshalAs(UnmanagedType.LPStr)] StringBuilder memSizeMB);\n\n    public static string MemoryStatusMB(int memType)\n    {\n        StringBuilder sb = new StringBuilder(256);\n        MemoryStatus_MB(memType, sb);\n        return sb.ToString();\n    }\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern byte GetPartitionID([MarshalAs(UnmanagedType.LPStr)] string partition, [MarshalAs(UnmanagedType.LPStr)] StringBuilder partitionId);\n\n    public static string GetPartitionId(string partition)\n    {\n        StringBuilder sb = new StringBuilder(256);\n        GetPartitionID(partition, sb);\n        return sb.ToString().TrimEnd('\0'); // Remove null terminator if any\n    }\n\n    [DllImport("HardwareIDExtractor.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.StdCall)]\n    private static extern IntPtr GetIDESerialNumber(byte driveNumber);\n\n    public static string GetIdeserialNumber(byte driveNumber)\n    {\n        IntPtr ptr = GetIDESerialNumber(driveNumber);\n        return Marshal.PtrToStringAnsi(ptr);\n    }\n}