public IEnumerable<Comment> GetReplies(int commentID) {\n    using (var db = new DataClassesDataContext()) {\n        var searchedCommentIDs = new HashSet<int>(); // Using a HashSet for better performance\n        return GetRepliesRecursive(commentID, db, searchedCommentIDs);\n    }\n}\n\nprivate IEnumerable<Comment> GetRepliesRecursive(int parentCommentId, DataContext context, ISet<int> searchedIds) {\n    if (!searchedIds.Add(parentCommentId)) // Add returns false if the element already exists\n        yield break;\n\n    var replies = from c in context.GetTable<Comment>()\n                  where c.ParentCommentID == parentCommentId\n                  select c;\n\n    foreach (var reply in replies) {\n        yield return reply;\n        foreach (var subReply in GetRepliesRecursive(reply.CommentID, context, searchedIds)) {\n            yield return subReply;\n        }\n    }\n}