using System.Security.Claims;\nusing System.Text;\nusing Microsoft.IdentityModel.Tokens;\n\npublic static class TokenGenerator\n{\n    private const string SECRET_KEY = "your_secret_key_here"; // Replace with a complex key of your choice\n    public static SymmetricSecurityKey SIGNING_KEY = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(SECRET_KEY));\n\n    public static string GenerateToken(int userId, string username)\n    {\n        var claims = new[]\n        {\n            new Claim(ClaimTypes.NameIdentifier, userId.ToString()),\n            new Claim(ClaimTypes.Name, username),\n        };\n\n        var credentials = new SigningCredentials(SIGNING_KEY, SecurityAlgorithms.HmacSha256);\n\n        var token = new System.IdentityModel.Tokens.Jwt.JwtSecurityToken(\n          issuer: "yourdomain.com",\n          audience: "yourdomain.com",\n          claims,\n          expires: DateTime.Now.AddMinutes(30), // Token expires in 30 minutes\n          signingCredentials: credentials);\n\n        return new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler().WriteToken(token);\n    }\n}