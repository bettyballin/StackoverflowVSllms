using System;\nusing System.Data.SqlClient;\n\nclass DynamicSqlQueryBuilder {\n    private StringBuilder _select, _from, _where, _groupBy, _having;\n    private SqlCommand _command;\n\n    public DynamicSqlQueryBuilder(SqlConnection connection) {\n        _select = new StringBuilder();\n        _from = new StringBuilder();\n        _where = new StringBuilder();\n        _groupBy = new StringBuilder();\n        _having = new StringBuilder();\n        _command = new SqlCommand { Connection = connection };\n    }\n\n    public void AddSelect(string column) => _select.Append(column + ", ");\n    public void AddFrom(string table) => _from.AppendFormat("FROM {0}", table);\n    public void AddWhere(string condition, object paramValue, string paramName) {\n        if (_where.Length == 0)\n            _where.Append("WHERE ");\n        else\n            _where.Append(" AND ");\n\n        _where.AppendFormat(condition, paramName);\n        AddParameter(paramName, paramValue);\n    }\n\n    private void AddParameter(string name, object value) {\n        var parameter = new SqlParameter(name, value);\n        _command.Parameters.Add(parameter);\n    }\n\n    public void BuildQuery() {\n        _command.CommandText = $"SELECT {_select.ToString().TrimEnd(',', ' ')} {_from} {_where} {_groupBy} {_having}".Trim();\n    }\n\n    public SqlCommand GetCommand() => _command;\n}\n\n// Usage\nusing (SqlConnection conn = new SqlConnection("YourConnectionString")) {\n    var queryBuilder = new DynamicSqlQueryBuilder(conn);\n    queryBuilder.AddSelect("c.id AS ContactID");\n    queryBuilder.AddFrom("contacts c");\n    queryBuilder.AddWhere("{0} = @ContactId", 123, "@ContactId");\n    \n    // Additional logic to build the rest of your query goes here\n    \n    queryBuilder.BuildQuery();\n    using (var reader = queryBuilder.GetCommand().ExecuteReader()) {\n        // Process data\n    }\n}