using System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\npublic class TinyUrlService\n{\n    private readonly HttpClient _httpClient;\n\n    public TinyUrlService(HttpClient httpClient)\n    {\n        _httpClient = httpClient;\n    }\n\n    public async Task<string> CreateTinyUrlAsync(string longUrl)\n    {\n        var requestUri = $"http://tinyurl.com/api-create.php?url={System.Web.HttpUtility.UrlEncode(longUrl)}";\n        \n        var response = await _httpClient.GetAsync(requestUri);\n        \n        if (!response.IsSuccessStatusCode)\n            throw new Exception($"Error creating TinyURL: {response.StatusCode}");\n\n        return await response.Content.ReadAsStringAsync();\n    }\n}\n\n// Usage\npublic class Program\n{\n    private static async Task Main(string[] args)\n    {\n        using (var httpClient = new HttpClient())\n        {\n            var tinyUrlService = new TinyUrlService(httpClient);\n            \n            string longUrl = "http://myurl.com";\n            string shortenedUrl = await tinyUrlService.CreateTinyUrlAsync(longUrl);\n\n            Console.WriteLine($"Shortened URL: {shortenedUrl}");\n        }\n    }\n}