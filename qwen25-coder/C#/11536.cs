using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Xml.Linq;\n\npublic class SalesDataObject\n{\n    public string Att1 { get; set; }\n    public string Att2 { get; set; }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        XDocument doc = XDocument.Load(@"temp/salesData.xml");\n\n        // Group by att1 to calculate frequency and collect associated att2 values\n        var topAtt1Items = from item in doc.Descendants("item")\n                           let att1Value = (string)item.Attribute("att1")\n                           group item by att1Value into grp\n                           select new\n                           {\n                               Att1 = grp.Key,\n                               Count = grp.Count(),\n                               Att2Values = grp.Select(g => (string)g.Attribute("att2")).ToList()\n                           };\n\n        // Get the top 4 based on frequency of att1 values\n        var topFourAtt1Items = topAtt1Items\n            .OrderByDescending(x => x.Count)\n            .Take(4);\n\n        SalesDataObject[] _topSellers = new SalesDataObject[4];\n\n        int index = 0;\n        foreach (var item in topFourAtt1Items)\n        {\n            _topSellers[index] = new SalesDataObject\n            {\n                Att1 = item.Att1,\n                Att2 = string.Join(", ", item.Att2Values) // If you want all att2 values as a single string\n            };\n            index++;\n        }\n\n        foreach (var topSeller in _topSellers)\n        {\n            Console.WriteLine($"Att1: {topSeller.Att1}, Att2(s): {topSeller.Att2}");\n        }\n    }\n}