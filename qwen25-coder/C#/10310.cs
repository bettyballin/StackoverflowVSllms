public BuilderInclusionsForm(Product p) : this()\n{\n    Type foo = p.GetType();\n    MethodInfo castMethod = typeof(Queryable).GetMethods().Single(\n        m => m.Name == "Cast" && m.GetParameters().Length == 1 &&\n             m.IsGenericMethod).MakeGenericMethod(foo);\n    \n    var table = db2.GetTable(p.GetType());\n    var queryable = (IQueryable)table;\n    var castedQueryable = castMethod.Invoke(null, new object[] { queryable });\n\n    MethodInfo singleOrDefaultMethod = typeof(Enumerable).GetMethods().Single(\n        m => m.Name == "SingleOrDefault" && m.GetParameters().Length == 2 &&\n             m.IsGenericMethod).MakeGenericMethod(foo);\n\n    product = (Product)singleOrDefaultMethod.Invoke(null,\n        new object[] { castedQueryable, Expression.Lambda<Func<Product, bool>>(\n            Expression.Equal(\n                Expression.Property(Expression.Parameter(foo), "ProductID"),\n                Expression.Constant(p.ProductID)\n            ),\n            new[] { Expression.Parameter(foo) }\n        )});\n}