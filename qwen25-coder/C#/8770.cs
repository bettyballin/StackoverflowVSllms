using System;\nusing System.Data.SqlClient;\nusing Microsoft.EntityFrameworkCore;\n\npublic class MyDbContext : DbContext\n{\n    public DbSet<User> Users { get; set; }\n\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n    {\n        optionsBuilder.UseSqlServer("YourConnectionStringHere");\n    }\n}\n\npublic class UserService\n{\n    private readonly MyDbContext _dbContext;\n\n    public UserService(MyDbContext dbContext)\n    {\n        _dbContext = dbContext;\n    }\n\n    public void AddUser(User user)\n    {\n        try\n        {\n            _dbContext.Users.Add(user);\n            _dbContext.SaveChanges();\n        }\n        catch (DbUpdateException ex) when (ex.InnerException is SqlException sqlEx)\n        {\n            HandleSqlException(sqlEx);\n        }\n    }\n\n    private void HandleSqlException(SqlException sqlException)\n    {\n        // Check if the exception is due to a unique constraint violation\n        switch (sqlException.Number)\n        {\n            case 2601: // SQL Server error for primary key conflict\n            case 2627: // SQL Server error for unique key or index conflict\n                throw new CustomUniqueConstraintViolationException("User already exists.");\n            default:\n                throw;\n        }\n    }\n}\n\npublic class CustomUniqueConstraintViolationException : Exception\n{\n    public CustomUniqueConstraintViolationException(string message) : base(message) { }\n}