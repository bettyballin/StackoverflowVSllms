var catalog = new AggregateCatalog();\ncatalog.Catalogs.Add(new AssemblyCatalog(System.Reflection.Assembly.GetExecutingAssembly()));\ncatalog.Catalogs.Add(new DirectoryCatalog("."));\nvar container = new CompositionContainer(catalog);\nvar batch = new CompositionBatch();\nbatch.AddPart(this);\ncontainer.Compose(batch);\n\n// First composition\nif (null != ConfigurationSettings.AppSettings["IsTesting"] && bool.Parse(ConfigurationSettings.AppSettings["IsTesting"]))\n{\n    repository = container.GetExports<IAutocompleteRepository>()\n                         .Where(expDef => expDef.Metadata.Keys.Contains("IsTesting"))\n                         .Single()\n                         .GetExportedObject();\n}\n\n// Simulate a second composition without creating a new container\nif (null != ConfigurationSettings.AppSettings["IsTesting"] && bool.Parse(ConfigurationSettings.AppSettings["IsTesting"]))\n{\n    var repositoryAgain = container.GetExports<IAutocompleteRepository>()\n                                   .Where(expDef => expDef.Metadata.Keys.Contains("IsTesting"))\n                                   .Single()\n                                   .GetExportedObject();\n    \n    // Check that both references are the same\n    Debug.Assert(Object.ReferenceEquals(repository, repositoryAgain));\n}