private void OkButton_Click(object sender, RoutedEventArgs e)\n{\n    // Get all dependency objects from your form (TextBoxes, etc.)\n    var uiElements = FindVisualChildren<DependencyObject>(this).ToList();\n    \n    // Flag to check if validation fails\n    bool isValid = true;\n\n    // Loop through each element and validate them all\n    foreach (var element in uiElements)\n    {\n        isValid = !Validation.GetHasError(element) && isValid;\n        \n        // Update source to make sure validators are triggered\n        var expression = BindingOperations.GetBindingExpression(element as Control, TextBox.TextProperty);\n        if (expression != null)\n            expression.UpdateSource();\n    }\n\n    if (!isValid)\n    {\n        MessageBox.Show("Please correct the errors in the form.", "Validation Error", MessageBoxButton.OK, MessageBoxImage.Error);\n        return; // Prevent closing of dialog\n    }\n\n    // Proceed with dialog closing or other actions\n}\n\n// Helper method to find all child visual elements\nprivate static IEnumerable<T> FindVisualChildren<T>(DependencyObject depObj) where T : DependencyObject\n{\n    if (depObj != null)\n    {\n        for (int i = 0; i < VisualTreeHelper.GetChildrenCount(depObj); i++)\n        {\n            var child = VisualTreeHelper.GetChild(depObj, i);\n            yield return child as T ?? default(T);\n\n            foreach (T childOfChild in FindVisualChildren<T>(child))\n                yield return childOfChild;\n        }\n    }\n}