using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.RegularExpressions;\nusing System.Web;\n\nclass HtmlSanitizer\n{\n    // Regex to match HTML tags in the form &#DECIMAL;...\n    private static readonly Regex _tags = new Regex("&#60;(?!&#62;)[^>]+(&#62;|$)", RegexOptions.Compiled);\n\n    // Whitelist of allowed tags in decimal HTML entity format\n    private static readonly HashSet<string> _whitelistTags = new HashSet<string>\n    {\n        "&#60;a&#62;", "&#60;/a&#62;",\n        "&#60;b&#62;", "&#60;/b&#62;",\n        "&#60;i&#62;", "&#60;/i&#62;",\n        "&#60;strong&#62;", "&#60;/strong&#62;",\n        "&#60;p&#62;", "&#60;/p&#62;",\n        "&#60;br&#62;", "&#60;br /&#62;"\n        // Add more tags as needed\n    };\n\n    public static string Sanitize(string html)\n    {\n        var matches = _tags.Matches(html);\n        var result = new List<string>(html.Length);\n\n        int lastMatchIndex = 0;\n\n        foreach (Match match in matches)\n        {\n            if (lastMatchIndex < match.Index)\n                result.Add(html.Substring(lastMatchIndex, match.Index - lastMatchIndex));\n\n            string tag = match.Value.ToLowerInvariant();\n            string decodedTag = HttpUtility.HtmlDecode(tag);\n\n            if (_whitelistTags.Contains(decodedTag.Replace(" ", ""))\n               || IsSelfClosingTag(decodedTag))\n            {\n                result.Add(decodedTag);\n            }\n            else\n            {\n                result.Add(HttpUtility.HtmlEncode(match.Value));\n            }\n\n            lastMatchIndex = match.Index + match.Length;\n        }\n\n        if (lastMatchIndex < html.Length)\n            result.Add(html.Substring(lastMatchIndex));\n\n        return string.Concat(result);\n    }\n\n    private static bool IsSelfClosingTag(string tag)\n    {\n        var selfClosingTags = new[] { "br", "img" };\n        foreach (var t in selfClosingTags)\n        {\n            if (tag.StartsWith($"&#60;{t}") && tag.EndsWith("/&#62;"))\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n}