using System;\nusing System.Reflection;\nusing NUnit.Framework;\n\nnamespace YourNamespace\n{\n    public class SomeClass\n    {\n        private int PrivateMethod(int x)\n        {\n            return x * 2;\n        }\n    }\n\n    [TestFixture]\n    public class SomeClassTests\n    {\n        [Test]\n        public void TestPrivateMethod()\n        {\n            var someClassInstance = new SomeClass();\n            typeof(SomeClass).GetMethod("PrivateMethod", BindingFlags.NonPublic | BindingFlags.Instance)\n                             .Invoke(someClassInstance, new object[] { 5 });\n\n            // Assert the result if you can capture it or alter the method to return a value\n            var result = (int)typeof(SomeClass).GetMethod("PrivateMethod", BindingFlags.NonPublic | BindingFlags.Instance)\n                                               .Invoke(someClassInstance, new object[] { 5 });\n            Assert.AreEqual(10, result);\n        }\n    }\n}