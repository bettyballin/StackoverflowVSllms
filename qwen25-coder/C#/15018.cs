using System;\nusing Microsoft.Win32;\n\npublic class ComDllPathFinder\n{\n    public static string GetComDllPath(string progId)\n    {\n        // Open the CLSID key for the ProgID\n        using (RegistryKey clsidKey = Registry.ClassesRoot.OpenSubKey(progId))\n        {\n            if (clsidKey == null) return null;\n\n            // Get the CLSID value\n            string clsid = clsidKey.GetValue(string.Empty) as string;\n            if (string.IsNullOrEmpty(clsid)) return null;\n\n            using (RegistryKey clsidInCLSID = Registry.ClassesRoot.OpenSubKey($@"CLSID\{clsid}\InprocServer32"))\n            {\n                if (clsidInCLSID == null)\n                {\n                    // Try InprocHandler32 instead\n                    clsidInCLSID = Registry.ClassesRoot.OpenSubKey($@"CLSID\{clsid}\InprocHandler32");\n                }\n\n                if (clsidInCLSID != null)\n                {\n                    // Get the path of the DLL\n                    string dllPath = clsidInCLSID.GetValue(string.Empty) as string;\n                    return dllPath;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public static void Main()\n    {\n        string progId = "Your.Com.ProgID";  // Replace with your COM component's ProgID\n        string path = GetComDllPath(progId);\n\n        if (path != null)\n        {\n            Console.WriteLine("The full path to the COM DLL is: " + path);\n        }\n        else\n        {\n            Console.WriteLine("COM DLL not found.");\n        }\n    }\n}