using System.Collections.Generic;\nusing Outlook = Microsoft.Office.Interop.Outlook;\n\npublic void SendEmailWithEmbeddedImages(string to, string subject, string htmlBody)\n{\n    var outlookApp = new Outlook.Application();\n    var mailItem = (Outlook.MailItem)outlookApp.CreateItem(Outlook.OlItemType.olMailItem);\n\n    mailItem.To = to;\n    mailItem.Subject = subject;\n\n    // Extract all image sources from HTML and replace them with cid:\n    List<string> imagePaths = new List<string>();\n    int imageIndex = 0;\n    while (htmlBody.Contains("src=\"file:///"))\n    {\n        int start = htmlBody.IndexOf("src=\"file:///");\n        int end = htmlBody.IndexOf("\"", start + 10);\n        string path = htmlBody.Substring(start + 10, end - (start + 10));\n        imagePaths.Add(path);\n\n        // Calculate a unique cid identifier\n        string cid = "img" + imageIndex++;\n        string cidUrl = "cid:" + cid;\n\n        // Replace the src attribute value with cid URL\n        htmlBody = htmlBody.Replace("src=\"" + path, "src=\"" + cidUrl);\n    }\n\n    mailItem.HTMLBody = htmlBody;\n\n    foreach (var filePath in imagePaths)\n    {\n        int startIndex = htmlBody.IndexOf("cid:img") + 4; // Find 'img' part\n        int endIndex = htmlBody.IndexOf("\"", startIndex);\n        string attachmentId = htmlBody.Substring(startIndex, endIndex - startIndex);\n\n        Outlook.Attachment attachment = mailItem.Attachments.Add(filePath, Outlook.OlAttachmentType.olByValue | Outlook.OlAttachmentType.olEmbeddeditem, null, "image");\n        attachment.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/proptag/0x3712001F", attachmentId);\n    }\n\n    mailItem.Send();\n}