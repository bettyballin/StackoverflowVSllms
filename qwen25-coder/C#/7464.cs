void Session_Start(object sender, EventArgs e)\n{\n    // Set the default session timeout (e.g., 8 hours)\n    HttpContext.Current.Session.Timeout = 480;\n}\n\nobject GetSessionVariableWithTimeout(string key, int customTimeoutMinutes)\n{\n    object value = HttpContext.Current.Session[key];\n    DateTime? timestamp = (DateTime?)HttpContext.Current.Session[key + "_Timestamp"];\n\n    if (value != null && timestamp.HasValue)\n    {\n        TimeSpan elapsed = DateTime.Now - timestamp.Value;\n        if (elapsed.TotalMinutes <= customTimeoutMinutes)\n        {\n            return value;\n        }\n        else\n        {\n            // Variable has expired, remove from session\n            HttpContext.Current.Session.Remove(key);\n            HttpContext.Current.Session.Remove(key + "_Timestamp");\n        }\n    }\n\n    return null;\n}\n\nvoid SetSessionVariableWithTimeout(string key, object value, int customTimeoutMinutes)\n{\n    HttpContext.Current.Session[key] = value;\n    HttpContext.Current.Session[key + "_Timestamp"] = DateTime.Now;\n}