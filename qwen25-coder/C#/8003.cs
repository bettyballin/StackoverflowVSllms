using System;\nusing System.Runtime.InteropServices;\n\npublic class ArchitectureChecker\n{\n    [DllImport("kernel32.dll", SetLastError = true, CallingConvention = CallingConvention.Winapi)]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    public static extern bool IsWow64Process(\n        [In] IntPtr hProcess,\n        [Out] out bool wow64Process);\n\n    public static bool Is64BitOperatingSystem()\n    {\n        if ((Environment.OSVersion.Version.Major == 5 && Environment.OSVersion.Version.Minor >= 1) ||\n            Environment.OSVersion.Version.Major >= 6)\n        {\n            using (var process = System.Diagnostics.Process.GetCurrentProcess())\n            {\n                bool isWow64;\n                return IsWow64Process(process.Handle, out isWow64);\n            }\n        }\n\n        return false; // If not on a supported OS version or kernel\n    }\n}