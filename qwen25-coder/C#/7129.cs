using System;\nusing Perforce.P4;\n\nclass Program\n{\n    static void Main()\n    {\n        // Set up server URI, user, and workspace\n        string uri = "perforceserver:1666";\n        string user = "yourusername";\n        string workspace = "yourworkspace";\n\n        P4Server server = new P4Server(new ServerAddress(uri), null);\n\n        try\n        {\n            // Connect to the server\n            ClientUser p4ui = new GraphicalClient();\n            server.SetUserName(user);\n            server.SetClientName(workspace);\n            server.Connect(null);\n            server.LoggedIn = true;\n\n            // Fetch the last 10 submitted changelists\n            ChangelistView changelistView = new ChangelistView(server);\n            Options options = new Options(ChangelistViewOptions.None, null) { MaxRows = 10 };\n            List<Changelist> changelists = server.GetChangelists(options);\n\n            foreach (var change in changelists)\n            {\n                Console.WriteLine($"Change ID: {change.Id}, Date: {change.Date}, Description: {change.Description}");\n            }\n        }\n        catch (P4Exception ex)\n        {\n            Console.WriteLine("Error accessing Perforce: " + ex.Message);\n        }\n        finally\n        {\n            if (server.Connected)\n                server.Disconnect();\n        }\n    }\n\n    // Example of a simple ClientUser implementation that doesn't handle prompts\n    class GraphicalClient : ClientUser\n    {\n        public override bool InputLineRequired(string prompt, out string result)\n        {\n            Console.WriteLine(prompt);\n            result = Console.ReadLine();\n            return true;\n        }\n\n        public override bool PasswordPrompt(out string password)\n        {\n            Console.Write("Password: ");\n            password = ReadPassword();\n            return true;\n        }\n\n        private static string ReadPassword()\n        {\n            StringBuilder pwd = new StringBuilder();\n            char ch = ' ';\n            while (ch != '\n' && ch != '\r')\n            {\n                ch = (char)Console.Read();\n                if (ch == '\b' && pwd.Length > 0)\n                    pwd.Remove(pwd.Length - 1, 1);\n                else if (!char.IsControl(ch))\n                    pwd.Append(ch);\n            }\n            Console.WriteLine(); // Move to the next line after reading password\n            return pwd.ToString();\n        }\n    }\n}