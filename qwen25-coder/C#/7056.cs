using System;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\npublic class LongRunningRequestHandler\n{\n    private readonly HttpClient _httpClient;\n\n    public LongRunningRequestHandler()\n    {\n        _httpClient = new HttpClient();\n    }\n\n    public async Task<string> MakeWebRequestAsync(string requestUri)\n    {\n        try\n        {\n            // Start the web request and await for completion\n            HttpResponseMessage response = await _httpClient.GetAsync(requestUri);\n\n            // Ensure the request was successful\n            response.EnsureSuccessStatusCode();\n\n            // Read the response as string asynchronously\n            string responseBody = await response.Content.ReadAsStringAsync();\n            \n            return responseBody;\n        }\n        catch (HttpRequestException e)\n        {\n            // Handle potential errors like network issues, timeouts etc.\n            Console.WriteLine($"Request error: {e.Message}");\n            throw;\n        }\n    }\n}\n\npublic class Program\n{\n    public static async Task Main(string[] args)\n    {\n        LongRunningRequestHandler handler = new LongRunningRequestHandler();\n        \n        try\n        {\n            string response = await handler.MakeWebRequestAsync("https://example.com/long-running-service");\n            \n            Console.WriteLine($"Response received: {response}");\n        }\n        catch (Exception e)\n        {\n            // Handle exceptions that can occur during the web request\n            Console.WriteLine($"Error in making web request: {e.Message}");\n        }\n    }\n}