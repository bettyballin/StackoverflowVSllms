using System;\nusing System.Data.SqlTypes;\nusing Microsoft.SqlServer.Server;\nusing System.TimeZoneInfo;\n\npublic class TimeZoneOffsetCalculator\n{\n    [SqlFunction(IsDeterministic = true, IsPrecise = true)]\n    public static SqlDateTime GetUtcTimestampForYearStart(SqlString timeZoneId)\n    {\n        try\n        {\n            // Convert the input string to a valid TimeZoneInfo object.\n            TimeZoneInfo timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId.Value);\n            \n            // Create a DateTime for January 1st of the current year in UTC.\n            int currentYear = DateTime.UtcNow.Year;\n            DateTime firstOfYearUtc = new DateTime(currentYear, 1, 1, 0, 0, 0, DateTimeKind.Utc);\n\n            // Convert that UTC time to local time in the specified time zone.\n            DateTime localTimeOnFirstOfYear = TimeZoneInfo.ConvertTimeFromUtc(firstOfYearUtc, timeZone);\n            \n            // Return the UTC timestamp of midnight on the first day of the year as perceived in the given timezone.\n            return SqlDateTime.Parse(localTimeOnFirstOfYear.ToString("yyyy-MM-dd 00:00:00"));\n        }\n        catch (TimeZoneNotFoundException)\n        {\n            throw new ArgumentException("Invalid time zone ID provided.");\n        }\n    }\n}