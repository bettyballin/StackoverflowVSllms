protected void EntityDataSource_Deleting(object sender, LinqDataSourceDeleteEventArgs e)\n{\n    // Cast the DataItem to your entity type\n    var entity = (Entity)e.OriginalObject;\n\n    try\n    {\n        DeleteEntity(entity);\n    }\n    catch (Exception ex)\n    {\n        // Handle exceptions\n        e.Cancel = true; // Cancel the operation if an error occurs\n        ModelState.AddModelError("", ex.Message);\n    }\n}\n\nprivate void DeleteEntity(Entity instance)\n{\n    using (var context = new YourDataContext())\n    {\n        // Custom logic to handle deletion, possibly involving multiple tables\n        context.Entities.DeleteOnSubmit(instance);\n        context.SubmitChanges();\n    }\n\n    throw new Exception("TEST"); // For demonstration purposes\n}