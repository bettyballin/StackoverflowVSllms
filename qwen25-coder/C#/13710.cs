using System.Web.Mvc;\nusing Site1.Models;\n\nnamespace Site1.Controllers\n{\n    public abstract class BaseController : Controller\n    {\n        protected MasterViewModel masterModel = new MasterViewModel();\n\n        public BaseController()\n        {\n            masterModel.Buttons = new List<Button>();\n            // Populate the button classes (doesn't matter how)\n            PopulateButtons(masterModel.Buttons);\n        }\n\n        protected override void OnResultExecuting(ResultExecutingContext filterContext)\n        {\n            base.OnResultExecuting(filterContext);\n\n            // Check if the result is a ViewResult\n            if (filterContext.Result is ViewResult viewResult)\n            {\n                // Ensure that the model being passed to the view inherits from MasterViewModel\n                var viewModel = viewResult.Model as MasterViewModel;\n                if (viewModel != null)\n                {\n                    // Copy the master page data to the current model's master data properties.\n                    viewModel.Buttons = masterModel.Buttons;\n                }\n            }\n        }\n\n        private void PopulateButtons(List<Button> buttons)\n        {\n            // Method implementation for populating buttons\n        }\n    }\n}