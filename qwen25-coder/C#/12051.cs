using System;\nusing System.IO;\nusing System.Web;\n\npublic class MockHttpRequest : SimpleWorkerRequest\n{\n    public MockHttpRequest(\n        string appVirtualDir, \n        string appPhysicalDir, \n        string page, \n        string query, \n        TextWriter output, \n        string host,\n        bool isSecure) :\n        base(appVirtualDir, appPhysicalDir, page, query, output)\n    {\n        this.SetPreloadedServerVariable("HTTP_HOST", host);\n        if (isSecure)\n        {\n            // Set the necessary server variables to simulate an HTTPS request\n            this.SetPreloadedServerVariable("HTTPS", "on");\n            this.SetPreloadedServerVariable("SERVER_PORT_SECURE", "1");\n            this.SetPreloadedServerVariable("SERVER_PORT", "443");\n        }\n    }\n\n    public override string GetProtocol()\n    {\n        return IsSecure() ? "https" : "http";\n    }\n\n    private bool IsSecure()\n    {\n        var https = GetKnownRequestHeader((int)HttpRequestHeader.Https);\n        if (string.Equals(https, "on", StringComparison.OrdinalIgnoreCase))\n            return true;\n        return false;\n    }\n}\n\npublic static class UnitTestingHelper\n{\n    public static HttpContext CreateMockHttpContext(string host, string page, bool isSecure)\n    {\n        string appVirtualDir = "/";\n        string appPhysicalDir = @"C:\Documents and Settings\user\My Documents\Workspace\Project\";\n        string query = string.Empty;\n        TextWriter output = null;\n\n        MockHttpRequest request\n            = new MockHttpRequest(appVirtualDir, appPhysicalDir, page, query, output, host, isSecure);\n\n        HttpContext context = new HttpContext(request);\n\n        return context;\n    }\n}