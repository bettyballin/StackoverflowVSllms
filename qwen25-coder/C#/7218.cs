using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class MyForm : Form\n{\n    public MyForm()\n    {\n        TextBox textBox = new TextBox\n        {\n            Text = "This is some example text that will wrap within the fixed dimensions of the textbox.",\n            Width = 200, // Fixed width\n            Height = 100, // Fixed height\n            Multiline = true,\n            BorderStyle = BorderStyle.None, // Optional: Remove border to mimic label appearance\n            ReadOnly = true, // Make the text uneditable\n        };\n        \n        textBox.SetReadOnlyAndUnfocusable(); // Custom method to set read-only and non-focusable\n\n        this.Controls.Add(textBox);\n    }\n\n    private static void SetReadOnlyAndUnfocusable(TextBox tb)\n    {\n        // Disable editing even if selected.\n        tb.ReadOnly = true;\n\n        // Prevent the TextBox from receiving focus\n        tb.TabStop = false; \n        tb.Enter += (s, e) => ((Control)s).Parent?.Focus(); // Return focus to parent control on attempt to set focus.\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new MyForm());\n    }\n}