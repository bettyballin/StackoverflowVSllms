// Function to calculate parity bit for 8-bit data\npublic byte calculateParity(byte data) {\n    int count = 0;\n    for (int i = 0; i < 8; i++) {\n        if ((data & (1 << i)) != 0) {\n            count++;\n        }\n    }\n    return (byte)(count % 2);\n}\n\n// Function to verify parity bit\npublic boolean verifyParity(byte data, byte expectedParity) {\n    byte calculatedParity = calculateParity(data);\n    return calculatedParity == expectedParity;\n}