using System;\nusing System.Net;\n\nclass Program\n{\n    static void Main()\n    {\n        myWebService.TestWebService webservice = new myWebService.TestWebService();\n        webservice.Url = "https://test.com/webservice?wsdl";\n\n        WebProxy proxy = new WebProxy("1.2.3.4", 8080);\n        proxy.Credentials = new NetworkCredential("username", "password");\n\n        // Enable default credentials if needed\n        // webservice.Credentials = CredentialCache.DefaultCredentials;\n\n        // Set the proxy for the web service\n        webservice.Proxy = proxy;\n\n        // Handle server certificate validation (if necessary)\n        ServicePointManager.ServerCertificateValidationCallback += \n            new RemoteCertificateValidationCallback(ValidateServerCertificate);\n\n        try\n        {\n            string response = webservice.TestWebMethod();\n            Console.WriteLine("Response: " + response);\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n\n    public static bool ValidateServerCertificate(object sender, \n       System.Security.Cryptography.X509Certificates.X509Certificate certificate,\n       System.Security.Cryptography.X509Certificates.X509Chain chain,\n       System.Net.Security.SslPolicyErrors sslPolicyErrors)\n    {\n        // Return true if the server certificate is ok to accept.\n        return true; // This should not be used in production without proper validation\n    }\n}