using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\nclass Program\n{\n    static void Main()\n    {\n        string original = "Here is some data to encrypt!";\n        using (RijndaelManaged myRijndael = new RijndaelManaged())\n        {\n            byte[] encrypted = EncryptStringToBytes_Aes(original, myRijndael.Key, myRijndael.IV);\n            \n            // Decrypt the bytes to a string.\n            string roundtrip = DecryptStringFromBytes_Aes(encrypted, myRijndael.Key, myRijndael.IV);\n\n            Console.WriteLine("Original:   {0}", original);\n            Console.WriteLine("Round Trip: {0}", roundtrip);\n        }\n    }\n\n    static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV)\n    {\n        using (AesManaged aesAlg = new AesManaged())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n            \n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n            \n            // Create the streams used for encryption.\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    return msEncrypt.ToArray();\n                }\n            }\n        }\n    }\n\n    static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV)\n    {\n        using (AesManaged aesAlg = new AesManaged())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n            \n            // Create the streams used for decryption.\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}