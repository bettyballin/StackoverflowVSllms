using System;\n\nclass Program\n{\n    static void Main()\n    {\n        // Subscribe to the CancelKeyPress event to handle console closure via Ctrl+C\n        Console.CancelKeyPress += new ConsoleCancelEventHandler(Console_CancelKeyPress);\n\n        // Alternatively, subscribe to the ProcessExit event for other exits\n        AppDomain.CurrentDomain.ProcessExit += new EventHandler(CurrentDomain_ProcessExit);\n\n        Console.WriteLine("Press Ctrl+C to exit");\n        // Keep the application running\n        System.Threading.Thread.Sleep(System.Threading.Timeout.Infinite);\n    }\n\n    private static void Console_CancelKeyPress(object sender, ConsoleCancelEventArgs e)\n    {\n        Console.WriteLine("Console close detected via CancelKeyPress event");\n        // Perform cleanup here\n        PerformCleanup();\n\n        // Set Cancel property to true to prevent the process from terminating immediately\n        e.Cancel = false; \n    }\n\n    private static void CurrentDomain_ProcessExit(object sender, EventArgs e)\n    {\n        Console.WriteLine("Process is exiting");\n        // Perform final cleanup or logging here\n        PerformFinalCleanup();\n    }\n\n    private static void PerformCleanup()\n    {\n        // Cleanup code goes here\n    }\n\n    private static void PerformFinalCleanup()\n    {\n        // Final cleanup code goes here\n    }\n}