using System;\nusing System.Runtime.InteropServices;\nusing Microsoft.Win32;\nusing MF = Microsoft.WindowsAPICodePack.MediaFoundation;\n\npublic partial class Form1 : Form {\n    public Form1() {\n        InitializeComponent();\n        \n        // List all installed video codecs (encoders and decoders)\n        var encoders = GetInstalledVideoCodecs(MF.GUID.MFT_CATEGORY_VIDEO_ENCODER);\n        var decoders = GetInstalledVideoCodecs(MF.GUID.MFT_CATEGORY_VIDEO_DECODER);\n\n        Console.WriteLine("Installed Video Encoders:");\n        foreach (var encoder in encoders) {\n            Console.WriteLine(encoder);\n        }\n\n        Console.WriteLine("\nInstalled Video Decoders:");\n        foreach (var decoder in decoders) {\n            Console.WriteLine(decoder);\n        }\n    }\n\n    private System.Collections.Generic.List<string> GetInstalledVideoCodecs(Guid categoryGuid) {\n        var codecs = new System.Collections.Generic.List<string>();\n        \n        MF.MFTEnum(\n            categoryGuid,\n            0,\n            IntPtr.Zero,\n            IntPtr.Zero,\n            out IMF.IMFActivate[] activates\n        );\n\n        foreach (var activate in activates) {\n            var guid = activate.GetGuid(MF.GUID_MFT_TRANSFORM_CLSID_Attribute);\n            codecs.Add(GetFriendlyName(guid));\n            Marshal.ReleaseComObject(activate);\n        }\n\n        return codecs;\n    }\n\n    private string GetFriendlyName(Guid guid) {\n        const string CLIDKeyName = @"CLSID\{" + "{0}" + @"}\InprocServer32";\n        var keyName = String.Format(CLIDKeyName, guid.ToString("B"));\n        RegistryKey regKey = null;\n\n        try {\n            regKey = Registry.ClassesRoot.OpenSubKey(keyName);\n            return regKey?.GetValue("FriendlyTypeName") as string ?? guid.ToString();\n        } finally {\n            regKey?.Close();\n        }\n    }\n}