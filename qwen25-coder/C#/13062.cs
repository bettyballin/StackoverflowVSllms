public static List<User> FilterAndOrderUsers(List<User> usersToFilter, string searchTerms, bool searchEmailText)\n{\n    // Convert to lower case for better comparison\n    string[] terms = searchTerms.ToLower().Trim().Split(' ');\n\n    var filteredUsers = usersToFilter.Select(user =>\n    {\n        int completeMatchCount = 0;\n        int partialMatchCount = 0;\n\n        foreach (string term in terms)\n        {\n            bool emailContainsTerm = searchEmailText && user.Email.ToLower().Contains(term);\n            bool firstNameContainsTerm = user.FirstName.ToLower().Contains(term);\n            bool surnameContainsTerm = user.Surname.ToLower().Contains(term);\n            bool positionContainsTerm = user.Position.ToLower().Contains(term);\n            bool companyContainsTerm = user.Company.ToLower().Contains(term);\n            bool officeContainsTerm = user.Office.ToLower().Contains(term);\n            bool titleContainsTerm = user.Title.ToLower().Contains(term);\n\n            // Check for complete match\n            if (emailContainsTerm || firstNameContainsTerm || surnameContainsTerm ||\n                positionContainsTerm || companyContainsTerm || officeContainsTerm ||\n                titleContainsTerm)\n            {\n                bool isCompleteMatch = false;\n\n                if (searchEmailText && user.Email.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.FirstName.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.Surname.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.Position.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.Company.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.Office.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n                if (!isCompleteMatch && user.Title.Equals(term, StringComparison.OrdinalIgnoreCase))\n                    isCompleteMatch = true;\n\n                if (isCompleteMatch)\n                {\n                    completeMatchCount++;\n                }\n                else\n                {\n                    partialMatchCount++;\n                }\n            }\n\n            // Check for match by encoded UserInviteID\n            if (!emailContainsTerm && !firstNameContainsTerm && !surnameContainsTerm &&\n                !positionContainsTerm && !companyContainsTerm && !officeContainsTerm &&\n                !titleContainsTerm)\n            {\n                int encodedID;\n                if (int.TryParse(term, out encodedID))\n                {\n                    User fromInvite = GetByEncodedUserInviteID(encodedID);\n                    if (fromInvite != null && fromInvite.ID.HasValue && fromInvite.ID.Value == user.ID)\n                        completeMatchCount++;\n                }\n            }\n        }\n\n        return new { User = user, CompleteMatches = completeMatchCount, PartialMatches = partialMatchCount };\n    })\n    .Where(x => x.CompleteMatches > 0 || x.PartialMatches > 0) // Only include users with matches\n    .OrderByDescending(x => x.CompleteMatches)\n    .ThenByDescending(x => x.PartialMatches)\n    .Select(x => x.User)\n    .ToList();\n\n    return filteredUsers;\n}