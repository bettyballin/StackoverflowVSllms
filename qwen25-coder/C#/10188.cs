using System;\nusing Aurigma.GraphicsMill;\nusing Aurigma.GraphicsMill.Transforms.ColorAdjustments;\n\npublic class ImageQualityChecker {\n    public static double CalculateSharpness(Bitmap bitmap) {\n        // Apply a high pass filter (e.g., Laplacian)\n        var laplacianFilter = new Filter3x3(new float[,] { \n            { 0, -1, 0 },\n            { -1, 5,-1 },\n            { 0, -1, 0 } }, 1, 0);\n        \n        // Get a temporary bitmap to hold the filtered result\n        using (var filteredBitmap = new Bitmap(bitmap)) {\n            laplacianFilter.Run(filteredBitmap);\n\n            // Convert to grayscale for simplicity\n            var grayScaleConverter = new Grayscale();\n            grayScaleConverter.Run(filteredBitmap);\n\n            // Calculate variance of pixel values in the filtered image\n            double mean, stdDev;\n            Statistics.GetMeanStdDev(filteredBitmap, out mean, out stdDev);\n\n            return stdDev; // Higher standard deviation indicates sharper image\n        }\n    }\n\n    public static void Main(string[] args) {\n        using (var bitmap = new Bitmap("path/to/your/image.jpg")) {\n            double sharpness = CalculateSharpness(bitmap);\n            Console.WriteLine($"Image Sharpness: {sharpness}");\n        }\n    }\n}