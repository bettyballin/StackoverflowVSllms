using System;\nusing System.Windows.Shapes;\n\npublic class ObjectSizeEstimator {\n    public static int EstimateRectangleSize(Rectangle rectangle) {\n        // Estimating the size based on known types and their size in bytes.\n        // This is a very rough estimate and does not account for all overheads.\n\n        // Base size of object reference\n        int size = IntPtr.Size; // Typically 4 or 8 bytes depending on process architecture\n\n        // Adding width and height (double type, typically 8 bytes each)\n        size += sizeof(double) * 2;\n\n        // Assuming color is a simple type like a brush with an RGB value.\n        // This is just a guess since colors can be more complex.\n        if (rectangle.Fill != null) {\n            // Adding fill color assuming a simple struct or object reference\n            size += IntPtr.Size; // Brush itself\n            size += sizeof(float) * 3; // Simple assumption of RGB\n        }\n\n        return size;\n    }\n}\n\npublic class ExampleUsage {\n    public void CheckSize() {\n        Rectangle rectangle = new Rectangle { Width = 10, Height = 20 };\n        int size = ObjectSizeEstimator.EstimateRectangleSize(rectangle);\n        Console.WriteLine($"Estimated size of the rectangle: {size} bytes");\n    }\n}