using System;\nusing System.IO;\nusing System.Linq;\nusing System.Security.Cryptography;\nusing System.Xml.Linq;\n\npublic class EncryptedXmlFileHandler\n{\n    private static readonly byte[] Key = { /* your 16, 24 or 32 byte key */ };\n    private static readonly byte[] IV = { /* your 16 byte IV */ };\n\n    public XDocument ReadEncryptedFile(string filePath)\n    {\n        using (var inputStream = new FileStream(filePath, FileMode.Open))\n        using (var decryptor = Aes.Create())\n        {\n            decryptor.Key = Key;\n            decryptor.IV = IV;\n            \n            using (var cryptoStream = new CryptoStream(inputStream, decryptor.CreateDecryptor(), CryptoStreamMode.Read))\n            using (var reader = XmlReader.Create(cryptoStream))\n            {\n                return XDocument.Load(reader);\n            }\n        }\n    }\n\n    public void WriteEncryptedFile(string filePath, XDocument document)\n    {\n        using (var outputStream = new FileStream(filePath, FileMode.Create))\n        using (var encryptor = Aes.Create())\n        {\n            encryptor.Key = Key;\n            encryptor.IV = IV;\n\n            using (var cryptoStream = new CryptoStream(outputStream, encryptor.CreateEncryptor(), CryptoStreamMode.Write))\n            {\n                document.Save(cryptoStream);\n            }\n        }\n    }\n}