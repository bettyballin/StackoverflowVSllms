protected void OpenIdLogin_LoggedIn(object sender, EventArgs e)\n{\n    var openId = new ClaimsPrincipal(User.Identity);\n    string openidIdentifier = openId.FindFirst(ClaimTypes.NameIdentifier)?.Value;\n\n    if (IsUserRegistered(openidIdentifier))\n    {\n        // User is already registered, sign them in\n        FormsAuthentication.SetAuthCookie(GetUsernameFromOpenId(openidIdentifier), createPersistentCookie: false);\n        Response.Redirect("~/Default.aspx"); // Redirect to home or secure page\n    }\n    else\n    {\n        // User is not registered, redirect to registration page with OpenID info\n        Session["PendingOpenId"] = openidIdentifier;\n        Response.Redirect("~/Register.aspx");\n    }\n}\n\nprotected bool IsUserRegistered(string openIdIdentifier)\n{\n    // Implement your logic to check if the user exists in your database\n    return true; // Simplified for example, replace with actual DB check\n}\n\nprotected string GetUsernameFromOpenId(string openIdIdentifier)\n{\n    // Retrieve username associated with OpenID from your database\n    return "exampleUser"; // Simplified for example, replace with actual DB lookup\n}