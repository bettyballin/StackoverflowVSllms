public interface IPropertySearchService\n{\n    IEnumerable<Property> Search(PropertiesSearchCriteria criteria);\n}\n\npublic class PropertySearchService : IPropertySearchService\n{\n    private readonly IPropertyTypeRepository _propertyTypeRepository;\n    private readonly IAddressRepository _addressRepository;\n    private readonly IOpeningTimeRepository _openingTimeRepository;\n\n    public PropertySearchService(IPropertyTypeRepository propertyTypeRepository, \n                               IAddressRepository addressRepository, \n                               IOpeningTimeRepository openingTimeRepository)\n    {\n        _propertyTypeRepository = propertyTypeRepository;\n        _addressRepository = addressRepository;\n        _openingTimeRepository = openingTimeRepository;\n    }\n\n    public IEnumerable<Property> Search(PropertiesSearchCriteria criteria)\n    {\n        // Implement search logic using repositories\n        return null; // Replace with actual implementation\n    }\n}\n\npublic class SearchController : Controller\n{\n    private readonly IPropertySearchService _propertySearchService;\n\n    public SearchController(IPropertySearchService propertySearchService)\n    {\n        _propertySearchService = propertySearchService;\n    }\n\n    public ActionResult Index(PropertiesSearchCriteria criteria)\n    {\n        var properties = _propertySearchService.Search(criteria);\n        return View(properties);\n    }\n}