using System;\nusing System.Data.SqlClient;\n\npublic class BookManager\n{\n    private readonly string _connectionString;\n\n    public BookManager(string connectionString)\n    {\n        _connectionString = connectionString;\n    }\n\n    public bool CanAddBook(string userName, string publisherName)\n    {\n        using (var connection = new SqlConnection(_connectionString))\n        {\n            var query = @"\n                SELECT COUNT(*)\n                FROM UserPermissions\n                INNER JOIN Books ON Books.PublisherId = BookPublishers.PublisherId\n                WHERE UserName = @UserName AND PublisherName = @PublisherName";\n            \n            var command = new SqlCommand(query, connection);\n            command.Parameters.AddWithValue("@UserName", userName);\n            command.Parameters.AddWithValue("@PublisherName", publisherName);\n\n            connection.Open();\n            return (int)command.ExecuteScalar() > 0;\n        }\n    }\n\n    public void AddBook(string bookTitle, string publisherName)\n    {\n        var identity = System.Security.Principal.WindowsIdentity.GetCurrent().Name;\n\n        if (!CanAddBook(identity, publisherName))\n        {\n            throw new UnauthorizedAccessException("User does not have permission to add books from this publisher.");\n        }\n\n        using (var connection = new SqlConnection(_connectionString))\n        {\n            // Check if the user has insert access\n            var checkAccessQuery = "SELECT HAS_PERMS_BY_NAME('Books', 'OBJECT', 'INSERT') AS CanInsert";\n            var checkCommand = new SqlCommand(checkAccessQuery, connection);\n            connection.Open();\n            bool canInsert = (bool)checkCommand.ExecuteScalar();\n\n            if (!canInsert)\n            {\n                throw new UnauthorizedAccessException("User does not have write permissions on the Books table.");\n            }\n\n            var insertQuery = "INSERT INTO Books (Title, PublisherName) VALUES (@BookTitle, @PublisherName)";\n            var command = new SqlCommand(insertQuery, connection);\n            command.Parameters.AddWithValue("@BookTitle", bookTitle);\n            command.Parameters.AddWithValue("@PublisherName", publisherName);\n\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public static void Main(string[] args)\n    {\n        if (args.Length != 2) throw new ArgumentException("Usage: Addbook.exe <Title> <PublisherName>");\n        \n        var manager = new BookManager("Your Connection String Here");\n        try\n        {\n            manager.AddBook(args[0], args[1]);\n            Console.WriteLine("Book added successfully.");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Error: {ex.Message}");\n        }\n    }\n}