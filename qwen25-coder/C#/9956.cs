public class Item\n{\n    public int ItemID { get; set; }\n    public int TrackerID { get; set; }\n    public string ID { get; set; }\n    public string Title { get; set; }\n}\n\npublic class Tracker\n{\n    public int TrackerID { get; set; }\n    public string User { get; set; }\n    public int TotalRequests { get; set; }\n    public DateTime LastRequest { get; set; }\n    public string Status { get; set; }\n    public List<Item> Items { get; set; } // Navigation property\n}\n\npublicTracker CreateNewTracker(string ids, string titles)\n{\n    var tracker = new Tracker\n    {\n        User = "randomperson13",\n        TotalRequests = 1,\n        LastRequest = DateTime.Now,\n        Status = "pending",\n        Items = SplitStringToItems(ids, titles)\n    };\n\n    // Save to database\n    db.Trackers.Add(tracker);\n    db.SaveChanges();\n\n    return tracker;\n}\n\nprivate List<Item> SplitStringToItems(string ids, string titles)\n{\n    var idList = ids.Split('-');\n    var titleList = titles.Split(new[] { '-' }, StringSplitOptions.None);\n\n    if (idList.Length != titleList.Length)\n        throw new ArgumentException("IDs and Titles count mismatch.");\n\n    var items = new List<Item>();\n    for (int i = 0; i < idList.Length; i++)\n    {\n        items.Add(new Item\n        {\n            ID = idList[i],\n            Title = titleList[i].Trim()\n        });\n    }\n\n    return items;\n}\n\npublic void ConfirmTracker(int trackerId, int itemId)\n{\n    var tracker = db.Trackers.Include(t => t.Items).FirstOrDefault(t => t.TrackerID == trackerId);\n    if (tracker == null || tracker.Status != "pending")\n        throw new InvalidOperationException("Invalid Tracker");\n\n    tracker.Items = tracker.Items.Where(i => i.ItemID == itemId).ToList();\n    tracker.Status = "live";\n\n    db.SaveChanges();\n}