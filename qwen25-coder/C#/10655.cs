using System;\nusing System.Drawing;\nusing System.Drawing.Imaging;\n\n// Assuming dataArray contains ushort pixel data\nushort[] dataArray = GetYourPixelData(); // Replace with actual method to get your data\nint width = GetWidth();\nint height = GetHeight();\n\n// Create an 8bpp grayscale Bitmap\nBitmap img = new Bitmap(width, height, PixelFormat.Format8bppIndexed);\nRectangle rect = new Rectangle(0, 0, width, height);\nBitmapData picData = img.LockBits(rect, ImageLockMode.ReadWrite, PixelFormat.Format8bppIndexed);\nIntPtr pixelStartAddress = picData.Scan0;\n\n// Convert ushort (16-bit) to byte (8-bit)\nbyte[] imageData = new byte[width * height];\nfor (int i = 0; i < dataArray.Length; i++)\n{\n    // Simple scaling down. You might want better conversion logic\n    imageData[i] = (byte)(dataArray[i] >> 8); \n}\n\n// Copy data to the BitmapData.Scan0\nSystem.Runtime.InteropServices.Marshal.Copy(imageData, 0, pixelStartAddress, imageData.Length);\n\nimg.UnlockBits(picData);\nimg.Save(path, ImageFormat.Jpeg);