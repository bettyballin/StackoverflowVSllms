using System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\n\npublic class ImageTransformer\n{\n    public static void TransformImage(string inputPath, string outputPath, PointF[] sourcePoints, PointF[] destPoints)\n    {\n        using (Bitmap image = new Bitmap(inputPath))\n        {\n            if (sourcePoints.Length != 4 || destPoints.Length != 4)\n                throw new ArgumentException("Source and destination points must contain exactly four elements.");\n\n            using (Graphics g = Graphics.FromImage(image))\n            {\n                g.Clear(Color.White);\n                using (var matrix = new Matrix())\n                {\n                    matrix.TransformPoints(sourcePoints);\n                    matrix.SetPerspectiveTransform(sourcePoints, destPoints);\n\n                    using (var wrapMode = new ImageAttributes())\n                    {\n                        // Adjust the rectangle to be transformed\n                        var imageArea = new Rectangle(0, 0, image.Width, image.Height);\n                        g.DrawImage(image, imageArea, 0.0F, 0.0F, image.Width, image.Height,\n                                      GraphicsUnit.Pixel, wrapMode, matrix);\n\n                        image.Save(outputPath, System.Drawing.Imaging.ImageFormat.Png);\n                    }\n                }\n            }\n        }\n    }\n\n    // Example usage\n    public static void Main()\n    {\n        PointF[] sourcePoints = { new PointF(0, 0), new PointF(image.Width, 0), new PointF(image.Width, image.Height), new PointF(0, image.Height) };\n        PointF[] destPoints = { new PointF(0, 0), new PointF(image.Width + 50, -50), new PointF(image.Width + 20, image.Height + 30), new PointF(-40, image.Height) };\n\n        TransformImage("input.png", "output.png", sourcePoints, destPoints);\n    }\n}