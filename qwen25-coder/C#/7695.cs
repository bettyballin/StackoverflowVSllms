public static class XmlExtensions\n{\n    public static T ThenOrDefault<T>(this T obj, Func<T, T> action) where T : XElement\n    {\n        return obj == null ? default : action(obj);\n    }\n}\n\ninternal class Program\n{\n    private static void Main()\n    {\n        //create example xml element\n        var x = XElement.Parse("<root><find><name>my-name</name></find></root>");\n\n        //old way\n        var test1 = x.Element("find");\n        if (test1 != null) test1 = test1.Element("name");\n        Console.WriteLine(test1);\n\n        //using the extension method with more descriptive name\n        var test2 = x.Element("find").ThenOrDefault(findme => findme.Element("name"));\n        Console.WriteLine(test2);\n\n        Console.ReadLine();\n    }\n}