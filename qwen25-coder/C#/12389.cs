using System;\nusing System.Collections.Generic;\nusing System.Xml;\n\npublic class Mail {\n    public string Uri { get; set; }\n    public string From { get; set; }\n    public string To { get; set; }\n    public string Subject { get; set; }\n    public string Body { get; set; }\n}\n\n// Assuming responseStream is the stream containing the WebDAV response\nXmlDocument document = new XmlDocument();\ndocument.Load(responseStream);\n\n// Set up namespaces\nXmlNamespaceManager nsmgr = new XmlNamespaceManager(document.NameTable);\nnsmgr.AddNamespace("a", "DAV:");\nnsmgr.AddNamespace("httpmail", "urn:schemas:httpmail:"); // Standard namespace for email properties\n\n// Load each response (each mail item) into an object\nXmlNodeList responseNodes = document.GetElementsByTagName("a:response");\nforeach (XmlNode responseNode in responseNodes)\n{\n    // Get the <propstat> node that contains valid HTTP responses\n    XmlNode uriNode = responseNode.SelectSingleNode("child::a:href", nsmgr);\n    XmlNode propstatNode = responseNode.SelectSingleNode("descendant::a:propstat[a:status='HTTP/1.1 200 OK']", nsmgr);\n    if (propstatNode != null)\n    {\n        // Read properties of this response, and load into a data object\n        XmlNode fromNode = propstatNode.SelectSingleNode("descendant::httpmail:from", nsmgr);\n        XmlNode toNode = propstatNode.SelectSingleNode("descendant::httpmail:to", nsmgr);\n        XmlNode subjectNode = propstatNode.SelectSingleNode("descendant::httpmail:subject", nsmgr); // Added for subject\n        XmlNode descNode = propstatNode.SelectSingleNode("descendant::httpmail:textdescription", nsmgr);\n\n        // Make new data object\n        Mail mail = new Mail();\n        if (uriNode != null) mail.Uri = uriNode.InnerText;\n        if (fromNode != null) mail.From = fromNode.InnerText;\n        if (toNode != null) mail.To = toNode.InnerText; // Ensure you're capturing the 'to' field\n        if (subjectNode != null) mail.Subject = subjectNode.InnerText; // Capture the subject\n        if (descNode != null) mail.Body = descNode.InnerText;\n        \n        unreadMail.Add(mail);\n    }\n}