using System;\nusing System.Web;\nusing System.Text.RegularExpressions;\n\npublic class QueryStringValidator\n{\n    public static bool IsValidNumeric(string value)\n    {\n        return !string.IsNullOrWhiteSpace(value) && Regex.IsMatch(value, @"^\d+$");\n    }\n\n    public static bool IsValidAlphabetic(string value)\n    {\n        return !string.IsNullOrWhiteSpace(value) && Regex.IsMatch(value, @"^[A-Za-z]+$");\n    }\n\n    public static bool IsValidStringLength(string value, int maxLength)\n    {\n        return !string.IsNullOrWhiteSpace(value) && value.Length <= maxLength;\n    }\n}\n\npublic class ExampleUsage\n{\n    public void ValidateQueries()\n    {\n        string numericValue = HttpContext.Current.Request.QueryString["num"];\n        if (QueryStringValidator.IsValidNumeric(numericValue))\n        {\n            // Proceed with processing the numeric value\n        }\n\n        string alphabeticValue = HttpContext.Current.Request.QueryString["alpha"];\n        if (QueryStringValidator.IsValidAlphabetic(alphabeticValue))\n        {\n            // Proceed with processing the alphabetic value\n        }\n\n        string shortStringValue = HttpContext.Current.Request.QueryString["shortStr"];\n        if (QueryStringValidator.IsValidStringLength(shortStringValue, 10))\n        {\n            // Proceed with processing the short string value\n        }\n    }\n}