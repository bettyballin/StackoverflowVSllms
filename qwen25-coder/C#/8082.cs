using NHibernate;\nusing NHibernate.Mapping;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class NhMappingInspector\n{\n    private readonly ISessionFactory _sessionFactory;\n\n    public NhMappingInspector(ISessionFactory sessionFactory)\n    {\n        _sessionFactory = sessionFactory;\n    }\n\n    public IEnumerable<string> GetColumnNames<T>()\n    {\n        var classMap = (ClassMapping)_sessionFactory.GetAllClassMetadata().FirstOrDefault(x => x.Key == typeof(T).FullName)?.Value.ClassMetada.ClassMapping;\n\n        if (classMap != null)\n        {\n            return classMap.PropertyIterator.Cast<Property>().SelectMany(property =>\n                property.ColumnIterator.Cast<Column>().Select(column => column.Name));\n        }\n\n        return Enumerable.Empty<string>();\n    }\n}