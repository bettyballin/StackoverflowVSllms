using System;\nusing Newtonsoft.Json;\nusing JWT; // You will need the Jwt library, available via NuGet\n\npublic class JwtHelper\n{\n    private const string secretKey = "your_secret_key_which_should_be_long";\n\n    public static string GenerateToken(string hospitalId)\n    {\n        var payload = new Dictionary<string, object>\n        {\n            { "hospital_id", hospitalId },\n            { "exp", DateTimeOffset.UtcNow.AddMinutes(15).ToUnixTimeSeconds() } // Token expiration time\n        };\n\n        string token = JWT.JsonWebToken.Encode(payload, secretKey, JwtHashAlgorithm.HS256);\n        return token;\n    }\n\n    public static bool ValidateToken(string token)\n    {\n        try\n        {\n            var payload = JWT.JsonWebToken.DecodeToObject<Dictionary<string, object>>(token, secretKey);\n\n            if (payload != null && DateTimeOffset.UtcNow.ToUnixTimeSeconds() < (long) payload["exp"])\n            {\n                // Token is valid and not expired\n                return true;\n            }\n        }\n        catch (TokenExpiredException)\n        {\n            Console.WriteLine("Token has expired");\n        }\n        catch (SignatureVerificationException)\n        {\n            Console.WriteLine("Token signature invalid.");\n        }\n\n        return false;\n    }\n}