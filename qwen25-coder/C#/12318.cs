using System;\nusing System.Threading;\n\npublic static class MonitorHelper\n{\n    public static bool TryExecuteWithLock(object syncRoot, Action actionIfSuccess, Action actionIfFail)\n    {\n        if (Monitor.TryEnter(syncRoot))\n        {\n            try\n            {\n                actionIfSuccess();\n                return true;\n            }\n            finally\n            {\n                Monitor.Exit(syncRoot);\n            }\n        }\n        else\n        {\n            actionIfFail?.Invoke();\n            return false;\n        }\n    }\n}\n\n// Usage\npublic class ExampleUsage\n{\n    private readonly object _syncRoot = new object();\n\n    public void SomeMethod()\n    {\n        MonitorHelper.TryExecuteWithLock(_syncRoot,\n            () => { /* do something */ },\n            () => { /* do something else */ });\n    }\n}