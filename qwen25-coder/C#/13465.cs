// Fetch the original record and save its timestamp\nvar key = updatedRecord.PrimaryKey; // Assuming PrimaryKey is how you identify records\nusing (context dbFetch = new context())\n{\n    var originalRecord = dbFetch.TableName.Single(x => x.PrimaryKey == key);\n    updatedRecord.TimeStamp = originalRecord.TimeStamp;\n}\n\n// Update the record using a new data context\nprivate void updateRecord(TableName updatedRecord)\n{\n    using (context dbUpdate = new context())\n    {\n        try\n        {\n            dbUpdate.TableName.Attach(updatedRecord, true);\n            dbUpdate.SubmitChanges();\n        }\n        catch (System.Data.Linq.ChangeConflictException e)\n        {\n            // Handle the conflict, possibly by refreshing and retrying or informing the user\n            Console.WriteLine("Concurrency violation occurred: " + e.Message);\n        }\n    }\n}