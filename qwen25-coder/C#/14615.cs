using System;\nusing System.IO;\nusing System.Net.Sockets;\nusing Org.BouncyCastle.Crypto.Tls;\n\nnamespace RawTlsClientExample\n{\n    public class SimpleTlsClientProtocol : DefaultTlsClient\n    {\n        protected TlsCipherFactory ContextCipherFactory { get; set; }\n        \n        public SimpleTlsClientProtocol(TlsCipherFactory contextCipherFactory)\n            : base()\n        {\n            this.ContextCipherFactory = contextCipherFactory;\n        }\n\n        public override TlsCipherFactory GetCipherFactory()\n        {\n            return ContextCipherFactory ?? base.GetCipherFactory();\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            TcpClient tcpClient = new TcpClient("your-server.com", 443);\n            Stream stream = tcpClient.GetStream();\n\n            TlsProtocolHandler handler = new TlsClientProtocol(stream, null, null);\n\n            var client = new SimpleTlsClientProtocol(null) { ResumptionSessionToAddTo = null };\n            handler.Connect(client);\n\n            using (var writer = new StreamWriter(handler.Stream))\n            {\n                writer.WriteLine("GET / HTTP/1.0");\n                writer.WriteLine();\n                writer.Flush();\n\n                using (var reader = new StreamReader(handler.Stream))\n                {\n                    string response;\n                    while ((response = reader.ReadLine()) != null)\n                        Console.WriteLine(response);\n                }\n            }\n\n            handler.Close();\n            stream.Close();\n        }\n    }\n}