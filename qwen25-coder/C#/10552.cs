public static string[] SmartSplit(string delimitedData, char delimiter, char escape)\n{\n    List<string> result = new List<string>();\n    StringBuilder currentElement = new StringBuilder();\n    bool isEscaping = false;\n\n    foreach (char c in delimitedData)\n    {\n        if (!isEscaping && c == delimiter)\n        {\n            // If we've encountered a delimiter outside of an escape sequence\n            string element = currentElement.ToString().Trim();\n            if (!string.IsNullOrEmpty(element))\n            {\n                result.Add(element);\n            }\n            currentElement.Clear();\n        }\n        else if (c == escape)\n        {\n            if (isEscaping)\n            {\n                // If the previous character was an escape, this one is literal\n                currentElement.Append(escape);\n                isEscaping = false;\n            }\n            else\n            {\n                // Mark that we are now escaping for the next character\n                isEscaping = true;\n            }\n        }\n        else\n        {\n            if (isEscaping)\n            {\n                // If we're escaping, everything goes in raw until we see another escape char\n                currentElement.Append(escape);\n            }\n            currentElement.Append(c);\n            isEscaping = false;\n        }\n    }\n\n    // Don't forget the last element\n    string finalElement = currentElement.ToString().Trim();\n    if (!string.IsNullOrEmpty(finalElement))\n    {\n        result.Add(finalElement);\n    }\n\n    return result.ToArray();\n}