using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Reflection;\nusing System.Xml;\n\npublic class XmlDocumentationReader\n{\n    private XmlDocument _xmlDoc;\n\n    public XmlDocumentationReader(string xmlDocPath)\n    {\n        if (File.Exists(xmlDocPath))\n        {\n            _xmlDoc = new XmlDocument();\n            _xmlDoc.Load(xmlDocPath);\n        }\n        else\n        {\n            throw new FileNotFoundException("The XML documentation file was not found.", xmlDocPath);\n        }\n    }\n\n    public string GetDocumentationForMember(string memberName)\n    {\n        var nodes = _xmlDoc.SelectNodes($"//member[@name='{memberName}']");\n        if (nodes != null && nodes.Count > 0)\n        {\n            return nodes[0].InnerXml;\n        }\n        return null;\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        string xmlDocPath = "YourAssembly.xml"; // Change this to your XML documentation file path.\n        var xmlReader = new XmlDocumentationReader(xmlDocPath);\n\n        // Example member name, format: T:Namespace.ClassName or M:Namespace.ClassName.MethodName\n        string memberName = "T:Full.Namespace.YourClass";\n        string documentation = xmlReader.GetDocumentationForMember(memberName);\n\n        if (documentation != null)\n        {\n            Console.WriteLine("Documentation found:");\n            Console.WriteLine(documentation);\n        }\n        else\n        {\n            Console.WriteLine("No documentation found for the specified member.");\n        }\n    }\n}