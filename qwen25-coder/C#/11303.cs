using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace DataProtectionTest\n{\n    public partial class Form1 : Form\n    {\n        private static readonly byte[] entropy = { 1, 2, 3, 4, 1, 2, 3, 4 };\n        private string encryptedPasswordBase64; // Store as Base64 string\n\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void btnEncryptIt_Click(object sender, EventArgs e)\n        {\n            byte[] pw = Encoding.UTF8.GetBytes(textBox1.Text); // Use UTF8 for encoding\n            byte[] encryptedPw = ProtectedData.Protect(pw, entropy, DataProtectionScope.LocalMachine);\n            encryptedPasswordBase64 = Convert.ToBase64String(encryptedPw); // Store as Base64 string\n        }\n\n        private void btnDecryptIt_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                byte[] pwBytes = Convert.FromBase64String(encryptedPasswordBase64);\n                byte[] decryptedPw = ProtectedData.Unprotect(pwBytes, entropy, DataProtectionScope.LocalMachine);\n                string pw = Encoding.UTF8.GetString(decryptedPw); // Use UTF8 for decoding\n                textBox2.Text = pw;\n            }\n            catch (CryptographicException ce)\n            {\n                textBox2.Text = ce.Message;\n            }\n        }\n    }\n}