using System;\nusing System.Drawing;\nusing System.Drawing.Imaging;\n\nclass ImageResizer {\n    public static void ResizeAndReduceQuality(string inputPath, string outputPath) {\n        // Load the image from the disk\n        using (var original = Image.FromFile(inputPath)) {\n            // Define new size based on 75% reduction\n            int newWidth = (int)(original.Width * 0.75);\n            int newHeight = (int)(original.Height * 0.75);\n\n            // Create a bitmap of the resized dimensions\n            using (var resizedBitmap = new Bitmap(newWidth, newHeight)) {\n                using (var graphic = Graphics.FromImage(resizedBitmap)) {\n                    graphic.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;\n                    graphic.DrawImage(original, 0, 0, newWidth, newHeight);\n                }\n\n                // Set encoder quality to reduce file size\n                EncoderParameters encoderParameters = new EncoderParameters(1);\n                encoderParameters.Param[0] = new EncoderParameter(Encoder.Quality, 50L); // Adjust quality value between 0-100\n\n                var jpegCodec = GetEncoderInfo("image/jpeg");\n                resizedBitmap.Save(outputPath, jpegCodec, encoderParameters);\n            }\n        }\n    }\n\n    private static ImageCodecInfo GetEncoderInfo(string mimeType) {\n        // Gets the image codec information for the given mime type\n        var encoders = ImageCodecInfo.GetImageEncoders();\n        foreach (var codec in encoders) {\n            if (codec.MimeType == mimeType)\n                return codec;\n        }\n        return null; // No valid encoder found, should never get here\n    }\n}\n\n// Usage\nclass Program {\n    static void Main() {\n        string inputPath = "path/to/large_image.jpg";\n        string outputPath = "path/to/thumbnail.jpg";\n        \n        ImageResizer.ResizeAndReduceQuality(inputPath, outputPath);\n    }\n}