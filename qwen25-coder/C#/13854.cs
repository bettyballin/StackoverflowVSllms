using System;\nusing System.IO;\nusing System.Web;\n\npublic class ScriptInjectorModule : IHttpModule\n{\n    public void Init(HttpApplication context)\n    {\n        context.EndRequest += (s, e) => InjectScriptIntoResponse(context.Response);\n    }\n\n    private static void InjectScriptIntoResponse(HttpResponse response)\n    {\n        if (!response.ContentType.Contains("text/html") || response.Filter == null)\n            return;\n\n        var originalStream = response.Filter;\n        using (var filter = new MemoryStream())\n        {\n            response.Filter = filter;\n            response.EndRequest += delegate\n              { \n                  filter.Position = 0;\n                  var reader = new StreamReader(filter);\n                  string htmlText = reader.ReadToEnd();\n                  var modifiedHtmlText = InsertScriptTag(htmlText, "path/to/your/script.js");\n                    \n                  var writer = new StreamWriter(originalStream);\n                  writer.Write(modifiedHtmlText);\n                  writer.Flush();\n              };\n        }\n    }\n\n    private static string InsertScriptTag(string input, string scriptPath)\n    {\n        // Find the end of </body> and insert before it\n        string insertionPoint = "</body>";\n        int index = input.IndexOf(insertionPoint, StringComparison.OrdinalIgnoreCase);\n        if (index == -1) return input; // No closing body tag found\n        var buffer = new StringBuilder(input.Length + 2048); // Adjust length as needed\n        if (index >= 0)\n        {\n            buffer.Append(input.Substring(0, index));\n            buffer.Append($"<script type='text/javascript' src='{scriptPath}'></script>");\n            buffer.Append(insertionPoint);\n            buffer.Append(input.Substring(index + insertionPoint.Length));\n        }\n        else\n        {\n            buffer.Append(input);\n        }\n\n        return buffer.ToString();\n    }\n\n    public void Dispose()\n    { \n        // Nothing to clean up here.\n    }\n}