using System;\nusing System.Collections.Generic;\nusing System.ComponentModel.DataAnnotations;\nusing System.Linq;\nusing System.Reflection;\n\n// This is a sample LINQ2SQL class with data annotations for max length\npublic partial class SampleEntity\n{\n    [MaxLength(5)]\n    public string ShortText { get; set; }\n\n    [MaxLength(10)]\n    public string MediumText { get; set; }\n}\n\npublic static class ValidationExtensions\n{\n    // Validates an object against the MaxLength attribute using data annotations\n    public static List<ValidationResult> ValidateMaxLength(this object entity)\n    {\n        var validationResults = new List<ValidationResult>();\n        var properties = entity.GetType().GetProperties();\n\n        foreach (var property in properties)\n        {\n            var maxLengthAttribute = property.GetCustomAttributes(typeof(StringLengthAttribute), true).FirstOrDefault() as StringLengthAttribute;\n            if (maxLengthAttribute != null && maxLengthAttribute.MaximumLength > 0)\n            {\n                var currentValue = property.GetValue(entity, null) as string;\n                if (!string.IsNullOrEmpty(currentValue) && currentValue.Length > maxLengthAttribute.MaximumLength)\n                {\n                    validationResults.Add(new ValidationResult(\n                        $"The length of {property.Name} cannot be more than {maxLengthAttribute.MaximumLength} characters.",\n                        new[] { property.Name }));\n                }\n            }\n\n            // If using MaxLengthAttribute instead of StringLengthAttribute, use this block\n            var maxLengthAttr = property.GetCustomAttributes(typeof(MaxLengthAttribute), true).FirstOrDefault() as MaxLengthAttribute;\n            if (maxLengthAttr != null && maxLengthAttr.Length > 0)\n            {\n                var currentValue = property.GetValue(entity, null) as string;\n                if (!string.IsNullOrEmpty(currentValue) && currentValue.Length > maxLengthAttr.Length)\n                {\n                    validationResults.Add(new ValidationResult(\n                        $"The length of {property.Name} cannot be more than {maxLengthAttr.Length} characters.",\n                        new[] { property.Name }));\n                }\n            }\n        }\n\n        return validationResults;\n    }\n}\n\n// Usage example\nclass Program\n{\n    static void Main()\n    {\n        var entity = new SampleEntity { ShortText = "abcdefgh", MediumText = "short" };\n        var results = entity.ValidateMaxLength();\n\n        foreach (var result in results)\n        {\n            Console.WriteLine(result.ErrorMessage);\n        }\n    }\n}