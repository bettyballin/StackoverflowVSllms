using System;\nusing System.Data;\nusing System.Linq;\n\npublic class HHNewsSectionBuilder\n{\n    public static void BuildHomePageSections(DataTable dt)\n    {\n        // Ensure the DataTable is of type NewsDataTable or cast it to the appropriate strongly-typed version.\n        var typedDt = dt.AsEnumerable();\n\n        // Headlines (Top 5 items where NewsType = 0)\n        var headlines = typedDt.Where(row => row.Field<int>("NewsType") == 0)\n                               .OrderByDescending(row => row.Field<DateTime>("DateAdded"))\n                               .Take(5);\n\n        foreach (var headline in headlines)\n        {\n            // Process each headline, e.g., add to UI\n            Console.WriteLine($"Headline: {headline.Field<string>("NewsTitle")}");\n        }\n\n        // Sub-headings (Top 4 items where NewsType = 1, assuming 1 for sub-headlines)\n        var subHeadlines = typedDt.Where(row => row.Field<int>("NewsType") == 1)\n                                  .OrderByDescending(row => row.Field<DateTime>("DateAdded"))\n                                  .Take(4);\n\n        foreach (var subheadline in subHeadlines)\n        {\n            // Process each sub-heading, e.g., add to UI\n            Console.WriteLine($"Sub-headline: {subheadline.Field<string>("NewsTitle")}");\n        }\n\n        // Last 5 news items for each category\n        var distinctCategories = typedDt.AsEnumerable()\n                                       .Select(row => row.Field<int>("CategoryID"))\n                                       .Distinct();\n\n        foreach (var categoryId in distinctCategories)\n        {\n            var lastFiveInCategory = typedDt.Where(row => row.Field<int>("CategoryID") == categoryId)\n                                            .OrderByDescending(row => row.Field<DateTime>("DateAdded"))\n                                            .Take(5);\n\n            Console.WriteLine($"Category ID: {categoryId}");\n            foreach (var newsItem in lastFiveInCategory)\n            {\n                // Process each news item in the category, e.g., add to UI\n                Console.WriteLine($"- News Title: {newsItem.Field<string>("NewsTitle")}");\n            }\n        }\n    }\n}