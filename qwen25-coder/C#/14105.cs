using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.RegularExpressions;\n\npublic class ImageSearcher\n{\n    public List<Image> SearchImages(List<Image> images, string query)\n    {\n        // Normalize and tokenize the input query into words.\n        var keywords = Regex.Replace(query.ToLower(), @"[^\w\s]", "").Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\n        return images.Select(image => new \n        {\n            Image = image,\n            MatchingCount = MatchCount(Regex.Replace(image.Caption.ToLower(), @"[^\w\s]", "").Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries), keywords)\n        })\n        .Where(x => x.MatchingCount > 0) // Only consider images that match at least one keyword\n        .OrderByDescending(x => x.MatchingCount) // Order by the number of matched keywords\n        .Select(x => x.Image)\n        .ToList();\n    }\n\n    private static int MatchCount(string[] captionWords, string[] keywords)\n    {\n        return keywords.Count(keyword => captionWords.Contains(keyword));\n    }\n}\n\npublic class Image\n{\n    public string Caption { get; set; }\n}