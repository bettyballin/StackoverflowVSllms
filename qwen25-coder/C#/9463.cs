using System;\nusing System.Runtime.InteropServices;\n\nclass Extern {\n    // Ensure the calling convention matches your C++ DLL\n    [DllImport("TestDLL.dll", EntryPoint = "Initkey", ExactSpelling = true, CallingConvention = CallingConvention.Cdecl)]\n    public static extern void Initkey([In] byte[] key);\n\n    [DllImport("TestDLL.dll", EntryPoint = "encode", ExactSpelling = true, CallingConvention = CallingConvention.Cdecl)]\n    public static unsafe extern void encode([In, Out] UInt32* stream);\n}\n\nclass Program {\n    static void Main() {\n        // Initialize the key\n        byte[] key = new byte[16]; // Example key length for Blowfish\n        Extern.Initkey(key);\n\n        // Data to encode (block size of Blowfish is 8 bytes, or 2 UInt32s)\n        UInt32[] dataBlock = new UInt32[2];\n        dataBlock[0] = 123456789;\n        dataBlock[1] = 987654321;\n\n        unsafe {\n            fixed (UInt32* pBlock = &dataBlock[0]) {\n                Extern.encode(pBlock);\n            }\n        }\n\n        // Now, 'dataBlock' contains the encoded data\n        Console.WriteLine($"Encoded values: {dataBlock[0]}, {dataBlock[1]}");\n    }\n}