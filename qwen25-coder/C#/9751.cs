// Use PBKDF2 for hashing passwords instead of SHA.\npublic static string HashPassword(string password, byte[] salt)\n{\n    using (var rfc2898DeriveBytes = new Rfc2898DeriveBytes(password, salt, 10000))\n    {\n        return Convert.ToBase64String(rfc2898DeriveBytes.GetBytes(256));\n    }\n}\n\n// Example method for user login\npublic bool Login(string username, string password)\n{\n    var user = GetFromDatabase(username);\n    if (user != null)\n    {\n        byte[] salt = Convert.FromBase64String(user.Salt); // Assume Salt is stored in database\n        string hashedPasswordFromInput = HashPassword(password, salt);\n        return hashedPasswordFromInput == user.HashedPassword;\n    }\n    return false;\n}\n\n// Ensure proper session management and logout\npublic void Logout()\n{\n    Session.Abandon();\n    Response.Cookies.Add(new HttpCookie("ASP.NET_SessionId", "") { Expires = DateTime.Now.AddDays(-1) });\n    FormsAuthentication.SignOut();\n}