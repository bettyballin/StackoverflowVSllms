public interface IEagerLoadStrategy\n{\n    List<Order> LoadOrdersWithDetails(DateTime startDate, DateTime endDate);\n}\n\npublic class SingleJoinEagerLoadStrategy : IEagerLoadStrategy\n{\n    private readonly DbContext _dbContext;\n\n    public SingleJoinEagerLoadStrategy(DbContext dbContext)\n    {\n        _dbContext = dbContext;\n    }\n\n    public List<Order> LoadOrdersWithDetails(DateTime startDate, DateTime endDate)\n    {\n        var result = (from oc in _dbContext.OrderCategories\n                      join c in _dbContext.Customers on oc.CustomerCategoryId equals c.CustomerCategoryId\n                      join o in _dbContext.Orders on c.CustomerId equals o.CustomerId\n                      join od in _dbContext.OrderDetails on o.OrderId equals od.OrderId\n                      where o.OrderDate >= startDate && o.OrderDate <= endDate\n                      select o).ToList();\n\n        return result;\n    }\n}\n\npublic class MultipleQueriesEagerLoadStrategy : IEagerLoadStrategy\n{\n    private readonly DbContext _dbContext;\n\n    public MultipleQueriesEagerLoadStrategy(DbContext dbContext)\n    {\n        _dbContext = dbContext;\n    }\n\n    public List<Order> LoadOrdersWithDetails(DateTime startDate, DateTime endDate)\n    {\n        var orders = _dbContext.Orders.Where(o => o.OrderDate >= startDate && o.OrderDate <= endDate).ToList();\n\n        var customerIds = orders.Select(o => o.CustomerId).Distinct().ToList();\n        var customers = _dbContext.Customers.Where(c => customerIds.Contains(c.CustomerId)).ToList();\n\n        var orderIds = orders.Select(o => o.OrderId).ToList();\n        var orderDetails = _dbContext.OrderDetails.Where(od => orderIds.Contains(od.OrderId)).ToList();\n        \n        // Manually associate collections here or use some other mechanism\n\n        return orders;\n    }\n}\n\npublic class DbContext\n{\n    public DbSet<OrderCategory> OrderCategories { get; set; }\n    public DbSet<Customer> Customers { get; set; }\n    public DbSet<Order> Orders { get; set; }\n    public DbSet<OrderDetail> OrderDetails { get; set; }\n\n    // ... other methods and properties ...\n}\n\n// Usage\nvar strategy = new SingleJoinEagerLoadStrategy(dbContext);\nvar orders = strategy.LoadOrdersWithDetails(new DateTime(2008, 5, 5), new DateTime(2008, 12, 31));