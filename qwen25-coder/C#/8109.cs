// Assuming Enumerable is a List<T> or IList<T>\nvar tempList = new List<ItemType>(); // Replace ItemType with your actual type\n\nforeach (var item in Enumerable)\n{\n    var tempInnerList = new List<InnerItemType>(); // Replace InnerItemType with your actual type\n\n    foreach (var item2 in item.Enumerable)\n    {\n        tempInnerList.Add(new InnerItemType(item2)); // Create new instance of InnerItemType based on item2\n    }\n\n    tempList.AddRange(tempInnerList);\n}\n\n// After the loops, if you want to add all items back to Enumerable\nforeach (var newItem in tempList)\n{\n    Enumerable.Add(newItem); // Make sure Enumerable supports Add method\n}