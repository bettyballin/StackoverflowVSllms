using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Reflection;\n\npublic static DataSet ConvertListToDataSet<T>(List<T> items)\n{\n    var dataSet = new DataSet();\n    var dataTable = new DataTable(typeof(T).Name);\n\n    // Get all the properties of T\n    PropertyInfo[] props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);\n    \n    foreach (PropertyInfo prop in props)\n    {\n        // Defining type of data column gives proper framework to creation table\n        var type = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType;\n        dataTable.Columns.Add(prop.Name, type);\n    }\n\n    foreach (T item in items)\n    {\n        DataRow row = dataTable.NewRow();\n        foreach (PropertyInfo prop in props)\n        {\n            row[prop.Name] = prop.GetValue(item, null) ?? DBNull.Value;\n        }\n        dataTable.Rows.Add(row);\n    }\n    \n    dataSet.Tables.Add(dataTable);\n    return dataSet;\n}