using System;\nusing System.IO;\n\nclass Program\n{\n    static void Main()\n    {\n        string usbDevicePath = string.Empty;\n\n        // List all logical drives\n        DriveInfo[] allDrives = DriveInfo.GetDrives();\n\n        foreach (DriveInfo d in allDrives)\n        {\n            if (d.IsReady && d.DriveType == DriveType.Removable)\n            {\n                usbDevicePath = d.RootDirectory.FullName;\n                break;\n            }\n        }\n\n        // Fallback to querying for a volume name without a drive letter\n        if (string.IsNullOrEmpty(usbDevicePath))\n        {\n            try\n            {\n                usbDevicePath = GetVolumeName("\\\\?\\Volume{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\\");\n                // Replace "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX" with your volume ID\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine("Error finding USB drive: " + ex.Message);\n            }\n        }\n\n        if (!string.IsNullOrEmpty(usbDevicePath))\n        {\n            try\n            {\n                foreach (var file in Directory.GetFiles(usbDevicePath, "*.mp3", SearchOption.AllDirectories))\n                {\n                    FileInfo fileInfo = new FileInfo(file);\n                    Console.WriteLine("Found file: " + fileInfo.FullName);\n                }\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine("Error accessing files on USB drive: " + ex.Message);\n            }\n        }\n        else\n        {\n            Console.WriteLine("USB device not found.");\n        }\n    }\n\n    private static string GetVolumeName(string volumeId)\n    {\n        // This is a simplified example. In practice, you might need to use P/Invoke or other techniques\n        // to find the correct path based on the volume ID.\n        return Directory.GetDirectoryRoot(volumeId);\n    }\n}