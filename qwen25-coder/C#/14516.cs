// Example implementation in C#\n   public static double JaroWinklerDistance(string s1, string s2)\n   {\n       char[] s1Arr = s1.ToCharArray();\n       char[] s2Arr = s2.ToCharArray();\n       int matchDistance = Math.Max(s1.Length / 2 - 1, 0);\n       bool[] matched = new bool[Math.Max(s1Arr.Length, s2Arr.Length)];\n       \n       int mIndex = 0;\n       for (int i = 0; i < s1Array.Length; i++)\n           for (int j = Math.Max(0, i - matchDistance); j <= Math.Min(i + matchDistance, s2Arr.Length - 1); j++)\n               if (!matched[j] && s2Arr[j] == s1Arr[i])\n               {\n                   matched[j] = true;\n                   mIndex++;\n                   break;\n               }\n\n       if (mIndex == 0) return 0.0;\n\n       int[] ms1 = new int[mIndex];\n       int[] ms2 = new int[mIndex];\n       mIndex = 0;\n       for (int i = 0; i < s1Arr.Length; i++)\n           for (int j = Math.Max(0, i - matchDistance); j <= Math.Min(i + matchDistance, s2Arr.Length - 1); j++)\n               if (!matched[j] && s2Arr[j] == s1Arr[i])\n               {\n                   matched[j] = true;\n                   ms1[mIndex] = s1Arr[i];\n                   ms2[mIndex] = s2Arr[j];\n                   mIndex++;\n                   break;\n               }\n\n       int transpositions = 0;\n       for (int q = 0; q < mIndex - 1; q++)\n           if (ms1[q] != ms2[q])\n               transpositions++;\n\n       double dist = (mIndex / (double)s1.Length +\n                     mIndex / (double)s2.Length +\n                     (mIndex - transpositions / 2.0) / mIndex) / 3.0;\n\n       int j = s1Length < 4 ? s1Length : 4;\n       int c = 0;\n       while (j-- > 0)\n           if (s1Arr[j] == s2Arr[j])\n               c++;\n           else\n               break;\n       \n       return dist + Math.Min(0.1 * c * (1 - dist), 0.1);\n   }