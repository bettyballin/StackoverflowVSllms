protected override void OnKeyDown(KeyEventArgs e)\n{\n    // Check if this is a control combination like Ctrl+C, Ctrl+V, etc.\n    if (e.Control && (e.KeyCode == Keys.C || e.KeyCode == Keys.V || e.KeyCode == Keys.X))\n    {\n        base.OnKeyDown(e); // Allow these key combinations\n        return;\n    }\n\n    // Allow navigation keys such as Backspace, Tab, Arrow keys\n    if (e.KeyCode == Keys.Back || e.KeyCode == Keys.Tab ||\n        e.KeyCode == Keys.Left || e.KeyCode == Keys.Right)\n    {\n        base.OnKeyDown(e);\n        return;\n    }\n\n    // Cancel all other non-printable characters not handled above\n    e.Handled = true; \n}\n\nprotected override void OnKeyPress(KeyPressEventArgs e)\n{\n    if (String.IsNullOrEmpty(this._ValidCharExpression))\n    {\n        base.OnKeyPress(e); // No validation set, allow everything\n    }\n    else\n    {\n        bool isValidChar = Regex.IsMatch(e.KeyChar.ToString(), this._ValidCharExpression);\n        if (!isValidChar && !char.IsControl(e.KeyChar)) // char.IsControl allows non-printable control characters through\n        {\n            e.Handled = true; // Ignore invalid characters\n        }\n\n        base.OnKeyPress(e);\n    }\n}