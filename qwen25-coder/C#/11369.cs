using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Text;\nusing System.Xml.Serialization;\n\npublic class SccmAction : IDelivery\n{\n    public string MachineName { get; set; }\n    public string CollectionName { get; set; }\n    public string Action { get; set; }\n    public DateTime EntryDateTime { get; set; }\n\n    public void Deliver()\n    {\n        throw new NotImplementedException();\n    }\n}\n\npublic interface IDelivery\n{\n    void Deliver();\n}\n\npublic static class Program\n{\n    public static T DeserializeObject<T>(byte[] ba)\n    {\n        var serializer = new XmlSerializer(typeof(T));\n        using (var memoryStream = new MemoryStream(ba))\n        using (var streamReader = new StreamReader(memoryStream, Encoding.UTF8))\n        {\n            return (T)serializer.Deserialize(streamReader);\n        }\n    }\n\n    public static void Main()\n    {\n        string connectionString = "YourConnectionStringHere";\n        string receiveString = "RECEIVE TOP (1) conversation_handle AS ConversationHandle, message_body " +\n                               "FROM [dbo].[MY_QUEUE_SubmitQueue]";\n\n        using (var connection = new SqlConnection(connectionString))\n        {\n            var command = new SqlCommand(receiveString, connection);\n            connection.Open();\n\n            using (var reader = command.ExecuteReader())\n            {\n                while (reader.Read())\n                {\n                    byte[] messageBytes = (byte[])reader["message_body"];\n                    SccmAction sa = DeserializeObject<SccmAction>(messageBytes);\n                    IDelivery iD = sa as IDelivery;\n                    // Process your objects here...\n                }\n            }\n        }\n    }\n}