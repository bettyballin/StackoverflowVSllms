using System;\nusing System.Collections.Generic;\nusing System.Reflection;\n\nclass Car { }\nclass Other {\n    public List<T> GetAll<T>() {\n        // Dummy implementation for demonstration\n        return new List<T>();\n    }\n}\n\nclass Program {\n    static void Main() {\n        Type carType = typeof(Car);\n        var otherInstance = new Other();\n\n        MethodInfo methodInfo = typeof(Other).GetMethod("GetAll");\n        MethodInfo genericMethodInfo = methodInfo.MakeGenericMethod(carType);\n        \n        // Invoke the method using reflection\n        List<object> carsList = (List<object>)genericMethodInfo.Invoke(otherInstance, null);\n\n        // If you need to work with strongly typed list (not recommended due to runtime issues)\n        var typedCarsList = carsList.Cast<Car>().ToList();\n    }\n}