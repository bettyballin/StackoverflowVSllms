using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Linq;\nusing System.Windows.Forms;\n\npublic class QuickSearchForm : Form\n{\n    private TextBox searchBox;\n    private ListView listView;\n    private IList<string> dataItems = new List<string>();\n\n    public QuickSearchForm()\n    {\n        searchBox = new TextBox { Dock = DockStyle.Top };\n        listView = new ListView { Dock = DockStyle.Fill, View = View.List };\n\n        // Sample data\n        dataItems.Add("Alice Johnson");\n        dataItems.Add("Bob Smith");\n        dataItems.Add("Charlie Brown");\n\n        // Add controls to form\n        Controls.Add(listView);\n        Controls.Add(searchBox);\n\n        // Subscribe to the TextChanged event of searchbox\n        searchBox.TextChanged += SearchBox_TextChanged;\n\n        // Populate listview initially\n        UpdateListView(string.Empty);\n    }\n\n    private void UpdateListView(string filterText)\n    {\n        listView.Items.Clear();\n        if (string.IsNullOrEmpty(filterText))\n        {\n            foreach (var item in dataItems)\n                listView.Items.Add(new ListViewItem(item));\n        }\n        else\n        {\n            // Use LINQ to filter items based on the search text\n            var filteredItems = dataItems.Where(item => item.IndexOf(filterText, StringComparison.OrdinalIgnoreCase) >= 0);\n            foreach (var item in filteredItems)\n                listView.Items.Add(new ListViewItem(item));\n        }\n    }\n\n    private void SearchBox_TextChanged(object sender, EventArgs e)\n    {\n        UpdateListView(searchBox.Text);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new QuickSearchForm());\n    }\n}