using System;\nusing System.IO;\nusing System.Threading;\n\npublic class Logger\n{\n    private static Mutex mutex = new Mutex(false, "YourUniqueMutexName");\n\n    public static void LogMessage(string message)\n    {\n        bool hasHandle = false;\n        try\n        {\n            // Wait for the mutex: wait indefinitely.\n            hasHandle = mutex.WaitOne(-1, false);\n            using (FileStream logFile = new FileStream("log.txt", FileMode.Append, FileAccess.Write, FileShare.None))\n            using (StreamWriter writer = new StreamWriter(logFile))\n            {\n                writer.WriteLine($"{DateTime.Now}: {message}");\n            }\n        }\n        catch (ApplicationException ex)\n        {\n            Console.WriteLine($"An exception occurred: {ex.Message}");\n        }\n        finally\n        {\n            // Release the Mutex if it was acquired.\n            if (hasHandle)\n            {\n                mutex.ReleaseMutex();\n            }\n        }\n    }\n}