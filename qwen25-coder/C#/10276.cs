using System;\nusing System.Data.SqlClient;\nusing System.IO;\nusing System.Web;\n\npublic class DataToXMLHandler : IHttpHandler {\n    public void ProcessRequest(HttpContext context)\n    {\n        // Set the content type to application/xml for XML output\n        context.Response.ContentType = "application/xml";\n\n        using (SqlConnection conn = new SqlConnection("your_connection_string_here"))\n        {\n            try\n            {\n                conn.Open();\n                string query = "SELECT * FROM YourTable WHERE DateField BETWEEN @startDate AND @endDate";\n                SqlCommand cmd = new SqlCommand(query, conn);\n                \n                // Parameters to prevent SQL Injection\n                cmd.Parameters.AddWithValue("@startDate", context.Request.Form["startDate"]);\n                cmd.Parameters.AddWithValue("@endDate", context.Request.Form["endDate"]);\n\n                using (SqlDataReader reader = cmd.ExecuteReader())\n                {\n                    StringWriter sw = new StringWriter();\n                    System.Xml.XmlWriter writer = System.Xml.XmlWriter.Create(sw);\n\n                    // Start the XML document and manually write elements according to your schema\n                    writer.WriteStartElement("YourRootElement");\n                    \n                    while (reader.Read())\n                    {\n                        writer.WriteStartElement("Record");\n                        \n                        // Write each element of the record, adhering to your predefined format\n                        writer.WriteElementString("Field1", reader["Field1"].ToString());\n                        writer.WriteElementString("Field2", reader["Field2"].ToString());\n                        \n                        writer.WriteEndElement();\n                    }\n\n                    // End the root XML tag\n                    writer.WriteEndElement();\n\n                    // Close the XmlWriter object and flush the memory stream to string writer.\n                    writer.Close();\n\n                    // Return XML data in response\n                    context.Response.Write(sw.ToString());   // sends the XML back to caller\n                }\n            }\n            catch (Exception ex)\n            {\n                // Log or handle exception appropriately\n                context.Response.StatusCode = 500;\n                context.Response.StatusDescription = "Error processing request: " + ex.Message;\n            }\n        }\n    }\n\n    public bool IsReusable => false;\n}