using System;\nusing System.Collections.Generic;\nusing System.Data;\n\npublic class MyObject\n{\n    public string Property1 { get; set; }\n    public string Property2 { get; set; }\n    public string Property3 { get; set; }\n    public string Property4 { get; set; }\n    public string Property5 { get; set; }\n    public string Property6 { get; set; }\n    public string Property7 { get; set; }\n    public string Property8 { get; set; }\n    public string Property9 { get; set; }\n}\n\npublic class Converter\n{\n    public static DataSet ConvertToDataSet(List<MyObject> list)\n    {\n        // Create a new DataTable.\n        DataTable table = new DataTable();\n\n        // Define the columns for the DataTable.\n        table.Columns.Add("Property1", typeof(string));\n        table.Columns.Add("Property2", typeof(string));\n        table.Columns.Add("Property3", typeof(string));\n        table.Columns.Add("Property4", typeof(string));\n        table.Columns.Add("Property5", typeof(string));\n        table.Columns.Add("Property6", typeof(string));\n        table.Columns.Add("Property7", typeof(string));\n        table.Columns.Add("Property8", typeof(string));\n        table.Columns.Add("Property9", typeof(string));\n\n        // Add rows to the DataTable.\n        foreach (var obj in list)\n        {\n            DataRow row = table.NewRow();\n            row["Property1"] = obj.Property1;\n            row["Property2"] = obj.Property2;\n            row["Property3"] = obj.Property3;\n            row["Property4"] = obj.Property4;\n            row["Property5"] = obj.Property5;\n            row["Property6"] = obj.Property6;\n            row["Property7"] = obj.Property7;\n            row["Property8"] = obj.Property8;\n            row["Property9"] = obj.Property9;\n\n            table.Rows.Add(row);\n        }\n\n        // Create a DataSet and add the DataTable.\n        DataSet dataSet = new DataSet();\n        dataSet.Tables.Add(table);\n\n        return dataSet;\n    }\n}