using System;\nusing System.Globalization;\nusing System.Text.RegularExpressions;\n\npublic class TimeParser\n{\n    public static bool TryParseTime(string input, out DateTime time)\n    {\n        time = new DateTime();\n        if (string.IsNullOrWhiteSpace(input))\n            return false;\n\n        // Regular expression to match various time formats\n        var pattern = @"^\s*(\d{1,2})(?::(\d{2}))?\s*([ap]?)\s*$";\n        var match = Regex.Match(input.Trim(), pattern, RegexOptions.IgnoreCase);\n\n        if (!match.Success)\n            return false;\n\n        int hour;\n        if (!int.TryParse(match.Groups[1].Value, out hour))\n            return false;\n\n        int minute = 0;\n        if (match.Groups[2].Success && !int.TryParse(match.Groups[2].Value, out minute))\n            return false;\n\n        string amPm = match.Groups[3].Value.ToLowerInvariant();\n\n        // Adjust hour based on AM/PM\n        if (amPm == "p" && hour < 12)\n            hour += 12;\n        else if (amPm == "a" && hour == 12)\n            hour = 0;\n\n        time = new DateTime(1, 1, 1, hour, minute, 0);\n        return true;\n    }\n}\n\n// Usage\npublic class Program\n{\n    public static void Main()\n    {\n        string input = "8 a";\n        if (TimeParser.TryParseTime(input, out var time))\n            Console.WriteLine($"Parsed Time: {time.TimeOfDay}");\n        else\n            Console.WriteLine("Failed to parse time.");\n    }\n}