using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("kernel32.dll", SetLastError = true)]\n    private static extern bool GetExitCodeProcess(IntPtr hProcess, out uint lpExitCode);\n\n    const uint STILL_ACTIVE = 0x00000103; // Still Active (0x103)\n\n    static void Main()\n    {\n        ShellExecuteEx(ref info);\n        clientProcessId = NativeMethods.GetProcessId(info.hProcess);\n        IntPtr hProcess = info.hProcess;\n\n        if (!GetExitCodeProcess(hProcess, out uint exitCode))\n        {\n            // Handle error\n            throw new InvalidOperationException("Could not get process exit code.");\n        }\n\n        bool isRunning = exitCode == STILL_ACTIVE;\n        Console.WriteLine(isRunning ? "Process is running." : "Process has exited.");\n\n        if (isRunning)\n        {\n            // Run new process logic here...\n        }\n    }\n}