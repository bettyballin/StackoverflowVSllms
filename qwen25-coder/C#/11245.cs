using System;\n    using System.Collections.Generic;\n    using System.IO;\n    using System.Runtime.Serialization;\n    using System.Xml;\n    using System.Xml.Schema;\n    using System.Xml.Serialization;\n\n    [Serializable]\n    public class StorageObject {\n        public string Name { get; set; }\n        public string Birthday { get; set; }\n        public OtherInfo OtherInfo { get; set; }\n    }\n\n    public class OtherInfo : IXmlSerializable {\n        private Dictionary<string, string> _data = new Dictionary<string, string>();\n\n        [XmlIgnore]\n        public Dictionary<string, string> Data => _data;\n\n        public void Add(string name, string value) {\n            _data[name] = value;\n        }\n\n        #region Implementation of IXmlSerializable\n\n        XmlSchema IXmlSerializable.GetSchema() {\n            return null;\n        }\n\n        void IXmlSerializable.ReadXml(XmlReader reader) {\n            if (reader.MoveToFirstAttribute()) {\n                do {\n                    Data[reader.Name] = reader.Value;\n                } while (reader.MoveToNextAttribute());\n            }\n        }\n\n        void IXmlSerializable.WriteXml(XmlWriter writer) {\n            foreach (var kvp in _data) {\n                writer.WriteAttributeString(kvp.Key, kvp.Value);\n            }\n        }\n\n        #endregion\n    }