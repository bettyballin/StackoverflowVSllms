using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Field {\n    public string ObjectName { get; set; }\n    public string ObjectType { get; set; }\n    public string FieldName { get; set; }\n    public string FieldValue { get; set; }\n\n    // Constructor...\n    public Field(string objectName, string objectType, string fieldName, string fieldValue) {\n        ObjectName = objectName;\n        ObjectType = objectType;\n        FieldName = fieldName;\n        FieldValue = fieldValue;\n    }\n}\n\nclass Program {\n    static void Main() {\n        List<Field> fieldList = new List<Field> {\n            new Field("Object1", "TypeA", "Field1", "Value1"),\n            new Field("Object2", "TypeB", "Field2", "Value2"),\n            new Field("Object1", "TypeC", "Field3", "Value3")\n        };\n\n        // Get distinct object names\n        var distinctObjectNames = fieldList.Select(field => field.ObjectName).Distinct();\n\n        // Example of using the result, e.g., printing or inserting into a checked list box\n        foreach (var name in distinctObjectNames) {\n            Console.WriteLine(name);\n        }\n    }\n}