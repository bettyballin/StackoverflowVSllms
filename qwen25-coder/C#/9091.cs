using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main()\n    {\n        // Initialize dictionary with empty strings\n        IDictionary<string, string> dictionary = new Dictionary<string, string>\n        {\n            { "Item1", "" },\n            { "Item2", "" },\n            { "Item3", "" }\n        };\n\n        // List of words to process\n        List<string> words = new List<string> { "apple", "banana", "cherry", "date", "elderberry", "fig", "grape" };\n\n        int maxLen = 50;\n        string[] keys = { "Item1", "Item2", "Item3" };\n        int currentKeyIndex = 0;\n\n        foreach (var word in words)\n        {\n            if (currentKeyIndex >= keys.Length) break; // If all items are filled, stop\n\n            string currentItem = dictionary[keys[currentKeyIndex]];\n\n            // Check if adding the new word exceeds the max length\n            if (string.IsNullOrEmpty(currentItem) || (currentItem.Length + 1 + word.Length <= maxLen))\n            {\n                // Append the word to the current item\n                dictionary[keys[currentKeyIndex]] = string.IsNullOrEmpty(currentItem) ? word : currentItem + " " + word;\n            }\n            else\n            {\n                // Move to the next item if the current one is full\n                currentKeyIndex++;\n                if (currentKeyIndex < keys.Length)\n                {\n                    dictionary[keys[currentKeyIndex]] = word;\n                }\n            }\n        }\n\n        // Output the result\n        foreach (var key in keys)\n        {\n            Console.WriteLine($"{key}: {dictionary[key]}");\n        }\n    }\n}