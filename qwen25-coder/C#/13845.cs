public class ResourceHandler : IHttpHandler\n{\n    public bool IsReusable => false;\n\n    public void ProcessRequest(HttpContext context)\n    {\n        var requestedResource = context.Request.Path.Substring(1); // Remove leading slash\n        var assembly = typeof(ResourceHandler).Assembly;\n        var resourcePath = $"YourNamespace.{requestedResource.Replace('\\', '.').Replace('/', '.')}";\n\n        using (var stream = assembly.GetManifestResourceStream(resourcePath))\n        {\n            if (stream == null)\n            {\n                context.Response.StatusCode = 404;\n                return;\n            }\n\n            const string contentTypeMap =\n                @".aspx,text/html\n                .css,text/css\n                .js,application/javascript\n                .png,image/png\n                .gif,image/gif\n                .jpg,image/jpeg";\n\n            var fileExtension = Path.GetExtension(requestedResource);\n            var mimeTypes = contentTypeMap.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries)\n                                           .Select(s => s.Split(','))\n                                           .ToDictionary(pair => pair[0], pair => pair[1]);\n\n            context.Response.ContentType = mimeTypes[fileExtension];\n            stream.CopyTo(context.Response.OutputStream);\n        }\n    }\n}