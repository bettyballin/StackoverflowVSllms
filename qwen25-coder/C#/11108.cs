using System;\nusing System.Reflection;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        if (args.Length < 1)\n        {\n            Console.WriteLine("Usage: ProgIDFinder.exe <assemblyPath>");\n            return;\n        }\n\n        string assemblyPath = args[0];\n\n        try\n        {\n            Assembly assembly = Assembly.LoadFrom(assemblyPath);\n            \n            foreach (Type type in assembly.GetTypes())\n            {\n                if (!Attribute.IsDefined(type, typeof(System.Runtime.InteropServices.ComVisibleAttribute)))\n                    continue;\n\n                object[] attributes = type.GetCustomAttributes(typeof(System.Runtime.InteropServices.ProgIdAttribute), false);\n\n                if (attributes.Length > 0)\n                {\n                    System.Runtime.InteropServices.ProgIdAttribute progIdAttr = \n                        attributes[0] as System.Runtime.InteropServices.ProgIdAttribute;\n\n                    Console.WriteLine($"Type: {type.FullName}, ProgID: {progIdAttr.Value}");\n                }\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n}