using System;\nusing System.Web.UI;\nusing System.DirectoryServices.AccountManagement;\n\npublic partial class YourDynamicDataPage : Page {\n    protected void Page_Load(object sender, EventArgs e) {\n        // Get the currently logged in username\n        string currentUsername = User.Identity.Name.Split('\\')[1];\n\n        using (PrincipalContext context = new PrincipalContext(ContextType.Domain))\n        using (UserPrincipal userPrincipal = UserPrincipal.FindByIdentity(context, IdentityType.SamAccountName, currentUsername)) {\n            if(userPrincipal != null) {\n                // Check if the user is in a specific role\n                bool isInRoleX = userPrincipal.IsMemberOf(context, "CN=YourGroupNameForTableX,CN=Users,DC=yourdomain,DC=com");\n                bool isInRoleY = userPrincipal.IsMemberOf(context, "CN=YourGroupNameForTableY,CN=Users,DC=yourdomain,DC=com");\n\n                // Control visibility based on roles\n                TableXPath.Visible = isInRoleX;\n                TableYPath.Visible = isInRoleY;\n            }\n        }\n    }\n}\n\npublic static class UserPrincipalExtensions {\n    public static bool IsMemberOf(this UserPrincipal userPrincipal, PrincipalContext context, string groupName) {\n        using (GroupPrincipal group = GroupPrincipal.FindByIdentity(context, groupName)) {\n            return group != null && userPrincipal.IsMemberOf(group);\n        }\n    }\n}