using System.IO;\nusing	iText.Kernel.Pdf;\nusing iText.Kernel.Pdf.Canvas.Parser.Listener;\nusing iText.Kernel.License;\n\npublic void SetPdfToReadOnly(string inputPath, string outputPath)\n{\n    // Load an existing document that you want to make read-only.\n    PdfReader reader = new PdfReader(inputPath);\n    FileStream stream = new FileStream(outputPath, FileMode.CreateNew);\n\n    // Initialize a PDF writer instance with the output stream\n    PdfWriter writer = new PdfWriter(stream);\n\n    // CreatePdfDocument() creates a PDF document and initializes its content in preparation for writing.\n    PdfDocument pdfDoc = new PdfDocument(reader, writer);\n\n    // Set security options on the existing PDF to lock it down.\n    pdfDoc.SetDefaultCryptoMode(PdfDocument.CryptoMode.ENCRYPTED_128_BIT);\n    \n    // Setting permissions: allow printing but not modifying or copying content.\n    byte[] userPasswordBytes = System.Text.Encoding.UTF8.GetBytes("userPass");\n    pdfDoc.Encrypt(userPasswordBytes, null, \n                   PdfWriter.ALLOW_PRINTING);\n\n    pdfDoc.Close();\n}