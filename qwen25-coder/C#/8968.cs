using System;\nusing System.Drawing;\nusing System.Drawing.Imaging;\n\npublic static void CopyExifData(Image source, Image destination)\n{\n    // List of property IDs that are allowed in JPEG images\n    int[] jpegPropertyIds = {\n        0x9003, // Artist (Author)\n        0x927C, // Maker_note \n        0x9286, // User_comment \n        0x9004, // Copyright\n        ExifTags.XResolution,\n        ExifTags.YResolution,\n        ExifTags.ResolutionUnit,\n        ExifTags.ExposureTime,\n        ExifTags.FNumber,\n        ExifTags.ISOSpeedRatings,\n        ExifTags.ShutterSpeedValue,\n        ExifTags.BrightnessValue,\n        ExifTags.ExposureBiasValue,\n        ExifTags.MaxApertureValue,\n        ExifTags.SubjectDistance,\n        ExifTags.MeteringMode,\n        ExifTags.LightSource,\n        ExifTags.Flash,\n        ExifTags.FocalLength,\n        ExifTags.ColorSpace,\n        ExifTags.DateTimeOriginal,\n        ExifTags.DateTimeDigitized\n    };\n\n    foreach (var propItem in source.PropertyItems)\n    {\n        if (Array.IndexOf(jpegPropertyIds, propItem.Id) >= 0)\n            destination.SetPropertyItem(propItem);\n    }\n}\n\n// Usage example:\n// Image image1 = Image.FromFile("source.tif");\n// Image image2 = /* your in-memory created image */\n// CopyExifData(image1, image2);\n\n// Save the image with JPEG encoder\nEncoderParameters eps = new EncoderParameters(1);\neps.Param[0] = new EncoderParameter(Encoder.Quality, 85L);\nImageCodecInfo ici = GetEncoderInfo("image/jpeg");\nimage2.Save("output.jpg", ici, eps);\n\nprivate static ImageCodecInfo GetEncoderInfo(String mimeType)\n{\n    int j;\n    ImageCodecInfo[] encoders;\n    encoders = ImageCodecInfo.GetImageEncoders();\n    for (j = 0; j < encoders.Length; ++j)\n    {\n        if (encoders[j].MimeType == mimeType)\n            return encoders[j];\n    }\n    return null;\n}