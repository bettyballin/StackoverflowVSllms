public class SomeDataClass : IDisposable\n{\n    private SqlConnection _conn;\n\n    // Ensure you initialize conn somewhere\n    public SomeDataClass(string connectionString)\n    {\n        _conn = new SqlConnection(connectionString);\n    }\n\n    ~SomeDataClass()\n    {\n        Dispose(false);\n    }\n\n    public void DoSomethingWithTheSqlConnection()\n    {\n        try\n        {\n            using (SqlCommand cmd = new SqlCommand(SqlQuery.CountSomething, _conn))\n            {\n                // Open the connection inside the try to ensure it's closed if an exception is thrown\n                _conn.Open();\n                int countOfSomething = Convert.ToInt32(cmd.ExecuteScalar());\n                \n                // Additional code\n            }\n        }\n        catch (Exception ex)\n        {\n            // Handle exceptions as necessary\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n\n    public void Dispose()\n    {\n        Dispose(true);\n        GC.SuppressFinalize(this);\n    }\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (disposing && _conn != null)\n        {\n            _conn.Dispose();\n            _conn = null;\n        }\n    }\n}