using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class ObjectInMemory\n{\n    public int Id { get; set; }\n    public int? ParentId { get; set; } // Nullable for root objects\n    public string Name { get; set; }\n}\n\npublic class Program\n{\n    static List<ObjectInMemory> objects = new List<ObjectInMemory>();\n\n    static void Main()\n    {\n        LoadData(); // Simulate loading data from a database\n\n        var childrenOfObject5 = GetChildren(5);\n        foreach (var obj in childrenOfObject5)\n        {\n            Console.WriteLine($"Child: {obj.Name}");\n        }\n    }\n\n    static void LoadData()\n    {\n        objects.Add(new ObjectInMemory { Id = 1, ParentId = null, Name = "Root" });\n        objects.Add(new ObjectInMemory { Id = 2, ParentId = 1, Name = "Child of Root 1" });\n        objects.Add(new ObjectInMemory { Id = 3, ParentId = 1, Name = "Child of Root 2" });\n        objects.Add(new ObjectInMemory { Id = 4, ParentId = null, Name = "Another Root" });\n        objects.Add(new ObjectInMemory { Id = 5, ParentId = 4, Name = "Child of Another Root" });\n    }\n\n    static IEnumerable<ObjectInMemory> GetChildren(int parentId)\n    {\n        return objects.Where(o => o.ParentId == parentId).ToList();\n    }\n}