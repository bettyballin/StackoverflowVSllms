using Castle.MicroKernel.Registration;\nusing Castle.MicroKernel.SubSystems.Configuration;\nusing Castle.Windsor;\nusing Castle.Facilities.TypedFactory;\n\npublic class CustomInstaller : IWindsorInstaller\n{\n    public void Install(IWindsorContainer container, IConfigurationStore store)\n    {\n        // Register your custom factory interface if needed\n        container.AddFacility<TypedFactoryFacility>();\n\n        // Register the component with PerWebRequest lifestyle and constructor injection\n        container.Register(\n            Component.For<IRecordSessionWrapper>()\n                .ImplementedBy<RecordSessionWrapper>()\n                .LifestylePerWebRequest()\n                .DependsOn(Dependency.OnValue<IRailsEngineContext>(null))\n                .Interceptors<InjectRailsEngineContextInterceptor>());\n\n        // Register the interceptor\n        container.Register(Component.For<InjectRailsEngineContextInterceptor>());\n    }\n}\n\npublic class InjectRailsEngineContextInterceptor : IInterceptor\n{\n    private readonly IHttpContextAccessor _httpContextAccessor;\n\n    public InjectRailsEngineContextInterceptor(IHttpContextAccessor httpContextAccessor)\n    {\n        _httpContextAccessor = httpContextAccessor;\n    }\n\n    public void Intercept(IInvocation invocation)\n    {\n        if (invocation.Arguments.Length > 0 && invocation.Arguments[0] == null &&\n            typeof(IRailsEngineContext).IsAssignableFrom(invocation.Arguments[0].GetType()))\n        {\n            var engineContext = ((IRailsPage)_httpContextAccessor.HttpContext.CurrentHandler).EngineContext;\n            invocation.Arguments[0] = engineContext;\n        }\n        invocation.Proceed();\n    }\n}\n\n// Usage in your wrapper class\npublic class RecordSessionWrapper : IRecordSessionWrapper\n{\n    private readonly IRailsEngineContext _railsEngineContext;\n\n    public RecordSessionWrapper(IRailsEngineContext railsEngineContext)\n    {\n        _railsEngineContext = railsEngineContext;\n    }\n\n    // Use this for manipulating session or other context-specific tasks\n}