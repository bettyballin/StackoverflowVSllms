using System;\nusing Microsoft.PointOfService;\n\npublic class CheckPrinterManager : IDisposable\n{\n    private PosExplorer posExplorer = new PosExplorer();\n    private ClaimedSlipPrint slp;\n\n    public void Initialize()\n    {\n        DeviceInfo deviceInfo = posExplorer.GetDevice(DeviceType.SlipPrint, "YourSlipPrinterLogicalName");\n        slp = (ClaimedSlipPrint)posExplorer.ClaimDevice(deviceInfo);\n        slp.Open();\n        slp.DeviceEnabled = true;\n    }\n\n    public void PrintCheck()\n    {\n        try\n        {\n            // Insert a check\n            slp.BeginInsertion((uint)20, 5000); // Timeout in milliseconds\n\n            // Simulate printing process here\n            Console.WriteLine("Printing...");\n\n            // Remove the check\n            slp.BeginRemoval();\n            slp.EndRemoval(5000);\n        }\n        catch (PosControlException ex)\n        {\n            HandleError(ex);\n        }\n    }\n\n    private void HandleError(PosControlException ex)\n    {\n        switch (ex.ErrorCode)\n        {\n            case ErrorCode.Illegal:\n                Console.WriteLine("Illegal operation: " + ex.Message);\n                // Try issuing a reset command\n                DoDirectIOReset();\n                break;\n            default:\n                Console.WriteLine("POS Error: " + ex.ToString());\n                break;\n        }\n    }\n\n    private void DoDirectIOReset()\n    {\n        int output = 0;\n        string data = null;\n\n        try\n        {\n            // Attempt to reset the printer\n            slp.DirectIO(121, ref output, ref data); // Command code for hardware reset on some devices\n\n            Console.WriteLine("DirectIO reset attempted with output: " + output);\n        }\n        catch (PosControlException ex)\n        {\n            Console.WriteLine("Failed to reset via DirectIO: " + ex.ToString());\n        }\n    }\n\n    public void Dispose()\n    {\n        if (slp != null && slp.Claimed)\n        {\n            slp.DeviceEnabled = false;\n            slp.Close();\n        }\n    }\n}