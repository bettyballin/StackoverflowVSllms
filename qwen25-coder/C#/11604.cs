using System.Web.Mvc;\n\npublic class CustomAuthorizeAttribute : AuthorizeAttribute\n{\n    protected override void HandleUnauthorizedRequest(AuthorizationContext filterContext)\n    {\n        if (filterContext.HttpContext.User.Identity.IsAuthenticated)\n        {\n            // Redirect to a custom "forbidden" or "access denied" page\n            filterContext.Result = new RedirectToRouteResult(\n                new System.Web.Routing.RouteValueDictionary \n                { \n                    { "controller", "Account" }, \n                    { "action", "Forbidden" } \n                });\n        }\n        else\n        {\n            // Redirect to the login page if they are not authenticated\n            base.HandleUnauthorizedRequest(filterContext);\n        }\n    }\n}