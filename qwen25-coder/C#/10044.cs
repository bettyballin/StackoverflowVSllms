// Assuming IMyInterface is the interface and MyOldClass implements an older version of it.\npublic interface IMyInterface {\n    void OldMethod();\n    void NewMethod(); // Added in newer version\n}\n\npublic class MyOldClass : IMyInterface {\n    public void OldMethod() {\n        Console.WriteLine("Old Method called.");\n    }\n    \n    // Does not implement NewMethod\n}\n\nclass Program {\n    static void Main(string[] args) {\n        var oldObject = new MyOldClass();\n        var proxiedObject = InterfaceProxy.Cast<IMyInterface>(oldObject);\n\n        try {\n            proxiedObject.OldMethod(); // Works fine\n        } catch (Exception ex) {\n            Console.WriteLine(ex.Message);\n        }\n\n        try {\n            proxiedObject.NewMethod(); // Throws NotImplementedException\n        } catch (NotImplementedException ex) {\n            Console.WriteLine($"Error: {ex.Message}");\n        }\n    }\n}