using System;\nusing System.Text.RegularExpressions;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Documents;\n\npublic partial class MainPage : UserControl\n{\n    public MainPage()\n    {\n        InitializeComponent();\n\n        string htmlContent = "<p>This is <b>bold</b>, this is <i>italic</i>, and here is a <a href='http://example.com'>link</a>.</p>";\n        DisplayHtml(htmlContent);\n    }\n\n    private void DisplayHtml(string html)\n    {\n        // Clear existing content\n        TextBlock textBlock = new TextBlock { TextWrapping = TextWrapping.Wrap };\n\n        // Basic HTML parsing for demonstration purposes\n        string pattern = @"<([^>]+)>(.*?)</\1>";\n        Regex regex = new Regex(pattern);\n\n        int lastEndIndex = 0;\n        foreach (Match match in regex.Matches(html))\n        {\n            // Add text before the tag\n            if (match.Index > lastEndIndex)\n                AddRun(textBlock, html.Substring(lastEndIndex, match.Index - lastEndIndex));\n\n            string tagName = match.Groups[1].Value.ToLower();\n            string content = match.Groups[2].Value;\n\n            switch (tagName)\n            {\n                case "b":\n                    AddRun(textBlock, content, FontWeightProperty, FontWeights.Bold);\n                    break;\n                case "i":\n                    AddRun(textBlock, content, FontStyleProperty, FontStyles.Italic);\n                    break;\n                case "a":\n                    Hyperlink hyperlink = new Hyperlink(new Run(content))\n                    {\n                        NavigateUri = new Uri(GetAttributeValue(match.Groups[1].Value, match.Value), UriKind.Absolute)\n                    };\n                    hyperlink.RequestNavigate += (sender, e) =>\n                    {\n                        // Handle navigation\n                        MessageBox.Show($"Navigating to: {e.Uri}");\n                    };\n                    textBlock.Inlines.Add(hyperlink);\n                    break;\n                default:\n                    AddRun(textBlock, content);\n                    break;\n            }\n\n            lastEndIndex = match.Index + match.Length;\n        }\n        // Add remaining text after the last tag\n        if (lastEndIndex < html.Length)\n            AddRun(textBlock, html.Substring(lastEndIndex));\n\n        ListBox listBox = new ListBox();\n        listBox.Items.Add(new ListBoxItem { Content = textBlock });\n        LayoutRoot.Children.Add(listBox);\n    }\n\n    private void AddRun(TextBlock textBlock, string content, DependencyProperty property = null, object value = null)\n    {\n        Run run = new Run(content);\n        if (property != null)\n            run.SetValue(property, value);\n\n        textBlock.Inlines.Add(run);\n    }\n\n    private string GetAttributeValue(string tag, string match)\n    {\n        int startIndex = tag.IndexOf("href=") + "href=".Length;\n        char quoteChar = match[startIndex];\n        return match.Substring(startIndex + 1).Split(quoteChar)[0];\n    }\n}