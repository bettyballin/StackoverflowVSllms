using System.Collections.Generic;\n\npublic class NotificationService : INotificationService\n{\n    public event EventHandler<IReadOnlyDictionary<string, List<string>>> ErrorsChanged;\n\n    private Dictionary<string, List<string>> _errorsByPropertyName = new Dictionary<string, List<string>>();\n\n    public void NotifyErrors(string propertyName, IEnumerable<string> errors)\n    {\n        if (_errorsByPropertyName.ContainsKey(propertyName))\n            _errorsByPropertyName[propertyName] = new List<string>(errors);\n        else\n            _errorsByPropertyName.Add(propertyName, new List<string>(errors));\n\n        ErrorsChanged?.Invoke(this, _errorsByPropertyName);\n    }\n}\n\npublic interface INotificationService\n{\n    event EventHandler<IReadOnlyDictionary<string, List<string>>> ErrorsChanged;\n\n    void NotifyErrors(string propertyName, IEnumerable<string> errors);\n}