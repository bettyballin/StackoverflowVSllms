using System;\nusing System.IO;\nusing Microsoft.VisualBasic.FileIO;\n\npublic class CsvImporter\n{\n    public void ImportCsv(string filePath)\n    {\n        string delimiter = DetectDelimiter(filePath);\n        var parser = new TextFieldParser(filePath)\n        {\n            Delimiters = new[] { delimiter },\n            HasFieldsEnclosedInQuotes = true,\n            TrimWhiteSpace = true\n        };\n\n        try\n        {\n            // Read the fields header row\n            if (!parser.EndOfData)\n            {\n                string[] headers = parser.ReadFields();\n                int emailIndex = Array.FindIndex(headers, s => Regex.IsMatch(s, @"email", RegexOptions.IgnoreCase));\n                int nameIndex = -1; // Logic to detect name field can be more complex\n\n                // Read the rest of the data\n                while (!parser.EndOfData)\n                {\n                    string[] fields = parser.ReadFields();\n\n                    if (fields != null && emailIndex >= 0 && emailIndex < fields.Length)\n                    {\n                        string email = fields[emailIndex];\n                        string name = nameIndex >= 0 ? fields[nameIndex] : "";\n\n                        Console.WriteLine($"Email: {email}, Name: {name}");\n                        // Process email and name\n                    }\n                }\n            }\n        }\n        finally\n        {\n            parser.Close();\n        }\n    }\n\n    private static string DetectDelimiter(string filePath)\n    {\n        using (var reader = new StreamReader(filePath))\n        {\n            string line = reader.ReadLine();\n            int commaCount = line.Count(c => c == ',');\n            int tabCount = line.Count(c => c == '\t');\n\n            return commaCount > tabCount ? "," : "\t";\n        }\n    }\n}