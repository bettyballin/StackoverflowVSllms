using System;\n   using System.ServiceModel;\n   using System.ServiceModel.Description;\n   using System.ServiceModel.Discovery;\n\n   class Program\n   {\n       static void Main()\n       {\n           Uri baseAddress = new Uri("http://localhost:8000/HelloWorld/Service1");\n           ServiceHost host = new ServiceHost(typeof(HelloWorldService), baseAddress);\n\n           try\n           {\n               // Set up the service behavior for Discovery\n               var discoverableBehavior = new ServiceDiscoveryBehavior();\n               discoverableBehavior.AnnouncementEndpoints.Add(\n                   new UdpAnnouncementEndpoint());\n               host.Description.Behaviors.Add(discoverableBehavior);\n\n               // Set up WS-Discovery endpoint\n               host.AddServiceEndpoint(new UdpDiscoveryEndpoint());\n\n               // Add service endpoint\n               host.AddServiceEndpoint(typeof(IHelloWorldService), new WSHttpBinding(), "HelloWorld");\n\n               host.Open();\n               Console.WriteLine("The service is ready.");\n               Console.ReadLine();\n           }\n           catch (Exception ex)\n           {\n               Console.WriteLine($"An exception occurred: {ex.Message}");\n           }\n       }\n   }\n\n   [ServiceContract]\n   public interface IHelloWorldService\n   {\n       [OperationContract]\n       string SayHello(string name);\n   }\n\n   public class HelloWorldService : IHelloWorldService\n   {\n       public string SayHello(string name)\n       {\n           return $"Hello, {name}!";\n       }\n   }