public static IEnumerable<Range<T>> MergeAdjacent<T>(this IEnumerable<Range<T>> source, Func<T, T, bool> isAdjacent)\n{\n    using (var enumerator = source.GetEnumerator())\n    {\n        if (!enumerator.MoveNext())\n            yield break;\n\n        var current = enumerator.Current;\n\n        while (enumerator.MoveNext())\n        {\n            var next = enumerator.Current;\n\n            if (isAdjacent(current.End, next.Start))\n            {\n                // Combine the ranges\n                current = Range.Create(current.Start, next.End);\n            }\n            else\n            {\n                // Yield the current range and move to the next one\n                yield return current;\n                current = next;\n            }\n        }\n\n        // Return the last range in case it wasn't merged\n        yield return current;\n    }\n}