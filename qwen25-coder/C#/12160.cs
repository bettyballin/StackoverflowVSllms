using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class DrawLinesForm : Form\n{\n    private Bitmap _bufferBitmap;\n    private Random _random = new Random();\n\n    public DrawLinesForm()\n    {\n        Size = new Size(800, 800);\n        DoubleBuffered = true; // This reduces flickering.\n        _bufferBitmap = new Bitmap(Width, Height);\n\n        // Generate random points and draw lines between them once\n        PointF[] points = new PointF[100];\n        using (Graphics g = Graphics.FromImage(_bufferBitmap))\n        {\n            g.Clear(Color.White);\n            Pen pen = new Pen(Color.Black, 2);\n\n            for (int i = 0; i < points.Length; i++)\n            {\n                points[i] = new PointF((float)_random.Next(Width), (float)_random.Next(Height));\n            }\n\n            for (int i = 0; i < points.Length - 1; i++)\n            {\n                g.DrawLine(pen, points[i], points[i + 1]);\n            }\n            // Optionally connect the last point back to the first\n            g.DrawLine(pen, points[points.Length - 1], points[0]);\n\n            pen.Dispose();\n        }\n    }\n\n    protected override void OnPaint(PaintEventArgs e)\n    {\n        base.OnPaint(e);\n        if (_bufferBitmap != null)\n        {\n            e.Graphics.DrawImage(_bufferBitmap, 0, 0);\n        }\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new DrawLinesForm());\n    }\n}