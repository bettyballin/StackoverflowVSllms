using System.Net;\nusing System.Net.Http;\nusing System.Net.Sockets;\nusing System.Threading;\nusing System.Threading.Tasks;\n\npublic class HostHeaderHandler : DelegatingHandler\n{\n    private readonly string _hostOverride;\n    private readonly int _portOverride;\n\n    public HostHeaderHandler(string hostOverride, int portOverride)\n    {\n        _hostOverride = hostOverride;\n        _portOverride = portOverride;\n    }\n\n    protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n    {\n        var uriBuilder = new UriBuilder(request.RequestUri);\n        uriBuilder.Host = Dns.GetHostEntry(_hostOverride).AddressList[0].ToString();\n        uriBuilder.Port = _portOverride;\n\n        request.RequestUri = uriBuilder.Uri;\n        request.Headers.Host = $"{_hostOverride}:{_portOverride}";\n\n        return await base.SendAsync(request, cancellationToken);\n    }\n}\n\npublic class Program\n{\n    public static async Task Main()\n    {\n        var handler = new HostHeaderHandler("192.1.1.100", 443); // Override host to this IP and port\n        using (var httpClient = new HttpClient(handler))\n        {\n            using (var response = await httpClient.GetAsync("https://services.mysite.com/data/data.asmx"))\n            {\n                Console.WriteLine(await response.Content.ReadAsStringAsync());\n            }\n        }\n    }\n}