using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class ZOrderMonitor : Form\n{\n    private const int WM_WINDOWPOSCHANGING = 0x0046;\n    private const int WM_WINDOWPOSCHANGED = 0x0047;\n\n    protected override void WndProc(ref Message m)\n    {\n        base.WndProc(ref m);\n\n        if (m.Msg == WM_WINDOWPOSCHANGING || m.Msg == WM_WINDOWPOSCHANGED)\n        {\n            WINDOWPOS windowPos = (WINDOWPOS)Marshal.PtrToStructure(m.LParam, typeof(WINDOWPOS));\n            Debug.WriteLine("Window ZOrder change detected.");\n            // Here you can add logic to differentiate between minimizing and maximizing\n        }\n    }\n\n    #pragma warning disable CS0649\n    [StructLayout(LayoutKind.Sequential)]\n    protected struct WINDOWPOS\n    {\n        public IntPtr hwnd;\n        public IntPtr hwndInsertAfter;\n        public int x;\n        public int y;\n        public int cx;\n        public int cy;\n        public uint flags;\n    }\n    #pragma warning restore CS0649\n\n    static void Main()\n    {\n        Application.Run(new ZOrderMonitor());\n    }\n}