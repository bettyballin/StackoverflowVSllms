using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\n\npublic class SmartAsciiWriter\n{\n    private Dictionary<string, byte[]> _stringCache = new Dictionary<string, byte[]>();\n    private BinaryWriter _writer;\n\n    public SmartAsciiWriter(Stream output)\n    {\n        _writer = new BinaryWriter(output);\n    }\n\n    public void Write(string text)\n    {\n        if (!_stringCache.TryGetValue(text, out var bytes))\n        {\n            // Pre-encode the string and store it in the cache\n            bytes = Encoding.ASCII.GetBytes(text);\n            _stringCache[text] = bytes;\n        }\n        \n        // Write the cached byte array to the stream\n        _writer.Write(bytes);\n    }\n\n    public void Dispose()\n    {\n        _writer.Dispose();\n    }\n}\n\n// Usage example:\npublic class Program\n{\n    static void Main()\n    {\n        using (var ms = new MemoryStream())\n        using (var writer = new SmartAsciiWriter(ms))\n        {\n            // Write repeated strings efficiently\n            writer.Write("some fancy long text");\n            writer.Write("another frequently used string");\n            writer.Write("some fancy long text"); // Reuses the cached byte array\n        }\n    }\n}