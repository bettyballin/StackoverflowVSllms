amespace TestControls\n{\n    public class TestControl : WebControl\n    {\n        int _clickCount;\n        bool _mustUpdate;\n\n        protected override void OnInit(EventArgs e)\n        {\n            base.OnInit(e);\n            if (!Page.IsPostBack)\n            {\n                // Initialize values only on initial load, not after postbacks or refreshes\n                _clickCount = 0;\n                ViewState["clickCount"] = _clickCount;\n            }\n            else\n            {\n                // Reload state from viewstate\n                _clickCount = (int)ViewState["clickCount"];\n            }\n        }\n\n        protected override void LoadViewState(object savedState)\n        {\n            base.LoadViewState(savedState);\n            _clickCount = ((int)ViewState["clickCount"]);\n            _mustUpdate = ((bool)ViewState["mustUpdate"]);\n        }\n\n        protected override void OnLoad(EventArgs e)\n        {\n            base.OnLoad(e);\n\n            Controls.Clear();\n            ControlCreator();\n        }\n\n        private void ControlCreator()\n        {\n            Label tempLabel = new Label();\n            LiteralControl tempLiteral = new LiteralControl("<br/><br/>");\n            LinkButton tempLink = new LinkButton();\n\n            tempLink.ID = "testLink";\n            tempLink.Text = "Click me!";\n            tempLink.Click += new EventHandler(tempLink_Click);\n\n            tempLabel.ID = "testLabel";\n            tempLabel.Text = _clickCount.ToString();\n\n            Controls.Add(tempLabel);\n            Controls.Add(tempLiteral);\n            Controls.Add(tempLink);\n        }\n\n        void tempLink_Click(object sender, EventArgs e)\n        {\n            _clickCount++;\n            ViewState["clickCount"] = _clickCount; // Ensure viewstate is updated\n            UpdatePanel panel = this.NamingContainer as UpdatePanel;\n            if (panel != null)\n            {\n                panel.Update(); // Force update of the updatepanel\n            }\n        }\n\n        protected override void OnPreRender(EventArgs e)\n        {\n            base.OnPreRender(e);\n\n            // Remove unnecessary state updates here if not needed\n            if (_mustUpdate)\n            {\n                Controls.Clear();\n                ControlCreator();\n\n                _mustUpdate = false;\n            }\n        }\n\n        protected override object SaveViewState()\n        {\n            ViewState["clickCount"] = _clickCount;\n            ViewState["mustUpdate"] = _mustUpdate;\n\n            return base.SaveViewState();\n        }\n    }\n}