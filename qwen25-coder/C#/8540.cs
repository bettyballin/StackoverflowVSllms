using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\npublic class FileTypeDescription\n{\n    [StructLayout(LayoutKind.Sequential)]\n    public struct SHFILEINFO\n    {\n        public IntPtr hIcon;\n        public int iIcon;\n        public uint dwAttributes;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)]\n        public string szDisplayName;\n        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 80)]\n        public string szTypeName;\n    }\n\n    class Program\n    {\n        private const int SHGFI_ICON = 0x000000100;     // get icon\n        private const int SHGFI_DISPLAYNAME = 0x000000200;// get display name\n        private const int SHGFI_TYPENAME = 0x000000400;   // get type name\n        private const int SHGFI_LARGEICON = 0x000000000;  // get large icon\n        private const int SHGFI_SMALLICON = 0x000000001;  // get small icon\n\n        [DllImport("Shell32.dll")]\n        public static extern IntPtr SHGetFileInfo(string pszPath, uint dwFileAttributes, ref SHFILEINFO psfi, uint cbSizeFileInfo, uint uFlags);\n\n        static void Main(string[] args)\n        {\n            var shinfo = new SHFILEINFO();\n            string fileExtension = "*.doc"; // You can set this to any extension\n            SHGetFileInfo(fileExtension,\n                    0,\n                    ref shinfo,\n                    (uint)Marshal.SizeOf(shinfo),\n                    SHGFI_USEFILEATTRIBUTES | SHGFI_TYPENAME);\n\n            Console.WriteLine($"File Type: {shinfo.szTypeName}");\n        }\n    }\n}