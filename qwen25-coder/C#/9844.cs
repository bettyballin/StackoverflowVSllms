using Microsoft.DirectX.Direct3D;\n\npublic static bool CheckDeviceCaps(Device device)\n{\n    PresentParameters presentParams = new PresentParameters();\n    // Setup your presentation parameters as needed\n\n    Caps caps;\n    bool hardwareTransformAndLight = device.DeviceCaps.SupportsHardwareTransformAndLight;\n    int maxTextureWidth = 0;\n    int maxTextureHeight = 0;\n\n    using (Device testDevice = new Device(0, DeviceType.Hardware, null, CreateFlags.HardwareVertexProcessing | CreateFlags.FpuPreserve, presentParams))\n    {\n        caps = testDevice.DeviceCaps;\n        maxTextureWidth = caps.MaxTextureWidth;\n        maxTextureHeight = caps.MaxTextureHeight;\n    }\n\n    // Check for basic rendering capabilities\n    bool canRender = (caps.VertexProcessingCaps & VertexProcessingCaps.Software) != 0 ||\n                     (caps.ProcessVertexShaderCaps2 & PixelAndVertexShaderVersion.Version_1_1) >= PixelAndVertexShaderVersion.Version_1_1;\n\n    // Basic texture size check (adjust according to the size of your textures)\n    bool suitableTextureSize = maxTextureWidth >= 512 && maxTextureHeight >= 512;\n\n    return hardwareTransformAndLight & canRender & suitableTextureSize;\n}