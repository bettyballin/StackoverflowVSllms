using System.IO.Pipes;\n\npublic class MyService : ServiceBase {\n    private const string管道名称 = @"\\.\pipe\MyInterProcessCommunicationChannel";\n\n    protected override void OnStart(string[] args) {\n        // This method is called when the service starts.\n        SendMessageToUi("Hello from the Service!");\n    }\n\n    private async void SendMessageToUi(string messageToSend) {\n        try {\n            using var pipeClient = new NamedPipeClientStream(".", 管道名称, PipeDirection.Out);\n\n            await pipeClient.ConnectAsync();\n            var writer = new StreamWriter(pipeClient);\n            writer.AutoFlush = true;\n\n            await writer.WriteLineAsync(messageToSend);\n            // The server (UI application) will now receive this message\n        } catch {\n            // Handle exceptions here\n        }\n    }\n\n    protected override void OnStop() {\n        // This method is called when the service stops.\n    }\n}