using System;\nusing System.Data.SqlClient;\nusing System.ServiceProcess;\n\npublic class SqlServerStatusChecker\n{\n    private const string ConnectionString = "your-connection-string-here";\n    private static readonly TimeSpan Timeout = TimeSpan.FromSeconds(60);\n\n    public static void EnsureSqlServerIsReady()\n    {\n        var serviceController = new ServiceController("MSSQLSERVER");\n        \n        // Wait for the SQL Server service to start\n        serviceController.WaitForStatus(ServiceControllerStatus.Running, Timeout);\n\n        var giveUpTime = DateTime.Now + Timeout;\n        int attempt = 0;\n\n        while (DateTime.Now < giveUpTime)\n        {\n            try\n            {\n                using (var connection = new SqlConnection(ConnectionString))\n                {\n                    connection.Open();\n                    // Check if the server is ready by querying a system view\n                    var command = new SqlCommand("SELECT COUNT(*) FROM sys.dm_exec_sessions", connection);\n                    var reader = command.ExecuteReader();\n                    if (reader.Read() && reader.GetInt32(0) >= 1)\n                    {\n                        return; // SQL Server is up and running, exit the loop\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($"Attempt {attempt}: {ex.Message}");\n            }\n            \n            attempt++;\n            System.Threading.Thread.Sleep(500); // Wait for 500ms before retrying\n        }\n\n        throw new TimeoutException("SQL Server did not start accepting connections within the timeout period.");\n    }\n}