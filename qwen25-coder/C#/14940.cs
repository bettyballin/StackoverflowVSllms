using System;\nusing System.Diagnostics;\nusing System.Reflection;\nusing System.Runtime.InteropServices;\nusing System.Threading;\nusing System.Windows;\n\nnamespace YourNamespace\n{\n    public partial class App : Application\n    {\n        private const string UniqueName = "YourUniqueMutexIdentifier";\n        [DllImport("user32.dll")]\n        [return: MarshalAs(UnmanagedType.Bool)]\n        static extern bool SetForegroundWindow(IntPtr hWnd);\n\n        protected override void OnStartup(StartupEventArgs e)\n        {\n            bool createdNew;\n            Mutex mutex = new Mutex(true, UniqueName, out createdNew);\n            if (!createdNew)\n            {\n                GetRunningInstanceHandle();\n                Application.Current.Shutdown();\n                return;\n            }\n            base.OnStartup(e);\n        }\n\n        private static void GetRunningInstanceHandle()\n        {\n            foreach (Process process in Process.GetProcessesByName(Process.GetCurrentProcess().ProcessName))\n            {\n                if (process.Id != Process.GetCurrentProcess().Id)\n                {\n                    SetForegroundWindow(process.MainWindowHandle);\n                    break;\n                }\n            }\n        }\n    }\n}