<#@ template debug="true" hostspecific="true"#>\n<#@ output extension=".cs"#>\n\nusing System;\nusing System.Collections.Generic;\nusing System.Data.SqlClient;\n\nnamespace YourNamespace\n{\n    // This is an example of a simple POCO.\n    public partial class Person\n    {\n        public int Id { get; set; }\n        public string FirstName { get; set; }\n        public string LastName { get; set; }\n    }\n\n    public static class PersonMapper\n    {\n        public static void Save(Person person)\n        {\n            using (SqlConnection conn = new SqlConnection("your_connection_string_here"))\n            {\n                SqlCommand cmd = new SqlCommand("SavePerson", conn);\n                cmd.CommandType = System.Data.CommandType.StoredProcedure;\n\n                cmd.Parameters.AddWithValue("@Id", person.Id);\n                cmd.Parameters.AddWithValue("@FirstName", person.FirstName);\n                cmd.Parameters.AddWithValue("@LastName", person.LastName);\n\n                conn.Open();\n                cmd.ExecuteNonQuery();\n            }\n        }\n\n        public static Person Get(int id)\n        {\n            Person person = null;\n            using (SqlConnection conn = new SqlConnection("your_connection_string_here"))\n            {\n                SqlCommand cmd = new SqlCommand("GetPersonById", conn);\n                cmd.Parameters.AddWithValue("@Id", id);\n                cmd.CommandType = System.Data.CommandType.StoredProcedure;\n\n                conn.Open();\n                SqlDataReader reader = cmd.ExecuteReader();\n\n                if (reader.Read())\n                {\n                    person = new Person\n                    {\n                        Id = Convert.ToInt32(reader["Id"]),\n                        FirstName = Convert.ToString(reader["FirstName"]),\n                        LastName = Convert.ToString(reader["LastName"])\n                    };\n                }\n            }\n\n            return person;\n        }\n\n        public static List<Person> GetAll()\n        {\n            List<Person> people = new List<Person>();\n            using (SqlConnection conn = new SqlConnection("your_connection_string_here"))\n            {\n                SqlCommand cmd = new SqlCommand("GetAllPeople", conn);\n                cmd.CommandType = System.Data.CommandType.StoredProcedure;\n\n                conn.Open();\n                SqlDataReader reader = cmd.ExecuteReader();\n\n                while (reader.Read())\n                {\n                    people.Add(new Person\n                    {\n                        Id = Convert.ToInt32(reader["Id"]),\n                        FirstName = Convert.ToString(reader["FirstName"]),\n                        LastName = Convert.ToString(reader["LastName"])\n                    });\n                }\n            }\n\n            return people;\n        }\n\n        public static void Delete(int id)\n        {\n            using (SqlConnection conn = new SqlConnection("your_connection_string_here"))\n            {\n                SqlCommand cmd = new SqlCommand("DeletePerson", conn);\n                cmd.Parameters.AddWithValue("@Id", id);\n\n                conn.Open();\n                cmd.ExecuteNonQuery();\n            }\n        }\n    }\n}