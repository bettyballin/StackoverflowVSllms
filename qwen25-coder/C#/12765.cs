using System;\nusing Microsoft.Win32;\n\nclass Program\n{\n    static void Main()\n    {\n        const string subkey = @"SOFTWARE\Microsoft\NET Framework Setup\NDP\";\n        using (RegistryKey ndpKey = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry32).OpenSubKey(subkey))\n        {\n            foreach (string versionKeyName in ndpKey.GetSubKeyNames())\n            {\n                GetVersionFromRegistry(ndpKey, versionKeyName);\n            }\n        }\n\n        Console.WriteLine("Press any key to exit.");\n        Console.ReadKey();\n    }\n\n    private static void GetVersionFromRegistry(RegistryKey ndpKey, string versionKeyName)\n    {\n        if (versionKeyName.StartsWith(".NET Framework"))\n        {\n            RegistryKey versionKey = ndpKey.OpenSubKey(versionKeyName);\n            string name = (string)versionKey.GetValue("FullInstallName");\n            if (!string.IsNullOrEmpty(name))\n                Console.WriteLine($"  {name}");\n            string release = (string)versionKey.GetValue("Release");\n            if (release != null)\n                Console.WriteLine($"  Release: {CheckFor45PlusVersion(release)}");\n        }\n    }\n\n    private static string CheckFor45PlusVersion(string releaseKey)\n    {\n        // See https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed\n        if (releaseKey == "") return "No 4.5 or later version detected";\n        switch (releaseKey)\n        {\n            case "378675":\n                return "4.5";\n            case "379893":\n            case "379892":\n                return "4.5.1 / 4.5.1 Developer Preview or later";\n            case "393295":\n            case "393297":\n                return "4.5.2";\n            // Add more cases as needed for newer versions\n            default:\n                return $"Unknown release key: {releaseKey}";\n        }\n    }\n}