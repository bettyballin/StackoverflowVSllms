using System;\nusing System.IO;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        // The name is what makes the mutex inter-process\n        string uniqueName = "Global\\YourUniqueMutexName";\n        bool createdNew;\n        \n        // Create or open a named mutex\n        using (var mutex = new Mutex(false, uniqueName, out createdNew))\n        {\n            try\n            {\n                // Wait for the mutex, with a 10-second timeout\n                if (!mutex.WaitOne(10 * 1000))\n                {\n                    Console.WriteLine("Timeout waiting for the mutex");\n                    return;\n                }\n\n                try\n                {\n                    Console.WriteLine("Mutex acquired. Performing work...");\n\n                    // Simulate some work\n                    Thread.Sleep(2000);\n                }\n                finally\n                {\n                    mutex.ReleaseMutex();\n                }\n            }\n            catch (AbandonedMutexException)\n            {\n                Console.WriteLine("The mutex was abandoned in another process. It will still be released here.");\n                mutex.ReleaseMutex(); // Safe to call even if it's been abandoned\n            }\n        }\n\n        Console.WriteLine("Work complete.");\n    }\n}