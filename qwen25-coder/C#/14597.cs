string uploadDirectory = Server.MapPath("~/Uploads/"); // Ensure this directory exists and is writable\nif (!Directory.Exists(uploadDirectory))\n{\n    Directory.CreateDirectory(uploadDirectory);\n}\n\nstring filePath = Path.Combine(uploadDirectory, Path.GetFileName(fileUpload.PostedFile.FileName));\nfileUpload.PostedFile.SaveAs(filePath); // Save the uploaded file\n\n// Use the saved file path for processing\nstring OleDbConnection = ConfigurationManager.AppSettings["OleDbConnection"].Replace("FilePath", filePath).Trim();\n\nExcel.ApplicationClass xlApp = new Excel.ApplicationClass();\nExcel.Workbooks xlWorkBooks = (Excel.Workbooks)xlApp.Workbooks;\nExcel.Workbook wb = xlWorkBooks._Open(filePath, Type.Missing, false, Type.Missing, "", "", true, Excel.XlPlatform.xlWindows, "\t", true, false, Type.Missing, true);\n\nstring strSheetName = ((Excel.Worksheet)wb.Sheets[1]).Name.ToString();\nxlWorkBooks.Close();\nxlApp.Quit();\n\nOleDbCommand oledbCommand = new OleDbCommand();\nOleDbDataAdapter oledbAdapter = new OleDbDataAdapter();\n\nDataSet dsExcellData = new DataSet();\nusing (OleDbConnection oledbConnection = new OleDbConnection(OleDbConnection))\n{\n    oledbConnection.Open();\n\n    oledbCommand.Connection = oledbConnection;\n    oledbCommand.CommandText = "Select * from [" + strSheetName + "$]";\n\n    oledbAdapter.SelectCommand = oledbCommand;\n    oledbAdapter.Fill(dsExcellData);\n}\n\nreturn dsExcellData;