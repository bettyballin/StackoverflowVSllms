using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\npublic class AesExample {\n    public static void Main() {\n        string original = "Here is some data to encrypt!";\n        \n        // Create an instance of the AesCryptoServiceProvider.\n        using (AesCryptoServiceProvider aesAlg = new AesCryptoServiceProvider()) {\n            aesAlg.KeySize = 256; // Ensure a high security key size\n            aesAlg.GenerateKey();\n            aesAlg.GenerateIV();\n\n            // Encrypt the string to an array of bytes.\n            byte[] encrypted = EncryptStringToBytes_Aes(original, aesAlg.Key, aesAlg.IV);\n\n            // Decrypt the bytes to a string.\n            string decrypted = DecryptStringFromBytes_Aes(encrypted, aesAlg.Key, aesAlg.IV);\n\n            // Display the original data and the decrypted data.\n            Console.WriteLine("Original:   {0}", original);\n            Console.WriteLine("Decrypted:{0}", decrypted);\n        }\n    }\n\n    static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV) {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException("plainText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n        byte[] encrypted;\n\n        // Create an AesCryptoServiceProvider object with the specified key and IV.\n        using (AesCryptoServiceProvider aesAlg = new AesCryptoServiceProvider()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create a memory stream to contain the encrypted bytes\n            using (MemoryStream msEncrypt = new MemoryStream()) {\n                using (CryptoStream csEncrypt =\n                    new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)) {\n\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt)) {\n                        swEncrypt.Write(plainText);\n                    }\n                    encrypted = msEncrypt.ToArray();\n                }\n            }\n        }\n        return encrypted;\n    }\n\n    static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV) {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException("cipherText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        string plaintext = null;\n\n        using (AesCryptoServiceProvider aesAlg = new AesCryptoServiceProvider()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText)) {\n                using (CryptoStream csDecrypt =\n                    new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)) {\n\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt)) {\n                        plaintext = srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n\n        return plaintext;\n    }\n}