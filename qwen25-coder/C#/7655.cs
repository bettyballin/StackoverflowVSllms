using System;\nusing System.Management;\nusing System.Security.Cryptography;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string processorId = GetProcessorId();\n        string moboSerialNumber = GetMoboSerialNumber();\n\n        string machineFingerprint = ComputeHash(processorId + moboSerialNumber);\n\n        Console.WriteLine("Machine Fingerprint: " + machineFingerprint);\n    }\n\n    static string GetProcessorId()\n    {\n        return GetFirstItem("Win32_Processor", new string[] { "ProcessorId" }, "ProcessorId");\n    }\n\n    static string GetMoboSerialNumber()\n    {\n        return GetFirstItem("Win32_BaseBoard", new string[] { "SerialNumber" }, "SerialNumber");\n    }\n\n    static string ComputeHash(string input)\n    {\n        var sha1 = SHA1.Create();\n        byte[] bytes = sha1.ComputeHash(System.Text.Encoding.UTF8.GetBytes(input));\n        StringBuilder sb = new StringBuilder();\n\n        foreach (byte b in bytes)\n            sb.Append(b.ToString("x2"));\n\n        return sb.ToString();\n    }\n\n    static string GetFirstItem(string className, string[] properties, string key)\n    {\n        ManagementObjectSearcher mbs = new ManagementObjectSearcher($"SELECT {string.Join(", ", properties)} FROM {className}");\n        foreach (ManagementObject mo in mbs.Get())\n            return mo[key].ToString();\n\n        return null;\n    }\n}