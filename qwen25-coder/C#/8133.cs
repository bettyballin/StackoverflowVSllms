using System;\nusing System.IO;\nusing System.Web.Services.Protocols;\nusing System.Xml;\n\npublic class TraceExtension : SoapExtension\n{\n    private Stream oldStream = null;\n    private Stream newStream;\n    \n    public override Stream ChainStream(Stream stream)\n    {\n        oldStream = stream;\n        newStream = new MemoryStream();\n        return newStream;\n    }\n\n    public override object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute)\n    {\n        return null;\n    }\n\n    public override object GetInitializer(Type WebServiceType)\n    {\n        return null;\n    }\n\n    public override void Initialize(object initializer)\n    {\n    }\n\n    public override void ProcessMessage(SoapMessage message)\n    {\n        switch (message.Stage)\n        {\n            case SoapMessageStage.BeforeSerialize:\n                break;\n            case SoapMessageStage.AfterSerialize:\n                WriteOutput(newStream);\n                string filePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SoapRequest.xml");\n                File.WriteAllText(filePath, GetResponseString());\n                newStream.Position = 0;\n                Copy(newStream, oldStream);\n                break;\n            case SoapMessageStage.BeforeDeserialize:\n                Copy(oldStream, newStream);\n                break;\n            case SoapMessageStage.AfterDeserialize:\n                string filePathError = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SoapRequest.xml");\n                if (message.Exception != null)\n                {\n                    File.WriteAllText(filePathError, GetResponseString());\n                }\n                newStream.Position = 0;\n                break;\n        }\n    }\n\n    void WriteOutput(Stream myNewStream)\n    {\n        myNewStream.Position = 0;\n        XmlDocument soapDoc = new XmlDocument();\n        soapDoc.Load(myNewStream);\n        StreamWriter writer = null;\n        try\n        {\n            string filePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SoapRequest.xml");\n            writer = new StreamWriter(filePath, true);\n           \n            // Only write when there is an error to capture the problematic request.\n            if (soapDoc.OuterXml.Contains("<fault>"))\n                writer.WriteLine(soapDoc.OuterXml);\n        }\n\n        catch (Exception e)\n        {\n            Console.WriteLine("Error: {0}", e.ToString());\n        }\n        \n        finally\n        {\n            if (writer != null)\n                writer.Close();\n            myNewStream.Position = 0;\n        }\n    }\n\n    string GetResponseString()\n    {\n        string soapRequest = new StreamReader(newStream).ReadToEnd();\n        return soapRequest;\n    }   \n\n    void Copy(Stream from, Stream to)\n    {\n        TextReader reader = new StreamReader(from);\n        TextWriter writer = new StreamWriter(to);\n        writer.WriteLine(reader.ReadToEnd());\n        writer.Flush();\n        to.Position = 0;\n        from.Position = 0;\n    }\n}