using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace MyNameSpace\n{\n    public class RSAcrypt\n    {\n        private string _encryptedData;\n        private string _decryptedData;\n\n        public string EncryptedData\n        {\n            get { return _encryptedData; }\n            set { _encryptedData = value; }\n        }\n\n        public string DecryptedData\n        {\n            get { return _decryptedData; }\n            set { _decryptedData = value; }\n        }\n\n        public RSAcrypt() { }\n\n        public RSAcrypt(string CryptAction, string StringToCrypt)\n        {\n            UTF8Encoding thisUtf8Encoding = new UTF8Encoding();\n            RSACryptoServiceProvider thisRSACryptoServiceProvider = new RSACryptoServiceProvider();\n            byte[] _stringToCrypt = thisUtf8Encoding.GetBytes(StringToCrypt);\n\n            switch (CryptAction)\n            {\n                case "Encrypt":\n                    byte[] encryptedData = Encrypt(_stringToCrypt, thisRSACryptoServiceProvider.ExportParameters(false));\n                    _encryptedData = Convert.ToBase64String(encryptedData);\n                    break;\n\n                case "Decrypt":\n                    byte[] decryptedData = Decrypt(Convert.FromBase64String(_stringToCrypt), thisRSACryptoServiceProvider.ExportParameters(true));\n                    if (decryptedData != null)\n                    {\n                        _decryptedData = thisUtf8Encoding.GetString(decryptedData);\n                    }\n                    break;\n            }\n        }\n\n        static private byte[] Encrypt(byte[] DataToEncrypt, RSAParameters keyInfo)\n        {\n            RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();\n            RSA.ImportParameters(keyInfo);\n            return RSA.Encrypt(DataToEncrypt, false);\n        }\n\n        static private byte[] Decrypt(byte[] DataToDecrypt, RSAParameters keyInfo)\n        {\n            RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();\n\n            try\n            {\n                RSA.ImportParameters(keyInfo);\n                return RSA.Decrypt(DataToDecrypt, false);\n            }\n            catch (Exception ex)\n            {\n                MessageBox.Show("Error: " + ex.Message, "Exception Thrown");\n                return null;\n            }\n        }\n    }\n}