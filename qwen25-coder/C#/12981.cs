using System;\nusing System.ComponentModel.DataAnnotations;\nusing System.Data.SqlClient;\nusing System.Web.Security;\n\npublic class PasswordRecoveryService\n{\n    private string connectionString = "YourConnectionString";\n\n    public void SendPasswordResetLink(string userEmail)\n    {\n        // Generate a unique GUID for the token\n        Guid token = Guid.NewGuid();\n        DateTime expirationDate = DateTime.Now.AddHours(2);\n\n        // Store the token and user ID in your database with an expiration date\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            string query = "INSERT INTO PasswordResetTokens (Token, UserId, Expires) VALUES (@token, @userId, @expires)";\n            SqlParameter[] parameters =\n            {\n                new SqlParameter("@token", token),\n                new SqlParameter("@userId", GetUserId(userEmail)),\n                new SqlParameter("@expires", expirationDate)\n            };\n            \n            using (SqlCommand command = new SqlCommand(query, connection))\n            {\n                command.Parameters.AddRange(parameters);\n                connection.Open();\n                command.ExecuteNonQuery();\n            }\n        }\n\n        // Send an email with the reset link\n        string resetLink = $"https://yourwebsite.com/ResetPassword?token={token}";\n        EmailService.SendEmail(userEmail, "Password Reset", $"Please click <a href=\"{resetLink}\">here</a> to reset your password.");\n    }\n\n    public bool ResetPassword(Guid token, string newPassword)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            string query = \n                @"SELECT UserId FROM PasswordResetTokens WHERE Token = @token AND Expires > @now";\n            SqlParameter[] parameters =\n            {\n                new SqlParameter("@token", token),\n                new SqlParameter("@now", DateTime.Now)\n            };\n\n            using (SqlCommand command = new SqlCommand(query, connection))\n            {\n                command.Parameters.AddRange(parameters);\n                connection.Open();\n                var userIdObj = command.ExecuteScalar();\n\n                if (userIdObj != null && int.TryParse(userIdObj.ToString(), out int userId))\n                {\n                    // Reset the user's password\n                    MembershipProvider membershipProvider = Membership.Provider;\n                    bool success = membershipProvider.ChangePassword(membershipProvider.GetUserNameByEmail(userId.ToString()), GenerateTempPassword(), newPassword);\n\n                    if (success)\n                    {\n                        // Remove or invalidate the used token from the database\n                        query = "DELETE FROM PasswordResetTokens WHERE Token = @token";\n                        command.CommandText = query;\n                        command.ExecuteNonQuery();\n                    }\n\n                    return success;\n                }\n            }\n        }\n        return false;\n    }\n\n    private int GetUserId(string email)\n    {\n        // Implement your logic to fetch the user ID based on the email\n        throw new NotImplementedException();\n    }\n\n    private string GenerateTempPassword()\n    {\n        // Implement your logic to generate a temporary password if needed\n        throw new NotImplementedException();\n    }\n}\n\npublic static class EmailService\n{\n    public static void SendEmail(string userEmail, string subject, string body)\n    {\n        // Implement your email sending logic here\n        throw new NotImplementedException();\n    }\n}