using System.Security.Claims;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing Xunit;\nusing Moq;\n\npublic class HomeController : Controller\n{\n    public IActionResult Index()\n    {\n        if (this.User.Identity.IsAuthenticated)\n            return View("AuthenticatedUser");\n\n        return View("UnauthenticatedUser");\n    }\n}\n\npublic class HomeControllerTests\n{\n    [Fact]\n    public void Index_ReturnsAuthenticatedView_WhenUserIsAuthenticated()\n    {\n        // Arrange\n        var claims = new[] { new Claim(ClaimTypes.Name, "username") };\n        var identity = new ClaimsIdentity(claims, "login");\n        var principal = new ClaimsPrincipal(identity);\n\n        var mockContext = new Mock<HttpContext>();\n        mockContext.SetupGet(x => x.User).Returns(principal);\n        \n        var controllerContext = new ControllerContext()\n        {\n            HttpContext = mockContext.Object,\n        };\n\n        var homeController = new HomeController()\n        {\n            ControllerContext = controllerContext\n        };\n            \n        // Act\n        var result = homeController.Index();\n\n        // Assert \n        Assert.IsType<ViewResult>(result);\n        var viewResult = result as ViewResult;\n        Assert.Equal("AuthenticatedUser", viewResult.ViewName);\n    }\n\n    [Fact]\n    public void Index_ReturnsUnauthenticatedView_WhenUserIsNotAuthenticated()\n    {\n        // Arrange\n        var mockContext = new Mock<HttpContext>();\n        mockContext.SetupGet(x => x.User).Returns((ClaimsPrincipal)null); // not authenticated\n        \n        var controllerContext = new ControllerContext()\n        {\n            HttpContext = mockContext.Object,\n        };\n\n        var homeController = new HomeController()\n        {\n            ControllerContext = controllerContext\n        };\n            \n        // Act\n        var result = homeController.Index();\n\n        // Assert \n        Assert.IsType<ViewResult>(result);\n        var viewResult = result as ViewResult;\n        Assert.Equal("UnauthenticatedUser", viewResult.ViewName);\n    }\n}