using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Data.SqlClient;\n\npublic class DataSetMappingFactory\n{\n    public void AddTableMappings(SqlDataAdapter sqlDataAdapter, Type dataSetType)\n    {\n        // Example implementation: switch on the type of DataSet and add mappings accordingly.\n        // You can extend this logic to include all your DataSet types.\n        if (dataSetType == typeof(CustomerDataSet))\n        {\n            sqlDataAdapter.TableMappings.Add("CustomerTable", "Customers");\n            sqlDataAdapter.TableMappings.Add("OrderTable", "Orders");\n        }\n        else if (dataSetType == typeof(ProductDataSet))\n        {\n            sqlDataAdapter.TableMappings.Add("ProductDetails", "Products");\n        }\n        // Add more mappings as necessary.\n    }\n}\n\npublic static class DataAccessHelper\n{\n    public static DataSet FillDataSet(DataSet dataSet, string storedProcedureName, Dictionary<string, string> parameters)\n    {\n        if (dataSet == null) throw new ArgumentNullException(nameof(dataSet));\n        if (storedProcedureName == null) throw new ArgumentNullException(nameof(storedProcedureName));\n\n        using (SqlConnection connection = new SqlConnection("your_connection_string_here"))\n        using (SqlCommand command = new SqlCommand(storedProcedureName, connection))\n        {\n            command.CommandType = CommandType.StoredProcedure;\n            foreach (var parameter in parameters)\n            {\n                command.Parameters.AddWithValue(parameter.Key, parameter.Value);\n            }\n\n            SqlDataAdapter sqlDataAdapter = new SqlDataAdapter(command);\n\n            DataSetMappingFactory mappingFactory = new DataSetMappingFactory();\n            mappingFactory.AddTableMappings(sqlDataAdapter, dataSet.GetType());\n\n            connection.Open();\n            sqlDataAdapter.Fill(dataSet);\n        }\n\n        return dataSet;\n    }\n}\n\n// Example strongly-typed DataSets (define your schema in a .xsd file)\npublic class CustomerDataSet : DataSet { /* Define tables and relationships here */ }\npublic class ProductDataSet : DataSet { /* Define tables and relationships here */ }