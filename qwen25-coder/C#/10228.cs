void transportHelper_SubscriptionMessageReceived(object sender, SubscriptionMessageEventArgs e)\n{\n    if (synchronizationContext != null && SynchronizationContext.Current != synchronizationContext)\n    {\n        // Post ensures that the operation is performed on the main thread asynchronously.\n        synchronizationContext.Post(_ =>\n            {\n                // Reinvoke the method but ensure it does not attempt recursion again\n                ProcessSubscriptionMessage(sender, e);\n            }, \n            null);\n        return;\n    }\n    \n    // If already on the correct context, process directly\n    ProcessSubscriptionMessage(sender, e);\n}\n\nprivate void ProcessSubscriptionMessage(object sender, SubscriptionMessageEventArgs e)\n{\n    // Your code here [code removed....]\n}