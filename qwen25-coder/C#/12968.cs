using System;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Media;\n\npublic static class TextLabelUtils\n{\n    public static void SetDynamicText(Label label, string text)\n    {\n        if (label == null || string.IsNullOrEmpty(text)) return;\n\n        FormattedText formattedText = new FormattedText(\n            text,\n            CultureInfo.CurrentCulture,\n            FlowDirection.LeftToRight,\n            new Typeface(label.FontFamily, label.FontStyle, label.FontWeight, label.FontStretch),\n            label.FontSize,\n            Brushes.Black);\n\n        // Calculate the width of the text.\n        double textWidth = formattedText.Width;\n\n        // If the text fits the available width, set it directly.\n        if (label.ActualWidth > textWidth)\n        {\n            label.Content = text;\n            return;\n        }\n\n        // If the text does not fit, truncate it and add an ellipsis.\n        int trimmedLength = 0;\n        for (int i = text.Length - 1; i >= 0; i--)\n        {\n            string truncatedText = text.Substring(0, i) + "..";\n            formattedText = new FormattedText(\n                truncatedText,\n                CultureInfo.CurrentCulture,\n                FlowDirection.LeftToRight,\n                new Typeface(label.FontFamily, label.FontStyle, label.FontWeight, label.FontStretch),\n                label.FontSize,\n                Brushes.Black);\n\n            if (label.ActualWidth > formattedText.Width)\n            {\n                trimmedLength = i;\n                break;\n            }\n        }\n\n        // If no space for any text + "..", do not display the label.\n        if (trimmedLength <= 0)\n        {\n            label.Content = string.Empty;\n        }\n        else\n        {\n            label.Content = text.Substring(0, trimmedLength) + "..";\n        }\n    }\n}