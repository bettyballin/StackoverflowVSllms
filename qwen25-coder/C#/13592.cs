using System;\nusing Microsoft.SharePoint.Client;\n\nnamespace SharePointPermissionMonitor\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string siteUrl = "https://yourtenant.sharepoint.com/sites/yoursite";\n            using (var clientContext = new ClientContext(siteUrl))\n            {\n                // Set up credentials if required\n                var securePassword = new SecureString();\n                foreach (char c in "password".ToCharArray()) securePassword.AppendChar(c);\n                SharePointOnlineCredentials credentials = \n                    new SharePointOnlineCredentials("username@yourtenant.onmicrosoft.com", securePassword);\n\n                clientContext.Credentials = credentials;\n\n                Web web = clientContext.Web;\n                clientContext.Load(web, w => w.HasUniqueRoleAssignments);\n                clientContext.ExecuteQuery();\n\n                if (web.HasUniqueRoleAssignments)\n                {\n                    Console.WriteLine("Permission inheritance has been broken.");\n                    \n                    // Retrieve the list and items\n                    List targetList = clientContext.Web.Lists.GetByTitle("YourTargetList");\n                    CamlQuery camlQuery = new CamlQuery();\n                    ListItemCollection listItems = targetList.GetItems(camlQuery);\n                    clientContext.Load(listItems, items => items.Include(item => item.RoleAssignments));\n                    clientContext.ExecuteQuery();\n\n                    // Update permissions for each item\n                    foreach (ListItem listItem in listItems)\n                    {\n                        listItem.BreakRoleInheritance(false, true); // Break inheritance and copy current role assignments\n\n                        // Define new permission levels or update existing ones\n                        RoleDefinitionBindings rdb = new RoleDefinitionBindings();\n                        rdb.Add(clientContext.Web.RoleDefinitions.GetByName("Read"));\n                        RoleAssignment ra = new RoleAssignment(listItem, clientContext.Web.EnsureUser("user@yourtenant.onmicrosoft.com"));\n                        listItem.RoleAssignments.Add(ra);\n                        ra.RoleDefinitionBindings.Add(rdb);\n                        \n                        listItem.Update();\n                    }\n                    clientContext.ExecuteQuery();\n\n                    Console.WriteLine("Updated item permissions successfully.");\n                }\n                else\n                {\n                    Console.WriteLine("Permission inheritance has not been broken.");\n                }\n            }\n        }\n    }\n}