using Microsoft.AspNetCore.Mvc;\nusing System.Drawing; // Add reference to System.Drawing.Common package\n\n[ApiController]\n[Route("api/[controller]")]\npublic class DisplayController : ControllerBase\n{\n    private readonly IImageGenerator _imageGenerator;\n\n    public DisplayController(IImageGenerator imageGenerator)\n    {\n        _imageGenerator = imageGenerator;\n    }\n\n    [HttpGet]\n    [ProducesResponseType(typeof(byte[]), 200)]\n    public IActionResult GetDisplay()\n    {\n        // Generate or fetch the display image\n        var imageBitmap = _imageGenerator.GenerateImage();\n        \n        using (var ms = new MemoryStream())\n        {\n            imageBitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Png);\n            return File(ms.ToArray(), "image/png");\n        }\n    }\n}\n\npublic interface IImageGenerator\n{\n    Bitmap GenerateImage();\n}\n\n// Example implementation of the IImageGenerator\npublic class GdiPlusImageGenerator : IImageGenerator\n{\n    public Bitmap GenerateImage()\n    {\n        // Your GDI+ drawing logic here to create a bitmap.\n        var bitmap = new Bitmap(800, 600);\n        using (var g = Graphics.FromImage(bitmap))\n        {\n            // Example: Draw an ellipse\n            g.DrawEllipse(Pens.Black, 10, 10, 300, 200);\n        }\n        return bitmap;\n    }\n}