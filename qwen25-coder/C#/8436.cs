using System;\nusing System.Diagnostics;\nusing System.Web;\n\npublic static class ApplicationTypeChecker\n{\n    public static string GetApplicationType()\n    {\n        if (HttpContext.Current != null)\n        {\n            return "ASP.NET";\n        }\n\n        using (Process process = Process.GetCurrentProcess())\n        {\n            if (process.ProcessName.Contains("w3wp") || process.ProcessName.Contains("iisexpress"))\n            {\n                return "ASP.NET Hosting Process";\n            }\n            else if (AppDomain.CurrentDomain.FriendlyName.EndsWith(".vshost.exe", StringComparison.OrdinalIgnoreCase))\n            {\n                return "Visual Studio Hosted Application";\n            }\n        }\n\n        // For checking Windows Service is more indirect as it involves checking for specific service types\n        // which are not directly exposed via managed code.\n\n        try\n        {\n            System.Windows.Forms.Screen scr = System.Windows.Forms.Screen.PrimaryScreen;\n            if (scr != null)\n            {\n                return "Windows Forms";\n            }\n        }\n        catch (Exception)\n        {\n            // Likely a console or service app, no UI thread.\n        }\n\n        return "Console Application";\n    }\n}