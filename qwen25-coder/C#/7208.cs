using System;\nusing System.Collections.Generic;\n\npublic class PermissionManager\n{\n    private readonly Dictionary<string, bool> permissions = new Dictionary<string, bool>();\n\n    public PermissionManager()\n    {\n        // Initialize all permissions to false by default or based on your requirements\n        var permissionNames = Enum.GetNames(typeof(WebAgentPermissions));\n        foreach (var name in permissionNames)\n        {\n            permissions[name] = false; // or true if default is allowed\n        }\n    }\n\n    public void SetPermission(string permissionName, bool value)\n    {\n        if (!permissions.ContainsKey(permissionName))\n        {\n            throw new ArgumentException($"Invalid permission: {permissionName}");\n        }\n        permissions[permissionName] = value;\n    }\n\n    public bool HasPermission(string permissionName)\n    {\n        return permissions.TryGetValue(permissionName, out bool hasPermission) && hasPermission;\n    }\n}\n\npublic enum WebAgentPermissions\n{\n    AccessToMySearch,\n    AccessToPespectiveSearch,\n    AddPespectiveSearch,\n    EditPespectiveSearch,\n    DeletePespectiveSearch,\n    ImportExportChoices,\n    // ... add all other permissions here\n}