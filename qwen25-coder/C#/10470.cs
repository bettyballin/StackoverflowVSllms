Gl.glLoadIdentity(); // Reset transformations\n\n// Define position before rotation to make sure it is centered around its intended pivot point\nGl.glTranslatef((float)texto.Posicion.X, (float)texto.Posicion.Y, (float)texto.Posicion.Z);\n\n// Calculate angle for rotation based on orientation vector\ndouble tan = texto.Orientacion.Y / texto.Orientacion.X;\nfloat angulo = (float)Math.Atan(tan);\nGl.glRotatef(angulo, 0, 1, 0); // Rotate around y-axis\n\n// Apply scaling after translation and rotation to scale centered about the origin, which is now at desired position\nGl.glScalef(tamaño, tamaño, tamaño);\n\n// Set color for text rendering\nGl.glColor3f(texto.getRFloat(), texto.getGFloat(), texto.getBFloat());\n\n// Setting alignment before rendering\nif (texto.Alineacion == Align.left)\n    fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_LEFT;\nelse if (texto.Alineacion == Align.center)\n    fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_CENTERED;\nelse if (texto.Alineacion == Align.right)\n    fuenteActual.FT_ALIGN = FTFontAlign.FT_ALIGN_RIGHT;\n\n// Render the text\nfuenteActual.ftBeginFont();\nfuenteActual.ftWrite(texto.Text);\nfuenteActual.ftEndFont();