using System;\nusing VixCOM;  // reference the interop assembly\n\nclass Program\n{\n    static void Main()\n    {\n        ILibVixAPI lib = new VixCOMLib.VixCOMClass();\n        IVimHost host = null;\n\n        try\n        {\n            int jobHandle = lib.Connect(VixCOM.Constants.VIX_VMPOWEROP_NORMAL, null,\n                                         Constants.CONNECTION_PORT_ANY, null, Constants.CONNECTION_TYPE_WORKSTATION,\n                                         null, null, null, VixCOM.Constants.VIX_INVALID_HANDLE, out host);\n\n            // Wait for the connection to complete and check for errors.\n            int result = lib.Wait(jobHandle);\n            ErrorChecker.ThrowOnError(result);\n            \n            Console.WriteLine("Connected successfully.");\n        }\n        catch (VixException e)\n        {\n            Console.WriteLine("Failed to connect: " + e.ErrorText);\n        }\n    }\n\n    private static class ErrorChecker\n    {\n        internal static void ThrowOnError(int error)\n        {\n            if (error != Constants.VIX_OK)\n            {\n                throw new VixException(error);\n            }\n        }\n    }\n}\n\npublic class VixException : Exception\n{\n    public int ErrorCode { get; private set; }\n\n    public VixException(int errorCode)\n    {\n        ErrorCode = errorCode;\n    }\n\n    public override string Message\n    {\n        get\n        {\n            return $"Vix error code: {ErrorCode}, ErrorMessage: {GetErrorMessage()}";\n        }\n    }\n\n    private string GetErrorMessage()\n    {\n        ILibVixAPI lib = new VixCOM.VixCOMClass();\n        int errorMessageLength;\n        lib.GetErrorText(ErrorCode, Constants.DEFAULT_LOCALIZATION, 0, out errorMessageLength);\n        char[] buffer = new char[errorMessageLength];\n        lib.GetErrorText(ErrorCode, Constants.DEFAULT_LOCALIZATION, errorMessageLength, buffer);\n        return new string(buffer);\n    }\n}