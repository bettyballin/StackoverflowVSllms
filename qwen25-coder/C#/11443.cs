using System;\nusing System.Windows.Input;\n\npublic class RelayCommand : ICommand\n{\n    private readonly Action<object> _execute;\n    private readonly Predicate<object> _canExecute;\n\n    public RelayCommand(Action<object> execute, Predicate<object> canExecute = null)\n    {\n        _execute = execute ?? throw new ArgumentNullException(nameof(execute));\n        _canExecute = canExecute;\n    }\n\n    public bool CanExecute(object parameter) => _canExecute == null || _canExecute(parameter);\n\n    public void Execute(object parameter) => _execute(parameter);\n\n    public event EventHandler CanExecuteChanged\n    {\n        add { CommandManager.RequerySuggested += value; }\n        remove { CommandManager.RequerySuggested -= value; }\n    }\n}