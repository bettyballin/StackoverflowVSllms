using System;\nusing System.Data;\nusing System.Data.SqlClient;\n\npublic class BulkInsertExample\n{\n    public static void InsertData(string connectionString, DataTable dataTable)\n    {\n        using (SqlConnection conn = new SqlConnection(connectionString))\n        {\n            conn.Open();\n\n            using (SqlBulkCopy bulkCopy = new SqlBulkCopy(conn))\n            {\n                // Set the destination table name.\n                bulkCopy.DestinationTableName = "YourTableName";\n\n                // Optionally, map columns if necessary\n                /* \n                foreach(DataColumn col in dataTable.Columns)\n                {\n                    bulkCopy.ColumnMappings.Add(col.ColumnName, col.ColumnName);  \n                }\n                */\n\n                // Write from the source to the destination.\n                try\n                {\n                    bulkCopy.WriteToServer(dataTable);\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine(ex.Message);\n                }\n            }\n        }\n    }\n\n    public static DataTable LoadCsvToDataTable(string filePath, char delimiter = ',')\n    {\n        DataTable dt = new DataTable();\n        using (var reader = System.IO.File.OpenText(filePath))\n        {\n            var headers = reader.ReadLine().Split(delimiter);\n            foreach (var header in headers)\n            {\n                dt.Columns.Add(header.Trim());\n            }\n\n            while (!reader.EndOfStream)\n            {\n                var row = reader.ReadLine().Split(delimiter);\n                DataRow dr = dt.NewRow();\n                for (int i = 0; i < headers.Length && i < row.Length; i++)\n                {\n                    dr[i] = row[i].Trim();\n                }\n                dt.Rows.Add(dr);\n            }\n        }\n\n        return dt;\n    }\n}