using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nclass CarrierTrafficClassifier\n{\n    private readonly Dictionary<string, string> _prefixToCarrier = new();\n\n    public void LoadPrefixCodesFromFile(string filePath)\n    {\n        var lines = File.ReadAllLines(filePath);\n        foreach (var line in lines)\n        {\n            var parts = line.Split(',');\n            if (parts.Length == 2)\n            {\n                _prefixToCarrier[parts[0]] = parts[1];\n            }\n        }\n    }\n\n    public Dictionary<string, int> ClassifyTraffic(string dialedNumbersFilePath)\n    {\n        var carrierTraffic = new Dictionary<string, int>();\n\n        foreach (var line in File.ReadAllLines(dialedNumbersFilePath))\n        {\n            var parts = line.Split(',');\n            if (parts.Length == 2 && long.TryParse(parts[1], out var duration))\n            {\n                var number = parts[0];\n                string? carrier = FindCarrierForNumber(number);\n\n                if (carrier != null)\n                {\n                    if (!carrierTraffic.ContainsKey(carrier))\n                        carrierTraffic[carrier] = 0;\n\n                    carrierTraffic[carrier] += (int)duration;\n                }\n            }\n        }\n\n        return carrierTraffic;\n    }\n\n    private string? FindCarrierForNumber(string number)\n    {\n        string? bestMatch = null;\n        foreach (var prefix in _prefixToCarrier.Keys.Where(number.StartsWith))\n        {\n            if (bestMatch == null || prefix.Length > bestMatch.Length)\n                bestMatch = prefix;\n        }\n        return bestMatch != null ? _prefixToCarrier[bestMatch] : null;\n    }\n\n    public void SaveResults(Dictionary<string, int> results, string outputFilePath)\n    {\n        using var writer = new StreamWriter(outputFilePath);\n        foreach (var kvp in results)\n        {\n            writer.WriteLine($"{kvp.Key},{kvp.Value}");\n        }\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var classifier = new CarrierTrafficClassifier();\n        \n        // Load prefix codes for each carrier, assuming they are stored in a CSV like this: 'prefix,carrier'\n        classifier.LoadPrefixCodesFromFile("carrier_prefixes.csv");\n\n        // Classify the traffic from dialed numbers\n        var results = classifier.ClassifyTraffic("dialed_numbers.csv");\n\n        // Save the results to a file\n        classifier.SaveResults(results, "classified_traffic.csv");\n    }\n}