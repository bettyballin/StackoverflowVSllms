using System;\nusing System.Collections;\n\npublic class Example {\n    public static void Main() {\n        BitArray bits = new BitArray(new bool[] { false, true, false });\n\n        // Check if there's any 'true' value\n        bool hasTrue = !BitOperations.IsEmpty(bits);\n\n        // Check if there's any 'false' value\n        bool hasFalse = !BitOperations.IsAllSet(bits);\n\n        Console.WriteLine("Contains true: " + hasTrue);\n        Console.WriteLine("Contains false: " + hasFalse);\n    }\n}\n\npublic static class BitOperations {\n    public static bool IsEmpty(BitArray bits) {\n        if (bits == null || bits.Length == 0)\n            return true;\n\n        int[] ints = new int[bits.Count >> 5]; // divide by 32\n        bits.CopyTo(ints, 0);\n\n        foreach (int i in ints) {\n            if (i != 0) return false;\n        }\n        return true & !(bits.Length % 32 == 0 || ((int[])bits)[ints.Length - 1] << (32 - bits.Length % 32) != 0);\n    }\n\n    public static bool IsAllSet(BitArray bits) {\n        if (bits == null || bits.Length == 0)\n            return false;\n\n        int[] ints = new int[bits.Count >> 5]; // divide by 32\n        bits.CopyTo(ints, 0);\n\n        foreach (int i in ints) {\n            if ((i & unchecked((int)0xFFFFFFFF)) != unchecked((int)0xFFFFFFFF))\n                return false;\n        }\n        return true & (((int[])bits)[ints.Length - 1] >> (32 - bits.Length % 32) == 0 || (bits.Length % 32 == 0));\n    }\n}