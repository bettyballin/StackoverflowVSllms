List<File> files = new List<File>();\nSqlConnection active_connection = new SqlConnection(m_connection_string);\nSqlCommand cmd = new SqlCommand();\n\ntry {\n    active_connection.Open();\n    cmd.Connection = active_connection;\n    cmd.CommandType = CommandType.StoredProcedure;\n    cmd.CommandText = "dalsp_Select_Organization_Files";\n\n    SqlParameter param;\n\n    param = cmd.Parameters.Add("@p_organization_guid", SqlDbType.UniqueIdentifier);\n    param.Value = new Guid(organization_guid);\n\n    param = cmd.Parameters.Add("@p_file_type", SqlDbType.NVarChar, 50);\n    param.Value = file_type;\n\n    SqlDataReader dr = cmd.ExecuteReader(CommandBehavior.CloseConnection);\n\n    if (dr.HasRows) {\n        while (dr.Read()) {\n            File file = new File();\n            // Add Debugging\n            Console.WriteLine($"OrganizationGuid: {dr["OrganizationGuid"]}, FileGuid: {dr["FileGuid"]}");\n\n            file.OrganizationGuid = dr["OrganizationGuid"].ToString();\n            file.FileGuid = dr["FileGuid"].ToString();\n            file.FileLocation = dr["FileLocation"].ToString();\n            file.FileName = dr["FileName"].ToString();\n            if (Enum.IsDefined(typeof(FileTypeEnum), dr["FileType"]))\n                file.FileType = (FileTypeEnum)Enum.Parse(typeof(FileTypeEnum), dr["FileType"].ToString());\n            else\n                Console.WriteLine($"Unknown FileType: {dr["FileType"]}");\n            \n            file.FileExtension = dr["FileExtension"].ToString();\n            file.FileDescription = dr["FileDescription"].ToString();\n            file.ThumbnailPath = dr["ThumbnailPath"].ToString();\n\n            files.Add(file);\n        }\n    }\n\n} catch (Exception ex) {\n    Console.WriteLine("An error occurred: " + ex.Message);\n    throw;\n} finally {\n    if (active_connection.State != ConnectionState.Closed)\n        active_connection.Dispose();\n}\n\nreturn files;