using System;\nusing System.ComponentModel;\nusing System.Data.SqlClient;\nusing System.Threading;\n\npublic void ExecuteQueryOnSqlServer(BackgroundWorker worker, string query)\n{\n    using (var connection = new SqlConnection("YourConnectionString"))\n    {\n        var command = connection.CreateCommand();\n        command.CommandText = query;\n\n        // Create a CancellationTokenSource\n        var cancellationTokenSource = new CancellationTokenSource();\n\n        IAsyncResult result = null;\n        \n        command.BeginExecuteReader(\n            callback => {\n                try {\n                    if (!cancellationTokenSource.IsCancellationRequested)\n                        command.EndExecuteReader(callback);\n                } catch (Exception ex) {\n                    worker.ReportProgress(0, ex.Message);\n                }\n            }, \n            state: null);\n\n        // Handle cancel event\n        worker.DoWork += (s, e) =>\n        {\n            while (!cancellationTokenSource.IsCancellationRequested && !command.HasRows)\n                Thread.Sleep(100);  // Sleep to reduce CPU usage\n\n            if (worker.CancellationPending)\n            {\n                cancellationTokenSource.Cancel();  // Cancel the token, which should interrupt the command\n                command.Dispose();\n                e.Cancel = true;\n            }\n        };\n    }\n}