// Assuming interface IWeapon is defined in a shared library accessible to both assemblies\n\n// Adapter in Assembly 2:\npublic class WeaponAdapter : IWeapon {\n    private readonly dynamic _adaptee;\n\n    public WeaponAdapter(dynamic adaptee) {\n        _adaptee = adaptee;\n    }\n\n    public int Might => _adaptee.Might;\n}\n\n// Usage in Assembly 2:\nvar catalog = new AssemblyCatalog(typeof(Ninja.Sword).Assembly);\nvar container = new CompositionContainer(catalog);\n\n// Get the dynamic object from MEF\ndynamic swordDynamic = container.GetExportedValue("sword");\n\n// Wrap it with an adapter that implements IWeapon\nIWeapon adaptedSword = new WeaponAdapter(swordDynamic);