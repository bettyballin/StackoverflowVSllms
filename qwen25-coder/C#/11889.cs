using System;\nusing System.IO;\nusing System.Web.Services.Protocols;\nusing System.Text;\n\npublic class SoapLogger : SoapExtension {\n    private Stream oldStream;\n    private Stream newStream;\n\n    public override Stream ChainStream(Stream stream) {\n        oldStream = stream;\n        newStream = new MemoryStream();\n        return newStream;\n    }\n\n    public override object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute) {\n        return null;\n    }\n\n    public override object GetInitializer(Type WebServiceType) {\n        return null;\n    }\n\n    public override void Initialize(object initializer) {\n    }\n\n    public override void ProcessMessage(SoapMessage message) {\n        switch (message.Stage) {\n            case SoapMessageStage.BeforeSerialize:\n                break;\n            case SoapMessageStage.AfterSerialize:\n                CopyStream(oldStream, newStream);\n                LogToFile(newStream, "Request");\n                CopyStream(newStream, oldStream);\n                break;\n            case SoapMessageStage.BeforeDeserialize:\n                CopyStream(oldStream, newStream);\n                LogToFile(newStream, "Response");\n                CopyStream(newStream, oldStream);\n                break;\n            case SoapMessageStage.AfterDeserialize:\n                break;\n        }\n    }\n\n    private void CopyStream(Stream fromStream, Stream toStream) {\n        var reader = new StreamReader(fromStream);\n        string text = reader.ReadToEnd();\n        byte[] bytes = Encoding.UTF8.GetBytes(text);\n        toStream.Write(bytes, 0, bytes.Length);\n        toStream.Seek(0, SeekOrigin.Begin);\n        fromStream.Seek(0, SeekOrigin.Begin);\n    }\n\n    private void LogToFile(Stream stream, string direction) {\n        var reader = new StreamReader(stream);\n        string content = reader.ReadToEnd();\n        File.AppendAllText("soap_messages.log", $"{DateTime.Now} {direction}:\r\n{content}\r\n");\n        stream.Position = 0;\n    }\n}\n\n// Usage of SoapLogger as an attribute on a web method call\npublic class MySoapService : WebServices.MyWebService {\n    [SoapExtension(typeof(SoapLogger), true, 1)]\n    public override void MyMethod() {\n        base.MyMethod();\n    }\n}