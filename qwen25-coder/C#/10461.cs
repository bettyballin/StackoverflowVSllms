using System.Security;\nusing System.Security.Principal;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\n[TestClass]\npublic class UnitTest1\n{\n    [TestMethod]\n    public void TestMethod1()\n    {\n        // Create a generic identity and then create a principal with that identity.\n        IIdentity fakeIdentity = new GenericIdentity("testUser");\n        IPrincipal fakePrincipal = new GenericPrincipal(fakeIdentity, new string[] { @"BUILTIN\Users" });\n\n        // Set the fake principal as the current principal\n        Thread.CurrentPrincipal = fakePrincipal;\n\n        try\n        {\n            var c = new MyClass();\n            Assert.IsNotNull(c);\n        }\n        catch (SecurityException)\n        {\n            Assert.Fail("A SecurityException should not be thrown when the user is in the correct role.");\n        }\n    }\n}\n\n[PrincipalPermission(SecurityAction.Demand, Role = @"BUILTIN\Users")]\nclass MyClass\n{\n    public MyClass()\n    {\n        Console.WriteLine("This works.");\n    }\n}