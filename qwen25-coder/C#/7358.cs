public class CustomPrincipal : IPrincipal\n{\n    private readonly IIdentity _identity;\n    private string[] _roles;\n\n    public CustomPrincipal(IIdentity identity)\n    {\n        _identity = identity;\n    }\n\n    public void SetRoles(string[] roles)\n    {\n        _roles = roles ?? new string[0];\n    }\n\n    public virtual bool IsInRole(string role)\n    {\n        // Here should be your logic for checking roles\n        if (_roles != null && _roles.Contains(role, StringComparer.OrdinalIgnoreCase))\n            return true;\n        return false;\n    }\n\n    public IIdentity Identity => _identity;\n\n    public void Dispose()\n    {\n        // Implement IDisposable if necessary\n    }\n}