using System;\nusing System.ComponentModel;\n\npublic class ValidatableObject : INotifyPropertyChanged, IDataErrorInfo\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    protected virtual void OnPropertyChanged(string propertyName)\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n\n    string IDataErrorInfo.Error => null;\n\n    string IDataErrorInfo.this[string propertyName]\n    {\n        get\n        {\n            var property = GetType().GetProperty(propertyName);\n            if (property != null)\n            {\n                foreach (var attr in property.GetCustomAttributes(typeof(ValidationAttribute), false))\n                {\n                    var validationAttribute = attr as ValidationAttribute;\n                    if (validationAttribute != null && !validationAttribute.IsValid(property.GetValue(this)))\n                        return validationAttribute.ErrorMessage;\n                }\n            }\n\n            return null;\n        }\n    }\n}