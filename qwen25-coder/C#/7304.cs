using System;\nusing System.Reflection;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\n\npublic class ImpersonationExample : IDisposable\n{\n    // Import the necessary functions from advapi32.dll\n    [DllImport("advapi32.dll", SetLastError = true)]\n    public static extern bool LogonUser(\n        string lpszUsername,\n        string lpszDomain,\n        string lpszPassword,\n        int dwLogonType,\n        int dwLogonProvider,\n        out IntPtr phToken);\n\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]\n    public extern static bool CloseHandle(IntPtr handle);\n\n    private WindowsIdentity _impersonatedUser;\n    private IntPtr _userToken;\n\n    public ImpersonationExample(string username, string domain, string password)\n    {\n        if (!LogonUser(\n            username,\n            domain,\n            password,\n            2, // LOGON32_LOGON_INTERACTIVE\n            0, // LOGON32_PROVIDER_DEFAULT\n            out _userToken))\n        {\n            throw new Exception("Failed to log on user: " + Marshal.GetLastWin32Error());\n        }\n\n        _impersonatedUser = new WindowsIdentity(_userToken);\n    }\n\n    public void Execute(Action action)\n    {\n        using (_impersonatedUser.Impersonate())\n        {\n            // Code that will run under the impersonated context\n            action();\n        }\n    }\n\n    public void Dispose()\n    {\n        if (_userToken != IntPtr.Zero) CloseHandle(_userToken);\n    }\n}\n\n// Usage example:\npublic class ExampleUsage\n{\n    public static void Main()\n    {\n        using (var user1 = new ImpersonationExample("user1", "domain", "password"))\n        {\n            // Run actions as User1\n            user1.Execute(() =>\n            {\n                Console.WriteLine("Running as User1");\n                // Your code here that interacts with the server as User1\n            });\n        }\n\n        using (var user2 = new ImpersonationExample("user2", "domain", "password"))\n        {\n            // Run actions as User2\n            user2.Execute(() =>\n            {\n                Console.WriteLine("Running as User2");\n                // Your code here that interacts with the server as User2\n            });\n        }\n    }\n}