using System;\nusing System.Runtime.InteropServices;\n\nclass RegistryWatcher\n{\n    private const uint REG_NOTIFY_CHANGE_NAME = 0x0001;\n    private const uint REG_NOTIFY_CHANGE_ATTRIBUTES = 0x0002;\n    private const uint REG_NOTIFY_CHANGE_LAST_SET = 0x0004;\n    private const int WAIT_OBJECT_0 = 0;\n\n    [DllImport("advapi32.dll", SetLastError = true)]\n    static extern int RegOpenKeyEx(\n        IntPtr hKey, string lpSubKey, uint ulOptions, uint samDesired,\n        out IntPtr phkResult);\n\n    [DllImport("advapi32.dll", SetLastError = true)]\n    static extern int RegNotifyChangeKeyValue(\n        IntPtr hKey, bool bWatchSubtree, uint dwNotifyFilter,\n        IntPtr hEvent, bool fAsynchronous);\n\n    [DllImport("kernel32.dll")]\n    private static extern int WaitForSingleObject(IntPtr handle, uint milliseconds);\n\n    [DllImport("user32.dll", SetLastError = true)]\n    private static extern IntPtr CreateEvent(IntPtr lpEventAttributes, bool bManualReset, bool bInitialState, string lpName);\n\n    public void StartWatching(string registryPath)\n    {\n        IntPtr hKey;\n        int result = RegOpenKeyEx((IntPtr)0x80000002L /* HKEY_LOCAL_MACHINE */, registryPath, 0, 0x1 | 0x2 | 0x4, out hKey);\n\n        if (result != 0)\n            throw new Exception($"Failed to open key. Error: {result}");\n\n        IntPtr eventHandle = CreateEvent(IntPtr.Zero, false, false, string.Empty);\n        if (eventHandle == IntPtr.Zero)\n            throw new Exception("Could not create event.");\n\n        while (true)\n        {\n            result = RegNotifyChangeKeyValue(hKey, true,\n                REG_NOTIFY_CHANGE_NAME | REG_NOTIFY_CHANGE_ATTRIBUTES |\n                REG_NOTIFY_CHANGE_LAST_SET, eventHandle, true);\n\n            if (result != 0)\n                throw new Exception($"Failed to monitor key. Error: {result}");\n\n            Console.WriteLine("Waiting for registry changes...");\n            WaitForSingleObject(eventHandle, UInt32.MaxValue); // Wait indefinitely\n\n            Console.WriteLine("Registry changed!");\n        }\n    }\n\n    [DllImport("advapi32.dll", SetLastError = true)]\n    static extern int RegCloseKey(IntPtr hKey);\n\n    ~RegistryWatcher()\n    {\n        // Close the registry key here if needed\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        RegistryWatcher watcher = new RegistryWatcher();\n        watcher.StartWatching(@"SOFTWARE\Microsoft\Windows NT\CurrentVersion");\n    }\n}