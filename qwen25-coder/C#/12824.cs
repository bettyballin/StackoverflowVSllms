using System;\nusing System.Security.Principal;\nusing System.Runtime.InteropServices;\n\npublic class UserImpersonation : IDisposable\n{\n    private IntPtr _tokenHandle = IntPtr.Zero;\n    private WindowsImpersonationContext _impersonatedUser;\n\n    public const int LOGON32_LOGON_INTERACTIVE = 2;\n    public const int LOGON32_PROVIDER_DEFAULT = 0;\n\n    [DllImport("advapi32.dll", SetLastError = true)]\n    private static extern bool LogonUser(\n        string lpszUsername,\n        string lpszDomain,\n        string lpszPassword,\n        int dwLogonType,\n        int dwLogonProvider,\n        out IntPtr phToken);\n\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    private static extern bool CloseHandle(IntPtr handle);\n\n    public UserImpersonation(string domainName, string userName, string password)\n    {\n        if (!string.IsNullOrEmpty(domainName) && !domainName.EndsWith(@"\"))\n            domainName += @"\";\n        else\n            domainName.Trim();\n\n        if (LogonUser(userName, domainName, password,\n                        LOGON32_LOGON_INTERACTIVE,\n                        LOGON32_PROVIDER_DEFAULT,\n                        out _tokenHandle))\n        {\n            WindowsIdentity newId = new WindowsIdentity(_tokenHandle);\n            _impersonatedUser = newId.Impersonate();\n        }\n        else\n        {\n            throw new UnauthorizedAccessException("Logon failed");\n        }\n    }\n\n    public void Dispose()\n    {\n        RevertToSelf();\n\n        if (_tokenHandle != IntPtr.Zero)\n        {\n            CloseHandle(_tokenHandle);\n            _tokenHandle = IntPtr.Zero;\n        }\n    }\n\n    [DllImport("advapi32.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    private static extern int RevertToSelf();\n}\n\n// Usage example\ntry\n{\n    using (new UserImpersonation(Environment.UserDomainName, "Username", "Password"))\n    {\n        Console.WriteLine($"Current user (impersonated): {WindowsIdentity.GetCurrent().Name}");\n    }\n}\ncatch (UnauthorizedAccessException ex)\n{\n    Console.WriteLine("Failed to impersonate user: " + ex.Message);\n}