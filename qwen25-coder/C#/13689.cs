using System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Text;\nusing System.Threading;\n\nclass TcpServer {\n    private static void HandleClientComm(object obj) {\n        TcpClient client = (TcpClient)obj;\n        NetworkStream stream = client.GetStream();\n        byte[] buffer = new byte[1024];\n        \n        try {\n            int bytesRead;\n            while ((bytesRead = stream.Read(buffer, 0, buffer.Length)) != 0) {\n                string dataReceived = Encoding.ASCII.GetString(buffer, 0, bytesRead);\n                Console.WriteLine("Received: " + dataReceived);\n\n                // Echo the data back to the client\n                byte[] sendBytes = Encoding.ASCII.GetBytes(dataReceived);\n                stream.Write(sendBytes, 0, sendBytes.Length);\n            }\n        } catch (IOException) {\n            Console.WriteLine("Client disconnected.");\n        } finally {\n            stream.Close();\n            client.Close();\n        }\n    }\n\n    public static void Main(string[] args) {\n        TcpListener server = new TcpListener(IPAddress.Any, 13000);\n        server.Start();\n\n        Console.WriteLine("Server started. Listening to TCP clients at port 13000...");\n        \n        while (true) { // This loop runs indefinitely to accept multiple connections\n            TcpClient client = server.AcceptTcpClient();\n            Console.WriteLine("Accepted connection from " + ((IPEndPoint)client.Client.RemoteEndPoint).Address);\n            \n            Thread threadHandler = new Thread(HandleClientComm);\n            threadHandler.Start(client);\n        }\n    }\n}