using System;\n   using System.Threading;\n   using Microsoft.VisualStudio.TestTools.UnitTesting;\n\n   [TestClass]\n   public class ThreadSafetyTests\n   {\n       private static int _counter = 0;\n       private const int ITERATIONS = 10000;\n\n       [TestMethod]\n       public void TestCounterIncrement()\n       {\n           var threads = new Thread[10];\n           for (int i = 0; i < threads.Length; i++)\n           {\n               threads[i] = new Thread(() =>\n               {\n                   for (int j = 0; j < ITERATIONS; j++)\n                       IncrementCounter();\n               });\n               threads[i].Start();\n           }\n\n           foreach (var thread in threads)\n               thread.Join();\n\n           Assert.AreEqual(threads.Length * ITERATIONS, _counter);\n       }\n\n       private static void IncrementCounter()\n       {\n           // Without lock or Interlocked operations, this will fail\n           Interlocked.Increment(ref _counter); \n       }\n   }