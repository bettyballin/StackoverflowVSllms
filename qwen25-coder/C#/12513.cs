using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryptionExample\n{\n    public static void Main()\n    {\n        string original = "12345"; // Numeric value as a string\n\n        // Create or get the key and IV.\n        byte[] Key = GenerateRandomNumber(32); // AES-256\n        byte[] IV = GenerateRandomNumber(16);  // Block size of 16 bytes for AES\n\n        string encrypted = AesEncryptString(original, Key, IV);\n        Console.WriteLine("Encrypted: " + Convert.ToBase64String(Convert.FromHexString(encrypted)));\n\n        string decrypted = AesDecryptString(encrypted, Key, IV);\n        Console.WriteLine("Decrypted: " + decrypted);\n\n        // Output will be the original numeric value.\n    }\n\n    public static byte[] GenerateRandomNumber(int bytes)\n    {\n        using (var rng = new RNGCryptoServiceProvider())\n        {\n            byte[] data = new byte[bytes];\n            rng.GetBytes(data);\n            return data;\n        }\n    }\n\n    public static string AesEncryptString(string plainText, byte[] Key, byte[] IV)\n    {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException("plainText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        byte[] encrypted;\n\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    encrypted = msEncrypt.ToArray();\n                }\n            }\n        }\n\n        return Convert.ToHexString(encrypted);\n    }\n\n    public static string AesDecryptString(string cipherText, byte[] Key, byte[] IV)\n    {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException("cipherText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        string plaintext = null;\n\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(Convert.FromHexString(cipherText)))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        plaintext = srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n\n        return plaintext;\n    }\n}