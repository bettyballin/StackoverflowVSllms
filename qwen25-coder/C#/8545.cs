using System;\nusing System.Security.Cryptography;\n\npublic class EncryptionExample\n{\n    public static byte[] EncryptByteArray(byte[] plaintext, byte[] key, byte[] iv)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = key;\n            aesAlg.IV = iv;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n            \n            return encryptor.TransformFinalBlock(plaintext, 0, plaintext.Length);\n        }\n    }\n\n    public static void Main()\n    {\n        byte[] dataToEncrypt = new byte[] { 1, 2, 3, 4, 5 };\n        byte[] key = GenerateRandomKey(); // Implement your own or use a secure method\n        byte[] iv = GenerateRandomIV();   // Implement your own or use a secure method\n\n        byte[] encryptedData = EncryptByteArray(dataToEncrypt, key, iv);\n\n        Console.WriteLine("Encrypted data: " + Convert.ToBase64String(encryptedData));\n    }\n\n    private static byte[] GenerateRandomKey()\n    {\n        using (var rngCryptoServiceProvider = new RNGCryptoServiceProvider())\n        {\n            var randomKey = new byte[32];\n            rngCryptoServiceProvider.GetBytes(randomKey);\n            return randomKey;\n        }\n    }\n\n    private static byte[] GenerateRandomIV()\n    {\n        using (var rngCryptoServiceProvider = new RNGCryptoServiceProvider())\n        {\n            var randomIv = new byte[16];\n            rngCryptoServiceProvider.GetBytes(randomIv);\n            return randomIv;\n        }\n    }\n}