// Step 1: Define a new class representing the columns in your ResultSet\npublic class ResultSet\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n    public string Value { get; set; }\n}\n\n// Step 2: Modify your method to use this custom class and translate the results\npublic IEnumerable<ResultSet> GetObject(string objectType, bool? itemState, bool? isPublished)\n{\n    // Define a command text that executes the stored procedure\n    const string.CommandText = "dbo.p_GetObject @ObjectType, @ItemState, @IsPublished";\n    \n    // Execute the query and translate the results to ResultSet objects\n    var resultSets = this.ExecuteQuery<ResultSet>(CommandText,\n        new SqlParameter("@ObjectType", objectType),\n        new SqlParameter("@ItemState", itemState ?? (object)DBNull.Value), \n        new SqlParameter("@IsPublished", isPublished ?? (object)DBNull.Value));\n\n    return resultSets;\n}