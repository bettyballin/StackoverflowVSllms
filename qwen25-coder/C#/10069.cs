// Custom action filter for auto-refreshing to another action\npublic class AutoRefreshAttribute : ActionFilterAttribute\n{\n    private readonly string _controllerName;\n    private readonly string _actionName;\n    private readonly int _durationInSeconds;\n\n    public AutoRefreshAttribute(string controllerName, string actionName, int durationInSeconds)\n    {\n        _controllerName = controllerName;\n        _actionName = actionName;\n        _durationInSeconds = durationInSeconds;\n    }\n\n    public override void OnResultExecuting(ResultExecutingContext filterContext)\n    {\n        filterContext.HttpContext.Response.Headers.Add("Refresh", $"{_durationInSeconds};url={UrlHelper.GenerateUrl(null, _actionName, _controllerName, null, RouteTable.Routes, filterContext.RequestContext, true)}");\n        base.OnResultExecuting(filterContext);\n    }\n}\n\npublic class YourController : Controller\n{\n    [CaptchaValidator]\n    [HttpPost]\n    public ActionResult Index(FormCollection collection)\n    {\n        // do some stuff ...\n        return RedirectToAction("Thankyou");\n    }\n\n    [HttpGet]\n    [AutoRefresh(ControllerName = "Download", ActionName = "GetFile", DurationInSeconds = 3)]\n    public ActionResult Thankyou()\n    {\n        return View();\n    }\n\n    [HttpGet]\n    public FilePathResult GetFile()\n    {\n        var fileName = Server.MapPath("~/path/to/foo.exe"); // Ensure path is secure and mapped properly\n        return File(fileName, "application/octet-stream", "installer.exe");\n    }\n}