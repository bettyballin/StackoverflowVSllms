using System;\nusing System.IO;\nusing System.Security.Cryptography;\n\nclass Program\n{\n    static void Main()\n    {\n        string connectionString = DecryptConnectionString(GetEncryptedKey(), Environment.GetEnvironmentVariable("ENCRYPTION_KEY"));\n        // Use the connection string to connect to your database...\n    }\n\n    static byte[] GetEncryptedKey()\n    {\n        // Placeholder for reading an encrypted key from a file or some other source\n        return File.ReadAllBytes("encrypted_key.dat");\n    }\n\n    static string DecryptConnectionString(byte[] encryptedData, string encryptionKey)\n    {\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Convert.FromBase64String(encryptionKey);\n            aesAlg.IV = new byte[16]; // You should securely store and retrieve the IV too.\n            \n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(encryptedData))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}