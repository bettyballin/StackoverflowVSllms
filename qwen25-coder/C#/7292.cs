using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Runtime.Serialization;\nusing System.Windows.Media;\n\n[DataContract]\npublic class FontSettings\n{\n    [DataMember]\n    private List<string> _fontNames;\n\n    public List<FontFamily> FontFamilies { get; private set; }\n\n    public FontSettings()\n    {\n        _fontNames = new List<string>();\n        FontFamilies = new List<FontFamily>();\n    }\n\n    [OnDeserialized]\n    private void OnDeserializedMethod(StreamingContext context)\n    {\n        // Validate each font name during deserialization\n        foreach (var fontName in _fontNames)\n        {\n            if (IsFontAvailable(fontName))\n            {\n                FontFamilies.Add(new FontFamily(fontName));\n            }\n        }\n    }\n\n    private bool IsFontAvailable(string fontName)\n    {\n        try\n        {\n            return Fonts.SystemFontFamilies.Any(family => family.Source.Equals(fontName, StringComparison.OrdinalIgnoreCase));\n        }\n        catch (Exception)\n        {\n            return false;\n        }\n    }\n}