<#@ template language="C#" #>\n<#@ assembly name="System.Data" #>\n<#@ import namespace="System.Data.SqlClient"#>\n\nnamespace YourNamespace.Models {\npublic <#\nstring connectionString = "YourConnectionString";\nusing (var connection = new SqlConnection(connectionString))\n{\n    connection.Open();\n    var command = new SqlCommand("SELECT * FROM Information_Schema.Columns WHERE Table_Name = 'YourTableName'", connection);\n    using (var reader = command.ExecuteReader())\n    {\n        while (reader.Read())\n        {\n            var fieldName =	reader["COLUMN_NAME"].ToString();\n            var dataType = ConvertToVBType(reader["DATA_TYPE"].ToString());\n#>\nclass YourClassName {\nprivate <#=dataType#> _<#=fieldName.ToLower()#>;\npublic <#=dataType#> <#=Capitalize(fieldName)#> {\nget { return _<#=fieldName.ToLower()#>; }\nset { _<#=fieldName.ToLower()#> = value; }\n}\n</#\n        }\n    }\n}\n#>\n}\n\n<#+\nprivate string DataTypeMap(string sqlDataType) {\n    switch(sqlDataType.ToLower()) {\n        case "int":\n            return "int";\n        case "varchar":\n        case "char":\n        case "nchar":\n        case "nvarchar":\n            return "string";\n        // Add more types as needed\n        default:\n            return "object";\n    }\n}\nprivate string ConvertToVBType(string sqlDataType) {\n    var type = DataTypeMap(sqlDataType);\n    switch(type.ToLower()) {\n        case "datetime":\n            return "DateTime?";\n        default:\n            return type;\n    }\n}\nprivate string Capitalize(string name) {\n    if(name.Length == 0)\n        return "";\n    return char.ToUpper(name[0]) + name.Substring(1).ToLower();\n}\n#>