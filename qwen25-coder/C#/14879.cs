using System;\nusing System.Globalization;\nusing System.Reflection;\nusing System.Resources;\n\npublic class LocalizedException : ApplicationException\n{\n    public LocalizedException(string resourceKey, params object[] args)\n        : base(GetLocalizedMessage(resourceKey, args))\n    {\n    }\n\n    private static string GetLocalizedMessage(string resourceKey, object[] args)\n    {\n        var resourceManager = new ResourceManager("AppName.ExceptionResources", Assembly.GetExecutingAssembly());\n        string localizedMessage = resourceManager.GetString(resourceKey);\n        \n        if (localizedMessage == null)\n            throw new ArgumentException($"Resource key '{resourceKey}' not found.");\n\n        try\n        {\n            return String.Format(CultureInfo.CurrentCulture, localizedMessage, args);\n        }\n        catch (FormatException)\n        {\n            // Fallback message if formatting fails\n            return $"{localizedMessage} (Formatting error with provided arguments)";\n        }\n    }\n}