using System;\nusing System.IO;\nusing System.Net;\nusing System.Text;\nusing System.Threading.Tasks;\n\npublic class ProxyServer\n{\n    private readonly HttpListener _listener;\n    private const string DestinationHost = "http://example.com"; // Change this to your target site\n\n    public ProxyServer(string[] prefixes)\n    {\n        if (!HttpListener.IsSupported)\n            throw new NotSupportedException("Requires Windows XP SP2, Server 2003 or later.");\n\n        _listener = new HttpListener();\n        foreach (string prefix in prefixes)\n        {\n            _listener.Prefixes.Add(prefix);\n        }\n    }\n\n    public async Task StartAsync()\n    {\n        _listener.Start();\n        Console.WriteLine("Listening for connections on {0}", string.Join(", ", _listener.Prefixes));\n\n        while (_listener.IsListening)\n        {\n            await HandleIncomingConnections();\n        }\n    }\n\n    private async Task HandleIncomingConnections()\n    {\n        var context = await _listener.GetContextAsync();\n\n        // Log request\n        Console.WriteLine($"Request received for {context.Request.Url}");\n\n        using (var httpClient = new HttpClient())\n        {\n            var requestContent = new StreamContent(context.Request.InputStream);\n            if (!string.IsNullOrEmpty(context.Request.ContentType))\n                requestContent.Headers.ContentType.MediaType = context.Request.ContentType;\n\n            var responseMessage = await httpClient.SendAsync(\n                new HttpRequestMessage(new HttpMethod(context.Request.HttpMethod), new Uri($"{DestinationHost}{context.Request.Url.PathAndQuery}"))\n                {\n                    Content = requestContent\n                });\n\n            // Log response status\n            Console.WriteLine($"Response received {responseMessage.StatusCode}");\n\n            context.Response.OutputStream.Write(responseMessage.Content.ReadAsByteArrayAsync().Result, 0,\n                (int)responseMessage.Content.Headers.ContentLength.Value);\n        }\n\n        context.Response.Close();\n    }\n}\n\nclass Program\n{\n    static async Task Main()\n    {\n        var proxy = new ProxyServer(new[] { "http://localhost:8888/" });\n        await proxy.StartAsync();\n    }\n}