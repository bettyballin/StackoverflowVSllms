using System;\nusing System.Linq;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class SelfSignedCertificateGenerator\n{\n    public X509Certificate2 GenerateSelfSigned(\n        string subjectName,\n        TimeSpan certValidityPeriod)\n    {\n        using (RSA rsa = RSA.Create(2048))\n        {\n            // Create a Subject Alternative Name extension.\n            var dnsNames = new[] { "example.com", "localhost" };\n            X509SubjectAlternativeNameBuilder sanBuilder = new();\n            sanBuilder.AddDnsName("example.com");\n            sanBuilder.AddDnsName("localhost");\n\n            using (X509Certificate2 certificate = X509Certificate2.CreateSelfSigned(\n                rsa,\n                new X500DistinguishedName($"CN={subjectName}"),\n                DateTimeOffset.Now,\n                DateTimeOffset.Now.Add(certValidityPeriod),\n                new Oid(subjectAlternativeName, "2.5.29.17"),\n                sanBuilder.Build(),\n                RSASignaturePadding.Pkcs1,\n                HashAlgorithmName.SHA256))\n            {\n                return certificate.CopyWithPrivateKey(rsa);\n            }\n        }\n    }\n}\n\n// Usage\nvar certGenerator = new SelfSignedCertificateGenerator();\nvar selfSignedCert = certGenerator.GenerateSelfSigned("TestClientApp", TimeSpan.FromDays(365));