using System;\nusing System.Collections;\nusing System.Reflection;\n\nclass MyClass\n{\n    private object _recordSet;\n    public object RecordSet\n    {\n        get { return _recordSet; }\n        set { _recordSet = value; }\n    }\n\n    public string Draw()\n    {\n        // Ensure _recordSet is an IList, which allows index access\n        if (_recordSet is IList recordList)\n        {\n            int recordCount = recordList.Count;\n\n            for (int cont = 0; cont < recordCount; cont++)\n            {\n                object item = recordList[cont]; // Access the item by index\n\n                // Assuming X has a property named "Name", access it using reflection\n                PropertyInfo nameProperty = item.GetType().GetProperty("Name");\n                if (nameProperty != null)\n                {\n                    string name = (string)nameProperty.GetValue(item, null);\n                    Console.WriteLine(name); // or whatever you need to do with the name\n                }\n            }\n        }\n\n        return "Processed";\n    }\n}