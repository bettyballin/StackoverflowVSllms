using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\npublic class NtfsCompression\n{\n    [DllImport("kernel32.dll", CharSet = CharSet.Unicode, SetLastError = true)]\n    static extern bool DeviceIoControl(\n        IntPtr hDevice,\n        uint dwIoControlCode,\n        IntPtr lpInBuffer,\n        uint nInBufferSize,\n        IntPtr lpOutBuffer,\n        uint nOutBufferSize,\n        out uint lpBytesReturned,\n        [In] ref System.Threading.NativeOverlapped lpOverlapped\n    );\n\n    const uint FSCTL_SET_COMPRESSION = 0x9C040;\n    const byte COMPRESSION_FORMAT_DEFAULT = 1;\n\n    public static void CompressDirectory(string path)\n    {\n        if (!Directory.Exists(path))\n            throw new DirectoryNotFoundException("The directory does not exist.");\n\n        using (FileStream fs = new FileStream(\n            Path.Combine(path, @"somefile.txt"), FileMode.OpenOrCreate,\n            FileAccess.Write, FileShare.None, 8, true))\n        {\n            uint(bytesReturned);\n            IntPtr pInBuffer = Marshal.AllocHGlobal(1);\n            Marshal.WriteByte(pInBuffer, COMPRESSION_FORMAT_DEFAULT);\n\n            bool success = DeviceIoControl(\n                fs.SafeFileHandle.DangerousGetHandle(), FSCTL_SET_COMPRESSION,\n                pInBuffer, 1, IntPtr.Zero, 0, out bytesReturned, ref new System.Threading.NativeOverlapped());\n\n            if (!success)\n                throw new IOException("Failed to compress the directory.", Marshal.GetLastWin32Error());\n\n            Marshal.FreeHGlobal(pInBuffer);\n        }\n    }\n\n    public static void Main(string[] args)\n    {\n        try\n        {\n            CompressDirectory(@"C:\Path\To\Your\Folder");\n            Console.WriteLine("The folder has been compressed successfully.");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n    }\n}