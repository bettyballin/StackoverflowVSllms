List<List<string>> lists = new List<List<string>>\n{\n    new List<string> { "A1", "A2", "A3" },\n    new List<string> { "B1", "B2" },\n    new List<string> { "C1", "C2", "C3", "C4", "C5" }\n};\n\nList<string> combined = new List<string>();\nQueue<int> indices = new Queue<int>();\n\n// Initialize the queue with indices for each list\nfor (int i = 0; i < lists.Count; i++)\n{\n    if (lists[i].Count > 0)\n    {\n        indices.Enqueue(i);\n    }\n}\n\nwhile (indices.Count > 0)\n{\n    int listIndex = indices.Dequeue();\n    combined.Add(lists[listIndex][0]);\n    lists[listIndex].RemoveAt(0);\n\n    // If the list still has elements, enqueue it again\n    if (lists[listIndex].Count > 0)\n    {\n        indices.Enqueue(listIndex);\n    }\n}\n\n// `combined` now contains the items in a balanced order