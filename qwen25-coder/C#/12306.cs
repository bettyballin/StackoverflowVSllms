using System;\nusing System.IO;\n\nclass Program\n{\n    static void Main()\n    {\n        FileSystemWatcher watcher = new FileSystemWatcher();\n        watcher.Path = @"\\path\to\your\share";\n        watcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite\n           | NotifyFilters.FileName | NotifyFilters.DirectoryName;\n        watcher.Created += OnChanged;\n        watcher.Deleted += OnChanged;\n        watcher.Renamed += OnRenamed;\n\n        watcher.EnableRaisingEvents = true;\n\n        Console.WriteLine("Press 'q' to quit the sample.");\n        while (Console.Read() != 'q') ;\n    }\n\n    private static void OnChanged(object source, FileSystemEventArgs e)\n    {\n        // Log details including user information using System.Diagnostics.Process or WMI\n        var username = Environment.UserName;\n        Console.WriteLine($"File: {e.FullPath} Event: {e.ChangeType} User: {username}");\n        SendEmail(e.FullPath, e.ChangeType.ToString(), username);\n    }\n\n    private static void OnRenamed(object source, RenamedEventArgs e)\n    {\n        // Log details including user information using System.Diagnostics.Process or WMI\n        var username = Environment.UserName;\n        Console.WriteLine($"File: {e.OldFullPath} renamed to {e.FullPath}");\n        SendEmail(e.OldFullPath + " renamed to " + e.FullPath, "Renamed", username);\n    }\n\n    private static void SendEmail(string filePath, string changeType, string user)\n    {\n        // Email sending logic here\n    }\n}