using System;\nusing unoidl.uno;\nusing unoidl.com.sun.star.bridge;\nusing unoidl.com.sun.star.uno;\nusing unoidl.com.sun.star.lang;\nusing unoidl.com.sun.star.frame;\nusing unoidl.com.sun.star.beans;\n\npublic class MailMerge {\n    XComponentContext xContext;\n    XMultiServiceFactory xMSF;\n    XModel xDoc;\n\n    public void ConnectToLibreOffice() {\n        XComponentLoader xCompLoader = null;\n        \n        // Get the service manager from LibreOffice\n        xContext = uno.util.Bootstrap.bootstrap();\n        xMSF = (XMultiServiceFactory)xContext.getServiceManager();\n\n        // Connect to LibreOffice\n        object desktop = xMSF.createInstance("com.sun.star.frame.Desktop");\n        XComponentLoader compLoader = (XComponentLoader)UnoRuntime.queryInterface(typeof(XComponentLoader), desktop);\n        \n        if (compLoader != null) {\n            Console.WriteLine("Connected to LibreOffice.");\n            xCompLoader = compLoader;\n            \n            // Load the template document\n            URL url = new URL();\n            url.Complete = "file:///path/to/your/template.odt";\n            \n            XComponent xDocComponent = xCompLoader.loadComponentFromURL(\n                url.Complete,\n                "_blank",\n                0,\n                new PropertyValue[0]);\n            \n            xDoc = (XModel)UnoRuntime.queryInterface(typeof(XModel), xDocComponent);\n        } else {\n            Console.WriteLine("Failed to load LibreOffice.");\n        }\n    }\n\n    public void PerformMailMerge() {\n        XController xCtrl = xDoc.getCurrentController();\n        XFrame xActiveFrame = xCtrl.getFrame();\n\n        // Prepare the dispatch helper\n        object dispatcherObject = xMSF.createInstance("com.sun.star.frame.DispatchHelper");\n        XDispatchHelper xDispatcherHelper = (XDispatchHelper)UnoRuntime.queryInterface(typeof(XDispatchHelper), dispatcherObject);\n\n        // Set the mail merge template and data source paths\n        url DocumentUrl = new URL();\n        DocumentUrl.Complete = "file:///path/to/your/template.odt";\n\n        url DataSourceUrl = new URL();\n        DataSourceUrl.Complete = "file:///path/to/your/data.csv";\n\n        XDispatch xDispatcher = UnoRuntime.queryInterface(typeof(XDispatch), xCtrl.getFrame().getController().getFrame().getQueryDispatch(DocumentUrl, "_self", 0));\n\n        if (xDispatcher == null) {\n            Console.WriteLine("Failed to get dispatcher.");\n            return;\n        }\n\n        PropertyValue[] args1 = new PropertyValue[2];\n        args1[0] = createNamedPropertyValue("TemplateDocumentURL", DocumentUrl.Complete);\n        args1[1] = createNamedPropertyValue("DataSourceName", "myDSN");\n        xDispatcherHelper.executeDispatch(xDispatcher, ".uno:OpenDataSourceWizard", "", 0, args1);\n\n        // Perform the mail merge\n        PropertyValue[] args2 = new PropertyValue[0];\n        xDispatcherHelper.executeDispatch(xDispatcher, ".uno:CreateMergeDoc", "", 0, args2);\n    }\n\n    private static PropertyValue createNamedPropertyValue(string name, object value) {\n        return new PropertyValue { Name = name, Value = value };\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        MailMerge mailMerge = new MailMerge();\n        mailMerge.ConnectToLibreOffice();\n        mailMerge.PerformMailMerge();\n    }\n}