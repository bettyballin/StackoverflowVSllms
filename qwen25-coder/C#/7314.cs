public class FormUrlEncodedFormatter : WebMessageFormatter\n{\n    private readonly WebContentFormat _messageFormat;\n\n    public FormUrlEncodedFormatter(WebContentFormat messageFormat)\n    {\n        _messageFormat = messageFormat;\n    }\n\n    public override Message ReadMessage(System.IO.Stream stream, int maxSizeOfHeaders, string contentType)\n    {\n        var reader = new StreamReader(stream);\n        var queryParams = HttpUtility.ParseQueryString(reader.ReadToEnd());\n        var parameters = queryParams.AllKeys.ToDictionary(key => key, queryParams.Get);\n\n        // Assuming you have a known set of parameters\n        var query = parameters.ContainsKey("query") ? parameters["query"] : string.Empty;\n        var paramArray = new List<string>();\n\n        if (parameters.ContainsKey("params"))\n            paramArray.AddRange(parameters["params"].Split(','));\n\n        // Create a custom message with the parsed data\n        var bodyWriter = new JsonBodyWriter(query, paramArray.ToArray());\n\n        return Message.CreateMessage(MessageVersion.Default, "", bodyWriter);\n    }\n\n    public override string GetContentType(System.Reflection.MethodInfo methodInfo, System.ServiceModel.OperationDescription operationDescription)\n    {\n        return "application/json";\n    }\n}