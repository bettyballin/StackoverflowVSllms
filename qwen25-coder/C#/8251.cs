using System.IO;\nusing System.IO.Compression;\n\nprivate void writeReportsAsZip(IReport[] reports, string fileName)\n{\n    using (MemoryStream memoryStream = new MemoryStream())\n    {\n        // Create a ZIP archive in the output stream.\n        using (ZipArchive zipArchive = new ZipArchive(memoryStream, ZipArchiveMode.Create))\n        {\n            for (int i = 0; i < reports.Length; i++)\n            {\n                IReport report = reports[i];\n                string reportString = report.makeReport();\n                byte[] encodedReport = System.Text.Encoding.UTF8.GetBytes(reportString);\n\n                // Create a new ZIP archive entry.\n                ZipArchiveEntry zipArchiveEntry = zipArchive.CreateEntry($"report{i + 1}.txt");\n                using (Stream entryStream = zipArchiveEntry.Open())\n                {\n                    entryStream.Write(encodedReport, 0, encodedReport.Length);\n                }\n            }\n        }\n\n        // Set the response headers to indicate a ZIP file download.\n        Response.ContentType = "application/zip";\n        Response.AddHeader("Content-Disposition", "attachment;filename=" + fileName + ".zip");\n\n        // Write the memory stream contents to the HTTP response output stream.\n        memoryStream.Seek(0, SeekOrigin.Begin);\n        byte[] zipBytes = memoryStream.ToArray();\n        Response.OutputStream.Write(zipBytes, 0, zipBytes.Length);\n    }\n    Response.End();\n}