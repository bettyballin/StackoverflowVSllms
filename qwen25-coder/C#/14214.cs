using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Windows.Controls;\n\npublic class UniqueNameRule : ValidationRule {\n    private ICollection<object> _itemsSource;\n    private string _propertyName;\n\n    public UniqueNameRule(ICollection<object> itemsSource, string propertyName) {\n        _itemsSource = itemsSource ?? throw new ArgumentNullException(nameof(itemsSource));\n        _propertyName = propertyName ?? throw new ArgumentNullException(nameof(propertyName));\n    }\n\n    public override ValidationResult Validate(object value, CultureInfo cultureInfo) {\n        if (value is not string name || string.IsNullOrWhiteSpace(name)) {\n            return new ValidationResult(false, "Name cannot be empty.");\n        }\n\n        foreach (var item in _itemsSource) {\n            // Assuming each object has a property named as specified by _propertyName\n            var propertyValue = item.GetType().GetProperty(_propertyName)?.GetValue(item);\n            if (propertyValue is string existingName && existingName.Equals(name, StringComparison.OrdinalIgnoreCase)) {\n                return new ValidationResult(false, "Name must be unique.");\n            }\n        }\n\n        return new ValidationResult(true, null);\n    }\n}