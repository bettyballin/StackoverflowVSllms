using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\npublic class FocusedProcessInfo\n{\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    private static extern IntPtr GetForegroundWindow();\n\n    [DllImport("user32.dll")]\n    private static extern int GetWindowThreadProcessId(IntPtr hWnd, out uint lpdwProcessId);\n\n    public static void Main()\n    {\n        IntPtr hwnd = GetForegroundWindow();\n        if (hwnd == IntPtr.Zero) return;\n\n        uint pid;\n        GetWindowThreadProcessId(hwnd, out pid);\n\n        Process process = null;\n        try\n        {\n            process = Process.GetProcessById((int)pid);\n        }\n        catch (ArgumentException)\n        {\n            Console.WriteLine("No process found with that ID.");\n            return;\n        }\n\n        string processName = process.ProcessName;\n        FileVersionInfo versionInfo = FileVersionInfo.GetVersionInfo(process.MainModule.FileName);\n        string version = versionInfo.ProductVersion;\n\n        Console.WriteLine($"Focused Process Name: {processName}");\n        Console.WriteLine($"Process Version: {version}");\n    }\n}