using System;\nusing Microsoft.Office.Interop.Excel;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    static void Main()\n    {\n        Application excelApp = null;\n        Workbook workbook = null;\n        Worksheet worksheet = null;\n\n        try\n        {\n            // Start Excel and get Application object.\n            excelApp = new Application();\n            \n            // Make the application visible if you want to see it.\n            excelApp.Visible = false; \n            \n            // Add a new workbook.\n            workbook = excelApp.Workbooks.Add(System.Reflection.Missing.Value);\n            \n            // Get the active worksheet\n            worksheet = (Worksheet)workbook.Sheets[1];\n            \n            // Write data to cell A1\n            Range rangeA1 = worksheet.GetRange("A1", "A1");\n            rangeA1.Value2 = "Hello";\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("Error: " + ex.Message);\n        }\n        finally\n        {\n            // Cleanup and release COM objects\n            if(worksheet != null)\n            {\n                Marshal.ReleaseComObject(worksheet);\n                worksheet = null;\n            }\n\n            if(workbook != null)\n            {\n                workbook.Close(false, System.Reflection.Missing.Value, \n                               System.Reflection.Missing.Value);\n                Marshal.ReleaseComObject(workbook);\n                workbook = null;\n            }\n\n            if(excelApp != null)\n            {\n                excelApp.Quit();\n                Marshal.ReleaseComObject(excelApp);\n                excelApp = null;\n            }\n            \n            // Force a garbage collection and wait for all objects to be released\n            GC.Collect();\n            GC.WaitForPendingFinalizers();\n\n        }\n    }\n}