public class Global_asax : System.Web.HttpApplication\n{\n    // Static object for synchronization\n    private static readonly Object thisLock = new Object();\n\n    void Session_Start(object sender, EventArgs e)\n    {\n        // Code that runs when a new session is started\n\n        lock (thisLock)\n        {\n            if (HttpContext.Current.Application["ActiveSessions"] == null)\n                HttpContext.Current.Application["ActiveSessions"] = 1;\n            else\n                HttpContext.Current.Application["ActiveSessions"] =\n                    (int)HttpContext.Current.Application["ActiveSessions"] + 1;\n\n            // Store client IP or other info in session\n            var ipAddress = HttpContext.Current.Request.UserHostAddress;\n            Session["IpAddress"] = ipAddress; // Example additional data\n        }\n    }\n\n    void Session_End(object sender, EventArgs e)\n    {\n        // Code that runs when a session ends\n\n        lock (thisLock)\n        {\n            if (HttpContext.Current.Application["ActiveSessions"] != null)\n                HttpContext.Current.Application["ActiveSessions"] =\n                    (int)HttpContext.Current.Application["ActiveSessions"] - 1;\n        }\n    }\n\n    public static int GetActiveSessionCount()\n    {\n        return Convert.ToInt32(Application["ActiveSessions"] ?? 0);\n    }\n}\n\npublic class AdminController : Controller\n{\n    public ActionResult ViewActiveSessions()\n    {\n        // Display number of active sessions\n        var sessionCount = Global_asax.GetActiveSessionCount();\n\n        // Optionally, retrieve session data details (note: access to other sessions might require enumeration and handling)\n        List<string> activeSessionsInfo = new List<string>();\n\n        // Iterate through cache or SessionStateModule to gather additional session information securely.\n        for (int i = 0; i < HttpRuntime.Cache.Count; i++)\n        {\n            var cacheKey = HttpRuntime.Cache.GetCacheData(i).CacheEntry.Key;\n            if (cacheKey.Contains("SessionData"))\n            {\n                // Collect required info safely\n                // Note: Accessing other user sessions directly might breach security policies and best practices.\n            }\n        }\n\n        ViewBag.SessionCount = sessionCount;\n        ViewBag.SessionsInfo = activeSessionsInfo;\n\n        return View();\n    }\n}