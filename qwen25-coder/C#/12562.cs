using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryption\n{\n    public static string EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV)\n    {\n        // Check arguments.\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException("plainText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        byte[] encrypted;\n\n        // Create an Aes object with the specified key and IV.\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create the streams used for encryption.\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        //Write all data to the stream.\n                        swEncrypt.Write(plainText);\n                    }\n                    encrypted = msEncrypt.ToArray();\n                }\n            }\n        }\n\n        // Return the encrypted bytes from the memory stream.\n        return Convert.ToBase64String(encrypted);\n    }\n}