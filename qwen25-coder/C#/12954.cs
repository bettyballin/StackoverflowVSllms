using System;\nusing System.Net.Http;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Threading.Tasks;\n\npublic class Program\n{\n    private static bool CustomCertificateValidationCallback(HttpRequestMessage request, X509Certificate2 certificate, X509Chain chain, SslPolicyErrors sslErrors)\n    {\n        // Implement your logic here to decide if you want to accept the certificate on a per-request basis.\n        // For example, you can inspect the `request` object and make decisions based on its properties.\n\n        // Returning true ignores all SSL certificate errors (not recommended for production).\n        // Replace this with appropriate validation logic as needed.\n        Console.WriteLine("CustomCertificateValidationCallback called.");\n        return true;\n    }\n\n    public static async Task Main(string[] args)\n    {\n        using (var handler = new HttpClientHandler())\n        {\n            handler.ServerCertificateCustomValidationCallback = CustomCertificateValidationCallback;\n\n            using (var client = new HttpClient(handler))\n            {\n                var response = await client.GetAsync("https://example.com");\n                Console.WriteLine($"Response: {response.StatusCode}");\n            }\n        }\n    }\n}