using System;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("winmm.dll", CharSet = CharSet.Auto)]\n    private static extern uint waveInGetNumDevs();\n\n    [DllImport("winmm.dll", CharSet = CharSet.Auto)]\n    private static extern int mixerOpen(out _IntPtr lpmxobj, int uMidiId, IntPtr dwCallback, IntPtr dwInstance, int fdwOpen);\n\n    [DllImport("winmm.dll", CharSet = CharSet.Auto)]\n    private static extern int mixerGetLineInfo(_IntPtr pmxobj, ref MIXERLINE lpmlin, int fdwInfo);\n\n    [DllImport("winmm.dll", CharSet = CharSet.Auto)]\n    private static extern int mixerSetControlDetails(_IntPtr hmxobj, ref MIXERCONTROLDETAILS pcd, int fdwDetails);\n\n    private const int MIXER_OBJECTF_HANDLE = 0x40000000;\n    private const int MIXER_GETLINEINFOF_COMPONENTTYPE = 3;\n    private const int MIXER_GETCONTROLDETAILSF_QUERYMASK = 7;\n    private const int MIXER_SETCONTROLDETAILSF_VALUE = 1;\n\n    [StructLayout(LayoutKind.Sequential)]\n    private struct MIXERLINE\n    {\n        public uint cbStruct;\n        public uint dwDestination;\n        public uint dwSource;\n        public uint dwLineID;\n        public uint fdwLine;\n        public uint dwUser;\n        public uint dwComponentType;\n        public uint cChannels;\n        public uint cConnections;\n        public uint cControls;\n        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]\n        public uint[] szShortName;\n        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 256)]\n        public char[] szName;\n        public IntPtr dwType;\n        public IntPtr dwDeviceID;\n        public IntPtr wMid;\n        public IntPtr wPid;\n        public uint vDriverVersion;\n        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 32)]\n        public char[] szPname;\n    }\n\n    private struct _IntPtr\n    {\n        public IntPtr i;\n    }\n\n    static void Main(string[] args)\n    {\n        CheckHeadphones();\n    }\n\n    static void CheckHeadphones()\n    {\n        MIXERLINE mixerLine = new MIXERLINE\n        {\n            cbStruct = (uint)Marshal.SizeOf(typeof(MIXERLINE)),\n            dwComponentType = 0x80000000 // COMPONENTTYPE_DST_SPEAKERS\n        };\n\n        _IntPtr MixerHandle;\n        int result = mixerOpen(out MixerHandle, 0, IntPtr.Zero, IntPtr.Zero, 0);\n        if (result == 0)\n        {\n            MIXERCONTROLDETAILS details = new MIXERCONTROLDETAILS();\n            details.cbStruct = (uint)Marshal.SizeOf(details);\n\n            mixerGetLineInfo(MixerHandle.i, ref mixerLine, MIXER_GETLINEINFOF_COMPONENTTYPE);\n            \n            Console.WriteLine("Headphones status not directly detected by this method. Consider using Windows API events or Audio endpoint volume control.");\n        }\n    } \n}