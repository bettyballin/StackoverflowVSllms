using System;\nusing System.Web.Mvc;\n\n[AttributeUsage(AttributeTargets.Method)]\npublic class RestrictedAttribute : ActionFilterAttribute\n{\n    private readonly string requiredRole;\n\n    public RestrictedAttribute(string requiredRole)\n    {\n        this.requiredRole = requiredRole;\n    }\n\n    public override void OnActionExecuting(ActionExecutingContext filterContext)\n    {\n        var user = filterContext.HttpContext.User;\n        if (user == null || !user.IsInRole(requiredRole))\n        {\n            throw new System.Security.Authentication.AuthenticationException("Access denied. You are not in the required role.");\n        }\n        base.OnActionExecuting(filterContext);\n    }\n\n    public override string ToString()\n    {\n        return "Access needs to be granted";\n    }\n}\n\n// Usage in a controller\npublic class TestController : Controller\n{\n    [Restricted("RegisteredMember")]\n    public ActionResult DoSomething()\n    {\n        // This code can only be executed if the logged-in user is a member of the RegisteredMember group\n        return View();\n    }\n}