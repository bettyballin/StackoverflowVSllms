static void OverwriteTable(DataTable sourceTable, string tableName)\n     {\n         using (var destConn = new OleDbConnection(connectionstringA))\n         using (var destCmd = new OleDbCommand(tableName, destConn) { CommandType = CommandType.TableDirect })\n         using (var destDA = new OleDbDataAdapter(destCmd))\n         {\n             // Define manual delete command\n             destDA.DeleteCommand = new OleDbCommand($"DELETE FROM [{tableName}] WHERE [UniqueColumnName] = ?", destConn);\n             destDA.DeleteCommand.Parameters.Add(new OleDbParameter("UniqueColumnName", OleDbType.VarChar, 255));\n\n             // Define manual insert command\n             var columns = string.Join(", ", sourceTable.Columns.Cast<DataColumn>().Select(c => c.ColumnName));\n             var parameters = string.Join(", ", sourceTable.Columns.Cast<DataColumn>().Select((c, i) => $"?{i + 1}"));\n             destDA.InsertCommand = new OleDbCommand($"INSERT INTO [{tableName}] ({columns}) VALUES ({parameters})", destConn);\n             for (int i = 0; i < sourceTable.Columns.Count; i++)\n             {\n                 destDA.InsertCommand.Parameters.Add(new OleDbParameter($"?{i + 1}", OleDbType.VarChar, 255));\n             }\n\n             // Get rows from destination, and delete them\n             var destTable = new DataTable();\n             destDA.Fill(destTable);\n             foreach (DataRow dr in destTable.Rows)\n             {\n                 dr.Delete();\n             }\n             destDA.Update(destTable); // Execute the manual delete command\n\n             // Set rows from source as Added, so the DataAdapter will insert them\n             foreach (DataRow dr in sourceTable.Rows)\n             {\n                 dr.SetAdded();\n             }\n             destDA.Update(sourceTable); // Execute the manual insert command\n         }\n     }