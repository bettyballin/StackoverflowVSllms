public class OperationResult\n{\n    public bool Success { get; set; }\n    public string ErrorMessage { get; set; }\n\n    public static OperationResult Error(string errorMessage)\n    {\n        return new OperationResult() { Success = false, ErrorMessage = errorMessage };\n    }\n\n    public static OperationResult SuccessResult()\n    {\n        return new OperationResult() { Success = true, ErrorMessage = null };\n    }\n}\n\npublic class MyService\n{\n    public OperationResult SomeComplexMethod()\n    {\n        try\n        {\n            // Call complex functionality from class library\n            DoComplexFunctionality();\n            return OperationResult.SuccessResult();\n        }\n        catch (Exception ex)\n        {\n            // Log exception details properly in production\n            return OperationResult.Error("An unexpected error occurred.");\n        }\n    }\n\n    private void DoComplexFunctionality()\n    {\n        // Placeholder for complex functionality\n        throw new Exception("Simulated exception");\n    }\n}