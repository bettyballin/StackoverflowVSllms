using System;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\nclass GlobalHotkeyExample : Form {\n    private const int HOTKEY_ID = 9001; // unique identifier for this application\n\n    [DllImport("user32.dll")]\n    private static extern bool RegisterHotKey(IntPtr hWnd, int id, uint fsModifiers, uint vk);\n\n    [DllImport("user32.dll")]\n    private static extern bool UnregisterHotKey(IntPtr hWnd, int id);\n\n    protected override void OnLoad(EventArgs e) {\n        base.OnLoad(e);\n        // modifiers: MOD_CONTROL = 0x0002, MOD_SHIFT = 0x0004, MOD_ALT = 0x0001, MOD_WIN = 0x0008\n        const uint MOD_SHIFT = 0x0004;\n        const uint VK_T = 0x54; // virtual key code for 'T'\n\n        // Register Ctrl+Shift+T as hotkey\n        if (!RegisterHotKey(this.Handle, HOTKEY_ID, MOD_SHIFT | MOD_CONTROL, VK_T)) {\n            MessageBox.Show("Could not register the hotkey.");\n        }\n    }\n\n    protected override void OnFormClosing(FormClosingEventArgs e) {\n        base.OnFormClosing(e);\n        UnregisterHotKey(this.Handle, HOTKEY_ID);\n    }\n\n    protected override void WndProc(ref Message m) {\n        const int WM_HOTKEY = 0x0312;\n        if (m.Msg == WM_HOTKEY && m.WParam.ToInt32() == HOTKEY_ID) {\n            // Trigger your action here\n            MessageBox.Show("Hotkey was pressed!");\n        }\n        base.WndProc(ref m);\n    }\n    \n    [STAThread]\n    static void Main() {\n        Application.Run(new GlobalHotkeyExample());\n    }\n}