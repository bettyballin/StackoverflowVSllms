using System;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\n\npublic class IsoTextMessageEncodingBindingElement : TextMessageEncodingBindingElement\n{\n    public override MessageEncoderFactory CreateMessageEncoderFactory()\n    {\n        return new IsoTextMessageEncoderFactory(this, this.MessageVersion);\n    }\n}\n\npublic class IsoTextMessageEncoderFactory : MessageEncoderFactory\n{\n    private readonly MessageVersion _version;\n    private readonly IsoTextMessageEncoder _encoder;\n\n    public IsoTextMessageEncoderFactory(IsoTextMessageEncodingBindingElement bindingElement, MessageVersion version)\n    {\n        _version = version;\n        _encoder = new IsoTextMessageEncoder(bindingElement, this);\n    }\n\n    public override MessageEncoder Encoder\n    {\n        get { return _encoder; }\n    }\n\n    public override MessageVersion MessageVersion\n    {\n        get { return _version; }\n    }\n}\n\npublic class IsoTextMessageEncoder : TextMessageEncoder\n{\n    private readonly IsoTextMessageEncodingBindingElement _bindingElement;\n\n    public IsoTextMessageEncoder(IsoTextMessageEncodingBindingElement bindingElement, IsoTextMessageEncoderFactory factory)\n        : base(bindingElement, factory)\n    {\n        _bindingElement = bindingElement;\n    }\n\n    protected override bool IsCharSetNullAllowed()\n    {\n        return true;\n    }\n}