using System;\nusing System.IO;\nusing System.Net;\nusing Newtonsoft.Json;\n\npublic class JsonRpcRequest\n{\n    public string method { get; set; }\n    public object[] @params { get; set; }\n    public int id { get; set; } = 1;\n}\n\npublic class JsonRpcResponse\n{\n    public object result { get; set; }\n    public object error { get; set; }\n    public int id { get; set; }\n}\n\nclass JsonRpcClient\n{\n    private readonly string _serverUrl;\n\n    public JsonRpcClient(string serverUrl)\n    {\n        _serverUrl = serverUrl;\n    }\n\n    public T Execute<T>(string method, params object[] parameters)\n    {\n        var requestObject = new JsonRpcRequest { method = method, @params = parameters };\n        var requestBody = JsonConvert.SerializeObject(requestObject);\n\n        // Create and configure web request\n        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(_serverUrl);\n        request.Method = "POST";\n        request.ContentType = "application/json-rpc";\n\n        using (StreamWriter writer = new StreamWriter(request.GetRequestStream()))\n        {\n            writer.Write(requestBody);\n        }\n\n        // Get the response\n        WebResponse response;\n        try\n        {\n            response = request.GetResponse();\n        }\n        catch (WebException ex)\n        {\n            var errorResponse = ex.Response as HttpWebResponse;\n            if (errorResponse != null)\n                using (var reader = new StreamReader(errorResponse.GetResponseStream()))\n                    return JsonConvert.DeserializeObject<T>(reader.ReadToEnd());\n            throw;\n        }\n\n        // Deserialize and return the response\n        using (StreamReader reader = new StreamReader(response.GetResponseStream()))\n        {\n            var responseText = reader.ReadToEnd();\n            var jsonResponse = JsonConvert.DeserializeObject<JsonRpcResponse>(responseText);\n            if (jsonResponse.error != null)\n                throw new Exception($"JSON-RPC error: {jsonResponse.error}");\n            return (T)Convert.ChangeType(jsonResponse.result, typeof(T));\n        }\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var rpcClient = new JsonRpcClient("http://example.com/jsonrpc");\n        try\n        {\n            int result = rpcClient.Execute<int>("subtract", 42, 23);\n            Console.WriteLine("Result: " + result);  // Expected output: 19\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n    }\n}