using System;\nusing System.Net.Mail;\nusing System.Threading.Tasks;\n\npublic class ServerMonitoringService\n{\n    private static readonly string[] IISServers = { "http://server1", "http://server2", "http://server3", "http://server4" };\n    private static readonly (string, int)[] SqlServers = { ("sqlserver1", 1433), ("sqlserver2", 1433) };\n\n    public async Task MonitorServers()\n    {\n        var iiisServerChecker = new ServerStatusChecker();\n        var sqlServerChecker = new SqlServerStatusChecker();\n\n        while (true)\n        {\n            foreach (var server in IISServers)\n            {\n                bool isUp = await iiisServerChecker.IsIISServerUp(server);\n                if (!isUp) SendAlertEmail($"IIS on {server} is down!");\n            }\n\n            foreach (var sqlServer in SqlServers)\n            {\n                bool isUp = sqlServerChecker.IsSqlServerUp(sqlServer.Item1, sqlServer.Item2);\n                if (!isUp) SendAlertEmail($"SQL Server on {sqlServer.Item1}:{sqlServer.Item2} is down!");\n            }\n\n            await Task.Delay(300000); // 5 minutes\n        }\n    }\n\n    private void SendAlertEmail(string message)\n    {\n        using (var client = new SmtpClient("smtp.yourdomain.com"))\n        {\n            var mailMessage = new MailMessage();\n            mailMessage.From = new MailAddress("monitor@yourdomain.com");\n            mailMessage.To.Add(new MailAddress("networkmanager@yourdomain.com"));\n            mailMessage.Subject = "Server Alert!";\n            mailMessage.Body = message;\n\n            client.Send(mailMessage);\n        }\n    }\n}