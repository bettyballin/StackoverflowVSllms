using System;\nusing NUnit.Framework.Constraints;\n\npublic class WithinRangeConstraint : Constraint\n{\n    private readonly int lowerBound;\n    private readonly int upperBound;\n\n    public WithinRangeConstraint(int lowerBound, int upperBound)\n    {\n        this.lowerBound = lowerBound;\n        this.upperBound = upperBound;\n    }\n\n    public override bool Matches(object actual)\n    {\n        if (actual is not int actualValue)\n            throw new ArgumentException("Actual value must be an integer.");\n\n        return actualValue >= lowerBound && actualValue <= upperBound;\n    }\n\n    public override void WriteDescriptionTo(MessageWriter writer)\n    {\n        // Describe what the constraint checks for\n        writer.WritePredicate("value within range of ");\n        writer.WriteRange(lowerBound, upperBound);\n    }\n\n    public override void WriteActualValueTo(MessageWriter writer)\n    {\n        // Optionally format and write out the actual value\n        writer.WriteObject(ActualValue);\n    }\n\n    public override void WriteMessageTo(MessageWriter writer)\n    {\n        // Custom error message explanation\n        base.WriteMessageTo(writer); // You can choose to include this or not\n        writer.WriteLine(" Expected actual value to be within specified range.");\n    }\n}