using System;\nusing System.ComponentModel;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic partial class ZoomPictureBox : PictureBox\n{\n    private BackgroundWorker _backgroundWorker;\n    private Bitmap _scaledImage;\n\n    public ZoomPictureBox()\n    {\n        InitializeComponent();\n        InitializeBackgroundWorker();\n    }\n\n    private void InitializeBackgroundWorker()\n    {\n        _backgroundWorker = new BackgroundWorker();\n        _backgroundWorker.DoWork += _backgroundWorker_DoWork;\n        _backgroundWorker.RunWorkerCompleted += _backgroundWorker_RunWorkerCompleted;\n    }\n\n    private void ScaleImageAsync(Bitmap original, Size newSize)\n    {\n        if (_backgroundWorker.IsBusy)\n            return;\n\n        _backgroundWorker.RunWorkerAsync(new object[] { original, newSize });\n    }\n\n    private void _backgroundWorker_DoWork(object sender, DoWorkEventArgs e)\n    {\n        var parameters = (object[])e.Argument;\n        Bitmap original = (Bitmap)parameters[0];\n        Size newSize = (Size)parameters[1];\n\n        // Scale the image here\n        e.Result = new Bitmap(original, newSize);\n    }\n\n    private void _backgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        if (e.Error != null)\n            MessageBox.Show("An error occurred: " + e.Error.Message);\n        else if (!_backgroundWorker.CancellationPending)\n        {\n            _scaledImage = (Bitmap)e.Result;\n            this.Image = _scaledImage; // Update the picture box on the main thread\n        }\n    }\n\n    private void ZoomPictureBox_SizeChanged(object sender, EventArgs e)\n    {\n        ScaleImageAsync((Bitmap)this.Image, new Size(this.Width, this.Height));\n    }\n}