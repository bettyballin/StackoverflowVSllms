// CustomCertificateValidator.cs\nusing System;\nusing System.IdentityModel.Selectors;\nusing System.Security.Cryptography.X509Certificates;\n\npublic class CustomCertificateValidator : X509CertificateValidator\n{\n    protected override void Validate(X509Certificate2 certificate)\n    {\n        // Implement your validation logic here.\n        if (certificate == null || !CheckChainTrust(certificate))\n        {\n            throw new SecurityTokenValidationException("Custom Certificate Validation Failed");\n        }\n    }\n\n    private bool CheckChainTrust(X509Certificate2 certificate)\n    {\n        try\n        {\n            X509Store store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);\n            store.Open(OpenFlags.ReadOnly);\n\n            X509Chain chain = new X509Chain();\n            chain.ChainPolicy.TrustMode = X509ChainTrustMode.CustomRootTrust;\n            foreach (X509Certificate2 trustedCert in store.Certificates)\n                chain.ChainPolicy.CustomTrustStore.Add(trustedCert);\n            bool isValid = chain.Build(certificate);\n\n            store.Close();\n\n            return isValid;\n        }\n        catch\n        {\n            return false;\n        }\n    }\n}