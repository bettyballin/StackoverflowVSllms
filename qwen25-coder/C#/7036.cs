using System;\nusing System.IO;\nusing System.Web.SessionState;\n\npublic class ImageCleanupService\n{\n    private Timer _timer;\n    private readonly TimeSpan _cleanupInterval = TimeSpan.FromHours(1); // Cleanup every hour\n\n    public void Start()\n    {\n        _timer = new Timer(Cleanup, null, TimeSpan.Zero, _cleanupInterval);\n    }\n\n    private void Cleanup(object state)\n    {\n        var imageDirectory = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "images");\n        if (!Directory.Exists(imageDirectory)) return;\n\n        var filesToDelete = Directory.GetFiles(imageDirectory);\n\n        foreach (var file in filesToDelete)\n        {\n            try\n            {\n                string sessionId = GetSessionIdFromFileName(file);\n                if (string.IsNullOrEmpty(sessionId) || !IsSessionActive(sessionId))\n                {\n                    File.Delete(file);\n                }\n            }\n            catch (Exception ex)\n            {\n                // Log the error or handle accordingly\n                Console.WriteLine($"Error deleting file {file}: {ex.Message}");\n            }\n        }\n    }\n\n    private string GetSessionIdFromFileName(string filePath)\n    {\n        var fileName = Path.GetFileNameWithoutExtension(filePath);\n        return fileName; // Assuming the filename is the session ID\n    }\n\n    private bool IsSessionActive(string sessionId)\n    {\n        var sessions = SessionStateModule.GetStore(null, null).GetEnumerator();\n        while (sessions.MoveNext())\n        {\n            if (sessions.Key == sessionId)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n}