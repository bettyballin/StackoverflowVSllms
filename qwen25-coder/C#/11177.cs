using System;\nusing System.IO;\nusing System.Net.Sockets;\nusing System.Threading.Tasks;\n\npublic class SafeStreamReader\n{\n    private readonly StreamReader _reader;\n    private readonly int _maxLineLength;\n\n    public SafeStreamReader(StreamReader reader, int maxLineLength)\n    {\n        _reader = reader ?? throw new ArgumentNullException(nameof(reader));\n        _maxLineLength = maxLineLength < 1 ? throw new ArgumentOutOfRangeException(nameof(maxLineLength), "Maximum line length must be at least 1.") : maxLineLength;\n    }\n\n    public async Task<string> ReadLineAsync()\n    {\n        using var sb = new ValueStringBuilder(stackalloc char[_maxLineLength]);\n        while (await _reader.Peek() != -1 && sb.Length < _maxLineLength)\n        {\n            var c = await _reader.ReadAsync();\n            if (c == '\n')\n                break;\n\n            if (c != '\r') // Skip \r characters\n                sb.Append((char)c);\n        }\n\n        return sb.ToString();\n    }\n}\n\n// Usage\npublic async Task ProcessClient(TcpClient clientSocket)\n{\n    using var ns = clientSocket.GetStream();\n    using var sr = new StreamReader(ns);\n    using var safeReader = new SafeStreamReader(sr, 4096); // Max line length of 4096 characters\n\n    string request = await safeReader.ReadLineAsync();\n    // Process the request\n}