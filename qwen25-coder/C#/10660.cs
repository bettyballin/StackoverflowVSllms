class Program\n{\n    static void Main(string[] args)\n    {\n        // Initialize datasets with some sample data (this part is usually done elsewhere)\n        DataSet datasetA = new DataSet();\n        DataSet datasetB = new DataSet();\n\n        DataTable tableInA = CreateSampleDataTable("Table1");\n        datasetA.Tables.Add(tableInA);\n\n        DataTable tableInB = CreateSampleDataTable("Table1"); // Initialize with same structure\n        datasetB.Tables.Add(tableInB);\n\n        // Copy data from Table1 in datasetA to Table1 in datasetB\n        DatabaseHandling.OverwriteTable(datasetA.Tables["Table1"], "Table1");\n\n        // Optionally, check the result\n        PrintDataTable(datasetB.Tables["Table1"]);\n    }\n\n    static DataTable CreateSampleDataTable(string tableName)\n    {\n        DataTable dataTable = new DataTable(tableName);\n        dataTable.Columns.Add("ID", typeof(int));\n        dataTable.Columns.Add("Name", typeof(string));\n\n        dataTable.Rows.Add(1, "Alice");\n        dataTable.Rows.Add(2, "Bob");\n\n        return dataTable;\n    }\n\n    static void PrintDataTable(DataTable table)\n    {\n        foreach (DataRow row in table.Rows)\n        {\n            Console.WriteLine($"ID: {row["ID"]}, Name: {row["Name"]}");\n        }\n    }\n}\n\n// Assuming the DatabaseHandling class methods are defined as provided\npublic static class DatabaseHandling\n{\n    // ... (methods here, same as your provided code)\n\n    static void OverwriteTable(DataTable sourceTable, string tableName)\n    {\n        using (var destConn = new OleDbConnection(connectionstringA))\n        using (var destCmd = new OleDbCommand(tableName, destConn) { CommandType = CommandType.TableDirect })\n        using (var destDA = new OleDbDataAdapter(destCmd))\n        {\n            // Since we're using a single table, we can have the CommandBuilder\n            // generate the appropriate INSERT and DELETE SQL statements\n            using (var destCmdB = new OleDbCommandBuilder(destDA))\n            {\n                destCmdB.QuotePrefix = "[";\n                destCmdB.QuoteSuffix = "]";\n                destDA.DeleteCommand = destCmdB.GetDeleteCommand();\n                destDA.InsertCommand = destCmdB.GetInsertCommand();\n\n                // Get rows from destination, and delete them\n                var destTable = new DataTable();\n                destDA.Fill(destTable);\n                foreach (DataRow dr in destTable.Rows)\n                {\n                    dr.Delete();\n                }\n\n                destDA.Update(destTable);\n\n                // Set rows from source as Added, so the DataAdapter will insert them\n                foreach (DataRow dr in sourceTable.Rows)\n                {\n                    dr.SetAdded();\n                }\n                destDA.Update(sourceTable);\n            }\n        }\n    }\n}