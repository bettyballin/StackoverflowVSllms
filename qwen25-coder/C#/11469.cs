using System;\nusing System.Configuration;\n\nnamespace ConfigEncryptionExample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // Open the configuration file for an existing application at runtime.\n            Configuration config = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\n\n            try\n            {\n                // Get the connectionStrings section.\n                ConnectionStringsSection connStringSection =\n                    (ConnectionStringsSection)config.GetSection("connectionStrings");\n\n                if (!connStringSection.SectionInformation.IsProtected)\n                {\n                    // Protect it using DataProtectionConfigurationProvider, which uses the RSA provider \n                    config.Sections["connectionStrings"].ProtectSection("DataProtectionConfigurationProvider");\n                    Console.WriteLine("Connection string section was encrypted.");\n                }\n                else\n                {\n                    Console.WriteLine("Connection strings are already encrypted!");\n                }\n\n                // Save the configuration file.\n                config.Save(ConfigurationSaveMode.Modified);\n\n                // Force a reload of the changed section. \n                ConfigurationManager.RefreshSection("connectionStrings");\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($"An error occurred: {ex.Message}");\n            }\n        }\n    }\n}