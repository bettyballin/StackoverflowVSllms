public class HtmlString : IEquatable<HtmlString>\n   {\n       private readonly string _html;\n\n       public HtmlString(string html)\n       {\n           if (string.IsNullOrEmpty(html))\n               throw new ArgumentNullException(nameof(html));\n\n           _html = html;\n       }\n\n       public static implicit operator string(HtmlString html) => html._html;\n       public static explicit operator HtmlString(string str) => str == null ? null : new HtmlString(str);\n\n       public bool Equals(HtmlString other)\n       {\n           if (ReferenceEquals(null, other)) return false;\n           if (ReferenceEquals(this, other)) return true;\n\n           return _html == other._html;\n       }\n\n       public override bool Equals(object obj) => Equals(obj as HtmlString);\n       public override int GetHashCode() => (_html != null ? _html.GetHashCode() : 0);\n\n       public static bool operator ==(HtmlString left, HtmlString right) => Equals(left, right);\n       public static bool operator !=(HtmlString left, HtmlString right) => !Equals(left, right);\n\n       public override string ToString() => _html;\n   }