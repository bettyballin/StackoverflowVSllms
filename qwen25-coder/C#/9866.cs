using System;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class EmailValidationService\n{\n    private readonly string _secretKey = "your-very-secret-key"; // Use a strong secret key\n\n    public string GenerateEmailValidationLink(int userId)\n    {\n        string token = Convert.ToBase64String(BitConverter.GetBytes(userId));\n        byte[] hmacBytes = HmacSha256(_secretKey, token);\n        string hmac = Convert.ToBase64String(hmacBytes);\n\n        // Store the userId and hmac association in your database for validation later\n\n        return $"http://www.foo.bar/validation?userId={userId}&token={Uri.EscapeDataString(token)}&hmac={Uri.EscapeDataString(hmac)}";\n    }\n\n    public bool ValidateEmailValidationLink(int userId, string token, string receivedHmac)\n    {\n        byte[] hmacBytes = HmacSha256(_secretKey, token);\n        string expectedHmac = Convert.ToBase64String(hmacBytes);\n\n        // Retrieve stored HMAC and userId from your database\n        // Compare userId from URL with the one in the db\n\n        return CryptographicOperations.FixedTimeEquals(Encoding.UTF8.GetBytes(receivedHmac), Encoding.UTF8.GetBytes(expectedHmac));\n    }\n\n    private byte[] HmacSha256(string secretKey, string value)\n    {\n        using (var hmac = new HMACSHA256(Encoding.UTF8.GetBytes(secretKey)))\n        {\n            return hmac.ComputeHash(Encoding.UTF8.GetBytes(value));\n        }\n    }\n}