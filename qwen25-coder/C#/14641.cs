using System;\nusing Microsoft.Win32;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            // Clear ClickOnce application cache\n            const string subKey = @"Software\Microsoft\Windows\CurrentVersion\Uninstall";\n            using (RegistryKey uninstallKey = Registry.CurrentUser.OpenSubKey(subKey))\n            {\n                if (uninstallKey != null)\n                {\n                    foreach (string keyName in uninstallKey.GetSubKeyNames())\n                    {\n                        using (RegistryKey appKey = uninstallKey.OpenSubKey(keyName, true))\n                        {\n                            object displayName = appKey.GetValue("DisplayName");\n                            if (displayName != null && displayName.ToString().Contains("YourAppName"))\n                            {\n                                // Remove the application entry from Uninstall list\n                                uninstallKey.DeleteSubKeyTree(keyName);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Clear ClickOnce cache directory\n            string clickOnceCachePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + @"\Apps\2.0";\n            System.IO.DirectoryInfo di = new System.IO.DirectoryInfo(clickOnceCachePath);\n\n            foreach (System.IO.FileInfo file in di.GetFiles("*", System.IO.SearchOption.AllDirectories))\n            {\n                try\n                {\n                    file.Delete();\n                }\n                catch { }\n            }\n\n            foreach (System.IO.DirectoryInfo dir in di.GetDirectories())\n            {\n                TryDeleteDir(dir);\n            }\n\n            Console.WriteLine("ClickOnce cache cleanup completed successfully.");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n\n    static void TryDeleteDir(System.IO.DirectoryInfo dir)\n    {\n        try\n        {\n            dir.Delete(true);\n        }\n        catch { }\n    }\n}