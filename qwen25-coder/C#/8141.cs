using System;\nusing System.Security.Principal;\nusing System.Runtime.InteropServices;\n\npublic static class ImpersonationHelper\n{\n    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]\n    private static extern bool LogonUser(string userName, string domainName, string password,\n                                   int logonType, int logonProvider, out IntPtr phToken);\n\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]\n    private static extern bool CloseHandle(IntPtr handle);\n\n    public static WindowsImpersonationContext Impersonate(string domain, string username, string password)\n    {\n        IntPtr securityToken;\n        if (!LogonUser(username, domain, password, 9 /*Interactive*/, 0, out securityToken))\n            throw new Exception("Logon failed. Please check your credentials.");\n\n        WindowsIdentity identity = new WindowsIdentity(securityToken);\n        WindowsImpersonationContext impersonatedUser = identity.Impersonate();\n\n        // It is your responsibility to dispose the token when done\n        CloseHandle(securityToken);\n\n        return impersonatedUser;\n    }\n}\n\npublic static ServiceControllerStatus FindService()\n{\n    ServiceControllerStatus status = ServiceControllerStatus.Stopped;\n\n    try\n    {\n        using (var context = ImpersonationHelper.Impersonate("domain", "username", "password"))\n        {\n            string machineName = ConfigurationManager.AppSettings["ServiceMachineName"];\n            ServiceController[] services = ServiceController.GetServices(machineName);\n            string serviceName = ConfigurationManager.AppSettings["ServiceName"].ToLower();\n\n            foreach (ServiceController service in services)\n            {\n                if (service.ServiceName.ToLower() == serviceName)\n                {\n                    status = service.Status;\n                    break;\n                }\n            }\n\n            context.Undo();\n        }\n    }\n    catch (Exception ex)\n    {\n        status = ServiceControllerStatus.Stopped;\n        SaveError(ex, "Utilities - FindService()");\n    }\n\n    return status;\n}