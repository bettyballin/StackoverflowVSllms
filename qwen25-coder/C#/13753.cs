using System;\nusing System.Collections.Generic;\nusing System.Text.RegularExpressions;\n\nclass Program\n{\n    static void Main()\n    {\n        string input = @"<a href=""http://example.com"" title=""Example Link""><img src=""/image.png"" alt=""Image Alt Text"":> Link Text</a>";\n        \n        // Regex pattern to match <a> tags with optional title and image alt attributes\n        string regexPattern = @"<a\s+((?:(?:\w+\s*=\s*(?:""[^""]*""|'[^']*'|[^>]*))+?))>(?:<img.+?alt=""([^""]*)"".+?>)?\s*(.*?)<\/a>";\n        \n        Regex regex = new Regex(regexPattern, RegexOptions.IgnoreCase | RegexOptions.Singleline);\n        var matches = regex.Matches(input);\n\n        foreach (Match match in matches)\n        {\n            string titleAttribute = match.Groups[1].Value.Contains("title") ? GetAttributeValue(match.Groups[1].Value, "title") : null;\n            string altText = match.Groups[2].Success ? match.Groups[3].Value : null;\n            string linkText = match.Groups[4].Value;\n\n            // Example: Add onclick event with captured attributes\n            string modifiedLink = Regex.Replace(input,\n                regexPattern,\n                $"<a href=\"$1\" title=\"$5\" onclick=\"track('$6','$7')\">$8</a>",\n                RegexOptions.IgnoreCase | RegexOptions.Singleline);\n\n            Console.WriteLine("Title Attribute: " + titleAttribute);\n            Console.WriteLine("Alt Text: " + altText);\n            Console.WriteLine("Link Text: " + linkText);\n        }\n    }\n\n    static string GetAttributeValue(string attributes, string attributeName)\n    {\n        Regex attrRegex = new Regex($@"{attributeName}=""([^""]*)""", RegexOptions.IgnoreCase | RegexOptions.Singleline);\n        Match match = attrRegex.Match(attributes);\n        return match.Success ? match.Groups[1].Value : null;\n    }\n}