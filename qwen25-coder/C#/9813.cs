using System;\n\nclass Program\n{\n    static void Main()\n    {\n        DateTime d1 = new DateTime(2007, 12, 1);\n        DateTime d2 = new DateTime(2008, 1, 31);\n\n        int leapYearDays = CalculateLeapYearDays(d1, d2);\n        Console.WriteLine("Number of days in leap years: " + leapYearDays);\n    }\n\n    static bool IsLeapYear(int year)\n    {\n        return DateTime.IsLeapYear(year);\n    }\n\n    static int DaysInCommonYear(int month, bool isStart)\n    {\n        int[] daysInMonth = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n        if (isStart) return daysInMonth[month - 1];\n        else return daysInMonth[month]; // for start of next month\n    }\n\n    static int CalculateLeapYearDays(DateTime d1, DateTime d2)\n    {\n        int leapYearDays = 0;\n\n        for (int year = d1.Year; year <= d2.Year; year++)\n        {\n            DateTime startDate;\n            DateTime endDate;\n\n            if (year == d1.Year && year == d2.Year)\n            {\n                // If both dates are in the same year\n                startDate = d1;\n                endDate = d2;\n            }\n            else if (year == d1.Year)\n            {\n                startDate = d1;\n                endDate = new DateTime(year, 12, 31);\n            }\n            else if (year == d2.Year)\n            {\n                startDate = new DateTime(year, 1, 1);\n                endDate = d2;\n            }\n            else\n            {\n                startDate = new DateTime(year, 1, 1);\n                endDate = new DateTime(year, 12, 31);\n            }\n\n            if (IsLeapYear(year))\n            {\n                TimeSpan span = endDate - startDate;\n                leapYearDays += span.Days + 1; // Adding 1 because Days property is zero-based\n            }\n        }\n\n        return leapYearDays;\n    }\n}