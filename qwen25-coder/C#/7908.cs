using System;\nusing System.Runtime.InteropServices;\nusing Microsoft.WindowsCE.Forms;\n\npublic class KeyInterceptor : IMessageFilter {\n    const int SHCMBM_OVERRIDEKEY = 0x1003;\n    const int VK_TTALK = 0xbe;  // Potential virtual key for Talk/Send\n\n    private IntPtr hShell = IntPtr.Zero;\n    private IntPtr hWnd = IntPtr.Zero;\n\n    [DllImport("aygshell.dll", CharSet = CharSet.Unicode)]\n    static extern void SHAppBarMessage(int dwMessage, ref _AppBarData data);\n\n    [DllImport("coredll.dll")]\n    public static extern bool PostMessage(IntPtr hwnd, uint message, IntPtr wParam, IntPtr lParam);\n\n    private struct _AppBarData {\n        public int cbSize;\n        public int hWnd;\n        public int uCallbackMsg;\n        public int uEdge;\n        public RECT rc;\n        public int lParam;\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    private struct RECT {\n        public int left;\n        public int top;\n        public int right;\n        public int bottom;\n    }\n\n    public KeyInterceptor() { \n        this.hShell = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(_AppBarData)));\n       RECT rectShell = new RECT();\n        _AppBarData AppBarInfoShell = new _AppBarData();\n        AppBarInfoShell.cbSize = Marshal.SizeOf(AppBarInfoShell);\n        AppBarInfoShell.uCallbackMsg = 0; // RegisterAppbarMessage(0);\n\n        SHAppBarMessage(2, ref AppBarInfoShell);\n\n        rectShell.left = AppBarInfoShell.rc.left;\n        rectShell.top = AppBarInfoShell.rc.top;\n        rectShell.right = AppBarInfoShell.rc.right;\n        rectShell.bottom = AppBarInfoShell.rc.bottom;\n\n        AppBarInfoShell.uEdge = 3;\n        AppBarInfoShell.rc = rectShell;\n\n        SHAppBarMessage(2, ref AppBarInfoShell);\n\n        this.hWnd = Form1.ActiveForm.Handle; // Get your app window handle\n\n        IntPtr resultOverrideKey = PostMessage(hShell, SHCMBM_OVERRIDEKEY,\n            (IntPtr)VK_TTALK, hWnd);\n    }\n\n    public bool PreFilterMessage(ref Message m) {\n        switch (m.Msg) {\n            case 0x312: // WM_HOTKEY\n                if ((int)m.WParam == VK_TTALK) {\n                    // Handle your Talk/Send key press here\n                    MakePhoneCall();\n                    return true;\n                }\n                break;\n        }\n        return false;\n    }\n\n    private void MakePhoneCall() {\n        // Replace with your logic to initiate a call\n        MessageBox.Show("Dialing selected number...");\n        // Example command to trigger a dial (not guaranteed)\n        // System.Diagnostics.Process.Start(new System.Uri("tel:+1234567890"));\n    }\n\n    ~KeyInterceptor()\n    {\n        PostMessage(hShell, SHCMBM_OVERRIDEKEY,\n            (IntPtr)VK_TTALK, IntPtr.Zero);\n        Marshal.FreeHGlobal(this.hShell);\n    }\n}