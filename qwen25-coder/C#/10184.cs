using System;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\npublic class NetworkShareConnector\n{\n    [DllImport("mpr.dll", CharSet = CharSet.Unicode)]\n    private static extern int WNetAddConnection2(\n        NETRESOURCE netResource,\n        string password,\n        string username,\n        int flags);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct NETRESOURCE\n    {\n        public ResourceScope Scope;\n        public ResourceType ResourceType;\n        public ResourceShare Reserved;\n        public IntPtr DisplayName;\n        public IntPtr RemoteName;\n        public IntPtr Comment;\n        public IntPtr Provider;\n    }\n\n    public enum ResourceScope : int\n    {\n        Connected = 1,\n        GlobalNetwork,\n        Remembered,\n        Recent,\n        Context\n    };\n\n    public enum ResourceType : int\n    {\n        Any = 0,\n        Disk = 1,\n        Print = 2,\n    };\n\n    public enum ResourceShare : int\n    {\n        DiskTree = 0x00000001,\n        DiskDrive = 0x00000002,\n        Shareable = 0x00000004,\n        Filesystem = 0x00000008,\n        All = DiskTree | DiskDrive | Shareable | Filesystem\n    };\n\n    public enum ResourceUsage : int\n    {\n        ConnectInteractive = 0x00000001,\n        ConnectPrompt = 0x00000002,\n        ConnectRedirect = 0x00000004,\n        ConnectCommand = 0x00001000,\n        Connectivity = 0x00002000,\n        Idlecommand = 0x00FF0000,\n        Mask = 0x00FFFFFF,\n        ModualReferenced = 0x80000000,\n        RedirectPersistent = 0x10000000\n    };\n\n    public bool ConnectToShare(string remotePath)\n    {\n        NETRESOURCE nr = new NETRESOURCE\n        {\n            Scope = ResourceScope.GlobalNetwork,\n            ResourceType = ResourceType.Disk,\n            DisplayType = ResourceUsage.ConnectInteractive | ResourceUsage.ConnectCommand,\n            RemoteName = Marshal.StringToHGlobalUni(remotePath),\n            LocalName = IntPtr.Zero\n        };\n\n        int result = WNetAddConnection2(nr, null, null, 0);\n        if (result == 0)\n            return true;\n        else\n            MessageBox.Show($"Failed to connect with error: {Marshal.GetLastWin32Error()}");\n        return false;\n    }\n}