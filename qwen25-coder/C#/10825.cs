using System;\nusing System.ServiceProcess;\nusing System.Threading;\n\npublic class YourService : ServiceBase\n{\n    private static Mutex mutex = new Mutex(false, "YourUniqueMutexName");\n\n    public YourService()\n    {\n        // Initialization code here\n    }\n\n    protected override void OnStart(string[] args)\n    {\n        if (!mutex.WaitOne(TimeSpan.FromSeconds(5), false))\n        {\n            Log.Info("Another instance of the service is already running.");\n            return;\n        }\n        \n        try\n        {\n            base.OnStart(args);\n            \n            // Service startup code here\n        }\n        catch (Exception ex)\n        {\n            Log.Error(ex, "Failed to start the service.");\n        }\n    }\n\n    protected override void OnStop()\n    {\n        Log.Info("STOPPING SERVICE");\n\n        // Wait working threads to finish\n        _Worker.Die();\n\n        // Kill inner processes still running\n        ProcessUtility.KillTree(System.Diagnostics.Process.GetCurrentProcess().Id);\n\n        base.OnStop();\n        mutex.ReleaseMutex();\n    }\n\n    static int Main(string[] args)\n    {\n        ServiceBase.Run(new YourService());\n        return 0;\n    }\n}