public async Task<Response> StoreAccelerationAsync(string strSessionString, string strMeasurementTime, string strAccelerationX, string strAccelerationY, string strAccelerationZ)\n{\n    Response response = new Response();\n    try\n    {\n        string strTime = strMeasurementTime.Replace("_", " ");\n        DateTime measurementTime = DateTime.ParseExact(strTime, "yyyy-MM-dd HH:mm:ss:fff", null);\n        double accelerationX = Convert.ToDouble(strAccelerationX.Replace(".", ","));\n        double accelerationY = Convert.ToDouble(strAccelerationY.Replace(".", ","));\n        double accelerationZ = Convert.ToDouble(strAccelerationZ.Replace(".", ","));\n\n        using (SQLWorks sqlWorks = new SQLWorks())\n        {\n            bool result = await sqlWorks.StoreAccelerationAsync(strSessionString, measurementTime, accelerationX, accelerationY, accelerationZ);\n            if (!result)\n                throw new Exception("Failed to store data.");\n\n            response.Successful = true;\n            response.Comment = "Stored!";\n        }\n    }\n    catch (Exception ex)\n    {\n        response.Comment = $"An error occurred: {ex.Message}";\n        response.Successful = false;\n    }\n\n    return response;\n}\n\npublic async Task<bool> StoreAccelerationAsync(string strStringSession, DateTime receivedTime, double accelerationX, double accelerationY, double accelerationZ)\n{\n    bool result = false;\n    string query =\n        "INSERT INTO acceleration (session_id, measurement_time, acceleration_x, acceleration_y, acceleration_z) VALUES (@sessionID, @measurementTime, @accelerationX, @accelerationY, @accelerationZ)";\n    \n    using (SqlConnection conn = new SqlConnection(connectionString))\n    {\n        using (SqlCommand cmd = new SqlCommand(query, conn))\n        {\n            int sessionID = GetSessionID(strStringSession);\n            if (sessionID == 0)\n                return false;\n            \n            updateSessions(sessionID);\n            \n            cmd.Parameters.AddWithValue("@sessionID", sessionID);\n            cmd.Parameters.AddWithValue("@measurementTime", receivedTime);\n            cmd.Parameters.AddWithValue("@accelerationX", accelerationX);\n            cmd.Parameters.AddWithValue("@accelerationY", accelerationY);\n            cmd.Parameters.AddWithValue("@accelerationZ", accelerationZ);\n\n            await conn.OpenAsync();\n            int rowsAffected = await cmd.ExecuteNonQueryAsync();\n            result = rowsAffected > 0;\n        }\n    }\n\n    return result;\n}