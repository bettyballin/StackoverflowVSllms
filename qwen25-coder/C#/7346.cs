// Example of loading and caching translation data into memory.\npublic class TranslationService\n{\n    private static readonly ConcurrentDictionary<string, string> _translationsCache = new ConcurrentDictionary<string, string>();\n\n    public async Task InitializeTranslationsAsync()\n    {\n        // Fetch from database (or other source) only once on application startup.\n        using (var context = new YourDbContext())\n        {\n            var translations = await context.Translations\n                                           .ToDictionaryAsync(t => t.Key, t => t.Value);\n\n            foreach (var pair in translations)\n            {\n                _translationsCache[pair.Key] = pair.Value;\n            }\n        }\n    }\n\n    public string GetTranslation(string key)\n    {\n        // Retrieve from cache.\n        return _translationsCache.TryGetValue(key, out var translation) ? translation : null;\n    }\n}