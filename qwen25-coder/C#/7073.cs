using System;\nusing System.Configuration;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Data.OleDb;\nusing System.Data.Odbc;\nusing FirebirdSql.Data.FirebirdClient;\n\npublic class ConnectionFactory\n{\n    public DbConnection GetConnection(string connectionName)\n    {\n        // Get the connectionString information\n        var cs = ConfigurationManager.ConnectionStrings[connectionName];\n        if (cs == null)\n            throw new ConfigurationErrorsException($"Invalid connection name \"{connectionName}\"");\n\n        // Dynamically create a connection based on the provider\n        switch (cs.ProviderName)\n        {\n            case "System.Data.SqlClient":\n                return new SqlConnection(cs.ConnectionString);\n            case "System.Data.OleDb":\n                return new OleDbConnection(cs.ConnectionString);\n            case "System.Data.Odbc":\n                return new OdbcConnection(cs.ConnectionString);\n            case "FirebirdSql.Data.FirebirdClient":\n                return new FbConnection(cs.ConnectionString);\n            default:\n                throw new ArgumentException($"Unsupported provider name: {cs.ProviderName}");\n        }\n    }\n}