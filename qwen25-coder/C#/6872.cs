public class Foo\n{\n    public int FooId { get; set; }\n    public string FooCode { get; set; }\n\n    // Navigation property to related bars\n    public ICollection<Bar> Bars { get; set; }\n}\n\npublic class Bar\n{\n    public int BarId { get; set; }\n    public string BarFooCode { get; set; } // Foreign key\n\n    // Navigation property back to foo\n    public Foo Foo { get; set; }\n}\n\npublic class YourDbContext : DbContext\n{\n    public DbSet<Foo> Foos { get; set; }\n    public DbSet<Bar> Bars { get; set; }\n\n    protected override void OnModelCreating(DbModelBuilder modelBuilder)\n    {\n        // Configure the relationship between Foo and Bar using BarFooCode foreign key\n        modelBuilder.Entity<Bar>()\n            .HasRequired(b => b.Foo) // Bar is required to have a related Foo\n            .WithMany(f => f.Bars)    // One Foo may have many Bars\n            .HasForeignKey(b => b.BarFooCode); // Map foreign key\n    }\n}