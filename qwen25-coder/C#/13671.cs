[Fact]\npublic void Register_ShouldPreventInvalidRequest()\n{\n    // Prepare controller context\n    PrepareController(home, ThorController.KeyPublic, ThorController.KeyHome, HomeController.KeyRegister);\n\n    // Create a DTO that will fail validation (e.g., invalid email format)\n    var dto = new UserRegisterDto { Email = "invalid-email", Password = "", PasswordConfirm = "" };\n\n    // Manually trigger the validation since in unit test environment it might not happen automatically\n    MonoRailValidationFactory.ValidateObject(dto);\n\n    // Call the Register action on the controller\n    home.Register(dto);\n\n    // Assert that there are validation errors and response is being redirected as expected\n    Assert.True(home.HasValidationError(dto));\n    Assert.True(Response.WasRedirected);\n    Assert.Contains("/public/home/index", Response.RedirectedTo);\n    Assert.NotNull(home.Errors);\n}