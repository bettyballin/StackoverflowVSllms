public partial class YourPage : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            int pageSize = 10; // number of records per page\n            int currentPage = 1; // starting at the first page\n\n            LoadData(currentPage, pageSize);\n        }\n    }\n\n    public void LoadData(int currentPage, int pageSize)\n    {\n        var data = GetDataFromDatabase(); // Fetch all data from DB or cache it\n        Session["data"] = data;\n\n        int totalPages = (int)Math.Ceiling(data.Count / (double)pageSize);\n\n        BindTable(currentPage, pageSize);\n        RenderPagingControls(totalPages, currentPage);\n    }\n\n    private void BindTable(int currentPage, int pageSize)\n    {\n        var data = (List<YourDataType>)Session["data"];\n        data = data.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();\n\n        Table.Rows.Clear(); // Clear existing rows\n\n        for (int i = 0; i < data.Count; i++)\n        {\n            TableRow row = new TableRow();\n            TableCell FirstCell = new TableCell();\n            TableCell SecondCell = new TableCell();\n            TableCell ThirdCell = new TableCell();\n\n            Label lbl1 = new Label { Text = data[i].Field1 }; // Replace Field1, Field2, Field3 with actual property names\n            Label lbl2 = new Label { Text = data[i].Field2 };\n            Label lbl3 = new Label { Text = data[i].Field3 };\n\n            FirstCell.Controls.Add(lbl1);\n            SecondCell.Controls.Add(lbl2);\n            ThirdCell.Controls.Add(lbl3);\n\n            row.Cells.Add(FirstCell);\n            row.Cells.Add(SecondCell);\n            row.Cells.Add(ThirdCell);\n\n            Table.Rows.Add(row);\n        }\n    }\n\n    private void RenderPagingControls(int totalPages, int currentPage)\n    {\n        // Clear existing paging controls\n        PagingPanel.Controls.Clear();\n\n        if (totalPages < 1) return;\n\n        // Add Previous button, disabled if first page\n        Button btnPrevious = new Button { ID = "btnPrevious", CommandArgument = (currentPage > 1 ? currentPage - 1 : 1).ToString(), Text = "<" };\n        btnPrevious.Enabled = currentPage > 1;\n        btnPrevious.Click += ChangePage;\n\n        PagingPanel.Controls.Add(btnPrevious);\n\n        // Add page number buttons\n        for (int i = 1; i <= totalPages; i++)\n        {\n            Button btnPageNumber = new Button { ID = "btn" + i.ToString(), CommandArgument = i.ToString(), Text = i.ToString() };\n            if (i == currentPage) btnPageNumber.Enabled = false;\n            else btnPageNumber.Click += ChangePage;\n\n            PagingPanel.Controls.Add(btnPageNumber);\n        }\n\n        // Add Next button, disabled if last page\n        Button btnNext = new Button { ID = "btnNext", CommandArgument = (currentPage < totalPages ? currentPage + 1 : totalPages).ToString(), Text = ">" };\n        btnNext.Enabled = currentPage < totalPages;\n        btnNext.Click += ChangePage;\n\n        PagingPanel.Controls.Add(btnNext);\n    }\n\n    protected void ChangePage(object sender, EventArgs e)\n    {\n        int pageNumber = Convert.ToInt32(((Button)sender).CommandArgument);\n        LoadData(pageNumber, 10); // Assuming 10 as pagesize\n    }\n\n    private List<YourDataType> GetDataFromDatabase()\n    {\n        // This method should fetch data from your database or cache\n        return new List<YourDataType>(); // Replace with actual data fetching logic\n    }\n}