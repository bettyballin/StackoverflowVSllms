public interface IConfigurationManager\n{\n    string DBConnectionString { get; }\n    string FilePath { get; }\n    string ServerName { get; }\n}\n\npublic class ConfigurationManager : IConfigurationManager\n{\n    public string DBConnectionString { get; private set; }\n    public string FilePath { get; private set; }\n    public string ServerName { get; private set; }\n\n    public ConfigurationManager(string environment)\n    {\n        // Load configurations based on the environment\n        if (environment == "development")\n        {\n            DBConnectionString = "your_development_db_connection_string";\n            FilePath = "/path/to/dev/file";\n            ServerName = "dev-server";\n        }\n        else if (environment == "acceptance")\n        {\n            DBConnectionString = "your_acceptance_db_connection_string";\n            FilePath = "/path/to/acc/file";\n            ServerName = "acceptance-server";\n        }\n        else if (environment == "production")\n        {\n            DBConnectionString = "your_production_db_connection_string";\n            FilePath = "/path/to/prod/file";\n            ServerName = "live-server";\n        }\n    }\n}\n\npublic class SomeService\n{\n    private readonly IConfigurationManager _config;\n\n    public SomeService(IConfigurationManager config)\n    {\n        _config = config;\n    }\n\n    public void DoSomething()\n    {\n        // Use the configuration\n        Console.WriteLine($"Connecting to DB at {_config.DBConnectionString}");\n    }\n}