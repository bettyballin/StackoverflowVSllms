[Export(typeof(IProvider))]\npublic class DynamicProvider : IProvider\n{\n    private readonly object _internalProvider;\n    private readonly Type _providerType;\n\n    public DynamicProvider(object internalProvider)\n    {\n        _internalProvider = internalProvider;\n        _providerType = internalProvider.GetType();\n    }\n\n    public string GetData()\n    {\n        // Use reflection to call a method that returns data\n        var getDataMethod = _providerType.GetMethod("SomeMethodToGetData");\n        return (string)getDataMethod.Invoke(_internalProvider, null);\n    }\n\n    public int GetPropertyData(string propertyName)\n    {\n        // Use reflection to get property values by name\n        var propInfo = _providerType.GetProperty(propertyName);\n        return (int)propInfo.GetValue(_internalProvider);\n    }\n}