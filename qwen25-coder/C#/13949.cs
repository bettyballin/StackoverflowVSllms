public class GisObject\n{\n    public virtual int Id { get; set; }\n    public virtual string Description { get; set; }\n    // Other common properties\n}\n\n// Service or repository method to fetch GIS objects dynamically\npublic List<GisObject> FetchGisObjectsForClass(string className)\n{\n    var session = sessionFactory.OpenSession();\n    var tableName = GetTableNameFromMetadata(className); // Example: metadata lookup function\n\n    // Use raw SQL query with dynamic table name\n    string sqlQuery = $"SELECT Id, Description FROM {tableName}";\n\n    // Execute the SQL and map to GisObject\n    return session.CreateSQLQuery(sqlQuery)\n        .AddEntity(typeof(GisObject))\n        .List<GisObject>();\n}\n\nprivate string GetTableNameFromMetadata(string className)\n{\n    // Implement this method to fetch table name from your metadata storage\n    // Example: SELECT TableName FROM MetaData WHERE ClassName = @className\n    return "Roads"; // Placeholder table name\n}