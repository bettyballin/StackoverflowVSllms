using System;\nusing System.Windows.Automation;\n\nclass Program\n{\n    static void Main()\n    {\n        // Find all top-level windows\n        AutomationElementCollection windows = AutomationElement.RootElement.FindAll(TreeScope.Children, new PropertyCondition(AutomationElement.ControlTypeProperty, ControlType.Window));\n\n        foreach (AutomationElement window in windows)\n        {\n            string windowName = window.Current.Name;\n            \n            if (windowName.Contains("Skype") && !windowName.Contains("Video Phone"))\n            {\n                // Try to hide the window\n                AutomationPattern patternsSupported = window.GetCurrentPattern(PatternIdentifier.IsInvokePatternAvailable);\n                \n                object invokeObj = null;\n                bool result = window.TryGetCurrentPattern(InvokePattern.Pattern, out invokeObj);\n                if (result)\n                {\n                    InvokePattern invokePattern = (InvokePattern)invokeObj;\n                    \n                    // Unfortunately, closing or hiding a window might not be directly supported,\n                    // but you can minimize it as a workaround\n                    window.SetFocus();\n                    SendKeys.SendWait("% n"); // Alt+n key combination to minimize the window\n                }\n            }\n        }\n    }\n}