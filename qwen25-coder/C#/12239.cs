using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Xml.Serialization;\n\npublic class MyData\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        // Example data\n        var data = new MyData { Name = "John Doe", Age = 30 };\n\n        // Serialize and encrypt\n        var encryptedBytes = EncryptObject(data, "mydeskey");\n\n        // Decrypt and deserialize\n        var decryptedData = DecryptToObject<MyData>(encryptedBytes, "mydeskey");\n\n        Console.WriteLine($"Name: {decryptedData.Name}, Age: {decryptedData.Age}");\n    }\n\n    private static byte[] EncryptObject(object obj, string key)\n    {\n        using (var ms = new MemoryStream())\n        {\n            XmlSerializer serializer = new XmlSerializer(obj.GetType());\n            serializer.Serialize(ms, obj);\n\n            var xmlBytes = ms.ToArray();\n\n            return ApplyDesCrypto(xmlBytes, key, CipherMode.Encrypt);\n        }\n    }\n\n    private static T DecryptToObject<T>(byte[] encryptedData, string key)\n    {\n        var decrypted = ApplyDesCrypto(encryptedData, key, CipherMode.Decrypt);\n        using (var ms = new MemoryStream(decrypted))\n        {\n            XmlSerializer serializer = new XmlSerializer(typeof(T));\n            return (T)serializer.Deserialize(ms);\n        }\n    }\n\n    private static byte[] ApplyDesCrypto(byte[] data, string key, CipherMode mode)\n    {\n        using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())\n        {\n            des.Key = Encoding.ASCII.GetBytes(key.PadRight(8).Substring(0, 8));\n            des.IV = Encoding.ASCII.GetBytes("IV123456");\n\n            ICryptoTransform crypto;\n\n            if (mode == CipherMode.Encrypt)\n            {\n                crypto = des.CreateEncryptor();\n            }\n            else\n            {\n                crypto = des.CreateDecryptor();\n            }\n\n            using (var ms = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(ms, crypto, CryptoStreamMode.Write))\n                {\n                    cs.Write(data, 0, data.Length);\n                }\n                return ms.ToArray();\n            }\n        }\n    }\n}