using System.Runtime.Serialization;\nusing System.ServiceModel.Web;\n\n[DataContract]\npublic class ResponseBase\n{\n    [DataMember(Order = 1)]\n    public bool Success { get; set; }\n\n    [DataMember(Order = 2)]\n    public string Message { get; set; }\n}\n\n[DataContract]\npublic class SuccessResponse : ResponseBase\n{\n    [DataMember(Order = 3, EmitDefaultValue = false)]\n    public object Data { get; set; }\n\n    public SuccessResponse(object data)\n    {\n        Success = true;\n        Data = data;\n    }\n}\n\n[DataContract]\npublic class ErrorResponse : ResponseBase\n{\n    public ErrorResponse(string errorMessage)\n    {\n        Success = false;\n        Message = errorMessage;\n    }\n}\n\n[ServiceContract]\npublic interface IYourService\n{\n    [OperationContract, WebGet(ResponseFormat = WebMessageFormat.Json)]\n    ResponseBase GetSomething();\n}\n\npublic class YourService : IYourService\n{\n    public ResponseBase GetSomething()\n    {\n        try\n        {\n            // Simulate successful operation\n            var data = new { Property1 = "Value1" };\n            return new SuccessResponse(data);\n        }\n        catch (Exception ex)\n        {\n            return new ErrorResponse(ex.Message);\n        }\n    }\n}