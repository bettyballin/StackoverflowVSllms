using System;\nusing System.IO;\nusing Microsoft.Win32.SafeHandles;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    [DllImport("kernel32.dll", CharSet = CharSet.Auto, SetLastError = true)]\n    static extern SafeFileHandle CreateFile(\n        string lpFileName,\n        uint dwDesiredAccess,\n        uint dwShareMode,\n        IntPtr lpSecurityAttributes,\n        uint dwCreationDisposition,\n        uint dwFlagsAndAttributes,\n        IntPtr hTemplateFile);\n\n    static void Main()\n    {\n        const uint GENERIC_READ = 0x80000000;\n        const uint FILE_SHARE_READ = 0x00000001;\n\n        string sourceFilePath = @"C:\Path\To\Source\File.txt";\n        string destinationFilePath = @"C:\Path\To\Destination\File.txt";\n\n        using (SafeFileHandle handle = CreateFile(sourceFilePath, GENERIC_READ, FILE_SHARE_READ, IntPtr.Zero, 3 /*OPEN_EXISTING*/, 0, IntPtr.Zero))\n        {\n            if (handle.IsInvalid)\n            {\n                throw new IOException("Failed to open file.");\n            }\n\n            var fileInfo = new FileInfo(sourceFilePath);\n            using (FileStream fsSource = new FileStream(handle, FileAccess.Read),\n                             fsDestination = File.Open(destinationFilePath, FileMode.Create, FileAccess.Write))\n            {\n                byte[] buffer = new byte[4096];\n                int read;\n                while ((read = fsSource.Read(buffer, 0, buffer.Length)) > 0)\n                {\n                    fsDestination.Write(buffer, 0, read);\n                }\n            }\n        }\n    }\n}