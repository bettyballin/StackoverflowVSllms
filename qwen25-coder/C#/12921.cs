public class EncryptDecrypt {\n\n    static System.Security.Cryptography.TripleDESCryptoServiceProvider keyProv = new TripleDESCryptoServiceProvider();\n\n    public static SymmetricAlgorithm KeyProvider {\n        get {\n            keyProv.Key = new byte[] { /* redacted with prejudice */ };\n            return keyProv;\n        }\n    }\n\n    public static string Encrypt(string text, SymmetricAlgorithm key) {\n\n        if (text.Equals(string.Empty)) return text;\n\n        // Create a memory stream.\n        MemoryStream ms = new MemoryStream();\n\n        // Generate a random IV\n        byte[] iv = key.IV;\n\n        // Write the IV to the output stream so we can use it for decryption later\n        ms.Write(iv, 0, iv.Length);\n\n        // Create a CryptoStream using the memory stream and the CSP DES key.\n        CryptoStream encStream = new CryptoStream(ms, key.CreateEncryptor(), CryptoStreamMode.Write);\n\n        // Create a StreamWriter to write a string to the stream.\n        StreamWriter sw = new StreamWriter(encStream);\n\n        // Write the plaintext to the stream.\n        sw.WriteLine(text);\n\n        // Close the StreamWriter and CryptoStream.\n        sw.Close();\n        encStream.Close();\n\n        // Get an array of bytes that represents the memory stream.\n        byte[] buffer = ms.ToArray();\n\n        // Close the memory stream.\n        ms.Close();\n\n        // Return the encrypted byte array (including IV as prefix).\n        return System.Convert.ToBase64String(buffer);\n    }\n\n    public static string Decrypt(string cypherText, SymmetricAlgorithm key) {\n        if (cypherText.Equals(string.Empty)) return cypherText;\n\n        try {\n            // Create a memory stream to the passed buffer.\n            byte[] cipherArray = Convert.FromBase64String(cypherText);\n            MemoryStream ms = new MemoryStream(cipherArray);\n\n            // Read out the IV from the beginning of the array\n            byte[] iv = new byte[key.IV.Length];\n            ms.Read(iv, 0, key.IV.Length);\n\n            key.IV = iv;\n\n            // Create a CryptoStream using the memory stream and the CSP DES key.\n            CryptoStream encStream = new CryptoStream(ms, key.CreateDecryptor(), CryptoStreamMode.Read);\n\n            // Create a StreamReader for reading the stream.\n            StreamReader sr = new StreamReader(encStream);\n\n            // Read the stream as a string.\n            string val = sr.ReadLine();\n\n            // Close the streams.\n            sr.Close();\n            encStream.Close();\n            ms.Close();\n\n            return val;\n        }\n        catch (System.Exception) {\n            return string.Empty;\n        }\n    }\n}