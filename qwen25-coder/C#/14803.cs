private void OnMouseMove(object sender, MouseEventArgs e)\n{\n    Point currentPosition = e.GetPosition(this);\n\n    List<UIElement> hitElements = new List<UIElement>();\n    FindAllVisualsAtPointRecursive((DependencyObject)sender, currentPosition, hitElements);\n\n    foreach (var element in hitElements)\n    {\n        // Process each element found under the mouse\n        Console.WriteLine($"Element: {element.GetType().Name}");\n    }\n}\n\nprivate void FindAllVisualsAtPointRecursive(DependencyObject reference, Point point, List<UIElement> foundElements)\n{\n    for (int i = VisualTreeHelper.GetChildrenCount(reference) - 1; i >= 0; i--)\n    {\n        DependencyObject childReference = VisualTreeHelper.GetChild(reference, i);\n        var childVisual = childReference as UIElement;\n\n        if (childVisual != null && IsMouseOver(childVisual, point))\n        {\n            foundElements.Add(childVisual);\n\n            // Continue to check children of the current child\n            FindAllVisualsAtPointRecursive(childVisual, point, foundElements);\n        }\n    }\n}\n\nprivate bool IsMouseOver(Visual target, Point position)\n{\n    GeneralTransform transform = target.TransformToAncestor(this);\n    Point transformedPosition = transform.Transform(position);\n\n    Rect bounds = VisualTreeHelper.GetDescendantBounds(target);\n    return bounds.Contains(transformedPosition);\n}