using System.ComponentModel;\nusing System.Linq;\nusing System.Windows;\n\nnamespace MasterDetailApp\n{\n    public partial class MainWindow : Window, INotifyPropertyChanged\n    {\n        private MyDataContext _dataContext;\n        private Company _selectedCompany;\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        protected virtual void OnPropertyChanged(string propertyName)\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n\n        public MyDataContext DataContext => _dataContext ?? (_dataContext = new MyDataContext());\n\n        public System.Collections.ObjectModel.ObservableCollection<Company> Companies\n        {\n            get { return new System.Collections.ObjectModel.ObservableCollection<Company>(DataContext.Companies.ToList()); }\n        }\n\n        public Company SelectedCompany\n        {\n            get { return _selectedCompany; }\n            set \n            { \n                if (_selectedCompany != value)\n                {\n                    _selectedCompany = value;\n                    OnPropertyChanged(nameof(SelectedCompany));\n                }\n            }\n        }\n\n        public MainWindow()\n        {\n            InitializeComponent();\n            DataContext = this;\n        }\n    }\n}