using System;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class FormWithCustomState : Form\n{\n    private Dictionary<Control, bool> _controlStates = new Dictionary<Control, bool>();\n\n    public FormWithCustomState()\n    {\n        // Initialize components and add controls...\n        foreach (Control control in this.Controls)\n        {\n            if (control is TextBox)  // You can extend this for other controls\n            {\n                _controlStates[control] = false;  // Initially clean\n                control.TextChanged += Control_TextChanged;\n            }\n        }\n    }\n\n    private void Control_TextChanged(object sender, EventArgs e)\n    {\n        if (sender is Control control && _controlStates.ContainsKey(control))\n        {\n            _controlStates[control] = true;  // Mark as dirty\n        }\n    }\n\n    public bool IsControlDirty(Control control)\n    {\n        return _controlStates.TryGetValue(control, out bool isDirty) ? isDirty : false;\n    }\n\n    protected override void OnLoad(EventArgs e)\n    {\n        base.OnLoad(e);\n        // Example of usage:\n        bool isTextBoxDirty = IsControlDirty(yourTextBoxInstance);\n    }\n}