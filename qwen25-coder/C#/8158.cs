using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Xml.Linq;\n\nclass Program\n{\n    static void Main()\n    {\n        XDocument xml = XDocument.Load("yourfile.xml");\n        string dtd = GenerateDTD(xml);\n        Console.WriteLine(dtd);\n    }\n\n    static string GenerateDTD(XDocument doc)\n    {\n        var rootElement = doc.Root;\n        if (rootElement == null) return "";\n\n        // Start building DTD\n        var elements = new HashSet<string>();\n\n        TraverseElements(rootElement, elements);\n\n        var dtdBuilder = new System.Text.StringBuilder();\n        dtdBuilder.AppendLine($"<!ELEMENT {rootElement.Name} (#PCDATA)");\n\n        foreach (var element in elements)\n        {\n            if (element != rootElement.Name.LocalName) // Avoid duplicating the root\n                dtdBuilder.AppendLine($"<!ELEMENT {element} (#PCDATA)>");\n        }\n\n        return dtdBuilder.ToString();\n    }\n\n    static void TraverseElements(XContainer container, HashSet<string> elements)\n    {\n        foreach (var element in container.Elements())\n        {\n            if (!elements.Contains(element.Name.LocalName))\n            {\n                elements.Add(element.Name.LocalName);\n                TraverseElements(element, elements); // Recursive traversal\n            }\n        }\n    }\n}