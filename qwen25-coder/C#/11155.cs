using System;\nusing System.ServiceProcess;\n\nnamespace MultiModeService\n{\n    public partial class MyService : ServiceBase\n    {\n        public MyService()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnStart(string[] args)\n        {\n            // Your service start logic here\n            Console.WriteLine("Service started.");\n        }\n\n        protected override void OnStop()\n        {\n            // Your service stop logic here\n            Console.WriteLine("Service stopped.");\n        }\n\n        static void Main(string[] args)\n        {\n            if (Environment.UserInteractive)\n            {\n                // Run in console mode if running from command line or debugger\n                var service = new MyService();\n                service.OnStart(args);\n\n                Console.WriteLine("Press any key to stop the service...");\n                Console.ReadKey();\n\n                service.OnStop();\n            }\n            else\n            {\n                // Run as a windows service\n                ServiceBase.Run(new MyService());\n            }\n        }\n    }\n}