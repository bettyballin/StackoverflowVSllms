using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass DataEncryptor {\n    // Encrypts a string and returns the encrypted byte array.\n    public static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV) {\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream()) {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)) {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt)) {\n                        swEncrypt.Write(plainText);\n                    }\n                    return msEncrypt.ToArray();\n                }\n            }\n        }\n    }\n\n    // Decrypts an encrypted byte array and returns the decrypted string.\n    public static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV) {\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText)) {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)) {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt)) {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    // Generate a random key and IV\n    public static void CreateKeyAndIv(out byte[] key, out byte[] iv) {\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.GenerateKey();\n            aesAlg.GenerateIV();\n\n            key = aesAlg.Key;\n            iv = aesAlg.IV;\n        }\n    }\n\n    // Example usage\n    public static void Main() {\n        string originalData = "Here is some data to encrypt!";\n        byte[] key, iv;\n        CreateKeyAndIv(out key, out iv);\n\n        // Encrypt the string\n        byte[] encryptedData = EncryptStringToBytes_Aes(originalData, key, iv);\n        \n        // Save encryptedData and key somewhere secure (e.g., DPAPI-protect the key)\n\n        // Decrypt the data in another session or on a different machine\n        string decryptedData = DecryptStringFromBytes_Aes(encryptedData, key, iv);\n\n        Console.WriteLine("Original: " + originalData);\n        Console.WriteLine("Decrypted: " + decryptedData);\n    }\n}