using System;\nusing System.Reflection;\nusing System.Security;\nusing System.Security.Permissions;\n\nclass Program\n{\n    static void Main()\n    {\n        // Requesting ReflectionPermission with appropriate flags\n        PermissionSet ps = new PermissionSet(PermissionState.None);\n        ReflectionPermission rp = new ReflectionPermission(ReflectionPermissionFlag.MemberAccess | ReflectionPermissionFlag.NonPublicView);\n        ps.AddPermission(rp);\n\n        try\n        {\n            // Demand the permission set before performing reflection on non-public members.\n            ps.Demand();\n\n            Assembly asm = Assembly.LoadFrom("Chapter13.exe", AppDomain.CurrentDomain.Evidence);\n            \n            Type t = asm.GetType("Chapter13.ProtectedBuffer");\n\n            MemberInfo[] members = t.GetMembers(BindingFlags.NonPublic);\n\n            foreach (MemberInfo m in members)\n            {\n                Console.WriteLine(m.Name);\n            }\n        }\n        catch (SecurityException ex)\n        {\n            Console.WriteLine("Permission not granted: " + ex.Message);\n        }\n    }\n}