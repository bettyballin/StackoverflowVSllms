using Emgu.CV;\nusing Emgu.CV.Structure;\nusing System;\n\nclass Program\n{\n    static void Main()\n    {\n        // Load the original and modified images\n        Image<Bgr, byte> originalImage = new Image<Bgr, byte>("path_to_original_image.png");\n        Image<Bgr, byte> modifiedImage = new Image<Bgr, byte>("path_to_modified_image.png");\n\n        // Create SURF detector\n        SurfFeatureDetector surf = new SurfFeatureDetector();\n\n        // Detect features and compute descriptors in both images\n        VectorOfKeyPoint keypointsOriginal = new VectorOfKeyPoint();\n        Mat descriptorOriginal = new Mat();\n        surf.DetectAndCompute(originalImage, null, keypointsOriginal, descriptorOriginal);\n\n        VectorOfKeyPoint keypointsModified = new VectorOfKeyPoint();\n        Mat descriptorModified = new Mat();\n        surf.DetectAndCompute(modifiedImage, null, keypointsModified, descriptorModified);\n\n        // Use FlannBasedMatcher to match descriptors\n        DescriptorMatcher matcher = new FlannBasedMatcher();\n        VectorOfVectorOfDMatch matches = new VectorOfVectorOfDMatch();\n        matcher.KnnMatch(descriptorOriginal, descriptorModified, matches, 2);\n\n        // Filter out good matches based on the ratio test\n        float ratioThresh = 0.75f;\n        VectorOfDMatch filteredMatches = new VectorOfDMatch();\n        for (int i = 0; i < matches.Size; i++)\n        {\n            if (matches[i][0].Distance < ratioThresh * matches[i][1].Distance)\n                filteredMatches.PushBack(matches[i][0]);\n        }\n\n        // Display the number of good matches\n        Console.WriteLine($"Number of good matches: {filteredMatches.Size}");\n\n        // Optionally, draw and display matches to visually check\n        Image<Bgr, byte> matchedImages = new Image<Bgr, byte>(originalImage.Width + modifiedImage.Width,\n            Math.Max(originalImage.Height, modifiedImage.Height));\n        Features2DToolbox.DrawMatches(originalImage, keypointsOriginal, modifiedImage, keypointsModified, filteredMatches, matchedImages);\n        CvInvoke.Imshow("Matches", matchedImages);\n        CvInvoke.WaitKey(0);\n    }\n}