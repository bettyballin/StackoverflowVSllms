using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\nusing System.Threading;\n\npublic class Program\n{\n    [DllImport("kernel32.dll")]\n    private static extern bool GenerateConsoleCtrlEvent(uint dwCtrlEvent, uint dwProcessGroupId);\n\n    private const int CTRL_C_EVENT = 0;\n\n    public static void Main()\n    {\n        ProcessStartInfo info = new ProcessStartInfo("your_exe", "args");\n        info.RedirectStandardError = true;\n        info.RedirectStandardInput = true;\n        info.RedirectStandardOutput = true;\n        info.UseShellExecute = false;\n        info.CreateNoWindow = true;\n\n        using (Process p = Process.Start(info))\n        {\n            // Start a thread to send Ctrl+C after some input\n            Thread ctrlCThread = new Thread(() => SendCtrlC(p.Id));\n            \n            p.StandardInput.AutoFlush = true;\n            p.StandardInput.WriteLine("scriptcode");  // or your data\n            \n            ctrlCThread.Start();\n\n            string output = p.StandardOutput.ReadToEnd();\n            string error = p.StandardError.ReadToEnd();\n\n            Console.WriteLine("Output: " + output);\n            if (!string.IsNullOrEmpty(error))\n                throw new Exception("Error: " + error);\n\n            p.WaitForExit();\n        }\n    }\n\n    private static void SendCtrlC(int processId)\n    {\n        // Give the process some time to initialize and start receiving input\n        Thread.Sleep(1000); // Adjust timing as needed\n\n        GenerateConsoleCtrlEvent((uint)CTRL_C_EVENT, 0);\n    }\n}