using System;\nusing System.Security.Cryptography;\nusing System.IO;\nusing System.Text;\n\npublic class SymmetricEncryptionHelper\n{\n    public static byte[] Encrypt(string plainText, byte[] key, byte[] iv)\n    {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException("plainText");\n        if (key == null || key.Length <= 0)\n            throw new ArgumentNullException("key");\n        if (iv == null || iv.Length <= 0)\n            throw new ArgumentNullException("iv");\n\n        using (AesCryptoServiceProvider aesAlg = new AesCryptoServiceProvider())\n        {\n            aesAlg.Key = key;\n            aesAlg.IV = iv;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        swEncrypt.Write(plainText);\n                    }\n                    return msEncrypt.ToArray();\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(byte[] cipherText, byte[] key, byte[] iv)\n    {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException("cipherText");\n        if (key == null || key.Length <= 0)\n            throw new ArgumentNullException("key");\n        if (iv == null || iv.Length <= 0)\n            throw new ArgumentNullException("iv");\n\n        using (AesCryptoServiceProvider aesAlg = new AesCryptoServiceProvider())\n        {\n            aesAlg.Key = key;\n            aesAlg.IV = iv;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n\n    // Example usage:\n    public static void Main()\n    {\n        string original = "Here is some data to encrypt!";\n        byte[] key = Convert.FromBase64String("your-base64-encoded-key-here");\n        byte[] iv = Convert.FromBase64String("your-base64-encoded-iv-here");\n\n        // Encrypt the string to an array of bytes.\n        byte[] encrypted = Encrypt(original, key, iv);\n\n        // Decrypt the bytes to a string.\n        string decrypted = Decrypt(encrypted, key, iv);\n\n        Console.WriteLine($"Original: {original}");\n        Console.WriteLine($"Encrypted: {Convert.ToBase64String(encrypted)}");\n        Console.WriteLine($"Decrypted: {decrypted}");\n    }\n}