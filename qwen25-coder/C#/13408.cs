using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program {\n    static void Main() {\n        string original = "Here is some data to encrypt!";\n        byte[] encrypted = EncryptStringToBytes_Aes(original, new byte[16], new byte[16]);\n        string decrypted = DecryptStringFromBytes_Aes(encrypted, new byte[16], new byte[16]);\n\n        Console.WriteLine("Original:   {0}", original);\n        Console.WriteLine("Decrypted:  {0}", decrypted);\n    }\n\n    static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV) {\n        // Check arguments.\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException(nameof(plainText));\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException(nameof(Key));\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException(nameof(IV));\n\n        byte[] encrypted;\n\n        // Create an Aes object with the specified key and IV.\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create the streams used for encryption.\n            using (MemoryStream msEncrypt = new MemoryStream()) {\n                using (CryptoStream csEncrypt =\n                    new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)) {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt)) {\n                        swEncrypt.Write(plainText);\n                    }\n                    encrypted = msEncrypt.ToArray();\n                }\n            }\n        }\n\n        // Return the encrypted bytes from the memory stream.\n        return encrypted;\n    }\n\n    static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV) {\n        // Check arguments.\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException(nameof(cipherText));\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException(nameof(Key));\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException(nameof(IV));\n\n        // Declare the string used to hold the decrypted text.\n        string plaintext = null;\n\n        // Create an Aes object with the specified key and IV.\n        using (Aes aesAlg = Aes.Create()) {\n            aesAlg.Key = Key;\n            aesAlg.IV = IV;\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            // Create the streams used for decryption.\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText)) {\n                using (CryptoStream csDecrypt =\n                    new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)) {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt)) {\n                        plaintext = srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n\n        return plaintext;\n    }\n}