using System;\nusing System.Collections.Generic;\nusing System.Data.OleDb;\nusing Microsoft.SqlServer.Dts.Pipeline.Wrapper;\nusing Microsoft.SqlServer.Dts.Runtime.Wrapper;\n\n[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]\npublic class ScriptMain : UserComponent\n{\n    private Dictionary<string, int> columnMap = new Dictionary<string, int>();\n\n    public override void CreateNewOutputRows()\n    {\n        string filename = this.Variables.Filename; // Assume Filename is a SSIS Variable\n        using (var sr = new System.IO.StreamReader(filename))\n        {\n            // Read header row\n            var headers = sr.ReadLine().Split(',');\n            for (int i = 0; i < headers.Length; i++)\n            {\n                columnMap[headers[i]] = i;\n            }\n\n            // Read data rows\n            string line;\n            while ((line = sr.ReadLine()) != null)\n            {\n                var values = line.Split(',');\n                Output0Buffer.AddRow();\n                \n                if (columnMap.ContainsKey("OurReference"))\n                    Output0Buffer.OurReference = int.Parse(values[columnMap["OurReference"]]);\n\n                if (columnMap.ContainsKey("Client"))\n                    Output0Buffer.Client = values[columnMap["Client"]];\n                \n                if (columnMap.ContainsKey("Amount"))\n                    Output0Buffer.Amount = decimal.Parse(values[columnMap["Amount"]]);\n            }\n        }\n    }\n\n    public override void PreExecute()\n    {\n        base.PreExecute();\n    }\n\n    public override void PostExecute()\n    {\n        base.PostExecute();\n    }\n}