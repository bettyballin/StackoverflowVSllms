private void SetupDataGridView()\n{\n    // Set grid style\n    dataGridView1.EnableHeadersVisualStyles = false;\n    dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.SteelBlue;\n    dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n    dataGridView1.ColumnHeadersDefaultCellStyle.Font = new Font("Segoe UI", 10, FontStyle.Bold);\n    \n    dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.SingleHorizontal;\n    dataGridView1.GridColor = Color.FromArgb(204, 204, 204);\n\n    // Alternating row colors for better readability\n    dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.LavenderBlush;\n\n    // Disable row headers if not needed\n    dataGridView1.RowHeadersVisible = false;\n    \n    // Auto-size columns based on content\n    dataGridView1.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;\n\n    // Custom painting for cells (optional)\n    dataGridView1.CellPainting += DataGridView1_CellPainting;\n}\n\nprivate void DataGridView1_CellPainting(object sender, DataGridViewCellPaintingEventArgs e)\n{\n    if (e.RowIndex >= 0 && e.ColumnIndex >= 0) // Avoid header and row index\n    {\n        // Add custom drawing code here if needed\n        // For example, adding background images or icons to cells.\n\n        // Call base method so other painting logic for cell continues\n        e.Paint(e.CellBounds, DataGridViewPaintParts.All);\n    }\n}