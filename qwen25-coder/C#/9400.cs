using System;\nusing System.IO;\n\nclass FileSyncExample\n{\n    private static void Main()\n    {\n        string sourcePath = @"C:\SourceFolder";\n        string destPath = @"D:\DestinationFolder";\n\n        FileSystemWatcher watcher = new FileSystemWatcher();\n        watcher.Path = sourcePath;\n        watcher.NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.FileName | NotifyFilters.DirectoryName;\n\n        watcher.Changed += (s, e) => SyncFiles(sourcePath, destPath, e.FullPath);\n        watcher.Created += (s, e) => SyncFiles(sourcePath, destPath, e.FullPath);\n        watcher.Deleted += (s, e) => DeleteFile(destPath, e.Name);\n\n        watcher.IncludeSubdirectories = true;\n        watcher.EnableRaisingEvents = true;\n\n        Console.WriteLine("Press 'q' to quit the sample.");\n        while (Console.Read() != 'q') ;\n    }\n\n    private static void SyncFiles(string sourcePath, string destPath, string fileChanged)\n    {\n        string fileToCopy = Path.Combine(sourcePath, fileChanged.Substring(fileChanged.IndexOf(sourcePath) + sourcePath.Length));\n        string destinationFile = Path.Combine(destPath, fileChanged.Substring(fileChanged.IndexOf(sourcePath) + sourcePath.Length));\n\n        if (!Directory.Exists(Path.GetDirectoryName(destinationFile)))\n            Directory.CreateDirectory(Path.GetDirectoryName(destinationFile));\n\n        File.Copy(fileToCopy, destinationFile, true);\n    }\n\n    private static void DeleteFile(string destPath, string fileName)\n    {\n        string filePath = Path.Combine(destPath, fileName);\n\n        if (File.Exists(filePath))\n        {\n            File.Delete(filePath);\n        }\n    }\n}