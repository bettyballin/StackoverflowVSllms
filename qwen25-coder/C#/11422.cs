public class ImageHandler : IHttpHandler\n{\n    public void ProcessRequest(HttpContext context)\n    {\n        // Check for session validity (or token) and user permissions\n        if (!context.User.Identity.IsAuthenticated || !UserHasAccessToImage(context))\n        {\n            context.Response.StatusCode = 401; // Unauthorized\n            return;\n        }\n\n        // Load image from database based on query string or other identifier\n        byte[] imageData = LoadImageFromDatabase(); // Implement this method\n\n        if (imageData == null)\n        {\n            context.Response.StatusCode = 404; // Not Found\n            return;\n        }\n\n        context.Response.ContentType = "image/jpeg"; // Adjust content type as necessary\n        context.Response.OutputStream.Write(imageData, 0, imageData.Length);\n    }\n\n    private bool UserHasAccessToImage(HttpContext context)\n    {\n        int userId = (int)context.Session["UserId"]; // Assume UserId is stored in session\n        int imageId; // You need to determine how you pass the image ID, e.g., from query string\n\n        // Check if userId has access to imageId\n        return Database.CheckUserImageAccess(userId, imageId);\n    }\n\n    private byte[] LoadImageFromDatabase()\n    {\n        // Implement this method to fetch image data from your database\n        throw new NotImplementedException();\n    }\n\n    public bool IsReusable => false;\n}