using System;\nusing System.IO;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\npublic async Task CopyFileAsync(string inFilename, string outFilename, ProgressBar progressBar)\n{\n    const int bufferSize = 4096; // You can adjust the buffer size as needed\n\n    using (var sourceStream = new FileStream(inFilename, FileMode.Open, FileAccess.Read, FileShare.Read, bufferSize, true))\n    using (var destinationStream = new FileStream(outFilename, FileMode.Create, FileAccess.Write, FileShare.None, bufferSize, true))\n    {\n        var buffer = new byte[bufferSize];\n        int bytesRead;\n        \n        while ((bytesRead = await sourceStream.ReadAsync(buffer, 0, buffer.Length)) > 0)\n        {\n            await destinationStream.WriteAsync(buffer, 0, bytesRead);\n            \n            // Update the progress bar on the UI thread\n            progressBar.Invoke(new Action(() =>\n            {\n                progressBar.Value += bytesRead;\n            }));\n        }\n    }\n}\n\n// Usage example:\nprivate async void StartCopyButton_Click(object sender, EventArgs e)\n{\n    string inFilename = @"C:\path\to\largefile.dat";\n    string outFilename = @"D:\destination\largefile.dat";\n\n    // Initialize the progress bar\n    progressBar1.Value = 0;\n    progressBar1.Maximum = new FileInfo(inFilename).Length;\n\n    await CopyFileAsync(inFilename, outFilename, progressBar1);\n}