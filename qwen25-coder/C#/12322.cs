using DocumentFormat.OpenXml;\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Spreadsheet;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Define the path and name of the new Excel file.\n        string docName = @"HelloWorld.xlsx";\n\n        // Create a new spreadsheet document by supplying the full file path.\n        SpreadsheetDocument spreadsheetDoc = SpreadsheetDocument.Create(docName, DocumentFormat.OpenXml.SpreadsheetDocumentType.Workbook);\n\n        WorkbookPart workbookPart = spreadsheetDoc.AddWorkbookPart();\n        workbookPart.Workbook = new Workbook();\n\n        WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\n        worksheetPart.Worksheet = new Worksheet();\n\n        Sheets sheets = spreadsheetDoc.WorkbookPart.Workbook.AppendChild(new Sheets());\n\n        Sheet sheet = new Sheet()\n        {\n            Id = spreadsheetDoc.WorkbookPart.GetIdOfPart(worksheetPart),\n            SheetId = 1,\n            Name = "Sheet1"\n        };\n\n        sheets.Append(sheet);\n\n        // Create a row in the worksheet.\n        Row row = new Row() { RowIndex = 1U };\n        \n        // Create cells with hard-coded values for demonstration purposes.\n        Cell cell1 = new Cell()\n        {\n            CellValue = new CellValue("Hello"),\n            DataType = new EnumValue<CellValues>(CellValues.String),\n            CellReference = "A1"\n        };\n\n        Cell cell2 = new Cell()\n        {\n            CellValue = new CellValue("World!"),\n            DataType = new EnumValue<CellValues>(CellValues.String),\n            CellReference = "B1"\n        };\n\n        // Add the cells to the row.\n        row.Append(cell1);\n        row.Append(cell2);\n\n        SheetData sheetData = worksheetPart.Worksheet.AppendChild(new SheetData());\n        sheetData.Append(row);\n\n        workbookDoc.Close();\n    }\n}