public class MyClass\n{\n    public event EventHandler MyEvent;\n\n    public void RaiseMyEvent()\n    {\n        MyEvent?.Invoke(this, EventArgs.Empty);\n    }\n}\n\npublic class EventSubscriber\n{\n    private MyClass _myClassInstance;\n\n    public EventSubscriber(MyClass myClass)\n    {\n        _myClassInstance = myClass;\n        // Manually subscribe to the event without special keywords.\n        _myClassInstance.MyEvent += HandleMyEvent;\n    }\n\n    private void HandleMyEvent(object sender, EventArgs e)\n    {\n        Console.WriteLine("Event handled!");\n    }\n\n    // Don't forget to unsubscribe if necessary to avoid memory leaks.\n    public void Unsubscribe()\n    {\n        _myClassInstance.MyEvent -= HandleMyEvent;\n    }\n}