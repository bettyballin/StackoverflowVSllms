using System;\nusing System.Runtime.InteropServices;\n\nclass UsbCycler\n{\n    [DllImport("setupapi.dll", CharSet = CharSet.Auto)]\n    private static extern IntPtr SetupDiGetClassDevs(ref Guid classGuid, IntPtr enumerator, IntPtr hwndParent, uint flags);\n\n    [DllImport("setupapi.dll", CharSet = CharSet.Auto)]\n    private static extern bool SetupDiEnumDeviceInfo(IntPtr deviceInfoSet, uint memberIndex, SP_DEVINFO_DATA deviceInfoData);\n\n    [DllImport("setupapi.dll")]\n    private static extern bool SetupDiCallClassInstaller(uint installFunction, IntPtr deviceInfoSet, SP_DEVINFO_DATA deviceInfoData);\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct Guid\n    {\n        public int Data1;\n        public short Data2;\n        public short Data3;\n        [MarshalAs(UnmanagedType.ByValArray, SizeConst = 8)]\n        public byte[] Data4;\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    public class SP_DEVINFO_DATA\n    {\n        public uint cbSize;\n        public Guid ClassGuid;\n        public uint DevInst; // DEVINST handle to instance of devinfo element\n        public IntPtr Reserved;\n    }\n\n    private const int DIGCF_PRESENT = 0x02;\n    private const int DIF_REMOVE = 5;\n\n    [DllImport("setupapi.dll", CharSet = CharSet.Auto)]\n    private static extern bool SetupDiDestroyDeviceInfoList(IntPtr deviceInfoSet);\n\n    public void EjectDevice(Guid classGuid)\n    {\n        var deviceInfoSet = SetupDiGetClassDevs(ref classGuid, IntPtr.Zero, IntPtr.Zero,\n            DIGCF_PRESENT);\n        if (deviceInfoSet.ToInt32() != -1)\n        {\n            var deviceData = new SP_DEVINFO_DATA();\n            deviceData.cbSize = (uint)Marshal.SizeOf(deviceData);\n\n            for (var i = 0; SetupDiEnumDeviceInfo(deviceInfoSet, (uint)i, deviceData); i++)\n            {\n                SetupDiCallClassInstaller(DIF_REMOVE, deviceInfoSet, deviceData);\n            }\n\n            SetupDiDestroyDeviceInfoList(deviceInfoSet);\n        }\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        Guid guidUSBDevice = new() { Data1 = -382540657,\n            Data2 = 5945, Data3 = 4612,\n            Data4 = new byte[] { 146, 237, 27, 137, 25, 172, 184, 97 } };\n\n        UsbCycler cycler = new();\n        cycler.EjectDevice(guidUSBDevice);\n    }\n}