using System;\nusing System.ServiceProcess;\nusing System.Threading;\n\npublic class ServiceWatcher : IDisposable\n{\n    private readonly ServiceController _w3svc;\n    private bool _disposed = false;\n    private Thread _watchThread;\n\n    public ServiceWatcher()\n    {\n        _w3svc = new ServiceController("W3SVC");\n        _watchThread = new Thread(WatchServiceChanges);\n        _watchThread.Start();\n    }\n\n    private void WatchServiceChanges()\n    {\n        while (!_disposed)\n        {\n            try\n            {\n                var status = _w3svc.Status;\n                if (status == ServiceControllerStatus.Running ||\n                    status == ServiceControllerStatus.Stopped)\n                {\n                    // Log the status change or trigger a restart of your service here.\n                    Console.WriteLine($"W3SVC Service Status Changed: {status}");\n                    \n                    if (status == ServiceControllerStatus.Running)\n                    {\n                        // Restart your service logic here\n                        Console.WriteLine("Restarting my service...");\n                    }\n                }\n\n                Thread.Sleep(5000); // Check every 5 seconds\n            }\n            catch (Exception ex)\n            {\n                // Handle any exceptions that occur while checking the W3SVC status.\n                Console.WriteLine($"Error: {ex.Message}");\n            }\n        }\n    }\n\n    public void Dispose()\n    {\n        if (!_disposed)\n        {\n            _disposed = true;\n            _watchThread.Join();\n            _w3svc.Dispose();\n        }\n    }\n}