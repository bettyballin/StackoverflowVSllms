public class UnitOfWork : IUnitOfWork\n{\n    private readonly ISessionFactory _sessionFactory;\n    private ISession _session;\n\n    public UnitOfWork(ISessionFactory sessionFactory)\n    {\n        _sessionFactory = sessionFactory;\n    }\n\n    public ISession Session => _session ?? (_session = _sessionFactory.OpenSession());\n\n    public void Save()\n    {\n        if (_session != null && _session.Transaction.IsActive)\n            _session.Transaction.Commit();\n    }\n\n    public void Dispose()\n    {\n        if (_session != null)\n        {\n            if (_session.Transaction.IsActive)\n                _session.Transaction.Rollback();\n\n            _session.Close();\n            _session.Dispose();\n        }\n    }\n}