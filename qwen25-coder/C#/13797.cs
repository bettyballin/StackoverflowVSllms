using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\npublic class AesEncryption\n{\n    public static string EncryptString(string plainText, byte[] key)\n    {\n        if (plainText == null || plainText.Length <= 0)\n            throw new ArgumentNullException(nameof(plainText));\n        if (key == null || key.Length <= 0)\n            throw new ArgumentNullException(nameof(key));\n\n        using (Aes aesAlg = Aes.Create())\n        {\n            aesAlg.Key = key;\n            aesAlg.GenerateIV();\n\n            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msEncrypt = new MemoryStream())\n            {\n                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                {\n                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))\n                    {\n                        //Write all data to the stream.\n                        swEncrypt.Write(plainText);\n                    }\n                }\n\n                byte[] encrypted = msEncrypt.ToArray();\n                return Convert.ToBase64String(aesAlg.IV.Concat(encrypted).ToArray());\n            }\n        }\n    }\n\n    public static string DecryptString(string cipherText, byte[] key)\n    {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException(nameof(cipherText));\n        if (key == null || key.Length <= 0)\n            throw new ArgumentNullException(nameof(key));\n\n        using (Aes aesAlg = Aes.Create())\n        {\n            byte[] cipherTextBytes = Convert.FromBase64String(cipherText);\n            aesAlg.Key = key;\n            aesAlg.IV = cipherTextBytes.Take(aesAlg.BlockSize / 8).ToArray();\n\n            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n            using (MemoryStream msDecrypt = new MemoryStream())\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Write))\n                {\n                    using (BinaryWriter swDecrypt = new BinaryWriter(csDecrypt))\n                    {\n                        swDecrypt.Write(cipherTextBytes, aesAlg.BlockSize / 8, cipherTextBytes.Length - aesAlg.BlockSize / 8);\n                    }\n                }\n\n                return Encoding.UTF8.GetString(msDecrypt.ToArray());\n            }\n        }\n    }\n}