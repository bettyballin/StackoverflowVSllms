using System;\nusing System.Drawing.Printing;\n\npublic class PrintToPdfExample\n{\n    static void Main()\n    {\n        // Create an instance of PrintDocument\n        PrintDocument document = new PrintDocument();\n        \n        // Assign a handler for the PrintPage event\n        document.PrintPage += new PrintPageEventHandler(PrintPageHandler);\n        \n        try\n        {\n            // Set PDFCreator as default printer (setup needs to be done separately)\n            string pdfCreatorPrinterName = "PDFCreator";\n            \n            // Make sure the selected printer is set before printing.\n            if (document.PrinterSettings.InstalledPrinters.Cast<string>().Contains(pdfCreatorPrinterName))\n            {\n                document.PrinterSettings.PrinterName = pdfCreatorPrinterName;\n                \n                // Print the document\n                document.Print();\n            }\n            else\n            {\n                throw new ArgumentException("PDFCreator not found in installed printers.");\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"An error occurred: {ex.Message}");\n        }\n    }\n\n    private static void PrintPageHandler(object sender, PrintPageEventArgs e)\n    {\n        // Example content\n        string text = "Hello, world!";\n        \n        // Text position in the page\n        System.Drawing.Point locationToPrint = new System.Drawing.Point(100, 150);\n        \n        // Drawing the text to printing surface\n        e.Graphics.DrawString(text, new System.Drawing.Font("Verdana", 24, System.Drawing.FontStyle.Regular), new System.Drawing.Brushes.Black(), locationToPrint);\n    }\n}