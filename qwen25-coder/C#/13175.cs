using Microsoft.Office.Interop.Outlook;\n\npublic void CreateOutlookRule()\n{\n    // Get an instance of the current Outlook application.\n    Application outlookApp = new Application();\n\n    // Get the namespace (MAPI) and logon using default profile.\n    NameSpace mapiNamespace = outlookApp.GetNamespace("MAPI");\n    mapiNamespace.Logon(null, null, false, true);\n\n    try\n    {\n        // Access the collection of rules in the Outlook application.\n        Rules rulesCollection = mapiNamespace.DefaultStore.GetRules();\n\n        // Create a new rule object by calling Add method.\n        Rule myRule = rulesCollection.Create("Move Specific Emails", OlRuleType.olRuleReceive);\n        \n        // Set conditions and actions for the rule\n        // For example, move emails containing specific text in the subject line to a folder\n        RuleCondition subjectCondition = (myRule.Conditions.Subject as RuleConditionText) ?? myRule.Conditions.Subject;\n        subjectCondition.TextRuleType = OlTextRuleConditionType.olContains;\n        string[] keywordsArray = { "specific keyword" };\n        subjectCondition.ConditionText = keywordsArray;\n\n        // Define the action - move to a specific folder\n        Folder targetFolder = mapiNamespace.Folders["YourEmail@example.com"].Folders["xyz"];\n        RuleAction moveToAction = (myRule.Actions.MoveToFolder as RuleActionMoveOrCopy) ?? myRule.Actions.MoveToFolder;\n        moveToAction.Folder = targetFolder;\n\n        // Enable rule.\n        myRule.Enabled = true;\n\n        try\n        {\n            // Save the collection after changes are made.\n            rulesCollection.Save(true);\n        }\n        catch (System.Exception ex)\n        {\n            System.Diagnostics.Debug.WriteLine(string.Format("Exception: {0}", ex.Message));\n        }        \n    }\n    finally\n    {\n        mapiNamespace.Logoff();\n    }\n}