public class DatabaseConnectionFactory : IDatabaseConnectionFactory\n{\n    private readonly IConfiguration _configuration;\n\n    public DatabaseConnectionFactory(IConfiguration configuration)\n    {\n        _configuration = configuration;\n    }\n\n    public DbContext CreateDbContext(string clientIdentifier, string connectionStringKey)\n    {\n        string commonConnectionString = _configuration.GetConnectionString(connectionStringKey);\n        using (var commonContext = new CommonDbContext(commonConnectionString))\n        {\n            // Fetch the specific database connection string for this client\n            var clientConnectionInfo = commonContext.ClientConnections.FirstOrDefault(c => c.ClientId == clientIdentifier);\n            \n            if (clientConnectionInfo == null)\n                throw new Exception("Client not found");\n\n            DbContextOptionsBuilder<ApplicationDbContext> optionsBuilder = new DbContextOptionsBuilder<ApplicationDbContext>();\n            optionsBuilder.UseSqlServer(clientConnectionInfo.ConnectionString);\n\n            return new ApplicationDbContext(optionsBuilder.Options);\n        }\n    }\n}