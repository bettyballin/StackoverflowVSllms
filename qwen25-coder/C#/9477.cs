public class User\n{\n    public int UserId { get; set; }\n    public string Username { get; set; }\n    public Type UserType { get; set; }\n    public Image UserImage { get; set; }\n}\n\npublic class Image\n{\n    public int ImageId { get; set; }\n    public string Location { get; set; }\n    public Type ImageType { get; set; }\n}\n\npublic class Type\n{\n    public int TypeId { get; set; }\n    public string Description { get; set; }\n}\n\npublic class YourDbContext : DbContext\n{\n    public DbSet<User> Users { get; set; }\n    public DbSet<Image> Images { get; set; }\n    public DbSet<Type> Types { get; set; }\n\n    protected override void OnModelCreating(DbModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<User>()\n            .HasRequired(u => u.UserType)\n            .WithMany()\n            .HasForeignKey(u => u.UserTypeId);\n\n        modelBuilder.Entity<User>()\n            .HasOptional(u => u.UserImage) // Assuming it's optional\n            .WithRequiredPrincipal();\n\n        modelBuilder.Entity<Image>()\n            .HasRequired(i => i.ImageType)\n            .WithMany()\n            .HasForeignKey(i => i.ImageTypeId);\n    }\n}