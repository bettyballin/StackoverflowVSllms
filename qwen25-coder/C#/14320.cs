using System;\nusing System.Collections.Generic;\n\npublic class NaturalSort : IComparer<string>\n{\n    public int Compare(string s1, string s2)\n    {\n        if (string.IsNullOrEmpty(s1) && string.IsNullOrEmpty(s2)) return 0;\n        if (string.IsNullOrEmpty(s1)) return -1;\n        if (string.IsNullOrEmpty(s2)) return 1;\n\n        int len1 = s1.Length;\n        int len2 = s2.Length;\n        int marker1 = 0, marker2 = 0;\n\n        while ((marker1 < len1) || (marker2 < len2))\n        {\n            string chunk1 = ExtractChunk(s1, ref marker1);\n            string chunk2 = ExtractChunk(s2, ref marker2);\n\n            int result;\n            bool diffNumericOnly = AreAllDigits(chunk1) && AreAllDigits(chunk2);\n\n            if (diffNumericOnly)\n                result = Convert.ToInt32(chunk1).CompareTo(Convert.ToInt32(chunk2));\n            else\n                result = String.Compare(chunk1, chunk2, StringComparison.OrdinalIgnoreCase);\n\n            if (result != 0) return result;\n        }\n\n        return len1.CompareTo(len2);\n    }\n\n    private string ExtractChunk(string str, ref int marker)\n    {\n        var sb = new System.Text.StringBuilder();\n        bool allNumbers = true;\n\n        while (marker < str.Length)\n        {\n            char ch = str[marker];\n            if (!Char.IsDigit(ch) && (sb.Length > 0))\n                break;\n\n            allNumbers &= Char.IsDigit(ch);\n            sb.Append(ch);\n            marker += 1;\n        }\n\n        if (allNumbers)\n        {\n            while ((marker < str.Length) && (str[marker] == '0'))\n            {\n                sb.Insert(0, '0');\n                marker++;\n            }\n        }\n\n        return sb.ToString();\n    }\n\n    private bool AreAllDigits(string s)\n    {\n        foreach (char ch in s)\n            if (!Char.IsDigit(ch)) return false;\n\n        return true;\n    }\n}\n\npublic class FileInfoComparer : IComparer<FileInfo>\n{\n    private readonly NaturalSort _naturalSort = new NaturalSort();\n\n    public int Compare(FileInfo x, FileInfo y)\n    {\n        return _naturalSort.Compare(x.Name, y.Name);\n    }\n}