// Split the huge string into smaller chunks\nstring HugeString = new String('X', 926300);\nconst int chunkSize = 100000; // Define a safe chunk size\n\nCodeMemberField field = new CodeMemberField();\nfield.Name = "HugeString";\nfield.Type = new CodeTypeReference(typeof(String));\nfield.Attributes = MemberAttributes.Public | MemberAttributes.Const;\n\n// Create the expression for concatenating chunks\nCodeExpression expr = null;\nfor (int i = 0; i < HugeString.Length; i += chunkSize)\n{\n    string chunk = HugeString.Substring(i, Math.Min(chunkSize, HugeString.Length - i));\n    CodeExpression chunkExpr = new CodePrimitiveExpression(chunk);\n\n    if (expr == null)\n    {\n        expr = chunkExpr;\n    }\n    else\n    {\n        expr = new CodeBinaryOperatorExpression(expr, CodeBinaryOperatorType.Add, chunkExpr);\n    }\n}\n\nfield.InitExpression = expr;\ntype.Members.Add(field);