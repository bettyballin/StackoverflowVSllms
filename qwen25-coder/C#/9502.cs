using System;\nusing System.Threading;\n\nclass Example : IDisposable\n{\n    private EventWaitHandle _eventWaitHandle;\n\n    public Example()\n    {\n        _eventWaitHandle = new AutoResetEvent(false);\n    }\n\n    // Other methods using _eventWaitHandle...\n\n    public void Dispose()\n    {\n        Dispose(true);\n        GC.SuppressFinalize(this);\n    }\n\n    protected virtual void Dispose(bool disposing)\n    {\n        if (disposing && _eventWaitHandle != null)\n        {\n            _eventWaitHandle.Dispose();\n            _eventWaitHandle = null;\n        }\n    }\n\n    ~Example()\n    {\n        // Finalizer calls Dispose(false)\n        Dispose(false);\n    }\n}