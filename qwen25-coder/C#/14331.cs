using System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nclass Program\n{\n    static void Main()\n    {\n        // Replace these with your actual encrypted base64 string, key, and IV\n        string encryptedBase64 = "your_encrypted_base64_string_here";\n        byte[] key = Encoding.UTF8.GetBytes("0123456789abcdef"); // 16 bytes key for DESede (3DES), needs to be 24 bytes for full 3DES\n        byte[] iv = Encoding.UTF8.GetBytes("your_iv_here"); // Must be 8 bytes\n\n        string decrypted = DecryptStringFromBytesTripleDES(Convert.FromBase64String(encryptedBase64), key, iv);\n        Console.WriteLine(decrypted);\n    }\n\n    static string DecryptStringFromBytesTripleDES(byte[] cipherText, byte[] Key, byte[] IV)\n    {\n        if (cipherText == null || cipherText.Length <= 0)\n            throw new ArgumentNullException("cipherText");\n        if (Key == null || Key.Length <= 0)\n            throw new ArgumentNullException("Key");\n        if (IV == null || IV.Length <= 0)\n            throw new ArgumentNullException("IV");\n\n        // Declare the TripleDES service provider.\n        using (TripleDESCryptoServiceProvider tripleDes = new TripleDESCryptoServiceProvider())\n        {\n            tripleDes.Key = Key;\n            tripleDes.IV = IV;\n\n            // Create an encryptor to perform the stream transform.\n            ICryptoTransform decryptor = tripleDes.CreateDecryptor(tripleDes.Key, tripleDes.IV);\n\n            // Create the streams used for decryption.\n            using (MemoryStream msDecrypt = new MemoryStream(cipherText))\n            {\n                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                {\n                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))\n                    {\n                        // Read the decrypted bytes from the decrypting stream and place them in a string.\n                        return srDecrypt.ReadToEnd();\n                    }\n                }\n            }\n        }\n    }\n}