using System;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\n\npublic class BaseController : Controller\n{\n    protected override void OnActionExecuting(ActionExecutingContext filterContext)\n    {\n        if (!IsSafeMethod(filterContext.HttpContext.Request))\n        {\n            string cookieName = "XSRF-Token";\n            var cookie = HttpContext.Request.Cookies[cookieName];\n\n            if (cookie == null || !string.Equals(cookie.Value, HttpContext.Request.Form[cookieName], StringComparison.Ordinal))\n            {\n                filterContext.Result = new RedirectResult("/Error/XsrfAttackDetected"); // Send to error or custom handler\n            }\n        }\n\n        base.OnActionExecuting(filterContext);\n    }\n\n    private static bool IsSafeMethod(HttpRequestBase request)\n    {\n        return string.Equals(request.HttpMethod, "GET", StringComparison.OrdinalIgnoreCase) ||\n               string.Equals(request.HttpMethod, "HEAD", StringComparison.OrdinalIgnoreCase) ||\n               string.Equals(request.HttpMethod, "OPTIONS", StringComparison.OrdinalIgnoreCase) ||\n               string.Equals(request.HttpMethod, "TRACE", StringComparison.OrdinalIgnoreCase);\n    }\n}