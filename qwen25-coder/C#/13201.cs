using Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.Extensions.DependencyInjection;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Threading.Tasks;\n\npublic class Startup\n{\n    public void ConfigureServices(IServiceCollection services)\n    {\n        // Register HttpClient\n        services.AddHttpClient();\n    }\n\n    public void Configure(IApplicationBuilder app, IHttpClientFactory clientFactory)\n    {\n        var httpClient = clientFactory.CreateClient();\n\n        app.Run(async (context) =>\n        {\n            string targetUri = "http://your-internal-server" + context.Request.Path;\n\n            // Forward request to the internal server\n            using (var requestMessage = new HttpRequestMessage())\n            {\n                CopyRequestHeaders(context, ref requestMessage);\n                requestMessage.Headers.Host = "your-internal-server";\n                requestMessage.Method = new HttpMethod(context.Request.Method);\n                requestMessage.Content = new StreamContent(context.Request.Body);\n\n                using (var responseMessage = await httpClient.SendAsync(requestMessage))\n                {\n                    context.Response.StatusCode = (int)responseMessage.StatusCode;\n                    CopyResponseHeaders(responseMessage, context.Response);\n                    await responseMessage.Content.CopyToAsync(context.Response.Body);\n                }\n            }\n        });\n    }\n\n    private static void CopyRequestHeaders(HttpContext src, ref HttpRequestMessage dest)\n    {\n        foreach (var header in src.Request.Headers)\n        {\n            if (!dest.Headers.TryAddWithoutValidation(header.Key, (string[])header.Value))\n                dest.Content.Headers.TryAddWithoutValidation(header.Key, (string[])header.Value);\n        }\n    }\n\n    private static void CopyResponseHeaders(HttpResponseMessage src, HttpResponse dest)\n    {\n        foreach (var header in src.Headers) dest.Headers[header.Key] = header.Value.ToArray();\n        foreach (var header in src.Content.Headers) dest.Headers[header.Key] = header.Value.ToArray();\n    }\n}