// Define an interface for your service\npublic interface IMyService\n{\n    void SomeMethod();\n}\n\n// Implement MyService with initialization in the method usage rather than constructor\npublic class MyService : IMyService\n{\n    private HttpServerUtilityBase _server;\n\n    public void Initialize(HttpServerUtilityBase server)\n    {\n        _server = server;\n    }\n\n    public void SomeMethod()\n    {\n        // Use _server here\n    }\n}\n\n// Base Controller class where you initialize your service in an overridden method or property getter\npublic class AppController : Controller\n{\n    private MyService _myService;\n\n    protected IMyService MyService\n    {\n        get\n        {\n            if (_myService == null)\n            {\n                _myService = new MyService();\n                _myService.Initialize(Server); // Ensure Server is not null here\n            }\n            return _myService;\n        }\n    }\n\n    public AppController() : base()\n    {\n        // Other initialization\n    }\n}