using Memcached.ClientLibrary;\n\n   public class MemcachedCacheProvider : ICustomCacheProvider\n   {\n       private readonly SockIOPool _pool;\n       private readonly MemcachedClient _client;\n\n       public MemcachedCacheProvider()\n       {\n           // Initialize connection to memcached server\n           string[] servers = { "127.0.0.1:11211" };\n           this._pool = SockIOPool.GetInstance();\n           this._pool.SetServers(servers);\n           this._pool.Initialize();\n\n           this._client = new MemcachedClient();\n       }\n\n       public void Delete(string key)\n       {\n           _client.Delete(key);\n       }\n\n       public object Get(string key)\n       {\n           return _client.Get(key);\n       }\n\n       public bool HasKey(string key)\n       {\n           var item = Get(key);\n           return item != null;\n       }\n\n       public void Store(string key, object data)\n       {\n           _client.Store(StoreMode.Set, key, data);\n       }\n   }