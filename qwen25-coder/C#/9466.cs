using System;\n   using System.IO;\n   using System.Security.Cryptography;\n\n   public class FileEncryptor\n   {\n       private static readonly byte[] Key = { /* 32 bytes key */ };\n       private static readonly byte[] IV = { /* 16 bytes initialization vector */ };\n\n       public void EncryptFile(string inputFile, string outputFile)\n       {\n           using (var aes = Aes.Create())\n           {\n               aes.Key = Key;\n               aes.IV = IV;\n\n               ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV);\n\n               using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n               using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n               using (CryptoStream cs = new CryptoStream(fsOutput, encryptor, CryptoStreamMode.Write))\n               {\n                   fsInput.CopyTo(cs);\n               }\n           }\n       }\n\n       public void DecryptFile(string inputFile, string outputFile)\n       {\n           using (var aes = Aes.Create())\n           {\n               aes.Key = Key;\n               aes.IV = IV;\n\n               ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);\n\n               using (FileStream fsInput = new FileStream(inputFile, FileMode.Open))\n               using (FileStream fsOutput = new FileStream(outputFile, FileMode.Create))\n               using (CryptoStream cs = new CryptoStream(fsInput, decryptor, CryptoStreamMode.Read))\n               {\n                   cs.CopyTo(fsOutput);\n               }\n           }\n       }\n   }