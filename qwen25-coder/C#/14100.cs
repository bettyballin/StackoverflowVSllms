// Example class structure\npublic class Calculator // Public class, can be instantiated from other classes\n{\n    private int result; // Private field only accessible within this class\n\n    public void Add(int value) // Public method to add a value, can be accessed from outside\n    {\n        result += value;\n    }\n\n    private void Reset() // Private method accessible only within the Calculator class\n    {\n        result = 0;\n    }\n\n    public static int Square(int number) // Static method that doesn't rely on an instance state\n    {\n        return number * number;\n    }\n}\n\npublic class FormClass // Your form class can interact with other classes\n{\n    private Calculator calculator; // Instance of Calculator\n\n    public FormClass()\n    {\n        calculator = new Calculator();\n    }\n\n    public void CalculateAndAdd(int value) // This method can be called from the UI\n    {\n        calculator.Add(value);\n        // Other logic...\n    }\n}