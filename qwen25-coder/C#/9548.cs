using System;\nusing System.IO;\nusing System.Net.Sockets;\n\nclass VirusScanner\n{\n    private const string Server = "127.0.0.1"; // IP address where clamd is running\n    private const int Port = 3310;           // Default port for clamd\n\n    public static bool ScanFile(string filePath)\n    {\n        if (!File.Exists(filePath))\n            throw new FileNotFoundException("The file to scan does not exist", filePath);\n\n        NetworkStream stream = null;\n\n        try\n        {\n            TcpClient client = new TcpClient(Server, Port);\n            stream = client.GetStream();\n\n            // Send the command to clamd for virus scanning\n            byte[] commandBytes = System.Text.Encoding.ASCII.GetBytes("STREAM\n");\n            stream.Write(commandBytes, 0, commandBytes.Length);\n\n            using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))\n            {\n                const int bufferSize = 8192;\n                byte[] buffer = new byte[bufferSize];\n                int bytesRead;\n\n                while ((bytesRead = fs.Read(buffer, 0, bufferSize)) > 0)\n                {\n                    // Send the size of data to clamd\n                    stream.WriteByte((byte)((uint)bytesRead >> 24));\n                    stream.WriteByte((byte)(((uint)bytesRead & 0x00FF0000) >> 16));\n                    stream.WriteByte((byte)(((uint)bytesRead & 0xFF00) >> 8));\n                    stream.WriteByte((byte)(bytesRead & 0xFF));\n\n                    // Send the actual data\n                    stream.Write(buffer, 0, bytesRead);\n                }\n            }\n\n            // End of file marker\n            byte[] eofMarker = new byte[4] { 0x00, 0x00, 0x00, 0x00 };\n            stream.Write(eofMarker, 0, eofMarker.Length);\n\n            // Read the result from clamd\n            byte[] responseBuffer = new byte[1024];\n            int responseSize = stream.Read(responseBuffer, 0, responseBuffer.Length);\n            string response = System.Text.Encoding.ASCII.GetString(responseBuffer, 0, responseSize).Trim();\n\n            return response.Contains("FOUND");\n        }\n        finally\n        {\n            stream?.Close();\n        }\n    }\n\n    static void Main()\n    {\n        string filePath = @"C:\path\to\your\file_here";\n        bool isInfected = ScanFile(filePath);\n        Console.WriteLine($"The file is {(isInfected ? "infected" : "clean")}.");\n    }\n}