using System;\nusing System.Collections.Generic;\nusing iText.Kernel.Pdf;\nusing iText.Kernel.Pdf.Canvas.Parser;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var pdfPath = "path_to_your_pdf.pdf";\n        using (PdfReader reader = new PdfReader(pdfPath))\n        using (PdfDocument document = new PdfDocument(reader))\n        {\n            for (int i = 1; i <= document.GetNumberOfPages(); i++)\n            {\n                string text = PdfTextExtractor.GetTextFromPage(document, i);\n                \n                // Here you would need to implement logic to parse\n                // the text into titles and descriptions.\n                // This is a basic example assuming titles are on their own lines.\n                var sections = text.Split('\n');\n                foreach (var section in sections)\n                {\n                    if (!string.IsNullOrWhiteSpace(section))\n                    {\n                        Console.WriteLine("Title: " + section.Trim());\n                        // Assuming description is next line, this needs proper logic\n                        string description = "";\n                        \n                        try\n                        {\n                            description = sections[Array.IndexOf(sections, section) + 1].Trim();\n                        }\n                        catch \n                        {\n                            // Handle index out of range or other exceptions\n                        }\n\n                        Console.WriteLine("Description: " + description);\n                        \n                        // Store in cache for search purpose\n                        // CacheStorage.Set(section.Trim(), description);\n                    }\n                }\n            }\n        }\n    }\n}