using Org.BouncyCastle.Crypto;\nusing Org.BouncyCastle.Crypto.EC;\nusing Org.BouncyCastle.Crypto.Parameters;\nusing Org.BouncyCastle.Math;\nusing Org.BouncyCastle.Security;\n\n// Generate ECC keypair (secp256r1)\nECDomainParameters ecSpec = ECNamedCurveTable.GetByOid("1.2.840.10045.3.1.7"); //NIST P-256\nECKeyGenerationParameters genParam = new ECKeyGenerationParameters(ecSpec, new SecureRandom());\nECKeyPairGenerator keyGen = new ECKeyPairGenerator();\nkeyGen.Init(genParam);\nAsymmetricCipherKeyPair pair = keyGen.GenerateKeyPair();\n\n// Get private and public keys as Base64 strings\nbyte[] privBytes = ((ECPrivateKeyParameters)pair.Private).D.ToByteArrayUnsigned();\nbyte[] pubBytes = ((ECPublicKeyParameters)pair.Public).Q.GetEncoded(false);\n\nstring privateKeyAsBase64 = Convert.ToBase64String(privBytes);\nstring publicKeyAsBase64 = Convert.ToBase64String(pubBytes);