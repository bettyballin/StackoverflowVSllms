using System;\nusing System.Net.Sockets;\nusing System.Windows.Forms;\n\npublic partial class MainForm : Form\n{\n    private Timer _timer;\n    private const string SqlServerIpAddress = "10.250.50.30";\n    private const int SqlServerPort = 1433;\n\n    public MainForm()\n    {\n        InitializeComponent();\n\n        // Setup a timer to check SQL server availability every 5 seconds\n        _timer = new Timer { Interval = 5000 };\n        _timer.Tick += CheckSqlServerAvailability;\n        _timer.Start();\n    }\n\n    private void CheckSqlServerAvailability(object sender, EventArgs e)\n    {\n        bool isAvailable = IsSqlAvailable(SqlServerIpAddress, SqlServerPort);\n        UpdateMergeSyncStatus(isAvailable);\n    }\n\n    private static bool IsSqlAvailable(string ipAddress, int port)\n    {\n        using (var tcpClient = new TcpClient())\n        {\n            try\n            {\n                // Try to connect to the SQL Server on the specified IP and Port\n                tcpClient.Connect(ipAddress, port);\n                return true;\n            }\n            catch\n            {\n                return false;\n            }\n        }\n    }\n\n    private void UpdateMergeSyncStatus(bool isAvailable)\n    {\n        // Update UI or handle merge sync availability accordingly\n        if (isAvailable)\n        {\n            mergeSyncButton.Enabled = true; // Example action: enable the button for merging\n        }\n        else\n        {\n            mergeSyncButton.Enabled = false; // Example action: disable the button\n        }\n    }\n}