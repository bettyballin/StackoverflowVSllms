using System;\nusing System.Text;\nusing System.Runtime.InteropServices;\n\nclass Program\n{\n    // Import CreateProcess from Kernel32.dll\n    [DllImport("coredll.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    static extern bool CreateProcess(\n        string lpApplicationName,\n        StringBuilder lpCommandLine,\n        IntPtr lpProcessAttributes,\n        IntPtr lpThreadAttributes,\n        bool bInheritHandles,\n        uint dwCreationFlags,\n        IntPtr lpEnvironment,\n        string lpCurrentDirectory,\n        ref STARTUPINFO lpStartupInfo,\n        out PROCESS_INFORMATION lpProcessInformation);\n\n    [StructLayout(LayoutKind.Sequential)]\n    struct PROCESS_INFORMATION\n    {\n        public IntPtr hProcess;\n        public IntPtr hThread;\n        public int dwProcessId;\n        public int dwThreadId;\n    }\n\n    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]\n    struct STARTUPINFO\n    {\n        public int cb;\n        public string lpReserved;\n        public string lpDesktop;\n        public string lpTitle;\n        public int dwX;\n        public int dwY;\n        public int dwXSize;\n        public int dwYSize;\n        public int dwXCountChars;\n        public int dwYCountChars;\n        public int dwFillAttribute;\n        public int dwFlags;\n        public short wShowWindow;\n        public short cbReserved2;\n        public IntPtr lpReserved2;\n        public IntPtr hStdInput;\n        public IntPtr hStdOutput;\n        public IntPtr hStdError;\n    }\n\n    static void Main()\n    {\n        string appPath = "YourApp.exe"; // Replace with your application path\n        StringBuilder commandLine = new StringBuilder(appPath);\n\n        STARTUPINFO startupInfo = new STARTUPINFO();\n        startupInfo.cb = Marshal.SizeOf(startupInfo);\n        startupInfo.wShowWindow = 0; // SW_HIDE to start the process hidden, or 6 for SW_MINIMIZE\n\n        PROCESS_INFORMATION procInfo;\n\n        bool success = CreateProcess(null, commandLine, IntPtr.Zero, IntPtr.Zero,\n            false, 0, IntPtr.Zero, null, ref startupInfo, out procInfo);\n\n        if (!success)\n        {\n            int error = Marshal.GetLastWin32Error();\n            Console.WriteLine("CreateProcess failed with error: " + error);\n        }\n    }\n}