using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main()\n    {\n        int[,] matrix = new int[10, 10];\n        // Initialize your matrix here if needed\n\n        foreach (int[,] subMatrix in GetSlidingWindows(matrix, 3))\n        {\n            PrintMatrix(subMatrix);\n            Console.WriteLine();\n        }\n    }\n\n    static IEnumerable<int[,]> GetSlidingWindows(int[,] matrix, int windowSize)\n    {\n        int rows = matrix.GetLength(0) - windowSize + 1;\n        int cols = matrix.GetLength(1) - windowSize + 1;\n\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < cols; j++)\n            {\n                yield return GetSubMatrix(matrix, i, j, windowSize);\n            }\n        }\n    }\n\n    static int[,] GetSubMatrix(int[,] matrix, int startRow, int startCol, int size)\n    {\n        int[,] subMatrix = new int[size, size];\n        for (int i = 0; i < size; i++)\n        {\n            for (int j = 0; j < size; j++)\n            {\n                subMatrix[i, j] = matrix[startRow + i, startCol + j];\n            }\n        }\n        return subMatrix;\n    }\n\n    static void PrintMatrix(int[,] matrix)\n    {\n        int rows = matrix.GetLength(0);\n        int cols = matrix.GetLength(1);\n\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < cols; j++)\n            {\n                Console.Write(matrix[i, j] + " ");\n            }\n            Console.WriteLine();\n        }\n    }\n}