using System.Reflection;\nusing NHibernate.Cfg;\n\npublic ISessionFactory CreateSessionFactory(Enum.DatabaseType newDBType, string connectionString)\n{\n    var cfg = new Configuration();\n\n    if (newDBType == Enum.DatabaseType.MsSqlServer)\n    {\n        cfg.Properties["dialect"] = "NHibernate.Dialect.MsSql2000Dialect";\n        cfg.Properties["connection.driver_class"] = "NHibernate.Driver.SqlClientDriver";\n        LoadEmbeddedResource(cfg, "CompanyName.AppName.Data.DataTypes.MSSQLTypes.hbm.xml");\n    }\n    else\n    {\n        cfg.Properties["dialect"] = "NHibernate.Dialect.Oracle9Dialect";\n        cfg.Properties["connection.driver_class"] = "NHibernate.Driver.OracleClientDriver";\n        LoadEmbeddedResource(cfg, "CompanyName.AppName.Data.DataTypes.OracleTypes.hbm.xml");\n    }\n\n    cfg.Properties["connection.provider"] = "NHibernate.Connection.DriverConnectionProvider";\n    cfg.Properties["connection.connection_string"] = connectionString;\n\n    // Assuming Types.hbm.xml is common for both databases\n    LoadEmbeddedResource(cfg, "CompanyName.AppName.Data.DataTypes.Types.hbm.xml");\n\n    return cfg.BuildSessionFactory();\n}\n\nprivate void LoadEmbeddedResource(Configuration cfg, string resourcePath)\n{\n    var stream = Assembly.GetExecutingAssembly().GetManifestResourceStream(resourcePath);\n    if (stream != null)\n    {\n        cfg.AddInputStream(stream);\n    }\n    else\n    {\n        throw new ConfigurationErrorsException($"Embedded resource not found: {resourcePath}");\n    }\n}