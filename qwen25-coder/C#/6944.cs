public class Book { // The class as used in our application\n    private readonly BookEntity _book;      // LLBLGen entity\n    private BookType _bookType;             // BookType is another class that wraps an entity\n\n    public Book(int id) {\n        _book = new BookEntity(id);\n        _bookType = new BookType(_book.BookType); // Assuming you have a constructor to wrap the entity\n    }\n\n    public BookType BookType {\n        get { return _bookType; }\n        set { \n            _bookType = value;\n            _book.BookType = new BookTypeEntity(value.ID);\n            Save();\n        }\n    }\n\n    public int CountPages() {\n        // Business logic here, using _book properties\n        return _book.Pages.Count; // Assuming Pages is a collection of Page entities\n    }\n\n    private void Save() {\n        if (_book.IsDirty) {\n            _book.Save(); // Only save if changes have been made\n        }\n    }\n}