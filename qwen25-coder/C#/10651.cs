[AcceptVerbs(HttpVerbs.Post)]\npublic ActionResult UpdateNewsItem(int newsID, string newsTitle, string newsDescription, string newsBeginningDate, string newsEndingDate)\n{\n    // ... existing code ...\n\n    if (ModelState.IsValid == true)\n    {\n        try\n        {\n            // ... database update logic ...\n            \n            return new JsonResult { Data = new { success = true, partialViewHtml = RenderPartialViewToString("NewsList", this.GetNewsItems()) } };\n        }\n        catch (Exception ex)\n        {\n            ModelState.AddModelError("_FORM", "An unexpected error occurred. Please try again later.");\n        }\n    }\n\n    // If we got this far, something failed, redisplay form with model state errors\n    return new JsonResult { Data = new { success = false, errors = ModelState.ToDictionary(v => v.Key, v => v.Errors.Select(e => e.ErrorMessage).ToArray()) } };\n}\n\nprivate string RenderPartialViewToString(string viewName, object model)\n{\n    if (string.IsNullOrEmpty(viewName))\n        viewName = ControllerContext.RouteData.GetRequiredString("action");\n\n    ViewData.Model = model;\n\n    using (var sw = new StringWriter())\n    {\n        var viewResult = ViewEngines.Engines.FindPartialView(ControllerContext, viewName);\n        var viewContext = new ViewContext(ControllerContext, viewResult.View, ViewData, TempData, sw);\n        viewResult.View.Render(viewContext, sw);\n        return sw.GetStringBuilder().ToString();\n    }\n}