<%@ WebHandler Language="C#" Class="Proxy" %>\nusing System;\nusing System.Web;\nusing System.IO;\nusing System.Net;\n\npublic class Proxy : IHttpHandler\n{\n    public void ProcessRequest(HttpContext context)\n    {\n        var url = context.Request["url"];\n        if (string.IsNullOrEmpty(url))\n        {\n            context.Response.StatusCode = 400; // Bad Request\n            return;\n        }\n\n        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n        request.UserAgent = context.Request.UserAgent;\n        request.ContentType = context.Request.ContentType ?? "application/x-www-form-urlencoded";\n        request.Method = context.Request.HttpMethod;\n\n        if (context.Request.HttpMethod.ToUpper() == "POST" && context.Request.InputStream.Length > 0)\n        {\n            byte[] buffer = new byte[16 * 1024]; // 16KB buffer\n            using (Stream reqStream = request.GetRequestStream())\n            {\n                int bytesRead;\n                while ((bytesRead = context.Request.InputStream.Read(buffer, 0, buffer.Length)) > 0)\n                {\n                    reqStream.Write(buffer, 0, bytesRead);\n                }\n            }\n        }\n\n        try\n        {\n            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n            {\n                context.Response.StatusCode = (int)response.StatusCode;\n                context.Response.ContentType = response.ContentType;\n\n                using (Stream responseStream = response.GetResponseStream())\n                using (Stream outputStream = context.Response.OutputStream)\n                {\n                    CopyTo(responseStream, outputStream);\n                }\n            }\n        }\n        catch (WebException wex)\n        {\n            if (wex.Response != null)\n            {\n                using (var errorResponse = (HttpWebResponse)wex.Response)\n                {\n                    using (var reader = new StreamReader(errorResponse.GetResponseStream()))\n                    {\n                        string text = reader.ReadToEnd();\n                        context.Response.Write(text); // Output the error message\n                    }\n                    context.Response.StatusCode = (int)errorResponse.StatusCode;\n                }\n            }\n            else\n            {\n                context.Response.StatusCode = 500; // Internal Server Error\n            }\n        }\n    }\n\n    private void CopyTo(Stream input, Stream output)\n    {\n        byte[] buffer = new byte[16 * 1024]; // 16KB buffer\n        int bytesRead;\n        while ((bytesRead = input.Read(buffer, 0, buffer.Length)) > 0)\n        {\n            output.Write(buffer, 0, bytesRead);\n        }\n    }\n\n    public bool IsReusable => false;\n}