// Immutable Dimensions class with read-only properties\npublic sealed class Dimensions\n{\n    public double Thickness { get; }\n    public double Width { get; }\n    public double Length { get; }\n\n    // Constructor to initialize all dimensions at once\n    public Dimensions(double thickness, double width, double length)\n    {\n        Thickness = thickness;\n        Width = width;\n        Length = length;\n    }\n\n    // Method to calculate volume based on dimensions\n    public double GetVolume()\n    {\n        return Thickness * Width * Length;\n    }\n}\n\n// Member class using composition for dimensions\npublic class Member\n{\n    public string Label { get; set; }\n    // Other unrelated fields\n\n    public Dimensions Size { get; } // Composition and immutability\n\n    public Member(string label, double thickness, double width, double length)\n    {\n        Label = label;\n        Size = new Dimensions(thickness, width, length);\n    }\n\n    // Other methods\n}\n\n// OtherMember class using composition for dimensions\npublic class OtherMember\n{\n    public string CompositeLabel { get; set; }\n    // Lots of other fields (not related to Member)\n\n    public Dimensions Size { get; } // Composition and immutability\n\n    public OtherMember(string compositeLabel, double thickness, double width, double length)\n    {\n        CompositeLabel = compositeLabel;\n        Size = new Dimensions(thickness, width, length);\n    }\n\n    // Other methods\n}