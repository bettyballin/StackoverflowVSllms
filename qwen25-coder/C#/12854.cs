using Microsoft.CodeAnalysis;\nusing Microsoft.CodeAnalysis.CSharp;\nusing Microsoft.CodeAnalysis.Scripting;\nusing Microsoft.CodeAnalysis.Scripting.Hosting;\n\nclass Program\n{\n    static async System.Threading.Tasks.Task Main(string[] args)\n    {\n        var script = CSharpScript.Create("");\n        ScriptState<object> state = await script.RunAsync();\n\n        Console.WriteLine("C# REPL. Type #exit to quit.");\n        while (true)\n        {\n            Console.Write("> ");\n            string input = Console.ReadLine();\n            if (input.Equals("#exit"))\n            {\n                break;\n            }\n\n            try\n            {\n                state = await state.ContinueWithAsync(input);\n                Console.WriteLine(state.ReturnValue);\n            }\n            catch (CompilationErrorException e)\n            {\n                Console.WriteLine(string.Join("\n", e.Diagnostics.Select(d => d.GetMessage())));\n            }\n        }\n    }\n}