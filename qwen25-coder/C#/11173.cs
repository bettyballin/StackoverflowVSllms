using System;\nusing System.Collections.Concurrent;\nusing System.Web;\n\npublic class IpHitCount : IHttpModule\n{\n    private const string DeletedKey = "appLastDeleted";\n    private static ConcurrentDictionary<string, HitEntry> ipLog = new ConcurrentDictionary<string, HitEntry>();\n\n    public void Dispose() { }\n\n    public void Init(HttpApplication context)\n    {\n        context.PreRequestHandlerExecute += CheckHitCount;\n    }\n\n    private void CheckHitCount(object sender, EventArgs e)\n    {\n        HttpApplication app = (HttpApplication)sender;\n\n        if (!app.Request.Url.AbsolutePath.ToLower().Contains("main.aspx")) return;\n\n        string ipAddress = app.Request.UserHostAddress;\n\n        // Lazy initialization\n        var entry = ipLog.GetOrAdd(ipAddress, key => new HitEntry());\n\n        int currentCount;\n        lock (entry)\n        {\n            // Clean old entries and count hits\n            if ((DateTime.Now - entry.Timestamp).TotalMinutes >= 5)\n            {\n                entry.HitCount = 1;\n                entry.Timestamp = DateTime.Now;\n            }\n            else\n            {\n                currentCount = ++entry.HitCount;\n\n                if (currentCount > 4)\n                {\n                    app.Response.Redirect("HitCountExceeded.htm", true);\n                }\n            }\n        }\n\n        // Periodically clean up old IP entries\n        var lastDeletedTime = (DateTime?)HttpContext.Application[DeletedKey] ?? DateTime.MinValue;\n        if ((DateTime.Now - lastDeletedTime).TotalMinutes >= 1)\n        {\n            lock (ipLog)\n            {\n                var keysToRemove = ipLog.Keys.Where(key => (DateTime.Now - ipLog[key].Timestamp).TotalMinutes > 5).ToList();\n                foreach (var key in keysToRemove)\n                {\n                    ipLog.TryRemove(key, out _);\n                }\n                HttpContext.Application[DeletedKey] = DateTime.Now;\n            }\n        }\n    }\n\n    private class HitEntry\n    {\n        public int HitCount { get; set; } = 0;\n        public DateTime Timestamp { get; set; } = DateTime.Now;\n    }\n}