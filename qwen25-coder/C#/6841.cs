amespace foo\n{\n    /// <summary>\n    /// Summary description for ServerControlTest\n    /// </summary>\n    public class ServerControlTest : CompositeControl, IScriptControl\n    {\n        protected override void OnPreRender(EventArgs e)\n        {\n            if (!this.DesignMode)\n            {\n                // Test for ScriptManager and register if it exists\n                var sm = ScriptManager.GetCurrent(Page);\n                if (sm == null)\n                    throw new HttpException("A ScriptManager control must exist on the current page.");\n\n                sm.RegisterScriptControl(this);\n                if (!string.IsNullOrEmpty(sm.ID) && !sm.EnablePageMethods)\n                {\n                    sm.EnablePageMethods = true;\n                }\n            }\n\n            base.OnPreRender(e);\n        }\n\n        protected override void CreateChildControls()\n        {\n            EnsureChildControls();\n            var btn = new HtmlInputButton { InnerHtml = "Show Time" };\n            btn.Attributes["onclick"] = "UpdateTime(); return false;";\n\n            Controls.Add(new LiteralControl("<span id='Literal1' runat='server'>test</span>"));\n            Controls.Add(btn);\n        }\n\n        protected override void Render(HtmlTextWriter writer)\n        {\n            if (!this.DesignMode)\n                ScriptManager.GetCurrent(this.Page).RegisterScriptDescriptors(this);\n\n            base.Render(writer);\n        }\n\n        [WebMethod]\n        public static string GetCurrentDate()\n        {\n            return DateTime.Now.ToString();\n        }\n\n        #region IScriptControl Members\n\n        IEnumerable<ScriptDescriptor> IScriptControl.GetScriptDescriptors()\n        {\n            var descriptor = new ScriptControlDescriptor("foo.ServerControlTest", ClientID);\n            return new[] { descriptor };\n        }\n\n        IEnumerable<ScriptReference> IScriptControl.GetScriptReferences()\n        {\n            var reference = new ScriptReference\n            {\n                Path = ResolveClientUrl("~/tests/JScript.js")\n            };\n\n            return new[] { reference };\n        }\n\n        #endregion\n    }\n}