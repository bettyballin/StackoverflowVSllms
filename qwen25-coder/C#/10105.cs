using System;\nusing System.ComponentModel.DataAnnotations;\nusing System.Linq;\nusing YourProjectName.Data;\n\npublic class UniqueAcrossTablesAttribute : ValidationAttribute\n{\n    protected override ValidationResult IsValid(object value, ValidationContext validationContext)\n    {\n        var dbContext = (YourDbContext)validationContext.GetService(typeof(YourDbContext));\n        \n        // Check if the value exists in Table1\n        bool existsInTable1 = dbContext.Table1.Any(e => e.Field == (string)value);\n        \n        // Check if the value exists in Table2\n        bool existsInTable2 = dbContext.Table2.Any(e => e.Field == (string)value);\n\n        // If exists in any table, return validation error\n        if (existsInTable1 || existsInTable2)\n        {\n            return new ValidationResult($"'{value}' already exists in one of the tables.");\n        }\n\n        return ValidationResult.Success;\n    }\n}