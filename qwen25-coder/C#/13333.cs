using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Web.UI.WebControls;\n\nnamespace CustomControls\n{\n    [DefaultProperty("Text")]\n    [ToolboxData("<{0}:CustomMyValidator runat=server></{0}:CustomMyValidator>")]\n    public class CustomMyValidator : BaseValidator\n    {\n        protected override bool ControlPropertiesValid()\n        {\n            // Ensure the control to validate is set and exists.\n            return !string.IsNullOrEmpty(ControlToValidate) && GetControlValidationValue(ControlToValidate) != null;\n        }\n\n        protected override void AddAttributesToRender(System.Web.UI.HtmlTextWriter writer)\n        {\n            base.AddAttributesToRender(writer);\n            // Add any additional HTML attributes here, if needed.\n        }\n\n        protected override bool EvaluateIsValid()\n        {\n            string value = GetControlValidationValue(ControlToValidate);\n\n            // Example: Validate that the input is not "InvalidInput"\n            return value != "InvalidInput";\n        }\n    }\n}