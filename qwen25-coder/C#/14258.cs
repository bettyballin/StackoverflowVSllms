using System;\nusing System.ComponentModel.Composition;\nusing System.ComponentModel.Composition.Hosting;\n\n[MetadataAttribute]\n[AttributeUsage(AttributeTargets.Class)]\npublic class PartMetadataAttribute : ExportAttribute\n{\n    public string Folder { get; set; }\n}\n\npublic interface IPart {}\n\n[Export(typeof(IPart))]\n[PartMetadata(Folder = "Test1Parts")]\npublic class TestPart1 : IPart {}\n\nclass Program\n{\n    private static void Main()\n    {\n        var catalog = new AggregateCatalog();\n        \n        // Add directories to the catalog, each containing parts with metadata.\n        catalog.Catalogs.Add(new DirectoryCatalog("path/to/Test1Parts"));\n        catalog.Catalogs.Add(new DirectoryCatalog("path/to/AnotherFolder"));\n\n        var container = new CompositionContainer(catalog);\n        foreach (var export in container.GetExports<IPart, PartMetadataAttribute>())\n        {\n            Console.WriteLine($"Part of type {export.Value.GetType()} is from folder {export.Metadata.Folder}");\n        }\n    }\n}