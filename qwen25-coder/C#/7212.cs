public class PictureController : Controller\n{\n    public ActionResult Vote(int pictureId)\n    {\n        string sessionId = GetSessionId();\n\n        // Check if the user has already voted for this picture\n        bool hasVoted = HasUserAlreadyVoted(sessionId, pictureId);\n\n        if (hasVoted)\n        {\n            ViewBag.Message = "You have already voted for this picture.";\n            return View();\n        }\n\n        // Log the vote in the database\n        LogVoteInDatabase(sessionId, pictureId);\n\n        ViewBag.Message = "Thank you for voting!";\n        return View();\n    }\n\n    private string GetSessionId()\n    {\n        if (Request.Cookies["SessionID"] != null)\n        {\n            return Request.Cookies["SessionID"].Value;\n        }\n        \n        // If no session ID exists in cookies, create a new one\n        var sessionId = Guid.NewGuid().ToString();\n        Response.SetCookie(new HttpCookie("SessionID", sessionId));\n        return sessionId;\n    }\n\n    private bool HasUserAlreadyVoted(string sessionId, int pictureId)\n    {\n        // Check the database to see if there's an entry for this session ID and picture ID\n        using (var db = new YourDbContext())\n        {\n            return db.Votes.Any(vote => vote.SessionID == sessionId && vote.PictureID == pictureId);\n        }\n    }\n\n    private void LogVoteInDatabase(string sessionId, int pictureId)\n    {\n        var vote = new Vote { SessionID = sessionId, PictureID = pictureId };\n        \n        using (var db = new YourDbContext())\n        {\n            db.Votes.Add(vote);\n            db.SaveChanges();\n        }\n    }\n}