using System;\n   using System.IO;\n   using System.Security.Cryptography;\n   using System.Text;\n\n   public class SessionEncryptor\n   {\n       private static readonly byte[] Key = Encoding.UTF8.GetBytes("YOUR_VERY_SECURE_KEY_16");\n       private static readonly byte[] IV = Encoding.UTF8.GetBytes("YOUR_IV_VECTOR_16");\n\n       public string Encrypt(string plainText)\n       {\n           using (var aesAlg = Aes.Create())\n           {\n               aesAlg.Key = Key;\n               aesAlg.IV = IV;\n\n               ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\n               using (var msEncrypt = new MemoryStream())\n               {\n                   using (var csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\n                   {\n                       using (var swEncrypt = new StreamWriter(csEncrypt))\n                       {\n                           swEncrypt.Write(plainText);\n                       }\n                       return Convert.ToBase64String(msEncrypt.ToArray());\n                   }\n               }\n           }\n       }\n\n       public string Decrypt(string cipherText)\n       {\n           using (var aesAlg = Aes.Create())\n           {\n               aesAlg.Key = Key;\n               aesAlg.IV = IV;\n\n               ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\n\n               using (var msDecrypt = new MemoryStream(Convert.FromBase64String(cipherText)))\n               {\n                   using (var csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\n                   {\n                       using (var srDecrypt = new StreamReader(csDecrypt))\n                       {\n                           return srDecrypt.ReadToEnd();\n                       }\n                   }\n               }\n           }\n       }\n   }