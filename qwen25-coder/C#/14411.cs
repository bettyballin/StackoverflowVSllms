using System;\nusing System.Configuration;\n\npublic class ConfigSwitcher\n{\n    public static void UseNewConfiguration(string pathToConfig)\n    {\n        // Open the new configuration file as a file map.\n        var configMap = new ExeConfigurationFileMap { ExeConfigFilename = pathToConfig };\n        var config = ConfigurationManager.OpenMappedExeConfiguration(configMap, ConfigurationUserLevel.None);\n        \n        // Load all sections and set them to override the existing ones\n        foreach (var section in config.Sections)\n        {\n            var sectionName = section.Key;\n            if (ConfigurationManager.GetSection(sectionName) != null)\n                ConfigurationManager.GetSection(sectionName).SectionInformation.OverrideModeDefault = ConfigurationOverrideMode.Allow;\n            \n            var newSection = config.GetSection(sectionName);\n            ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None).GetSection(sectionName)?.SetRawXml(newSection?.GetRawXml() ?? string.Empty);\n        }\n        \n        // Refresh the configuration\n        ConfigurationManager.RefreshSection("appSettings");\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        Console.WriteLine(ConfigurationManager.AppSettings["exampleKey"]);\n        ConfigSwitcher.UseNewConfiguration("path_to_new.config");\n        Console.WriteLine(ConfigurationManager.AppSettings["exampleKey"]);\n    }\n}