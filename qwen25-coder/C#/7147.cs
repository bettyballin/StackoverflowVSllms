using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Xsl;\nusing System.Xml.XPath;\nusing HtmlAgilityPack;\n\npublic class TransformXML\n{\n    public static void Main(string[] args)\n    {\n        try\n        {\n            string sourceDoc = "C:\\CDA_Doc.xml";\n            string xsltDoc = "C:\\CDA.xsl";\n\n            XPathDocument myXPathDocument = new XPathDocument(sourceDoc);\n            XslCompiledTransform myXslTransform = new XslCompiledTransform();\n\n            using (StringWriter sw = new StringWriter())\n            {\n                using (XmlTextWriter writer = new XmlTextWriter(sw))\n                {\n                    myXslTransform.Load(xsltDoc);\n                    myXslTransform.Transform(myXPathDocument, null, writer);\n\n                    string resultHtml = sw.ToString();\n                    HtmlDocument htmlDoc = new HtmlDocument();\n                    htmlDoc.LoadHtml(resultHtml);\n\n                    // Extract plain text\n                    string plainText = htmlDoc.DocumentNode.InnerText;\n\n                    // Format to 80-character lines\n                    string formattedText = FormatToLines(plainText, 80);\n\n                    Console.WriteLine(formattedText);\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine("Exception: {0}", e.ToString());\n        }\n    }\n\n    private static string FormatToLines(string text, int maxLineLength)\n    {\n        System.Text.StringBuilder sb = new System.Text.StringBuilder();\n        int lineLength = 0;\n\n        foreach (string word in text.Split(' '))\n        {\n            if ((lineLength + word.Length) > maxLineLength && lineLength > 0)\n            {\n                sb.AppendLine();\n                lineLength = 0;\n            }\n            if (word.Length > maxLineLength) // Handle very long words\n            {\n                if (lineLength > 0)\n                    sb.AppendLine();\n                int pos = 0;\n                while (pos < word.Length)\n                {\n                    sb.AppendLine(word.Substring(pos, Math.Min(maxLineLength, word.Length - pos)));\n                    pos += maxLineLength;\n                    lineLength = 0;\n                }\n            }\n            else\n            {\n                if (lineLength > 0) sb.Append(' ');\n                sb.Append(word);\n                lineLength += word.Length + (lineLength > 0 ? 1 : 0);\n            }\n        }\n        return sb.ToString();\n    }\n}