using System;\nusing System.Data.SqlTypes;\n\npublic enum StatusCode : byte {\n    Unknown = (byte)'U',\n    Failure = (byte)'F',\n    // Add other status codes here\n}\n\npublic static class StatusCodeExtensions {\n    public static StatusCode ToStatusCode(this SqlString sqlString) {\n        if (sqlString.IsNull) {\n            throw new ArgumentException("SqlString is null.", nameof(sqlString));\n        }\n\n        char value = sqlString.Value[0];\n\n        switch (value) {\n            case 'U':\n                return StatusCode.Unknown;\n            case 'F':\n                return StatusCode.Failure;\n            // Handle other status codes\n            default:\n                throw new ArgumentOutOfRangeException(nameof(sqlString), $"Invalid status code: {sqlString}");\n        }\n    }\n\n    public static SqlString ToSqlString(this StatusCode statusCode) {\n        char value;\n        switch (statusCode) {\n            case StatusCode.Unknown:\n                value = 'U';\n                break;\n            case StatusCode.Failure:\n                value = 'F';\n                break;\n            // Handle other status codes\n            default:\n                throw new ArgumentOutOfRangeException(nameof(statusCode), "Invalid status code.");\n        }\n        return new SqlString(value);\n    }\n}