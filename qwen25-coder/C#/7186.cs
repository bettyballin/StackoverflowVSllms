using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Text;\n\npublic class AdsHelper\n{\n    [StructLayout(LayoutKind.Sequential)]\n    public struct SECURITY_ATTRIBUTES\n    {\n        public int nLength;\n        public IntPtr lpSecurityDescriptor;\n        public bool bInheritHandle;\n    }\n\n    const uint GENERIC_READ = 0x80000000;\n    const uint GENERIC_WRITE = 0x40000000;\n    const uint OPEN_EXISTING = 3;\n\n    [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    public static extern IntPtr CreateFile(\n        string lpFileName,\n        uint dwDesiredAccess,\n        uint dwShareMode,\n        ref SECURITY_ATTRIBUTES lpSecurityAttributes,\n        uint dwCreationDisposition,\n        uint dwFlagsAndAttributes,\n        IntPtr hTemplateFile);\n\n    [DllImport("kernel32", SetLastError = true)]\n    public static extern bool CloseHandle(IntPtr hObject);\n\n    [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    public static extern bool ReadFile(\n        IntPtr hFile,\n        byte[] lpBuffer,\n        uint nNumberOfBytesToRead,\n        out uint lpNumberOfBytesRead,\n        IntPtr lpOverlapped);\n\n    [DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Auto)]\n    public static extern bool WriteFile(\n        IntPtr hFile,\n        byte[] lpBuffer,\n        uint nNumberOfBytesToWrite,\n        out uint lpNumberOfBytesWritten,\n        IntPtr lpOverlapped);\n}