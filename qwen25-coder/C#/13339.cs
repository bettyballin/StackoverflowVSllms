// Example of how Reflection might be used to invoke a private method\nusing System;\nusing System.Reflection;\n\npublic class SecurityExample {\n    private void SensitiveMethod() {\n        Console.WriteLine("This is sensitive information that should not be exposed.");\n    }\n\n    public static void Main() {\n        // In a trusted environment, this would allow access to private methods\n        Type type = typeof(SecurityExample);\n        MethodInfo methodInfo = type.GetMethod("SensitiveMethod", BindingFlags.NonPublic | BindingFlags.Instance);\n        if (methodInfo != null) {\n            SecurityExample example = new SecurityExample();\n            methodInfo.Invoke(example, null); // This should not be allowed in Medium Trust environments\n        }\n    }\n}