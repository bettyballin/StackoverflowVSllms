using System;\nusing System.IO;\nusing Microsoft.WindowsCE.Forms;\n\nclass CertificateImporter {\n    [System.Runtime.InteropServices.DllImport("coredll.dll")]\n    private static extern bool CertAddCertificateContextToStore(\n        IntPtr hCertStore,\n        IntPtr pCertContext,\n        uint dwAddDisposition,\n        out IntPtr ppStoreContext);\n\n    public void ImportCertificate(string certFilePath, string storeName) {\n        byte[] certData = File.ReadAllBytes(certFilePath);\n        IntPtr hCertStore = IntPtr.Zero;\n        try {\n            // Open the target store\n            hCertStore = CertOpenSystemStore(IntPtr.Zero, storeName);\n            if (hCertStore == IntPtr.Zero)\n                throw new Exception("Failed to open certificate store.");\n\n            // Decode the certificate\n            int buffSize = 0;\n            CryptDecodeMessage(1, null, 0, certData, certData.Length,\n                ref buffSize, out IntPtr pCertContext);\n            pCertContext = Marshal.AllocHGlobal(buffSize);\n            if (!CryptDecodeMessage(1, null, 0, certData, certData.Length,\n                   ref buffSize, out pCertContext))\n                throw new Exception("Failed to decode certificate.");\n\n            // Add the certificate to the store\n            IntPtr ppStoreContext;\n            if (!CertAddCertificateContextToStore(hCertStore, pCertContext, 3, out ppStoreContext))\n                throw new Exception("Failed to add certificate to store.");\n        } finally {\n            // Clean up\n            if (hCertStore != IntPtr.Zero)\n                CertCloseStore(hCertStore, 0);\n            Marshal.FreeHGlobal(pCertContext);\n        }\n    }\n\n    [System.Runtime.InteropServices.DllImport("crypt32.dll")]\n    private static extern bool CryptDecodeMessage(\n        uint dwMsgTypeFlags,\n        System.IntPtr pDecryptPara,\n        uint cCertEncodingTypeIn,\n        byte[] pbEncodedBlob,\n        int cbEncodedBlob,\n        ref int pcbDecodedOut,\n        out IntPtr ppvStrucInfo);\n\n    [System.Runtime.InteropServices.DllImport("crypt32.dll")]\n    private static extern IntPtr CertOpenSystemStore(\n        IntPtr hSysStore,\n        string szSubsystemProtocol);\n\n    [System.Runtime.InteropServices.DllImport("coredll.dll")]\n    private static extern bool CertCloseStore(IntPtr hCertStore, uint dwFlags);\n}\n\n// Example usage\nclass Program {\n    static void Main() {\n        CertificateImporter importer = new CertificateImporter();\n        try {\n            importer.ImportCertificate(@"\Storage Card\Certificate.cer", "MY");\n            MessageBox.Show("Certificate imported successfully.");\n        } catch (Exception ex) {\n            MessageBox.Show("Error importing certificate: " + ex.Message);\n        }\n    }\n}