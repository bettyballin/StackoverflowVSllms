using System;\nusing System.Collections.Generic;\nusing System.Xml.XPath;\n\npublic class MyDataItem\n{\n    public string Name { get; set; }\n    public List<MyDataItem> Children { get; }\n\n    public MyDataItem(string name)\n    {\n        Name = name;\n        Children = new List<MyDataItem>();\n    }\n}\n\npublic class CustomXPathNavigator : XPathNavigator\n{\n    private readonly Stack<MyDataItem> _stack;\n\n    public CustomXPathNavigator(MyDataItem root)\n    {\n        _stack = new Stack<MyDataItem>();\n        if (root != null) _stack.Push(root);\n    }\n\n    public override bool MoveToFirstChild()\n    {\n        if (_stack.Count == 0 || _stack.Peek().Children.Count == 0) return false;\n        _stack.Push(_stack.Peek().Children[0]);\n        return true;\n    }\n\n    public override bool MoveToNext()\n    {\n        if (_stack.Count <= 1) return false;\n\n        var parent = _stack.ToArray()[_stack.Count - 2];\n        int currentIndex = parent.Children.IndexOf(_stack.Peek());\n\n        if (currentIndex < parent.Children.Count - 1)\n        {\n            _stack.Pop();\n            _stack.Push(parent.Children[currentIndex + 1]);\n            return true;\n        }\n        return false;\n    }\n\n    public override bool MoveToParent()\n    {\n        if (_stack.Count <= 1) return false;\n        _stack.Pop();\n        return _stack.Count > 0;\n    }\n\n    public override XPathNavigator Clone()\n    {\n        var clone = new CustomXPathNavigator(null);\n        foreach (var item in _stack)\n        {\n            clone._stack.Push(item);\n        }\n        return clone;\n    }\n\n    public override string Name => CurrentItem?.Name ?? "";\n    private MyDataItem CurrentItem => _stack.Count > 0 ? _stack.Peek() : null;\n    // Implement other properties and methods as needed\n}\n\n// Example usage:\npublic class Program\n{\n    public static void Main()\n    {\n        var root = new MyDataItem("Root");\n        var child1 = new MyDataItem("Child1");\n        var child2 = new MyDataItem("Child2");\n        root.Children.Add(child1);\n        root.Children.Add(child2);\n\n        var navigator = new CustomXPathNavigator(root);\n        using (var iterator = navigator.SelectDescendants(XPathNodeType.Element, true))\n        {\n            while (iterator.MoveNext())\n            {\n                Console.WriteLine(iterator.Current.Name);\n            }\n        }\n    }\n}