from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\nfrom os import urandom\n\n# Key and initialization vector must be byte strings of appropriate length\nkey = urandom(16)  # 128-bit key for Blowfish\niv = urandom(algorithms.Blowfish.block_size // 8)\n\ncipher = Cipher(\n    algorithms.Blowfish(key),\n    modes.CBC(iv),\n    backend=default_backend()\n)\nencryptor = cipher.encryptor()\n\n# Data must be a multiple of block size; pad it if necessary\ndata = b"Secret Message"\npadded_data = data + bytes(8 - (len(data) % 8)) * chr(8).encode('utf-8')\n\nciphertext = encryptor.update(padded_data) + encryptor.finalize()\nprint("Ciphertext:", ciphertext)