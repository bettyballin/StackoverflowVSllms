import hashlib\nimport os\n\n# Function to generate a secure hash for account relation\ndef generate_related_id(base_id, secret_key):\n    # Create a unique salt for additional security\n    salt = os.urandom(16)\n    # Concatenate base_id, secret_key, and salt\n    message = f"{base_id}{secret_key}"\n    # Generate SHA256 hash\n    hash_object = hashlib.sha256(message.encode())\n    hex_dig = hash_object.hexdigest()\n    # Combine with salt for extra security (optional)\n    related_id = hex_dig + salt.hex()\n    return related_id\n\n# Example usage:\nbase_user_id = "denzel"\nsecret_key = os.getenv('SECRET_KEY', 'your-very-secret-key')  # Do not hardcode keys\nrelated_account_id = generate_related_id(base_user_id, secret_key)\n\nprint(f"Base User ID: {base_user_id}")\nprint(f"Generated Related Account ID: {related_account_id}")