class SimpleDHT:\n    def __init__(self):\n        self.nodes = {}\n\n    # Hash function to map keys to nodes (simplified version)\n    def hash_key(self, key):\n        return sum(ord(char) for char in key) % len(self.nodes)\n\n    def add_node(self, node_id):\n        if node_id not in self.nodes:\n            self.nodes[node_id] = {}\n\n    def store_data(self, key, data):\n        hashed_key = self.hash_key(key)\n        target_node = list(self.nodes.keys())[hashed_key]\n        self.nodes[target_node][key] = data\n\n    def retrieve_data(self, key):\n        hashed_key = self.hash_key(key)\n        source_node = list(self.nodes.keys())[hashed_key]\n        return self.nodes[source_node].get(key, None)\n\n# Example usage\ndht = SimpleDHT()\ndht.add_node("Node1")\ndht.store_data("example_key", "some data")\nprint(dht.retrieve_data("example_key"))  # Output should be: some data