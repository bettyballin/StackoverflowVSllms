import sqlite3\nimport pandas as pd\nimport smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.mime.application import MIMEApplication\n\n# Database connection setup\nconn = sqlite3.connect('your_database.db')\n\ndef fetch_volunteers_for_venue(venue_id):\n    query = "SELECT * FROM volunteers_2009 WHERE venue_id=?"\n    df = pd.read_sql(query, conn, params=[venue_id])\n    return df\n\ndef send_email(to_addr, subject, body, attachment_path):\n    msg = MIMEMultipart()\n    msg['From'] = 'your_email@example.com'\n    msg['To'] = to_addr\n    msg['Subject'] = subject\n\n    msg.attach(MIMEText(body, 'plain'))\n\n    with open(attachment_path, "rb") as attachment:\n        part = MIMEApplication(attachment.read(), Name='volunteers.csv')\n        part['Content-Disposition'] = f'attachment; filename="volunteers.csv"'\n        msg.attach(part)\n\n    # Email sending logic\n    server = smtplib.SMTP('smtp.example.com', 587)\n    server.starttls()\n    server.login(msg['From'], 'your_email_password')\n    server.send_message(msg)\n    server.quit()\n\ndef main():\n    query = "SELECT id, chair_email FROM venues"\n    cursor = conn.cursor()\n    cursor.execute(query)\n    \n    for venue_id, chair_email in cursor.fetchall():\n        # Fetch volunteers for the current venue\n        df = fetch_volunteers_for_venue(venue_id)\n        \n        if not df.empty:\n            # Create CSV path\n            csv_path = f"volunteers_venue_{venue_id}.csv"\n            df.to_csv(csv_path, index=False)\n\n            # Send email with generated CSV\n            send_email(\n                to_addr=chair_email,\n                subject="Volunteer Details for Your Venue",\n                body=f"Please find attached the list of volunteers assigned to your venue.",\n                attachment_path=csv_path\n            )\n\nif __name__ == '__main__':\n    main()