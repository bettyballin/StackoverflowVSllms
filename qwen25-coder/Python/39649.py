import os\nimport paramiko\n\ndef resume_sftp_transfer(local_path, remote_path, hostname, username, key_file):\n    transport = paramiko.Transport((hostname, 22))\n    pkey = paramiko.RSAKey.from_private_key_file(key_file)\n    transport.connect(username=username, pkey=pkey)\n    \n    sftp = paramiko.SFTPClient.from_transport(transport)\n    \n    try:\n        # Check if partially transferred file exists on remote server\n        remote_size = 0\n        try:\n            remote_size = sftp.stat(remote_path).st_size\n        except FileNotFoundError:\n            pass\n        \n        # Open local and remote files in append mode\n        with open(local_path, 'rb') as local_file, sftp.open(remote_path, 'ab') as remote_file:\n            local_file.seek(remote_size)  # Skip bytes already transferred\n            while True:\n                data = local_file.read(1024)\n                if not data:\n                    break\n                remote_file.write(data)\n\n    finally:\n        sftp.close()\n        transport.close()\n\n# Example usage\nresume_sftp_transfer('localfile.dat', 'remotefile.dat', 'sftp.example.com', 'user', '/path/to/private/key')