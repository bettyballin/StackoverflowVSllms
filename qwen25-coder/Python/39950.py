import math\n\ndef is_point_in_cone(O, D, P, theta):\n    # Convert angle from degrees to radians\n    theta = math.radians(theta)\n    \n    # Calculate vectors OP and normalize them\n    OP = (P[0] - O[0], P[1] - O[1])\n    norm_OP = math.sqrt(OP[0]**2 + OP[1]**2)\n    if norm_OP == 0:\n        return False  # Point P cannot be the same as point O for a useful angle calculation\n    OP_unit = (OP[0]/norm_OP, OP[1]/norm_OP)\n    \n    # Normalize direction vector D\n    norm_D = math.sqrt(D[0]**2 + D[1]**2)\n    if norm_D == 0:\n        return False  # Direction vector cannot be a zero vector\n    D_unit = (D[0]/norm_D, D[1]/norm_D)\n    \n    # Calculate the angle between OP and D using dot product\n    cos_angle = OP_unit[0]*D_unit[0] + OP_unit[1]*D_unit[1]\n    if abs(cos_angle) > 1:  # Clamp cosine value due to possible floating point errors\n        cos_angle = 1 if cos_angle > 0 else -1\n    angle_OP_D = math.acos(cos_angle)\n    \n    # Check if the angle is within the cone's half-angle (theta/2)\n    return angle_OP_D <= theta / 2\n\n# Example usage:\nO = (0, 0)  # Root point\nD = (1, 0)  # Direction vector\nP = (0.5, 0.3)  # Point to check\ntheta = 60  # Cone angle in degrees\n\nresult = is_point_in_cone(O, D, P, theta)\nprint("Point is inside the cone:" if result else "Point is outside the cone.")