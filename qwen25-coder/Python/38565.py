from PIL import Image\n\ndef resize_and_crop(image_path, output_path, size, crop_type='middle'):\n    """\n    Resize and crop an image to fit into a given size.\n    \n    :param image_path: Path to input image\n    :param output_path: Path to output image\n    :param size: Tuple of (width, height)\n    :param crop_type: One of 'top', 'middle' or 'bottom'\n    """\n    # Open an image file\n    img = Image.open(image_path)\n\n    # Get current and desired ratio for the images\n    img_ratio = img.size[0] / float(img.size[1])\n    ratio = size[0] / float(size[1])\n\n    # Define cropping dimensions\n    if ratio > img_ratio:\n        crop_padding = ((img.size[0] - img.size[1] * ratio) / 2, 0,\n                          (img.size[0] + img.size[1] * ratio) / 2, img.size[1])\n    else:\n        crop_padding = (0, (img.size[1] - img.size[0] / ratio) / 2,\n                          img.size[0], (img.size[1] + img.size[0] / ratio) / 2)\n\n    # Crop the image to the aspect ratio of new_size\n    cropped_img = img.crop(crop_padding)\n    \n    # Resize the cropped image to the new size\n    resized_img = cropped_img.resize(size, Image.ANTIALIAS)\n\n    # Save the image\n    resized_img.save(output_path)\n\n# Example usage:\nresize_and_crop('path/to/input/image.jpg', 'path/to/output/image.jpg', (210, 150), 'middle')