import os\n   from sqlalchemy import create_engine\n\n   # Environment variables for database credentials\n   ORACLE_USER = os.getenv('ORACLE_USER')\n   ORACLE_PASSWORD = os.getenv('ORACLE_PASSWORD')\n   ORACLE_HOST = os.getenv('ORACLE_HOST')\n   ORACLE_PORT = os.getenv('ORACLE_PORT', 1521)\n   ORACLE_SID = os.getenv('ORACLE_SID')\n\n   MYSQL_USER = os.getenv('MYSQL_USER')\n   MYSQL_PASSWORD = os.getenv('MYSQL_PASSWORD')\n   MYSQL_HOST = os.getenv('MYSQL_HOST')\n   MYSQL_PORT = os.getenv('MYSQL_PORT', 3306)\n   MYSQL_DB = os.getenv('MYSQL_DB')\n\n   # Create database engine connections\n   oracle_engine = create_engine(f'oracle+cx_oracle://{ORACLE_USER}:{ORACLE_PASSWORD}@{ORACLE_HOST}:{ORACLE_PORT}/{ORACLE_SID}')\n   mysql_engine = create_engine(f'mysql+pymysql://{MYSQL_USER}:{MYSQL_PASSWORD}@{MYSQL_HOST}:{MYSQL_PORT}/{MYSQL_DB}')\n\n   # Tables to sync\n   tables_to_sync = ['table1', 'table2']\n\n   def sync_table(table_name):\n       # Fetch all data from Oracle table\n       oracle_df = pd.read_sql(f'SELECT * FROM {table_name}', oracle_engine)\n       \n       # Perform transformations if necessary\n       # dataframe_transformations(oracle_df)\n      \n       # Load data into MySQL table\n       oracle_df.to_sql(table_name, con=mysql_engine, if_exists='replace', index=False)\n\n   for table in tables_to_sync:\n       sync_table(table)