import random\n\ndef shuffle_avoid_consecutive_duplicates(lst):\n    # Create a dictionary to count occurrences of each element\n    frequency = {}\n    for item in lst:\n        if item in frequency:\n            frequency[item] += 1\n        else:\n            frequency[item] = 1\n    \n    # Create a list of tuples (item, frequency)\n    items = [(item, freq) for item, freq in frequency.items()]\n    \n    result = []\n    while len(result) < len(lst):\n        # Sort by remaining count in descending order to use most frequent first\n        items.sort(key=lambda x: (-x[1], random.random()))  # Random tiebreaker\n        \n        for i in range(len(items)):\n            item, freq = items[i]\n            if not result or result[-1] != item:\n                result.append(item)\n                frequency[item] -= 1\n                if frequency[item] == 0:\n                    items.pop(i)  # Remove from consideration if count is zero\n                break\n    \n    return result\n\n# Example usage\nadvertisers = ['A', 'B', 'C', 'A', 'B', 'A', 'C', 'C', 'A']\nshuffled_advertisers = shuffle_avoid_consecutive_duplicates(advertisers)\nprint(shuffled_advertisers)