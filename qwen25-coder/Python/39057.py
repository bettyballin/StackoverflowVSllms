from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\n# Sample data: list of articles (in real scenario, you fetch articles from db)\narticles = [\n    "This is the first article about machine learning.",\n    "Machine learning is a fascinating field of artificial intelligence.",\n    "Artificial intelligence has applications in various domains."\n]\n\n# Initialize vectorizer\nvectorizer = TfidfVectorizer()\n\n# Create tf-idf matrix for documents\ntfidf_matrix = vectorizer.fit_transform(articles)\n\ndef find_similar_articles(query, top_n=2):\n    # Transform the query text to tf-idf matrix using the trained vectorizer\n    query_vec = vectorizer.transform([query])\n    \n    # Compute cosine similarity between query and all documents in corpus\n    cosine_similarities_array = cosine_similarity(query_vec, tfidf_matrix).flatten()\n    \n    # Get top_n indices of highest similarity scores\n    related_doc_indices = (-cosine_similarities_array).argsort()[:top_n]\n    \n    # Return the top_n articles most similar to query\n    return [articles[i] for i in related_doc_indices]\n\n# Example usage\nquery = "What is machine learning?"\nprint(find_similar_articles(query))