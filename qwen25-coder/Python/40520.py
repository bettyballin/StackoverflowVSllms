import itertools\n\ndef calculate_sum(arrangement):\n    return sum(x**y for x, y in zip(arrangement[:-1], arrangement[1:]))\n\ndef find_minimal_arrangement(lst):\n    min_sum = float('inf')\n    best_arrangement = None\n    for perm in itertools.permutations(lst):\n        current_sum = calculate_sum(perm)\n        if current_sum < min_sum:\n            min_sum = current_sum\n            best_arrangement = perm\n    return best_arrangement, min_sum\n\n# Example usage\nlst = [1, 2, 3, 4]\nbest_arrangement, minimum_sum = find_minimal_arrangement(lst)\nprint(f"Best arrangement: {best_arrangement} with sum: {minimum_sum}")