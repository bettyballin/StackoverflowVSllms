import hashlib\n\ndef calculate_checksum(file_path):\n    """Calculate the SHA-256 checksum of a file."""\n    sha256_hash = hashlib.sha256()\n    with open(file_path, "rb") as f:\n        # Read and update hash string value in blocks of 4K\n        for byte_block in iter(lambda: f.read(4096), b""):\n            sha256_hash.update(byte_block)\n    return sha256_hash.hexdigest()\n\ndef is_program_intact(file_path, original_checksum):\n    """Check if the file's checksum matches the original."""\n    current_checksum = calculate_checksum(file_path)\n    return current_checksum == original_checksum\n\nif __name__ == "__main__":\n    # Path to the script itself\n    script_path = __file__\n    \n    # Store this checksum in a secure location, not hard-coded in production\n    original_checksum = "YOUR_HARD_CODED_CHECKSUM_HERE"\n    \n    if is_program_intact(script_path, original_checksum):\n        print("The program has not been altered.")\n    else:\n        print("Warning: The program has been altered!")