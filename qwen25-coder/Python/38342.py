def cross(o, a, b):\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])\n\ndef convex_hull(points):\n    # Sort the points lexicographically by (x-coordinate, y-coordinate)\n    points = sorted(set(points))\n\n    if len(points) <= 1:\n        return points\n\n    # Build lower hull \n    lower = []\n    for p in points:\n        while len(lower) >= 2 and cross(lower[-2], lower[-1], p) <= 0:\n            lower.pop()\n        lower.append(p)\n\n    # Build upper hull\n    upper = []\n    for p in reversed(points):\n        while len(upper) >= 2 and cross(upper[-2], upper[-1], p) <= 0:\n            upper.pop()\n        upper.append(p)\n\n    # Concatenation of the lower and upper hulls gives the convex hull.\n    # Last point of each half is omitted because it is repeated at the beginning of the other half.\n    return lower[:-1] + upper[:-1]\n\n# Example usage:\npoints = [(0, 0), (1, 1), (2, 2), (3, 1), (4, 4)]\nhull = convex_hull(points)\nprint(hull)