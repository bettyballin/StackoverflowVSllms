import gdb\n\nclass ExceptionBreakpoint(gdb.Breakpoint):\n    def __init__(self):\n        super(ExceptionBreakpoint, self).__init__("__cxa_throw", internal=True)\n        self.silent = True\n\n    def stop(self):\n        print("Exception thrown")\n        return True\n\ngdb.events.stop.connect(lambda event: check_catch(event))\n\ndef check_catch(event):\n    if isinstance(event, gdb.SignalEvent) and event.stop_signal == "SIGABRT":\n        # Sometimes SIGABRT might be triggered by exceptions that are caught,\n        # but this can help in catching signals from unhandled exceptions.\n        return True\n    frame = gdb.selected_frame()\n    while frame:\n        block = frame.block()\n        for symbol in block:\n            if symbol.name == "__cxa_begin_catch":\n                print("Exception caught")\n                gdb.Breakpoint("*" + str(frame.read_register('rip')))\n        frame = frame.older()\n    return False\n\nExceptionBreakpoint()