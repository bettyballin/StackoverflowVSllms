import time\n\ndef estimate_time_remaining(bytes_transferred, total_bytes, window_size=5, update_interval=1):\n    transfer_rates = []\n    last_update_time = time.time()\n    \n    while bytes_transferred < total_bytes:\n        # Simulate transferring data by sleeping\n        time.sleep(update_interval)\n        bytes_transferred += 1024 * 1024  # Example: 1MB per second\n        \n        current_time = time.time()\n        transfer_rate = (bytes_transferred / (current_time - last_update_time))\n        \n        if len(transfer_rates) < window_size:\n            transfer_rates.append(transfer_rate)\n        else:\n            transfer_rates.pop(0)\n            transfer_rates.append(transfer_rate)\n        \n        average_transfer_rate = sum(transfer_rates) / len(transfer_rates)\n        remaining_bytes = total_bytes - bytes_transferred\n        estimated_time_remaining = remaining_bytes / average_transfer_rate\n        \n        print(f"Estimated time remaining: {estimated_time_remaining:.2f} seconds")\n        \n        last_update_time = current_time\n\n# Example usage\nestimate_time_remaining(0, 10 * 1024 * 1024**2)  # 10GB file size