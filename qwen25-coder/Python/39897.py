import threading\n\n# Example shared resource\nshared_resource = []\nlock = threading.Lock()\n\ndef thread_function(data):\n    local_data = []  # Use a local variable to minimize lock hold time\n    for item in data:\n        transformed_item = some_transformation(item)\n        local_data.append(transformed_item)\n    \n    with lock:  # Lock only when appending to the shared resource\n        shared_resource.extend(local_data)\n\n# Create and start threads...