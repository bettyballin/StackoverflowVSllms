import pandas as pd\n\n# Function to load data using a specified delimiter and infer column positions based on expected number of fields\ndef load_and_fix_csv(file_path, delimiter=',', expected_fields=10):\n    # Read file without specifying columns and let pandas infer based on delimiter\n    df = pd.read_csv(file_path, sep=delimiter, header=None, engine='python')\n    \n    # Drop rows with less or more fields than expected\n    df = df[df.shape[1] == expected_fields]\n    \n    # Rename columns to default names\n    for i in range(expected_fields):\n        df.rename(columns={i: f'field{i}'}, inplace=True)\n        \n    return df\n\n# Path to your corrupted CSV file\nfile_path = 'path_to_your_file.csv'\n\n# Assuming each record should have 10 fields, change as necessary\nexpected_fields_count = 10\n\n# Load and repair the CSV file\nfixed_df = load_and_fix_csv(file_path, expected_fields=expected_fields_count)\n\n# Export to a new clean CSV file\nclean_file_path = 'cleaned_file.csv'\nfixed_df.to_csv(clean_file_path, index=False, header=True)\n\nprint(f"Cleaned data exported to {clean_file_path}")