import socket\nimport time\n\ndef configure_socket(sock):\n    # Enable SO_KEEPALIVE\n    sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)\n    \n    # Optionally set keepalive parameters (this will vary by platform)\n    # Example for Linux:\n    # sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPCNT, 5)  # Number of retransmissions\n    # sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPIDLE, 10)  # Timeout before first keepalive probe\n    # sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_KEEPINTVL, 6)  # Time between probes\n\ndef send_heartbeat(sock):\n    try:\n        # Send a heartbeat message (could be any small data)\n        sock.send(b'HEARTBEAT')\n        # Wait for an acknowledgment\n        data = sock.recv(1024)\n        if not data or data != b'ACK':\n            print("Heartbeat failed, no ACK.")\n            return False\n    except socket.error as e:\n        print(f"Socket error: {e}")\n        return False\n    return True\n\ndef monitor_connection(server_address):\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:\n        configure_socket(sock)\n        try:\n            sock.connect(server_address)\n            while True:\n                if not send_heartbeat(sock):\n                    print("Connection lost to", server_address)\n                    break\n                time.sleep(5)  # Adjust the sleep duration as needed\n        except Exception as e:\n            print(f"Could not connect: {e}")\n\nif __name__ == "__main__":\n    monitor_connection(('127.0.0.1', 8080))