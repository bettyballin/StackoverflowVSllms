import csv\n\ndef write_nested_dict_to_file(nested_dict, filename):\n    # Determine all unique columns\n    all_columns = set()\n    for time_data in nested_dict.values():\n        for column in time_data.keys():\n            all_columns.add(column)\n\n    # Sort the columns if necessary (e.g., numeric sorting of string numbers)\n    sorted_columns = sorted(all_columns, key=lambda x: int(x))\n\n    # Prepare headers\n    header = ["Timestamp"] + [f"{col}/data{i+1}" for col in sorted_columns for i in range(3)]  # Assuming data1, data2, data3\n\n    with open(filename, mode='w', newline='') as file:\n        writer = csv.writer(file)\n        writer.writerow(header)  # Write the header row first\n\n        # Write each timestamp's data\n        for timestamp, columns_data in nested_dict.items():\n            row = [timestamp]\n            for col in sorted_columns:\n                for i in range(3):\n                    data_key = f"data{i+1}"\n                    if data_key in columns_data[col]:\n                        row.append(columns_data[col][data_key])\n                    else:\n                        row.append('')  # Placeholder for missing data\n            writer.writerow(row)\n\n# Example usage\nd = {\n    "time1": {"column1": {"data1": "val1", "data2": "val2", "data3": "val3"},\n              "column2": {"data1": "val4", "data2": "val5", "data3": "val6"}},\n    "time2": {"column1": {"data1": "val7", "data2": "val8", "data3": "val9"},\n              "column2": {"data1": "val10", "data2": "val11", "data3": "val12"}}\n}\n\nwrite_nested_dict_to_file(d, 'output.csv')