import gtk\nfrom PIL import Image\nimport gobject\n\ndef img_to_pixbuf(img):\n    # This function assumes an implementation that converts a PIL image to Pixbuf\n    data = bytearray(img.tobytes("raw", "RGB"))\n    return gtk.gdk.pixbuf_new_from_data(data, gtk.gdk.COLORSPACE_RGB, False, 8,\n                                        img.width, img.height, img.width * 3)\n\ndef draw_lines_on_pixbuf(pixbuf):\n    pixmap = gtk.gdk.Pixmap(None, pixbuf.get_width(), pixbuf.get_height())\n    gc = pixmap.new_gc()\n    pixmap.draw_pixbuf(gc, pixbuf, 0, 0, 0, 0)  # Copy the original image onto the pixmap\n\n    # Draw a line from (50, 50) to (200, 200)\n    gc.set_foreground(gtk.gdk.Color(65535, 0, 0))  # Set color to red\n    pixmap.draw_line(gc, 50, 50, 200, 200)\n\n    # Create a new Pixbuf and copy the contents of the Pixmap to it\n    result_pixbuf = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB, False, 8,\n                                   pixmap.get_width(), pixmap.get_height())\n    result_pixbuf.get_from_drawable(pixmap, pixmap.get_colormap(), 0, 0, 0, 0,\n                                    pixmap.get_width(), pixmap.get_height())\n\n    return result_pixbuf\n\n# Example usage:\nif __name__ == "__main__":\n    image = Image.new("RGB", (300, 300), color="white")  # Create a white background\n    pixbuf = img_to_pixbuf(image)\n    new_pixbuf = draw_lines_on_pixbuf(pixbuf)\n\n    window = gtk.Window()\n    window.connect("destroy", lambda w: gtk.main_quit())\n    image_widget = gtk.Image()\n    image_widget.set_from_pixbuf(new_pixbuf)\n    window.add(image_widget)\n    window.show_all()\n\n    gtk.main()