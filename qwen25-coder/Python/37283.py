import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, GLib\n\nclass MyWindow(Gtk.Window):\n    def __init__(self):\n        super().__init__(title="TextView Update Example")\n        \n        self.textview = Gtk.TextView()\n        self.textbuffer = self.textview.get_buffer()\n        self.button = Gtk.Button(label="Start Task")\n        self.button.connect("clicked", self.on_button_clicked)\n\n        box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=6)\n        self.add(box)\n        box.pack_start(self.textview, True, True, 0)\n        box.pack_start(self.button, False, False, 0)\n\n    def on_button_clicked(self, widget):\n        # Start your task here\n       _GLib.idle_add(self.perform_task, 0)  # Schedule the first part of the task\n\n    def perform_task(self, step):\n        if step >= 5:  # Assuming you have 5 tasks to perform\n            return False  # Stop adding more idle callbacks\n        \n        task_description = f"Task {step} completed.\n"\n        self.textbuffer.insert_at_cursor(task_description)  # Update TextView\n\n        # Schedule the next part of the task\n        _GLib.idle_add(self.perform_task, step + 1)\n        \n        return False  # Return False to indicate no need for further calls on this idle handler\n\ndef main():\n    win = MyWindow()\n    win.connect("destroy", Gtk.main_quit)\n    win.show_all()\n    Gtk.main()\n\nif __name__ == "__main__":\n    main()