import math\n\ndef hexagon_hatch(rect_width, rect_height, unit_area):\n    # Calculate side length of hexagon for given area\n    side_length = math.sqrt(unit_area * 2 / (3 * math.sqrt(3)))\n    \n    # Vertical and diagonal distances between centers of adjacent hexagons\n    v_dist = side_length * math.sqrt(3)\n    h_dist = 1.5 * side_length\n    \n    # Start generating hexagon vertices\n    y = 0\n    row_offset = False\n    while y < rect_height:\n        x = 0 if not row_offset else side_length * 1.5\n        while x < rect_width:\n            for angle in range(6):\n                radians = math.radians(angle * 60)\n                tip_x = x + side_length * math.cos(radians)\n                tip_y = y + side_length * math.sin(radians)\n                \n                radians_next = math.radians((angle + 1) * 60)\n                tip_x_next = x + side_length * math.cos(radians_next)\n                tip_y_next = y + side_length * math.sin(radians_next)\n                \n                # Print the line segment\n                print(f"Line from ({tip_x}, {tip_y}) to ({tip_x_next}, {tip_y_next})")\n            \n            x += h_dist\n        \n        y += v_dist / 2\n        row_offset = not row_offset\n\n# Example usage: Rectangle of 5x3 cm, unit area of 1 sq.cm\nhexagon_hatch(5, 3, 1)