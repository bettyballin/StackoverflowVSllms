# views.py\n\nfrom django.shortcuts import render\nfrom .models import Order, Item\n\ndef generate_report(request):\n    # Fetch all orders with related items\n    orders = Order.objects.prefetch_related('item_set').all()  # Assuming the related name for items is 'item_set'\n\n    processed_data = []\n\n    for order in orders:\n        subtotal_qty = 0\n        subtotal_qty_sold = 0\n        subtotal_cost_value = 0\n\n        order_items = []\n        for item in order.item_set.all():\n            cost_value = item.cost * item.qty  # Assuming Item has fields 'cost' and 'qty'\n            \n            # Accumulate subtotals\n            subtotal_qty += item.qty\n            subtotal_qty_sold += item.qty_sold  # Assuming there's a 'qty_sold' field\n            subtotal_cost_value += cost_value\n\n            order_items.append({\n                'name': item.name,\n                'qty': item.qty,\n                'qty_sold': item.qty_sold,\n                'cost': item.cost,\n                'cost_value': cost_value,\n            })\n\n        # Append order details and subtotals to the processed data\n        processed_data.append({\n            'order_number': order.order_number,  # Ensure Order has an 'order_number' field\n            'items': order_items,\n            'subtotal_qty': subtotal_qty,\n            'subtotal_qty_sold': subtotal_qty_sold,\n            'subtotal_cost_value': subtotal_cost_value,\n        })\n\n    return render(request, 'report.html', {'orders': processed_data})