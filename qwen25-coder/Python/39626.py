import cv2\nimport numpy as np\n\ndef calculate_color_histogram(image_path, bins=(8, 8, 8)):\n    # Load the image and convert it from BGR to HSV color space\n    image = cv2.imread(image_path)\n    hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n\n    # Calculate histogram based on HSV representation\n    hist = cv2.calcHist([hsv_image], [0, 1, 2], None, bins, [0, 180, 0, 256, 0, 256])\n\n    # Normalize the histogram so it's not dependent on image size\n    cv2.normalize(hist, hist)\n\n    return hist.flatten()\n\ndef compare_histograms(hist1, hist2):\n    # Use correlation method to compare histograms\n    return cv2.compareHist(hist1, hist2, cv2.HISTCMP_CORREL)\n\n# Example usage:\nhist = calculate_color_histogram('path_to_image.jpg')