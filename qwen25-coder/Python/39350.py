def closest_point_on_circle(pX, pY, cX, cY, r):\n    # Vector from center of circle to point (pX, pY)\n    dx, dy = pX - cX, pY - cY\n    \n    # Distance from the center to the point\n    distance = (dx**2 + dy**2) ** 0.5\n    \n    # If the point is inside or on the circle, return it directly\n    if distance <= r:\n        return pX, pY\n    \n    # Normalize direction vector to have length equal to radius\n    scale_factor = r / distance\n    \n    # Calculate closest point\n    closest_x = cX + dx * scale_factor\n    closest_y = cY + dy * scale_factor\n    \n    return closest_x, closest_y\n\n# Example usage:\npX, pY = 5, 0\ncX, cY, r = 0, 0, 3\nprint(closest_point_on_circle(pX, pY, cX, cY, r))