import os\nfrom flask import Flask, request, redirect, url_for, make_response\nfrom itsdangerous.url_safe import URLSafeTimedSerializer\nfrom werkzeug.security import generate_password_hash\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'your_secret_key'  # Change this!\nserializer = URLSafeTimedSerializer(app.config['SECRET_KEY'])\n\ndef set_remember_me_cookie(user_id):\n    token = serializer.dumps(user_id, salt='remember-token-salt')\n    resp = make_response(redirect(url_for('index')))\n    resp.set_cookie('remember_token', value=token, httponly=True, secure=True)\n    return resp\n\n@app.route('/login', methods=['POST'])\ndef login():\n    # Authenticate user\n    if 'remember_me' in request.form:\n        return set_remember_me_cookie(user_id='user123')  # Replace with actual user ID\n    return redirect(url_for('index'))\n\n@app.before_request\ndef before_request():\n    token = request.cookies.get('remember_token')\n    if token:\n        try:\n            user_id = serializer.loads(token, salt='remember-token-salt', max_age=30*24*60*60)  # Expires in 30 days\n            # Authenticate the session using user_id\n            print(f'Authenticated {user_id} via remember me')\n        except Exception:\n            pass  # Token is invalid or expired\n\n@app.route('/')\ndef index():\n    return 'Welcome to the website!'\n\nif __name__ == '__main__':\n    app.run()