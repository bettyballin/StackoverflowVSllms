import time\n   from selenium import webdriver\n   from selenium.webdriver.chrome.service import Service as ChromeService\n   from subprocess import CREATE_NO_WINDOW\n   from undetected_chromedriver import ChromeOptions\n\n   # Setup Chrome Options\n   options = ChromeOptions()\n   service = ChromeService(executable_path='path/to/chromedriver', creationflags=CREATE_NO_WINDOW)\n   driver = webdriver.Chrome(service=service, options=options)\n\n   # Connect to the browser's DevTools Protocol\n   devtools = driver.execute_cdp_cmd("Network.enable", {})\n\n   # Set up performance metrics collection\n   log = []\n   def collect_request_details(request):\n       if 'response' in request:\n           response = request['response']\n           timing = response.get('timing', {})\n           start_time = response.get('timestamp') * 1000\n           total_time = (timing.get('receiveHeadersEnd', 0) - timing.get('requestTime', 0)) / 1000\n\n           log.append({\n               "url": response['url'],\n               "status_code": response['status'],\n               "content_length": response['encodedDataLength'],\n               "time_to_load": total_time\n           })\n\n   driver.execute_cdp_cmd("Network.setRequestInterception", {"patterns": []})\n   driver.add_cdp_listener('Network.requestWillBeSent', collect_request_details)\n   driver.add_cdp_listener('Network.responseReceived', collect_request_details)\n\n   # Navigate to the website\n   driver.get('https://www.example.com')\n\n   # Wait for the page to load completely (you can add more sophisticated waits here if needed)\n   time.sleep(5)  # Adjust this as necessary\n\n   # Print out the collected log\n   for entry in log:\n       print(f"URL: {entry['url']}, Status Code: {entry['status_code']}, "\n             f"Content Length: {entry['content_length']} bytes, Load Time: {entry['time_to_load']} ms")\n\n   driver.quit()