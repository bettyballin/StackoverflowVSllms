class TeamMember:\n    def __init__(self, skill_level):\n        self.skill_level = skill_level\n\nclass ProcessStep:\n    def __init__(self, name, efficiency_factor):\n        self.name = name\n        self.efficiency_factor = efficiency_factor  # 0-1 scale\n\ndef evaluate_team_and_process(team, process_steps):\n    team_efficiency = sum(member.skill_level for member in team) / len(team)\n    process_efficiency = sum(step.efficiency_factor for step in process_steps) / len(process_steps)\n    return {'team_efficiency': team_efficiency, 'process_efficiency': process_efficiency}\n\n# Example usage\nteam = [TeamMember(8), TeamMember(9), TeamMember(7)]\nprocess = [\n    ProcessStep('Code Review', 0.8),\n    ProcessStep('Testing', 0.75),\n    ProcessStep('Deployment', 0.85)\n]\n\nefficiency_evaluation = evaluate_team_and_process(team, process)\nprint(efficiency_evaluation)