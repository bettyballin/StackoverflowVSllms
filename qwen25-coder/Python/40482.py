import importlib.util\nfrom typing import List, Callable\n\nclass Application:\n    def __init__(self):\n        self.plugins: List[Callable] = []\n\n    def register(self, plugin_func: Callable):\n        """ Register plugin function """\n        self.plugins.append(plugin_func)\n\n    def execute_plugins(self):\n        """ Execute all registered plugins """\n        for plugin in self.plugins:\n            print(f"Executing plugin {plugin.__name__}")\n            plugin()\n\ndef load_plugin(module_path, class_name=None):\n    spec = importlib.util.spec_from_file_location("module.name", module_path)\n    module = importlib.util.module_from_spec(spec)\n    spec.loader.exec_module(module)\n\n    if class_name:\n        return getattr(module, class_name)()\n    else:\n        return module\n\nif __name__ == "__main__":\n    app = Application()\n\n    # Load and register plugins\n    plugin1 = load_plugin("path/to/plugin1.py")\n    plugin2 = load_plugin("path/to/plugin2.py")\n\n    if callable(plugin1):\n        app.register(plugin1)\n    if callable(plugin2):\n        app.register(plugin2)\n\n    # Execute all registered plugins\n    app.execute_plugins()