from scipy.spatial.distance import cdist\nimport numpy as np\nfrom scipy.optimize import linear_sum_assignment\n\n# Define the coordinates of the cities\ncities = np.array([\n    [0, 0],\n    [2, 3],\n    [5, 1],\n    [7, 4]\n])\n\n# Calculate distance matrix\ndistance_matrix = cdist(cities, cities, metric='euclidean')\n\n# Solve using Hungarian algorithm (which is often used for assignment problems)\nrow_ind, col_ind = linear_sum_assignment(distance_matrix)\n\n# Output the optimized route and total distance\noptimized_route = list(zip(row_ind, col_ind))\ntotal_distance = distance_matrix[row_ind, col_ind].sum()\n\nprint("Optimized Route:", optimized_route)\nprint("Total Distance:", total_distance)