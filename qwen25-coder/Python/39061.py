from tlslite.api import TLSConnection, parsePEMKey, X509CertChain\nimport socket\n\nclass XMPPClient(object):\n    def __init__(self, server_address, port):\n        self.logger = logging.getLogger('XMPPClient')\n        self.server_address = server_address\n        self.port = port\n        self.socket = socket.create_connection((server_address, port))\n    \n    def handshakeTls(self, ca_certs=None, client_cert_file=None, client_key_file=None):\n        """\n        Encrypt the socket using the tlslite module and perform a TLS handshake.\n        Optionally provide CA certificates for verification (highly recommended),\n        as well as client certificate and key files if mutual authentication is required.\n        """\n        self.logger.info("Activating TLS encryption")\n        \n        # Wrap the existing socket in a TLS connection\n        tls_connection = TLSConnection(self.socket)\n        \n        # Load CA certificates for verification if provided\n        if ca_certs:\n            tls_connection.useCertificateChain(X509CertChain(chainStr=ca_certs))\n        \n        try:\n            # Perform client-side handshake. If you need to authenticate using a client certificate,\n            # provide the necessary parameters.\n            if client_cert_file and client_key_file:\n                cert = parsePEMKey(client_cert_file, private=False)\n                key = parsePEMKey(client_key_file, private=True)\n                tls_connection.handshakeClientCert(certChain=cert, privateKey=key)\n            else:\n                tls_connection.handshakeClientCert()\n            \n            self.socket = tls_connection\n            self.logger.info("TLS handshake successful")\n        \n        except Exception as e:\n            self.logger.error(f"TLS handshake failed: {e}")\n            self.socket.close()  # Close the socket on failure\n\n# Usage example\nxmpp_client = XMPPClient('example.com', 5223)\nxmpp_client.handshakeTls(ca_certs='/path/to/ca-certs.pem', client_cert_file='/path/to/client-cert.pem', client_key_file='/path/to/client-key.pem')