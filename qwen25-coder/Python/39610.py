from PIL import Image\n\ndef fill_bounding_box(image_path, output_path, bbox_width, bbox_height):\n    # Open an image file\n    with Image.open(image_path) as img:\n        img_width, img_height = img.size\n        \n        # Calculate the scaling factor for width and height\n        scale_factor_width = bbox_width / img_width\n        scale_factor_height = bbox_height / img_height\n        \n        # Choose the largest scale factor to fill the bounding box\n        scale_factor = max(scale_factor_width, scale_factor_height)\n        \n        # Calculate new dimensions\n        new_width = int(img_width * scale_factor)\n        new_height = int(img_height * scale_factor)\n        \n        # Resize image\n        img_resized = img.resize((new_width, new_height), Image.ANTIALIAS)\n        \n        # Calculate crop box to center the image\n        left = (new_width - bbox_width) / 2\n        top = (new_height - bbox_height) / 2\n        right = left + bbox_width\n        bottom = top + bbox_height\n        \n        # Crop the resized image to fit the bounding box\n        img_cropped = img_resized.crop((left, top, right, bottom))\n        \n        # Save the resulting image\n        img_cropped.save(output_path)\n\n# Example usage:\nfill_bounding_box('input.jpg', 'output.jpg', 100, 50)