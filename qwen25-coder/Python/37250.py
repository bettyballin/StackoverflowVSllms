def pin(x, min_val, max_val):\n    return min(max_val, max(min_val, x))\n\ndef calculate_final_cost(bid):\n    usage_cost = pin(bid * 0.10, 10, 50)\n    seller_cost = bid * 0.02\n    added_cost = (pin((bid // 500) * 5, 5, 10) +\n                  pin(((max(0, bid - 1000)) // 2000) * 5, 0, 10))\n    storing_cost = 100\n    return usage_cost + added_cost + seller_cost + storing_cost + bid\n\ndef find_bid_for_final_cost(final_cost, tolerance=0.01):\n    # Binary search for the bid\n    low, high = final_cost - 1500, final_cost  # Reasonable initial bounds\n    while high - low > tolerance:\n        mid = (low + high) / 2\n        if calculate_final_cost(mid) < final_cost:\n            low = mid\n        else:\n            high = mid\n    return (low + high) / 2\n\n# Example usage:\nfinal_target_cost = 2000\nbid_required = find_bid_for_final_cost(final_target_cost)\nprint(f"Bid required to make the total cost ${final_target_cost}: ${bid_required:.2f}")