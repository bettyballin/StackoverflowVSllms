from Crypto.Cipher import AES\nfrom os import urandom\n\n# Key and data setup\nkey = urandom(16)  # AES-128 key\nplaintext = b'Hello, World! This is a test.'\n\n# CBC example\niv_cbc = urandom(AES.block_size)\ncipher_cbc = AES.new(key, AES.MODE_CBC, iv_cbc)\npadded_plaintext_cbc = plaintext + b'\0' * (-len(plaintext) % AES.block_size)  # Padding for CBC\nciphertext_cbc = cipher_cbc.encrypt(padded_plaintext_cbc)\n\n# CTR example\niv_ctr = urandom(AES.block_size // 2)\ncipher_ctr = AES.new(key, AES.MODE_CTR, nonce=iv_ctr)\nciphertext_ctr = cipher_ctr.encrypt(plaintext)  # No padding needed for CTR\n\nprint("CBC Ciphertext:", ciphertext_cbc)\nprint("CTR Ciphertext:", ciphertext_ctr)