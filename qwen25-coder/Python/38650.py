import io\nimport chardet\n\ndef detect_and_decode_file(file_path):\n    # Read the file as binary\n    with open(file_path, 'rb') as f:\n        raw_data = f.read()\n\n    # Detect encoding using chardet library\n    result = chardet.detect(raw_data)\n    encoding = result['encoding']\n\n    # Try to decode the data based on detected encoding or fallbacks\n    try:\n        if encoding.lower() == 'utf-16le':\n            return raw_data.decode('utf-16le')\n        else:\n            # Fallback to cp1252 for ANSI, which is a common superset of Windows ANSI encodings\n            return raw_data.decode('cp1252')\n    except UnicodeDecodeError:\n        print(f"Failed to decode file {file_path} with detected encoding {encoding}.")\n        raise\n\n# Example usage\nfile_content = detect_and_decode_file('example.txt')\nprint(file_content)