from sympy.ntheory import factorint\n\n# Assume n is something in your range, for example:\nn = 45037899176  # This is just an example of a large 36-bit number, not from your specific case.\nciphertexts = [31116156015, 33031668326, 37351399313]  # Example ciphertexts\n\n# Factorize n\nfactors = factorint(n)\nprint(f"Factors of n: {factors}")\n\n# Assuming factors are p and q\np, q = list(factors.keys())\n\n# Calculate phi(n) and potentially d if e is known\nfrom sympy import mod_inverse\n\nphi_n = (p-1) * (q-1)\ne = 65537  # Commonly used public exponent, just an example\n\ntry:\n    d = mod_inverse(e, phi_n)\n    print(f"Private key d: {d}")\nexcept ValueError as e:\n    print(f"Error calculating d: {e}")