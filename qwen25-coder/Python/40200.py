import os\nimport hashlib\n\ndef sample_file_bytes(path, num_samples=3, bytes_per_sample=4096):\n    size = os.path.getsize(path)\n    samples = b''\n    \n    # Read the first few bytes\n    if size > 0:\n        with open(path, 'rb') as f:\n            samples += f.read(bytes_per_sample)\n            \n            # Middle sample\n            if size > 2 * bytes_per_sample:\n                f.seek(size // 2 - bytes_per_sample // 2)\n                samples += f.read(bytes_per_sample)\n            \n            # Last few bytes\n            if size > 3 * bytes_per_sample:\n                f.seek(-bytes_per_sample, os.SEEK_END)\n                samples += f.read(bytes_per_sample)\n\n    return hashlib.md5(samples).hexdigest()\n\ndef calculate_file_identity(path):\n    file_size = os.path.getsize(path)\n    sample_hash = sample_file_bytes(path)\n    \n    # Combine file size with hash of sampled bytes\n    return hashlib.sha1(f"{file_size}_{sample_hash}".encode()).hexdigest()