from math import sqrt\n\ndef euclidean_distance(point1, point2):\n    return sqrt((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2)\n\ndef filter_points(points, distance_threshold=1.5):\n    filtered_points = []\n    for point in points:\n        # Check if this point is too close to any of the already selected points\n        if not any(euclidean_distance(point[:2], p[:2]) < distance_threshold for p in filtered_points):\n            # If it's not too close, add it to the result set\n            filtered_points.append(point)\n    return filtered_points\n\n# Example list of points\npoints = [\n    (6, 2, 6.1580555555555554),\n    (2, 1, 5.4861111111111107),\n    (1, 1, 4.6736111111111107),\n    (1, 4, 4.5938888888888885),\n    (2, 0, 4.54),\n    (1, 5, 4.4480555555555554),\n    (4, 7, 4.4480555555555554),\n    (5, 7, 4.4059637188208614),\n    (4, 8, 4.3659637188208613),\n    (1, 0, 4.3611111111111107),\n    (5, 8, 4.3342191043083904),\n    (5, 2, 4.119574829931973),\n]\n\n# Filter points with a distance threshold of 1.5\nfiltered_points = filter_points(points)\nfor point in filtered_points:\n    print(point)