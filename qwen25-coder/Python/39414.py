# Example of using SHA-256 and MurmurHash3 in a hypothetical scenario\nimport hashlib\nimport mmh3  # MurmurHash3 library\n\ndef hash_large_file(file_path):\n    # Using SHA-256 for larger files\n    sha256_hash = hashlib.sha256()\n    with open(file_path, "rb") as f:\n        for byte_block in iter(lambda: f.read(4096), b""):\n            sha256_hash.update(byte_block)\n    return sha256_hash.hexdigest()\n\ndef hash_small_file(file_path):\n    # Using MurmurHash3 for smaller files\n    with open(file_path, 'rb') as file:\n        data = file.read()\n        if len(data) > 2048:  # Example size threshold\n            raise Exception("File is too large for small file hashing")\n        return mmh3.hash_bytes(data).hex()\n\n# Usage\nlarge_file_hash = hash_large_file("example_large_executable.exe")\nsmall_file_hash = hash_small_file("script.py")\nprint(f"Large File Hash: {large_file_hash}")\nprint(f"Small File Hash: {small_file_hash}")