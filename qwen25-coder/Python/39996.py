import os\nfrom fuse import FUSE, Operations\n\nclass ExecAsFile(Operations):\n    def __init__(self, exec_path="/path/to/executable"):\n        self.exec_path = exec_path\n\n    def read(self, path, size, offset) -> bytes:\n        process_output = os.popen(self.exec_path).read()[offset:offset+size]\n        return process_output.encode()\n\n    def getattr(self, path, fh=None):\n        if path != '/':\n            raise OSError(2, 'No such file or directory')\n        st = os.stat('/')\n        return dict((key, getattr(st, key)) for key in (\n            'st_atime', 'st_ctime',\n            'st_gid', 'st_mode', 'st_mtime',\n            'st_nlink', 'st_size', 'st_uid'))\n\nif __name__ == '__main__':\n    from sys import argv\n    mount_point = "/mnt/exec_as_file"\n    if not os.path.exists(mount_point):\n        os.mkdir(mount_point)\n    FUSE(ExecAsFile(), mount_point, nothreads=True, foreground=True)