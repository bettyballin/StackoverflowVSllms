import os\nimport time\nfrom collections import defaultdict\n\nclass File:\n    def __init__(self, path):\n        self.path = path\n        stat_info = os.stat(path)\n        self.size = stat_info.st_size\n        self.creation_time = stat_info.st_ctime\n        self.extension = os.path.splitext(path)[-1]\n    \n    def get_features(self):\n        return {\n            'size': self.size,\n            'creation_time': self.creation_time,\n            'extension': self.extension\n        }\n\ndef extract_files(directory):\n    files = []\n    for root, _, filenames in os.walk(directory):\n        for filename in filenames:\n            path = os.path.join(root, filename)\n            files.append(File(path))\n    return files\n\ndef group_by_features(files, criterion='size'):\n    groups = defaultdict(list)\n    for file in files:\n        feature_value = getattr(file, criterion)\n        groups[feature_value].append(file)\n    return groups\n\ndef main():\n    directory_path = '/path/to/your/directory'\n    files = extract_files(directory_path)\n    grouped_by_size = group_by_features(files, 'size')\n    \n    for size, group in grouped_by_size.items():\n        print(f"Files with size {size}:")\n        for file in group:\n            print(file.path)\n\nif __name__ == "__main__":\n    main()