from time import time\n\nclass RateLimiter:\n    def __init__(self, max_attempts=5, ban_duration=300):\n        self.attempts = {}\n        self.max_attempts = max_attempts\n        self.ban_duration = ban_duration\n\n    def is_allowed(self, username):\n        if username in self.attempts and time() - self.attempts[username][1] < self.ban_duration:\n            return False\n        return True\n\n    def record_attempt(self, username, success=False):\n        current_time = time()\n        if not success:\n            if username in self.attempts:\n                attempt_count, last_attempt_time = self.attempts[username]\n                if current_time - last_attempt_time < self.ban_duration:\n                    if attempt_count >= self.max_attempts:\n                        return\n                    else:\n                        self.attempts[username] = (attempt_count + 1, current_time)\n                else:\n                    # Reset the attempts after ban duration has passed\n                    self.attempts[username] = (1, current_time)\n            else:\n                # First failed attempt\n                self.attempts[username] = (1, current_time)\n        else:\n            # Successful login resets any failed attempts\n            if username in self.attempts:\n                del self.attempts[username]