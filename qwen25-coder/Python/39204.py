def merge_ranges(ranges):\n    from collections import defaultdict\n\n    # Step 1: Create events for all start and end points\n    events = []\n    for start, end, label in ranges:\n        events.append((start, +1, label))  # Start of an interval\n        events.append((end, -1, label))   # End of an interval\n\n    # Step 2: Sort events\n    events.sort()\n\n    # Step 3: Sweep line algorithm to find non-overlapping intervals with combined labels\n    active_intervals = defaultdict(int)\n    current_ranges = []\n    for point, direction, label in events:\n        if not current_ranges:\n            current_start = point\n\n        if direction == +1:\n            active_intervals[label] += 1\n        else:  # direction == -1\n            active_intervals[label] -= 1\n\n            if direction < 0 and all(value == 0 for value in active_intervals.values()):\n                labels = [k for k, v in active_intervals.items() if v > 0]\n                current_ranges.append((current_start, point, ', '.join(labels)))\n                current_start = point + 1\n\n    return current_ranges\n\n# Example usage\nranges = [\n    (0, 100, 'a'),\n    (0, 75, 'b'),\n    (95, 150, 'c'),\n    (120, 130, 'd')\n]\n\nresult = merge_ranges(ranges)\nfor start, end, labels in result:\n    print(f"{start} - {end}: '{labels}'")