from collections import deque\n\ndef bfs_all_paths(graph, start, goal):\n    # Queue to hold paths instead of single nodes\n    queue = deque([[start]])\n    paths = []\n    \n    while queue:\n        current_path = queue.popleft()\n        current_node = current_path[-1]\n        \n        if current_node == goal:\n            paths.append(current_path)\n        \n        for neighbor in graph[current_node]:\n            new_path = list(current_path)\n            new_path.append(neighbor)\n            queue.append(new_path)\n    \n    return paths\n\n# Example usage\ngraph = {\n    4: [5, 6],\n    5: [7, 8],\n    6: [9],\n    7: [],\n    8: [],\n    9: []\n}\n\npaths = bfs_all_paths(graph, 4, 7)\nprint("Paths from 4 to 7:", paths)