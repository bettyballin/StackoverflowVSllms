import urllib2\n\nclass CustomProxyHandler(urllib2.ProxyHandler):\n    def __init__(self, proxies=None, exceptions=None):\n        urllib2.ProxyHandler.__init__(self, proxies)\n        self.exceptions = exceptions if exceptions else []\n\n    def proxy_open(self, req, **kwargs):\n        # Get the hostname of the request\n        host = req.get_host().split(':')[0]\n\n        # Check if the host is in the no-proxy list\n        if host in self.exceptions:\n            return None  # No proxy should be used\n\n        # Otherwise use the normal logic\n        return urllib2.ProxyHandler.proxy_open(self, req, **kwargs)\n\n# Proxy information\nproxy_info = {\n    'host': 'myproxy.com',\n    'user': 'Username',\n    'pass': 'Password',\n    'port': 1080\n}\n\nhttp_str = "http://%(user)s:%(pass)s@%(host)s:%(port)d" % proxy_info\n\n# Define the no-proxy list (exceptions)\nno_proxy_hosts = ['localhost', 'example.com']\n\n# Set up the custom proxy handler with exceptions\nproxy_handler = CustomProxyHandler(proxies={'http': http_str}, exceptions=no_proxy_hosts)\n\n# Apply this handler to an opener\nopener = urllib2.build_opener(proxy_handler, urllib2.HTTPHandler)\nurllib2.install_opener(opener)