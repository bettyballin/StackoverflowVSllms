import requests\n\ndef get_coordinates(zip_code):\n    # Example using Google Maps API, replace `YOUR_API_KEY` with your actual API key\n    api_key = 'YOUR_API_KEY'\n    url = f'https://maps.googleapis.com/maps/api/geocode/json?address={zip_code}&key={api_key}'\n    response = requests.get(url)\n    data = response.json()\n    if data['status'] == 'OK':\n        location = data['results'][0]['geometry']['location']\n        return location['lat'], location['lng']\n    else:\n        raise Exception("API call failed")\n\ndef haversine(lat1, lon1, lat2, lon2):\n    from math import radians, sin, cos, sqrt, atan2\n    R = 6371.0  # Earth radius in kilometers\n\n    lat1_rad, lon1_rad = map(radians, (lat1, lon1))\n    lat2_rad, lon2_rad = map(radians, (lat2, lon2))\n\n    dlat = lat2_rad - lat1_rad\n    dlon = lon2_rad - lon1_rad\n\n    a = sin(dlat / 2)**2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon / 2)**2\n    c = 2 * atan2(sqrt(a), sqrt(1 - a))\n\n    distance = R * c\n    return distance * 0.621371  # Convert km to miles\n\ndef filter_items_by_zip_code(user_zip, items, max_distance=1):\n    user_lat, user_lon = get_coordinates(user_zip)\n    filtered_items = []\n\n    for item in items:\n        item_lat, item_lon = get_coordinates(item['zip'])\n        distance = haversine(user_lat, user_lon, item_lat, item_lon)\n        \n        if distance <= max_distance:\n            filtered_items.append(item)\n\n    return filtered_items\n\n# Example usage\nitems = [{'name': 'DVD', 'zip': '12345'}, {'name': 'Book', 'zip': '67890'}]\nuser_zip = '12345'\nfiltered_items = filter_items_by_zip_code(user_zip, items)\nprint(filtered_items)