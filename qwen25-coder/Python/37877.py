from collections import defaultdict\nimport time\n\nclass RateLimiter:\n    def __init__(self, max_calls=100, period=3600):\n        self.max_calls = max_calls\n        self.period = period\n        self.calls = defaultdict(list)\n\n    def is_allowed(self, key):\n        current_time = time.time()\n        # Remove old timestamps from the list\n        self.calls[key] = [t for t in self.calls[key] if current_time - t < self.period]\n\n        # Check if allowed\n        if len(self.calls[key]) < self.max_calls:\n            self.calls[key].append(current_time)\n            return True\n        else:\n            return False\n\n# Example usage\nlimiter = RateLimiter(max_calls=10, period=60)  # Allow up to 10 votes per minute\nprint(limiter.is_allowed("user_123"))  # Returns True until the rate limit is hit