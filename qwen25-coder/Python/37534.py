from html.parser import HTMLParser\n\ndef CutIt(html_string, max_length):\n    class TagPreservingHTMLParser(HTMLParser):\n        def __init__(self):\n            super().__init__()\n            self.result = []\n            self.current_tag = None\n            self.current_attr = ""\n            self.length = 0\n\n        def handle_starttag(self, tag, attrs):\n            if self.length >= max_length:\n                return\n            start_tag = f"<{tag}"\n            for attr in attrs:\n                start_tag += f' {attr[0]}="{attr[1]}"'\n            start_tag += ">"\n            self.result.append(start_tag)\n            self.current_tag = tag\n            self.length += len(start_tag)\n\n        def handle_endtag(self, tag):\n            if self.length >= max_length:\n                return\n            end_tag = f"</{tag}>"\n            self.result.append(end_tag)\n            self.length += len(end_tag)\n\n        def handle_data(self, data):\n            if self.length >= max_length:\n                return\n            remaining_space = max_length - self.length\n            data_chunk = data[:remaining_space]\n            self.result.append(data_chunk)\n            self.length += len(data_chunk)\n\n    parser = TagPreservingHTMLParser()\n    parser.feed(html_string)\n    return ''.join(parser.result)\n\n# Example usage\nhtml_input = 'Visit <a href="www.htz.hr">Croatia</a> this summer.'\nprint(CutIt(html_input, 9))