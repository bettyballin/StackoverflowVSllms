def solve_sudoku(board_str):\n    def r(a):\n        i = a.find('0')\n        if i == -1:\n            print(a)\n            return True  # Puzzle solved\n\n        for m in '123456789':\n            if is_valid(a, i, m):\n                if r(a[:i] + m + a[i+1:]):\n                    return True\n        return False\n\n    def is_valid(a, p, v):\n        return not any(\n            (a[j] == v and (\n                j // 9 == p // 9 or  # same row\n                j % 9 == p % 9 or   # same column\n                (j//27 == p//27 and j%9//3 == p%9//3)  # same block\n            ))\n            for j in range(81)\n        )\n\n    r(board_str)\n\n# Example usage:\nsolve_sudoku('0'*81)  # Starting with an empty board (replace with a puzzle string)