import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, Gdk, GdkPixbuf, cairo\n\nclass DrawingWindow(Gtk.Window):\n\n    def __init__(self):\n        super(DrawingWindow, self).__init__()\n        self.drawing_area = Gtk.DrawingArea()\n        self.add(self.drawing_area)\n        \n        # Load image and convert to ARGB32 format\n        self.image = GdkPixbuf.Pixbuf.new_from_file("image.png").scale_simple(\n            800, 600, GdkPixbuf.InterpType.BILINEAR)  # Adjust size as needed\n        self.image = self.image.scale_simple(self.image.get_width(), self.image.get_height(),\n                                              GdkPixbuf.InterpType.BILINEAR).copy(GdkPixbuf.Colorspace.RGB,\n                                                                                  True, 8)\n        \n        # Connect the expose event to draw on window\n        self.drawing_area.connect("draw", self.area_expose_cb)\n\n    def area_expose_cb(self, area, context):\n        cr = context\n        \n        # Create a Cairo surface from the Pixbuf and draw it onto the GdkWindow\n        surface = Gdk.cairo_surface_create_from_pixbuf(self.image, 0, None)\n        cr.set_source_surface(surface, 0, 0)  # x, y can be adjusted if needed\n        cr.paint()\n        \n        return False\n\nwindow = DrawingWindow()\nwindow.connect("destroy", Gtk.main_quit)\nwindow.show_all()\nGtk.main()