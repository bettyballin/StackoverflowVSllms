from django.http import HttpResponseForbidden\nfrom django.utils.functional import wraps\n\nclass RateLimitMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n        self.rate_limits = {}\n\n    def __call__(self, request):\n        ip = request.META.get('REMOTE_ADDR', '')\n        if ip in self.rate_limits and (self.rate_limits[ip]['count'] >= 10): \n            # Simple rate limiting: max 10 requests per hour from same IP\n            if (self.rate_limits[ip]['timestamp'] - datetime.now()).seconds < 3600:\n                return HttpResponseForbidden("Rate limit exceeded. Try again later.")\n        else:\n            self.rate_limits[ip] = {'count': 1, 'timestamp': datetime.now()}\n        \n        response = self.get_response(request)\n        if ip in self.rate_limits:\n            self.rate_limits[ip]['count'] += 1\n\n        return response