def pagerank(links, d=0.85, max_iterations=100, tol=1.0e-6):\n    """\n    Simplified version of Google's PageRank algorithm.\n    :param links: A dictionary mapping each page to a list of pages it links to.\n    :param d: Damping factor (probability of continuing search rather than jumping to random page).\n    :param max_iterations: Maximum number of iterations of power method.\n    :param tol: Error tolerance for convergence.\n    """\n    N = len(links)\n    rank = dict((node, 1.0/N) for node in links)\n\n    for _ in range(max_iterations):\n        diff = 0\n        new_rank = {}\n        for node in links:\n            r_sum = sum(rank[incoming] / len(links[incoming]) for incoming in links if node in links[incoming])\n            new_rank[node] = (1 - d) + d * r_sum\n\n            diff += abs(new_rank[node] - rank[node])\n\n        rank = new_rank\n        if diff < tol:\n            return rank\n\n    return rank