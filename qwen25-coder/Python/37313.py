import intelhex\n\ndef fill_hex_with_pattern(input_file, output_file, fill_pattern):\n    ih = intelhex.IntelHex()\n    ih.loadfile(input_file, format='hex')\n    max_addr = max(ih._buf.keys())\n\n    pattern_length = len(fill_pattern)\n    for addr in range(max_addr + 1):\n        if addr not in ih:\n            # Determine the byte to use from the fill pattern\n            pattern_byte = fill_pattern[addr % pattern_length]\n            ih.puts(addr, bytes([pattern_byte]))\n\n    ih.tofile(output_file, format='hex')\n\n# Usage\nfill_hex_with_pattern('input.hex', 'filled_output.hex', b'\xc2\xaf\x00')