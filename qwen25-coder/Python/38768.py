def verify_ssl_certificate(server_cert, intermediate_certs, root_store):\n    # Create chain of certificates\n    cert_chain = [server_cert] + intermediate_certs\n    \n    # Check if any certificate in the chain is revoked\n    check_revocation(cert_chain)\n    \n    # Start from the server's certificate and move up the chain\n    for cert_index in range(len(cert_chain) - 1):\n        issuer_cert = cert_chain[cert_index + 1]\n        child_cert = cert_chain[cert_index]\n        \n        if not verify_signature(issuer_cert.public_key, child_cert.signature, child_cert.data):\n            raise Exception("Invalid certificate signature")\n    \n    # Verify the root certificate is in our trust store\n    root_cert = cert_chain[-1]\n    if root_cert.fingerprint not in root_store:\n        raise Exception("Untrusted CA")\n    \n    return True\n\ndef check_revocation(cert_chain):\n    for cert in cert_chain:\n        if is_certificate_revoked(cert):\n            raise Exception("Certificate revoked")