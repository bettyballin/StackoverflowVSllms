import threading\nimport queue\n\nclass MessagePasser:\n    def __init__(self):\n        self.queues = {}\n\n    def send_message(self, recipient, msg):\n        if recipient not in self.queues:\n            self.queues[recipient] = queue.Queue()\n        self.queues[recipient].put(msg)\n\n    def receive_messages(self, name):\n        return self.queues.get(name, [])\n\ndef worker(id, msg_passer, other_id):\n    for _ in range(10):\n        msg_passer.send_message(other_id, f"Hello from {id}")\n    while True:\n        msgs = msg_passer.receive_messages(id)\n        for msg in msgs:\n            print(f"Process {id} received: {msg}")\n\ndef main():\n    msg_passer = MessagePasser()\n    threads = [\n        threading.Thread(target=worker, args=(1, msg_passer, 2)),\n        threading.Thread(target=worker, args=(2, msg_passer, 1))\n    ]\n\n    for thread in threads:\n        thread.start()\n\nif __name__ == "__main__":\n    main()