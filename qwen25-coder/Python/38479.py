import os\nimport sys\n\nclass SensitiveDataHolder:\n    def __init__(self, password):\n        self._password = None\n        self.set_password(password)\n\n    def set_password(self, password):\n        if self._password is not None:\n            self.clear_password()\n        self._password = bytearray(password.encode('utf-8'))\n\n    def clear_password(self):\n        if self._password is not None:\n            for i in range(len(self._password)):\n                self._password[i] = 0\n            del self._password\n            self._password = None\n\ndef store_user_password(password):\n    try:\n        password_holder = SensitiveDataHolder(password)\n        # Simulate some operations that need the password\n        print("Password stored securely")\n    finally:\n        password_holder.clear_password()\n\nif __name__ == "__main__":\n    user_password = os.getenv('SECURE_PASSWORD')\n    if user_password:\n        store_user_password(user_password)\n    else:\n        print("No password provided", file=sys.stderr)