from Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\nimport base64\n\ndef encrypt_message(key, message):\n    # Ensure key length is 32 bytes for AES-256\n    assert len(key) == 32\n    \n    iv = get_random_bytes(AES.block_size)\n    cipher = AES.new(key, AES.MODE_CFB, iv)\n    \n    encrypted_msg = cipher.encrypt(message.encode())\n    return base64.b64encode(iv + encrypted_msg).decode()\n\ndef decrypt_message(key, encrypted_message):\n    # Ensure key length is 32 bytes for AES-256\n    assert len(key) == 32\n    \n    b64_encrypted_message = base64.b64decode(encrypted_message)\n    iv = b64_encrypted_message[:AES.block_size]\n    cipher_text = b64_encrypted_message[AES.block_size:]\n    \n    cipher = AES.new(key, AES.MODE_CFB, iv)\n    return cipher.decrypt(cipher_text).decode()