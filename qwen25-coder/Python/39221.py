from sklearn.calibration import CalibratedClassifierCV\nfrom sklearn.svm import LinearSVC\nfrom sklearn.datasets import make_classification\n\n# Assuming X_train and y_train are your downsampled data and labels\nX_train, y_train = make_classification(n_samples=10000, n_features=20, weights=[0.9], random_state=42)\n\n# Train a model (e.g., LinearSVC)\nmodel = LinearSVC()\n\n# Calibrate the model using Platt Scaling\ncalibrated_model = CalibratedClassifierCV(model, method='sigmoid', cv=5)\ncalibrated_model.fit(X_train, y_train)\n\n# Now, you can predict probabilities on new data\nX_test, _ = make_classification(n_samples=1000, n_features=20, weights=[0.9], random_state=42)\nprobabilities = calibrated_model.predict_proba(X_test)[:, 1]\n\nprint(probabilities[:10])