function findMaxRange(data, windowSize):\n    n = length(data)\n    if n == 0:\n        return 0\n\n    minDeque = deque()\n    maxDeque = deque()\n\n    maxRange = -infinity\n\n    for i from 0 to n - 1:\n        // Remove elements outside the current window\n        while not minDeque.empty() and minDeque.front() <= i - windowSize:\n            minDeque.pop_front()\n        while not maxDeque.empty() and maxDeque.front() <= i - windowSize:\n            maxDeque.pop_front()\n\n        // Maintain deque for minimum values\n        while not minDeque.empty() and data[minDeque.back()] >= data[i]:\n            minDeque.pop_back()\n        minDeque.push_back(i)\n\n        // Maintain deque for maximum values\n        while not maxDeque.empty() and data[maxDeque.back()] <= data[i]:\n            maxDeque.pop_back()\n        maxDeque.push_back(i)\n\n        // Calculate range if we have a complete window\n        if i >= windowSize - 1:\n            maxRange = max(maxRange, data[maxDeque.front()] - data[minDeque.front()])\n\n    return maxRange