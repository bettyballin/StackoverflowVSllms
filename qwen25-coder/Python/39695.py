import hashlib\nimport os\nimport uuid\n\ndef hash_password(password, salt=None):\n    if salt is None:\n        # Generate a 16-byte random salt\n        salt = os.urandom(16)\n        return hashlib.pbkdf2_hmac('sha256', password.encode(), salt, 100000), salt\n    else:\n        # Use the provided salt (could be non-random and unique per user)\n        return hashlib.pbkdf2_hmac('sha256', password.encode(), salt, 100000)\n\n# Example with a random salt\nhash_random_salt, generated_salt = hash_password("securepassword")\nprint("Hash with Random Salt:", hash_random_salt.hex())\nprint("Generated Random Salt:", generated_salt.hex())\n\n# Example with a non-random but unique user-based salt (e.g., email address)\nuser_email = "user@example.com".encode()\nhash_unique_salt = hash_password("securepassword", user_email)[0]\nprint("Hash with Unique Non-Random Salt:", hash_unique_salt.hex())