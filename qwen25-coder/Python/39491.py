def detect_cycle(graph):\n    visited = set()\n    rec_stack = set()\n\n    def dfs(v):\n        visited.add(v)\n        rec_stack.add(v)\n\n        for neighbor in graph[v]:\n            if neighbor not in visited:\n                if dfs(neighbor):\n                    return True\n            elif neighbor in rec_stack:\n                return True\n\n        rec_stack.remove(v)\n        return False\n\n    for node in graph:\n        if node not in visited:\n            if dfs(node):\n                return "Cycle detected"\n    \n    return "No cycles detected"\n\n# Example usage:\ngraph = {\n    0: [1],\n    1: [2],\n    2: [0],  # This creates a cycle\n    3: [4]\n}\n\nresult = detect_cycle(graph)\nprint(result)  # Output will be "Cycle detected"