class SkewnessKurtosis:\n    def __init__(self):\n        self.count = 0\n        self.mean = 0\n        self.M2 = 0\n        self.M3 = 0\n        self.M4 = 0\n\n    def addNum(self, value: float) -> None:\n        delta = value - self.mean\n        delta_n = delta / (self.count + 1)\n        delta_n2 = delta_n * delta_n\n        term1 = delta * delta_n * self.count\n\n        self.mean += delta_n\n        self.M4 += term1 * delta_n2 * (self.count**2 - 3*self.count + 3) + \\n                   6 * delta_n2 * self.M2 - 4 * delta_n * self.M3\n        self.M3 += term1 * delta_n * (self.count - 2) - 3 * delta_n * self.M2\n        self.M2 += term1\n\n    def skewness(self):\n        return ((self.count ** 0.5) / (self.M2 ** 1.5)) * self.M3 if self.M2 > 0 else float('inf')\n\n    def kurtosis(self):\n        m4_over_m2_squared = (self.M2 * self.M2)\n        return (((self.count*self.M4)/(m4_over_m2_squared) - 3*(self.count-1)) / (self.count-2)) if self.count > 2 and m4_over_m2_squared > 0 else float('inf')