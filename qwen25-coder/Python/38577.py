def postorder_to_preorder(postorder, node_is_leaf):\n    if not postorder:\n        return []\n\n    # The last element in postorder is always the root of this tree/ subtree.\n    root = postorder[-1]\n    preorder = [root]\n\n    if node_is_leaf(root):\n        return preorder\n\n    # Find the left and right subtrees in the postorder sequence.\n    for i, val in enumerate(postorder[:-1]):\n        if not node_is_leaf(val):\n            break\n    else:\n        i += 1\n\n    left_subtree = postorder[:i]\n    right_subtree = postorder[i:len(postorder) - 1]\n\n    # Recursively convert subtrees.\n    preorder.extend(postorder_to_preorder(left_subtree, node_is_leaf))\n    preorder.extend(postorder_to_preorder(right_subtree, node_is_leaf))\n\n    return preorder