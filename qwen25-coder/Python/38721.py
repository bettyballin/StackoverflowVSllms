import numpy as np\n\n# Function to normalize data\ndef normalize(data):\n    mean = np.mean(data, axis=0)\n    std_dev = np.std(data, axis=0)\n    return (data - mean) / std_dev\n\n# Function to calculate Euclidean distance\ndef euclidean_distance(set1, set2):\n    return np.sqrt(np.sum((set1 - set2) ** 2))\n\n# Target and historical data\ntarget_set = np.array([70, 30])  # Example target: Temperature (F), Humidity (%)\nhistorical_sets = np.array([\n    [68, 29],  # Day 1\n    [72, 45],  # Day 2\n    [69, 30],  # Day 3\n])  # Example historical weather data\n\n# Normalize target and historical sets\nnormalized_target = normalize(target_set.reshape(1, -1))\nnormalized_historical = normalize(historical_sets)\n\n# Calculate distances from the normalized target\ndistances = np.array([euclidean_distance(normalized_target, h) for h in normalized_historical])\n\n# Get indices of sorted scores (lowest to highest)\nsimilar_indices = np.argsort(distances)\n\n# Print results\nfor idx in similar_indices:\n    print(f"Historical Set {idx + 1}: {historical_sets[idx]}, Distance: {distances[idx]:.4f}")