def find_common_substrings(strings, min_length=2):\n    from collections import defaultdict\n\n    # Dictionary to store substrings and where they appear\n    substring_map = defaultdict(set)\n\n    # Iterate over each string\n    for index, s in enumerate(strings):\n        # Check all possible substrings of the current string with a sliding window\n        for start in range(len(s) - min_length + 1):\n            for end in range(start + min_length, len(s) + 1):\n                substring = s[start:end]\n                substring_map[substring].add(index)\n\n    # Find and print substrings that appear in more than one string\n    result = {k: v for k, v in substring_map.items() if len(v) > 1}\n    return result\n\n# Test the function with your sample data\nstrings = [\n    "0000abcde0000",\n    "0000abcd00000",\n    "000abc0000000",\n    "00abc000de000"\n]\n\ncommon_substrings = find_common_substrings(strings)\nfor substring, indices in common_substrings.items():\n    print(f"{substring} was used in {', '.join(map(str, sorted(indices) + [1]))}")