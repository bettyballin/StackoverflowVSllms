import unittest\n\nclass Account:\n    def __init__(self, balance=0):\n        self.balance = balance\n\n    def deposit(self, amount):\n        if amount > 0:\n            self.balance += amount\n\n    def withdraw(self, amount):\n        if 0 < amount <= self.balance:\n            self.balance -= amount\n        else:\n            raise ValueError("Insufficient funds")\n\nclass BankingScenarioTest(unittest.TestCase):\n    def test_withdrawal_scenario(self):\n        # Arrange\n        account = Account(100)\n        \n        # Act and Assert\n        try:\n            account.deposit(50)  # Deposit $50, balance should be $150\n            self.assertEqual(account.balance, 150)\n            \n            account.withdraw(30)  # Withdraw $30, balance should be $120\n            self.assertEqual(account.balance, 120)\n            \n            account.withdraw(90)  # Attempt to withdraw too much, expect exception\n        except ValueError as e:\n            self.assertEqual(str(e), "Insufficient funds")\n\nif __name__ == '__main__':\n    unittest.main()