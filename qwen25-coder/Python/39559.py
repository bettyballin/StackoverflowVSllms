from pathlib import Path\n\ndef get_files(pattern):\n    # Split pattern to identify parts before and after **\n    parts = pattern.split('**')\n    \n    # Start searching from the base path specified in the pattern if any\n    if len(parts) > 1:\n        base_path, remaining_pattern = parts[0], ''.join(parts[1:])\n        # Handle cases where ** is at start or end of pattern\n        base_path = '.' if not base_path else base_path\n        search_pattern = f'{remaining_pattern}/*' if remaining_pattern else '*/**'\n    else:\n        base_path, search_pattern = '.', pattern\n    \n    results = Path(base_path).rglob(search_pattern)\n    \n    # Filter the results based on exact match with the given pattern using fnmatch\n    from fnmatch import filter as fnfilter\n\n    def matches(pattern):\n        if '**' in pattern:\n            # Remove the leading and trailing slashes for matching with rglob\n            parts = pattern.replace('**/', '').replace('/**', '').replace('/', '/*/')\n            return True if any(fnfilter([str(result)], parts)) else False\n        else:\n            return fnfilter([str(result)], pattern)\n\n    return filter(matches, results)\n\n\n# Example usage\nfor file in get_files("**/CVS/*"):\n    print(file)