import random\n\nclass Banner:\n    def __init__(self, id, cpi):\n        self.id = id\n        self.cpi = cpi  # clicks per impression\n\ndef get_rotation_probability(banners):\n    total_cpi = sum([banner.cpi for banner in banners])\n    probabilities = {banner.id: (1 / banner.cpi) / total_cpi for banner in banners}\n    return probabilities\n\ndef select_banner(probabilities):\n    choice_list = []\n    cumulative_prob = 0\n    for banner_id, prob in probabilities.items():\n        cumulative_prob += prob\n        choice_list.append((cumulative_prob, banner_id))\n    \n    rand_num = random.random()\n    for p, banner_id in choice_list:\n        if rand_num < p:\n            return banner_id\n\n# Example usage\nbanners = [Banner(1, 0.1), Banner(2, 0.5), Banner(3, 0.2)]  # Create some banners with example CPIs\nprobabilities = get_rotation_probability(banners)\nselected_banner_id = select_banner(probabilities)\n\nprint(f"Selected Banner ID: {selected_banner_id}")