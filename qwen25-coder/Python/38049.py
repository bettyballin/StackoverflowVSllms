import re\n\ndef parse_irc_message(message):\n    # Regular expression pattern for parsing IRC messages\n    irc_regex = re.compile(\n        r"(?::(?P<prefix>[^ ]+) )?(?P<command>[^ ]+)(?: (?P<params>.+))?$"\n    )\n    \n    # Match the message against the regex pattern\n    match = irc_regex.match(message)\n    if not match:\n        return None\n    \n    prefix = match.group('prefix')\n    command = match.group('command').upper()  # IRC commands are case-insensitive\n    params = match.group('params')\n\n    parsed_params = []\n    middle = ''\n    trailing = ''\n\n    # If there are parameters\n    if params:\n        parts = params.split(' :', 1)  # Split at the first ' :' for trailing parameter\n        middle = parts[0].split()\n        if len(parts) > 1:\n            trailing = parts[1]\n\n        parsed_params.extend(middle)\n        if trailing:\n            parsed_params.append(trailing)\n\n    return {\n        "prefix": prefix,\n        "command": command,\n        "params": parsed_params\n    }\n\n# Example usage\nmessage = ":test!~test@test.com PRIVMSG #channel :Hi!"\nparsed_message = parse_irc_message(message)\nprint(parsed_message)