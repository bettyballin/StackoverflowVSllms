import os\nimport psutil\nimport time\nfrom pathlib import Path\n\ndef get_processes_using_file(file_path):\n    """ Get list of pids of processes using the file """\n    l_pids = []\n    for proc in psutil.process_iter(['pid', 'name']):\n        try:\n            flist = proc.open_files()\n            if flist:\n                for nt in flist:\n                    if file_path == nt.path:\n                        l_pids.append(proc.info['pid'])\n        except (psutil.NoSuchProcess, psutil.AccessDenied):\n            pass\n    return l_pids\n\ndef terminate_processes(pids):\n    """ Terminate processes based on their pids """\n    for pid in pids:\n        try:\n            p = psutil.Process(pid)\n            p.terminate()\n            p.wait(timeout=5)  # Give the process some time to exit\n        except (psutil.NoSuchProcess, psutil.AccessDenied):\n            print(f"Could not terminate process {pid}")\n\ndef delete_file_if_not_in_use(file_path, retry=3, delay=2):\n    """ Attempt to delete a file by waiting for it to no longer be in use """\n    for _ in range(retry):\n        try:\n            os.remove(file_path)\n            break\n        except PermissionError:\n            print(f"Permission denied on {file_path}, attempting to find and terminate using processes")\n            pids = get_processes_using_file(file_path)\n            if not pids:\n                print("No using processes found, retrying deletion...")\n                time.sleep(delay)\n                continue\n            terminate_processes(pids)\n            time.sleep(delay)\n    else:\n        print(f"Failed to delete {file_path} after several attempts")\n\ndef main():\n    directory = Path(r'C:\path\to\directory')\n    for file in directory.glob('*.gif'):\n        delete_file_if_not_in_use(file)\n\nif __name__ == "__main__":\n    main()