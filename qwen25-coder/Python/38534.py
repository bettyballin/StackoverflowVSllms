from google.appengine.ext import webapp\n\ndef role_required(role):\n    def wrap(handler_method):\n        def check_role(self, *args, **kwargs):\n            # Assuming self.request.session['user_privilege'] is set after authentication\n            user_privilege = self.request.session.get('user_privilege')\n            if user_privilege and user_privilege >= role:\n                return handler_method(self, *args, **kwargs)\n            else:\n                self.response.out.write("Access Denied")\n        return check_role\n    return wrap\n\nclass AdminHandler(webapp.RequestHandler):\n    @role_required(role=5)  # Example role level required for admin access\n    def get(self):\n        self.response.out.write("Welcome to the admin page!")\n\nclass UserHandler(webapp.RequestHandler):\n    @role_required(role=2)  # Example role level required for user access\n    def get(self):\n        self.response.out.write("Hello, regular user!")\n\napplication = webapp.WSGIApplication([\n    ('/admin', AdminHandler),\n    ('/user', UserHandler)\n], debug=True)