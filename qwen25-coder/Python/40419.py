def convex_hull(points):\n    def cross(o, a, b):\n        return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])\n\n    # Sort the points lexicographically (by x, then by y)\n    points_sorted = sorted(points)\n\n    # Build lower hull\n    lower = []\n    for p in points_sorted:\n        while len(lower) >= 2 and cross(lower[-2], lower[-1], p) <= 0:\n            lower.pop()\n        lower.append(p)\n\n    # Build upper hull\n    upper = []\n    for p in reversed(points_sorted):\n        while len(upper) >= 2 and cross(upper[-2], upper[-1], p) <= 0:\n            upper.pop()\n        upper.append(p)\n\n    # Concatenate lower and upper hulls to form the convex hull\n    # Last point of each half is omitted because it is repeated at the beginning of the other half\n    return lower[:-1] + upper[:-1]\n\n# Example usage\nvertices = [(0, 0), (1, 1), (2, 2), (2, 0), (1, 2)]\nhull = convex_hull(vertices)\nprint(hull)  # Output: [(0, 0), (2, 0), (2, 2), (1, 2)]