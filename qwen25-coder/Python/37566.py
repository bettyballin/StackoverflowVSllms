import paramiko\nfrom sshtunnel import SSHTunnelForwarder\nimport pymysql\n\n# Function to create an SSH tunnel\ndef create_ssh_tunnel():\n    # SSH config\n    ssh_host = 'ssh_proxy_host'\n    ssh_user = 'your_username'\n    ssh_password = 'your_password'\n    \n    # MySQL config through the proxied connection\n    mysql_host = 'mysql_server_ip'\n    mysql_port = 3306\n    mysql_user = 'mysql_username'\n    mysql_password = 'mysql_password'\n    database_name = 'your_database'\n\n    # Open SSH tunnel\n    server = SSHTunnelForwarder(\n        (ssh_host),\n        ssh_username=ssh_user,\n        ssh_password=ssh_password,\n        remote_bind_address=(mysql_host, mysql_port)\n    )\n    \n    server.start()\n    \n    return server\n\n# Connect to MySQL database using the tunnel\ndef connect_to_mysql(server):\n    connection = pymysql.connect(\n        host='127.0.0.1',  # Localhost, because it's being tunneled\n        port=server.local_bind_port,\n        user='mysql_username',\n        password='mysql_password',\n        database='your_database'\n    )\n    return connection\n\n# Use the functions\nif __name__ == '__main__':\n    server = create_ssh_tunnel()\n    conn = connect_to_mysql(server)\n    \n    try:\n        # Do your MySQL operations here\n        with conn.cursor() as cursor:\n            sql = "SELECT * FROM your_table"\n            cursor.execute(sql)\n            result = cursor.fetchall()\n            print(result)\n    finally:\n        conn.close()\n        server.stop()