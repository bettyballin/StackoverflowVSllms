import math\n\ndef euclidean_distance(coord1, coord2):\n    return math.sqrt((coord1[0] - coord2[0]) ** 2 + (coord1[1] - coord2[1]) ** 2)\n\ndef find_min_distance_pair(points):\n    min_value = float('inf')\n    min_pair = (None, None)\n    \n    for i in range(len(points)):\n        for j in range(i + 1, len(points)):  # Start from i+1 to avoid duplicate pairs\n            distance = euclidean_distance(points[i], points[j])\n            if distance < min_value:\n                min_value = distance\n                min_pair = (points[i], points[j])\n                \n    return min_pair\n\n# Example with coordinates (x, y)\ncoordinates = [(0, 0), (3, 4), (5, 6), (1, 2)]\nprint(find_min_distance_pair(coordinates))