import numpy as np\nfrom scipy import interpolate\nimport matplotlib.pyplot as plt\n\ndef get_contours(heights, height_value):\n    # Interpolate the data to make it smoother if needed\n    interp = interpolate.interp2d(range(512), range(512), heights, kind='linear')\n    \n    # Create a finer grid if necessary for more accurate contours\n    x_new = np.linspace(0, 511, num=512)\n    y_new = np.linspace(0, 511, num=512)\n    z_new = interp(x_new, y_new)\n\n    # Use plt.contour to extract contour lines at the given height\n    CS = plt.contour(x_new, y_new, z_new, levels=[height_value], colors='k')\n    \n    # Extract line segments from the contours\n    lines = []\n    for collection in CS.collections:\n        for path in collection.get_paths():\n            lines.append(path.vertices)\n    \n    return lines\n\n# Example usage:\nheights = np.random.rand(512, 512) * 100  # Random heightmap example\nheight_value = 50.0  # The height to draw the contour at\ncontours = get_contours(heights, height_value)\n\n# Plotting the contours for verification (optional)\nplt.imshow(heights, extent=(0, 512, 0, 512))\nfor line in contours:\n    plt.plot(line[:, 0], line[:, 1])\nplt.show()