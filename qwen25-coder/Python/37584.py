import math\n\ndef calculate_ticks(min_val, max_val, num_ticks):\n    def nice_num(x, round_flag=True):\n        expv = 10 ** math.floor(math.log10(x))\n        f = x / expv\n        if round_flag:\n            if f < 1.5:\n                nf = 1.\n            elif f < 3.:\n                nf = 2.\n            elif f < 7.:\n                nf = 5.\n            else:\n                nf = 10.\n        else:\n            if f <= 1.:\n                nf = 1.\n            elif f <= 2.:\n                nf = 2.\n            elif f <= 5.:\n                nf = 5.\n            else:\n                nf = 10.\n        return nf * expv\n\n    # Calculate range\n    range_ = max_val - min_val\n    \n    # Calculate tick spacing\n    d = nice_num(range_ / (num_ticks - 1), round_flag=False)\n    \n    # Determine the start and end of the axis\n    graph_min = math.floor(min_val / d) * d\n    graph_max = math.ceil(max_val / d) * d\n    \n    # Create ticks\n    result = []\n    tick = graph_min\n    while tick <= graph_max + 1e-6:\n        result.append(tick)\n        tick += d\n    \n    return result\n\n# Example usage\ndata_points = [15, 234, 140, 65, 90]\nmin_val = min(data_points)\nmax_val = max(data_points)\nnum_ticks = 10\nticks = calculate_ticks(min_val, max_val, num_ticks)\nprint(ticks)  # Output might be similar to: [0.0, 25.0, 50.0, 75.0, 100.0, 125.0, 150.0, 175.0, 200.0, 225.0, 250.0]