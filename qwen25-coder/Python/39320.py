import threading\nfrom multiprocessing import Queue\n\ndef queue_monitor(queue, event):\n    # Wait for data in the queue\n    queue.get()\n    # Signal that the queue has received data\n    event.set()\n\n# Create two queues\nqueue1 = Queue()\nqueue2 = Queue()\n\n# Create an event to act as a signal between threads\nevent = threading.Event()\n\n# Start a thread monitoring each queue\nthread1 = threading.Thread(target=queue_monitor, args=(queue1, event))\nthread2 = threading.Thread(target=queue_monitor, args=(queue2, event))\n\nthread1.start()\nthread2.start()\n\nprint("Waiting for data in either queue...")\n\n# Wait until one of the queues receives data\nevent.wait()\n\nprint("Data received in one of the queues!")\n\n# Clean up threads if necessary (wait for them to finish processing)\nthread1.join()\nthread2.join()