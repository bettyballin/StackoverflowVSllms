def best_coupon_distribution(coupons_matrix, total_coupons):\n    num_items = len(coupons_matrix)\n    max_off = [0] * (total_coupons + 1)\n\n    # Iterate over the number of coupons from 1 to total_coupons\n    for c in range(1, total_coupons + 1):\n        # Calculate the maximum discount for using 'c' coupons\n        for i in range(num_items):\n            item_offers = coupons_matrix[i]\n            for num_used in range(len(item_offers)):\n                if num_used < c:\n                    continue\n                max_off[c] = max(max_off[c], max_off[c - (num_used + 1)] + item_offers[num_used])\n\n    return max_off[total_coupons]\n\n# Example usage\ncoupons_matrix = [\n    [0, 10, 15],  # Item 1\n    [0, 5, 0, 15, 25, 35],  # Item 2\n    [0, 2]  # Item 3\n]\n\ntotal_coupons = 5\nprint(f"Maximum discount for {total_coupons} coupons: ${best_coupon_distribution(coupons_matrix, total_coupons)}")