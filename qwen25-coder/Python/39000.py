import struct\n\n# Path to your binary file\nbinary_path = "your_binary"\n\n# Address of the instruction to replace and the NOP opcode for ARM (mov r0, r0)\naddress_to_patch = 0xc\nnop_opcode = b'\xe1\xa0\x00\x00'\n\nwith open(binary_path, 'r+b') as f:\n    # Seek to the address where you want to patch the instruction\n    f.seek(address_to_patch)\n    \n    # Write the NOP opcode at that location\n    f.write(nop_opcode)