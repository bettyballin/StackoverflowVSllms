import re\n\ndef normalize_address(address):\n    # Convert to uppercase\n    address = address.upper()\n    # Remove punctuation except periods\n    address = re.sub(r'[^\w\s.]', '', address)\n    # Replace 'STREET' with 'ST', etc.\n    replacements = {' STREET': ' ST', ' AVENUE': ' AVE', ' ROAD': ' RD', ' WAY': ' WY'}\n    for old, new in replacements.items():\n        address = address.replace(old, new)\n    return address\n\ndef create_address_key(address, zipcode):\n    # Normalize the address\n    normalized_address = normalize_address(address)\n    # Split into words\n    parts = normalized_address.split()\n    # Create key from first 2 letters of each word up to a limit\n    address_key = ''.join([part[:2] for part in parts])[:8]\n    # Append first 5 digits of zipcode\n    if len(zipcode) >= 5:\n        zip_key = zipcode[:5]\n        full_key = address_key + zip_key\n    else:\n        full_key = address_key\n    return full_key\n\n# Example usage\naddress1 = "110 Test St"\nzipcode = "44680-1234"\nkey1 = create_address_key(address1, zipcode)\n\naddress2 = "110 TEST Street"\nkey2 = create_address_key(address2, zipcode)\n\nprint("Key 1:", key1)  # Should be '11TEST44680'\nprint("Key 2:", key2)  # Should match Key 1