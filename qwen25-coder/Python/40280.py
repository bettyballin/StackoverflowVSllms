import uuid\n\n# In-memory "database" to store mappings of unique ids to strings\nstring_store = {}\n\ndef contract(original_id):\n    # Generate UUID\n    unique_key = str(uuid.uuid4())\n    # Store mapping from key to original ID\n    string_store[unique_key] = original_id\n    return unique_key\n\ndef expand(short_id):\n    # Retrieve the original ID using the short ID (UUID key)\n    return string_store.get(short_id, None)\n\n# Usage example\noriginal_id = "this_is_a_test_account_that_is_longer_than_allowed"\nshort_id = contract(original_id)\nprint(f"Shortened ID: {short_id}")\nretrieved_original_id = expand(short_id)\nprint(f"Retrieved Original ID: {retrieved_original_id}")