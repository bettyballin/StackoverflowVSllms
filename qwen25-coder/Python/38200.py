from shapely.geometry import Polygon\nimport numpy as np\n\n# Example function to create random polygons (replace with your actual data)\ndef create_random_polygon():\n    angles = np.random.uniform(0, 2 * np.pi, 8)  # generate 8 random angles\n    radii = np.ones_like(angles) + np.random.normal(scale=1.0, size=8)  # generate random radii for each angle\n    points = [radii[i] * (np.cos(angles[i]), np.sin(angles[i])) for i in range(8)]\n    return Polygon(points)\n\n# Create a red polygon and 50 blue polygons\nred_polygon = create_random_polygon()\nblue_polygons = [create_random_polygon() for _ in range(50)]\n\n# Calculate the bounding box of the red polygon\nred_bbox = red_polygon.bounds\n\n# Function to find the nearest blue polygon\ndef find_nearest_blue(red_poly, blues):\n    min_dist = float('inf')\n    nearest_blue = None\n    \n    # Loop through each blue polygon and check distance if it intersects with the bounding box of the red polygon\n    for blue in blues:\n        if any([blue.bounds[i] < red_bbox[i+(i%2)] or blue.bounds[i] > red_bbox[i-(i%2)+1] for i in range(4)]):\n            continue  # Bounding boxes do not intersect, skip this polygon\n        \n        dist = red_poly.distance(blue)  # Calculate the exact distance\n        if dist < min_dist:\n            min_dist = dist\n            nearest_blue = blue\n    \n    return nearest_blue, min_dist\n\nnearest_polygon, distance = find_nearest_blue(red_polygon, blue_polygons)\nprint(f"The nearest blue polygon is at a distance of {distance} from the red polygon.")