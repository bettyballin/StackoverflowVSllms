import heapq\n\ndef find_150000th():\n    n = 150000\n    heap = []\n    \n    # Start with the smallest possible values of a and b\n    a = 2\n    while True:\n        for b in range(2, a):\n            if (a * b) % (a + b) == 1:  # Check the condition ab â‰¡ 1 (mod a+b)\n                A = a * b * (a * b - 1) // (a + b)\n                heapq.heappush(heap, A)\n            \n        # Check if we have collected enough elements\n        if len(heap) >= n:\n            # We need the n-th smallest element, ensure we collect exactly n unique A values\n            while len(seen) < n and heap:\n                candidate = heapq.heappop(heap)\n                if candidate not in seen:\n                    seen.add(candidate)\n            return sorted(seen)[-1]\n        \n        a += 1\n\nseen = set()\nresult = find_150000th()\nprint(result)