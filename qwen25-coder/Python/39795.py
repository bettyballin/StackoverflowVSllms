# Define a macro using a decorator pattern which is common in Python\n@macro("MLMacro")\ndef if_macro(conditions, actions):\n    """\n    Example multiline macro for an if statement.\n    :param conditions: List of tuples (condition, body)\n    :param actions: Code to execute after all ifs\n    """\n    output = []\n    for condition, body in conditions:\n        output.append(f"if {condition}:\n")\n        output.extend([f"    {line}" for line in body])\n    if actions:\n        output.append("else:\n")\n        output.extend([f"    {line}" for line in actions])\n    return "\n".join(output)\n\n@macro("PartialMacro")\ndef custom_operator(left, operator, right):\n    """\n    Example of a partial macro to handle custom operators.\n    :param left: Left operand\n    :param operator: Operator symbol as string\n    :param right: Right operand\n    """\n    if operator == "|>":\n        return f"{right}({left})"\n    raise ValueError(f"Unknown operator {operator}")