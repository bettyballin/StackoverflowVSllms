from sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\n# Create an in-memory SQLite engine and connect to it\nengine = create_engine('sqlite:///:memory:', echo=True)\n\n# Define a base class for declarative models\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n    \n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    fullname = Column(String)\n    password = Column(String)\n    \n    def __repr__(self):\n        return f"<User(name='{self.name}', fullname='{self.fullname}', password='{self.password}')>"\n\n# Create all tables in the engine\nBase.metadata.create_all(engine)\n\n# Bind the engine to a session factory and create a new session\nSession = sessionmaker(bind=engine)\nsession = Session()\n\n# Insert data into the database\nusers = [\n    User(name='ed', fullname='Ed Jones', password='edspassword'),\n    User(name='wendy', fullname='Wendy Williams', password='foobar'),\n    User(name='mary', fullname='Mary Contrary', password='xxg527'),\n    User(name='fred', fullname='Fred Flinstone', password='blah')\n]\n\nsession.add_all(users)\nsession.commit()\n\n# Query data from the database\nfor user in session.query(User).order_by(User.id):\n    print(f"{user.name}, {user.fullname}")\n\n# Update data and query dirty/new state\nusers[0].password = 'f8s7ccs'\nprint(session.dirty)  # Shows the dirty instances\nprint(session.new)    # Shows newly added instances\n\nsession.commit()