import os\nimport pickle\n\ndef send_large_data_via_pipe(ctypes_fn):\n    r, w = os.pipe()\n    pid = os.fork()\n\n    if pid == 0:\n        # Child process\n        result = ctypes_fn()\n        try:\n            pickled_result = pickle.dumps(result)\n            # Write data in chunks to avoid filling the pipe buffer\n            with os.fdopen(w, 'wb') as f:\n                f.write(pickled_result)\n        finally:\n            os.close(w)  # Ensure the file descriptor is closed\n            os._exit(0)  # Exit the child process\n\n    else:\n        # Parent process\n        try:\n            os.close(w)  # Close unused write end in parent\n            pickled_result = b''\n            with os.fdopen(r, 'rb') as f:\n                while True:\n                    chunk = f.read(4096)  # Read chunks of 4KB\n                    if not chunk:  # End of data\n                        break\n                    pickled_result += chunk\n\n        finally:\n            os.waitpid(pid, 0)  # Wait for child process to terminate\n            os.close(r)  # Ensure the file descriptor is closed\n\n        return pickle.loads(pickled_result)