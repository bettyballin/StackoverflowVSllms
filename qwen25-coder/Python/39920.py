import cv2\nimport numpy as np\n\n# Load images\nimage_target = cv2.imread('target.jpg', cv2.IMREAD_GRAYSCALE)\nimage_scene = cv2.imread('scene.jpg', cv2.IMREAD_GRAYSCALE)\n\n# Initialize SIFT detector\nsift = cv2.SIFT_create()\n\n# Find the keypoints and descriptors with SIFT\nkeypoints1, descriptor1 = sift.detectAndCompute(image_target, None)\nkeypoints2, descriptor2 = sift.detectAndCompute(image_scene, None)\n\n# BFMatcher with Hamming distance metric\nbf = cv2.BFMatcher(cv2.NORM_L2, crossCheck=True)\n\n# Match descriptors\nmatches = bf.match(descriptor1, descriptor2)\n\n# Sort them in ascending order of their distances so that best matches come to the top.\nmatches = sorted(matches, key=lambda x: x.distance)\n\n# Draw first 10 matches.\nresult_image = cv2.drawMatches(image_target, keypoints1, image_scene, keypoints2, matches[:10], None, flags=cv2.DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS)