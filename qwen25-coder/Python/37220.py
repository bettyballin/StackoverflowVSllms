import numpy as np\n\ndef rotate_point(point, radians):\n    """Rotate a point counterclockwise by a given angle (in radians)."""\n    x, y = point\n    cos_theta, sin_theta = np.cos(radians), np.sin(radians)\n    return (cos_theta * x - sin_theta * y, sin_theta * x + cos_theta * y)\n\ndef calculate_bounding_rectangle(polygon, angle_degrees):\n    """Calculate the bounding rectangle of a polygon at an arbitrary angle."""\n    # Convert angle to radians\n    angle_radians = np.radians(angle_degrees)\n    \n    # Rotate all points in the polygon\n    rotated_points = [rotate_point(point, angle_radians) for point in polygon]\n    \n    # Find min and max x and y coordinates of the rotated points\n    x_coords = [point[0] for point in rotated_points]\n    y_coords = [point[1] for point in rotated_points]\n    x_min, x_max = min(x_coords), max(x_coords)\n    y_min, y_max = min(y_coords), max(y_coords)\n    \n    # Bounding rectangle dimensions\n    width = x_max - x_min\n    height = y_max - y_min\n    \n    return (x_min, y_min, width, height)\n\n# Example usage:\npolygon = [(0, 0), (5, 0), (5, 5), (0, 5)]  # A square polygon\nangle_degrees = 45\nbounding_rectangle = calculate_bounding_rectangle(polygon, angle_degrees)\nprint(bounding_rectangle)  # Output: bounding box coordinates and dimensions