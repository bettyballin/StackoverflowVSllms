class Node:\n    def __init__(self, question=None, yes_child=None, no_child=None, answer=None):\n        self.question = question  # The question to ask\n        self.yes_child = yes_child  # What to do if the answer is yes\n        self.no_child = no_child  # What to do if the answer is no\n        self.answer = answer  # The final guess\n\nclass BinaryTree:\n    def __init__(self):\n        # Initialize with a simple starting question\n        self.root = Node("Is it an animal?")\n\n    def ask_question(self, node, turn=1):\n        if not node.question:\n            print(f"My guess: {node.answer}")\n            return True  # Guess has been made\n\n        if turn > 20:\n            print("I couldn't guess in 20 questions!")\n            return False\n\n        response = input(node.question + " (yes/no): ").strip().lower()\n        if response == 'yes':\n            return self.ask_question(node.yes_child, turn + 1)\n        elif response == 'no':\n            return self.ask_question(node.no_child, turn + 1)\n        else:\n            print("Please answer yes or no.")\n            return self.ask_question(node, turn)\n\n# Example setup\ntree = BinaryTree()\nanim_node = Node(question="Is it a mammal?")\nno_anim_node = Node(answer="It must be something like a plant or stone!")\nanimal_yes_child = anim_node\nanimal_no_child = no_anim_node\n\nmammal_yes_child = Node(answer="Is it likely a dog?")\nmammal_no_child = Node(answer="Could it be a bird?")\nanim_node.yes_child = mammal_yes_child\nanim_node.no_child = mammal_no_child\n\ntree.root.yes_child = animal_yes_child\ntree.root.no_child = animal_no_child\n\n# Start the game\ntree.ask_question(tree.root)