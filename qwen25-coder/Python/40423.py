from collections import defaultdict\n\ndef calculate_dice_frequency(num_dice, num_sides):\n    # Dictionary to store the frequency of each sum\n    frequency = defaultdict(int)\n    \n    # Recursive function to simulate dice rolls\n    def roll_dice(current_sum, current_die):\n        if current_die == 0:\n            frequency[current_sum] += 1\n            return\n        for face in range(1, num_sides + 1):\n            roll_dice(current_sum + face, current_die - 1)\n    \n    # Start the recursion with a sum of 0 and all dice to be rolled\n    roll_dice(0, num_dice)\n    \n    # Sort results by frequency (descending) and then by sum value\n    sorted_frequency = sorted(frequency.items(), key=lambda x: (-x[1], x[0]))\n    \n    return sorted_frequency\n\n# Example usage for 2 six-sided dice\nresult = calculate_dice_frequency(2, 6)\nfor total, count in result:\n    print(f"Sum {total}: Frequency {count}")