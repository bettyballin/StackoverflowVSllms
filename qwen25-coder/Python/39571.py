import numpy as np\n\ndef generate_matrices(ratio, size=4):\n    # Ensure the ratio is properly formatted\n    part1, part2 = ratio\n    \n    # Generate random numbers for the first matrix\n    matrix1 = np.random.randint(101, 999, size)\n    \n    # Calculate the mean of the first matrix\n    mean1 = np.mean(matrix1)\n    \n    # Target mean for the second matrix based on the input ratio\n    target_mean2 = mean1 * (part2 / part1)\n    \n    # Generate random numbers for the second matrix\n    # Adjusting to reach the target mean\n    while True:\n        matrix2 = np.random.randint(101, 999, size)\n        mean2 = np.mean(matrix2)\n        \n        # Check if the mean of matrix2 is close enough to the target mean\n        if np.isclose(mean2, target_mean2, atol=5):  # Adjust tolerance as needed\n            break\n    \n    return matrix1, matrix2\n\n# Example usage: generate matrices with a mean ratio of 1:2\nmatrix1, matrix2 = generate_matrices((1, 2))\nprint("Matrix 1:", matrix1)\nprint("Mean Matrix 1:", np.mean(matrix1))\nprint("Matrix 2:", matrix2)\nprint("Mean Matrix 2:", np.mean(matrix2))