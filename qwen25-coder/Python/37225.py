import threading\n\nclass SafeThirdPartyWrapper:\n    def __init__(self):\n        self._third_party_instance = ThirdPartyLibrary()  # Assume this is the third-party class\n        self._lock = threading.Lock()\n\n    def safe_method(self, *args, **kwargs):\n        """ Example of a thread-safe method """\n        with self._lock:\n            return self._third_party_instance.method(*args, **kwargs)\n\n# Usage\nwrapper = SafeThirdPartyWrapper()\nresult = wrapper.safe_method(param1, param2)