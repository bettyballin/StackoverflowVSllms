def is_safe(state):\n    return state not in unsafe_states\n\ndef depth_first_search(current_state):\n    if current_state not in visited:\n        visited.add(current_state)\n        if not is_safe(current_state):\n            print(f"Unsafe state reached: {current_state}")\n            return False\n        for _, next_state in transitions.get(current_state, []):\n            if not depth_first_search(next_state):\n                return False\n    return True\n\nvisited = set()\ndef model_check():\n    return depth_first_search(initial_state)\n\n# Execute the model checker\nif model_check():\n    print("The system is safe: no unsafe states reachable.")\nelse:\n    print("An unsafe state is reachable in the system.")