import xml.etree.ElementTree as ET\n\ndef parse_xml(file_path):\n    tree = ET.parse(file_path)\n    root = tree.getroot()\n    return root\n\ndef elements_to_dict(element, path=""):\n    """Convert an element tree to a dictionary with paths as keys."""\n    element_dict = {path if path else element.tag: {}}\n    for child in element:\n        child_path = f"{path}/{element.tag}" if path else element.tag\n        element_dict[element.tag].update(elements_to_dict(child, path=child_path))\n    return element_dict\n\ndef diff_dicts(dict1, dict2, key=""):\n    differences = []\n    all_keys = set(list(dict1.keys()) + list(dict2.keys()))\n    for k in all_keys:\n        if k not in dict1:\n            differences.append((f"{key}.{k}", "Missing from first XML", dict2[k]))\n        elif k not in dict2:\n            differences.append((f"{key}.{k}", "Extra in first XML", dict1[k]))\n        else:\n            sub_diffs = diff_dicts(dict1[k], dict2[k], f"{key}.{k}")\n            differences.extend(sub_diffs)\n    return differences\n\ndef diff_xml(file_path1, file_path2):\n    root1 = parse_xml(file_path1)\n    root2 = parse_xml(file_path2)\n\n    dict1 = elements_to_dict(root1)\n    dict2 = elements_to_dict(root2)\n\n    differences = diff_dicts(dict1, dict2)\n    return differences\n\n# Usage\nfile1 = 'example1.xml'\nfile2 = 'example2.xml'\ndifferences = diff_xml(file1, file2)\nfor diff in differences:\n    print(diff)