import os\nimport re\n\nclass ImageManager:\n    def __init__(self, directory):\n        self.directory = directory\n        self.images = {}\n        self._load_images()\n\n    def _load_images(self):\n        for filename in os.listdir(self.directory):\n            if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')):\n                metadata_file = f"{os.path.splitext(filename)[0]}.txt"\n                description = ''\n                if os.path.exists(os.path.join(self.directory, metadata_file)):\n                    with open(os.path.join(self.directory, metadata_file), 'r') as file:\n                        description = file.read().strip()\n                self.images[filename] = description\n\n    def add_image(self, filepath, description):\n        filename = os.path.basename(filepath)\n        if filename in self.images:\n            raise ValueError("Image already exists")\n        \n        destination_path = os.path.join(self.directory, filename)\n        os.link(filepath, destination_path)  # Uses hardlink for efficiency\n        \n        metadata_file = f"{os.path.splitext(filename)[0]}.txt"\n        with open(os.path.join(self.directory, metadata_file), 'w') as file:\n            file.write(description)\n        \n        self.images[filename] = description\n\n    def get_images(self, keywords=None):\n        if not keywords:\n            return [(name, os.path.join(self.directory, name), desc) for name, desc in self.images.items()]\n        \n        patterns = [re.compile(re.escape(keyword), re.IGNORECASE) for keyword in keywords]\n        matching_images = []\n        \n        for filename, description in self.images.items():\n            content_to_search = f"{filename} {description}"\n            if all(pattern.search(content_to_search) for pattern in patterns):\n                matching_images.append((filename, os.path.join(self.directory, filename), description))\n                \n        return matching_images\n\n# Example usage\ndirectory_path = 'P:/xampplite/htdocs/tag/'\nimages_manager = ImageManager(directory_path)\n\n# Add images (commented out after initial addition)\n# images_manager.add_image('path/to/problem3d-1.jpg', 'dunp logo')\n# images_manager.add_image('path/to/d-proposta-04c.jpg', 'dunp logo')\n\nprint("All images:")\nfor name, path, desc in images_manager.get_images():\n    print(f"Name: {name}, Path: {path}, Description: {desc}")\n\nprint("\nImages with 'logo':")\nfor name, path, desc in images_manager.get_images(['logo']):\n    print(f"Name: {name}, Path: {path}, Description: {desc}")\n\nprint("\nImages with 'azul nuvem':")\nfor name, path, desc in images_manager.get_images(['azul', 'nuvem']):\n    print(f"Name: {name}, Path: {path}, Description: {desc}")