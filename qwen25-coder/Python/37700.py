def find_all_nodes_below_all(nodes_set, dag):\n    def dfs(current_node, visited):\n        if current_node in visited:\n            return set()\n        visited.add(current_node)\n        results = {current_node}\n        for neighbor in dag[current_node]:\n            results.update(dfs(neighbor, visited))\n        return results\n\n    node_reachabilities = [dfs(node, set([node])) - {node} for node in nodes_set]\n    if not node_reachabilities:\n        return set()\n\n    intersection_result = set.intersection(*node_reachabilities)\n    return intersection_result