def find_matching_subsets(a, b):\n    from itertools import combinations\n\n    def generate_sums(lst):\n        sums = {0: []}  # start with an empty subset having sum 0\n        for num in lst:\n            current_sums = list(sums.keys())\n            for s in current_sums:\n                new_sum = s + num\n                if new_sum not in sums:\n                    sums[new_sum] = []\n                sums[new_sum].append(num)\n        return sums\n\n    sums_a = generate_sums(a)\n    sums_b = generate_sums(b)\n\n    # Check for sum matches between the two sets of sums\n    for key, subset1 in sum_a.items():\n        if -key in sums_b:\n            subset2 = sums_b[-key]\n            return (subset1, subset2)\n\n    return None\n\n# Example usage\nListA = [4, 5, 9, 10, 1]\nListB = [21, 7, -4, 180]\n\nresult = find_matching_subsets(ListA, ListB)\nif result:\n    print("Matching subsets found:", result)\nelse:\n    print("No matching subsets found.")