from django.db.models import F, Window, Func, DurationField, OuterRef, Subquery\nfrom django.db.models.functions import RowNumber\nfrom datetime import timedelta\n\n# Assuming `periods` is your model with start and end date fields.\nsubquery = (\n    periods.objects.filter(\n        ~Q(range_start__gte=OuterRef('date_start')) &\n        ~Q(range_end__lte=OuterRef('end_date'))\n    )\n)\n\nfree_slots = (\n    DateRange.objects.annotate(\n        end_date=F('start_date') + timedelta(weeks=1)\n    ).annotate(\n        exists_overlap=subprocess\n    ).exclude(exists_overlap__isnull=False).values('start_date', 'end_date')\n)\n\nwindows = Window(expr=RowNumber(), order_by=['start_date'])\n\nvalid_gaps = (\n    free_slots.annotate(row_num=windows).values('start_date', 'end_date', 'row_num')\n)\n\ngaps = (\n    valid_gaps.alias(\n        next_start_date=F('end_date') + timedelta(seconds=1)\n    ).filter(end_date__lte=Subquery(valid_gaps.filter(row_num=F('row_num') + 1).values('next_start_date')))\n)\n\n# Use gaps to get the results