import numpy as np\n\ndef pagerank(M, num_iterations=100, d=0.85):\n    N = M.shape[1]\n    v = np.random.rand(N, 1)\n    v = v / np.linalg.norm(v, 1)\n    \n    B = (M.T / M.sum(axis=1)).T\n    \n    for _ in range(num_iterations):\n        v = d * (B @ v) + (1 - d) / N\n        \n    return v\n\n# Example adjacency matrix where rows represent pages and columns represent links to other pages\nA = np.array([\n    [0, 1/2, 1/3, 0],\n    [1/3, 0, 0, 1/2],\n    [1/3, 1/2, 0, 1/2],\n    [0, 0, 1/3, 0]\n])\n\n# Compute PageRank\nprint(pagerank(A).flatten())