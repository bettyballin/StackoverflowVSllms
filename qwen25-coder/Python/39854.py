# app.py\nfrom flask import Flask, render_template, request, redirect, url_for, flash, abort\nfrom models import db, User\nfrom config import Config\nfrom flask_login import LoginManager, login_user, login_required, logout_user, current_user\n\napp = Flask(__name__)\napp.config.from_object(Config)\n\ndb.init_app(app)\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = 'login'\n\ndef role_required(role):\n    def decorator(func):\n        @wraps(func)\n        def decorated_function(*args, **kwargs):\n            if current_user.role != role:\n                abort(403)  # Forbidden\n            return func(*args, **kwargs)\n        return decorated_function\n    return decorator\n\n# User Loader callback for Flask Login\n@login_manager.user_loader\ndef load_user(user_id):\n    return User.query.get(int(user_id))\n\n@app.route('/')\n@login_required\ndef index():\n    users = User.query.all()\n    return render_template('index.html', users=users)\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        user = User.query.filter_by(username=username, password=password).first()\n        if user:\n            login_user(user)\n            return redirect(url_for('index'))\n        else:\n            flash('Invalid credentials')\n    return render_template('login.html')\n\n@app.route('/logout')\n@login_required\ndef logout():\n    logout_user()\n    return redirect(url_for('login'))\n\n@app.route('/user/<int:user_id>/edit', methods=['GET', 'POST'])\n@role_required('admin')  # Only admin can edit users\ndef edit_user(user_id):\n    user = User.query.get_or_404(user_id)\n    if request.method == 'POST':\n        user.username = request.form['username']\n        user.password = request.form['password']\n        db.session.commit()\n        return redirect(url_for('index'))\n    return render_template('edit_user.html', user=user)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)