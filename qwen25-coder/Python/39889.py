class someClass():\n    def __init__(self):\n        pass\n\n    # Copy and paste mistake where yield ended up in a regular function\n    def __someFunc(self):\n        print("hello")\n        if False:\n            yield True  # This should never be reached, but can be used to catch generator intent mistakes\n            assert False, "Accidental generator function"\n\n    def __someGenerator(self):\n        for i in range(0, 10):\n            self.__someFunc()\n            yield True\n        yield False\n\n    def someMethod(self):\n        func = self.__someGenerator()\n        while next(func):  # Use next() instead of .next() for compatibility with Python 3\n            print("next")\n\nsc = someClass()\nsc.someMethod()