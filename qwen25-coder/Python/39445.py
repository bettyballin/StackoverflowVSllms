function findEqualSumIndex(arr, n, totalSum):\n    if n == 0:\n        return -1\n    \n    currentLeftSum = totalSum - arr[n-1]\n    \n    // Recurse to calculate the left sum up to index n-2\n    resultIndex = findEqualSumIndex(arr, n-1, currentLeftSum)\n    \n    // Calculate left sum including the current element\n    if resultIndex == -1:\n        leftSum = currentLeftSum / 2.0\n        rightSum = totalSum - arr[n-1] - leftSum\n        \n        if leftSum == rightSum:\n            return n-1\n    \n    return resultIndex\n\n// Main function to initialize and start recursion\nfunction findBalanceIndex(arr):\n    totalSum = calculateTotalSum(arr, length(arr))\n    return findEqualSumIndex(arr, length(arr), totalSum)\n\n// Helper function to calculate the total sum of an array using recursion\nfunction calculateTotalSum(arr, n):\n    if n == 0:\n        return 0\n    else:\n        return arr[n-1] + calculateTotalSum(arr, n-1)