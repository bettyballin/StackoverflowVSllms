import base64\nfrom flask import Flask, request, redirect, url_for\n\napp = Flask(__name__)\n\n# Dummy password storage, in real application use a secure method.\nusers = {'user1': 'password1'}\n\n@app.route('/login', methods=['GET'])\ndef login():\n    encoded_credentials = request.args.get('credentials')\n    if not encoded_credentials:\n        return 'No credentials provided', 400\n    \n    decoded_credentials = base64.b64decode(encoded_credentials).decode('utf-8')\n    username, password = decoded_credentials.split(':', 1)\n    \n    if users.get(username) == password:\n        return 'Login successful'\n    else:\n        return 'Invalid username or password', 403\n\n# Example of how to generate a base64 encoded string for credentials\ndef generate_encoded_credentials(username, password):\n    credentials = f'{username}:{password}'\n    encoded_credentials = base64.b64encode(credentials.encode('utf-8')).decode('utf-8')\n    print(f'Encoded credentials: {encoded_credentials}')\n    return encoded_credentials\n\nif __name__ == '__main__':\n    app.run(debug=True)