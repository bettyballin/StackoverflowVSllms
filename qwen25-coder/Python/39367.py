function isValidSudoku(board):\n    n = length of board\n    \n    // Check rows\n    for each row from 1 to n:\n        if not hasAllUniqueNumbers(board[row]):\n            return false\n\n    // Check columns\n    for each col from 1 to n:\n        column = [board[row][col] for row from 1 to n]\n        if not hasAllUniqueNumbers(column):\n            return false\n\n    // Check subgrids (assuming n is a perfect square)\n    gridSize = sqrt(n)\n    for startRow from 0 to n-1 with step gridSize:\n        for startCol from 0 to n-1 with step gridSize:\n            subgrid = []\n            for rowOffset from 0 to gridSize-1:\n                for colOffset from 0 to gridSize-1:\n                    subgrid.append(board[startRow + rowOffset][startCol + colOffset])\n            if not hasAllUniqueNumbers(subgrid):\n                return false\n\n    return true\n\nfunction hasAllUniqueNumbers(numbers):\n    seen = set()\n    for number in numbers:\n        if number is not empty and number in seen:\n            return false\n        seen.add(number)\n    return true