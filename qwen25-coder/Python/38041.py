def read_csv_backwards(file_path):\n    import csv\n\n    # Read file in binary mode for more control over seeking\n    with open(file_path, 'rb') as file:\n        file.seek(0, 2)  # Move the cursor to the end of the file\n        position = file.tell()\n        buffer = bytearray()\n        lines = []\n        \n        while position >= 0:\n            file.seek(position)\n            next_char = file.read(1)\n            if next_char == b'\n' and buffer:\n                csv_reader = csv.reader([buffer.decode('utf-8')])\n                for row in csv_reader:\n                    lines.append(row)\n                buffer.clear()\n            elif next_char != b'\r':  # Ignore carriage returns\n                buffer.extend(next_char)\n            position -= 1\n\n        if buffer:  # Handle the last line (before first newline in file)\n            csv_reader = csv.reader([buffer.decode('utf-8')])\n            for row in csv_reader:\n                lines.append(row)\n\n    # Since we read backwards, reverse the list of lines\n    return lines[::-1]\n\n# Usage example\nfile_path = 'your_file.csv'\ndata = read_csv_backwards(file_path)\nfor line in data:\n    print(line)