import sqlite3\n\ndef create_connection(db_file):\n    """Create a database connection to the SQLite database specified by db_file."""\n    try:\n        conn = sqlite3.connect(db_file)\n        return conn\n    except Exception as e:\n        print(e)\n    return None\n\ndef create_table(conn):\n    """Create a table for storing URLs and descriptions."""\n    try:\n        c = conn.cursor()\n        c.execute('''\n            CREATE TABLE IF NOT EXISTS feeds (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                url TEXT UNIQUE NOT NULL,\n                description TEXT\n            )\n        ''')\n    except Exception as e:\n        print(e)\n\ndef add_feed(conn, feed):\n    """Add a new feed to the feeds table."""\n    try:\n        sql = '''INSERT INTO feeds (url, description) VALUES (?, ?)'''\n        cur = conn.cursor()\n        cur.execute(sql, feed)\n        conn.commit()\n    except sqlite3.IntegrityError as e:  # Handle unique constraint violations\n        print(f"Feed with URL {feed[0]} already exists.")\n    except Exception as e:\n        print(e)\n\n# Example usage\nif __name__ == '__main__':\n    database = "./feeds.db"\n    conn = create_connection(database)\n    if conn is not None:\n        create_table(conn)\n        # Add a new feed (URL and Description)\n        new_feed = ('http://example.com/rss', 'Example RSS Feed')\n        add_feed(conn, new_feed)\n\n        conn.close()