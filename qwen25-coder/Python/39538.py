import fitz  # PyMuPDF\nfrom reportlab.pdfgen import canvas\nfrom io import BytesIO\n\ndef reformat_pdf(input_path, output_path):\n    doc = fitz.open(input_path)\n    output_buffer = BytesIO()\n    \n    c = canvas.Canvas(output_buffer, pagesize=(595, 842))  # A4 size\n    \n    for page_num in range(len(doc)):\n        text_instances = doc.get_page_text("dict", page_num)["blocks"]\n        \n        y_position = 700\n        \n        for block in text_instances:\n            if block["type"] == 0:  # Text blocks are type 0\n                for line in block["lines"]:\n                    for span in line["spans"]:\n                        if y_position < 50:  # New page needed\n                            c.showPage()\n                            y_position = 700\n                        rendered_text = span["text"]\n                        c.drawString(100, y_position, rendered_text)  # X position, Y position, text\n                        y_position -= 20\n    \n    c.save()\n    \n    with open(output_path, "wb") as f:\n        f.write(output_buffer.getvalue())\n\n# Usage\nreformat_pdf("input.pdf", "output_formatted.pdf")