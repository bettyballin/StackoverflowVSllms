# smtp_proxy.py - A simple SMTP proxy to debug SMTP communication\n\nimport asyncore\nimport socket\nfrom smtpd import SMTPServer\n\nclass SmtpProxy(SMTPServer):\n    def process_message(self, peer, mailfrom, rcpttos, data, **kwargs):\n        print('Receiving message from:', peer)\n        print('Message addressed from:', mailfrom)\n        print('Message addressed to  :', rcpttos)\n        print('Message length      :', len(data))\n\n        # Forward the email to an actual SMTP server for testing\n        forwarder = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        forwarder.connect(('your-ess-smtp-server.com', 25))\n        \n        # Implement SMTP session with forwarding\n        initial_response = forwarder.recv(1024).decode('utf-8')\n        print("Server >>>", initial_response)\n        forwarder.sendall(b'HELO localhost\r\n')  # Adjust as per server requirements\n        print("Client >>> HELO localhost")\n        \n        forward_responses = ''\n        more_to_send = True\n    \n        for line in data.split(b'\r\n'):\n            line = line + b'\r\n'\n            forwarder.send(line)\n            \n            server_response = forwarder.recv(1024).decode('utf-8')\n            print("Server >>>", server_response)\n\n            if line.upper().strip() == b'QUIT':\n                more_to_send = False\n        \n        # QUIT response\n        quit_response = forwarder.recv(1024).decode('utf-8')\n        print("Server >>>", quit_response)\n        \n        forwarder.close()\n        return\n\nif __name__ == "__main__":\n    server_smtp = SmtpProxy(('localhost', 1025), None)  # Listen on local port 1025\n    try:\n        asyncore.loop()\n    except KeyboardInterrupt:\n        pass