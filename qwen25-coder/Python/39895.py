# Sample dictionary with external frequencies (0-1 scale)\nexternal_frequencies = {\n    "the": 0.069,\n    "quick": 0.002,\n    "brown": 0.001,\n    # Add more as needed\n}\ndefault_weight = 0.0005\n\n# Assign weights (higher is more common)\ndef assign_weights(word):\n    return external_frequencies.get(word, default_weight)\n\n# Calculate weighted scores\nweighted_scores = {word: relative_freq[word] * (2 + assign_weights(word) * 100) for word in relative_freq}