import struct\n\n# Example function to create an SSH transport layer protocol version exchange packet (not secure)\ndef create_protocol_version():\n    # Version string format: 'SSH-1.99-softwareversion\r\n'\n    software_version = 'OpenSSH_3.6.1p2'\n    return f'SSH-1.99-{software_version}\r\n'.encode('ascii')\n\n# Example function to parse the server's protocol version\ndef parse_protocol_version(server_packet):\n    if not server_packet.startswith(b'SSH-1.99'):\n        raise ValueError("Unsupported SSH protocol version.")\n    # Further parsing can be done here based on your needs\n\n# Simple usage of the functions\nif __name__ == "__main__":\n    client_version = create_protocol_version()\n    print(f"Client sends: {client_version}")\n    try:\n        parse_protocol_version(client_version)  # Normally this would be server's response\n        print("Protocol version parsed successfully.")\n    except ValueError as e:\n        print(e)