import math\n\ndef intersect_line_circle(A, B, C, R):\n    D = (B[0] - A[0], B[1] - A[1])\n    F = (A[0] - C[0], A[1] - C[1])\n\n    a = D[0]**2 + D[1]**2\n    b = 2 * (F[0]*D[0] + F[1]*D[1])\n    c = F[0]**2 + F[1]**2 - R**2\n\n    discriminant = b*b - 4*a*c\n    if discriminant < 0:\n        return None  # No intersection\n\n    t1 = (-b - math.sqrt(discriminant)) / (2 * a)\n    t2 = (-b + math.sqrt(discriminant)) / (2 * a)\n\n    intersections = []\n    for t in [t1, t2]:\n        if 0 <= t <= 1:\n            intersection_point = (A[0] + D[0]*t, A[1] + D[1]*t)\n            intersections.append(intersection_point)\n\n    return intersections\n\n# Example usage\nA = (0, 0)\nB = (5, 5)\nC = (3, 2)\nR = 2\n\nresult = intersect_line_circle(A, B, C, R)\nprint(result)  # Output: list of intersection points or None