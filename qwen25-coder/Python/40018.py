import re\n\ndef find_repeated_code(code_str):\n    # Simple regex to match blocks of code that appear multiple times.\n    # This is a very basic example and should not be used for real large codebases.\n    matches = re.findall(r'(\n.*?)(?=.*\1)', code_str, re.S)\n    unique_matches = list(set(matches))  # Ensure we only report each match once\n    return unique_matches\n\n# Example usage:\ncode_example = """\ndef add(a, b):\n    return a + b\n\nprint(add(1, 2))\n\ndef subtract(a, b):\n    return a - b\n\ndef multiply(a, b):\n    return a * b\n\nprint(add(1, 2))  # This was repeated\n"""\n\nrepeated_code_snippets = find_repeated_code(code_example)\nfor snippet in repeated_code_snippets:\n    print("Repeated code found:\n", snippet)\n\n# Note: For more advanced analysis, you would want to tokenize the code first\n# and possibly use machine learning models for detecting semantic similarities.