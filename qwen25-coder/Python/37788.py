import time\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef handle_request():\n    # Simulate request processing time with sleep\n    time.sleep(0.1)\n    return True\n\ndef test_throughput(num_requests, num_threads):\n    start_time = time.time()\n    \n    with ThreadPoolExecutor(max_workers=num_threads) as executor:\n        results = list(executor.map(handle_request, range(num_requests)))\n    \n    end_time = time.time()\n    success_rate = results.count(True) / len(results)\n    \n    throughput = num_requests / (end_time - start_time)\n    return throughput, success_rate\n\n# Test example\nnum_requests = 100\nnum_threads = 10\nthroughput, success_rate = test_throughput(num_requests, num_threads)\n\nprint(f"Throughput: {throughput} req/s")\nprint(f"Success Rate: {success_rate * 100}%")