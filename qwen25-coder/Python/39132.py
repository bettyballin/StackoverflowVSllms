def midpoint_circle(center_x, center_y, radius):\n    x = radius\n    y = 0\n    # Initialising the value of P \n    p = 1 - x  \n\n    points = []\n\n    while x >= y:\n        # Printing all symmetric points by  \n        # keeping (center_x, center_y) as centre.  \n        points.append((x + center_x, y + center_y))\n        points.append((-x + center_x, y + center_y))\n        points.append((x + center_x, -y + center_y)) \n        points.append((-x + center_x, -y + center_y))    \n        points.append((y + center_x, x + center_y))\n        points.append((-y + center_x, x + center_y))  \n        points.append((y + center_x, -x + center_y))   \n        points.append((-y + center_x, -x + center_y))\n\n        # Mid-point is inside or on the perimeter \n        if p <= 0:  \n            y += 1\n            p = p + 2 * y + 1\n        # Mid-point is outside the perimeter \n        else:\n            x -= 1\n            y += 1\n            p = p + 2*y - 2*x + 1\n\n    return points\n\n# Example usage:\ncenter_x, center_y = 50, 50\nradius = 30\ncircle_points = midpoint_circle(center_x, center_y, radius)\nfor point in circle_points:\n    print(point)