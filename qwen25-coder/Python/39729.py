from flask import Flask, request, jsonify\nfrom flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity\n\napp = Flask(__name__)\napp.config['JWT_SECRET_KEY'] = 'your-very-secret-key'  # Change this!\njwt = JWTManager(app)\n\n@app.route('/login', methods=['POST'])\ndef login():\n    username = request.json.get('username', None)\n    password = request.json.get('password', None)\n    # Validate the username and password\n    if username == 'admin' and password == 'secret':\n        access_token = create_access_token(identity=username)\n        return jsonify(access_token=access_token), 200\n    else:\n        return jsonify({"msg": "Bad username or password"}), 401\n\n@app.route('/protected', methods=['GET'])\n@jwt_required()\ndef protected():\n    current_user = get_jwt_identity()\n    return jsonify(logged_in_as=current_user), 200\n\nif __name__ == '__main__':\n    app.run(ssl_context='adhoc')  # Use 'adhoc' for testing - use a real certificate in productio