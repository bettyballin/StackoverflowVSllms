import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk\n\nclass MyTextView(Gtk.Window):\n    def __init__(self):\n        super().__init__(title="Text View with Child Widgets")\n        \n        self.textview = Gtk.TextView()\n        buffer = self.textview.get_buffer()\n        self.buffer = buffer\n        self.iter_start = None\n        self.widgets = []\n        \n        # Connect to the size-allocate signal to handle resizing logic\n        self.connect("size-allocate", self.on_resize)\n\n        # Example of adding a widget (label) inside text view\n        label = Gtk.Label(label="Sample Widget")\n        buffer.create_child_anchor(self.on_insert_textview(buffer, "Here is the start"))\n        self.add_widget_to_textview(label)\n        self.widgets.append(label)\n\n        scrolled_window = Gtk.ScrolledWindow()\n        scrolled_window.set_hexpand(True)\n        scrolled_window.set_vexpand(True)\n        scrolled_window.add(self.textview)\n\n        self.add(scrolled_window)\n\n    def on_insert_textview(self, buffer, text):\n        iter_start = buffer.get_end_iter()\n        buffer.insert(iter_start, text + '\n')\n        return buffer.get_end_iter()\n\n    def add_widget_to_textview(self, widget):\n        anchortagname = "widget"\n        tag_table = self.buffer.get_tag_table()\n        if not tag_table.lookup(anchortagname):\n            anchortag = Gtk.TextChildAnchor.new()\n            self.iter_start = self.buffer.get_end_iter()\n            self.buffer.insert_child_anchor(self.iter_start, anchortag)\n            self.buffer.create_tag(anchortagname,\n                                   widget_hoffset=20,\n                                   widget_voffset=30,\n                                   justification=Gtk.Justification.CENTER)\n\n            self.textview.add_child_in_window(widget, anchortag, 0, -164) # Adjust offsets as needed\n        else:\n            tagiter = self.buffer.get_iter_at_child_anchor(self.buffer.get_mark("insert").get_buffer().get_start_iter())\n            self.textview.move_child_to(tagiter)\n\n    def on_resize(self, widget, allocation):\n        # Update the size of each widget here if necessary\n        for w in self.widgets:\n            # Example: Set fixed width to match TextView's width minus padding\n            w.set_size_request(allocation.width - 40, -1)  # Adjust padding as needed\n            \nwin = MyTextView()\nwin.connect("destroy", Gtk.main_quit)\nwin.show_all()\nGtk.main()