from sklearn.cluster import DBSCAN\nimport numpy as np\n\n# Example data: Dates converted into day-of-year and number of photos\n# For simplicity, assuming all years are non-leap years (365 days)\ndata = np.array([\n    [1+31+2, 15],  # January 2nd\n    [1+31+3, 20],  # January 3rd\n    [1+31+4, 13],  # January 4th\n    [1+31+5, 19],  # January 5th\n    [1+31+14, 5]   # January 15th\n])\n\n# Extract only the day-of-year as feature for clustering (ignore number of photos)\nX = data[:, 0].reshape(-1, 1)\n\n# Fit DBSCAN. eps is the maximum distance between two samples for them to be considered as in the same neighborhood.\n# min_samples is the number of samples in a neighborhood for a point to be considered as a core point.\ndb = DBSCAN(eps=2, min_samples=1).fit(X)\nlabels = db.labels_\n\n# Convert labels into meaningful clusters\nclusters = {}\nfor i, label in enumerate(labels):\n    if not label in clusters:\n        clusters[label] = []\n    clusters[label].append(data[i, 0])\n\nprint("Clusters based on date:")\nfor cluster_id, days in clusters.items():\n    print(f"Cluster {cluster_id}: Days {days}")