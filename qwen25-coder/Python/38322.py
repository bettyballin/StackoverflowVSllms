from sqlalchemy import create_engine, Column, Integer, ForeignKey\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker, relationship\n\nbase = declarative_base()\n\nclass O1(base):\n    __tablename__ = 'O1'\n    id = Column(Integer, primary_key=True)\n    value = Column(Integer)\n    o2_id = Column(Integer, ForeignKey('O2.id'))  # Corrected foreign key reference to O2 table\n\nclass O2(base):\n    __tablename__ = 'O2'\n    id = Column(Integer, primary_key=True)\n    ones = relationship('O1', order_by='O1.value', backref='o2')  # Use relationship for proper ORM behavior\n\n# Example of creating an engine and session\nengine = create_engine('sqlite:///:memory:')\nSession = sessionmaker(bind=engine)\nsession = Session()\n\n# Creating tables\nbase.metadata.create_all(engine)\n\n# Querying with eager loading fixed\nq = session.query(O2).options(eagerload('ones')).all()