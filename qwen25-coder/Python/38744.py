def best_fit_decreasing(tube_lengths, standard_length):\n    # Sort tube lengths in decreasing order\n    sorted_tubes = sorted(tube_lengths, reverse=True)\n    \n    # List of lists to keep track of bin contents\n    bins = []\n    \n    for tubes in sorted_tubes:\n        # Try placing the current tube into the first available bin\n        placed = False\n        for bin in bins:\n            if sum(bin) + tubes <= standard_length:\n                bin.append(tubes)\n                placed = True\n                break\n        \n        # If no fitting bin was found, create a new one\n        if not placed:\n            bins.append([tubes])\n    \n    return bins\n\n# Example usage\ntube_lengths = [1]*10 + [2.5]*20  # 10 tubes of 1m and 20 tubes of 2.5m\nstandard_length = 6.0\nresult_bins = best_fit_decreasing(tube_lengths, standard_length)\n\n# Output the result\nfor i, bin in enumerate(result_bins):\n    print(f"Bin {i+1}: {bin} => Waste: {standard_length - sum(bin)}")