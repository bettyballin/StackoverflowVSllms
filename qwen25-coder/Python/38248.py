# Step 1: Query all game elements and cache them\nfleets = list(Fleet.objects.select_related('game', 'owner', 'home', 'dest').all())\nplanets = {planet.id: planet for planet in Planet.objects.select_related('game', 'owner').all()}\n\n# Step 2: Process the game state without directly saving changes to the database\nfor fleet in fleets:\n    if fleet.ships > 0:\n        # Update the home planet's ships count in memory\n        planets[fleet.home.id].ships -= fleet.ships\n        \n        # Other game logic...\n        \n        # If a fleet arrives at another planet, update that planet too\n        planets[fleet.dest.id].ships += fleet.ships\n\n# Step 3: Save all changes back to the database\nPlanet.objects.bulk_update(planets.values(), ['ships'])\n\n# Optionally, save fleets if any other fields were modified\nFleet.objects.bulk_update(fleets, ['field1', 'field2'])  # Replace with actual fields that change