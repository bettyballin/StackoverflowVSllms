#!/usr/bin/env python\nfrom win32security import *\nimport sys\n\ndef decode_flags(flags):\n    _flags = {\n        SE_DACL_PROTECTED: "SE_DACL_PROTECTED",\n        SE_DACL_AUTO_INHERITED: "SE_DACL_AUTO_INHERITED",\n        OBJECT_INHERIT_ACE: "OBJECT_INHERIT_ACE",\n        CONTAINER_INHERIT_ACE: "CONTAINER_INHERIT_ACE",\n        INHERIT_ONLY_ACE: "INHERIT_ONLY_ACE",\n        NO_INHERITANCE: "NO_INHERITANCE",\n        NO_PROPAGATE_INHERIT_ACE: "NO_PROPAGATE_INHERIT_ACE",\n        INHERITED_ACE: "INHERITED_ACE"\n    }\n    for key in _flags.keys():\n        if flags & key:\n            print('\t', '\t', _flags[key], "is set!")\n\ndef is_likely_inherited(ace_flags):\n    # An ACE is likely inherited if it has INHERITED_ACE, or if it has \n    # OBJECT_INHERIT_ACE and CONTAINER_INHERIT_ACE but not explicitly added.\n    return (ace_flags & INHERITED_ACE) != 0 or (\n           (ace_flags & OBJECT_INHERIT_ACE) and\n           (ace_flags & CONTAINER_INHERIT_ACE) and\n           (ace_flags & NO_PROPAGATE_INHERIT_ACE) == 0)\n\ndef main(argv):\n    target = argv[0]\n    print(target)\n\n    security_descriptor = GetFileSecurity(target, DACL_SECURITY_INFORMATION)\n    dacl = security_descriptor.GetSecurityDescriptorDacl()\n\n    for ace_index in range(dacl.GetAceCount()):\n        (ace_type, ace_flags), access_mask, sid = dacl.GetAce(ace_index)\n        name, domain, account_type = LookupAccountSid(None, sid)\n        print('\t', domain + '\\' + name, hex(ace_flags))\n        decode_flags(ace_flags)\n\n        # Determine if the ACE is likely inherited\n        if is_likely_inherited(ace_flags):\n            print("\tThis ACE is likely inherited.")\n        else:\n            print("\tThis ACE was explicitly added.")\n\nif __name__ == '__main__':\n    main(sys.argv[1:])