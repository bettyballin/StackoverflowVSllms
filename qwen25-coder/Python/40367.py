# Import necessary libraries\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\n# Load dataset\niris = datasets.load_iris()\nX = iris.data[:100, :2]  # we take only the first two features for simplicity\ny = iris.target[:100]\n\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Feature scaling\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# Create a SVM classifier with linear kernel\nmodel = SVC(kernel='linear')\n\n# Train the model using the training sets\nmodel.fit(X_train, y_train)\n\n# Make predictions using the testing set\ny_pred = model.predict(X_test)\n\n# Model Accuracy: how often is the classifier correct?\nprint("Accuracy:", accuracy_score(y_test, y_pred))