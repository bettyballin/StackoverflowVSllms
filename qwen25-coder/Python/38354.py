from sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import make_pipeline\n\n# Sample data\ntexts = ["I love this!", "This is the worst.", "It's okay, not great.", "Absolutely fantastic!", "Terrible experience."]\nlabels = ['positive', 'negative', 'neutral', 'positive', 'negative']\n\n# Splitting the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(texts, labels, test_size=0.25, random_state=42)\n\n# Creating a pipeline that vectorizes the text using CountVectorizer, then applies Naive Bayes classifier\nmodel = make_pipeline(CountVectorizer(), MultinomialNB())\n\n# Training the model\nmodel.fit(X_train, y_train)\n\n# Predicting new data\nprint(model.predict(["I hate it", "I really enjoyed this"]))\n\n# Evaluate the model's accuracy on the test set\naccuracy = model.score(X_test, y_test)\nprint(f"Model Accuracy: {accuracy:.2f}")