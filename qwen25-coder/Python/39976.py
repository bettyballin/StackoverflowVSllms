import numpy as np\n\n# Constants\nG = 6.67430e-11  # Gravitational constant in m^3 kg^-1 s^-2\nsun_mass = 1.989e30  # Mass of the Sun in kg\nearth_mass = 5.972e24  # Mass of Earth in kg\n\n# Initial conditions (simplified)\nearth_pos = np.array([1.496e11, 0, 0])  # Initial position of Earth in meters (approx. 1 AU from Sun)\nsun_pos = np.array([0, 0, 0])  # Position of the sun at origin\nearth_vel = np.array([0, 29783, 0])  # Initial velocity of Earth in m/s (circular orbit approx.)\n\n# Function to calculate gravitational force\ndef calculate_gravitational_force(m1, m2, r):\n    return G * (m1 * m2) / np.linalg.norm(r)**3 * r\n\ndef simulate(n_steps, step_size, sun_mass, earth_mass, sun_pos, earth_pos, earth_vel):\n    for _ in range(n_steps):\n        # Calculate force on Earth from Sun\n        r = earth_pos - sun_pos\n        force = calculate_gravitational_force(sun_mass, earth_mass, r)\n        \n        # Update velocity (Euler method)\n        acceleration = force / earth_mass\n        earth_vel += acceleration * step_size\n        \n        # Update position (Euler method)\n        earth_pos += earth_vel * step_size\n\n# Simulate for a number of steps with a given time step size\nsimulate(10000, 3600, sun_mass, earth_mass, sun_pos, earth_pos, earth_vel)\n\nprint(f"Final Earth position: {earth_pos}")