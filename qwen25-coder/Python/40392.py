from datetime import datetime\n\n# Example objects with a 'timestamp' property of type datetime\nclass Event:\n    def __init__(self, timestamp):\n        self.timestamp = timestamp\n\n    def __repr__(self):\n        return f"Event(timestamp={self.timestamp})"\n\n# Two sorted lists of Event objects by their timestamp\nlist1 = [Event(datetime(2023, 1, 2)), Event(datetime(2023, 3, 4))]\nlist2 = [Event(datetime(2023, 1, 3)), Event(datetime(2023, 5, 6))]\n\ndef merge_sorted_lists(list1, list2):\n    merged_list = []\n    i, j = 0, 0\n\n    # Traverse both lists and append the smaller element to the merged list\n    while i < len(list1) and j < len(list2):\n        if list1[i].timestamp < list2[j].timestamp:\n            merged_list.append(list1[i])\n            i += 1\n        else:\n            merged_list.append(list2[j])\n            j += 1\n\n    # If there are remaining elements in list1, add them\n    while i < len(list1):\n        merged_list.append(list1[i])\n        i += 1\n\n    # If there are remaining elements in list2, add them\n    while j < len(list2):\n        merged_list.append(list2[j])\n        j += 1\n\n    return merged_list\n\n# Merging the lists\nmerged_events = merge_sorted_lists(list1, list2)\nprint(merged_events)