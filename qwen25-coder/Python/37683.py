class Allocation:\n    def __init__(self, **kwargs):\n        self.params = kwargs\n\n    def __repr__(self):\n        return f"Allocation({', '.join(f'"{k}"={v}' for k, v in self.params.items())})"\n\ndef parse_allocation(input_string):\n    # Simple parser to handle spaces in parameter names\n    import re\n    pattern = re.compile(r'(\w+\s*\w+)\s*=\s*(\w+)')\n    matches = pattern.findall(input_string)\n    kwargs = {name.replace(' ', '_'): value for name, value in matches}\n    return Allocation(**kwargs)\n\n# Example usage:\ninput_string = 'Allocation(Param 1 = Val1, Param 2 = Val2)'\nallocation = parse_allocation(input_string)\nprint(allocation)