import re\n\ndef strip_matched_quotes(item):\n    # Use non-greedy matching to capture the quotes content\n    item = re.sub(r"'(.*?)'", r'\1', item)\n    item = re.sub(r'"(.*?)"', r'\1', item)\n    return item\n\ndef process_variables(input_string):\n    variable_definition = re.compile(r'<%(.*?)=(.*?)%>')\n    variable_use = re.compile(r'<%(.*?)%>')\n\n    variables = {}\n    \n    # Find all definitions first\n    for match in variable_definition.finditer(input_string):\n        var_name, var_def = match.groups()\n        var_name = strip_matched_quotes(var_name).upper().strip()\n        var_def = strip_matched_quotes(var_def.strip())\n        variables[var_name] = var_def\n\n    # Replace the definitions with an empty string\n    input_string = variable_definition.sub('', input_string)\n\n    # Replace variable uses based on the defined dictionary\n    for match in variable_use.finditer(input_string):\n        var_name = strip_matched_quotes(match.group(1)).upper().strip()\n        if var_name in variables:\n            input_string = re.sub(re.escape(match.group()), variables[var_name], input_string, 1)\n\n    return input_string\n\n# Example usage\ninput_text = "The Web <%(exampleVar='This Is A Test Variable')%> %(exampleVAR)%>"\noutput_text = process_variables(input_text)\nprint(output_text)  # Output: The Web This Is A Test Variable