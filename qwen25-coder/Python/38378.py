import pgpy\n\n# Generate new key pair for demonstration (use existing keys in practice)\nkey = pgpy.PGPKey.new(PGPPublicKeyAlgorithm.RSAEncryptOrSign, 2048)\nuid = pgpy.PGPUID.new('Your Name', email='your.email@example.com')\nkey.add_uid(uid, usage={PGPSignatureHashAlgorithm.SHA512,\n                         PGPUIDHashAlgorithm.SHA512},\n            hashes=[pgpy.constants.HashAlgorithm.SHA256],\n            ciphers=[pgpy.constants.SymmetricKeyAlgorithm.AES256])\n\n# Message to sign\nmessage = "Hello, PGP World!"\n\n# Creating a signature (this is usually done using the private key)\nwith open('private_key.asc', 'rb') as f:\n    private_key_block = f.read()\n    privkey = pgpy.PGPKey.from_blob(private_key_block)[0]\n\nsigned_message = privkey.sign(message.encode())\n\n# Verify the signature\nwith open('public_key.asc', 'rb') as f:\n    public_key_block = f.read()\n    pubkey = pgpy.PGPKey.from_blob(public_key_block)[0]\n\nif pubkey.verify(signed_message, message.encode()):\n    print("Signature is valid.")\nelse:\n    print("Invalid signature.")