import socket\nimport threading\n\n# Multicast group and port\nGROUP = '224.1.1.2'\nPORT = 5005\n\ndef handle_client(client_socket, addr):\n    while True:\n        data = client_socket.recv(1024)\n        if not data:\n            break\n        print(f"Received message from {addr}: {data.decode()}")\n    client_socket.close()\n\ndef start_server():\n    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server.bind(('localhost', PORT))\n    server.listen(5)\n    print(f"Listening on port {PORT} for group members")\n    \n    while True:\n        client_sock, addr = server.accept()\n        threading.Thread(target=handle_client, args=(client_sock, addr)).start()\n\ndef start_client(message):\n    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    client.connect(('localhost', PORT))\n    print(f"Connected to the group chat at {PORT}")\n    \n    # Simulate sending a message\n    client.sendall(message.encode())\n    \n    client.close()\n\nif __name__ == "__main__":\n    server_thread = threading.Thread(target=start_server)\n    server_thread.start()\n    \n    # Give some time for the server to start up\n    import time\n    time.sleep(1)\n    \n    # Start a few clients sending messages\n    clients = ['Hello from Client 1', 'Hello from Client 2']\n    for message in clients:\n        client_thread = threading.Thread(target=start_client, args=(message,))\n        client_thread.start()