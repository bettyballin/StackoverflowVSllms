from itertools import product\n\ndef valid_math_expression(numbers, operators):\n    n = len(numbers)\n    # Generate all possible operator sequences of length (n-1)\n    for operator_sequence in product(operators, repeat=n-1):\n        expr = str(numbers[0])\n        expected = numbers[-1]\n        for i in range(1, n):\n            expr += operator_sequence[i-1] + str(numbers[i])\n        \n        # Evaluate the expression using eval (ensure no malicious input)\n        try:\n            if eval(expr) == expected:\n                return "YES"\n        except ZeroDivisionError:\n            continue  # Skip invalid expressions like division by zero\n    \n    return "NO"\n\n# Example usage\nnumbers = [2, 3, 5, 25]\noperators = ['+', '-', '*', '/']\nprint(valid_math_expression(numbers, operators))  # Output: YES