# pip install irc3\nimport irc3\nfrom irc3.plugins.command import command\nfrom requests.exceptions import HTTPError\nimport requests\nimport time\n\nURLS_TO_CHECK = ['http://example.com', 'http://anotherexample.com']\nCHECK_INTERVAL = 900  # 15 minutes in seconds\nRETRY_INTERVAL = 300   # 5 minutes in seconds\n\n@irc3.plugin\nclass WebsiteChecker:\n    def __init__(self, bot):\n        self.bot = bot\n        self.failing_urls = set()\n        self.last_check_time = time.time()\n\n    @irc3.event(irc3.rfc.CONNECTED)\n    def on_connect(self, **kwargs):\n        for channel in ['#yourchannel']:\n            self.bot.join(channel)\n\n    def check_websites(self):\n        now = time.time()\n        if now - self.last_check_time < CHECK_INTERVAL:\n            return\n        self.last_check_time = now\n\n        for url in URLS_TO_CHECK:\n            try:\n                response = requests.get(url, timeout=10)\n                response.raise_for_status()  # Raise an error for bad responses.\n                if url in self.failing_urls:\n                    self.bot.privmsg('#yourchannel', f'Recovered: {url}')\n                    self.failing_urls.remove(url)\n            except HTTPError as http_err:\n                print(f'HTTP error occurred for {url}: {http_err}')  # Log the error\n            except Exception as err:\n                if url not in self.failing_urls:\n                    print(f'Other error occurred for {url}: {err}')  # Log the error\n                    time.sleep(RETRY_INTERVAL)\n                    try:\n                        recovery_response = requests.get(url, timeout=10)\n                        recovery_response.raise_for_status()\n                    except:\n                        self.bot.privmsg('#yourchannel', f'Failing: {url}')\n                        self.failing_urls.add(url)\n\n    @irc3.event(once=True)\n    def tick(self):\n        while True:\n            time.sleep(CHECK_INTERVAL)  # Sleep for the check interval\n            self.check_websites()\n\nif __name__ == '__main__':\n    irc3.IrcBot.from_config({\n        'nick': 'YourBotNick',\n        'autojoins': ['#yourchannel'],\n        'host': 'irc.example.com',\n        'port': 6697,\n        'use_ssl': True,\n        'tls_verify': False,  # Set to True if you want SSL verification\n    }).run(forever=True)