import gi\ngi.require_version('Gtk', '3.0')\nfrom gi.repository import Gtk, Gdk\n\nclass MyWindow(Gtk.Window):\n    def __init__(self):\n        super().__init__(title="TreeView Example")\n        self.set_default_size(200, 200)\n\n        # Create a ListStore with one string column\n        self.liststore = Gtk.ListStore(str)\n        self.liststore.append(["Item 1"])\n        self.liststore.append(["Item 2"])\n\n        # Create a TreeView and set the model\n        self.treeview = Gtk.TreeView(model=self.liststore)\n\n        # Create a CellRendererText and append it to the treeview column\n        renderer_text = Gtk.CellRendererText()\n        column_text = Gtk.TreeViewColumn("Text", renderer_text, text=0)\n        self.treeview.append_column(column_text)\n\n        # Connect the button-press-event on TreeView\n        self.treeview.connect("button_press_event", self.on_treeview_button_press)\n\n        # Place treeview in a scrolledwindow with scrollbars\n        scw = Gtk.ScrolledWindow()\n        scw.set_hexpand(True)\n        scw.set_vexpand(True)\n        scw.add(self.treeview)\n\n        self.add(scw)\n\n    def on_treeview_button_press(self, widget, event):\n        if event.type == Gdk.EventType.DOUBLE_BUTTON_PRESS:\n            # Get path for the row hovered\n            x = int(event.x)\n            y = int(event.y)\n            pthinfo = widget.get_path_at_pos(x, y)\n\n            if pthinfo is None:  # Check if it's an empty space\n                self.create_new_node()\n        return False\n\n    def create_new_node(self):\n        print("Creating a new node")\n        # Logic to add a new row goes here\n        self.liststore.append(["New Item"])\n\nwin = MyWindow()\nwin.connect("destroy", Gtk.main_quit)\nwin.show_all()\nGtk.main()