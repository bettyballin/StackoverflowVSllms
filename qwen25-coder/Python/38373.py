import ast\n\n   def restricted_eval(expr_str):\n       # Define which nodes we are going to allow.\n       allowed_types = (ast.Expression,\n                        ast.BinOp, ast.Add, ast.Sub, ast.Mult, ast.Div,\n                        ast.Num, ast.UnaryOp, ast.USub)\n\n       node = ast.parse(expr_str, mode='eval')\n\n       # Check that all nodes in the AST are of allowed types\n       for n in ast.walk(node):\n           if not isinstance(n, allowed_types):\n               raise ValueError(f'Unsupported type: {n}')\n\n       return eval(compile(node, filename='', mode='eval'))\n\n   try:\n       result = restricted_eval("1+2*3+(4-5)/6")\n       print(result)\n   except Exception as e:\n       print(e)