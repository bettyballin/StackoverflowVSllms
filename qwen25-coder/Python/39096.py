import hashlib\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\nfrom os import urandom\n\n# Hashing with SHA-256\nmessage = b"Secure message"\nhash_object = hashlib.sha256(message)\nprint("SHA-256 Hash:", hash_object.hexdigest())\n\n# AES Encryption/Decryption\nkey = urandom(32)  # 256-bit key\niv = urandom(16)   # Initialization vector for CBC mode\n\ncipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\nencryptor = cipher.encryptor()\nct = encryptor.update(message) + encryptor.finalize()\n\ndecryptor = cipher.decryptor()\npt = decryptor.update(ct) + decryptor.finalize()\n\nprint("Original message:", message)\nprint("AES Encrypted message:", ct)\nprint("AES Decrypted message:", pt)