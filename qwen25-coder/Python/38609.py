def find_sink(adj_matrix):\n    n = len(adj_matrix)\n    for v in range(n):\n        # Assume v is the potential sink\n        is_sink = True\n        for i in range(n):\n            # Check incoming edges: u -> v\n            if adj_matrix[i][v] == 0 and i != v:\n                is_sink = False\n                break\n            # Check outgoing edges: v -> ?\n            if adj_matrix[v][i] == 1:\n                is_sink = False\n                break\n        if is_sink:\n            return v\n    return -1  # No sink\n\n# Example usage\nadj_matrix = [\n    [0, 1, 1],\n    [0, 0, 0],\n    [0, 0, 0]\n]\nprint(find_sink(adj_matrix))  # Output: 2 (node 2 is the sink)