from __future__ import print_function\nimport os\nimport java.nio.file as jnio_file\nimport java.time as jtime\nimport java.util.zip as jutil_zip\n\ndef create_archive(base_dir):\n    # Get current date in the format YYYY/MM/DD\n    today = jtime.LocalDate.now()\n    date_path = today.toString().replace('-', '/')\n    \n    # Create full archive path\n    archive_name = "zipfilebypreference.zip"\n    archive_dir = os.path.join(base_dir, date_path)\n    if not os.path.exists(archive_dir):\n        os.makedirs(archive_dir)\n    \n    archive_file_path = os.path.join(archive_dir, archive_name)\n\n    # Create zip file\n    try:\n        with jutil_zip.ZipOutputStream(open(archive_file_path, 'wb')) as zos:\n            for root, dirs, files in os.walk(base_dir):\n                for file in files:\n                    file_path = os.path.join(root, file)\n                    relative_path = os.path.relpath(file_path, base_dir)\n                    zes = jutil_zip.ZipEntry(relative_path)\n                    zos.putNextEntry(zes)\n                    with open(file_path, 'rb') as f:\n                        file_data = f.read()\n                        zos.write(bytearray(file_data))\n                    zos.closeEntry()\n        print("Archive created successfully:", archive_file_path)\n    except Exception as e:\n        print("Error creating archive:", str(e))\n\n# Usage\nbase_directory = "/path/to/directory/you/want/to/archive"\ncreate_archive(base_directory)