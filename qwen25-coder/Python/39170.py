import hashlib\nimport struct\n\ndef generate_signature(mac_address, other_details, secret_key):\n    # Concatenate all the details you want to sign\n    data = mac_address + other_details\n    \n    # Concatenate with a secret key\n    full_data = data + secret_key.encode()\n    \n    # Use SHA-256 for hashing and truncate to 8 bytes (64 bits)\n    hash_object = hashlib.sha256(full_data).digest()\n    signature_64bit = struct.unpack('Q', hash_object[:8])[0]\n    \n    return signature_64bit\n\n# Example usage\nmac_address = b'\x01\x02\x03\xAB\xCD\xEF'  # Example MAC address (6 bytes)\nother_details = b'some other data here'      # Other details (up to 24 bytes in this example)\nsecret_key = 'your_secret_key'\n\nsignature = generate_signature(mac_address, other_details, secret_key)\nprint(f"Signature: {signature:#018x}")