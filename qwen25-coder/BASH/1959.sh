AS  =   nasm\nCC  =   gcc\nLD  =   ld\n\nTARGET      =   core\nBUILD       =   build\nSOURCES     =   source\nINCLUDE     =   include\nASM         =   assembly\n\nVPATH = $(SOURCES)\n\nCFLAGS  =   -Wall -O -fstrength-reduce -fomit-frame-pointer -finline-functions \\n            -nostdinc -fno-builtin -I $(INCLUDE) -MD # Added -MD for dependency generation\nASFLAGS =   -f elf\n\nCFILES      =   $(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))\nSFILES      =   assembly/start.asm\n\nSOBJS   =   $(addprefix $(BUILD)/, $(patsubst %.asm,%.o,$(notdir $(SFILES))))\nCOBJS   =   $(addprefix $(BUILD)/, $(patsubst %.c,%.o,$(notdir $(CFILES))))\nOBJS    =   $(SOBJS) $(COBJS)\nDEPS    =   $(COBJS:.o=.d)\n\nbuild : $(TARGET).img\n\n$(TARGET).img : $(TARGET).elf\n    c:/python26/python.exe concat.py stage1 stage2 pad.bin core.elf floppy.img\n\n$(TARGET).elf : $(OBJS)\n    $(LD) -T link.ld -o $@ $^\n\n$(SOBJS) : assembly/%.asm\n    @echo Assembling $<...\n    mkdir -p $(BUILD)\n    $(AS) $(ASFLAGS) $< -o $@\n\n$(COBJS) : $(BUILD)/%.o : %.c\n    @echo Compiling $<...\n    mkdir -p $(BUILD)\n    $(CC) $(CFLAGS) -c -o $@ $<\n\n# Include auto-generated dependency files if they exist.\nifneq ($(wildcard $(DEPS)),)\n-include $(DEPS)\nendif\n\n#Clean Script\nclean:\n    rm -f *.img\n    rm -rf $(BUILD)\n\n.PHONY: build clea