#!/bin/bash\n\n# Dependency installation (you need to run this once):\n# sudo apt-get install qpdf imagemagick parallel  # For Debian/Ubuntu\n\n# Check if the file is provided\nif [ -z "$1" ]; then\n    echo "Usage: $0 filename.pdf"\n    exit 1\nfi\n\nPDF_FILE="$1"\n\n# Create a temporary directory\nTMP_DIR=$(mktemp -d)\n\n# Split the PDF into individual pages\nqpdf --split-pages "$PDF_FILE" "$TMP_DIR/page-"\n\n# Function to check if an image is grayscale or color\nis_grayscale() {\n    local image_file=$1\n    # Convert the image to grayscales, then compare with threshold of 0.1 difference (to account for slight noise)\n    # If the output is a single color, it's in grayscale.\n    convert "$image_file" -colorspace gray +dither -colors 2 -format "%c\n" histogram:info: | grep -v "#" | awk '{print $1}' | sort -u | wc -l\n}\n\n# Iterate over each page and check if its image is color or grayscale\nparallel --eta \\n'IMAGE_FILE="$TMP_DIR/page-{}.png"\nif qpdf "$PDF_FILE" --pages "$PDF_FILE" {} -- "$IMAGE_FILE"; then\n    COLOR_COUNT=$(is_grayscale "$IMAGE_FILE")\n    TYPE="color"\n    if [ $COLOR_COUNT -le 1 ]; then\n        TYPE="bw"\n    fi\n    echo "Page {}: $TYPE" >> "$TMP_DIR/color_results.txt"\nfi' ::: $(seq 1 $(qpdf --show-npages="$PDF_FILE"))\n\n# Output the result file\ncat "$TMP_DIR/color_results.txt"\n\n# Clean up temporary files (uncomment to keep for debugging)\nrm -rf "$TMP_DIR"