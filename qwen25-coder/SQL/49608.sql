-- Assuming you have a table 'Customers' with columns: CustomerID, FirstName, LastName, ...\n-- And a table 'SampleNames' with one column 'Name' containing sample names\n\n-- Create a temporary table to hold the mapping of old last names to new anonymized names\nCREATE TABLE #LastNamesMapping (\n    OriginalLastName NVARCHAR(100),\n    NewLastName NVARCHAR(100)\n);\n\n-- Populate the temporary table with unique mappings from a shuffled list of sample names\nINSERT INTO #LastNamesMapping (OriginalLastName, NewLastName)\nSELECT \n    DISTINCT LastName,\n    Name AS NewLastName\nFROM\n    Customers C\nCROSS APPLY (\n    SELECT TOP 1 Name\n    FROM SampleNames S\n    ORDER BY NEWID() -- Randomly shuffle the sample names\n) ANONYMIZED_NAME;\n\n-- Update the Customers table with the anonymized last names\nUPDATE C\nSET LastName = LNM.NewLastName\nFROM\n    Customers AS C\nJOIN \n    #LastNamesMapping AS LNM\nON \n    C.LastName = LNM.OriginalLastName;\n\n-- Optionally, repeat similar steps for other sensitive fields like FirstName\n\n-- Drop the temporary table after use\nDROP TABLE #LastNamesMapping;