CREATE PROCEDURE SearchCustomers (\n    @LastName NVARCHAR(100),\n    @FirstName NVARCHAR(100) = NULL,\n    @StateProvince NVARCHAR(50) = '',\n    @City NVARCHAR(50) = '',\n    @Zip NVARCHAR(20) = ''\n)\nAS\nBEGIN\n    DECLARE @tempCustTable TABLE (\n        CustomerID INT PRIMARY KEY CLUSTERED,\n        FirstName NVARCHAR(100),\n        LastName NVARCHAR(100),\n        City NVARCHAR(50),\n        StateProvince NVARCHAR(50),\n        Zip NVARCHAR(20),\n        PhoneNumber NVARCHAR(20)\n    );\n\n    INSERT INTO @tempCustTable (CustomerID, FirstName, LastName, City, StateProvince, Zip, PhoneNumber)\n    SELECT  DISTINCT cu.CustomerID, cu.FirstName, cu.LastName, a.City,\n            a.StateProvince, a.Zip, p.PhoneNumber\n    FROM Customer cu WITH(NOLOCK)\n    INNER JOIN Address a WITH(NOLOCK) ON cu.CustomerID = a.CustomerID\n    LEFT OUTER JOIN Phone p WITH(NOLOCK) ON cu.CustomerID = p.CustomerID\n    WHERE  (cu.LastName = @LastName OR cu.LastName LIKE @LastName + '%')\n    AND (@FirstName IS NULL OR (cu.FirstName = @FirstName OR cu.FirstName LIKE @FirstName + '%'))\n    AND (@StateProvince = '' OR a.StateProvince = @StateProvince)\n    AND (@City = '' OR a.City LIKE @City + '%')\n    AND (@Zip = '' OR (a.Zip = @Zip OR a.Zip LIKE @Zip + '%'))\n    ORDER BY cu.LastName, cu.FirstName\n    OPTION (RECOMPILE);  -- Forces recompile to avoid bad execution plans\n\n    -- Paging logic can be added here based on your application's requirements\nEND;