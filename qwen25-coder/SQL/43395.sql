CREATE PROCEDURE CopyEstimateHeadersAndDetails\n    @OldEstimateID INT,\n    @NewEstimateID INT\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    DECLARE @err INT;\n    DECLARE @RETURN_VALUE INT;\n    DECLARE @OldJobHeaderID INT;\n    DECLARE @NewJobHeaderID INT;\n\n    -- Start transaction\n    BEGIN TRANSACTION;\n\n    -- Declare a cursor\n    DECLARE cur CURSOR FOR \n        SELECT JobHeaderID \n        FROM dbo.EstimateJobHeader \n        WHERE EstimateID = @OldEstimateID;\n\n    -- Open the cursor\n    OPEN cur;\n\n    -- Fetch first row from cursor\n    FETCH NEXT FROM cur INTO @OldJobHeaderID;\n\n    -- Loop through all rows\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        -- Insert into EstimateJobHeader table\n        INSERT INTO EstimateJobHeader (ServiceID, EstimateID)\n        SELECT ServiceID, @NewEstimateID \n        FROM EstimateJobHeader \n        WHERE JobHeaderID = @OldJobHeaderID;\n\n        SELECT @err = @@error;\n        IF @err <> 0\n        BEGIN \n            ROLLBACK TRANSACTION;\n            SET @RETURN_VALUE = 4;\n            RETURN @RETURN_VALUE; \n        END;\n\n        -- Get the new ID of the inserted row\n        SET @NewJobHeaderID = CAST(SCOPE_IDENTITY() AS INT);\n\n        SELECT @err = @@error;\n        IF @err <> 0\n        BEGIN \n            ROLLBACK TRANSACTION;\n            SET @RETURN_VALUE = 3;\n            RETURN @RETURN_VALUE; \n        END;\n\n        -- Insert into EstimateDetail table\n        INSERT INTO EstimateDetail (JobHeaderID, OtherCols)\n        SELECT @NewJobHeaderID, OtherCols \n        FROM EstimateDetail \n        WHERE JobHeaderID = @OldJobHeaderID;\n\n        SELECT @err = @@error;\n        IF @err <> 0\n        BEGIN \n            ROLLBACK TRANSACTION;\n            SET @RETURN_VALUE = 3;\n            RETURN @RETURN_VALUE; \n        END;\n\n        -- Insert into EstimateJobDetail table\n        INSERT INTO EstimateJobDetail (JobHeaderID, OtherCols)\n        SELECT @NewJobHeaderID, OtherCols \n        FROM EstimateJobDetail \n        WHERE JobHeaderID = @OldJobHeaderID;\n\n        SELECT @err = @@error;\n        IF @err <> 0\n        BEGIN \n            ROLLBACK TRANSACTION;\n            SET @RETURN_VALUE = 3;\n            RETURN @RETURN_VALUE; \n        END;\n\n        -- Fetch the next row from cursor\n        FETCH NEXT FROM cur INTO @OldJobHeaderID;\n    END\n\n    -- Close and deallocate the cursor\n    CLOSE cur;\n    DEALLOCATE cur;\n\n    -- Commit transaction if all is well\n    COMMIT TRANSACTION;\n\n    RETURNS 0; -- Successful completion\nEND