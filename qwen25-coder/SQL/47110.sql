CREATE FUNCTION [dbo].[AddBusinessHours]\n(\n    @StartDate DATETIME,\n    @DurationHrs INT\n)\nRETURNS DATETIME\nAS\nBEGIN\n    DECLARE @ResultDate DATETIME = @StartDate;\n    DECLARE @WorkingHrsInDay FLOAT = 8.5; -- from 08:30 to 17:30\n\n    WHILE @DurationHrs > 0\n    BEGIN\n        IF DATEPART(WEEKDAY, @ResultDate) IN (1, 7) -- 1=Sunday, 7=Saturday\n            SET @ResultDate = DATEADD(DAY, 8 - DATEPART(WEEKDAY, @ResultDate), @ResultDate); -- roll to next Monday\n\n        DECLARE @StartTimeOfDay DATETIME = CAST(CAST(@ResultDate AS DATE) + '08:30' AS DATETIME);\n        DECLARE @EndTimeOfDay DATETIME = CAST(CAST(@ResultDate AS DATE) + '17:30' AS DATETIME);\n\n        IF @ResultDate < @StartTimeOfDay\n            SET @ResultDate = @StartTimeOfDay;\n\n        DECLARE @WorkingHoursLeft FLOAT = DATEDIFF(MINUTE, @ResultDate, @EndTimeOfDay) / 60.0;\n\n        IF @DurationHrs > @WorkingHoursLeft\n        BEGIN\n            SET @DurationHrs -= CEILING(@WorkingHoursLeft); -- round up to the next hour increment if it's not a full working day left\n            SET @ResultDate = DATEADD(DAY, 1, @EndTimeOfDay);\n        END\n        ELSE\n        BEGIN\n            SET @ResultDate = DATEADD(MINUTE, @DurationHrs * 60, @ResultDate);\n            BREAK;\n        END\n    END\n\n    RETURN @ResultDate;\nEND