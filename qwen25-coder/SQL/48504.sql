CREATE OR REPLACE FUNCTION inttoip(n IN NUMBER) RETURN VARCHAR2 AS\n    part1 NUMBER;\n    part2 NUMBER;\n    part3 NUMBER;\n    part4 NUMBER;\nBEGIN\n    part1 := TRUNC(n / 16777216);\n    n     := MOD(n, 16777216);\n    part2 := TRUNC(n / 65536);\n    n     := MOD(n, 65536);\n    part3 := TRUNC(n / 256);\n    part4 := MOD(n, 256);\n    RETURN part1 || '.' || part2 || '.' || part3 || '.' || part4;\nEND;\n/\n\nCREATE OR REPLACE FUNCTION iptoint(ip IN VARCHAR2) RETURN NUMBER AS\n    parts DBMS_UTILITY.UNCL_ARRAY;\n    i     PLS_INTEGER := 0;\nBEGIN\n    i := REGEXP_COUNT(ip, '\.') + 1; -- Count the number of parts in the IP address.\n    IF (i != 4) THEN\n        RAISE_APPLICATION_ERROR(-20003, 'Invalid IP address format.');\n    END IF;\n    \n    DBMS_UTILITY.COMMA_TO_TABLE(' ' || ip || ',', i, parts);\n\n    RETURN TO_NUMBER(parts(1)) * POWER(256, 3) + \n           TO_NUMBER(parts(2)) * POWER(256, 2) +\n           TO_NUMBER(parts(3)) * POWER(256, 1) +\n           TO_NUMBER(parts(4));\nEND;\n/