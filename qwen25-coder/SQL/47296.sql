BEGIN TRANSACTION;\nBEGIN TRY\n    -- Initialize variables\n    DECLARE @success INT = 1;\n    DECLARE @approved INT = 1;\n    DECLARE @unique INT = 1;\n\n    -- Fetch campaign ID and other details\n    SELECT \n        @campaignId = CampaignId, \n        @campaignLimit = Limit, \n        @campaignStatus = [Status], \n        @campaignType = [Type], \n        @publisherEarning = PublisherEarning, \n        @advertiserCost = AdvertiserCost, \n        @campaignModeration = ModerationType\n    FROM dbo.Advert A\n    JOIN dbo.Campaign C ON A.CampaignId = C.Id\n    WHERE A.Id = @advertId;\n\n    -- Check campaign existence and status\n    IF @campaignId IS NULL OR @campaignStatus = 1\n    BEGIN\n        SELECT @success = 0;\n        RETURN;\n    END\n\n    -- Type validation\n    IF (@type NOT IN (0, 2) AND @type <> @campaignType)\n    BEGIN\n        SELECT @success = 0;\n        RETURN;\n    END\n\n    -- Publisher Earning override\n    SELECT TOP(1) \n        @publisherEarning = Earning \n    FROM dbo.MapCampaignPublisherEarning\n    WHERE CanpaignId = @campaignId AND PublisherId = @publisherId;\n\n    -- Advert limit check\n    IF NOT @campaignLimit IS NULL\n    BEGIN\n        DECLARE @advertsLeft INT;\n        SELECT @advertsLeft = AdvertsLeft FROM dbo.Campaign WHERE Id = @campaignId;\n        IF @advertsLeft < 1\n        BEGIN\n            SELECT @success = 0;\n            RETURN;\n        END\n    END\n\n    -- Moderation checks (blacklist/whitelist)\n    DECLARE @moderationCount INT;\n    SELECT @moderationCount = COUNT([Status]) \n    FROM dbo.MapCampaignModeration\n    WHERE CampaignId = @campaignId AND PublisherId = @publisherId\n      AND [Status] = CASE \n                        WHEN @campaignModeration = 0 THEN 3 -- blacklist\n                        ELSE 2 -- whitelist\n                      END;\n\n    IF (@moderationCount = 0 AND @campaignModeration = 0) OR \n       (@moderationCount > 0 AND @campaignModeration <> 0)\n    BEGIN\n        SELECT @success = 0;\n        RETURN;\n    END\n\n    -- IP uniqueness check\n    IF @ipIsUnique = 1\n        SET @unique = 1;\n    ELSE\n    BEGIN\n        DECLARE @existingRecords INT;\n        SELECT @existingRecords = COUNT(T1.Id) \n        FROM dbo.Stat AS T1\n        JOIN dbo.IQ_Advert AS T2 ON T1.AdvertId = T2.Id\n        WHERE T2.CampaignId = @campaignId AND T1.PublisherId = @publisherId AND T1.Ip = @ip;\n\n        IF @existingRecords > 0\n            SELECT @success = 0, @unique = 0;\n    END\n\n    -- Final checks before returning success\n    IF @success = 0 OR @approved = 0 OR @unique = 0\n        RETURN;\n\n    COMMIT TRANSACTION;\nEND TRY\nBEGIN CATCH\n    ROLLBACK TRANSACTION;\n    THROW; -- Re-throw the caught exception\nEND CATCH;