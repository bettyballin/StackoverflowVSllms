CREATE PROCEDURE GetNextIdentifier\nAS\nBEGIN\n    DECLARE @CurrentMax VARCHAR(5) = 'AAAAA';\n    DECLARE @NextIdentifier VARCHAR(5);\n    DECLARE @Incremented CHAR(1);\n    DECLARE @Index INT = 5;\n\n    -- Find the current maximum identifier in the table\n    SELECT TOP 1 @CurrentMax = IdentifierColumn\n    FROM IdentifiersTable\n    ORDER BY IdentifierColumn DESC;\n\n    SET @NextIdentifier = @CurrentMax;\n\n    -- Increment the last character and handle rollover\n    WHILE @Index > 0\n    BEGIN\n        SET @Incremented = CHAR(ASCII(SUBSTRING(@NextIdentifier, @Index, 1)) + 1);\n        \n        IF @Incremented > 'Z'\n            SET @Incremented = 'A';\n        ELSE\n        BEGIN\n            -- Update the current position with incremented value\n            SET @NextIdentifier = STUFF(@NextIdentifier, @Index, 1, @Incremented);\n            BREAK;\n        END\n        \n        -- If we reach here, it means we had to rollover the character at this position\n        SET @NextIdentifier = STUFF(@NextIdentifier, @Index, 1, 'A');\n        SET @Index = @Index - 1;\n    END\n\n    -- Check if the generated identifier already exists in the table\n    IF EXISTS (SELECT 1 FROM IdentifiersTable WHERE IdentifierColumn = @NextIdentifier)\n    BEGIN\n        -- Implement your logic to handle if the next identifier is not available\n        -- This could involve retrying, logging an error, etc.\n        RAISERROR('No valid next identifier found.', 16, 1);\n        RETURN;\n    END\n\n    -- Return or insert the new identifier as required\n    SELECT @NextIdentifier AS NextAvailableIdentifier;\nEND