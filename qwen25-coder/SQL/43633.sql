DECLARE @table TABLE(data VARCHAR(20))\nINSERT INTO @table VALUES ('not duplicate row')\nINSERT INTO @table VALUES ('duplicate row')    \nINSERT INTO @table VALUES ('duplicate row')    \nINSERT INTO @table VALUES ('second duplicate row')    \nINSERT INTO @table VALUES ('second duplicate row')\n\nSELECT   data    \nINTO     #duplicates    \nFROM     @table    \nGROUP BY data    \nHAVING   COUNT(*) > 1    \n\n-- delete all rows that are duplicated\nDELETE   FROM @table\nFROM     @table o INNER JOIN #duplicates d\n         ON d.data = o.data        \n\n-- insert one row for every duplicate set from a fresh select of distinct values from the original table\nINSERT INTO @table(data)\nSELECT DISTINCT data \nFROM #duplicates\n\n-- Optional: If you want to add back non-duplicate rows as well\nINSERT INTO @table(data)\nSELECT data\nFROM @table t\nWHERE NOT EXISTS (\n    SELECT 1 FROM #duplicates d WHERE d.data = t.data\n);\n\n-- Clean up temporary table if needed\nDROP TABLE #duplicates\n\n-- Now the @table should have only one instance of each duplicate row and all unique rows