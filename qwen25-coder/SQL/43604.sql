WITH RECURSIVE DistanceCheck AS (\n  -- Base case: Start with a distance of 0\n  SELECT zr.zip, 0 AS current_distance, SUM(za.locations) AS total_locations\n  FROM zips_required zr\n  LEFT JOIN zips_available za ON zipdistance(zr.zip, za.zip) = 0\n  GROUP BY zr.zip\n  \n  UNION ALL\n  \n  -- Recursive case: Increase the distance by 1 mile and sum locations within that radius\n  SELECT DISTINCT dc.zip, dc.current_distance + 1 AS current_distance,\n    (SELECT SUM(za.locations)\n     FROM zips_available za\n     WHERE zipdistance(dc.zip, za.zip) <= dc.current_distance + 1) AS total_locations\n  FROM DistanceCheck dc\n  WHERE dc.total_locations < :n -- Replace :n with your threshold value\n)\n\n-- Select the minimum distance that meets the criteria\nSELECT zip, current_distance AS min_radius_to_meet_criteria, total_locations\nFROM DistanceCheck\nWHERE total_locations >= :n; -- Ensure this matches the condition in the recursive part\nORDER BY zip;