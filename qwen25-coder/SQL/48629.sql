-- Roles table: lists all defined roles\nCREATE TABLE roles (\n    role_id SERIAL PRIMARY KEY,\n    role_name VARCHAR(255) UNIQUE NOT NULL\n);\n\n-- Permissions table: each record is a granular permission\nCREATE TABLE permissions (\n    permission_id SERIAL PRIMARY KEY,\n    permission_name VARCHAR(255) UNIQUE NOT NULL,\n    permission_description TEXT\n);\n\n-- Role_Permissions table: links roles with their permissions\nCREATE TABLE role_permissions (\n    role_permission_id SERIAL PRIMARY KEY,\n    role_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES permissions(permission_id)\n);\n\n-- Facilities table\nCREATE TABLE facilities (\n    facility_id VARCHAR(255) PRIMARY KEY\n);\n\n-- Users table\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(255) UNIQUE NOT NULL\n);\n\n-- User_Roles_Facilities table: links users to their roles for specific facilities\nCREATE TABLE user_roles_facilities (\n    user_role_facility_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    facility_id VARCHAR(255) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id),\n    FOREIGN KEY (facility_id) REFERENCES facilities(facility_id)\n);