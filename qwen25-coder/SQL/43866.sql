DECLARE @xml xml;\nSELECT @xml = XmlCol FROM Data;\n\nWITH PersonTimes AS (\n    SELECT \n        [PersonCollection],\n        [PersonId] = Persons.PersonCollection.value('(personid)[1]', 'NVARCHAR(50)'),\n        [FirstName] = Persons.PersonCollection.value('(firstname)[1]', 'NVARCHAR(50)'),\n        [LastName] = Persons.PersonCollection.value('(lastname)[1]', 'NVARCHAR(50)'),\n        [TimeIndex] = ROW_NUMBER() OVER (PARTITION BY Persons.PersonCollection ORDER BY (SELECT 1)) - 1,\n        [EnterTime] = Times.TimeNodes.value('.', 'NVARCHAR(50)'),\n        [LeaveTime] = Lead(Times.TimeNodes.value('.', 'NVARCHAR(50)'), 1) OVER (\n            PARTITION BY Persons.PersonCollection \n            ORDER BY Times.SequenceIndex\n        )\n    FROM @xml.nodes('root/person') AS Persons(PersonCollection)\n    OUTER APPLY (SELECT T.node.value('.', 'NVARCHAR(50)') AS [Value], ROW_NUMBER() OVER (ORDER BY (SELECT 1)) AS SequenceIndex, T.node.query('.') AS TimeNodes \n                 FROM PersonCollection.nodes('*[self::entertime or self::leavetime]') AS T(node)\n                ) AS Times\n    WHERE Times.SequenceIndex % 2 = 1 -- Consider only entertime nodes for pairing\n)\n\nSELECT [PersonId],\n       [FirstName],\n       [LastName],\n       [EnterTime],\n       CASE WHEN [LeaveTime] = 'NULL' THEN NULL ELSE [LeaveTime] END AS [LeaveTime]\nFROM PersonTimes\nORDER BY [PersonId], [TimeIndex];