CREATE OR REPLACE FUNCTION handle_boolean_update()\nRETURNS TRIGGER AS $$\nBEGIN\n    -- Use a FOR UPDATE lock to ensure single access to the row during update checking\n    PERFORM 1 FROM your_table WHERE id = NEW.id AND boolean_column = FALSE FOR UPDATE;\n\n    -- Check if the boolean_column is about to change from false to true\n    IF OLD.boolean_column = FALSE AND NEW.boolean_column = TRUE THEN\n        -- Perform action here, e.g., insert into log or update another table\n\n        -- Example of logging the change\n        INSERT INTO your_log_table (id, updated_at) VALUES (NEW.id, NOW());\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Create trigger using the function\nCREATE TRIGGER before_update_trigger\nBEFORE UPDATE ON your_table\nFOR EACH ROW EXECUTE FUNCTION handle_boolean_update();