DECLARE @PeoplePerPair INT = 2;\nDECLARE @MinAvailableDays INT = 4;\n\n-- Temp table to store the assignments\nIF OBJECT_ID('tempdb..#Assignments') IS NOT NULL DROP TABLE #Assignments;\nCREATE TABLE #Assignments (\n    DateValue DATE,\n    SiteID INT,\n    PeopleIDs VARCHAR(MAX)\n);\n\nWITH Sites AS (\n    SELECT *, \n           ROW_NUMBER() OVER (PARTITION BY SiteID ORDER BY PersonID) as RowNum,\n           CEILING(CAST(PeopleCnt / CAST(@PeoplePerPair AS FLOAT) AS INT)) as NumPairs\n    FROM (\n        SELECT S.SiteID, P.PersonID,\n               COUNT(*) OVER (PARTITION BY S.SiteID) AS PeopleCnt\n        FROM @Site S\n        JOIN @Person P ON S.SiteID = P.SiteID\n    ) X\n),\nAssignmentsCTE AS (\n    SELECT MIN(DateAdd(Day, RowNum * 7 - @MinAvailableDays + 1, GETDATE())) as DateValue,\n           SiteID, \n           STRING_AGG(PeopleIDs, ',') as PeopleIDs\n    FROM Sites\n    GROUP BY SiteID, CEILING(RowNum / (@PeoplePerPair * 1.0))\n    HAVING MAX(DateAdd(Day, RowNum * 7 - @MinAvailableDays + 1, GETDATE())) < DATEADD(DAY, 30, GETDATE())\n),\nAllDates AS (\n    SELECT MIN(DateValue) AS DateValue\n    FROM AssignmentsCTE\n    UNION ALL\n    SELECT DateAdd(Day, 1, DateValue)\n    FROM AllDates\n    WHERE DateValue < (SELECT MAX(DateValue) FROM AssignmentsCTE)\n    AND DATEPART(WEEKDAY, DateValue + 2) != 1 -- Exclude Sundays\n)\nINSERT INTO #Assignments (DateValue, SiteID, PeopleIDs)\nSELECT AD.DateValue, AC.SiteID, AC.PeopleIDs\nFROM AllDates AD\nCROSS JOIN (\n    SELECT DISTINCT DateValue, SiteID, PeopleIDs\n    FROM AssignmentsCTE\n) AC\nWHERE AD.DateValue >= AC.DateValue;\n\nWITH FinalOutput AS (\n    SELECT DateValue as 'Date',\n           STRING_AGG(CASE WHEN SiteID = 1 THEN PeopleIDs END, ',') as 'Site 1',\n           STRING_AGG(CASE WHEN SiteID = 2 THEN PeopleIDs END, ',') as 'Site 2',\n           STRING_AGG(CASE WHEN SiteID = 3 THEN PeopleIDs END, ',') as 'Site 3',\n           STRING_AGG(CASE WHEN SiteID = 4 THEN PeopleIDs END, ',') as 'Site 4'\n    FROM #Assignments\n    GROUP BY DateValue\n)\nSELECT * \nFROM FinalOutput\nOPTION (MAXRECURSION 0);