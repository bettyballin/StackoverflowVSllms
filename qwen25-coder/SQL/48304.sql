-- Step 1: Create a table for shared elements between sets\nWITH shared_elements AS (\n    SELECT DISTINCT e1.set_id AS set_id_1, e2.set_id AS set_id_2\n    FROM set_elements e1\n    JOIN set_elements e2 ON e1.element = e2.element AND e1.set_id <> e2.set_id\n),\n-- Step 2: Find connected components using recursive CTE\nconnected_sets AS (\n    SELECT set_id_1 AS root_set, set_id_1, set_id_2\n    FROM shared_elements\n\n    UNION ALL\n\n    SELECT c.root_set, s.set_id_1, s.set_id_2\n    FROM shared_elements s\n    JOIN connected_sets c ON (c.set_id_2 = s.set_id_1 OR c.set_id_2 = s.set_id_2)\n),\n-- Step 3: Assign a group number to each set based on its root set\nset_groups AS (\n    SELECT DISTINCT set_id, MIN(root_set) OVER(PARTITION BY set_id) AS group_num\n    FROM connected_sets\n    UNION\n    SELECT set_id, set_id AS group_num\n    FROM set_elements\n    WHERE set_id NOT IN (SELECT set_id FROM connected_sets)\n),\n-- Step 4: Group sets by their assigned group number to get the clusters\nfinal_result AS (\n    SELECT GROUP_CONCAT(set_id ORDER BY set_id SEPARATOR ',') AS element_group\n    FROM set_groups\n    GROUP BY group_num\n)\n-- Output the final result\nSELECT element_group\nFROM final_result;