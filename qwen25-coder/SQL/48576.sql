-- Create cross reference table if it doesn't exist\nIF NOT EXISTS (SELECT * FROM sys.tables WHERE object_id = OBJECT_ID(N'[dbo].[CardRulingXref]'))\nBEGIN\n    CREATE TABLE [dbo].[CardRulingXref](\n        RulingId INT,\n        CardIdReferenced INT,\n        CONSTRAINT PK_CardRulingXref PRIMARY KEY CLUSTERED \n        (\n            RulingId ASC,\n            CardIdReferenced ASC\n        )\n    );\nEND;\n\n-- Insert into cross reference table\nINSERT INTO [dbo].[CardRulingXref] (RulingId, CardIdReferenced)\nSELECT DISTINCT r.Id AS RulingId, c.Id AS CardIdReferenced\nFROM rulings r\nJOIN card c ON ' "' + REPLACE(c.Name, '''', '''''') + '" ' LIKE '%"' + REPLACE(r.Text, '''', '''''') + '"%'\nWHERE r.Text LIKE '%"%' -- Ensure the ruling text contains quoted content\n\n-- Optimized approach using a Table-Valued Function for splitting strings (quoted card names here)\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SplitQuotedStrings]'))\nBEGIN\n    CREATE FUNCTION [dbo].[SplitQuotedStrings]\n        (@Input NVARCHAR(MAX))\n    RETURNS @Output TABLE(\n            Token NVARCHAR(4000) PRIMARY KEY CLUSTERED NOT NULL\n        )\n    AS BEGIN\n        DECLARE @Start INT, @End INT \n        SET @Input = REPLACE(' ' + @Input + ' ', '"', '" ')\n        \n        WHILE CHARINDEX('" "',@Input collate SQL_Latin1_General_CP850_BIN) > 0\n            BEGIN\n                SELECT @Start=CHARINDEX('" "',@input collate SQL_Latin1_General_CP850_BIN)+2,@End=CHARINDEX(' " ',@Input collate SQL_Latin1_General_CP850_BIN)-1  \n                INSERT INTO @Output VALUES (LTRIM(RTRIM(SUBSTRING(@Input,@Start,@End-@Start+1))))\n                SET @Input = STUFF(@Input, @Start-1, @End-@Start+3,' ')\n            END\n        RETURN;\n    END\nEND\n\n-- Using the Table-Valued Function to split and find matches\nINSERT INTO [dbo].[CardRulingXref] (RulingId, CardIdReferenced)\nSELECT DISTINCT r.Id AS RulingId, c.Id AS CardIdReferenced\nFROM rulings r\nINNER JOIN dbo.SplitQuotedStrings(r.Text) q ON q.Token = c.Name;