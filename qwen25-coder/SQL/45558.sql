-- Define an enumeration type (if your DBMS supports it)\nCREATE TYPE OWNER_TYPE AS ENUM ('RestaurantChain', 'Restaurant', 'MenuItem');\n\n-- Comments table\nCREATE TABLE Comments (\n    CommentID SERIAL PRIMARY KEY,\n    OwnerType OWNER_TYPE NOT NULL,\n    OwnerID INTEGER NOT NULL,\n    CommentText TEXT NOT NULL,\n    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    -- Note: Foreign key constraints cannot be defined in SQL directly for polymorphic relationships\n    CHECK (CASE \n             WHEN OwnerType = 'RestaurantChain' THEN EXISTS(SELECT 1 FROM RestaurantChains WHERE ID = OwnerID)\n             WHEN OwnerType = 'Restaurant' THEN EXISTS(SELECT 1 FROM Restaurants WHERE ID = OwnerID)\n             WHEN OwnerType = 'MenuItem' THEN EXISTS(SELECT 1 FROM MenuItems WHERE ID = OwnerID)\n           END)\n);\n\n-- Ratings table\nCREATE TABLE Ratings (\n    RatingID SERIAL PRIMARY KEY,\n    OwnerType OWNER_TYPE NOT NULL,\n    OwnerID INTEGER NOT NULL,\n    RatingValue INTEGER CHECK (RatingValue >= 0 AND RatingValue <= 5) NOT NULL, -- Example rating scale\n    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    -- Note: Foreign key constraints cannot be defined in SQL directly for polymorphic relationships\n    CHECK (CASE \n             WHEN OwnerType = 'RestaurantChain' THEN EXISTS(SELECT 1 FROM RestaurantChains WHERE ID = OwnerID)\n             WHEN OwnerType = 'Restaurant' THEN EXISTS(SELECT 1 FROM Restaurants WHERE ID = OwnerID)\n             WHEN OwnerType = 'MenuItem' THEN EXISTS(SELECT 1 FROM MenuItems WHERE ID = OwnerID)\n           END)\n);