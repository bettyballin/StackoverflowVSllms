-- Create a table to store caller and callee information\nCREATE TABLE ProcedureCallLog (\n    LogId INT IDENTITY(1,1) PRIMARY KEY,\n    Caller NVARCHAR(255),\n    Callee NVARCHAR(255),\n    CallTime DATETIME DEFAULT GETDATE()\n);\n\n-- Example stored procedures with logging functionality\nGO\n\nCREATE PROCEDURE proc1\nAS\nBEGIN\n    -- Log call to proc3 from proc1\n    EXEC LogProcedureCall 'proc1', 'proc3';\n    \n    -- Call proc3\n    EXEC proc3;\nEND\nGO\n\nCREATE PROCEDURE proc2\nAS\nBEGIN\n    -- Log call to proc3 from proc2\n    EXEC LogProcedureCall 'proc2', 'proc3';\n    \n    -- Call proc3\n    EXEC proc3;\nEND\nGO\n\nCREATE PROCEDURE proc3\nAS\nBEGIN\n    PRINT 'proc3 is running...';\n\n    -- Here you can check for errors and handle or log them accordingly\n    -- For demonstration, checking a fictitious error condition\n    DECLARE @ErrorMessage NVARCHAR(100);\n    SET @ErrorMessage = 'Error in proc3';\n    \n    IF 1 = 1 -- This should be your actual error condition check\n    BEGIN\n        EXEC LogProcedureCall 'proc3', 'Logged Error';\n        \n        RAISERROR(@ErrorMessage, 16, 1);\n    END;\nEND\nGO\n\n-- The logging procedure to record caller and callee information\nCREATE PROCEDURE LogProcedureCall\n    @Caller NVARCHAR(255),\n    @Callee NVARCHAR(255)\nAS\nBEGIN\n    INSERT INTO ProcedureCallLog (Caller, Callee) VALUES (@Caller, @Callee);\nEND;\nGO