Declare @rows int,\n        @currentRow int = 1,\n        @ID uniqueidentifier,\n        @LocTotal bigint;\n\n-- Get total number of rows to process\nselect @rows = count(*) from #t1;\n\nwhile @currentRow <= @rows\nbegin\n    -- Fetch the ID for the current row\n    select @ID = recid \n    from (select recid, ROW_NUMBER() over(order by (select NULL)) as RowNum \n          from #t1) t\n    where t.RowNum = @currentRow;\n\n    -- Calculate the bitwise total for this row's bit fields\n    select @LocTotal = SUM(bitValue)\n    from (\n        values \n            (case when cbHPILoc1 = 1 then 1 else 0 end),\n            (case when cbHPILoc2 = 1 then 2 else 0 end),\n            -- Continue this pattern for all until\n            (case when cbHPILoc25 = 1 then 16777216 else 0 end)\n    ) as Bits(bitValue)\n    from dbo.MyTest_BitMap\n    where RecKey = @ID;\n\n    -- Output the result\n    print 'Row ID: ' + convert(nvarchar(36), @ID);\n    print 'Bitwise Total: ' + convert(nvarchar(20), @LocTotal);\n\n    -- Move to the next row\n    set @currentRow += 1;\nend