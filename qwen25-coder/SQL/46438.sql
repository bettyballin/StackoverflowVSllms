CREATE OR REPLACE TYPE test_payload AS OBJECT (\n   test_id NUMBER,\n   test_dt DATE);\n\nDECLARE\n   subscriber SYS.aq$_agent;\nBEGIN\n\n   -- Create Originating Queue and start it\n   DBMS_AQADM.create_queue_table( queue_table => 'Test_MQT', queue_payload_type => 'Test_Payload',\n                                  multiple_consumers => TRUE );\n   DBMS_AQADM.create_queue( 'Test_Q', 'Test_MQT' );\n   DBMS_AQADM.start_queue( queue_name => 'Test_Q' );\n\n   -- Create Destination Queue and start it\n   DBMS_AQADM.create_queue_table( queue_table => 'Dest_MQT', queue_payload_type => 'Test_Payload',\n                                  multiple_consumers => TRUE );\n   DBMS_AQADM.create_queue( 'Dest_Q', 'Dest_MQT' );\n   DBMS_AQADM.start_queue( queue_name => 'Dest_Q' );\n\n   -- Add Subscriber and schedule propagation with an immediate start\n   subscriber := SYS.aq$_agent( 'test_local_sub', 'DEST_SCHEMA.Dest_Q', NULL ); -- Ensure correct schema reference\n   DBMS_AQADM.add_subscriber( queue_name => 'Test_Q', subscriber => subscriber );\n   \n   -- Schedule propagation and propagate manually for testing\n   DBMS_AQADM.schedule_propagation(\n     queue_name        => 'Test_Q',\n     destination_queue => 'DEST_SCHEMA.Dest_Q',\n     duration          => 0,                 -- Duration in seconds (0 = propagate immediately)\n     next_time         => SYSTIMESTAMP + INTERVAL '5' SECOND );  -- Start after 5 seconds\n   DBMS_AQADM.manual_propagate( \n       queue_name => 'Test_Q',\n       destination => 'DEST_SCHEMA.Dest_Q');\n\nEND;\n/\n\nDECLARE\n   enqueue_options      DBMS_AQ.enqueue_options_t;\n   message_properties   DBMS_AQ.message_properties_t;\n   message_handle       RAW( 16 );\n   MESSAGE              test_payload;\nBEGIN\n   MESSAGE := test_payload( 2, SYSDATE );\n   DBMS_AQ.enqueue(\n     queue_name         => 'Test_Q',\n     enqueue_options    => enqueue_options,\n     message_properties => message_properties,\n     payload            => MESSAGE,\n     msgid              => message_handle);\n   COMMIT;\nEND;\n/\n\nDECLARE\n   dequeue_options      DBMS_AQ.dequeue_options_t;\n   message_properties   DBMS_AQ.message_properties_t;\n   message_handle       RAW( 16 );\n   MESSAGE              test_payload;\nBEGIN\n   dequeue_options.navigation := DBMS_AQ.first_message;\n   DBMS_AQ.dequeue(\n     queue_name         => 'Dest_Q',\n     dequeue_options    => dequeue_options,\n     message_properties => message_properties,\n     payload            => MESSAGE,\n     msgid              => message_handle);\n   DBMS_OUTPUT.put_line( 'Test_ID: ' || MESSAGE.test_id );\n   DBMS_OUTPUT.put_line( 'Test_Date: ' || MESSAGE.test_dt );\n   COMMIT;\nEND;\n/