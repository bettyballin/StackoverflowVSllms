CREATE FUNCTION dbo.GetBusinessHoursDiff(@Start datetime, @End datetime)\nRETURNS int\nAS\nBEGIN\n    DECLARE @TotalHours int,\n            @NextDay datetime\n\n    SET @TotalHours = 0\n    SET @NextDay = CAST(CAST(@Start AS date) + 1 AS datetime) + '08:30'\n\n    IF DATEPART(dw, @Start) = 7 -- Saturday\n        SET @Start = @NextDay\n\n    WHILE @Start <= @End\n    BEGIN\n        DECLARE @WorkingHours float,\n                @EffectiveStart datetime,\n                @EffectiveEnd datetime\n\n        IF DATEPART(dw, @Start) IN (1,7)  -- If Sunday or Saturday then skip this day\n        BEGIN\n            SET @Start = @NextDay + '08:30'\n            SET @NextDay = CAST(CAST(@Start AS date) + 1 AS datetime)\n            CONTINUE;\n        END\n\n        IF DATEPART(dw, @End) IN (1,7)  -- If End day is Sunday or Saturday make it end of the previous working day\n            SET @EffectiveEnd = @NextDay - '05:30'\n        ELSE\n            SET @EffectiveEnd = CASE WHEN @End >= CAST(@Start AS date) + '16:00' \n                                    THEN CAST(@Start AS date) + '16:00'\n                                    ELSE @End END\n\n        SET @EffectiveStart = CASE WHEN DATEPART(hour, @Start) < 8 OR (DATEPART(hour, @Start) = 8 AND DATEPART(minute, @Start) < 30)\n                                  THEN CAST(@Start AS date) + '08:30'\n                                  ELSE @Start\n                              END\n\n        SET @WorkingHours = DATEDIFF(second, @EffectiveStart, @EffectiveEnd) / 3600.0\n\n        IF @End <= CAST(CAST(@NextDay AS date) + '16:00' AS datetime)\n            RETURN @TotalHours + (@WorkingHours + CASE WHEN DATEPART(minute, @Start) > 0 AND DATEPART(hour, @EffectiveStart) = 16 THEN 0 ELSE (DATEPART(minute, DATEADD(second, @WorkingHours * 3600.0, CAST(@EffectiveEnd AS datetime))) / 60.0) END)\n\n        SET @TotalHours = @TotalHours + (@WorkingHours - CASE WHEN DATEPART(minute, @Start) > 0 AND DATEPART(hour, @EffectiveStart) = 16 THEN 0 ELSE (DATEPART(minute, @EffectiveStart) / 60.0) END)\n        SET @Start = @NextDay + '08:30'\n        SET @NextDay = CAST(CAST(@Start AS date) + 1 AS datetime)\n    END\n\n    RETURN @TotalHours\nEND;