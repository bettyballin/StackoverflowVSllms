-- Step 1: Create an auditing table\nCREATE TABLE ConnectionAudit (\n    SessionID INT PRIMARY KEY,\n    LoginName NVARCHAR(128),\n    LoginTime DATETIME DEFAULT GETDATE()\n);\n\n-- Step 2: Create a Logon Trigger to record connections\nCREATE TRIGGER LimitConnectionsPerUser \nON ALL SERVER \nFOR LOGON \nAS\nBEGIN\n    DECLARE @Session INT, @Login NVARCHAR(128), @ConnectionCount INT;\n    SELECT @Session = @@SPID, @Login = ORIGINAL_LOGIN();\n    \n    -- Start a transaction to ensure atomicity\n    BEGIN TRANSACTION;\n    \n    INSERT INTO ConnectionAudit (SessionID, LoginName)\n    VALUES (@Session, @Login);\n\n    SELECT @ConnectionCount = COUNT(*)\n    FROM ConnectionAudit\n    WHERE LoginName = @Login;\n\n    -- If the login count exceeds a threshold, rollback and disconnect\n    IF @ConnectionCount > 2\n    BEGIN\n        ROLLBACK TRANSACTION;\n        ROLLBACK WORK;  -- Disconnect the user if more than 2 connections are detected\n        RAISERROR ('Too many connections. Maximum limit is 2.', 16, 1);\n    END\n    ELSE \n    BEGIN\n        COMMIT TRANSACTION;\n    END\nEND\nGO