-- Create tables for Surrogate Key scenario\nCREATE TABLE Plant (\n    ID INT IDENTITY(1,1) PRIMARY KEY,\n    Name NVARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Engineer (\n    ID INT IDENTITY(1,1) PRIMARY KEY,\n    Name NVARCHAR(255) NOT NULL\n);\n\nCREATE TABLE PartSurrogate (\n    ID INT IDENTITY(1,1) PRIMARY KEY,\n    PartNumber NVARCHAR(50) UNIQUE NOT NULL,\n    PlantID INT,\n    EngineerID INT,\n    FOREIGN KEY (PlantID) REFERENCES Plant(ID),\n    FOREIGN KEY (EngineerID) REFERENCES Engineer(ID)\n);\n\n-- Create tables for Natural Key scenario\nCREATE TABLE PartNatural (\n    PartNumber NVARCHAR(50) PRIMARY KEY,\n    PlantName NVARCHAR(255) NOT NULL, -- Assuming natural key on both part number and plant name for demonstration\n    EngineerName NVARCHAR(255) NOT NULL, -- Same here, assuming engineer name is part of the composite PK\n    FOREIGN KEY (PlantName) REFERENCES Plant(Name),\n    FOREIGN KEY (EngineerName) REFERENCES Engineer(Name)\n);\n\n-- Insert test data into tables\n\nINSERT INTO Plant (Name)\nVALUES ('Plant1'), ('Plant2');\n\nINSERT INTO Engineer (Name)\nVALUES ('Engineer1'), ('Engineer2');\n\nINSERT INTO PartSurrogate (PartNumber, PlantID, EngineerID)\nVALUES \n('P001', 1, 1),\n('P002', 2, 2);\n\nINSERT INTO PartNatural (PartNumber, PlantName, EngineerName)\nVALUES \n('P001', 'Plant1', 'Engineer1'),\n('P002', 'Plant2', 'Engineer2');\n\n-- Test Queries\nSET STATISTICS TIME ON; -- SQL Server specific to show execution times\n\n-- Surrogate Key Query\nSELECT * FROM PartSurrogate ps\nJOIN Plant p ON ps.PlantID = p.ID\nJOIN Engineer e ON ps.EngineerID = e.ID;\n\n-- Natural Key Query\nSELECT * FROM PartNatural pn\nJOIN Plant p ON pn.PlantName = p.Name\nJOIN Engineer e ON pn.EngineerName = e.Name;\n\nSET STATISTICS TIME OFF;