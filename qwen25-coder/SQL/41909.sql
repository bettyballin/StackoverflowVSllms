ALTER PROCEDURE [WTFAULT].[usp_WTFault_GetPartFaultStatus]\n(\n    @linxPartId int = -1,\n    @faultStatus varchar(10) output\n)\nAS\nBEGIN\n\n    DECLARE @NbFaultsInParts int,\n            @NbPartsReturned int\n\n    SET @NbPartsReturned = (SELECT COUNT(*) \n                             FROM WTFAULT.PART, WTFAULT.FAULT \n                             WHERE WTFAULT.PART.FAULT_COID = WTFAULT.FAULT.COID \n                                AND WTFAULT.PART.LINX_PARTID = @linxPartId AND WTFAULT.FAULT.MATURITY = 'ALLOCATED')\n\n    IF @NbPartsReturned > 0 BEGIN\n        SET @faultStatus = 'ALLOCATED'\n    END\n    ELSE BEGIN\n        SET @NbPartsReturned = (SELECT COUNT(*) \n                                 FROM WTFAULT.PART, WTFAULT.FAULT \n                                 WHERE WTFAULT.PART.FAULT_COID = WTFAULT.FAULT.COID \n                                    AND WTFAULT.PART.LINX_PARTID = @linxPartId AND WTFAULT.FAULT.MATURITY = 'DRAFT')\n\n        IF @NbPartsReturned > 0 BEGIN\n            SET @faultStatus = 'DRAFT'\n        END\n        ELSE BEGIN\n            SET @NbPartsReturned = (SELECT COUNT(*) \n                                     FROM WTFAULT.PART, WTFAULT.FAULT \n                                     WHERE WTFAULT.PART.FAULT_COID = WTFAULT.FAULT.COID \n                                        AND WTFAULT.PART.LINX_PARTID = @linxPartId AND WTFAULT.FAULT.MATURITY = 'CLOSED')\n            IF @NbPartsReturned > 0 BEGIN\n                SET @faultStatus = 'CLOSED'\n            END\n            ELSE BEGIN\n                SET @faultStatus = ''\n            END\n        END\n    END\nEND\nGO