CREATE OR REPLACE PROCEDURE CHECK_UNUSED_COLUMNS(\n    IN TABLE_LIST VARCHAR(1000) -- Comma-separated list of table names\n)\nDYNAMIC RESULT SETS 1\nLANGUAGE SQL\nBEGIN\n    DECLARE done INT DEFAULT FALSE;\n    DECLARE STMT VARCHAR(500);\n    DECLARE CURSOR cur_tables FOR \n        SELECT TABLE_NAME, COLUMN_NAME, TYPE_NAME, LENGTH\n        FROM QSYS2.SYSCOLUMNS\n        WHERE TABLE_SCHEMA = 'YOUR_SCHEMA'\n          AND TABLE_NAME IN (SELECT DISTINCT TRIM(SUBSTR(SUBSTR(TABLE_LIST, 1 + LOCATE(',', TABLE_LIST||','), POS - 1)), ',') \n                             FROM ( SELECT TABLE_LIST, POS, SUBSTR(TABLE_LIST, POS) AS CURTABLE\n                                    FROM TABLE( VALUES (TABLE_LIST, 1))\n                                  UNION ALL\n                                  SELECT TABLE_LIST, POS+LOCATE(',', TABLE_LIST||',', POS),\n                                         SUBSTR(TABLE_LIST, LOCATE(',', TABLE_LIST||',', POS)+1)\n                                  FROM TABLE(cur_tables)\n                                  WHERE LOCATE(',', TABLE_LIST||',', POS) > 0))\n        WITH UR;\n    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;\n\n    CREATE GLOBAL TEMPORARY TABLE SESSION.TEMP_UNUSED_COLUMNS (\n        TABLE_NAME VARCHAR(128),\n        COLUMN_NAME VARCHAR(128)\n    ) WITH REPLACE ON COMMIT PRESERVE ROWS;\n\n    OPEN cur_tables;\n    read_loop: LOOP\n        FETCH cur_tables INTO TBL, COL, TYPE, LEN;\n        IF done THEN LEAVE read_loop; END IF;\n        \n        -- Building the SQL statement dynamically\n        IF TYPE = 'CHAR' OR TYPE = 'VARCHAR' THEN\n            SET STMT = 'INSERT INTO SESSION.TEMP_UNUSED_COLUMNS '\n                     || 'SELECT DISTINCT '''||TBL||''', '''||COL||''' FROM ( '\n                     || 'SELECT * FROM YOUR_SCHEMA.'||QUOTE_IDENTIFIER(TBL)||' WHERE TRIM('||QUOTE_IDENTIFIER(COL)||') != '''') GROUP BY 1,2 HAVING COUNT(*) = 0)';\n        ELSE\n            SET STMT = 'INSERT INTO SESSION.TEMP_UNUSED_COLUMNS '\n                     || 'SELECT DISTINCT '''||TBL||''', '''||COL||''' FROM ( '\n                     || 'SELECT * FROM YOUR_SCHEMA.'||QUOTE_IDENTIFIER(TBL)||' WHERE '||\n                           CASE WHEN TYPE IN ('SMALLINT','INTEGER') THEN 'CAST('||QUOTE_IDENTIFIER(COL)||' AS INTEGER)' ELSE QUOTE_IDENTIFIER(COL) END\n                          || ' != 0 ) GROUP BY 1,2 HAVING COUNT(*) = 0)';\n        END IF;\n\n        -- Execute the statement\n        EXEC SQL PREPARE stmt_stmt FROM :STMT;\n        EXEC SQL EXECUTE stmt_stmt;\n    END LOOP;\n    \n    CLOSE cur_tables;\n\n    -- Output result\n    OPEN C1 FOR SELECT * FROM SESSION.TEMP_UNUSED_COLUMNS;\n\nEND;