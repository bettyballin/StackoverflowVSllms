DECLARE @StartDate DATETIME\nDECLARE @EndDate   DATETIME\n\nSET @StartDate = '2009-04-16 19:00:00' -- start hour\nSET @EndDate   = DATEADD(HOUR, 1, @StartDate) -- end hour\n\n-- Generate minutes in the target hour\nSELECT TOP (DATEDIFF(MINUTE, @StartDate, @EndDate))\n    DATEADD(MINUTE, Number, @StartDate) AS MinuteStart,\n    DATEADD(SECOND, -1, DATEADD(MINUTE, Number + 1, @StartDate)) AS MinuteEnd\nINTO #MinutesInHour\nFROM Numbers n0,\n     Numbers n1\n\n-- Calculate concurrent calls per system for each minute\nSELECT \n    m.MinuteStart,\n    r.system,\n    COUNT(*) AS ConcurrentCalls\nINTO #ConcurrentCallsPerMinute\nFROM \n    #MinutesInHour m\nLEFT JOIN \n    Records r ON m.MinuteStart <= DATEADD(SECOND, r.dur, DATEADD(MINUTE, CAST(r.time AS INT) % 100, DATEADD(HOUR, FLOOR(CAST(r.time AS INT) / 100), r.seconds * 1)))\n               AND m.MinuteEnd >= DATEADD(MINUTE, CAST(r.time AS INT) % 100, DATEADD(HOUR, FLOOR(CAST(r.time AS INT) / 100), r.seconds * 1))\nGROUP BY \n    m.MinuteStart,\n    r.system\n\n-- Calculate average concurrent calls per hour per system\nSELECT \n    r.system,\n    AVG(c.ConcurrentCalls) AS AverageConcurrentCalls\nFROM(\n    SELECT DISTINCT system FROM Records\n)r\nLEFT JOIN \n    #ConcurrentCallsPerMinute c ON r.system = c.system\nGROUP BY \n    r.system\n\nDROP TABLE #MinutesInHour\nDROP TABLE #ConcurrentCallsPerMinute