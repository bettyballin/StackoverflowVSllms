CREATE TRIGGER [dbo].[BeforeUpdateUser]\n   ON  [dbo].[Users]\n   INSTEAD OF UPDATE\nAS \nBEGIN\n    -- SET NOCOUNT added to prevent extra result sets from interfering with SELECT statements.\n    SET NOCOUNT ON;\n\n    DECLARE @Email nvarchar(MAX)\n    DECLARE @UserName nvarchar(MAX)\n    DECLARE @UserId int\n    DECLARE @DoUpdate bit\n\n    -- Assuming single row update for simplicity. If multiple rows can be updated, you should use a cursor or table variable.\n    SELECT TOP 1 @Email = Email, @UserName = UserName FROM INSERTED\n\n    -- Check if new email exists in the Users table other than the current row being updated\n    SELECT @UserId = UserId \n    FROM Users WHERE Email = @Email AND UserId <> (SELECT TOP 1 UserId FROM DELETED)\n\n    IF (@UserId IS NOT NULL)\n        BEGIN\n            SET @DoUpdate = 0\n        END\n    ELSE\n        BEGIN\n            -- Check if new username exists in the Users table other than the current row being updated\n            SELECT @UserId = UserId \n            FROM Users WHERE UserName = @UserName AND UserId <> (SELECT TOP 1 UserId FROM DELETED)\n\n            IF (@UserId IS NOT NULL)\n                BEGIN\n                    SET @DoUpdate = 0\n                END\n            ELSE\n                BEGIN\n                    SET @DoUpdate = 1\n                END\n        END\n\n    IF (@DoUpdate = 1)\n        BEGIN\n            UPDATE Users \n            SET Email = INSERTED.Email,\n                UserName = INSERTED.UserName,\n                FirstName = INSERTED.FirstName, \n                LastName = INSERTED.LastName,\n                Password = INSERTED.Password,\n                LanguageId = INSERTED.LanguageId,\n                Data = INSERTED.Data, \n                IsDeleted = INSERTED.IsDeleted\n            FROM Users U\n            INNER JOIN INSERTED I ON U.UserId = I.UserId\n        END\n    ELSE\n        BEGIN\n            DECLARE @ErrorMessage nvarchar(MAX)\n            SET @ErrorMessage = 'The username and email address of a user must be unique!'\n            RAISERROR (@ErrorMessage, 16, 1)\n        END \nEND