-- Using dynamic management views to get detailed information post-execution\nINSERT INTO #QueryPerf (Stored_Proc, CPU_Time, Read_IOPs, Write_IOPs, Duration)\nEXEC sp_executesql N'\nSET STATISTICS TIME ON;\nSET NOCOUNT ON;\nDBCC FREEPROCCACHE WITH NO_INFOMSGS;\nGO\nDECLARE @start DATETIME = GETDATE();\nEXEC test_1a;\nSELECT DATEDIFF(MILLISECOND, @start, GETDATE()) AS Duration,\n       (SELECT SUM(total_worker_time) FROM sys.dm_exec_query_stats WHERE sql_handle = (SELECT sql_handle FROM sys.dm_exec_requests WHERE session_id = @@SPID)) / 1000.0 AS CPU_Time\n       , last_physical_reads as Read_IOPs\n       , last_logical_writes as Write_IOPs\nFROM sys.dm_exec_requests \nWHERE session_id = @@SPID;\nGO\n\nDBCC FREEPROCCACHE WITH NO_INFOMSGS;\nGO\nDECLARE @start DATETIME = GETDATE();\nEXEC test_1b;\nSELECT DATEDIFF(MILLISECOND, @start, GETDATE()) AS Duration,\n       (SELECT SUM(total_worker_time) FROM sys.dm_exec_query_stats WHERE sql_handle = (SELECT sql_handle FROM sys.dm_exec_requests WHERE session_id = @@SPID)) / 1000.0 AS CPU_Time\n       , last_physical_reads as Read_IOPs\n       , last_logical_writes as Write_IOPs\nFROM sys.dm_exec_requests \nWHERE session_id = @@SPID;\nGO';