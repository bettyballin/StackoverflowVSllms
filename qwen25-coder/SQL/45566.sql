-- Step 1: Create a temporary table to store the mapping between TableA.ID and TableB.Identity\nCREATE TABLE #IDMapping (\n    OldID INT,\n    NewID INT\n);\n\n-- Step 2: Insert data into TableB from TableA, concatenating column values for ColumnX\nINSERT INTO TableB (ColumnX)\nOUTPUT INSERTED.IDENTITY, SCOPE_IDENTITY() INTO #IDMapping (OldID, NewID) -- Store the mapping in the temporary table\nSELECT \n    CONCAT(ColumnA, ', ', ColumnB, ', ', ColumnC) AS ConcatenatedValues\nFROM \n    TableA;\n\n-- Step 3: Update TableC with the new ID mappings\nUPDATE TableC\nSET TableC.NewID = #IDMapping.NewID -- New ID from TableB\nFROM \n    TableC\nJOIN \n    #IDMapping ON TableC.OldID = #IDMapping.OldID; -- Join on the old IDs\n\n-- Step 4: Drop the temporary table if it's no longer needed\nDROP TABLE #IDMapping;