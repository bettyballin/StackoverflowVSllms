-- Join activities table against other potential tables\nSELECT \n    a.page_id,\n    a.reference_id,\n    a.reference_table,\n    a.created_at,\n    a.updated_at,\n    CASE \n        WHEN a.reference_table = 'comments' THEN c.comment_text\n        WHEN a.reference_table = 'pages' THEN p.page_title\n        WHEN a.reference_table = 'subscriptions' THEN s.subscription_status\n        ELSE NULL\n    END AS detail,\n    CASE \n        WHEN a.reference_table = 'comments' THEN cm.username\n        WHEN a.reference_table = 'pages' THEN pm.author_username\n        WHEN a.reference_table = 'subscriptions' THEN sm.subscriber_username\n        ELSE NULL\n    END AS user_detail\nFROM \n    activities a\nLEFT JOIN \n    comments c ON a.reference_id = c.id AND a.reference_table = 'comments'\nLEFT JOIN \n    pages p ON a.reference_id = p.id AND a.reference_table = 'pages'\nLEFT JOIN \n    subscriptions s ON a.reference_id = s.id AND a.reference_table = 'subscriptions'\n-- Join to get usernames for each activity type\nLEFT JOIN \n    users cm ON c.author_id = cm.id\nLEFT JOIN \n    users pm ON p.author_id = pm.id\nLEFT JOIN \n    users sm ON s.subscriber_id = sm.id\nWHERE \n    a.user_id = :user_id -- Assuming you filter by user ID for specific user's activities\nORDER BY \n    a.created_at DESC\nLIMIT 10; -- Limit to recent activities, adjust as necessary