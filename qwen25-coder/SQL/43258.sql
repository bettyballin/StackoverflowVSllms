WITH foo AS (\n    -- Anchor member: select starting edges\n    SELECT \n        parent_id, \n        child_id,\n        CAST(child_id AS VARCHAR(MAX)) AS path  -- Start the path with the initial child_id\n    FROM #bar \n    WHERE parent_id IN (1,3)\n    \n    UNION ALL\n    \n    -- Recursive member: continue traversal, avoiding cycles\n    SELECT \n        b.parent_id, \n        b.child_id,\n        f.path + ',' + CAST(b.child_id AS VARCHAR(MAX)) AS path  -- Append current child_id to the path\n    FROM #bar b\n    INNER JOIN foo f ON b.parent_id = f.child_id\n    WHERE CHARINDEX(',' + CAST(b.child_id AS VARCHAR) + ',', f.path) = 0  -- Ensure not already visited\n)\nSELECT DISTINCT parent_id, child_id \nFROM foo;