DELIMITER //\nCREATE FUNCTION levenshtein( s1 VARCHAR(255), s2 VARCHAR(255) )\nRETURNS INT\nDETERMINISTIC\nBEGIN\n    DECLARE s1_len, s2_len, i, j, c, c_temp, cost CHAR(255);\n    DECLARE cv0, cv1 VARBINARY(256);\n\n    SET s1_len = CHAR_LENGTH(s1), s2_len = CHAR_LENGTH(s2), cv1 = 0x00,\n        cv0 = UNHEX(REPEAT('00',s2_len + 1));\n    \n    SET c = 0;\n    WHILE (c <= s2_len) DO\n        SET cv1 = CONCAT(cv1, CHAR(CONV(c, 10, 16))),\n            c = c + 1;\n    END WHILE;\n\n    SET i = 0;\n    WHILE (i < s1_len) DO\n        SET c = ASCII(SUBSTRING(s1, i+1, 1)),\n            cv0 = CONCAT(cv0, CHAR(0)), c_temp = CHAR(CONV(i, 10, 16));\n        \n        SET j = 0;\n        WHILE (j < s2_len) DO\n            SET c_cost = IF((c = ASCII(SUBSTRING(s2, j+1, 1))), 0, 1);\n    \n            SET cost = LEAST(CONV(mid(cv1, j+2, 1), 16, 10)+1,\n                              CONV(MID(cv0, (j + 2)-1 , 1), 16, 10) + 1, \n                              CONV(mid(cv0, (j+2), 1), 16, 10) + c_cost),\n                c_temp = CONCAT(c_temp, CHAR(cost)), j = j + 1;\n        END WHILE;\n\n        SET cv1 = cv0, cv0 = c_temp, i = i + 1;\n    END WHILE;\n    \n    RETURN CONV(mid(cv0, s2_len+1, 1), 16, 10);\nEND//\nDELIMITER ;