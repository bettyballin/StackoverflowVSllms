-- Helper function to extract words from text\nDELIMITER //\n\nCREATE FUNCTION SPLIT_STR(\n  x VARCHAR(255),\n  delim VARCHAR(12),\n  pos INT\n)\nRETURNS VARCHAR(255)\nRETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(x, delim, pos),\n       LENGTH(SUBSTRING_INDEX(x, delim, pos -1)) + 1),\n       delim, '');\n//\n\nDELIMITER ;\n\n-- Create a temporary table to hold words and counts\nCREATE TEMPORARY TABLE IF NOT EXISTS word_counts (\n    word VARCHAR(200) PRIMARY KEY,\n    count INT DEFAULT 0\n);\n\n-- Insert all words from 'text' in your table into the temporary table\nSET @row_number = 0;\nINSERT INTO word_counts (word, count)\nSELECT \n    SPLIT_STR(text, ' ', (@row_number:=@row_number + 1)) as `word`,\n    1 as `count`\nFROM (\n    SELECT \n        text,\n        LENGTH(text) - LENGTH(REPLACE(text, ' ', '')) AS num_words\n    FROM \n        your_table_name\n) as rows,\n(SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 -- Increase this line to cover max words per row\nUNION ALL SELECT 4 UNION ALL SELECT 5) as nums\nWHERE nums <= rows.num_words AND SPLIT_STR(text, ' ', nums) != ''\nGROUP BY SPLIT_STR(text, ' ', nums);\n\n-- Update counts for each word\nUPDATE word_counts wc1, (\n    SELECT \n        `word`, SUM(`count`) AS `total_count`\n    FROM \n        word_counts\n    GROUP BY `word`\n) AS wc2\nSET wc1.count = wc2.total_count;\n\n-- Filter out words that you find non-interesting like 'I', 'will', 'have'\nDELETE FROM word_counts WHERE `word` IN ('I', 'will', 'have');\n\n-- Generate ordered list of common substrings\nSELECT * FROM word_counts ORDER BY count DESC;