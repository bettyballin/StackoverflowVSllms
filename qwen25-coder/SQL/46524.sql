CREATE FUNCTION dbo.fn_BinaryStringToHex (@binaryString VARCHAR(MAX))\nRETURNS VARCHAR(MAX)\nAS\nBEGIN\n    DECLARE @hexString VARCHAR(MAX) = ''\n    DECLARE @len INT = LEN(@binaryString)\n    DECLARE @index INT = 1\n\n    WHILE @index <= @len - 3 -- Process in chunks of 4\n    BEGIN\n        DECLARE @chunk CHAR(4)\n        SET @chunk = SUBSTRING(@binaryString, @index, 4)\n\n        -- Convert binary chunk to integer first, then to hex\n        DECLARE @intVal INT\n        SET @intVal = CAST(SUBSTRING(@chunk, 1, 1) AS INT)*8 +\n                       CAST(SUBSTRING(@chunk, 2, 1) AS INT)*4 +\n                       CAST(SUBSTRING(@chunk, 3, 1) AS INT)*2 +\n                       CAST(SUBSTRING(@chunk, 4, 1) AS INT)*1\n\n        DECLARE @hexChar CHAR(1)\n        SET @hexChar = CASE\n            WHEN @intVal < 10 THEN CHAR(@intVal + ASCII('0'))\n            ELSE CHAR(@intVal - 10 + ASCII('A'))\n        END\n\n        SET @hexString = @hexString + @hexChar\n        SET @index = @index + 4\n    END\n\n    RETURN @hexString\nEND\nGO\n\n-- Usage example:\nDECLARE @binaryInput VARCHAR(MAX) = '0000100101000101011101011110'\nSELECT dbo.fn_BinaryStringToHex(@binaryInput) AS HexOutput