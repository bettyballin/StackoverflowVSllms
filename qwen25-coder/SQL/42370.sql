CREATE FUNCTION dbo.GetJobScheduleDescription(\n    @freq_type INT,\n    @freq_interval INT,\n    @freq_relative_interval INT,\n    @freq_subday_type INT,\n    @freq_subday_interval INT,\n    @active_start_time INT,\n    @active_end_time INT\n)\nRETURNS NVARCHAR(MAX)\nAS\nBEGIN\n    DECLARE @schedule_description NVARCHAR(MAX) = N'';\n    DECLARE @idle_cpu_percent INT;\n    DECLARE @idle_cpu_duration INT;\n\n    -- Handle frequency type 0x40 (AutoStart)\n    IF (@freq_type = 0x40)\n    BEGIN\n        SET @schedule_description = FORMATMESSAGE(14579);\n        RETURN @schedule_description;\n    END\n\n    -- Handle frequency type 0x80 (OnIdle)\n    IF (@freq_type = 0x80)\n    BEGIN\n        EXECUTE master.dbo.xp_instance_regread \n            N'HKEY_LOCAL_MACHINE', \n            N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', \n            N'IdleCPUPercent', \n            @idle_cpu_percent OUTPUT, \n            N'no_output';\n\n        EXECUTE master.dbo.xp_instance_regread \n            N'HKEY_LOCAL_MACHINE', \n            N'SOFTWARE\Microsoft\MSSQLServer\SQLServerAgent', \n            N'IdleCPUDuration', \n            @idle_cpu_duration OUTPUT, \n            N'no_output';\n\n        SET @schedule_description = FORMATMESSAGE(14578, ISNULL(@idle_cpu_percent, 10), ISNULL(@idle_cpu_duration, 600));\n        RETURN @schedule_description;\n    END\n\n    -- Handle other frequency types\n    SET @schedule_description = \n        CASE WHEN @freq_type = 0x1 THEN N'Once'\n             WHEN @freq_type = 0x4 THEN N'Daily'\n             WHEN @freq_type = 0x8 THEN N'Weekly'\n             WHEN @freq_type = 0x10 THEN N'Monthly (specific day)'\n             WHEN @freq_type = 0x20 THEN N'Monthly (relative to specific day)'\n        END + ' at ';\n\n    SET @schedule_description = @schedule_description +\n        CASE @freq_subday_type\n            WHEN 0x1 THEN N'at ' + \n                RIGHT('0' + CONVERT(NVARCHAR, (@active_start_time / 10000)), 2) + ':' + \n                RIGHT('00' + CONVERT(NVARCHAR, (@active_start_time % 10000) / 100), 2)\n            WHEN 0x2 THEN N'every ' + CONVERT(NVARCHAR, @freq_subday_interval) + N' second(s)'\n            WHEN 0x4 THEN N'every ' + CONVERT(NVARCHAR, @freq_subday_interval) + N' minute(s)'\n            WHEN 0x8 THEN N'every ' + CONVERT(NVARCHAR, @freq_subday_interval) + N' hour(s)'\n        END;\n\n    -- Additional logic for different frequency types\n    IF (@freq_type = 0x20) -- Monthly (relative to specific day)\n    BEGIN\n        SET @schedule_description = @schedule_description +\n            CASE @freq_relative_interval\n                WHEN 1 THEN N', on the first'\n                WHEN 2 THEN N', on the second'\n                WHEN 4 THEN N', on the third'\n                WHEN 8 THEN N', on the fourth'\n                WHEN 16 THEN N', on the last'\n            END + ' ' +\n            CASE @freq_interval\n                WHEN 1 THEN N'Sunday'\n                WHEN 2 THEN N'Monday'\n                WHEN 3 THEN N'Tuesday'\n                WHEN 4 THEN N'Wednesday'\n                WHEN 5 THEN N'Thursday'\n                WHEN 6 THEN N'Friday'\n                WHEN 7 THEN N'Saturday'\n                ELSE DATENAME(DW, DATEADD(DD, @freq_interval - 1, '1900-01-01'))\n            END;\n    END\n\n    RETURN @schedule_description;\nEND