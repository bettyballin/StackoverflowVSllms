DECLARE @numDays INT = 10;\nDECLARE @StartTime DATETIME = DATEADD(dd, DATEDIFF(dd, 0, GETDATE() - @numDays), 0);\nDECLARE @EndTime DATETIME = GETDATE();\n\nWITH DateHours AS (\n    SELECT @StartTime AS [Hour]\n    UNION ALL\n    SELECT DATEADD(hour, 1, [Hour])\n    FROM DateHours\n    WHERE [Hour] < DATEADD(hour, DATEDIFF(hour, @StartTime, @EndTime), @StartTime)\n),\nPaymentCounts AS (\n    SELECT \n        DATEADD(hour, DATEDIFF(hour, 0, [CreateDate]), 0) AS [hour], \n        COUNT(*) AS [Count]\n    FROM [dbo].[PaymentLog]\n    WHERE CreateDate >= @StartTime AND CreateDate < @EndTime\n    GROUP BY DATEADD(hour, DATEDIFF(hour, 0, [CreateDate]), 0)\n)\nSELECT \n    DATEPART(hour, dh.[Hour]) AS [Hour], \n    AVG(ISNULL(pc.[Count], 0)) AS [Average]\nFROM DateHours dh\nLEFT JOIN PaymentCounts pc ON dh.[hour] = pc.[hour]\nGROUP BY DATEPART(hour, dh.[Hour])\nOPTION (MAXRECURSION 32767); -- Adjust recursion limit if needed for more days