CREATE PROCEDURE ApplyPayment\n    @CustomerId VARCHAR(8),\n    @PaymentAmount DECIMAL(9, 2)\nAS\nBEGIN\n    DECLARE @RemainingPayment DECIMAL(9, 2)\n    SET @RemainingPayment = @PaymentAmount\n\n    WHILE (@RemainingPayment > 0)\n    BEGIN\n        -- Select the oldest invoice with a balance greater than 0 for the given customer\n        UPDATE TOP (1) openitems\n        SET balance = CASE \n                        WHEN balance <= @RemainingPayment THEN 0.00\n                        ELSE balance - @RemainingPayment\n                      END,\n            amount = CASE \n                     WHEN balance <= @RemainingPayment THEN 0.00\n                     ELSE amount - @RemainingPayment\n                   END,\n            daysOpen = daysOpen, -- No change needed in daysOpen\n            type = type,         -- No change needed in type\n            [date] = [date]      -- No change needed in date\n        OUTPUT INSERTED.id, INSERTED.balance\n        INTO #UpdatedInvoices (InvoiceId, NewBalance)\n        WHERE customerid = @CustomerId AND balance > 0\n        ORDER BY daysOpen\n\n        IF @@ROWCOUNT = 0\n            BREAK -- Exit loop if no more invoices are available to apply payment\n\n        -- Calculate the remaining payment amount after applying it to the invoice\n        SET @RemainingPayment = @RemainingPayment - (SELECT NewBalance FROM #UpdatedInvoices WHERE InvoiceId =SCOPE_IDENTITY())\n\n        -- Clear temporary table for next iteration\n        DELETE FROM #UpdatedInvoices\n    END\nEND\nGO\n\n/* Example execution */\nCREATE TABLE #UpdatedInvoices (\n    InvoiceId VARCHAR(8),\n    NewBalance DECIMAL(9, 2)\n)\n\nEXEC ApplyPayment 'A12399', 550.00\n\nSELECT * FROM openitems WHERE id = 'A12399'\nDROP TABLE #UpdatedInvoices