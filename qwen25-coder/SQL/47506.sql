CREATE OR REPLACE PACKAGE edi.x12 AS\n  FUNCTION extract_field(p_edi_clob IN CLOB, p_segment_id IN VARCHAR2, p_position IN NUMBER) RETURN VARCHAR2;\nEND x12;\n/\n\nCREATE OR REPLACE PACKAGE BODY edi.x12 AS\n  FUNCTION extract_field(p_edi_clob IN CLOB, p_segment_id IN VARCHAR2, p_position IN NUMBER) RETURN VARCHAR2 IS\n    l_start_segment NUMBER;\n    l_end_segment   NUMBER;\n    l_raw_data      VARCHAR2(32767);\n    l_delimiter     CHAR(1);\n    l_field         VARCHAR2(4000);\n  BEGIN\n    -- Find the segment\n    l_start_segment := DBMS_LOB.INSTR(p_edi_clob, p_segment_id || '*');\n    \n    IF l_start_segment = 0 THEN\n      RETURN NULL;\n    END IF;\n\n    -- Determine where the segment ends based on an indicator for the next line.\n    l_end_segment := DBMS_LOB.INSTR(p_edi_clob, CHR(13) || CHR(10), l_start_segment);\n    \n    IF l_end_segment = 0 THEN\n      RAISE_APPLICATION_ERROR(-20001, 'Segment end not found');\n    END IF;\n\n    -- Extract the segment data into a VARCHAR2 variable.\n    DBMS_LOB.READ(p_edi_clob, l_end_segment - l_start_segment, l_start_segment, l_raw_data);\n    \n    l_delimiter := SUBSTR(l_raw_data, 4, 1); -- Assuming the delimiter is at position 3 + 1\n        \n    l_field := REGEXP_SUBSTR(l_raw_data, '(.*?)' || l_delimiter, 1, p_position);\n\n    RETURN l_field;\n  END extract_field;  \nEND x12;\n/