-- Basic SELECT statement\nSELECT column1, column2 FROM table_name;\n\n-- Select all columns from a table\nSELECT * FROM table_name;\n\n-- WHERE clause for filtering rows\nSELECT * FROM table_name WHERE condition;\n\n-- Using AND/OR for multiple conditions\nSELECT * FROM table_name WHERE condition1 AND condition2;\nSELECT * FROM table_name WHERE condition1 OR condition2;\n\n-- ORDER BY for sorting results\nSELECT * FROM table_name ORDER BY column_name ASC; -- ascending order\nSELECT * FROM table_name ORDER BY column_name DESC; -- descending order\n\n-- DISTINCT to remove duplicate rows\nSELECT DISTINCT column_name FROM table_name;\n\n-- LIMIT to restrict the number of records\nSELECT * FROM table_name LIMIT number;\n\n-- COUNT, AVG, SUM, MIN, MAX functions\nSELECT COUNT(*) FROM table_name;\nSELECT AVG(column_name) FROM table_name;\nSELECT SUM(column_name) FROM table_name;\nSELECT MIN(column_name) FROM table_name;\nSELECT MAX(column_name) FROM table_name;\n\n-- GROUP BY to group rows having same values in specified columns into aggregated data\nSELECT column_name, COUNT(*)\nFROM table_name\nGROUP BY column_name;\n\n-- HAVING clause for specifying conditions on aggregated results\nSELECT column_name, COUNT(*)\nFROM table_name\nGROUP BY column_name\nHAVING COUNT(column_name) > 1; // example condition\n\n-- INNER JOIN for returning rows that have matching values in both tables\nSELECT t1.column_name, t2.column_name \nFROM table1 AS t1 \nINNER JOIN table2 AS t2 \nON t1.common_column = t2.common_column;\n\n-- LEFT JOIN for returning all left table records and the matched records from right table\nSELECT t1.column_name, t2.column_name \nFROM table1 AS t1 \nLEFT JOIN table2 AS t2 \nON t1.common_column = t2.common_column;\n\n-- RIGHT JOIN for returning all right table records and the matched records from left table\nSELECT t1.column_name, t2.column_name \nFROM table1 AS t1 \nRIGHT JOIN table2 AS t2 \nON t1.common_column = t2.common_column;\n\n-- FULL OUTER JOIN for combining the results of LEFT and RIGHT JOINs\nSELECT t1.column_name, t2.column_name \nFROM table1 AS t1 \nFULL OUTER JOIN table2 AS t2 \nON t1.common_column = t2.common_column;\n\n-- UNION to combine rows from two SELECT statements (must have same number of columns)\nSELECT column_name FROM table1\nUNION\nSELECT column_name FROM table2;\n\n-- SUBQUERY for nested queries\nSELECT column_name FROM table_name WHERE column_name > (SELECT AVG(column_name) FROM table_name);