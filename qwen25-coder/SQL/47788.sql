-- Basic tables\n\nCREATE TABLE Users (\n    UserID INT PRIMARY KEY,\n    -- other user details\n);\n\nCREATE TABLE Seats (\n    SeatID INT PRIMARY KEY,\n    CompanyID INT,  -- Assuming there is a table for companies\n    -- other seat details\n);\n\nCREATE TABLE Products (\n    ProductID INT PRIMARY KEY,\n    -- other product details\n);\n\nCREATE TABLE Modules (\n    ModuleID INT PRIMARY KEY,\n    ProductID INT,\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),\n    -- other module details\n);\n\nCREATE TABLE Lessons (\n    LessonID INT PRIMARY KEY,\n    ModuleID INT,\n    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID),\n    -- other lesson details\n);\n\n-- Join tables to handle many-to-many relationships\n\nCREATE TABLE User_Seats (\n    UserID INT,\n    SeatID INT,\n    PRIMARY KEY (UserID, SeatID),\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (SeatID) REFERENCES Seats(SeatID)\n);\n\nCREATE TABLE Seat_Products (\n    SeatID INT,\n    ProductID INT,\n    PRIMARY KEY (SeatID, ProductID),\n    FOREIGN KEY (SeatID) REFERENCES Seats(SeatID),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n\nCREATE TABLE Product_Modules (\n    ModuleID INT,\n    ProductID INT,\n    PRIMARY KEY (ModuleID, ProductID),\n    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n\nCREATE TABLE Module_Lessons (\n    LessonID INT,\n    ModuleID INT,\n    PRIMARY KEY (LessonID, ModuleID),\n    FOREIGN KEY (LessonID) REFERENCES Lessons(LessonID),\n    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)\n);\n\n-- Tracking user lesson status\n\nCREATE TABLE User_Lessons (\n    UserID INT,\n    LessonID INT,\n    Score DECIMAL(5,2),  -- Assuming score is between 0 and 100\n    PRIMARY KEY (UserID, LessonID),\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (LessonID) REFERENCES Lessons(LessonID)\n);\n\n-- Tracking certifications\n\nCREATE TABLE User_Product_Certifications (\n    UserID INT,\n    ProductID INT,\n    CertificationDate DATETIME,\n    PRIMARY KEY (UserID, ProductID),  -- Ensures one certification per product per user\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n\n-- Tracking module completion\n\nCREATE TABLE User_Module_Completions (\n    UserID INT,\n    ModuleID INT,\n    CompletionDate DATETIME,\n    PRIMARY KEY (UserID, ModuleID),  -- Ensures one record per module per user\n    FOREIGN KEY (UserID) REFERENCES Users(UserID),\n    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)\n);