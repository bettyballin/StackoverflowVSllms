DECLARE @SchemaName NVARCHAR(128) = 'dbo'; -- Change this if your schema is different\nDECLARE @TableName NVARCHAR(128) = 'YourTableName'; -- Change this to your table name\nDECLARE @SQL NVARCHAR(MAX) = N'';\n\n-- Generate the insert statement dynamically\nSELECT \n    @SQL += CASE \n                WHEN t.name IN ('char', 'nchar', 'varchar', 'nvarchar') THEN \n                    N''','' + REPLICATE(N''a'', MAX_LENGTH/2)''\n                 WHEN t.name IN ('text', 'ntext') THEN \n                    N''','' + REPLICATE(N''a'', 50)''\n                 WHEN t.name IN ('date', 'datetime', 'datetime2', 'smalldatetime', 'time') THEN \n                    N''','' + CONVERT(varchar, DATEADD(dd, RAND(CHECKSUM(NEWID()))*365*10, GETDATE()), 120)''\n                 WHEN t.name IN ('int', 'smallint', 'tinyint', 'bigint') THEN \n                    N'','' + CAST(RAND(CHECKSUM(NEWID())) * 100 AS varchar)''\n                 WHEN t.name IN ('decimal', 'numeric') THEN \n                     N''','' + CAST(RAND(CHECKSUM(NEWID())) * 100 CAST(''+''+CAST(PRECISION AS VARCHAR)+CHOOSE(SCALE,'',REPLICATE(''0'',SCALE))+''.'' AS VARCHAR) AS varchar)''\n                 WHEN t.name IN ('bit') THEN \n                    N'','' + CASE (RAND(CHECKSUM(NEWID()))) WHEN < 0.5 THEN ''0'' ELSE ''1'' END''\n                 WHEN t.name = 'uniqueidentifier' THEN \n                    N'', NEWID()\n                 ELSE ''\n            END\nFROM INFORMATION_SCHEMA.COLUMNS c\nJOIN sys.types t ON c.DATA_TYPE = t.name\nWHERE c.TABLE_NAME = @TableName AND c.TABLE_SCHEMA = @SchemaName\n\n-- Remove the first comma that was generated and wrap it with an INSERT statement\nIF LEN(@SQL) > 0 \nBEGIN\n    SET @SQL = 'INSERT INTO [' + @SchemaName + '].[' + @TableName + '] VALUES (' + SUBSTRING(@SQL,2,LEN(@SQL)) + N');'\nEND\n\n-- Execute the generated insert statement\nSELECT @SQL AS GeneratedInsert;\n-- Execute below if you want to execute the statement directly\n-- EXEC sp_executesql @SQL;