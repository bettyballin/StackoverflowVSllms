ALTER PROCEDURE [dbo].[SearchForums]\n(\n    --Input Params\n    @SearchText NVARCHAR(200),\n    @GroupId INT = -1,\n    @ClientId INT,\n    --Paging Params\n    @CurrentPage INT,\n    @PageSize INT,           \n    @OutTotalRecCount INT OUTPUT\n)\nAS\n\n--Create table of all GroupID's This search will return from\nDECLARE @GroupsToSearch TABLE (GroupId INT);\nIF @GroupId = -1\nBEGIN\n    INSERT INTO @GroupsToSearch (GroupId) \n    SELECT GroupId FROM SNetwork_Groups WHERE ClientId = @ClientId;\nEND\nELSE\nBEGIN\n    INSERT INTO @GroupsToSearch (GroupId) VALUES(@GroupId);\nEND\n\n-- Use FREETEXTTABLE and UNION ALL for optimized search\nWITH RankedResults AS (\n    -- Get Thread Titles\n    SELECT \n        FT.RANK as Relevance,\n        T.ThreadId, NULL as PostId, T.Description, T.OwnerUserId as Author\n    FROM \n        SNetwork_Threads AS T\n        INNER JOIN @GroupsToSearch AS GTS ON GTS.GroupId = T.GroupId        \n        INNER JOIN FREETEXTTABLE(SNetwork_Threads, Name, @SearchText) AS FT (KEY, RANK)\n            ON T.ThreadId = FT.[Key]\n    WHERE \n        T.GroupID IN (SELECT GroupID FROM @GroupsToSearch)\n\n    UNION ALL\n\n    -- Get Thread Descriptions\n    SELECT \n        FT.RANK as Relevance,\n        T.ThreadId, NULL as PostId, T.Description, T.OwnerUserId as Author\n    FROM \n        SNetwork_Threads AS T\n        INNER JOIN @GroupsToSearch AS GTS ON GTS.GroupId = T.GroupId        \n        INNER JOIN FREETEXTTABLE(SNetwork_Threads, Description, @SearchText) AS FT (KEY, RANK)\n            ON T.ThreadId = FT.[Key]\n    WHERE \n        T.GroupID IN (SELECT GroupID FROM @GroupsToSearch)\n\n    UNION ALL\n\n    -- Get Posts\n    SELECT \n        FT.RANK as Relevance,\n        T.ThreadId, P.PostId, P.PostText, P.OwnerUserId as Author\n    FROM \n        SNetwork_Posts AS P \n        INNER JOIN SNetwork_Threads AS T ON T.ThreadId = P.ThreadId\n        INNER JOIN @GroupsToSearch AS GTS ON GTS.GroupId = T.GroupId        \n        INNER JOIN FREETEXTTABLE(SNetwork_Posts, PostText, @SearchText) AS FT (KEY, RANK)\n            ON P.PostId = FT.[Key]\n    WHERE \n        T.GroupID IN (SELECT GroupID FROM @GroupsToSearch)\n)\n\n-- Return Results\nSELECT @OutTotalRecCount = COUNT(*) FROM RankedResults;\n\nSELECT TOP (@PageSize) \n    ThreadID,\n    PostID,\n    Description AS [Description],\n    Author\nFROM RankedResults\nORDER BY Relevance DESC, ThreadId -- Add additional columns for further sorting if needed\nOFFSET (@CurrentPage - 1) * @PageSize ROWS;