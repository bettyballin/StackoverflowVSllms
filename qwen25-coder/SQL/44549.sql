WITH Shifts AS (\n    SELECT ID, Start, End\n    FROM ShiftTable\n),\nConsolidatedShifts AS (\n    -- Anchor member: start with the first shift that overlaps or starts after the specified period\n    SELECT \n        ID,\n        CASE WHEN Start < @StartRange THEN @StartRange ELSE Start END AS StartOverlap,\n        CASE WHEN [End] > @EndRange THEN @EndRange ELSE [End] END AS EndOverlap,\n        CASE WHEN [End] <= @StartRange OR Start >= @EndRange THEN 1 ELSE 0 END NOT_COVERED\n    FROM Shifts\n    WHERE [End] >= @StartRange AND Start <= @EndRange\n\n    UNION ALL\n\n    -- Recursive member: merge overlapping or contiguous shifts into consolidated shifts\n    SELECT \n        s.ID,\n        CASE WHEN cs.StartOverlap < s.Start THEN cs.StartOverlap ELSE s.Start END AS StartOverlap,\n        CASE WHEN cs.EndOverlap > s.[End] OR s.End IS NULL THEN cs.EndOverlap ELSE s.[End] END AS EndOverlap,\n        0 NOT_COVERED\n    FROM Shifts s\n    INNER JOIN ConsolidatedShifts cs ON s.Start <= cs.EndOverlap AND cs.StartOverlap <= s.[End]\n    WHERE cs.NOT_COVERED = 0\n)\n-- Check if there are any uncovered gaps in the specified range\nSELECT \n    CASE WHEN EXISTS (SELECT * FROM ConsolidatedShifts WHERE NOT_COVERED = 1) THEN 0 ELSE 1 END AS ContinuousCoverage\nFROM ConsolidatedShifts\nOPTION (MAXRECURSION 32767);