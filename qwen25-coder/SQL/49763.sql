-- Step 1: Add a new GUID column in each table with integer primary keys\n\nALTER TABLE YourTableName ADD guid_id UNIQUEIDENTIFIER DEFAULT NEWID();\n\n-- Ensure uniqueness of the GUID column\nCREATE UNIQUE INDEX uq_YourTableName_guid_id ON YourTableName(guid_id);\n\n-- Repeat for other tables...\n\n-- Step 2 & 3: Populate existing rows and create unique index (already included in step 1)\n\n-- Example for the main table\nUPDATE YourTableName SET guid_id = NEWID() WHERE guid_id IS NULL;\n\n-- For related tables, manually set the guids to match their corresponding parents.\n-- This example assumes a simple parent-child relationship:\n\nUPDATE ChildTable \nSET guid_parent_id = (SELECT guid_id FROM ParentTable WHERE ParentTable.int_id = ChildTable.int_parent_id);\n\n-- Repeat for other related tables...\n\n-- Step 4: Add new foreign key constraints using GUIDs\nALTER TABLE ChildTable DROP CONSTRAINT fk_YourConstraintName;\nALTER TABLE ChildTable ADD CONSTRAINT fk_new_YourConstraintName FOREIGN KEY (guid_parent_id) REFERENCES YourTableName(guid_id);\n\n-- Repeat for other constraints...\n\n-- Step 5: Update primary keys to use GUIDs\n-- Note: Order matters - remove references first, then change the PK.\n\n-- Example:\nALTER TABLE YourTableName DROP PRIMARY KEY;\nALTER TABLE YourTableName ADD CONSTRAINT pk_YourTableName_guid PRIMARY KEY (guid_id);\n\n-- Ensure all steps are tested and rolled back if necessary before applying them in production.