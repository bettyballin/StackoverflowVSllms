-- Step 1: Create a global temporary table to store orders temporarily\nCREATE GLOBAL TEMPORARY TABLE gtt_orders (\n    order_id NUMBER,\n    site_id NUMBER\n) ON COMMIT DELETE ROWS;\n\n-- Step 2: Modify GetOrder procedure to insert into the GTT instead of returning a ref cursor\nPROCEDURE GetOrder(\n    p_siteId IN NUMBER\n)\nIS\nBEGIN\n    INSERT INTO gtt_orders (order_id, site_id)\n    SELECT order_id, site_id FROM orders WHERE site_id = p_siteId;\nEND;\n\n-- Step 3: Modify GetOrderByCustName to use the GTT for accumulation and final cursor opening\nPROCEDURE GetOrderbyCustName(\n    p_name       IN        VARCHAR2,\n    curReturn    OUT       sys_refcursor\n)\nIS\nBEGIN\n    FOR rec IN (SELECT site_id FROM customers WHERE name LIKE '%' || p_name || '%')\n    LOOP\n        -- Populate gtt_orders with orders for each customer id\n        GetOrder(rec.site_id);\n    END LOOP;\n\n    -- Open ref cursor against the accumulated orders in the GTT\n    OPEN curReturn FOR SELECT order_id, site_id FROM gtt_orders;\nEND GetOrderbyCustName;