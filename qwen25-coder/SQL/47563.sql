DECLARE\n    batch_size NUMBER := 10000;\n    processed_rows NUMBER := 0;\nBEGIN\n    LOOP\n        -- Update the usps_address column using string_utils and address data\n        UPDATE (SELECT l.usps_address,\n                    mylib.string_utils.remove_duplicate_whitespace(\n                        house_number || ' ' || pre_street_direction || ' ' ||\n                        street_name || ' ' || street_description || ' ' ||\n                        post_street_direction) new_usps_address\n              FROM vr_location l\n                   JOIN vr_address a ON a.address_pk = l.address_pk\n              WHERE ROWID IN (SELECT ROWID\n                              FROM vr_location\n                              ORDER BY address_pk -- or another column to ensure consistent ordering\n                              OFFSET processed_rows ROWS FETCH NEXT batch_size ROWS ONLY))\n        SET usps_address = new_usps_address;\n        \n        -- Update the usps_address column using usaddress_utils.parse_address\n        UPDATE (SELECT l.usps_address,\n                    mylib.usaddress_utils.parse_address(l.usps_address) parsed_usps_address\n              FROM vr_location l\n              WHERE ROWID IN (SELECT ROWID\n                              FROM vr_location\n                              ORDER BY address_pk -- or another column to ensure consistent ordering\n                              OFFSET processed_rows ROWS FETCH NEXT batch_size ROWS ONLY))\n        SET usps_address = parsed_usps_address;\n        \n        EXIT WHEN SQL%ROWCOUNT < 1;\n        \n        processed_rows := processed_rows + batch_size;\n        COMMIT;\n    END LOOP;\nEND;\n/