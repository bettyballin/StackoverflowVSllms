-- Subquery to find the earliest timestamp per user and project\nWITH MinTimestamp AS (\n    SELECT \n        user_id,\n        project_id,\n        MIN(timestamp) as min_timestamp\n    FROM \n        view_stats\n    GROUP BY \n        user_id, project_id\n)\nSELECT \n    a.user_id AS 'User ID',\n    a.project_id AS 'Remix Project Id',\n    prjs.based_on_pid AS 'Original Project ID',\n    (CASE WHEN f.reasons IS NULL THEN 'N' ELSE 'Y' END) AS 'Flagged Y or N',\n    f.reasons,\n    mt.min_timestamp\nFROM \n    view_stats a\nJOIN (\n    SELECT id, based_on_pid, user_id\n    FROM projects p\n) prjs ON (a.project_id = prjs.id)\nLEFT OUTER JOIN flaggers f ON (\n    f.project_id = a.project_id AND f.user_id = a.user_id\n)\n-- Join with the MinTimestamp subquery to get the earliest timestamp\nJOIN MinTimestamp mt ON (\n    a.user_id = mt.user_id AND a.project_id = mt.project_id AND a.timestamp = mt.min_timestamp\n)\nWHERE \n    a.project_id IN (\n        SELECT DISTINCT b.id\n        FROM projects b\n        WHERE b.based_on_pid IN (\n            SELECT DISTINCT c.id\n            FROM projects c\n            WHERE c.user_id = a.user_id\n        )\n    )\nORDER BY \n    f.reasons DESC, a.user_id, a.project_id;