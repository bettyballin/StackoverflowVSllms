-- Create table\nCREATE TABLE spool (\n    key BIGINT AUTO_INCREMENT PRIMARY KEY,\n    txt TEXT,\n    seq INT AUTO_INCREMENT UNIQUE KEY (key)\n);\n\nDELIMITER $$\n\n-- Function to begin spooling\nCREATE PROCEDURE tox_begin_spool()\nBEGIN\n    DECLARE next_key BIGINT;\n    SELECT MAX(key) + 1 INTO next_key FROM spool;\n    SET @g_spool_key = IFNULL(next_key, 1);\nEND$$\n\n-- Procedure to insert into spool\nCREATE PROCEDURE tox_into_spool(IN in_txt TEXT)\nBEGIN\n    INSERT INTO spool (key, txt, seq) VALUES (@g_spool_key, in_txt, LAST_INSERT_ID() + 1);\nEND$$\n\n-- Procedure to reset spool\nCREATE PROCEDURE tox_reset_spool()\nBEGIN\n    DELETE FROM spool WHERE key = @g_spool_key;\n    CALL tox_begin_spool();\n    COMMIT;\nEND$$\n\n-- Function to end spooling and return results (Note: MySQL doesn't support returning cursors, but this will output the result)\nCREATE PROCEDURE tox_end_spool()\nBEGIN\n    SELECT * FROM spool WHERE key = @g_spool_key ORDER BY seq;\n    COMMIT;\nEND$$\n\n-- Function to return timestamp in the same format as Oracle's TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')\nCREATE FUNCTION tox_timestamp() RETURNS VARCHAR(14)\nBEGIN\n    RETURN DATE_FORMAT(NOW(), '%Y%m%d%H%i%s');\nEND$$\n\nDELIMITER ;