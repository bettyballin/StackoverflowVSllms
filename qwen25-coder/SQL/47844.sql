-- Create a temporary in-memory table to hold the IDs to be processed\nCREATE TABLE #TempShoppingCartItems (\n    ShoppingCartItemID INT PRIMARY KEY,\n    GFSID INT,\n    Quantity INT\n);\n\n-- Populate the temporary table with the items to process\nINSERT INTO #TempShoppingCartItems (ShoppingCartItemID, GFSID, Quantity)\nSELECT \n    ShoppingCartItem.ShoppingCartItemID, \n    ShoppingCartItem.GFSID, \n    ShoppingCartItem.Quantity\nFROM\n    ShoppingCartItem INNER JOIN GoodsForSale on ShoppingCartItem.GFSID = GoodsForSale.GFSID\nWHERE ShoppingCartItem.PurchID = @PurchID;\n\n-- Process each item in the temporary table\nDECLARE @TmpShoppingCartItemID INT;\nWHILE EXISTS (SELECT * FROM #TempShoppingCartItems)\nBEGIN\n    -- Get one row from the temp table\n    SELECT TOP 1 \n        @TmpShoppingCartItemID = ShoppingCartItemID\n    FROM \n        #TempShoppingCartItems;\n\n    -- Reverse reservations\n    EXEC @ErrorCode = spGoodsForSale_ReverseReservations @TmpGFSID, @TmpQuantity\n    IF @ErrorCode <> 0\n    BEGIN\n        -- Handle error - possibly break or log\n        BREAK;\n    END\n\n    -- Delete the processed row from the temp table\n    DELETE FROM #TempShoppingCartItems WHERE ShoppingCartItemID = @TmpShoppingCartItemID;\n\n    -- Optionally, delete from the actual table after successful processing\n    DELETE FROM ShoppingCartItem \n    WHERE ShoppingCartItem.ShoppingCartItemID = @TmpShoppingCartItemID;\nEND\n\n-- Drop the temporary table\nDROP TABLE #TempShoppingCartItems;