-- Creating a table with no clustered index to remove default PK ordering impact\ncreate table #order2 (\n    orderId int not null,\n    customerId int not null -- references customer(customerId)\n    , orderDateTIme datetime not null\n)\n\ninsert into #order2 values (1, 100, '2009-01-01')\ninsert into #order2 values (2, 101, '2009-01-02')\n-- ... continue inserting the rest of the rows\n\n-- First select, without ORDER BY\nselect orderId, CustomerId, orderDateTime,\n    row_number() over (partition by customerId order by orderDateTime) RN\nfrom #order2\noption (recompile);  -- Forces recompilation to potentially change execution plan\n\n-- Simulate a scenario that might change the internal state affecting query execution\n-- For example, adding an index and removing it afterwards can alter how SQL Server retrieves rows\ncreate index idx_orderDateTime on #order2(orderDateTIme);\ndrop index #order2.idx_orderDateTime;\n\n-- Second select, without ORDER BY\nselect orderId, CustomerId, orderDateTime,\n    row_number() over (partition by customerId order by orderDateTime) RN\nfrom #order2\noption (recompile);