CREATE OR REPLACE TRIGGER audit_table_trigger\nAFTER INSERT OR UPDATE OR DELETE ON your_target_table\nFOR EACH ROW\nBEGIN\n    IF DELETING THEN\n        -- Insert into the audit table using :OLD\n        INSERT INTO audit_table (column1, column2, column3, operation)\n        VALUES (:OLD.column1, :OLD.column2, :OLD.column3, 'DELETE');\n    ELSIF INSERTING THEN\n        -- Insert into the audit table using :NEW\n        INSERT INTO audit_table (column1, column2, column3, operation)\n        VALUES (:NEW.column1, :NEW.column2, :NEW.column3, 'INSERT');\n    ELSIF UPDATING THEN\n        IF :OLD.column1 != :NEW.column1 OR \n           :OLD.column2 != :NEW.column2 OR \n           :OLD.column3 != :NEW.column3 THEN\n            -- Insert into the audit table using both :OLD and :NEW for UPDATE\n            INSERT INTO audit_table (column1_old, column2_old, column3_old, column1_new, column2_new, column3_new, operation)\n            VALUES (:OLD.column1, :OLD.column2, :OLD.column3, :NEW.column1, :NEW.column2, :NEW.column3, 'UPDATE');\n        END IF;\n    END IF;\nEND audit_table_trigger;\n/