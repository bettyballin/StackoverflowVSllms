CREATE TRIGGER trg_PreventDateOverlapInsert\nON YourTableName\nINSTEAD OF INSERT\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    -- Check for overlaps with existing records\n    IF EXISTS (\n        SELECT 1 \n        FROM inserted i\n        JOIN YourTableName t ON t.UserId = i.UserId\n                            AND (i.DateFrom <= t.DateTo AND i.DateTo >= t.DateFrom)\n    )\n    BEGIN\n        RAISERROR ('Overlap detected in date periods for the same user.', 16, 1);\n        ROLLBACK TRANSACTION;\n        RETURN;\n    END\n\n    -- If no overlap, insert the data\n    INSERT INTO YourTableName (DateFrom, DateTo, UserId)\n    SELECT DateFrom, DateTo, UserId FROM inserted;\nEND;\n\nCREATE TRIGGER trg_PreventDateOverlapUpdate\nON YourTableName\nINSTEAD OF UPDATE\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    -- Check for overlaps with existing records that are not the updated record itself\n    IF EXISTS (\n        SELECT 1 \n        FROM inserted i\n        JOIN YourTableName t ON t.UserId = i.UserId AND t.Id <> i.Id\n                            AND (i.DateFrom <= t.DateTo AND i.DateTo >= t.DateFrom)\n    )\n    BEGIN\n        RAISERROR ('Overlap detected in date periods for the same user.', 16, 1);\n        ROLLBACK TRANSACTION;\n        RETURN;\n    END\n\n    -- If no overlap, update the data\n    UPDATE YourTableName\n    SET DateFrom = i.DateFrom,\n        DateTo = i.DateTo\n    FROM inserted i\n    WHERE YourTableName.Id = i.Id;\nEND;