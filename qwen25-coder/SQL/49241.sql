-- Assume Table has these rows:\n/*\ncolumn1 | column2 | column3\n--------|---------|---------\na       | 10      | z\nb       | NULL    | y\nc       | 30      | z\nd       | 40      | x\ne       | 50      | y\n*/\n\n-- First Query Output:\n/*\nSince it's ordered by column1, but FIRST_VALUE is applied without an ORDER BY clause inside,\nit will first take the non-null value in each partition according to the CTE's order.\nResult:\n40 (for partition x since there's only one row)\nNULL (no effect as no values after NULL)\n50 or 30 (depends on exact DBMS behavior, but likely first non-NULL per partition)\n*/\n\n-- Second Query Output:\n/*\nPARTITION BY column3 orders within each partition by column1.\nResult:\n40 (for partition x)\nNULL (since it's the only value for this partition and it's NULL)\n10 or 30 (depends on whether the DBMS considers first non-NULL per ordered partition, likely 10 since 'a' < 'c')\n*/