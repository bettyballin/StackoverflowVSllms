CREATE TYPE dbo.TagListType AS TABLE (TagValue NVARCHAR(255);\n\nCREATE PROCEDURE InsertArticleWithTags\n    @ArticleName NVARCHAR(MAX),\n    @ArticleBody NVARCHAR(MAX),\n    @ArticleTags dbo.TagListType READONLY\nAS\nBEGIN\n    SET NOCOUNT ON;\n    \n    -- Transaction to ensure atomicity\n    BEGIN TRANSACTION;\n\n    DECLARE @InsertedArticles TABLE (ArticleID INT);\n    \n    INSERT INTO Articles (ArticleName, ArticleBody)\n    OUTPUT INSERTED.ArticleID INTO @InsertedArticles (ArticleID)\n    VALUES (@ArticleName, @ArticleBody);\n\n    -- Assuming you have a single article in this batch \n    DECLARE @ArticleID INT = (SELECT TOP 1 ArticleID FROM @InsertedArticles);\n\n    -- Upsert Tags\n    MERGE dbo.Tags AS Target\n    USING @ArticleTags AS Source ON Target.TagValue = Source.TagValue\n    WHEN NOT MATCHED THEN INSERT (TagValue) VALUES (Source.TagValue)\n    OUTPUT inserted.TagId, source.tagVALUE \n        INTO @TempTags (TagId, TagValue);\n\n    -- Insert mappings based on the latest data in Tags table\n    INSERT INTO dbo.TagMap (ArticleID, TagID)\n    SELECT @ArticleID, TagID FROM Tags t\n    WHERE EXISTS (\n        SELECT 1 FROM @TempTags tt\n        WHERE tt.tagVALUE = t.tagVALUE\n    );\n\n    COMMIT TRANSACTION;\nEND;