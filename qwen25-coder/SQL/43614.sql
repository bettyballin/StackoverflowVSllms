-- Pseudo-procedure for handling data inserts/update in a resilient manner\nCREATE PROCEDURE UpsertData\n(\n    @ID INT,\n    @Value NVARCHAR(MAX)\n)\nAS\nBEGIN\n    BEGIN TRANSACTION;\n    \n    -- Check for conflict and handle appropriately (example pseudo-code logic)\n    IF EXISTS(SELECT * FROM MainTable WHERE ID = @ID AND Value <> @Value)\n    BEGIN\n        -- Log Conflict or Handle Conflict according to business rule\n        INSERT INTO ConflictLog(ID, OldValue, NewValue) VALUES(@ID, (SELECT Value FROM MainTable WHERE ID = @ID), @Value);\n        ROLLBACK TRANSACTION;\n        RETURN; -- Exit procedure early after logging conflict\n    END\n\n    MERGE INTO MainTable AS Target\n    USING (VALUES (@ID, @Value)) AS Source(ID, Value)\n    ON Target.ID = Source.ID\n    WHEN MATCHED THEN \n        UPDATE SET Value = Source.Value\n    WHEN NOT MATCHED THEN	\n	INSERT (ID, Value) VALUES (Source.ID, Source.Value);\n    \n    COMMIT TRANSACTION;\nEND