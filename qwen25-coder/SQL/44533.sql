DECLARE\n    CURSOR cur_data IS \n        SELECT * FROM your_large_table; -- Replace with your large query\n    \n    v_file       UTL_FILE.FILE_TYPE;\n    v_file_name  VARCHAR2(100);\n    v_row_count  NUMBER := 0;\n    v_max_rows   NUMBER := 100000; -- Define the number of rows per file\n    v_chunk      NUMBER := 1;\n    \nBEGIN\n    FOR rec IN cur_data LOOP\n        -- Determine the filename based on the current chunk/sequence number\n        v_file_name := 'out' || TO_CHAR(v_chunk) || '.csv';\n        \n        IF v_row_count = 0 THEN\n            -- Open a new file if not already opened\n            v_file := UTL_FILE.FOPEN('DIR_OUTPUT', v_file_name, 'W'); -- DIR_OUTPUT is the directory object\n        END IF;\n        \n        -- Write data to the file. Modify the following line according to the columns in your table.\n        UTL_FILE.PUT_LINE(v_file, rec.column1 || ',' || rec.column2); -- Replace with actual column names\n        \n        v_row_count := v_row_count + 1;\n\n        IF v_row_count >= v_max_rows THEN\n            -- Close the current file and reset the row count for the next chunk\n            UTL_FILE.FCLOSE(v_file);\n            v_chunk := v_chunk + 1;\n            v_row_count := 0;\n        END IF;\n    END LOOP;\n    \n    -- Close the last file if we didn't reach an exact multiple of v_max_rows\n    IF v_row_count > 0 THEN\n       UTL_FILE.FCLOSE(v_file);\n    END IF;\n\nEXCEPTION\n    WHEN OTHERS THEN\n        -- Always ensure files are closed in case of error\n        IF UTL_FILE.IS_OPEN(v_file) THEN\n            UTL_FILE.FCLOSE(v_file);\n        END IF;\n        RAISE;\nEND;\n/