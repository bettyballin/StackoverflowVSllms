abstract class Parent {\n    protected static $message = "UNTOUCHED";\n\n    public static function yeah() {\n        static::$message = "YEAH";\n    }\n\n    public static function nope() {\n        static::$message = "NOPE";\n    }\n\n    public static function lateStaticDebug() {\n        return(static::$message);\n    }\n}\n\nclass Child extends Parent {\n    // You can choose to redefine $message here if you want independent storage.\n    // Otherwise, it shares the same static property with the parent class.\n}\n\n// Usage\nParent::yeah();\necho Parent::lateStaticDebug();  // Outputs: "YEAH"\n\nChild::nope();\necho Child::lateStaticDebug();   // Outputs: "NOPE" because Child uses the same static property as Parent\n\nParent::yeah();\necho Child::lateStaticDebug();   // Outputs: "YEAH"