class Bootstrap extends Zend_Application_Bootstrap_Bootstrap\n{\n    protected function _initLayout()\n    {\n        $frontController = Zend_Controller_Front::getInstance();\n        $request = $frontController->getRequest();\n\n        // Get the current module name (default to 'default')\n        $moduleName = $request->getModuleName() ?: 'default';\n\n        $layout = Zend_Layout::startMvc();\n\n        switch ($moduleName) {\n            case 'mojo':\n                $layout->setLayoutPath(APPLICATION_PATH . '/layouts/scripts/mojo');\n                $layout->setLayout('mojo_layout'); // assuming you have a layout file called mojo_layout.phtml\n                break;\n            default:\n                $layout->setLayoutPath(APPLICATION_PATH . '/layouts/scripts');\n                $layout->setLayout('default_layout'); // default layout file is default_layout.phtml\n        }\n    }\n\n    protected function _initModuleSpecific()\n    {\n        $frontController = Zend_Controller_Front::getInstance();\n        $request = $frontController->getRequest();\n        $moduleName = $request->getModuleName() ?: 'default';\n\n        if ($moduleName == 'mojo') {\n            // Module-specific initializations for the 'mojo' module\n            $this->_initMojoCredentialsCheck();\n        } else {\n            // General or default module-specific initializations\n        }\n    }\n\n    protected function _initMojoCredentialsCheck()\n    {\n        // Implement your credentials check logic here specific to the mojo module\n        echo "Performing credentials check for the Mojo module";\n    }\n}