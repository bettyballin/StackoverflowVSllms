<?php\n\nrequire 'vendor/autoload.php';\n\nuse phpseclib\Net\SFTP;\n\n$localPath = '/path/to/your/local/trunk'; // Local path to the SVN trunk export\n$remotePath = '/var/www/html';          // Remote path on production server\n$sftpServer = 'ftp.example.com';\n$sftpPort = 22;                          // SFTP is typically over port 22\n\n$sshKeyFile = '/path/to/your/private.key'; // Path to your SSH key if not using password\n$sshPassword = '';\n\n$sftp = new SFTP($sftpServer, $sftpPort);\nif (!$sftp->login('username', $sshPassword, $sshKeyFile)) {\n    exit('Login Failed');\n}\n\n$arrayOfFilesChanged = get_changed_files_from_svn();\n\nforeach ($arrayOfFilesChanged as $filePath) {\n    // Construct the local and remote file paths\n    $localFilePath = $localPath . '/' . $filePath;\n    $remoteFilePath = $remotePath . '/' . $filePath;\n\n    // Ensure directories exist on the server before uploading files\n    $sftp->mkdir(dirname($remoteFilePath), true);\n\n    // Upload file to the server\n    if (!$sftp->put($remoteFilePath, $localFilePath, SFTP::SOURCE_LOCAL_FILE)) {\n        echo "Failed to upload" . $filePath;\n    }\n}\n\nfunction get_changed_files_from_svn() {\n    // Run SVN command to get list of changed files and directories\n    exec('svn status --no-ignore ' . escapeshellarg('/path/to/your/local/trunk'), $output);\n\n    $changedFiles = [];\n    foreach ($output as $line) {\n        $status = substr($line, 0, 1);\n        if ($status == 'A' || $status == 'M') { // Added or Modified\n            $filePath = trim(substr($line, 7));\n            $changedFiles[] = $filePath;\n        }\n    }\n\n    return $changedFiles;\n}\n\n?>