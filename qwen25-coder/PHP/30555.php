abstract class LP_Model {\n    protected static $_gatewayName;\n    protected static $_gateway;\n\n    public static function init() {\n        if (self::$_gateway === null) {\n            self::$_gateway = new static::$_gatewayName(); // Use late static binding here\n        }\n    }\n\n    public static function get() {\n        self::init();\n\n        $param = func_get_arg(0);\n\n        if ($param instanceof Zend_Db_Table_Row_Abstract) {\n            $row = $param;\n        } elseif (is_numeric($param)) {\n            $row = self::$_gateway->find($param)->current();\n        }\n\n        return new static($row); // Use late static binding here\n    }\n\n    public static function getCollection() {\n        self::init();\n\n        $param = func_get_arg(0);\n\n        if ($param instanceof Zend_Db_Table_Rowset_Abstract) {\n            $rowset = $param;\n        } elseif (!$param) {\n            $rowset = self::$_gateway->fetchAll();\n        }\n\n        $array = array();\n\n        foreach ($rowset as $row) {\n            $array[] = new static($row); // Use late static binding here\n        }\n\n        return $array;\n    }\n}\n\nclass Model_Company extends LP_Model\n{\n    protected static $_gatewayName = 'Model_Table_Company';\n\n    public function __construct(Zend_Db_Table_Row_Abstract $row = null) {\n        // Initialization logic specific to Company model can go here\n    }\n}