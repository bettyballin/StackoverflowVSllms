<?php  \n/* config for the script */  \n$download_path = "content"; /* path to your files, NB: no slash at the end */  \n$sort = "asort"; /* array sorting - alphabetical sorting for the array */  \n\n/* start the script... no more editing from here on... */  \n\n/* get a list of the files + dirs and turn the list into an array */  \nfunction file_list($dir) {  \n    global $sort;  \n    global $file_file_count;  \n    if (is_dir($dir)) {  \n        $fd = @opendir($dir);  \n        while (($part = @readdir($fd)) !== false) { // Use '!== false' to avoid issues with folder names like '0'\n            clearstatcache();  \n            if ($part != "." && $part != "..") {  \n                $file_array[] = $part;  \n            }  \n        }  \n        if (is_resource($fd)) {\n            @closedir($fd);\n        }\n    }\n    if (!empty($file_array)) {\n        sort($file_array); // Sort the array\n        $file_file_count = count($file_array);\n    }\n    return $file_array ?? [];\n}\n\n/* allow the user to download the file... */  \nfunction do_download($path, $file) {  \n    global $download_path;  \n    $get_path = str_replace(["..", "//"], "", urldecode(stripslashes(trim($path)))); // More secure path handling\n    $get_file = str_replace(["..", "//"], "", urldecode(stripslashes(trim($file))));\n\n    $filePath = "$download_path/$get_path/$get_file";\n    if (file_exists($filePath) && is_readable($filePath)) {\n        header("Content-Disposition: attachment; filename=\"$get_file\"");\n        header("Content-Type: application/octet-stream");\n        header("Content-Length: " . filesize("$filePath"));\n        header("Cache-Control: no-cache, must-revalidate");\n        header("Pragma: no-cache");\n        header("Expires: 0");\n\n        readfile("$filePath"); // Efficient way to output files\n    } else {\n        echo "File not found or inaccessible.";\n        exit;\n    }\n}\n\n$go = isset($_GET['go']) ? $_GET['go'] : 'dirlist'; \n$path = isset($_GET['path']) ? $_GET['path'] : '';\n$file = isset($_GET['file']) ? $_GET['file'] : '';\n\nif ($go == "dirlist") {  \n    generate_file_list(""); /* null, so we get a list for the root directory */  \n} elseif ($go == "list" && !empty($path)) {  \n    generate_file_list($path); /* get a list for the path specified */  \n} elseif ($go == "download" && !empty($file) && !empty($path)) {  \n    do_download($path, $file); /* download the file... */  \n} else {\n    echo "Invalid request.\n";\n}\n\n?>