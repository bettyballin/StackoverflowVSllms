use PHPUnit\Framework\TestCase;\n\nclass DataAccessTest extends TestCase {\n    public function testGetFoo() {\n        // Create a mock for the table object\n        $mockTable = $this->getMockBuilder(StdClass::class)\n                          ->setMethods(['get'])\n                          ->getMock();\n        $mockTable->method('get')\n                  ->willReturn(true); // or whatever you need to return\n\n        // Mock factory method that returns our mocked table object\n        $factoryMock = $this->getMockBuilder(StdClass::class)\n                            ->setMethods(['create'])\n                            ->getMock();\n        $factoryMock->method('create')\n                    ->with($this->equalTo("mytable"))\n                    ->willReturn($mockTable);\n\n        // Create an instance of DataAccess with the mocked factory\n        $dataAccess = new DataAccess([$factoryMock, 'create']);\n\n        // Call the method and get the result\n        $result = $dataAccess->getFoo(1); // or whatever ID you want to test\n\n        // Add your assertions here\n        $this->assertNotNull($result);\n    }\n}