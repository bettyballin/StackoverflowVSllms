function checkSyntax($file) {\n    // Check if the file exists\n    if (!is_readable($file)) {\n        return "File not readable or does not exist.";\n    }\n\n    // Get all tokens from the file\n    $tokens = token_get_all(file_get_contents($file));\n\n    foreach ($tokens as $token) {\n        // If there is an error while tokenizing, it's likely a syntax error\n        if (is_array($token) && $token[0] === T_STRING && strtolower($token[1]) === 'syntaxerror') {\n            return "Syntax error in file.";\n        }\n    }\n\n    // Check for a parse error by attempting to include the file without executing it\n    // This is safe as we are just including and not executing due to eval in a non-parsing context\n    ob_start();\n    $php_code = file_get_contents($file);\n    // Replace all ?> with > to avoid premature script end\n    $php_code = str_replace('?>', '>', $php_code);\n    try {\n        @include "data:text/plain,<?php {$php_code} ?>";\n    } catch (\ParseError $e) {\n        ob_end_clean();\n        return "Syntax error in file: " . $e->getMessage();\n    }\n\n    ob_end_clean();\n\n    return "No syntax errors found.";\n}\n\n// Usage\n$file = 'path/to/your/file.php';\necho checkSyntax($file);