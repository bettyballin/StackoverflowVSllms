class wrapController extends baseController {\n    function dosomethingFunction() {\n        // Start output buffering to capture any echo statements in the included file\n        ob_start();\n        \n        // Include the old controller file.\n        require 'old_dosomething.function.php';\n        \n        // Get the current state of $GLOBALS after inclusion.\n        $new_globals = array_diff($GLOBALS, $this->originalGlobals);\n        \n        // Extract all new variables into the global scope.\n        foreach ($new_globals as $key => $value) {\n            $GLOBALS[$key] = $value;\n        }\n        \n        // Capture any output generated during include\n        $output = ob_get_clean();\n        \n        // You can do something with the output if needed.\n        \n        // Now $globalVar (or any other variable defined in the old file) is available in global scope.\n        $this->view('old_dosomething_view');\n    }\n    \n    public function __construct() {\n        parent::__construct();\n        // Store a copy of $GLOBALS before inclusion to track changes.\n        $this->originalGlobals = $GLOBALS;\n    }\n}