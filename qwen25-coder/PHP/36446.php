// Assuming $posts is the result of your Zend Select query fetchAll()\n$nestedPosts = [];\nforeach ($posts as $row) {\n    // Extract post information\n    $postId = $row['idPost'];\n    if (!isset($nestedPosts[$postId])) {\n        $nestedPosts[$postId] = [\n            'post' => [],\n            'user' => [],\n            'comments' => []\n        ];\n        $nestedPosts[$postId]['post'] = array_filter($row, function($key) {\n            return strpos($key, 'idPost') === 0 || strpos($key, 'post') === 0 || strpos($key, 'date') === 0;\n        }, ARRAY_FILTER_USE_KEY);\n\n        // Extract user information\n        $nestedPosts[$postId]['user'] = array_filter($row, function($key) {\n            return strpos($key, 'idUser') !== false \n                   || strpos($key, 'fname') !== false \n                   || strpos($key, 'lname') !== false \n                   || strpos($key, 'profileUrl') !== false \n                   || strpos($key, 'photoUrl') !== false;\n        }, ARRAY_FILTER_USE_KEY);\n    }\n\n    // Extract comment information\n    if (!is_null($row['idTopic'])) {\n        $nestedPosts[$postId]['comments'][] = array_filter($row, function($key) {\n            return strpos($key, 'idPost') === 0 || strpos($key, 'postContent') === 0;\n        }, ARRAY_FILTER_USE_KEY);\n    }\n}\n\n// Reindex the nested posts array for sequential keys if needed\n$nestedPosts = array_values($nestedPosts);\n\nprint_r($nestedPosts);