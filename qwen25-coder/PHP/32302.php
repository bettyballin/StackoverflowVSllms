require 'vendor/autoload.php';\n\nuse Firebase\JWT\JWT;\n\nsession_start();\n\n$client_id = 'YOUR_CLIENT_ID';\n$client_secret = 'YOUR_CLIENT_SECRET';\n$redirect_uri = 'http://yourdomain.com/oauth2callback';\n$state = bin2hex(random_bytes(16));\n\n$_SESSION['oauth2state'] = $state; // CSRF protection\nunlink(__DIR__ . '/access_token.json'); // Delete token, since we're doing a new one.\n\n$authorization_url = 'https://accounts.google.com/o/oauth2/v2/auth?'.\n                     http_build_query([\n                         'response_type' => 'code',\n                         'client_id'     => $client_id,\n                         'redirect_uri'  => $redirect_uri,\n                         'state'         => $state,\n                         'scope'         => implode(' ', [\n                             'https://www.googleapis.com/auth/userinfo.profile',\n                             'https://www.googleapis.com/auth/userinfo.email',\n                         ]),\n                     ]);\n\nif (empty($_GET['code'])) {\n    header("Location: " . $authorization_url);\n    exit;\n} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {\n\n    unset($_SESSION['oauth2state']); // Prevent CSRF attack.\n    exit('Invalid state');\n}\n\n// Check if we have received an OAuth 2.0 Authorization Response?\nif (! empty($_GET['code'])) {\n    // We got an authorization code, now let's exchange it for an access token\n    $token = file_get_contents(\n        'https://accounts.google.com/o/oauth2/token',\n        false,\n        stream_context_create([\n            'http' => [\n                'header'  => "Content-type: application/x-www-form-urlencoded\r\n",\n                'method'  => 'POST',\n                'content' => http_build_query([\n                    'code'          => $_GET['code'],\n                    'client_id'     => $client_id,\n                    'client_secret' => $client_secret,\n                    'redirect_uri'  => $redirect_uri,\n                    'grant_type'    => 'authorization_code',\n                ]),\n            ],\n        ])\n    );\n\n    if ($token === FALSE) {\n        throw new Exception("Failed to obtain access token");\n    }\n    $token = json_decode($token, true);\n\n    // Save access and refresh tokens for future use\n    file_put_contents(\n        __DIR__ . '/access_token.json',\n        json_encode([\n            'access_token'  => $token['access_token'],\n            'refresh_token' => $token['refresh_token'],\n            'expires_in'    => $token['expires_in'], // in seconds\n            'created_at'    => time(),\n        ])\n    );\n\n    header('Location: /');\n}\n\n// Use access token to query Google's User Info API for example.\n$access_token = json_decode(file_get_contents(__DIR__ . '/access_token.json'), true);\n\n$id_token = JWT::decode($access_token['id_token'], null, ['RS256']);\n\nprint $id_token->name;