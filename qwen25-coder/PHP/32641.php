use PHPUnit\Framework\TestCase;\n\nclass StuffDoer {\n    protected function doesLongRunningThing() {\n        sleep(10);\n        return "stuff";\n    }\n\n    public function doStuff() {\n        return $this->doesLongRunningThing();\n    }\n}\n\nclass StuffDoerTestCase extends TestCase {\n    public function testStuffDoer() {\n        // Create a partial mock of the StuffDoer class\n        $mock = $this->getMockBuilder(StuffDoer::class)\n                     ->onlyMethods(['doesLongRunningThing'])\n                     ->getMock();\n\n        // Define the behavior of the method being mocked\n        $mock->method('doesLongRunningThing')->willReturn("test stuff");\n\n        // Call the method that uses the mocked internal call\n        $result = $mock->doStuff();\n        \n        // Assert the result\n        $this->assertEquals($result, "test stuff");\n    }\n}