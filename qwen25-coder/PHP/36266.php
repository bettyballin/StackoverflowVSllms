function insert ($param, $table) {\n    // Constructing the SQL string\n    $sqlString = "INSERT INTO $table (".implode(', ', array_keys($param)).') VALUES ('.str_repeat('?, ', (count($param) - 1)).'?)';\n\n    if ($statement = $this->conn->prepare($sqlString)) {\n        // Prepare types and values for binding\n        $types = str_repeat('s', count($param)); // Assuming all parameters are strings; adjust as necessary\n        $values = array_values($param);\n\n        // Bind parameters dynamically\n        $refs = [];\n        foreach ($values as $key => $value) {\n            $refs[$key] = &$values[$key];\n        }\n\n        // Prepend types to the values array and pass to bind_param\n        array_unshift($refs, $types);\n        call_user_func_array([$statement, 'bind_param'], $refs);\n\n        if (!$statement->execute()) {\n            die('Error: ' . $statement->error);\n        }\n        $statement->close();\n        return true;\n    } else {\n        die("Could Not Run Statement: " . $this->conn->error); // Capture the connection error\n    }\n}