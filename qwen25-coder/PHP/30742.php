function sanitizeHtmlInput($html) {\n    // Ensure the input is in UTF-8, as many issues arise from encoding mismatches.\n    $output = mb_convert_encoding($html, 'UTF-8', 'UTF-8');\n    \n    // Remove or replace unwanted characters. This example uses a regex to remove non-ASCII characters.\n    // You can modify this regex to allow more characters if needed.\n    $output = preg_replace('/[^\x{00}-\x{7F}]/u', '', $output);\n    \n    // Convert special HTML characters into their entities,\n    // except for some safe tags like <b>, <a href="...">, etc. which you can allow by changing the flags.\n    // ENT_QUOTES ensure both double and single quotes are converted.\n    $output = htmlspecialchars($output, ENT_QUOTES | ENT_NOQUOTES, 'UTF-8', false);\n    \n    return $output;\n}\n\n// Example usage\n$rawInput = "<p>This is a test with Ã‚ and other characters.</p>";\n$safeHtml = sanitizeHtmlInput($rawInput);\necho $safeHtml; // Outputs: <p>This is a test with  and other characters.</p>