class User {\n    protected $id;\n    protected $username;\n    protected $password; // Note: Passwords should be hashed and never stored in plain text.\n    protected $email;\n    protected $contactInfo;\n\n    public function __construct($data) {\n        $this->id = $data['id'];\n        $this->username = $data['username'];\n        $this->password = $data['password'];\n        $this->email = $data['email'];\n        $this->contactInfo = $data['contact_info'];\n    }\n\n    // Getters and other methods...\n}\n\nclass Agent extends User {\n    protected $agentSpecificField;\n\n    public function __construct($data) {\n        parent::__construct($data);\n        $this->agentSpecificField = $data['agent_specific_field'];\n    }\n}\n\nclass Lead extends User {\n    protected $leadSpecificField;\n\n    public function __construct($data) {\n        parent::__construct($data);\n        $this->leadSpecificField = $data['lead_specific_field'];\n    }\n}\n\nfunction getUsersData(PDO $pdo, $type = null) {\n    $sql = "SELECT u.id, u.username, u.password, u.email, \n                u.contact_info, a.agent_specific_field, l.lead_specific_field\n            FROM users u\n            LEFT JOIN agents a ON u.id = a.user_id\n            LEFT JOIN leads l ON u.id = l.user_id";\n    if ($type) {\n        $sql .= " WHERE " . $pdo->quote($type) . "_specific_field IS NOT NULL";\n    }\n    $stmt = $pdo->query($sql);\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction constructUsersFromArray(array $usersData) {\n    $users = [];\n    foreach ($usersData as $data) {\n        if (!is_null($data['agent_specific_field'])) {\n            $users[] = new Agent($data);\n        } elseif (!is_null($data['lead_specific_field'])) {\n            $users[] = new Lead($data);\n        }\n    }\n    return $users;\n}\n\n// Usage\ntry {\n    $pdo = new PDO('mysql:host=your_host;dbname=your_db', 'username', 'password');\n    $allUsersData = getUsersData($pdo);\n    $users = constructUsersFromArray($allUsersData);\n\n    foreach ($users as $user) {\n        // Process each user\n    }\n} catch (PDOException $e) {\n    echo "Connection failed: " . $e->getMessage();\n}