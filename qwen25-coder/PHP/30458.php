class Controller_Default extends Controller_Template {\n\n    public function before() {\n        parent::before();\n        // Setup template controller's properties here or anything else.\n    }\n\n    public function action_index($method_name = '') {\n        // $method_name will receive 'non_existing_method' when a non-existent method is called.\n        // Handle the request as needed.\n    }\n\n    // Magic method called if a requested method does not exist\n    public function __call($method, array $params) {\n        // Check if the actual method exists in the class\n        if (in_array($method, get_class_methods($this))) {\n            return parent::__call($method, $params);\n        }\n\n        // Forward to index and pass the method name as a parameter\n        $this->action_index($method);\n\n        // Ensure no further execution if necessary\n        exit;\n    }\n}\n\nclass Controller_A_Controller extends Controller_Default {\n\n    public function action_index($missing_method = '') {\n        parent::action_index($missing_method);\n        echo "Index called with method: " . htmlspecialchars($missing_method);\n    }\n\n    // Example of an existing action to show fallback behavior\n    public function action_existing_method() {\n        echo "Existing method called";\n    }\n}