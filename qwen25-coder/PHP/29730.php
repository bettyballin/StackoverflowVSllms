<?php\nob_start();\nsession_start();\n\nrequire "config.inc.php"; // Ensure you are using require for critical files\n\n// Use PDO or MySQLi for database connections and prepared statements\n$pdo = new PDO("mysql:host=$dbhost;dbname=$dbname", $dbuser, $dbpass);\n$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n$ausername = isset($_GET['username']) ? $_GET['username'] : '';\n// Assume passwords are hashed and verified\n$apassword = isset($_GET['password']) ? $_GET['password'] : '';\n\n// Prepare and bind\n$stmt = $pdo->prepare("SELECT * FROM admin WHERE ausername= :ausername LIMIT 1");\n$stmt->bindParam(':ausername', $ausername, PDO::PARAM_STR);\n\n$stmt->execute();\n$data = $stmt->fetch();\n\nif ($data && password_verify($apassword, $data['apassword'])) { // Assuming 'apassword' is hashed\n    $_SESSION['admin_id'] = $data['a_id'];\n    $_SESSION['LastLogin'] = $data['last_login'];\n    \n    // Update last login time\n    $updateStmt = $pdo->prepare("UPDATE admin SET last_login= NOW() WHERE a_id = :a_id");\n    $updateStmt->bindParam(':a_id', $data['a_id'], PDO::PARAM_INT);\n    $updateStmt->execute();\n    \n    $_SESSION['aloggedin'] = true;\n    \n    // Use secure and concise JSON response\n    echo json_encode(['avalid' => 1, 'ausername' => htmlspecialchars($ausername)]);\n} else {\n    echo json_encode(['avalid' => 0]);\n}\n?>