function sortFileSystem(array $filesystem): array {\n    // Sort files (leaf nodes) at the current level\n    foreach ($filesystem as &$item) {\n        if (is_array($item)) {\n            // Recursively sort subdirectories\n            $item = sortFileSystem($item);\n        }\n    }\n    \n    // Separate directories and files\n    $directories = [];\n    $files = [];\n\n    foreach ($filesystem as $key => $value) {\n        if (is_array($value)) {\n            $directories[$key] = $value;\n        } else {\n            $files[] = $value;\n        }\n    }\n\n    // Sort the directories by key and files alphabetically\n    ksort($directories);\n    sort($files);\n\n    // Merge sorted directories and files\n    return array_merge($directories, $files);\n}\n\n// Example usage\n$filesystem = [\n    'dir1' => [\n        'dir2' => [\n            'dir3' => [\n                'dir4' => [\n                    'file1.php',\n                    'abc.php'\n                ]\n            ],\n            'file2.php',\n            'abc.php'\n        ]\n    ],\n    'abc' => [\n        'abc' => [\n            'abc' => [\n                'file5.php'\n            ]\n        ]\n    ]\n];\n\n$sortedFileSystem = sortFileSystem($filesystem);\nprint_r($sortedFileSystem);