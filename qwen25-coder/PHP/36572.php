class StatementManager {\n    private $preparedStatements = [];\n\n    public function prepareStatement($name, $query, $connection) {\n        // Check if the statement is already prepared\n        if (isset($this->preparedStatements[$name])) {\n            echo "PreparedStatement '$name' already exists.\n";\n            return true; // or handle accordingly\n        }\n\n        // Prepare the statement\n        try {\n            $result = pg_prepare($connection, $name, $query);\n            if ($result) {\n                $this->preparedStatements[$name] = true;\n                echo "PreparedStatement '$name' created successfully.\n";\n                return $result;\n            } else {\n                throw new Exception("Failed to prepare statement '$name'.");\n            }\n        } catch (Exception $e) {\n            error_log($e->getMessage());\n            return false; // or handle accordingly\n        }\n    }\n\n    public function getPreparedStatements() {\n        return $this->preparedStatements;\n    }\n}\n\n// Usage example\n$connection = pg_connect("user= yourUser dbname=yourDb");\n$stmtManager = new StatementManager();\n$stmtManager->prepareStatement('my_stmt_name', "SELECT * FROM my_table", $connection);