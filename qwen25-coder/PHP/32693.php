class QueryBuilder {\n    private $query;\n    private $params = [];\n\n    public function __construct($baseQuery) {\n        $this->query = $baseQuery;\n    }\n\n    public function addCriteria($column, $value) {\n        $this->query .= " AND {$column} = ?";\n        $this->params[] = $value;\n        return $this; // Return self for fluent interface\n    }\n\n    public function setLimit($limit) {\n        $this->query .= " LIMIT ?";\n        $this->params[] = $limit;\n        return $this; // Return self for fluent interface\n    }\n\n    public function getQuery() {\n        return ['sql' => $this->query, 'params' => $this->params];\n    }\n}\n\nfunction getSomethingByName($name) {\n    $builder = new QueryBuilder("SELECT * FROM table WHERE name = ?");\n    $builder->addCriteria('name', $name);\n    return $builder;\n}\n\nfunction getResult($selectObj) {\n    $queryInfo = $selectObj->getQuery();\n    // Execute the query using a database connection with parameterized input\n    return executeQuery($queryInfo['sql'], $queryInfo['params']);\n}