function createThumb($thumb, $ids) {\n    $start = microtime(true);\n\n    // File and new size\n    $filename = $thumb;\n\n    try {\n        // Create Imagick object for the image file\n        $image = new \Imagick(realpath($filename));\n        \n        // Get dimensions\n        $width = $image->getImageWidth();\n        $height = $image->getImageHeight();\n\n        if ($width > $height) {\n            $percentage = 72 / $width;\n        } else {\n            $percentage = 72 / $height;\n        }\n        $new_width = ceil($width * $percentage);\n        $new_height = ceil($height * $percentage);\n\n        // Resize the image\n        $image->resizeImage($new_width, $new_height, \Imagick::FILTER_LANCZOS, 1);\n\n        $imgPath = '/foo/bar/location/' . $ids;\n\n        // Create directory if it does not exist\n        if (!is_dir($imgPath)) {\n            mkdir($imgPath, 0755, true);\n        }\n\n        // Write a secure index.html file inside the new directory\n        if (!file_exists($imgPath."/index.html")) {\n            file_put_contents($imgPath."/index.html", '<html><body>401</body></html>');\n        }\n\n        $name = rand(1, 156406571337);\n        switch ($image->getImageFormat()) {\n            case 'PNG':\n                $imgName = date("y_m_d_h_m_s") . $name . '.png';\n                $image->setImageCompressionQuality(80); // PNG compression (not applied, just placeholder)\n                break;\n            case 'JPEG':\n            default:\n                $imgName = date("y_m_d_h_m_s") . $name . '.jpg';\n                $image->setImageCompressionQuality(85); // Reduce JPEG quality to 85%\n        }\n\n        $image->writeImage(realpath($imgPath) . '/' . $imgName);\n    } catch (\Exception $e) {\n        echo 'Error: ' . $e->getMessage();\n    } finally {\n        if (isset($image)) {\n            $image->destroy(); // Free up memory\n        }\n    }\n\n    $end = microtime(true);\n    echo '<strong>createImage</strong>: ' . round($end - $start, 4) . ' seconds<br />';\n    return $imgName;\n}