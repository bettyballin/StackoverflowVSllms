function readString(&$data, &$offset) {\n    $length = unpack('v', substr($data, $offset, 2))[1];\n    $offset += 2;\n    return substr($data, $offset, $length);\n}\n\nfunction parseFormsAuthTicket($decryptedData) {\n    $offset = 0;\n\n    // Assuming the ticket starts with some version indicator\n    list(,$version) = unpack('C', substr($decryptedData, $offset, 1));\n    $offset += 1;\n\n    // Read expiration date as FileTime (64-bit integer)\n    list(,$filetime) = unpack('q', substr($decryptedData, $offset, 8));\n    $offset += 8;\n    $expiration = ($filetime - 116444736000000000) / 10000000;\n    $expirationDate = new DateTime("@$expiration");\n\n    // Read username\n    $username = readString($decryptedData, $offset);\n\n    return [\n        'version' => $version,\n        'expiration' => $expirationDate->format('Y-m-d H:i:s'),\n        'username' => $username\n    ];\n}\n\n// Example usage (after decryption and removing the SHA1 signature)\n$decryptedPart = hex2bin("6E 85 A4 39 71 31 46 BB A3 F6 BE 1A 07 EE A4 CE 5F 03 C8 D1 4C 97 5D 6A 52 D1 C4 82 75 5E 53 06 7B 1D");\n$data = parseFormsAuthTicket($decryptedPart);\nprint_r($data);