class Main {\n    private $connections = array();\n\n    public function dbconnect($db) {\n        if (!isset($this->connections[$db])) {\n            switch ($db) {\n                case "users":\n                    $dsn = 'mysql:host=info;dbname=users;charset=utf8';\n                    break;\n\n                case "ads":\n                    $dsn = 'mysql:host=info;dbname=ads;charset=utf8';\n                    break;\n\n                default:\n                    die("$db is not a recognized database.");\n            }\n            try {\n                $this->connections[$db] = new PDO($dsn, 'username', 'password');\n            } catch (PDOException $e) {\n                die("Connection failed: " . $e->getMessage());\n            }\n        }\n\n        return $this->connections[$db];\n    }\n\n    public function create($class, $params = null) {\n        if (!class_exists($class) && !$this->load($class)) {\n            die("$class is not a recognized class.");\n        } else {\n            return new $class($this);\n        }\n    }\n\n    private function load($file) {\n        $path = $_SERVER['DOCUMENT_ROOT'] . "/classes/" . $file . ".php";\n        if (file_exists($path)) {\n            require_once($path);\n            return true;\n        }\n        return false;\n    }\n}\n\nclass Secondary {\n    private $db;\n\n    public function __construct(Main $main) {\n        $this->db = $main->dbconnect('users');\n    }\n\n    // Example method that uses the database connection\n    public function fetchUser($userId) {\n        $stmt = $this->db->prepare('SELECT * FROM users WHERE id = :id');\n        $stmt->execute(['id' => $userId]);\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    }\n}