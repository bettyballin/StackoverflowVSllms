function phptemplate_views_view($view, $nodes, $type) {\n  // Check for specific view names or display IDs if needed.\n  if ($view->name == 'list_recent_articles' || $view->name == 'list_popular_articles') {\n    $fields = _views_get_fields();\n\n    $taken = array();\n\n    // Set up the fields in nicely named chunks.\n    foreach ($view->field as $id => $field) {\n      $field_name = $field['field'];\n      if (isset($taken[$field_name])) {\n        $field_name = $field['queryname'];\n      }\n      $taken[$field_name] = true;\n      $field_names[$id] = $field_name;\n    }\n\n    // Set up some variables that won't change.\n    $base_vars = array(\n      'view' => $view,\n      'view_type' => $type,\n    );\n\n    $items = array();\n    foreach ($nodes as $i => $node) {\n      $vars = $base_vars;\n      $vars['node'] = $node;\n      $vars['count'] = $i;\n      $vars['stripe'] = $i % 2 ? 'even' : 'odd';\n      foreach ($view->field as $id => $field) {\n        $name = $field_names[$id];\n        $vars[$name] = views_theme_field('views_handle_field', $field['queryname'], $fields, $field, $node, $view);\n        if (isset($field['label'])) {\n          $vars[$name . '_label'] = $field['label'];\n        }\n      }\n      // Use different templates based on view name or display ID.\n      if ($view->name == 'list_recent_articles') {\n        $items[] = _phptemplate_callback('views-list-first-with-abstract', $vars);\n      } elseif ($view->name == 'list_popular_articles') {\n        $items[] = _phptemplate_callback('views-list-popular-template', $vars);\n      }\n    }\n\n    if ($items) {\n      return theme('item_list', $items);\n    }\n  }\n}