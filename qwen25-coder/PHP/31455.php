// Controller Plugin\nclass YourNamespace_Plugin_Auth extends Zend_Controller_Plugin_Abstract\n{\n    public function preDispatch(Zend_Controller_Request_Abstract $request)\n    {\n        $auth = Zend_Auth::getInstance();\n\n        if (!$auth->hasIdentity() && $this->_shouldProtect($request)) {\n            // Store the request URI in session\n            $session = new Zend_Session_Namespace('Auth');\n            $session->requestedUri = $request->getRequestUri();\n\n            // Redirect to login page\n            $request->setModuleName('default')\n                    ->setControllerName('auth')\n                    ->setActionName('login');\n        }\n    }\n\n    protected function _shouldProtect(Zend_Controller_Request_Abstract $request)\n    {\n        // List of public paths that don't require authentication\n        $publicPaths = array(\n            '/auth/login',\n            '/auth/logout'\n        );\n\n        // Check if request URI is not in the list of public paths\n        return !in_array($request->getRequestUri(), $publicPaths);\n    }\n}\n\n// Auth Controller - After successful login\nclass AuthController extends Zend_Controller_Action\n{\n    public function loginAction()\n    {\n        // Authentication logic...\n\n        if ($authSuccessful) {\n            // Retrieve requested URI from session and redirect\n            $session = new Zend_Session_Namespace('Auth');\n            $redirectUri = $session->requestedUri ?: '/';\n\n            unset($session->requestedUri);  // Clear the stored request URI\n\n            $this->_helper->redirector->gotoUrl($redirectUri);\n        }\n    }\n}