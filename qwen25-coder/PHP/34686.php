function selectivelyFlattenArray($array, $pattern) {\n    $result = [];\n\n    foreach ($array as $key => $value) {\n        if (is_array($value)) { // If the value is an array, check its key.\n            if (preg_match("/$pattern/i", $key)) {\n                // If key matches pattern, add all sub-elements to result\n                $result = array_merge($result, $value);\n            } else {\n                // Otherwise, recursively check deeper levels\n                $subResult = selectivelyFlattenArray($value, $pattern);\n                if (!empty($subResult)) {\n                    $result[] = $subResult;\n                }\n            }\n        } elseif (preg_match("/$pattern/i", $key)) { // Check for pattern in key itself.\n            $result[$key] = $value;\n        }\n    }\n\n    return $result;\n}\n\n// Example usage\n$catalogue = [\n    'Artist Sun' => ['Song 1', 'Song 2'],\n    'Another Artist' => ['Sunset', 'Song 3'],\n    'Third Artist' => [\n        'Album with Sun in Name' => ['Song 4', 'Song 5'],\n        'Normal Album' => ['Song 6', 'Song 7']\n    ]\n];\n\n$pattern = 'sun';\n$result = selectivelyFlattenArray($catalogue, $pattern);\n\nprint_r($result);