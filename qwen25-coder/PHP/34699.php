public function beforeFilter(EventInterface $event) {\n    parent::beforeFilter($event);\n    \n    // Allow all origins, methods, and headers (you can restrict these as needed)\n    if ($this->request->is('OPTIONS')) {\n        $this->response = $this->response->withStatus(204)\n            ->withHeader('Access-Control-Allow-Origin', '*')\n            ->withHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')\n            ->withHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n        $this->setResponse($this->response);\n\n        return $this->cakeError('ajax'); // Return a no-content response\n    }\n\n    $this->response = $this->response->withStatus(200)\n        ->withHeader('Access-Control-Allow-Origin', '*')\n        ->withHeader('Content-Type', 'application/xml; charset=utf-8');\n\n    if ($this->request->is(['post', 'put']) && !empty($this->request->getData('_serialize'))) {\n        $fields = (array)$this->request->getData('_serialize');\n        foreach ($fields as &$field) {\n            $field[$field] = $this->{$field};\n        }\n    }\n}