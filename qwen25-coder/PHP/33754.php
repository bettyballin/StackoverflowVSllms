class Config {\n    protected $data;\n\n    public function __construct($file) {\n        $this->loadConfig($file);\n    }\n\n    protected function loadConfig($file) {\n        if (!file_exists($file)) {\n            throw new Exception("Configuration file [$file] not found.");\n        }\n        \n        $content = file_get_contents($file);\n        $this->data = json_decode($content, true);\n\n        if (json_last_error() !== JSON_ERROR_NONE) {\n            throw new Exception("Error parsing the configuration file: " . json_last_error_msg());\n        }\n    }\n\n    public function get($key) {\n        return isset($this->data[$key]) ? $this->data[$key] : null;\n    }\n\n    // Add more methods as needed, like set or getAll\n}\n\n// Usage\ntry {\n    $config = new Config('config.json');\n    print_r($config->get('database')); // Example of accessing configuration\n} catch (Exception $e) {\n    echo 'Error:',  $e->getMessage();\n}