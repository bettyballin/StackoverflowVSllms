$select = $db->select();\n$select->from(\n    array('users'),\n    array(\n        'user_id', \n        'name', \n        'gender', \n        'city', \n        'province', \n        'country', \n        'image_id', \n        'one_liner', \n        'self_description', \n        'reputation'\n    )\n);\n\n// Define the constants for reuse and clarity\n$latitude = $user->latitude;\n$longitude = $user->longitude;\n$latitudinalFactor = 69.1 * ($latitude - $latitude);\n$longitudinalFactor = 69.1 * ($longitude - $longitude) * cos($latitude / 57.3);\n$squaredRadius = pow($radius, 2);\n\n// Use placeholders and bind parameters to prevent SQL injection\n$select->where(\n    "({$latitudinalFactor} * {$latitudinalFactor}) + ({$longitudinalFactor} * {$longitudinalFactor}) < ?",\n    $squaredRadius\n);\n\n// Order by the same calculated distance\n$select->order(\n    "(69.1 * (latitude - {$latitude})) * (69.1 * (latitude - {$latitude})) + ((69.1 * (longitude - {$longitude}) * cos({$latitude} / 57.3)) * (69.1 * (longitude - {$longitude}) * cos({$latitude} / 57.3))) ASC"\n);\n\n// Set up the Zend_Paginator\n$paginator = new Zend_Paginator(new Zend_Paginator_Adapter_DbSelect($select));\n$paginator->setCurrentPageNumber($pageNumber); // where $pageNumber is the current page\n$paginator->setItemCountPerPage($itemsPerPage); // where $itemsPerPage is number of items per page