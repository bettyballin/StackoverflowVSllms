require 'vendor/lightopenid/openid.php';\n\n   class OpenidController extends sfController {\n       public function executeLogin(sfWebRequest $request) {\n           $openid = new LightOpenID($this->getContext()->getRequest()->getHost());\n\n           if (!$openid->mode) { // Mode returns null unless an authentication attempt is currently active\n               if ($request->getParameter('login')) {\n                   $openid->identity = $request->getParameter('openid_identifier');\n                   header('Location: ' . $openid->authUrl());\n                   exit;\n               }\n           } elseif ($openid->mode == 'cancel') { // User cancelled the authorization process\n               echo 'User has canceled authentication!';\n               exit;\n           } else {\n               try {\n                   if ($openid->validate()) { // Check whether the OpenID login was successful\n                       $id = "Logged in: {$openid->identity}"; // The $openid->identity holds the user's canonical ID\n\n                       // You can set this identity to your session or use it directly for login logic\n                       $this->getUser()->setUserAttribute('openid_identity', $id);\n\n                       return $this->redirect('@your_login_successful_route');\n                   } else {\n                       echo 'Invalid identity!';\n                   }\n               } catch (ErrorException $e) {\n                   echo $e->getMessage();\n               }\n           }\n\n           // Render form\n       }\n   }