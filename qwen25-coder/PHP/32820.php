<?php\n// Include database connection\ninclude ("myconnection_pdo.php"); // Make sure this uses PDO\n\ntry {\n    // Start transaction\n    $pdo->beginTransaction();\n    \n    // Delete existing data\n    $stmt = $pdo->prepare("DELETE FROM mytable");\n    $stmt->execute();\n\n    echo "Data deleted, now insert: <br /><br />";\n\n    // Load XML file\n    $feed = 'cachy/copy.xml';\n    $xml = simplexml_load_file($feed);\n    if ($xml === false) {\n        echo "<br />Couldn't fetch the content<br /><br />";\n        die;\n    }\n\n    echo "<br />Success! Feed available!<br /><br />";\n\n    // Prepare a statement for batch insert\n    $stmt = $pdo->prepare("INSERT INTO mytable (onsaledate, onsaletime, eventdate, eventtime, buyat_short_deeplink_url, product_name, level1, level2, VenueName, VenueDMAID) VALUES (:OnsaleDate, :OnsaleTime, :EventDate, :EventTime, :buyat_short_deeplink_url, :product_name, :level1, :level2, :VenueName, :VenueDMAID)");\n\n    $batch = [];\n    foreach ($xml->xpath('//product') as $product) {\n        $batch[] = [\n            ':OnsaleDate' => trim($product->OnsaleDate),\n            ':OnsaleTime' => trim($product->OnsaleTime),\n            ':EventDate' => trim($product->EventDate),\n            ':EventTime' => trim($product->EventTime),\n            ':buyat_short_deeplink_url' => trim(htmlentities($product->buyat_short_deeplink_url, ENT_QUOTES)),\n            ':product_name' => trim(htmlentities($product->product_name, ENT_QUOTES)),\n            ':level1' => trim($product->level1),\n            ':level2' => trim($product->level2),\n            ':VenueName' => trim($product->VenueName),\n            ':VenueDMAID' => $product->VenueDMAID\n        ];\n\n        // Insert in batches of 100 (for example)\n        if (count($batch) >= 100) {\n            executeBatchInsert($stmt, $batch);\n            $batch = [];\n        }\n    }\n\n    // Insert remaining records\n    if (!empty($batch)) {\n        executeBatchInsert($stmt, $batch);\n    }\n\n    // Commit transaction\n    $pdo->commit();\n    echo "Records inserted successfully!";\n} catch (Exception $e) {\n    // Rollback on error\n    if ($pdo->inTransaction()) {\n        $pdo->rollback();\n    }\n    echo 'Error: ' . $e->getMessage();\n}\n\nfunction executeBatchInsert($stmt, $batch) {\n    foreach ($batch as $params) {\n        $stmt->execute($params);\n    }\n}