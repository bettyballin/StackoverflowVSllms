class Database {\n    private $master;\n    private $slaves;\n\n    public function __construct($masterConfig, array $slaveConfigs) {\n        $this->master = new PDO("mysql:host={$masterConfig['host']};dbname={$masterConfig['db']}", \n                                    $masterConfig['user'], $masterConfig['password']);\n        \n        foreach ($slaveConfigs as $config) {\n            $this->slaves[] = new PDO("mysql:host={$config['host']};dbname={$config['db']}",\n                                     $config['user'], $config['password']);\n        }\n    }\n\n    public function query($sql, $params = []) {\n        if (strpos(strtolower($sql), 'select') === 0) { // Simple check for read\n            return $this->executeOnSlave($sql, $params);\n        } else {\n            return $this->executeOnMaster($sql, $params);\n        }\n    }\n\n    private function executeOnMaster($sql, $params = []) {\n        $stmt = $this->master->prepare($sql);\n        $stmt->execute($params);\n        return $stmt;\n    }\n\n    private function executeOnSlave($sql, $params = []) {\n        // Randomly select a slave (basic load balancing)\n        $slave = $this->slaves[array_rand($this->slaves)];\n        $stmt = $slave->prepare($sql);\n        $stmt->execute($params);\n        return $stmt;\n    }\n\n    // ... other methods ...\n}\n\n// Usage\n$masterConfig = ['host' => 'master_host', 'db' => 'database_name', 'user' => 'username', 'password' => 'password'];\n$slaveConfigs = [\n    ['host' => 'slave1_host', 'db' => 'database_name', 'user' => 'username', 'password' => 'password'],\n    ['host' => 'slave2_host', 'db' => 'database_name', 'user' => 'username', 'password' => 'password']\n];\n\n$db = new Database($masterConfig, $slaveConfigs);\n$result = $db->query("SELECT * FROM users");