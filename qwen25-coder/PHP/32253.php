class MyObject implements \ArrayAccess, \Iterator, \Countable {\n    private $container = [];\n    private $position = 0;\n\n    // Implementation of ArrayAccess methods...\n    public function offsetSet($offset, $value) { /* ... */ }\n    public function offsetExists($offset) { /* ... */ }\n    public function offsetUnset($offset) { /* ... */ }\n    public function offsetGet($offset) { /* ... */ }\n\n    // Implementation of Iterator methods...\n    public function current() {\n        return $this->container[$this->position];\n    }\n    \n    public function key() {\n        return $this->position;\n    }\n    \n    public function next() {\n       ++$this->position;\n    }\n    \n    public function rewind() {\n        $this->position = 0;\n    }\n    \n    public function valid() {\n        return isset($this->container[$this->position]);\n    }\n\n    // Implementation of Countable method...\n    public function count() { /* ... */ }\n\n    public function getIterator() {\n        return $this;\n    }\n}\n\n$object = new MyObject();\n// Populate $object with data...\n\nreset($object);\nwhile (valid()) {\n    echo key($object) . " => " . current($object);\n    next($object);\n}