$iterator = new RecursiveIteratorIterator(\n    new Node_List(array($root)),\n    RecursiveIteratorIterator::SELF_FIRST);\n\n$i = 0;     \nforeach ($iterator as $node) {\n    // When visiting a node for the first time (go down to children)\n    if ($iterator->getDepth() >= $iterator->getInnerIterator()->getDepth() - 1 || \n        !$iterator->hasChildren()) {\n        $node->left = ++$i;\n    }\n\n    // When backtracking up from children (visit a parent node again)\n    if (!$iterator->hasNext() && $iterator->getDepth() > $iterator->getInnerIterator()->getDepth() - 1) {\n        do {\n            $node = $iterator->current();\n            $node->right = ++$i;\n            $iterator->next();\n        } while ($iterator->hasNext() && $iterator->getDepth() > $iterator->getInnerIterator()->getDepth());\n    }\n}