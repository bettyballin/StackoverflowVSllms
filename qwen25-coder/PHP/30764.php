<?php\n\nfunction resolveUrl($baseUrl, $relativeUrl) {\n    // Parse the base URL into components\n    $baseInfo = parse_url($baseUrl);\n    \n    // Parse the relative URL into components\n    $relInfo = parse_url($relativeUrl);\n\n    // If the relative URL has a scheme (http/https), assume it's absolute\n    if (!empty($relInfo['scheme'])) {\n        return $relativeUrl;\n    }\n\n    // Make sure there's a path in base and remove trailing slash\n    if (!empty($baseInfo['path'])) {\n        $baseInfo['path'] = rtrim($baseInfo['path'], '/');\n    } else {\n        $baseInfo['path'] = '';\n    }\n    \n    // If the relative URL starts with a slash, remove the base path\n    if (substr($relInfo['path'], 0, 1) == '/') {\n        $newPath = '/' . substr($relInfo['path'], 1);\n    } else {\n        $baseDir = dirname($baseInfo['path']);\n        \n        // Concatenate and normalize the path\n        $newPath = rtrim($baseDir, '/') . '/' . $relInfo['path'];\n    }\n\n    // Build the new URL with all relevant components\n    $parsedUrl = array_merge($baseInfo, ['path' => $newPath]);\n\n    return http_build_url($parsedUrl);\n}\n\n// Mock-up of a real-world scenario where you have a base URL and scraped relative image URLs\n$baseUrl = "https://example.com/about";\n$imageUrls = ["../foo/logo.png", "/images/logo.png"];\n\nforeach ($imageUrls as $imageUrl) {\n    echo resolveUrl($baseUrl, $imageUrl) . "\n";\n}\n\n// Note: http_build_url is not a PHP built-in function. We need to implement it or use an alternative.\nfunction http_build_url($parsedUrl) {\n    $scheme = isset($parsedUrl['scheme']) ? $parsedUrl['scheme'] . '://' : '';\n    $host = isset($parsedUrl['host']) ? $parsedUrl['host'] : '';\n    $port = isset($parsedUrl['port']) ? ':' . $parsedUrl['port'] : '';\n    $user = isset($parsedUrl['user']) ? $parsedUrl['user'] : '';\n    $pass = isset($parsedUrl['pass']) ? ':' . $parsedUrl['pass']  : '';\n    $pass = ($user || $pass) ? "$pass@" : '';\n    $path = isset($parsedUrl['path']) ? $parsedUrl['path'] : '';\n    $query = isset($parsedUrl['query']) ? '?' . $parsedUrl['query'] : '';\n    $fragment = isset($parsedUrl['fragment']) ? '#' . $parsedUrl['fragment'] : '';\n\n    return "$scheme$user$pass$host$port$path$query$fragment";\n}\n\n?>