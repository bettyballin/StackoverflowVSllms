// Assuming Users has Blogs and Blogs has Entries, and Entries has Comments\n$now = new DateTime();\n$oneMonthAgo = $now->modify('-1 month')->format('Y-m-d H:i:s');\n\n$options = [\n    'joins' => [\n        ['table' => 'blogs', 'alias' => 'Blog', 'type' => 'INNER', 'conditions' => ['User.id = Blog.user_id']],\n        ['table' => 'entries', 'alias' => 'Entry', 'type' => 'INNER', 'conditions' => ['Blog.id = Entry.blog_id']],\n        ['table' => 'comments', 'alias' => 'Comment', 'type' => 'INNER', 'conditions' => ['Entry.id = Comment.entry_id']],\n    ],\n    'fields' => [\n        'Entry.id',\n        'Entry.title',\n        'COUNT(Comment.id) AS comment_count'\n    ],\n    'conditions' => [\n        'Comment.created >= ' => $oneMonthAgo\n    ],\n    'group' => ['Entry.id'],\n    'order' => ['comment_count DESC'],\n    'limit' => 10 // or any number you deem as "popular"\n];\n\n$popularEntries = $this->User->find('all', $options);