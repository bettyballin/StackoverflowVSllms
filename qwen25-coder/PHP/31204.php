<?php\nheader('Content-Type: application/json');\n\n$host = 'localhost';\n$dbname = 'your_db_name';\n$username = 'root'; // Change as needed\n$password = '';     // Change as needed\n\n// Establishing a database connection\ntry {\n    $pdo = new PDO("mysql:host=$host;dbname=$dbname;charset=utf8", $username, $password);\n} catch (PDOException $e) {\n    die(json_encode(['error' => 'Database error: ' . $e->getMessage()]));\n}\n\n$sql = "SELECT id, name, type, description FROM your_table";\n$where = [];\n$bindParams = [];\n\n// Get filters from GET request\n$searchId = isset($_GET['id']) && !empty(trim($_GET['id'])) ? trim($_GET['id']) : null;\nif ($searchId !== null) {\n    $where[] = "id LIKE :id";\n    $bindParams[':id'] = '%' . str_replace('%', '\%', $searchId) . '%';\n}\n\n$searchName = isset($_GET['name']) && !empty(trim($_GET['name'])) ? trim($_GET['name']) : null;\nif ($searchName !== null) {\n    $where[] = "name LIKE :name";\n    $bindParams[':name'] = '%' . str_replace('%', '\%', $searchName) . '%';\n}\n\n$searchType = isset($_GET['type']) && !empty(trim($_GET['type'])) ? trim($_GET['type']) : null;\nif ($searchType !== null) {\n    $where[] = "type LIKE :type";\n    $bindParams[':type'] = '%' . str_replace('%', '\%', $searchType) . '%';\n}\n\n$searchDescription = isset($_GET['description']) && !empty(trim($_GET['description'])) ? trim($_GET['description']) : null;\nif ($searchDescription !== null) {\n    $where[] = "description LIKE :description";\n    $bindParams[':description'] = '%' . str_replace('%', '\%', $searchDescription) . '%';\n}\n\n$order = isset($_GET['order']) && in_array($_GET['order'], ['id', 'name', 'type', 'description']) ? $_GET['order'] : 'id';\n$sort = isset($_GET['sort']) && ($_GET['sort'] === 'desc' || $_GET['sort'] === 'asc') ? $_GET['sort'] : 'asc';\n\nif (!empty($where)) {\n    $sql .= " WHERE " . implode(' AND ', $where);\n}\n\n$sql .= " ORDER BY `$order` $sort";\n\n// Pagination\n$limit = isset($_GET['limit']) && (int)$_GET['limit'] > 0 ? (int)$_GET['limit'] : 10;\n$page = isset($_GET['page']) && (int)$_GET['page'] > 0 ? (int)$_GET['page'] : 1;\n$start = ($page - 1) * $limit;\n\n$sql .= " LIMIT :start, :limit";\n$bindParams[':start'] = ['value' => $start, 'type' => PDO::PARAM_INT];\n$bindParams[':limit'] = ['value' => $limit, 'type' => PDO::PARAM_INT];\n\n$stmt = $pdo->prepare($sql);\nforeach ($bindParams as $param => $value) {\n    if (is_array($value)) {\n        $stmt->bindValue($param, $value['value'], $value['type']);\n    } else {\n        $stmt->bindValue($param, $value);\n    }\n}\n$stmt->execute();\n$results = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n$totalCountSql = "SELECT COUNT(*) as total_count FROM your_table";\nif (!empty($where)) {\n    $totalCountSql .= " WHERE " . implode(' AND ', $where);\n}\n\n$totalCountStmt = $pdo->prepare($totalCountSql);\nforeach ($bindParams as $param => $value) {\n    if (isset($value['value'])) {\n        $totalCountStmt->bindValue($param, $value['value'], $value['type']);\n    } else {\n        $totalCountStmt->bindValue($param, $value);\n    }\n}\n$totalCountStmt->execute();\n$totalCount = $totalCountStmt->fetch()['total_count'];\n\necho json_encode([\n    'data' => $results,\n    'total' => $totalCount\n]);\n?>