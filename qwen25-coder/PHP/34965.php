function encryptArray($array, $key) {\n    // Convert array to JSON string first\n    $plaintext = json_encode($array);\n    \n    // Define encryption method (AES-256-CBC chosen for simplicity)\n    $method = "aes-256-cbc";\n    \n    // Generate a secure random initialization vector\n    $iv_length = openssl_cipher_iv_length($method);\n    $iv = openssl_random_pseudo_bytes($iv_length);\n    \n    // Encrypt the data using the key and IV\n    $encryptedData = openssl_encrypt($plaintext, $method, $key, OPENSSL_RAW_DATA, $iv);\n\n    // Encode IV (for use in decryption) + the encrypted data to Base64 to make it a URL-safe string\n    return base64_encode($iv . $encryptedData);\n}\n\nfunction decryptArray($string, $key) {\n    // Decode from Base64 to get Binary Data back\n    $binaryData = base64_decode($string);\n\n    // Define encryption method (AES-256-CBC chosen for simplicity)\n    $method = "aes-256-cbc";\n\n    // Extract the IV and encrypted data\n    $iv_length = openssl_cipher_iv_length($method);\n    $iv = substr($binaryData, 0, $iv_length);\n    $encryptedData = substr($binaryData, $iv_length);\n\n    // Decrypt the data using the key and IV\n    $decryptedText = openssl_decrypt($encryptedData, $method, $key, OPENSSL_RAW_DATA, $iv);\n\n    // Convert JSON string back to array\n    return json_decode($decryptedText, true);\n}\n\n// Example usage:\n$key = 'your-very-long-and-random-key-for-aes256';\n$array = ['name' => 'John', 'age' => 30];\n\n$encryptedString = encryptArray($array, $key);\necho "Encrypted: " . $encryptedString . "\n";\n\n$decryptedArray = decryptArray($encryptedString, $key);\nprint_r($decryptedArray);