<?php\ntry {\n    $dbh = new PDO('pgsql:host=127.0.0.1;dbname=test', 'myuser', 'xxxxxx');\n    // Set error mode to exception so we can catch exceptions when they occur.\n    $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    $rollback = false;\n\n    $dbh->beginTransaction();\n\n    // Create the prepared statements\n    $insert_order = $dbh->prepare('INSERT INTO h_orders (id, id_customer, date, code) VALUES (?, ?, ?, ?)');\n    $insert_items = $dbh->prepare('INSERT INTO h_items (id, id_order, descr, price) VALUES (?, ?, ?, ?)');\n    $delete_order = $dbh->prepare('DELETE FROM p_orders WHERE id = ?');\n\n    // Move the orders from p_orders to h_orders (history)\n    $qeOrders = $dbh->query("SELECT id, id_customer, date, code FROM p_orders LIMIT 1");\n    while($rayOrder = $qeOrders->fetch(PDO::FETCH_ASSOC)){\n        try {\n            // Simulate a duplicate key error\n            $insert_order->execute(array('293', $rayOrder['id_customer'], $rayOrder['date'], $rayOrder['code']));\n        } catch (PDOException $e) {\n            // Handle exception (log it or set rollback flag)\n            var_dump($e->getMessage());\n            $rollback = true;\n        }\n        \n        // For each order, move the items too\n        try {\n            $qeItems = $dbh->query("SELECT id, id_order, descr, price FROM p_items WHERE id_order = '" . $rayOrder['id'] . "'");\n            while($rayItem = $qeItems->fetch(PDO::FETCH_ASSOC)){\n                $insert_items->execute(array($rayItem['id'], $rayItem['id_order'], $rayItem['descr'], $rayItem['price']));\n            }\n        } catch (PDOException $e) {\n            var_dump($e->getMessage());\n            $rollback = true;\n        }\n\n        // If everything is ok, delete the order from p_orders\n        try {\n            $delete_order->execute(array($rayOrder['id']));\n        } catch (PDOException $e) {\n            var_dump($e->getMessage());\n            $rollback = true;\n        }\n    }\n\n    if ($rollback) {\n        $dbh->rollBack();\n        echo "Transaction rolled back.";\n    } else {\n        $dbh->commit();\n        echo "Transaction committed.";\n    }\n\n} catch (PDOException $e) {\n    // Catch any other exceptions that may occur\n    var_dump($e->getMessage());\n}\n?>