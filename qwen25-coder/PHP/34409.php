<?php\n\nfunction replaceLineInFile($filePath, $searchString, $replacementLine) {\n    // Check if the file is writable\n    if (!is_writable($filePath)) {\n        throw new Exception("The file at {$filePath} is not writable.");\n    }\n\n    // Read the entire content of the file line by line into an array\n    $lines = file($filePath, FILE_IGNORE_NEW_LINES);\n\n    // Check if file reading was successful\n    if ($lines === false) {\n        throw new Exception("Failed to read from file {$filePath}.");\n    }\n\n    // Iterate over each line and replace the target line\n    foreach ($lines as &$line) {\n        if (strpos($line, $searchString) !== false) {\n            $line = $replacementLine;\n            break;  // Assuming only the first occurrence needs to be replaced\n        }\n    }\n\n    // Write the modified array back to the file\n    $result = file_put_contents($filePath, implode(PHP_EOL, $lines));\n\n    if ($result === false) {\n        throw new Exception("Failed to write to file {$filePath}.");\n    }\n}\n\n// Usage example\n$filePath = 'yourfile.txt';\n$searchString = '@parsethis';\n$replacementLine = 'new line content';\n\ntry {\n    replaceLineInFile($filePath, $searchString, $replacementLine);\n    echo "Line replaced successfully.";\n} catch (Exception $e) {\n    echo "Error: ", $e->getMessage();\n}\n?>