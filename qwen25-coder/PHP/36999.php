<?php\nfunction getFriendFeed($userId, $memcached) {\n    // Construct a cache key based on the user ID\n    $friendCacheKey = "friends_list_$userId";\n    $feedDataCacheKey = "feed_data_$userId";\n\n    // Check if friend list is in cache\n    if (($friendsList = $memcached->get($friendCacheKey)) === false) {\n        // Fetch from database and store in cache for an hour\n        $friendsList = fetchFriendsFromDB($userId);\n        $memcached->set($friendCacheKey, $friendsList, 3600); // Cache for 1 hour\n    }\n\n    // Check if feed data is in cache\n    if (($feedData = $memcached->get($feedDataCacheKey)) === false) {\n        // Fetch from database and store in cache for an hour\n        $feedData = fetchFeedDataFromDBUsersAndComments($friendsList);\n        $memcached->set($feedDataCacheKey, $feedData, 3600); // Cache for 1 hour\n    }\n\n    return $feedData;\n}\n\nfunction fetchFriendsFromDB($userId) {\n    // This function should query the database to get the list of friends IDs\n    // Example: SELECT friend_id FROM friends WHERE user_id = $userId\n    // For demonstration, let's assume it returns a static array\n    return [101, 202, 303]; // Example friend IDs\n}\n\nfunction fetchFeedDataFromDBUsersAndComments($friendsList) {\n    // This function should join the friends list with users and comments data in the database\n    // For demonstration, let's assume it returns a static array\n    return [\n        ['user_id' => 101, 'post' => 'Hello world!', 'comments' => []],\n        ['user_id' => 202, 'post' => 'Hi there!', 'comments' => ['Great post!']],\n    ]; // Example feed data\n}\n\n// Usage\n$memcached = new Memcached();\n$memcached->addServer('localhost', 11211);\n\n$userId = 99; // Replace with the actual user ID\n$feedData = getFriendFeed($userId, $memcached);\nprint_r($feedData);\n?>