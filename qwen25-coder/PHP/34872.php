<?php\n\nfunction validateInput($data) {\n    // Simple validation to strip HTML, SQL injection protection via prepared statements\n    $data = trim($data);\n    $data = stripslashes($data);\n    $data = htmlspecialchars($data);\n    return $data;\n}\n\nfunction createRecord($table, $data) {\n    global $pdo; // Assume PDO is configured earlier in your setup\n    $keys = array_keys($data);\n    $values = array_values($data);\n    \n    $placeholders = implode(", ", array_fill(0, count($keys), '?'));\n    $sql = "INSERT INTO $table (" . implode(', ', $keys) . ") VALUES ($placeholders)";\n    try {\n        $stmt = $pdo->prepare($sql);\n        return $stmt->execute($values);\n    } catch (Exception $e) {\n        return false;\n    }\n}\n\nfunction updateRecord($table, $data, $idColumn, $idValue) {\n    global $pdo; // Assume PDO is configured earlier in your setup\n    $set = [];\n    foreach ($data as $key => $val) {\n        $set[] = "$key = ?";\n    }\n\n    $sql = "UPDATE $table SET " . implode(', ', $set) . " WHERE $idColumn = ?";\n    try {\n        $stmt = $pdo->prepare($sql);\n        return $stmt->execute(array_merge(array_values($data), [$idValue]));\n    } catch (Exception $e) {\n        return false;\n    }\n}\n\nfunction getRecordById($table, $idColumn, $idValue) {\n    global $pdo; // Assume PDO is configured earlier in your setup\n    \n    $sql = "SELECT * FROM $table WHERE $idColumn = ?";\n    try {\n        $stmt = $pdo->prepare($sql);\n        $stmt->execute([$idValue]);\n        return $stmt->fetch(PDO::FETCH_ASSOC);\n    } catch (Exception $e) {\n        return false;\n    }\n}\n\n?>