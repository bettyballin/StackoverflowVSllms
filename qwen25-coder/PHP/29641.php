// In your SecurityController or wherever authentication handling happens\n\nuse Symfony\Bundle\FrameworkBundle\Controller\AbstractController;\nuse Symfony\Component\HttpFoundation\Request;\nuse Symfony\Component\Security\Http\Authentication\AuthenticationUtils;\n\nclass SecurityController extends AbstractController\n{\n    public function login(AuthenticationUtils $authenticationUtils)\n    {\n        // Get the login error if there is one\n        $error = $authenticationUtils->getLastAuthenticationError();\n        // getLastUsername() as that tends to be the field which most people remember\n        $lastUsername = $authenticationUtils->getLastUsername();\n\n        return $this->render('security/login.html.twig', array(\n            'last_username' => $lastUsername,\n            'error'         => $error,\n        ));\n    }\n\n    public function authenticate(Request $request)\n    {\n        // Store the requested URL in a session variable\n        if ($targetPath = $this->getTargetPath($request)) {\n            $this->storeTargetPathInSession($request, Symfony\Component\Security\Http\HttpUtils::generateUri($request, 'login'));\n            return new \Symfony\Component\HttpFoundation\RedirectResponse(Symfony\Component\Security\Http\HttpUtils::generateUri($request, 'login'));\n        }\n\n        // Handle user authentication logic here\n\n        // If authenticated successfully\n        if ($this->isAuthenticated()) {\n            // Retrieve the target path from the session if set or redirect to a default route\n            return $this->redirectToRoute($targetPath ? $targetPath : 'default_route');\n        }\n    }\n\n    private function getTargetPath(Request $request)\n    {\n        // Store the last URL an unauthenticated user tried to access\n        $previousUrl = $request->headers->get('referer');\n\n        if ($previousUrl) {\n            return parse_url($previousUrl, PHP_URL_PATH);\n        }\n\n        return null;\n    }\n\n    private function storeTargetPathInSession(Request $request, string $defaultRoute)\n    {\n        // If a target path is stored in the session, forward the user to that path after a successful login\n        if ($targetPath = $this->get('session')->get('_security.target_path')) {\n            return;\n        }\n\n        // Otherwise, redirect to the default route. In this case, it's set to the login page URI.\n        $request->getSession()->set('_security.target_path', Symfony\Component\Security\Http\HttpUtils::generateUri($request, $defaultRoute));\n    }\n}