<?php\n// open the db connection\n$db = new wpdb('user', 'pass', 'db', 'server');\n\n$today = '2009-06-21';\n$tomorrow  = date( 'Y-m-d', strtotime('+1 day') );\n$seven_days_ahead = date( 'Y-m-d', strtotime('+7 days') );\n$thirty_days_ahead = date( 'Y-m-d', strtotime('+30 days') );\n\necho '<div class="column first">';\n\nif ( ! empty($_REQUEST['date_range']) ) {\n    $date_range = mysql_real_escape_string($_REQUEST['date_range']);\n\n    switch( $date_range ) {\n        case 'all':\n            // Assuming all means from today onwards\n            displayEventsFromToDate($today, '9999-12-31');\n            break;\n\n        case 'next_7_days':\n            displayEventsFromToDate($today, $seven_days_ahead);\n            break;\n\n        case 'next_30_days':\n            displayEventsFromToDate($today, $thirty_days_ahead);\n            break;\n\n        default:\n            // You might want to handle this differently or use today as the default\n            displayEventsForDate($today);\n    }\n} else {\n    // no date selected, show todays events\n    displayEventsForDate($today);\n}\n\necho '</div> <!--/column-->';\n\nfunction displayEventsForDate($date) {\n    $days = convert_date_to_day_number( $date );\n    displayEventsFromDayNumbers($days);\n}\n\nfunction displayEventsFromToDate($from, $to) {\n    // Get all days between from and to date\n    $whereClause = sprintf("WHERE e.day_id BETWEEN (SELECT id FROM days WHERE day_date >= '%s') AND (SELECT id FROM days WHERE day_date <= '%s')", $from, $to);\n    $events = get_events($whereClause);\n\n    if ($events) {\n        // Assuming dates are ordered correctly\n        foreach ($events as $event) {\n            render_event($event);\n        }\n    } else {\n        echo 'No events';                            \n    }\n}\n\nfunction displayEventsFromDayNumbers($day_numbers) {\n    foreach ( $day_numbers as $day_number ) {\n        $where = sprintf( 'WHERE e.day_id = %s', $day_number );\n\n        $events = get_events( $where );\n\n        if ($events)\n        {\n            echo '<table class="results">';\n\n            render_day( $day_number );\n\n            foreach ($events as $event)\n            {\n                render_event($event);\n            }  \n            echo '</table>';\n        }\n    }\n}\n\nfunction convert_date_to_day_number( $date ) {\n    global $db;\n    $sql = "SELECT id FROM days WHERE day_date = '" . esc_sql($date) . "'";\n    return $db->get_col($sql);\n}\n\nfunction get_events($whereClause) {\n    global $db;\n    $sql = "SELECT * FROM events " . $whereClause; // Assuming you have an 'events' table\n    return $db->get_results($sql);\n}\n\nfunction render_day( $day_number ) {\n    global $db;\n\n    $sql = "SELECT\n                d.day_number,\n                DATE_FORMAT( d.day_date, '%W %e %M %Y' ) AS date,\n                DATE_FORMAT( d.day_date, '%b' ) AS month,\n                DATE_FORMAT( d.day_date, '%e' ) AS day\n            FROM days AS d\n            WHERE day_number = " . intval($day_number);\n\n    $day = $db->get_results($sql);\n\n    if (!empty($day)) {\n        $day = $day[0];\n        echo <<<EOD\n<tr class="day">\n    <th colspan="5">\n        <em class="date">\n            <abbr class="dtstart" title="$day->date">\n                <span>\n                    <span class="month">$day->month</span>\n                    <span class="day">$day->day</span>\n                </span>\n            </abbr>\n        </em>\n        $day->date\n        <span class="event-day">Day $day->day_number</span>\n    </th>\n</tr>\nEOD;\n    }\n}\n\nfunction render_event($event) {\n    global $db;\n\n    $output = <<<EOD\n<tr class="topic">\n    <td></td>\n    <td>{$event->start_time}</td>\n    <td>\n     <a href="?event_id={$event->id}">{$event->title}</a>   \n    </td>\n    <td>{$event->type}</td>\n    <td>\n       <span class="addr">{$event->place}</span>\n    </td>\n</tr>\nEOD;\n\n    echo $output;\n}\n?>