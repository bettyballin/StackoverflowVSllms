function findIslands($map) {\n    $rows = count($map);\n    if ($rows == 0) return [];\n    $cols = count($map[0]);\n    \n    $directions = [\n        [1, 0], [-1, 0],\n        [1, -1], [-1, 1],\n        [0, 1], [0, -1]\n    ];\n    \n    $visited = array_fill(0, $rows, array_fill(0, $cols, false));\n    \n    $islands = [];\n    \n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = 0; $j < $cols; $j++) {\n            if (!$visited[$i][$j] && isset($map[$i][$j]) && $map[$i][$j] !== 'water') { // Assuming not water means land\n                $queue = [[$i, $j]];\n                $visited[$i][$j] = true;\n                $island = [];\n                \n                while (!empty($queue)) {\n                    [$x, $y] = array_shift($queue);\n                    $island[] = [$x, $y];\n                    \n                    foreach ($directions as $dir) {\n                        $nx = $x + $dir[0];\n                        $ny = $y + $dir[1];\n                        \n                        // Check bounds and if it's land\n                        if ($nx >= 0 && $nx < $rows && $ny >= 0 && $ny < $cols &&\n                            !$visited[$nx][$ny] && isset($map[$nx][$ny]) && $map[$nx][$ny] !== 'water') {\n                            $queue[] = [$nx, $ny];\n                            $visited[$nx][$ny] = true;\n                        }\n                    }\n                }\n                \n                // Only count islands with more than one tile\n                if (count($island) > 1) {\n                    $islands[] = $island;\n                }\n            }\n        }\n    }\n    \n    return $islands; // List of all islands where each island is an array of coordinates\n}\n\n// Example usage:\n$map = [\n    ['land', 'water', 'land'],\n    ['land', 'land', 'land'],\n    ['water', 'land', 'water']\n];\n\n$islands = findIslands($map);\necho "Number of Islands: " . count($islands) . "\n";\nif (!empty($islands)) {\n    print_r($islands);\n} else {\n    echo "No islands detected.\n";\n}