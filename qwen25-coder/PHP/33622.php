function mapObjectProperties($object, $callback) {\n    // Get all properties of the object as an associative array\n    $properties = get_object_vars($object);\n    \n    // Apply the callback function to each property value\n    $mappedProperties = array_map($callback, $properties);\n    \n    // Reconstruct the object with mapped values\n    foreach ($mappedProperties as $property => $value) {\n        if (property_exists($object, $property)) {\n            $object->$property = $value;\n        }\n    }\n    \n    return $object;\n}\n\n// Example usage:\nclass SampleClass {\n    public $prop1 = "Hello";\n    public $prop2 = "World!";\n}\n\n$sampleObject = new SampleClass();\n$formattedObject = mapObjectProperties($sampleObject, 'strtoupper');\n\nprint_r($formattedObject);