<?php\n\nclass DatabaseManager {\n    private static ?DatabaseManager $instance = null;\n    private PDO $connection;\n\n    // Private constructor to prevent instantiation\n    private function __construct() {\n        try {\n            $this->connection = new PDO('mysql:host=localhost;dbname=test', 'username', 'password');\n            $this->connection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n        } catch (PDOException $e) {\n            die("Could not connect to the database: " . $e->getMessage());\n        }\n    }\n\n    // Private clone method to prevent cloning\n    private function __clone() {}\n\n    // Static method for getting an instance of the class\n    public static function getInstance(): DatabaseManager {\n        if (self::$instance === null) {\n            self::$instance = new DatabaseManager();\n        }\n        return self::$instance;\n    }\n\n    // Method to get a database connection\n    public function getConnection(): PDO {\n        return $this->connection;\n    }\n\n    // Destructor to close the database connection\n    public function __destruct() {\n        // Unset the instance and nullify it\n        $this->connection = null;\n        self::$instance = null;\n    }\n}\n\n// Usage:\n$dbManager = DatabaseManager::getInstance();\n$dbConnection = $dbManager->getConnection();\n\n// Perform your database operations using $dbConnection\n\n?>