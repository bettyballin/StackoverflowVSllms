abstract class DataFetcher {\n    private static $superglobals = [\n        'get' => '_GET',\n        'post' => '_POST',\n        // Add more if needed\n    ];\n\n    public static function get($key, $source = 'get') {\n        return self::fetchData($key, $source);\n    }\n\n    private static function fetchData($key, $source) {\n        // Check if the source is valid and map it to the corresponding superglobal\n        if (isset(self::$superglobals[$source])) {\n            $superglobal = ${self::$superglobals[$source]};\n            if (array_key_exists($key, $superglobal)) {\n                return $superglobal[$key];\n            }\n        }\n\n        // Return false if the key doesn't exist in the superglobal\n        return false;\n    }\n}\n\n// Example usage:\n$value = DataFetcher::get('id', 'get'); // Fetches $_GET['id']\n$valuePost = DataFetcher::get('data', 'post'); // Fetches $_POST['data']