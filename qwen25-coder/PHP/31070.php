<?php\n\nfunction largestCommonSubstring($str1, $str2) {\n    $m = strlen($str1);\n    $n = strlen($str2);\n\n    // Create a 2D array to store lengths of longest common suffixes\n    $LCSuff = array_fill(0, $m + 1, array_fill(0, $n + 1, 0));\n\n    $length = 0; // To store length of the longest common substring\n    $endIndex = 0; // To store ending index of the longest common substring in str1\n\n    // Build LCSuff[m+1][n+1] in bottom-up fashion\n    for ($i = 1; $i <= $m; $i++) {\n        for ($j = 1; $j <= $n; $j++) {\n            if ($str1[$i - 1] == $str2[$j - 1]) {\n                $LCSuff[$i][$j] = $LCSuff[$i - 1][$j - 1] + 1;\n                if ($LCSuff[$i][$j] > $length) {\n                    $length = $LCSuff[$i][$j];\n                    $endIndex = $i;\n                }\n            } else {\n                $LCSuff[$i][$j] = 0;\n            }\n        }\n    }\n\n    // If no common substring, return an empty string\n    if ($length == 0) {\n        return "";\n    }\n\n    // The longest common substring is from endIndex - length to endIndex in str1\n    return substr($str1, $endIndex - $length, $length);\n}\n\n// Example usage:\n$str1 = "abcde";\n$str2 = "abfce";\necho largestCommonSubstring($str1, $str2); // Output: "ab"\n?>