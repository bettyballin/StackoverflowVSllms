function save_pic($pic_url, $pk) {\n    $imageDir = './';\n    \n    // Check if pic_url is empty\n    if (!strlen($pic_url)) {\n        return "removed.jpg";\n    }\n    \n    // Check if directory exists and is writable\n    if (!is_dir($imageDir) || !is_writable($imageDir)) {\n        return "removed.jpg";\n    }\n\n    // Use fopen to test the URL\n    $handle = @fopen($pic_url, "r");\n    if (!$handle) {\n        return "removed.jpg";\n    }\n    fclose($handle);\n\n    // Fetch image data\n    $image = @file_get_contents($pic_url);\n    if (empty($image)) {\n        return "removed.jpg";\n    }\n\n    // Save the image file\n    $r = @file_put_contents($imageDir . $pk . ".jpg", $image);\n    if ($r === false) {\n        return "removed.jpg";\n    } else {\n        return "./$pk.jpg"; \n    }\n}\n\nfunction imageResize($imageURL, $maxWidth, $maxHeight) {\n    global $outputWidth, $outputHeight;\n\n    // Suppress warnings from getimagesize\n    @$size = @getimagesize($imageURL);\n\n    if ($size) {\n        $imageWidth  = $size[0];\n        $imageHeight = $size[1];\n\n        $wRatio = $imageWidth / $maxWidth;\n        $hRatio = $imageHeight / $maxHeight;\n\n        $maxRatio = max($wRatio, $hRatio);\n\n        if ($maxRatio > 1) {\n            $outputWidth  = $imageWidth / $maxRatio;\n            $outputHeight = $imageHeight / $maxRatio;\n        } else {\n            $outputWidth  = $imageWidth;\n            $outputHeight = $imageHeight;\n        }\n\n    } else {\n        // Log the error or handle it as needed\n        return false; // Return false to indicate failure\n    }\n}