<?php\nsession_start();\n\ninclude("connect.php");\n\n$timeout = 60 * 30;\n$fingerprint = md5($_SERVER['REMOTE_ADDR'] . $_SERVER['HTTP_USER_AGENT']);\n\nif(isset($_POST['userName'])) {\n    $user = filter_input(INPUT_POST, 'userName', FILTER_SANITIZE_STRING);\n    $password = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);\n\n    // Using prepared statements to prevent SQL injection\n    $stmt = $pdo->prepare("SELECT * FROM `users` WHERE username = ? AND password = ?");\n    $stmt->execute([$user, md5($password)]); // Note: MD5 is still not recommended for hashing passwords.\n    $matchingUser = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($matchingUser) {\n        if($matchingUser['inactive'] == 1){\n            $_SESSION['inactive'] = true;\n            $error = "Your e-mail Id has not been verified. Check your mail to verify your e-mail Id. However you'll be logged in to site with less privileges.";\n        }\n        $_SESSION['user'] = $user;\n        $_SESSION['lastActive'] = time();\n        $_SESSION['fingerprint'] = $fingerprint;\n    } else {\n        $error = "Incorrect username or password";\n    }\n} \n\nif ((isset($_SESSION['lastActive']) && (time() - $_SESSION['lastActive'] > $timeout)) \n|| (isset($_SESSION['fingerprint']) && $_SESSION['fingerprint'] !== $fingerprint)\n|| isset($_GET['logout'])) {\n    setcookie(session_name(), '', time()-3600, '/');\n    session_unset();\n    session_destroy();\n    header('Location: login.php'); // Redirect to prevent form resubmission\n    exit();\n} else {\n    session_regenerate_id(true); \n    $_SESSION['lastActive'] = time();\n    $_SESSION['fingerprint'] = $fingerprint;\n}\n?>