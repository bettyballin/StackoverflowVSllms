function findBetween($ar, $n) {\n    $low = 0;\n    $high = count($ar) - 1;\n\n    while ($low <= $high) {\n        $mid = intdiv($low + $high, 2);\n\n        if ($ar[$mid] == $n) {\n            // If n is exactly equal to one of the elements\n            return [$ar[$mid], $ar[$mid]];\n        } elseif ($mid > 0 && $ar[$mid - 1] < $n && $ar[$mid] > $n) {\n            // Found the range\n            return [$ar[$mid - 1], $ar[$mid]];\n        } elseif ($ar[$mid] < $n) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n\n    // If n is less than the first element or greater than the last\n    if ($n < $ar[0]) {\n        return [null, $ar[0]];\n    } elseif ($n > $ar[$high]) {\n        return [$ar[$high], null];\n    }\n\n    return []; // This case should not occur given the problem constraints\n}\n\n// Example usage:\n$ar = [5, 10, 15, 20];\n$n = 8;\n$result = findBetween($ar, $n);\necho "Number $n falls between: " . var_export($result, true); // Output: Number 8 falls between: array ( 0 => 5, 1 => 10, )