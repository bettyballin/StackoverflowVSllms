<?php\n// Database connection parameters\n$host = 'localhost';\n$dbname = 'your_db_name';\n$username = 'your_db_username';\n$password = 'your_db_password';\n\ntry {\n    // Connect to the MySQL server\n    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Assume repository name is passed via GET or POST\n    $repoName = isset($_GET['repo']) ? $_GET['repo'] : '';\n\n    // Query to check if the repository exists and the user is allowed to access it\n    $stmt = $pdo->prepare("SELECT path FROM repositories WHERE name = :name AND user_id = :user_id");\n    $stmt->execute([':name' => $repoName, ':user_id' => $_SESSION['user_id']]);\n    $repoData = $stmt->fetch();\n\n    if ($repoData) {\n        // Prepare the command to run hgweb.cgi\n        $command = '/path/to/hgweb.cgi';\n        $descriptorSpec = array(\n           0 => array("pipe", "r"),  // stdin is a pipe that the child will read from\n           1 => array("pipe", "w"),  // stdout is a pipe that the child will write to\n           2 => array("file", "/tmp/error-output.txt", "a") // stderr is a file to write to\n        );\n\n        $pipes = [];\n        // Open process with proc_open\n        $process = proc_open($command, $descriptorSpec, $pipes);\n\n        if (is_resource($process)) {\n            // Pass the repository path to hgweb.cgi through stdin\n            fwrite($pipes[0], "path=" . escapeshellarg($repoData['path']) . "\n");\n            fclose($pipes[0]);\n\n            // Read output from stdout of the process\n            $output = stream_get_contents($pipes[1]);\n            fclose($pipes[1]);\n\n            // Close process\n            proc_close($process);\n\n            // Output the result\n            echo $output;\n        }\n    } else {\n        die("Access denied or repository not found.");\n    }\n\n} catch (PDOException $e) {\n    die("Database connection failed: " . $e->getMessage());\n}\n?>