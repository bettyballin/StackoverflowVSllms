abstract class ParentObj {\n    protected $data; // Changed from private to protected\n\n    public function __construct(){\n        $this->data = array(1,2,3);\n        var_dump($this->data);\n\n        $this->method();\n    }\n\n    public function method(){\n        echo "ParentObj::method()\n";\n    }\n}\n\nclass ChildObj extends ParentObj {\n    public function __construct(){\n        parent::__construct(); // Calls the constructor of ParentObj\n        var_dump($this->data); // Now can access $data as it's protected\n    }\n\n    public function method(){ // This overrides the parent's method\n        echo "ChildObj::method()\n";\n    }\n}\n\n$child = new ChildObj();