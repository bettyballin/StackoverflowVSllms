function getAllAncestorGroups($userDN) {\n    $ldap = ldap_connect("your.server.com");\n    ldap_set_option($ldap, LDAP_OPT_REFERRALS, 0);\n    ldap_bind($ldap);\n\n    // Get all direct groups of the user\n    $attributes = ['memberof'];\n    $result = ldap_search($ldap, 'baseDN', "(distinguishedname=$userDN)", $attributes);\n    $entry = ldap_first_entry($ldap, $result);\n    \n    $directGroups = ldap_get_attributes($ldap, $entry, 'memberof');\n    unset($directGroups['count']);\n\n    // Use a queue to traverse the groups\n    $queue = new SplQueue();\n    foreach ($directGroups as $group) {\n        $queue->enqueue($group);\n    }\n\n    $allGroups = [];\n    while (!$queue->isEmpty()) {\n        $currentGroupDN = $queue->dequeue();\n\n        if (!in_array($currentGroupDN, $allGroups)) { // Avoid duplicates\n            $allGroups[] = $currentGroupDN;\n            $parentSearch = ldap_search($ldap, 'baseDN', "(distinguishedname=$currentGroupDN)", ['memberof']);\n            $parentEntry = ldap_first_entry($ldap, $parentSearch);\n            $parents = ldap_get_attributes($ldap, $parentEntry, 'memberof');\n            unset($parents['count']);\n\n            foreach ($parents as $parent) {\n                if (!in_array($parent, $allGroups)) { // Avoid duplicates\n                    $queue->enqueue($parent); // Add parent groups to queue for checking\n                }\n            }\n        }\n    }\n\n    ldap_close($ldap);\n    return array_unique($allGroups);\n}