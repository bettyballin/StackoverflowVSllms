function isBehindProxy() {\n    $headers = [\n        'HTTP_VIA',\n        'HTTP_X_FORWARDED_FOR',\n        'HTTP_FORWARDED_FOR',\n        'HTTP_X_FORWARDED',\n        'HTTP_FORWARDED',\n        'HTTP_CLIENT_IP',\n        'HTTP_FORWARDED_FOR_IP',\n        'VIA',\n        'X_FORWARDED_FOR',\n        'FORWARDED_FOR',\n        'X_FORWARDED',\n        'FORWARDED',\n        'CLIENT_IP',\n        'FORWARDED_FOR_IP',\n        'HTTP_PROXY_CONNECTION'\n    ];\n\n    foreach ($headers as $header) {\n        if (array_key_exists($header, $_SERVER)) {\n            return true;\n        }\n    }\n\n    // Check for Tor exit nodes\n    // Note: This requires an external service or IP list.\n    // Example using an API to check against a list of Tor nodes:\n    $ip = getUserIP();\n    $response = @file_get_contents("https://check.torproject.org/exit-addresses");\n    if (strpos($response, $ip) !== false) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction getUserIP() {\n    $ip = $_SERVER['REMOTE_ADDR'];\n    if (!empty($_SERVER['HTTP_CLIENT_IP'])) {\n        $ip = $_SERVER['HTTP_CLIENT_IP'];\n    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {\n        $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];\n    }\n    return $ip;\n}