class Bib {\n    protected $bibid;\n\n    public function __construct($new_bibid) {\n        if (!$this->bibid = $this->validateBibid($new_bibid)) {\n            throw new InvalidArgumentException('Invalid bibid provided.');\n        }\n        // Carry on with other stuff if valid bibid\n    }\n\n    private function validateBibid($test_bibid) {\n        // Call this method every time you get a bibid from the user\n        if (!is_int($test_bibid)) {\n            return false;\n        }\n        return (int)$test_bibid;\n    }\n}\n\ntry {\n    $bib = new Bib('612e436');\n    // Do what I intend to do with the object\n} catch (InvalidArgumentException $e) {\n    echo 'Error Message: ' . $e->getMessage();\n}