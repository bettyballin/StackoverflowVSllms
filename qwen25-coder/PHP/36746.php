<?php\nsession_start();\n\n// Assume a function generate_csrf_token() generates and stores the token in $_SESSION['csrf_token']\nif (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {\n    header('Content-Type: application/json');\n    echo json_encode(['success' => false, 'message' => 'Invalid CSRF token.']);\n    exit;\n}\n\n// Verify the user ID\nif (!isset($_POST['user_id']) || intval($_POST['user_id']) !== intval($_SESSION['user_id'])) {\n    header('Content-Type: application/json');\n    echo json_encode(['success' => false, 'message' => 'Invalid user ID.']);\n    exit;\n}\n\n// Process the vote (e.g., check if already voted, then save to database)\n$itemID = intval($_POST['item_id']);\n$vote = $_POST['vote'];\n\n// Check if the user has already voted on this item\nif (!hasAlreadyVoted($itemID, $_SESSION['user_id'])) {\n    // Save the vote in your database\n    saveVote($itemID, $_SESSION['user_id'], $vote);\n    echo json_encode(['success' => true]);\n} else {\n    echo json_encode(['success' => false, 'message' => 'You have already voted on this item.']);\n}\n\nfunction hasAlreadyVoted($itemId, $userId) {\n    // Check in the database if the user has already voted on this item\n    // Return true or false based on the result of your query\n}\n\nfunction saveVote($itemId, $userId, $vote) {\n    // Save the vote to the database with the provided item_id, user_id and vote direction\n}\n?>