class TextTransformer {\n    private $pattern;\n    private $replacement;\n\n    public function __construct($pattern, $replacement) {\n        $this->pattern = $pattern;\n        $this->replacement = $replacement;\n    }\n\n    public function transformText($text) {\n        // Use a closure to access the private method\n        return preg_replace_callback(\n            $this->pattern,\n            function ($matches) {\n                return $this->privateCallback($matches);\n            },\n            $text\n        );\n    }\n\n    private function privateCallback($matches) {\n        // Perform your text transformation using the matches\n        return strtoupper($matches[0]); // Example transformation\n    }\n}\n\n// Usage\n$transformer = new TextTransformer('/\bword\b/i', 'REPLACEMENT');\necho $transformer->transformText('This is a sample word.');