<?php\n\nclass Database {\n    private $connection;\n\n    public function __construct($host, $username, $password, $database) {\n        $this->connection = new mysqli($host, $username, $password, $database);\n        if ($this->connection->connect_error) {\n            die("Connection failed: " . $this->connection->connect_error);\n        }\n    }\n\n    public function query($query) {\n        $result = $this->connection->query($query);\n        if (!$result) {\n            die("Query failed: " . $this->connection->error);\n        }\n        return $result;\n    }\n}\n\n$db1 = new Database("localhost", "root", "password", "database1");\n$db2 = new Database("SERVER2", "root", "password", "database2");\n\n// Use prepared statements to prevent SQL injection\n$stmt1 = $db1->connection->prepare("SELECT * FROM users WHERE name = ?");\n$stmt1->bind_param("s", "Yifan");\n$stmt1->execute();\n$result1 = $stmt1->get_result();\n$row1 = $result1->fetch_assoc();\n\nvar_dump($row1);\n\n$stmt2 = $db2->connection->prepare("SELECT * FROM users WHERE name = ?");\n$stmt2->bind_param("s", "Yifan");\n$stmt2->execute();\n$result2 = $stmt2->get_result();\n$row2 = $result2->fetch_assoc();\n\nvar_dump($row2);\n?>