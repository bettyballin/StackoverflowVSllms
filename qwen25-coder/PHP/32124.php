require_once 'vendor/autoload.php';\n\nuse Swift_Mailer;\nuse Swift_SmtpTransport;\nuse Swift_Message;\n\nclass Petition {\n    private $transport, $mailer;\n\n    public function __construct() {\n        // Create the Transport\n        $this->transport = (new Swift_SmtpTransport('smtp.example.com', 587, 'tls'))\n            ->setUsername('your_email@example.com')\n            ->setPassword('your_password');\n\n        // Create the Mailer using your created Transport\n        $this->mailer = new Swift_Mailer($this->transport);\n    }\n\n    public function subscribe($name) {\n        if (!$this->validateName($name)) {\n            throw new Exception('Invalid name provided.');\n        }\n\n        // Store in database (not shown here for brevity)\n        $this->storeSignatureInDatabase($name);\n\n        // Send email\n        $message = (new Swift_Message('Petition Signature'))\n            ->setFrom(['noreply@example.com' => 'No Reply'])\n            ->setTo(['recipient@example.com'])\n            ->setBody("A new person signed the petition: {$name}");\n\n        if ($this->mailer->send($message)) {\n            echo "Signature saved and email sent successfully.";\n        } else {\n            throw new Exception('Email could not be sent.');\n        }\n    }\n\n    private function storeSignatureInDatabase($name) {\n        // Insert name into database (not shown here for brevity)\n    }\n\n    private function validateName($name) {\n        return is_string($name) && strlen(trim($name)) > 0;\n    }\n}\n\n// Usage\n$name = 'John Doe';\n$petition = new Petition();\n$petition->subscribe($name);