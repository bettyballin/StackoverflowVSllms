abstract class foo {\n    public function __get($name) {\n        // This will not be triggered for $var because it's private.\n        throw new Exception("Property {$name} is inaccessible.");\n    }\n}\n\nclass bar extends foo {\n    private $var = 'This is a private variable';\n\n    public function getVar() {\n        return $this->var;\n    }\n}\n\n$barInstance = new bar();\necho $barInstance->getVar(); // This works and outputs: This is a private variable