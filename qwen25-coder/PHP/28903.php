// Prepare the statement for better performance and security\n$stmt = $db->prepare("SELECT DISTINCT rev_page\n        FROM revision r\n        JOIN page p ON r.rev_page = p.page_id\n        WHERE p.page_namespace = 0\n        AND rev_user = ?\n        ORDER BY r.rev_timestamp DESC\n        LIMIT 3");\n\n// Bind the user ID parameter to prevent SQL injection\n$stmt->execute([$userId]);\n\n// Fetch all distinct article IDs from the results\n$last_edited_ids = $stmt->fetchColumn();\n\nif (!empty($last_edited_ids)) {\n    // Prepare a safe query using placeholders for each id\n    $placeholders = str_repeat('?,', count($last_edited_ids) - 1) . '?';\n    \n    $stmt2 = $db->prepare("SELECT page_title\n            FROM page\n            WHERE page_id IN ({$placeholders})");\n\n    // Execute the second query with the article IDs\n    $stmt2->execute($last_edited_ids);\n\n    // Fetch all titles and prepare links\n    while ($row = $stmt2->fetch(PDO::FETCH_ASSOC)) {\n        echo "<a href='http://your.wiki.url/wiki/" . htmlspecialchars($row['page_title'], ENT_QUOTES, 'UTF-8') . "'>" . htmlspecialchars($row['page_title'], ENT_QUOTES, 'UTF-8') . "</a><br>";\n    }\n}