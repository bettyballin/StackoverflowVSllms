function findTenLowestNumbersWithHeap(array $numbers) {\n    $heap = new SplMaxHeap();\n    \n    foreach ($numbers as $number) {\n        if ($heap->count() < 10 || $number < $heap->top()) {\n            $heap->insert($number);\n            \n            // If the heap size exceeds 10, remove the largest item\n            if ($heap->count() > 10) {\n                $heap->extract();\n            }\n        }\n    }\n\n    // Extract elements from the heap into an array and sort it\n    $result = [];\n    foreach ($heap as $number) {\n        $result[] = $number;\n    }\n    sort($result);\n\n    return $result;\n}\n\n// Example usage:\n$numbers = range(1, 1000); // An example with numbers from 1 to 1000\nshuffle($numbers); // Shuffle to ensure randomness\necho implode(", ", findTenLowestNumbersWithHeap($numbers)); // Output: The lowest 10 unique numbers