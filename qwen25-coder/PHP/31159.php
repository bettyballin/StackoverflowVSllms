// LoggerAspect.php\n   namespace Aspects;\n\n   use Go\Aop\Aspect;\n   use Go\Aop\Intercept\MethodInvocation;\n   use Go\Lang\Annotation\Before;\n   use Go\Lang\Annotation\After;\n\n   class LoggerAspect implements Aspect {\n\n       /**\n        * Logs method entry.\n        *\n        * @param MethodInvocation $invocation\n        * @Before("execution(public **->*(*))")\n        */\n       public function logEntry(MethodInvocation $invocation)\n       {\n           $args = json_encode($invocation->getArguments());\n           echo "Entering: {$invocation->getMethod()->getName()} with arguments: {$args}\n";\n       }\n\n       /**\n        * Logs method exit.\n        *\n        * @param MethodInvocation $invocation\n        * @After("execution(public **->*(*))")\n        */\n       public function logExit(MethodInvocation $invocation)\n       {\n           echo "Exiting: {$invocation->getMethod()->getName()}\n";\n       }\n   }