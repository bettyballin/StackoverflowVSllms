// Yahoo's API is not as straightforward as Google or Microsoft's. Here's a basic idea using GuzzleHttp and OAuth1.\n  \n  require 'vendor/autoload.php';\n  \n  $YahooConsumerKey = "YOUR_CONSUMER_KEY";\n  $YahooConsumerSecret = "YOUR_CONSUMER_SECRET";\n  \n  $provider = new \League\OAuth1\Client\Server\Yahoo([\n      'identifier' => $YahooConsumerKey,\n      'secret'     => $YahooConsumerSecret,\n      'callback_uri'   => "http://your-callback-uri.com"\n  ]);\n  \n  if (!isset($_GET['oauth_token']) || !isset($_GET['oauth_verifier'])) {\n      $temporaryCredentials = $provider->getTemporaryCredentials();\n      $_SESSION["token.secret"] = $temporaryCredentials->getSecret();\n      \n      $authUrl = $provider->getAuthorizationUrl($temporaryCredentials);\n      header('Location: ' . $authUrl);\n      die;\n  } else {\n      // Exchange credentials\n      $temporaryIdentifier = $_GET['oauth_token'];\n      $temporaryCredentials = new \League\OAuth1\Client\Credentials\TemporaryCredentials(\n          $temporaryIdentifier,\n          $_SESSION["token.secret"]\n      );\n      \n      $tokenCredentials = $provider->getTokenCredentials($temporaryCredentials, $_GET['oauth_verifier']);\n  \n      // Fetch contacts\n      try {\n          $url = 'https://social.yahooapis.com/v1/user/' . urlencode($tokenCredentials->getExtraParams()['xoauth_yahoo_guid']) . '/contacts?format=json';\n          \n          $headers = [\n              'Authorization: OAuth realm="yahooapis.com",'\n                      . ' oauth_consumer_key="' . $YahooConsumerKey . '",'\n                      . ' oauth_nonce="' . uniqid() . '",'\n                      . ' oauth_signature_method="HMAC-SHA1",'\n                      . ' oauth_timestamp="' . time() . '",'\n                      . ' oauth_token="' . $tokenCredentials->getIdentifier() . '",'\n                      . ' oauth_version="1.0"'\n          ];\n          \n          // Add signature to headers\n          // Note: You need to compute the OAuth signature based on these parameters, typically done using OAuth1 libraries.\n  \n          $client = new \GuzzleHttp\Client();\n          $response = $client->request('GET', $url, [\n              'headers' => $headers\n          ]);\n          \n          echo $response->getBody();\n      } catch (\League\OAuth1\Client\Exception\ExceptionInterface $e) {\n          echo "Error fetching contacts: " . $e->getMessage();\n      }\n  }