<?php\n\nfunction parseTemplate($template, $variables) {\n    // Match all the template tags in the format {@tag}\n    preg_match_all('/\{@([a-zA-Z0-9_]+)\}/', $template, $matches);\n\n    foreach ($matches[1] as $match) {\n        if (isset($variables[$match])) {\n            // Replace the tag with its corresponding variable value\n            $replacement = $variables[$match];\n            \n            // Check if replacement contains another tag and call recursively if needed\n            if (strpos($replacement, '{@') !== false) {\n                $replacement = parseTemplate($replacement, $variables);\n            }\n            \n            $template = str_replace("{@$match}", $replacement, $template);\n        } else {\n            // Handle the case where a variable is not defined (optional)\n            throw new Exception("Variable '$match' not found in variables array.");\n        }\n    }\n\n    return $template;\n}\n\n// Example usage\n$a = 'hello';\n$b = ' world';\n\n$variables = [\n    'a' => "{$a}{$b}",\n    'b' => $b\n];\n\n$input = 'This is my test {@a{@b}} string.';\n\n$output = parseTemplate($input, $variables);\n\necho $output; // Outputs: This is my test hello  world string.\n\n?>