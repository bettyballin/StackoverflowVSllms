function curlPing($url) {\n    // Ensure the URL includes a protocol\n    if (substr($url, 0, 4) !== "http") {\n        $url = "http://" . $url;\n    }\n\n    // Initialize cURL session\n    $ch = curl_init($url);\n    \n    // Set cURL options\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  // Return response as string\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // Follow redirects\n    curl_setopt($ch, CURLOPT_NOBODY, true);         // Don't fetch the body\n    curl_setopt($ch, CURLOPT_HEADER, true);          // Include headers in output\n    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);   // Timeout after 10 seconds\n    curl_setopt($ch, CURLOPT_TIMEOUT, 15);           // Total timeout 15 seconds\n\n    $startTime = microtime(true);\n    $response = curl_exec($ch);\n    $endTime = microtime(true);\n\n    // Check if there was an error during execution\n    if (curl_errno($ch)) {\n        return 'Error reaching domain: ' . curl_error($ch);\n    }\n\n    // Get stats from cURL\n    $info = curl_getinfo($ch);\n\n    // Close the connection\n    curl_close($ch);\n\n    // Calculate total time and bytes downloaded\n    $totalTime = $endTime - $startTime;\n    $bytesDownloaded = isset($info['download_content_length']) ? (int)$info['download_content_length'] : 0;\n\n    return 'Took: ' . number_format($totalTime, 4) . 's / Bytes: ' . $bytesDownloaded;\n}