function roundUpToNiceNumber($maxValue) {\n    // Bump up the chart's highest value by about 5%\n    $bumpedMax = $maxValue * 1.05;\n    \n    $optimalMax = PHP_INT_MAX; // Initialize with max possible integer value\n    $optimalTicks = 0;\n\n    for ($ticks = 5; $ticks <= 10; $ticks++) {\n        $candidateMax = bestTick($bumpedMax, $ticks);\n        \n        if ($candidateMax < $optimalMax && $candidateMax >= $maxValue) {\n            $optimalMax = $candidateMax;\n            $optimalTicks = $ticks;\n        }\n    }\n\n    return [\n        'chartHeight' => $optimalMax,\n        'numTicks' => $optimalTicks\n    ];\n}\n\nfunction bestTick($maxValue, $mostTicks) {\n    $minimum = $maxValue / $mostTicks;\n    $magnitude = pow(10, floor(log($minimum) / log(10)));\n    $residual = $minimum / $magnitude;\n\n    if ($residual > 5) {\n        return 10 * $magnitude * ceil($maxValue / (10 * $magnitude));\n    } elseif ($residual > 2) {\n        return 5 * $magnitude * ceil($maxValue / (5 * $magnitude));\n    } elseif ($residual > 1) {\n        return 2 * $magnitude * ceil($maxValue / (2 * $magnitude));\n    } else {\n        return $magnitude * ceil($maxValue / $magnitude);\n    }\n}\n\n// Example usage\n$maxValue = 123;\n$result = roundUpToNiceNumber($maxValue);\necho "Optimal Chart Height: {$result['chartHeight']}, Number of Ticks: {$result['numTicks']}";