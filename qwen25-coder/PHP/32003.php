class html {\n    public static function __callstatic($name, $arguments) {\n        // The first argument is the content, the second (optional) is an array of attributes\n        $content = isset($arguments[0]) ? $arguments[0] : '';\n        $attributes = isset($arguments[1]) && is_array($arguments[1]) ? $arguments[1] : [];\n\n        return new html_tag($name, $content, $attributes);\n    }\n}\n\nclass html_tag {\n    private $tag;\n    private $content;\n    private $attributes;\n\n    public function __construct($tag, $content = '', $attributes = []) {\n        $this->tag = $tag;\n        $this->content = $content;\n        $this->attributes = $attributes;\n    }\n\n    public function render() {\n        // Build the attribute string\n        $attr_str = '';\n        foreach ($this->attributes as $key => $value) {\n            if (!is_int($key)) { // Key should not be an integer (numeric index)\n                $attr_str .= " {$key}=\"".htmlentities($value)."\"";\n            }\n        }\n\n        return "<{$this->tag}{$attr_str}>{$this->content}</{$this->tag}>";\n    }\n}\n\n// Usage\n$page = new html_page('My wonderful page');\n$a_tag = html::a('Click Here', ['href' => 'http://example.com']);\n$p_tag = html::p('It works', ['id' => 'helloworld', 'class' => 'somecssclass']);\n\n$page->add_contents($p_tag);\n$page->add_contents($a_tag);\n\necho $page->render();