class Animal {\n    protected $id;\n    protected $legs;\n    protected $height;\n\n    // Private constructor to prevent instantiation outside the class\n    private function __construct() {}\n\n    // Static factory method\n    public static function create($type, $id) {\n        switch ($type) {\n            case 'dog':\n                return new Dog($id);\n            case 'cat':\n                return new Cat($id);\n            case 'mouse':\n                return new Mouse($id);\n            default:\n                throw new InvalidArgumentException("Unknown animal type: $type");\n        }\n    }\n}\n\nclass Dog extends Animal {\n    public function __construct($id) {\n        parent::__construct();\n        $this->id = $id;\n        $this->legs = 4;\n        $this->height = 1;\n    }\n}\n\n// Similarly, define Cat and Mouse classes\nclass Cat extends Animal {\n    public function __construct($id) {\n        parent::__construct();\n        $this->id = $id;\n        $this->legs = 4;\n        $this->height = 0.5;\n    }\n}\n\nclass Mouse extends Animal {\n    public function __construct($id) {\n        parent::__construct();\n        $this->id = $id;\n        $this->legs = 4;\n        $this->height = 0.2;\n    }\n}\n\n// Usage\n$animal = Animal::create('dog', 12);