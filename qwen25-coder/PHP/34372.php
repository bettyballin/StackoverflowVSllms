function parseRule($rule, $translate) {\n    // Generate a hash for the rule (assuming all rules are unique)\n    $hash = md5($rule);\n\n    // Use preg_replace_callback to find and replace each [CODE] instance\n    $result = preg_replace_callback('/\[(.*?)\]/', function ($matches) use ($translate, $hash) {\n        static $offset = 0; // Static variable to keep track of the offset\n\n        // Extract the code from matches\n        $code = $matches[1];\n\n        // Translate the code into a class name if it exists in the translate array\n        $className = isset($translate[$code]) ? $translate[$code] : '';\n\n        // Create the replacement string\n        $replacement = '<span class="' . htmlspecialchars($className) . '" unique="' . htmlspecialchars($hash) . '" offset="' . htmlspecialchars((string)$offset) . '">[' . htmlspecialchars($code) . ']</span>';\n\n        // Increment the offset for the next match\n        $offset++;\n\n        return $replacement;\n    }, $rule);\n\n    return $result;\n}\n\n// Example usage\n$translate = array(\n    'XXX' => 'gen-string-input',\n    'PN' => 'gen-positivenumber-input',\n    'N' => 'gen-number-input'\n);\n\n$rule1 = "Rule 1: Do [XXX] when [PN] greater than [N]";\n$parsedRule1 = parseRule($rule1, $translate);\necho htmlspecialchars_decode($parsedRule1);\n\n// Output should be:\n// Rule 1: Do <span class="gen-string-input" unique="[md5]" offset="0">[XXX]</span> when <span class="gen-positivenumber-input" unique="[md5]" offset="1">[PN]</span> greater than <span class="gen-number-input" unique="[md5]" offset="2">[N]</span>