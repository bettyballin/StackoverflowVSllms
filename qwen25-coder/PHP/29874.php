interface FileTransferInterface {\n    public function connect($host, $username, $password);\n    public function downloadFile($remotePath, $localPath);\n    public function uploadFile($localPath, $remotePath);\n}\n\nclass SFTPClient implements FileTransferInterface {\n    private $sftp;\n\n    public function __construct() {\n        $this->sftp = new \phpseclib\Net\SFTP('default_host');\n    }\n\n    public function connect($host, $username, $password) {\n        $this->sftp = new \phpseclib\Net\SFTP($host);\n        if (!$this->sftp->login($username, $password)) {\n            throw new Exception("SFTP login failed");\n        }\n    }\n\n    public function downloadFile($remotePath, $localPath) {\n        return $this->sftp->get($remotePath, $localPath);\n    }\n\n    public function uploadFile($localPath, $remotePath) {\n        return $this->sftp->put($remotePath, $localPath);\n    }\n}\n\nclass FTPClient implements FileTransferInterface {\n    private $ftp;\n\n    public function connect($host, $username, $password) {\n        $this->ftp = ftp_connect($host);\n        if (!ftp_login($this->ftp, $username, $password)) {\n            throw new Exception("FTP login failed");\n        }\n    }\n\n    public function downloadFile($remotePath, $localPath) {\n        return ftp_get($this->ftp, $localPath, $remotePath, FTP_BINARY);\n    }\n\n    public function uploadFile($localPath, $remotePath) {\n        return ftp_put($this->ftp, $remotePath, $localPath, FTP_BINARY);\n    }\n}\n\n// Example usage\ntry {\n    $client = new SFTPClient();\n    $client->connect('sftp.example.com', 'username', 'password');\n    $client->downloadFile('/path/to/remote/file.txt', '/local/path/to/save/file.txt');\n} catch (Exception $e) {\n    echo "Error: " . $e->getMessage();\n}