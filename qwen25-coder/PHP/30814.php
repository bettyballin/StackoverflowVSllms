<?php\nfunction rotateAndCropImage($sourcePath, $destinationPath, $degrees) {\n    // Load the source image\n    $sourceImage = imagecreatefromjpeg($sourcePath);\n    if ($sourceImage === false) {\n        throw new Exception("Failed to load image.");\n    }\n\n    // Get dimensions of the original image\n    $width = imagesx($sourceImage);\n    $height = imagesy($sourceImage);\n\n    // Rotate the image\n    $rotatedImage = imagerotate($sourceImage, $degrees, 0);\n    if ($rotatedImage === false) {\n        throw new Exception("Failed to rotate image.");\n    }\n\n    // Get dimensions of the rotated image\n    $newWidth = imagesx($rotatedImage);\n    $newHeight = imagesy($rotatedImage);\n\n    // Calculate offsets for center cropping\n    $offsetX = ($newWidth - $width) / 2;\n    $offsetY = ($newHeight - $height) / 2;\n\n    // Create a new true color image with the same size as the original image\n    $croppedImage = imagecreatetruecolor($width, $height);\n    if ($croppedImage === false) {\n        throw new Exception("Failed to create true color image.");\n    }\n\n    // Crop the rotated image back to the original dimensions\n    imagecopy($croppedImage, $rotatedImage, 0, 0, $offsetX, $offsetY, $width, $height);\n\n    // Save the cropped image\n    if (!imagejpeg($croppedImage, $destinationPath)) {\n        throw new Exception("Failed to save the cropped image.");\n    }\n\n    // Free up memory\n    imagedestroy($sourceImage);\n    imagedestroy($rotatedImage);\n    imagedestroy($croppedImage);\n}\n\n// Usage example:\ntry {\n    rotateAndCropImage('input.jpg', 'output.jpg', 30); // Rotate by 30 degrees\n} catch (Exception $e) {\n    echo "Error: " . $e->getMessage();\n}\n?>