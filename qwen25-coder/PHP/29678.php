<?php\n\n// Include Smarty libraries (assuming you have installed Smarty via Composer)\nrequire 'vendor/autoload.php';\n\nuse Smarty\Smarty;\n\n// Initialize Smarty\n$smarty = new Smarty();\n$smarty->compile_check = Smarty::COMPILECHECK_OFF;\n$smarty->force_compile = false;\n$smarty->caching = Smarty::CACHING_OFF; // or use CACHING_LIFETIME_CURRENT for caching\n\n// Assign data to the template (this is just an example)\n$articles = [];\nfor ($i = 0; $i < 100; $i++) {\n    $articles[] = [\n        'title' => "Article Title {$i}",\n        'content' => "This is a sample content for article {$i}.",\n        'author' => "Author {$i}"\n    ];\n}\n\n$smarty->assign('articles', $articles);\n\n// Smarty template setup\n$tpl_content_smarty = "\n<ul>\n{foreach item=article from=\$articles}\n  <li><strong>{$article.title}</strong> by {$article.author}<p>{$article.content}</p></li>\n{/foreach}\n</ul>\n";\n\n// Save Smarty template to a file\nfile_put_contents('tpl_test.tpl', $tpl_content_smarty);\n\n// Plain PHP equivalent setup\n$tpl_content_php = '<?php \n$articles = $this->get(\'articles\');\n?>\n<ul>\n<?php foreach ($articles as $article): ?>\n  <li><strong><?php echo htmlspecialchars($article["title"], ENT_QUOTES, "UTF-8"); ?></strong> by <?php echo htmlspecialchars($article["author"], ENT_QUOTES, "UTF-8"); ?><p><?php echo nl2br(htmlspecialchars($article["content"], ENT_QUOTES, "UTF-8")); ?></p></li>\n<?php endforeach; ?>\n</ul>\n';\n\n// Save PHP template to a file\nfile_put_contents('tpl_test.php', $tpl_content_php);\n\n// Benchmark Smarty rendering time\nob_start();\n$start_time_smarty = microtime(true);\nfor ($i = 0; $i < 1000; $i++) {\n    $smarty->display('tpl_test.tpl');\n}\n$end_time_smarty = microtime(true);\n$output_smarty = ob_get_contents();\nob_end_clean();\n\n// Benchmark PHP rendering time\nob_start();\n$start_time_php = microtime(true);\nfor ($i = 0; $i < 1000; $i++) {\n    include 'tpl_test.php';\n}\n$end_time_php = microtime(true);\n$output_php = ob_get_contents();\nob_end_clean();\n\necho "Smarty execution time: " . number_format(($end_time_smarty - $start_time_smarty), 4) . " seconds.\n";\necho "PHP execution time: " . number_format(($end_time_php - $start_time_php), 4) . " seconds.\n";\n\n// Make sure outputs are identical for comparison\nif ($output_smarty === $output_php) {\n    echo "Both templates rendered the same output.\n";\n} else {\n    echo "Templates rendered different outputs! Something went wrong.\n";\n}