// Define a trait with common invitation functionality\ntrait InvitationTrait {\n    public function sendInvitation() {\n        // Common logic for sending an invitation\n    }\n\n    public function formatInvitationContent() {\n        // Common logic for formatting invitation content\n    }\n}\n\n// Base class for all message types\nclass Message {\n    protected $content;\n\n    public function setContent($content) {\n        $this->content = $content;\n    }\n\n    public function getContent() {\n        return $this->content;\n    }\n}\n\n// TextMessage inherits from Message\nclass TextMessage extends Message {\n    public function sendMessage() {\n        // Logic to send a text message\n    }\n}\n\n// EmailMessage inherits from Message\nclass EmailMessage extends Message {\n    public function sendEmail() {\n        // Logic to send an email message\n    }\n}\n\n// InvitationTextMessage combines functionality from TextMessage and InvitationTrait\nclass InvitationTextMessage extends TextMessage {\n    use InvitationTrait;\n\n    public function sendTextInvitation() {\n        $this->formatInvitationContent();\n        $this->sendMessage(); // Uses parent method from TextMessage\n    }\n}\n\n// InvitationEmailMessage combines functionality from EmailMessage and InvitationTrait\nclass InvitationEmailMessage extends EmailMessage {\n    use InvitationTrait;\n\n    public function sendEmailInvitation() {\n        $this->formatInvitationContent();\n        $this->sendEmail(); // Uses parent method from EmailMessage\n    }\n}