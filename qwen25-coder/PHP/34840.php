<?php\n\nfunction getVideoMetadata($filePath) {\n    $cmd = "ffmpeg -i \"$filePath\" 2>&1";\n    exec($cmd, $output);\n\n    foreach ($output as $line) {\n        if (preg_match('/(\d+)x(\d+)/', $line, $matches)) {\n            return [\n                'width' => (int)$matches[1],\n                'height' => (int)$matches[2]\n            ];\n        }\n    }\n\n    throw new Exception("Unable to extract resolution from metadata.");\n}\n\nfunction calculateOutputSettings($originalWidth, $originalHeight) {\n    $targetWidth = 640;\n    $targetHeight = 480;\n\n    $originalAspectRatio = $originalWidth / $originalHeight;\n    $targetAspectRatio = $targetWidth / $targetHeight;\n\n    if (abs($originalAspectRatio - $targetAspectRatio) < 0.01) {\n        // Aspect ratio is close to 4:3\n        return [$targetWidth, $targetHeight];\n    } elseif ($originalAspectRatio > $targetAspectRatio) {\n        // Wide aspect ratio\n        $newHeight = round($originalHeight / $originalWidth * $targetWidth);\n        return [$targetWidth, $newHeight];\n    } else {\n        // Tall aspect ratio\n        $newWidth = round($originalWidth / $originalHeight * $targetHeight);\n        return [$newWidth, $targetHeight];\n    }\n}\n\n$originalVideoPath = "path/to/original/video.mp4";\n$convertedVideoPath = "path/to/converted/video.flv";\n\ntry {\n    // Step 1: Get metadata\n    $metadata = getVideoMetadata($originalVideoPath);\n    $width = $metadata['width'];\n    $height = $metadata['height'];\n\n    // Step 2: Calculate output settings\n    list($outputWidth, $outputHeight) = calculateOutputSettings($width, $height);\n\n    // Step 3: Convert the video with calculated dimensions and padding\n    $cmd = "ffmpeg -i \"$originalVideoPath\" -ab 96k -b:v 700k -ar 44100 ";\n    if ($outputWidth != 640 || $outputHeight != 480) {\n        $padLeftRight = (640 - $outputWidth) / 2;\n        $padTopBottom = (480 - $outputHeight) / 2;\n        $cmd .= "-vf \"scale=$outputWidth:$outputHeight,pad=640:480:$padLeftRight:$padTopBottom\" ";\n    }\n    $cmd .= "-acodec mp3 \"$convertedVideoPath\"";\n\n    exec($cmd, $output);\n\n} catch (Exception $e) {\n    echo "Error: " . $e->getMessage();\n}\n?>