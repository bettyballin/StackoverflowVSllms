<?php\n\nfunction create_page($title, $content, $user) {\n    global $pdo;\n    \n    // Start transaction\n    $pdo->beginTransaction();\n    \n    try {\n        // Insert new page into wiki_pages\n        $stmt = $pdo->prepare("INSERT INTO wiki_pages (title) VALUES (:title)");\n        $stmt->execute([':title' => $title]);\n        \n        $page_id = $pdo->lastInsertId();\n        \n        // Create first version in wiki_versions\n        $versionStmt = $pdo->prepare("INSERT INTO wiki_versions (page_id, content, edited_by) VALUES (:page_id, :content, :edited_by)");\n        $versionStmt->execute([':page_id' => $page_id, ':content' => $content, ':edited_by' => $user]);\n        \n        // Update current_version in wiki_pages\n        $updateStmt = $pdo->prepare("UPDATE wiki_pages SET current_version = 1 WHERE page_id = :page_id");\n        $updateStmt->execute([':page_id' => $page_id]);\n        \n        // Commit transaction\n        $pdo->commit();\n    } catch (Exception $e) {\n        // Rollback on exception\n        $pdo->rollBack();\n        throw $e;\n    }\n}\n\nfunction edit_page($title, $new_content, $user) {\n    global $pdo;\n    \n    // Get page and current version\n    $stmt = $pdo->prepare("SELECT * FROM wiki_pages WHERE title = :title");\n    $stmt->execute([':title' => $title]);\n    $page = $stmt->fetch();\n    \n    if ($page) {\n        // Start transaction\n        $pdo->beginTransaction();\n        \n        try {\n            // Create new version in wiki_versions with incremented version number\n            $versionStmt = $pdo->prepare("INSERT INTO wiki_versions (page_id, content, edited_by) VALUES (:page_id, :content, :edited_by)");\n            $versionStmt->execute([\n                ':page_id' => $page['page_id'],\n                ':content' => $new_content,\n                ':edited_by' => $user\n            ]);\n            \n            // Update current_version in wiki_pages\n            $updateStmt = $pdo->prepare("UPDATE wiki_pages SET current_version = current_version + 1 WHERE page_id = :page_id");\n            $updateStmt->execute([':page_id' => $page['page_id']]);\n            \n            // Commit transaction\n            $pdo->commit();\n        } catch (Exception $e) {\n            // Rollback on exception\n            $pdo->rollBack();\n            throw $e;\n        }\n    }\n}\n\nfunction get_page($title, $version = null) {\n    global $pdo;\n    \n    // Get page and current version or specified version\n    if ($version === null) {\n        $stmt = $pdo->prepare("SELECT content FROM wiki_versions WHERE page_id = (SELECT page_id FROM wiki_pages WHERE title = :title) AND version_id = (SELECT current_version FROM wiki_pages WHERE title = :title)");\n    } else {\n        $stmt = $pdo->prepare("SELECT content FROM wiki_versions WHERE page_id = (SELECT page_id FROM wiki_pages WHERE title = :title) AND version_id = :version");\n        $stmt->bindParam(':version', $version, PDO::PARAM_INT);\n    }\n    \n    $stmt->bindParam(':title', $title);\n    $stmt->execute();\n    return $stmt->fetchColumn();\n}\n\nfunction get_page_versions($title) {\n    global $pdo;\n    \n    // Get all versions of a page\n    $stmt = $pdo->prepare("SELECT version_id, created_at, edited_by FROM wiki_versions WHERE page_id = (SELECT page_id FROM wiki_pages WHERE title = :title)");\n    $stmt->bindParam(':title', $title);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n}\n\n?>