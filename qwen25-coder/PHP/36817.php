<?php\nsession_start();\nrequire_once($_SERVER['DOCUMENT_ROOT'].'/config.php');\nrequire_once(SITE_ROOT.'includes/exceptions.php');\nrequire_once(SITE_ROOT.'data/model.php');\n\nclass Auth extends Model\n{\n    function isUserLoggedIn()\n    {\n        return isset($_SESSION['user_id']);\n    }\n\n    static function redirectToLogin()\n    {\n        header("Location: http://". DOMAIN .APP_DIR . "index.php?action=login");\n        exit(); // Ensure to terminate the script after redirection\n    }\n\n    static function redirectToMain()\n    {\n        header("Location: http://". DOMAIN . APP_DIR . "index.php?action=main");\n        exit(); // Ensure to terminate the script after redirection\n    }\n\n    static function login($user)\n    {\n        try\n        {\n            $db = parent::getConnection();\n            $username = $user->getUsername();\n\n            // Prepared statement to prevent SQL injection\n            $stmt = $db->prepare("SELECT id, password FROM users WHERE username = ?");\n            $stmt->bind_param("s", $username);\n            $stmt->execute();\n            $result = $stmt->get_result();            \n\n            if ($result->num_rows === 0) {\n                throw new Exception('There was a problem logging you in', EX_LOGIN_ERROR);\n            }\n\n            $row = $result->fetch_assoc();\n\n            // Verify the password using hashed passwords\n            if (password_verify($user->getPassword(), $row['password'])) {\n                $_SESSION['user_id'] = $row['id'];\n            } else {\n                throw new Exception('There was a problem logging you in', EX_LOGIN_ERROR);\n            }\n\n        }\n        catch(Exception $e){\n            throw $e;\n        }\n    }\n\n    static function logout()\n    {\n        session_unset(); // Unset all session variables\n        session_destroy(); // Destroy the session\n    }\n}\n?>