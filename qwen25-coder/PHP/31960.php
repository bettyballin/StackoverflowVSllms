use simple_html_dom;\n\nclass ArticleParser {\n    private $articles = [];\n\n    public function parseArticles($htmlContent) {\n        $dom = str_get_html($htmlContent);\n        \n        // Define a callback that processes each article node\n        $callback = function ($element) {\n            $this->processArticle($element);\n        };\n\n        // Set the callback for handling article elements\n        $dom->set_callback($(callback));\n        \n        // Assuming articles are in div tags with class 'article'\n        foreach($dom->find('div.article') as $article) {\n            $this->processArticle($article); // Manually call process if not setting callback properly\n        }\n        \n        // Optionally unset to free memory\n        $dom->clear();\n        unset($dom);\n\n        return $this->articles;\n    }\n\n    private function processArticle(simple_html_dom_element $element) {\n        $title = $element->find('h2.title', 0)->plaintext ?? '';\n        $date = $element->find('span.date', 0)->plaintext ?? '';\n        $description = $element->find('p.description', 0)->plaintext ?? '';\n        $image = $element->find('img', 0)->src ?? '';\n\n        $this->articles[] = [\n            'title' => $title,\n            'date' => $date,\n            'description' => $description,\n            'image' => $image\n        ];\n    }\n}\n\n// Usage example:\n$htmlContent = file_get_contents('your_articles_page.html');\n$parser = new ArticleParser();\n$articlesData = $parser->parseArticles($htmlContent);\nprint_r($articlesData);