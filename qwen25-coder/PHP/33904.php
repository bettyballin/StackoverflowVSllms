class WeightCalculator {\n    private $data = [];\n    private $universe = 0;\n\n    function add($data, $probability) {\n        $x = count($this->data); // Correctly get the index\n        $this->data[$x] = new stdClass();\n        $this->data[$x]->value = $data;\n        $this->universe += $this->data[$x]->probability = abs($probability);\n    }\n\n    function get() {\n        if (!$this->universe) {\n            return null;\n        }\n        // Corrected the random number range\n        $x = mt_rand(0, $this->universe - 1);\n        $max = 0;\n\n        foreach ($this->data as $item) {\n            $max += $item->probability;\n            if ($x < $max) {\n                return $item->value;\n            }\n        }\n\n        // Fallback return (should never hit due to logic above)\n        return null;\n    }\n}\n\n$object = new WeightCalculator();\n$object->add('test1', 10);\n$object->add('test2', 20);\n$object->add('test3', 30);\n$object->add('test4', 40);\n\n// Example usage\necho $object->get();