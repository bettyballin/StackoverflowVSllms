class LoggerSingleton {\n    private static $instance = null;\n\n    private function __construct() {}\n\n    public static function getInstance() {\n        if (self::$instance === null) {\n            // Initialize the logger only once\n            self::$instance = Log::singleton('file', '/path/to/logfile.log', 'identifier');\n        }\n        return self::$instance;\n    }\n\n    public static function log($level, $message) {\n        $logger = self::getInstance();\n        $logger->log($level, $message);\n    }\n}\n\n// Usage\nLoggerSingleton::log(LOG_INFO, "This is an informational message.");\n\nfunction someFunction() {\n    LoggerSingleton::log(LOG_DEBUG, "Debugging from some function.");\n}