abstract class data_abstract {\n    protected $data;\n\n    public function __construct() {\n        $tableName = 'table_' . strtolower(basename(str_replace('\\', '/', get_class($this))));\n        $this->data = self::fetchDataFromTable($tableName);\n    }\n\n    private static function fetchDataFromTable($tableName) {\n        // Assuming DB is a connection object and has a query method\n        return DB::query('SELECT * FROM ' . $tableName); \n    }\n}\n\nclass person extends data_abstract {\n    public function __construct() {\n        parent::__construct();\n        // Additional person-specific initialization can go here\n    }\n}\n\nclass student extends person {\n    public function __construct() {\n        parent::__construct();\n        $studentData = self::fetchDataFromTable('table_student');\n        $this->data = array_merge($this->data, $studentData);\n        // Merges the student-specific data with parent (person) data\n    }\n}\n\n// Example usage:\n$studentInstance = new student();