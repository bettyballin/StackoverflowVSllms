class Test {\n    public function testOut($methodName) {\n        // Use call_user_func_array if parameters need to be passed dynamically\n        $args = func_get_args();\n        array_shift($args); // Remove the first argument which is the method name\n\n        // Check if the method exists and is callable\n        if (method_exists($this, $methodName) && is_callable([$this, $methodName])) {\n            call_user_func_array([$this, $methodName], $args);\n        } else {\n            echo "Method does not exist or is not callable.";\n        }\n    }\n\n    private function a() {\n        echo("a");\n    }\n\n    private function b($param = null) {\n        if ($param) {\n            echo $param;\n        } else {\n            echo "b";\n        }\n    }\n}\n\n$testObj = new Test();\n$testObj->testOut("a");\necho "\n";\n$testObj->testOut("b", "ParameterPassedToB");