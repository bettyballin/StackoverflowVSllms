/** @test */\npublic function testLoadFile()\n{\n    // Set up a custom error handler to convert errors to exceptions\n    set_error_handler(function ($errno, $errstr) {\n        // Convert only user-generated warnings\n        if (error_reporting() & $errno && ($errno === E_USER_WARNING)) {\n            throw new \ErrorException($errstr, 0, $errno);\n        }\n        return false; // Do not execute PHP internal error handler\n    });\n\n    try {\n        $result = load_file('/some/non-existent/file');\n        // If no exception is thrown, check the result\n        $this->assertFalse($result);\n    } catch (\ErrorException $e) {\n        // Verify that an error was triggered as expected\n        $this->assertEquals("file /some/non-existent/file does not exist", $e->getMessage());\n        // Optionally, assert that the method returned false\n        $this->assertFalse(false); // Or use a variable if you want to test actual return value in catch block\n    } finally {\n        // Restore the original error handler\n        restore_error_handler();\n    }\n}