<?php\n\nfunction calculateDestinationPoint($lat, $lon, $distance, $direction) {\n    $R = 6371; // Radius of the Earth in kilometers\n    $bearing = 0;\n\n    switch ($direction) {\n        case 'N':\n            $bearing = deg2rad(0);\n            break;\n        case 'E':\n            $bearing = deg2rad(90);\n            break;\n        case 'S':\n            $bearing = deg2rad(180);\n            break;\n        case 'W':\n            $bearing = deg2rad(270);\n            break;\n        default:\n            return "Invalid direction";\n    }\n\n    $latRad = deg2rad($lat);\n    $lonRad = deg2rad($lon);\n\n    $angularDistance = $distance / $R;\n\n    $destinationLat = asin(sin($latRad) * cos($angularDistance) +\n                            cos($latRad) * sin($angularDistance) * cos($bearing));\n\n    $destinationLon = $lonRad + atan2(sin($bearing) * sin($angularDistance) * cos($latRad),\n                                      cos($angularDistance) - sin($latRad) * sin($destinationLat));\n\n    // Convert back to degrees\n    $destinationLat = rad2deg($destinationLat);\n    $destinationLon = rad2deg($destinationLon);\n\n    // Normalize the longitude to be between -180 and +180\n    $destinationLon = ($destinationLon + 540) % 360 - 180;\n\n    return array('lat' => $destinationLat, 'lon' => $destinationLon);\n}\n\n// Example usage:\n$startPointLat = 52.5200; // Starting latitude in degrees\n$startPointLon = 13.4050; // Starting longitude in degrees\n$distanceInKm = 1; // Distance to travel in kilometers\n$direction = 'N'; // Direction to travel\n\n$result = calculateDestinationPoint($startPointLat, $startPointLon, $distanceInKm, $direction);\necho "Destination: Latitude = {$result['lat']}, Longitude = {$result['lon']}";\n\n?>