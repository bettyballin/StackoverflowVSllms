<?php\n\n$w = 'world';\n$numRuns = 100;\n$results = [[]];\n\nfunction benchmark($operation, $numRuns) {\n    $results = [];\n    for ($run = 0; $run < $numRuns; $run++) {\n        gc_collect_cycles(); // Free up memory\n        $start = microtime(true);\n        for ($i = 0; $i < 10000; $i++)\n            eval($operation); // Evaluate the operation string\n        $end = microtime(true);\n        $results[] = $end - $start;\n    }\n    return $results;\n}\n\n// Warm-up runs\necho 'Warming-up...\n';\nbenchmark("echo 'Hello ' . \$w . '!';", 10);\n\n$operations = [\n    "echo 'Hello ' . \$w . '!';", // Concatenation\n    'echo "Hello $w!";',           // Inline variable\n    // Note: PHP does not support addition for strings in the way you used, so this will cause a notice.\n    // "echo 'Hello ' + \$w + '!';"  // Addition operator (invalid syntax)\n];\n\nforeach ($operations as $index => $operation) {\n    echo "\nTesting operation type ".($index+1)."...\n";\n    $results[$index] = benchmark($operation, $numRuns);\n}\n\n// Reporting results\nforeach ($results as $index => $times) {\n    echo "Operation type ".($index+1).":\n";\n    printf("Average: %.9f\n", array_sum($times) / count($times));\n}\n?>