function formatNumber($format, $number) {\n    // Remove all non-x characters from the format to determine the structure\n    $structure = preg_replace('/[^x]/', '', $format);\n    \n    // Calculate the total length of x in the format\n    $totalLength = strlen($structure);\n\n    // Convert number to string to manipulate it\n    $numberStr = strval($number);\n\n    // Pad the number with leading zeros if necessary to match the total length\n    if (strlen($numberStr) < $totalLength) {\n        $numberStr = str_pad($numberStr, $totalLength, '0', STR_PAD_LEFT);\n    }\n\n    // Insert the format characters into the number string\n    $result = '';\n    $numIndex = 0;\n    foreach (str_split($format) as $char) {\n        if ($char === 'x') {\n            $result .= $numberStr[$numIndex++];\n        } else {\n            $result .= $char;\n        }\n    }\n\n    return $result;\n}\n\n// Example usage:\necho formatNumber("xxx-xxx", 123456); // Outputs: 123-456\necho "\n";\necho formatNumber("x-xx-xxx", 123456); // Outputs: 1-23-456\necho "\n";\necho formatNumber("x-xx", 1234); // Outputs: 1-234\necho "\n";\necho formatNumber("1-22-333-4444", 1223334444); // Outputs: 1-22-333-4444