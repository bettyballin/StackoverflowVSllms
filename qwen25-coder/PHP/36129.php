function resizeAndConvertToPng($sourceFilePath, $maxWidth = 200, $maxHeight = 200) {\n    // Determine the image type and create an image resource from file.\n    list($width, $height, $type) = getimagesize($sourceFilePath);\n    \n    switch ($type) {\n        case IMAGETYPE_GIF:\n            $imageResource = imagecreatefromgif($sourceFilePath);\n            break;\n        case IMAGETYPE_JPEG:\n            $imageResource = imagecreatefromjpeg($sourceFilePath);\n            break;\n        case IMAGETYPE_PNG:\n            $imageResource = imagecreatefrompng($sourceFilePath);\n            break;\n        default:\n            throw new Exception('Unsupported file type.');\n    }\n    \n    if (!$imageResource) {\n        throw new Exception('Failed to create image resource from file.');\n    }\n\n    // Calculate the ratio and resize if necessary.\n    $ratio = min($maxWidth / $width, $maxHeight / $height);\n    $newWidth = (int)($width * $ratio);\n    $newHeight = (int)($height * $ratio);\n\n    // Create a new true color image resource with proper dimensions.\n    $resizedImageResource = imagescale($imageResource, $newWidth, $newHeight);\n\n    // Output as PNG to a string\n    ob_start();\n    imagepng($resizedImageResource);\n    $imageData = ob_get_contents();\n    ob_end_clean();\n\n    // Free up memory\n    imagedestroy($imageResource);\n    imagedestroy($resizedImageResource);\n\n    return $imageData;\n}\n\n// Usage example:\ntry {\n    $file_path = "/path/to/uploaded/image.jpg";\n    $pngBlob = resizeAndConvertToPng($file_path, 100, 100); // Resize to 100x100 pixels\n    // Insert $pngBlob into your database\n} catch (Exception $e) {\n    echo "Error: " . $e->getMessage();\n}