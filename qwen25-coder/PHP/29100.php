<?php\n\nclass FormSubmissionThrottler {\n    private $db;\n\n    public function __construct($dbName = 'submissions.db') {\n        $this->db = new SQLite3($dbName);\n        $this->setupDatabase();\n    }\n\n    private function setupDatabase() {\n        $this->db->exec("CREATE TABLE IF NOT EXISTS submissions (\n            id INTEGER PRIMARY KEY,\n            ip TEXT NOT NULL,\n            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n        )");\n    }\n\n    public function canSubmit($ip, $timeFrame = 1440) { // timeFrame in minutes\n        $cutoffTime = date('Y-m-d H:i:s', strtotime("-{$timeFrame} minutes"));\n        $stmt = $this->db->prepare("SELECT COUNT(*) as count FROM submissions WHERE ip = :ip AND timestamp > :cutoff");\n        $stmt->bindValue(':ip', $ip);\n        $stmt->bindValue(':cutoff', $cutoffTime);\n        $result = $stmt->execute();\n        $row = $result->fetchArray SQLITE3_ASSOC);\n\n        return $row['count'] < 1; // allow submission if less than one submission in the time frame\n    }\n\n    public function logSubmission($ip) {\n        $stmt = $this->db->prepare("INSERT INTO submissions (ip) VALUES (:ip)");\n        $stmt->bindValue(':ip', $ip);\n        $stmt->execute();\n    }\n}\n\n// Usage example:\n$throttler = new FormSubmissionThrottler();\n\n$userIp = $_SERVER['REMOTE_ADDR'];\n\nif ($throttler->canSubmit($userIp)) {\n    // Process the form submission\n    echo "Form submitted successfully!";\n    $throttler->logSubmission($userIp);\n} else {\n    die("You have submitted the form too frequently. Please try again later.");\n}\n?>