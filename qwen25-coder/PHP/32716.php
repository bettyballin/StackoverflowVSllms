class Creatives {\n    private $creatives;\n    private $campaign;\n\n    public function run() {\n        $auth_token = 'mypassword';\n        $id = 123123;\n        // Retry up to 5 times with a delay between retries\n        $this->retry_till_success([$this, 'getCreatives'], [$auth_token, $id], 5);\n        print_r($this->creatives); \n    }\n\n    public function getCreatives($auth_token, $id) {\n        // Assume $this->campaign is an instance of Campaign or a class with a get method\n        $this->creatives = $this->campaign->get($auth_token, $id);      \n    }\n\n    private function retry_till_success($method, $args, $maxRetries = 5) {\n        $retryCount = 0;\n        do {\n            try {\n                call_user_func_array($method, $args);\n                break; // Exit loop on success\n            } catch (SoapFault $fault) {\n                if ($fault->faultstring == 'couldnt connect to host' && $retryCount < $maxRetries) {\n                    sleep(1); // Wait for 1 second before retrying\n                    $retryCount++;\n                } else {\n                    throw new Exception("Failed after {$retryCount} retries: " . $fault->getMessage());\n                }\n            }\n        } while (true);\n    }\n}