<?php\n\nfunction processNode(DOMElement $node, array $fields) {\n    // Check if the current node has a 'name' attribute\n    if ($node->hasAttribute('name')) {\n        $nodeName = $node->getAttribute('name');\n        // Replace the node with its text content replaced by fields value or empty string\n        if (isset($fields[$nodeName])) {\n            $nodeValue = $fields[$nodeName];\n        } else {\n            return; // If no field is found, do nothing and move on to children.\n        }\n\n        // Replacing element's content only - preserve children if it has any\n        while ($node->firstChild) {\n            $node->removeChild($node->firstChild);\n        }\n        $new = $node->ownerDocument->createTextNode($nodeValue);\n        $node->appendChild($new);\n    }\n\n    // Recursively process child nodes\n    foreach ($node->childNodes as $childNode) {\n        if ($childNode instanceof DOMElement) {\n            processNode($childNode, $fields);\n        }\n    }\n}\n\nfunction transformXML($xmlString, array $fields) {\n    libxml_use_internal_errors(true); // Suppress warnings and errors\n\n    $dom = new DOMDocument();\n    $successfulLoad = @$dom->loadXML($xmlString);\n\n    if (!empty(libxml_get_errors()) || !$successfulLoad) {\n        libxml_clear_errors();\n        throw new Exception('Failed to load XML content');\n    }\n\n    $xpath = new DOMXPath($dom);\n    $nodes = $xpath->query('//field');\n\n    foreach ($nodes as $node) {\n        processNode($node, $fields);\n    }\n\n    return $dom->saveXML();\n}\n\ntry {\n    $xmlInput = '<root>\n                    <field name="outer">\n                      This is an outer field containing:\n                      <field name="inner">this</field> inner content.\n                    </field>\n                 </root>';\n                 \n    $fields = [\n        'inner' => 'INNER_VALUE',\n        'outer' => 'OUTER_CONTENT {INNER_VALUE} OUTER_END'\n    ];\n\n    $outputXML = transformXML($xmlInput, $fields);\n    echo $outputXML;\n} catch (Exception $e) {\n    echo "Error: {$e->getMessage()}";\n}\n\n?>