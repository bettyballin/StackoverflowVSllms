function textFormat($text) {\n    // Define the pattern for BBCode and use named capture group\n    $pattern = '/\[text\](?P<id>.*?)\[\/text\]/is';\n\n    // Use preg_replace_callback to process each match\n    return preg_replace_callback($pattern, function ($matches) {\n        // Safely get the ID from matches array using named capturing group\n        $id = intval($matches['id']);\n\n        // Fetch and return the text title based on id\n        return '<a href="index.php?function=getData&reference=text&id=' . htmlspecialchars($id, ENT_QUOTES, 'UTF-8') . '">' .\n               htmlspecialchars(getTextTitle($id), ENT_QUOTES, 'UTF-8') .\n               '</a>';\n    }, $text);\n}\n\n// Use PDO for database operations to avoid SQL injection\nfunction getTextTitle($id) {\n    // Assume $pdo is an instance of PDO already created and configured\n    global $pdo;\n\n    // Prepare the query\n    $stmt = $pdo->prepare("SELECT title FROM text WHERE id = :id");\n    \n    // Bind the parameter and execute the statement\n    $stmt->execute(['id' => $id]);\n\n    // Fetch and return the result or an empty string if no result\n    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        return $row['title'];\n    }\n    return '';\n}