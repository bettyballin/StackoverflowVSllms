function directoryHash($path) {\n    if (!is_dir($path)) {\n        return false;\n    }\n\n    $hashes = [];\n    $files = new RecursiveIteratorIterator(\n        new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::SKIP_DOTS),\n        RecursiveIteratorIterator::SELF_FIRST\n    );\n\n    foreach ($files as $file) {\n        if ($file->isFile()) {\n            $hashes[] = md5_file((string)$file);\n        } elseif ($file->isDir()) {\n            $hashes[] = basename($file); // Consider directories themselves for changes in structure.\n        }\n    }\n\n    // Create a hash of all file hashes combined\n    return md5(implode(',', $hashes));\n}\n\n$directoryPath = 'path/to/your/directory';\n$currentHash = directoryHash($directoryPath);\n\n// Store this hash and compare it with the previous one to determine if changes have occurred.