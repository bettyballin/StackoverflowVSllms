// Example code string fetched from database\n$codeString = "myfunc(1,2,3); anotherFunc(3,2,1);";\n\n// Split the string into separate function calls\n$functionCalls = explode(';', $codeString);\n\nforeach ($functionCalls as $call) {\n    // Clean up any extra whitespace\n    $call = trim($call);\n    \n    if (empty($call)) {\n        continue;\n    }\n    \n    // Use a regular expression to extract the function name and arguments\n    preg_match('/([a-zA-Z_][a-zA-Z0-9_]*)\((.*)\)/', $call, $matches);\n\n    if (!isset($matches[1]) || !isset($matches[2])) {\n        continue; // Skip any invalid patterns\n    }\n\n    $functionName = $matches[1];\n    $argsString = $matches[2];\n\n    // Split arguments string into an array of arguments\n    $argsArray = array_map('trim', explode(',', $argsString));\n\n    // Convert string arguments to appropriate data types if necessary\n    // This is a simple example; you might need more complex parsing logic\n    $argsArray = array_map(function($arg) {\n        return is_numeric($arg) ? (strpos($arg, '.') !== false ? floatval($arg) : intval($arg)) : trim($arg, "'");\n    }, $argsArray);\n\n    // Call the function with arguments\n    call_user_func_array($functionName, $argsArray);\n}