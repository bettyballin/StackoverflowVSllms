<?php\n\n// Sample function to prepare and execute batch inserts with updates on duplicate keys\nfunction insertOrUpdateBatch($itemList, $batchSize = 100) {\n    $batches = array_chunk($itemList, $batchSize);\n    \n    foreach ($batches as $batch) {\n        $insertQueries = [];\n        \n        foreach ($batch as $key => $item) {\n            // Assuming Guid is a unique key in your table\n            $guid = $item['Guid'];\n            \n            // Prepare the insert part of the query\n            $columns = implode(", ", array_keys($item));\n            $valuesPlaceholders = ":" . implode(", :", array_keys($item));\n            \n            // Prepare the update part for on duplicate key update\n            $updates = [];\n            foreach ($item as $column => $value) {\n                $updates[] = "$column=VALUES($column)";\n            }\n            $onDuplicateKeyUpdate = implode(", ", $updates);\n            \n            $insertQueries[] = "($valuesPlaceholders) ON DUPLICATE KEY UPDATE $onDuplicateKeyUpdate";\n        }\n\n        // Combine all insert queries into one batch query\n        $placeholders = implode(",\n", $insertQueries);\n\n        // Full SQL Query\n        $sql = "INSERT INTO your_table ($columns) VALUES $placeholders";\n\n        try {\n            // Assuming you have a PDO connection\n            $pdo->beginTransaction();\n            \n            // Bind values and execute\n            $stmt = $pdo->prepare($sql);\n            foreach ($batch as $index => $item) {\n                foreach ($item as $key => $value) {\n                    $stmt->bindValue(":".$key, $value);\n                }\n            }\n            $stmt->execute();\n            \n            $pdo->commit();\n        } catch (PDOException $e) {\n            $pdo->rollBack();\n            echo "Error: " . $e->getMessage();\n        }\n    }\n}\n\n// Example usage\ninsertOrUpdateBatch($itemList);\n\n?>