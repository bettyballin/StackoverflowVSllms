function isValidDate($dateString) {\n    $d = DateTime::createFromFormat('m/d/Y', $dateString);\n    if ($d && $d->format('m/d/Y') === $dateString) {\n        // Date is in the expected format and valid\n        return true;\n    }\n    \n    // Try parsing with other possible formats or default to strtotime compatibility\n    $time = strtotime($dateString);\n    if (!$time) {\n        return false; // Invalid date string\n    }\n\n    // Extract components using parsed timestamp\n    list($year, $month, $day) = explode('-', date('Y-m-d', $time));\n    \n    // Use checkdate to validate day and month\n    if (checkdate((int)$month, (int)$day, (int)$year)) {\n        return true;\n    }\n    \n    return false; // Invalid date components found by checkdate\n}\n\n$dateString = '02/31/2018';\nif (isValidDate($dateString)) {\n    try {\n        $date = new DateTime($dateString);\n        echo $date->format('Y-m-d');\n    } catch (Exception $e) {\n        // Handle exception if necessary\n    }\n} else {\n    echo "Invalid date: " . htmlspecialchars($dateString);\n}