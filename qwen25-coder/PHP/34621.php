class My_FilteredRequest extends Zend_Controller_Request_Http\n{\n    public function getParam($key = null, $default = null)\n    {\n        $value = parent::getParam($key, $default);\n        if ($value !== null) {\n            // Filter the value\n            $value = $this->filterValue($value);\n        }\n        return $value;\n    }\n\n    private function filterValue($value)\n    {\n        // Implement your filtering logic here\n        // Example: Remove HTML tags (simple XSS protection)\n        if (is_string($value)) {\n            $value = strip_tags($value);\n\n            // Additional SQL escaping can be done if necessary. However, it's better to use prepared statements.\n        } elseif (is_array($value)) {\n            foreach ($value as &$item) {\n                if (is_array($item)) {\n                    $item = array_map([$this, 'filterValue'], $item);\n                } else {\n                    $item = $this->filterValue($item);\n                }\n            }\n        }\n\n        return $value;\n    }\n}\n\n// Usage\n$frontController = Zend_Controller_Front::getInstance();\n$frontController->setRequest(new My_FilteredRequest);