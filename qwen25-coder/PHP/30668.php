<?php\n\nrequire 'vendor/autoload.php';\n\nuse Predis\Client;\nuse GuzzleHttp\Client as HttpClient;\n\nclass WriteBehindCache {\n    private $client;\n    private $http;\n\n    public function __construct() {\n        // Connect to redis\n        $this->client = new Client([\n           'scheme' => 'tcp',\n            'host'   => '127.0.0.1',\n            'port'   => 6379,\n        ]);\n\n        // Create HTTP client for async requests\n        $this->http = new HttpClient();\n    }\n\n    public function update($id, $data) {\n        // Immediately set data to Redis\n        $this->client->set("cache:$id", json_encode($data));\n\n        // Fire off an asynchronous task via a simple PHP script endpoint\n        $promise = $this->http->postAsync('http://yourserver/async-write.php', [\n            'json' => ['id' => $id, 'data' => $data]\n        ]);\n\n        // You can wait or detach immediately\n        $promise->detach();\n    }\n}\n\n// Usage example\n$cache = new WriteBehindCache();\n$data = [/* your 200 fields here */];\n$cache->update('record1', $data);\n\n?>