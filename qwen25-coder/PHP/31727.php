function truncateHtml($htmlStr, $maxLength) {\n    $dom = new DOMDocument();\n    @$dom->loadHTML(mb_convert_encoding($htmlStr, 'HTML-ENTITIES', 'UTF-8'));\n    $bodyElm = $dom->getElementsByTagName('body')->item(0);\n\n    $textContent = '';\n    function getTextNodes(DOMNode $node) {\n        static $textContent = '';\n        /** @var DOMNode $child */\n        foreach ($node as $child) {\n            if ($child instanceof DOMText) {\n                $textContent .= $child->nodeValue;\n            } elseif (in_array($child->nodeName, ['table'])) {\n                // Skip tables or any other complex elements\n                continue;\n            } else {\n                getTextNodes($child);\n            }\n        }\n        return $textContent;\n    }\n\n    $plainText = getTextNodes($bodyElm);\n\n    if (strlen($plainText) > $maxLength) {\n        $truncatedHtml = '';\n\n        foreach ($dom->getElementsByTagName('*') as $node) {\n            if (!empty($truncatedHtml)) {\n                break; // Stop processing after we have truncated the text\n            }\n\n            $currentInnerText = getTextNodes($node);\n\n            if (strlen($currentInnerText) > $maxLength && empty($truncatedHtml)) {\n                $truncatedPlainText = mb_substr($plainText, 0, $maxLength);\n                $lastSpacePosition = strrpos(substr($truncatedPlainText, 0, -2), ' ');\n                $finalTruncationPoint = $lastSpacePosition !== false ? $lastSpacePosition : strlen($truncatedPlainText) - 5;\n                $truncatedHtml = mb_substr($htmlStr, 0, strpos($plainText, substr($currentInnerText, 0, $finalTruncationPoint)) + strlen(substr($currentInnerText, 0, $finalTruncationPoint))) . '...</p>';\n            }\n        }\n\n        return preg_replace('/<[^>]+>$/i', '', $truncatedHtml);\n    }\n\n    return $plainText;\n}\n\necho truncateHtml('Hello, my <strong>name</strong> is <em>Sam</em>. I&acute;m a web developer.', 26) . '...';