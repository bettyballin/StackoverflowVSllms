<?php\nrequire_once('pdflib.php');\n\ntry {\n    $p = new pDFlib();\n\n    // Set error_policy to return so we can handle exceptions ourselves\n    if ($p->set_option("errorpolicy=return") == 0) {\n        die("Setting errorpolicy failed: " . $p->get_errmsg());\n    }\n\n    // Open a file for the PDF output\n    if ($p->begin_document("output_large_file.pdf", "") == 0)\n        die("Error: " . $p->get_errmsg());\n\n    // Set memory policy to avoid excessive memory usage\n    if ($p->set_option("memory_policy=once") != 0)\n        die("Setting memory_policy failed: " . $p->get_errmsg());\n\n    // Set document information\n    if ($p->set_info("Creator", "PDFlib Cookbook")\n        || $p->set_info("Title", "Large PDF Generation"))\n        die("Error: " . $p->get_errmsg());\n    \n    for ($page = 1; $page <= 10000; $page++) { // Example loop\n        if ($p->begin_page_ext(595, 842, "") == 0)\n            die("Error: " . $p->get_errmsg());\n\n        $font = $p->load_font("Helvetica-Bold", "unicode", "");\n        if (!$font) {\n            die("Font Helvetica-Bold could not be loaded");\n        }\n\n        $p->setfont($font, 14);\n        $p->fit_textline("This is page $page of our large PDF", 50, 750, "");\n\n        // End the current page\n        if ($p->end_page_ext("") == 0)\n            die("Error: " . $p->get_errmsg());\n    }\n\n    // Close and write out document\n    if ($p->end_document("") == 0)\n        die("Error: " . $p->get_errmsg());\n\n} catch (PDFlibException $e) {\n    echo "PANIC: Exception occurred in example:\n";\n    echo "[" . $e->getCode() . "] " . $e->getMessage();\n    exit(3);\n}