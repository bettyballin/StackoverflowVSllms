<?php\n// Assuming $data is an array of your hierarchical data fetched from your DB\nfunction buildXML($data, $rootElement = 'root') {\n    $xml = new SimpleXMLElement("<$rootElement></$rootElement>");\n\n    foreach ($data as $item) {\n        // Create a node for the current item\n        $node = $xml->addChild('item');\n        \n        // Add fields of the current item as XML tags\n        foreach ($item['fields'] as $key => $value) {\n            $node->addChild($key, htmlspecialchars($value));\n        }\n        \n        // Recursively add children if any\n        if (!empty($item['children'])) {\n            buildXMLRecursive($node, $item['children']);\n        }\n    }\n\n    return $xml;\n}\n\nfunction buildXMLRecursive(SimpleXMLElement $parent, array $items) {\n    foreach ($items as $item) {\n        // Create a new child node under the current parent\n        $childNode = $parent->addChild('item');\n        \n        // Add fields of the item as XML tags\n        foreach ($item['fields'] as $key => $value) {\n            $childNode->addChild($key, htmlspecialchars($value));\n        }\n        \n        // Check for further children and recurse if necessary\n        if (!empty($item['children'])) {\n            buildXMLRecursive($childNode, $item['children']);\n        }\n    }\n}\n\n// Example usage:\n$data = [\n    ['fields' => ['id' => 1, 'name' => 'Category 1'], 'children' =>\n        [['fields' => ['id' => 2, 'name' => 'Subcategory 1.1'], 'children' => []],\n         ['fields' => ['id' => 3, 'name' => 'Subcategory 1.2'], 'children' => []]]\n    ],\n    ['fields' => ['id' => 4, 'name' => 'Category 2'], 'children' =>\n        [['fields' => ['id' => 5, 'name' => 'Subcategory 2.1'], 'children' => []]]\n    ]\n];\n\n$xml = buildXML($data);\necho $xml->asXML();\n?>