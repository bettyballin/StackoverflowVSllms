<?php\n\n// Get the search variable from URL\n$var = isset($_GET['q']) ? $_GET['q'] : '';\n$trimmed = trim($var); // Trim whitespace from the stored variable\n\n// Rows to return\n$limit = 10;\n\n// Check for an empty string and display a message.\nif ($trimmed == "") {\n    echo "<p>Please enter a name.</p>";\n    exit;\n}\n\n// Connect to database using PDO (replaces mysql_connect and mysql_select_db)\ntry {\n    $pdo = new PDO("mysql:host=localhost;dbname=itour", "root", "password");\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die("Unable to connect to the database: " . $e->getMessage());\n}\n\n// Prepare the SQL query to prevent SQL injection\n$stmt = $pdo->prepare(\n    "SELECT * FROM events WHERE artist_name LIKE :artist ORDER BY date LIMIT :limit OFFSET :offset"\n);\n\n$searchTerm = "%" . $trimmed . "%";\n$offset = isset($_GET['s']) ? (int)$_GET['s'] : 0;\n\n// Bind parameters and execute the query\n$stmt->bindParam(':artist', $searchTerm);\n$stmt->bindParam(':limit', $limit, PDO::PARAM_INT);\n$stmt->bindParam(':offset', $offset, PDO::PARAM_INT);\n$stmt->execute();\n\n$results = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n$numrows = count($results);\n\n// If no results, offer a google search as an alternative\nif ($numrows == 0) {\n    echo "<h3>Results</h3>";\n    echo "<p>Sorry, your search: &quot;" . htmlspecialchars($trimmed) . "&quot; returned zero results</p>";\n\n    // Google\n    echo "<p><a href=\"http://www.google.com/search?q=" . urlencode($trimmed) . "\" target=\"_blank\" title=\"Look up " . htmlspecialchars($trimmed) . " on Google\">Click here</a> to try the search on Google</p>";\n}\n\n// Display what was searched for\necho "<p>You searched for: &quot;" . htmlspecialchars($var) . "&quot;</p>";\n\n// Begin to show results set\necho "<h3>Results</h3>";\n$count = 1 + $offset;\n\nforeach ($results as $row) {\n    echo $count . ".&nbsp;" . htmlspecialchars($row["artist_name"]) . "<br />";\n    $count++;\n}\n\n$currPage = (($offset / $limit) + 1);\n\necho "<br />";\n\n// Links to other results\n$nextOffset = $offset + $limit;\n$prevOffset = max(0, $offset - $limit);\n\nif ($prevOffset >= 0) {\n    echo "&nbsp;<a href=\"?s=$prevOffset&q=" . urlencode($var) . "\">&lt;&lt; Prev 10</a>&nbsp;&nbsp;";\n}\n\n// Calculate number of pages needing links\n$totalPages = ceil(count($pdo->query("SELECT * FROM events WHERE artist_name LIKE '$searchTerm'")->fetchAll(PDO::FETCH_ASSOC)) / $limit);\n\nif ($currPage < $totalPages) {\n    echo "&nbsp;<a href=\"?s=$nextOffset&q=" . urlencode($var) . "\">Next 10 &gt;&gt;</a>";\n}\n\n$a = $offset + $limit;\nif ($a > count($pdo->query("SELECT * FROM events WHERE artist_name LIKE '$searchTerm'")->fetchAll(PDO::FETCH_ASSOC))) {\n    $a = count($pdo->query("SELECT * FROM events WHERE artist_name LIKE '$searchTerm'")->fetchAll(PDO::FETCH_ASSOC));\n}\n$b = $offset + 1;\necho "<p>Showing results $b to $a of " . count($pdo->query("SELECT * FROM events WHERE artist_name LIKE '$searchTerm'")->fetchAll(PDO::FETCH_ASSOC)) . "</p>";\n\n?>