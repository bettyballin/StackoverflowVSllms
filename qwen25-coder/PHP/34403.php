class BBCodeParser {\n    private $tags = [\n        'block' => '[%s]',\n        'video' => '[video:%s]%s[/video]',\n        'url' => '[url:%s]%s[/url]'\n    ];\n\n    public function parse($text) {\n        $stack = [];\n        preg_match_all('/\[(\/?)([a-z]+):?(.*?)](.+?)/is', $text, $matches, PREG_SET_ORDER);\n\n        foreach ($matches as $match) {\n            list($fullMatch, $closeSlash, $tagName, $attributes, $content) = $match;\n            if (isset($this->tags[$tagName])) {\n                if (!$closeSlash) { // Opening tag\n                    array_push($stack, [\n                        'tag' => $tagName,\n                        'attributes' => trim($attributes),\n                        'content' => ''\n                    ]);\n                } else { // Closing tag\n                    $openingTag = array_pop($stack);\n                    if ($openingTag && $openingTag['tag'] === $tagName) {\n                        $params = $this->parseAttributes($openingTag['attributes']);\n                        $formattedContent = sprintf(\n                            $this->tags[$tagName],\n                            $this->formatParams($params, $tagName),\n                            trim($openingTag['content'] . $content)\n                        );\n                        if (!empty($stack)) {\n                            $top = array_pop($stack);\n                            $top['content'] .= $formattedContent;\n                            array_push($stack, $top);\n                        } else {\n                            $text = str_replace($fullMatch, $formattedContent, $text);\n                        }\n                    }\n                }\n            }\n        }\n\n        return $text;\n    }\n\n    private function parseAttributes($attributes) {\n        $params = [];\n        if (!empty($attributes)) {\n            preg_match_all('/(\w+)="(.*?)"/', $attributes, $matches, PREG_SET_ORDER);\n            foreach ($matches as $match) {\n                list(, $key, $value) = $match;\n                $params[$key] = $value;\n            }\n        }\n        return $params;\n    }\n\n    private function formatParams($params, $tagName) {\n        switch ($tagName) {\n            case 'video':\n                $type = isset($params['url']) ? parse_url($params['url'], PHP_URL_HOST) : null;\n                if (strpos($type, 'youtube') !== false) {\n                    return sprintf('type="youtube", url="%s"', $params['url']);\n                } elseif (strpos($type, 'dailymotion') !== false) {\n                    return sprintf('type="dailymotion", url="%s"', $params['url']);\n                }\n            default:\n                return http_build_query($params);\n        }\n    }\n}\n\n// Usage\n$text = '[block] [video:url="https://www.youtube.com/watch?v=dQw4w9WgXcQ", width="500", height="500"]Example[/video] [/block]';\n$parser = new BBCodeParser();\necho $parser->parse($text);