<?php\n\n$inputURL = '/users/admin/steve/';\n\n// Database connection (ensure to use prepared statements to prevent SQL injection)\n$conn = new mysqli('host', 'username', 'password', 'database');\nif ($conn->connect_error) {\n    die("Connection failed: " . $conn->connect_error);\n}\n\n// Step 1: Check for an exact match\n$stmt = $conn->prepare("SELECT * FROM urls WHERE path = ?");\n$stmt->bind_param("s", $inputURL);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Exact match found\n    $row = $result->fetch_assoc();\n    echo "Exact match found: " . $row['path'];\n} else {\n    // Step 2: No exact match, perform wildcard search\n    $searchPath = rtrim($inputURL, '/') . '/'; // Ensure it ends with a slash for comparison\n\n    $stmt = $conn->prepare("SELECT * FROM urls WHERE path LIKE ? ORDER BY LENGTH(path) DESC");\n    $likePattern = '%' . str_replace('*', '', $searchPath);\n    $stmt->bind_param("s", $likePattern);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    while ($row = $result->fetch_assoc()) {\n        // Remove the '*' from the end and compare\n        if (substr($inputURL, 0, -1) === rtrim(rtrim($row['path'], '*'), '/')) {\n            echo "Wildcard match found: " . $row['path'];\n            break;\n        }\n    }\n\n    if ($result->num_rows == 0) {\n        echo "No matches found.";\n    }\n}\n\n$stmt->close();\n$conn->close();\n\n?>