function normalizeTime($input) {\n    // Trim whitespace and convert to lowercase\n    $input = strtolower(trim($input));\n\n    // Check for "X hours and Y minutes" pattern\n    if (preg_match('/(\d+)\s*(hour|hours)?\s*(and\s*)?(\d+)?\s*minutes?/', $input, $matches)) {\n        $hours = intval($matches[1] ?? 0);\n        $minutes = intval($matches[4] ?? 0);\n    } \n    // Check for "X.XX" pattern (considered as hours and decimal of an hour)\n    elseif (preg_match('/^\d*\.\d{2}$/', $input)) {\n        $timeInDecimal = floatval($input);\n        $hours = intval($timeInDecimal);\n        $minutes = round(($timeInDecimal - $hours) * 60);\n    }\n    // Check for "X:XX" pattern\n    elseif (preg_match('/^(\d{1,2}):(\d{2})$/', $input, $matches)) {\n        $hours = intval($matches[1]);\n        $minutes = intval($matches[2]);\n    } else {\n        return null; // or handle as invalid input\n    }\n\n    // Ensure minutes are within 0-59 and add to hours if overflow\n    if ($minutes >= 60) {\n        $hours += intdiv($minutes, 60);\n        $minutes = $minutes % 60;\n    }\n\n    // Format the time as HH:MM\n    return sprintf('%02d:%02d', $hours, $minutes);\n}\n\n// Test cases\necho normalizeTime("an hour and a half") . "\n"; // Outputs: 01:30\necho normalizeTime("27.52") . "\n";             // Outputs: 27:31 (assuming input is meant for 27 hours 31 minutes)\necho normalizeTime("5:24") . "\n";              // Outputs: 05:24