class MakeItLink {\n    // Existing method for URLs\n    protected function _link_www($matches) {\n        $url = $matches[2];\n        $url = self::cleanURL($url);\n        if (empty($url)) {\n            return $matches[0];\n        }\n        return "{$matches[1]}<a href=\"{$url}\">{$url}</a>";\n    }\n\n    // New method for @replies\n    protected function _link_user_reply($matches) {\n        $username = $matches[1];\n        $url = "http://twitter.com/" . $username;\n        return "<a href=\"$url\">@$username</a>";\n    }\n\n    // New method for #hashtags\n    protected function _link_hashtag($matches) {\n        $hashtag = $matches[1];\n        $url = "http://search.twitter.com/search?q=%23" . urlencode($hashtag);\n        return "<a href=\"$url\">#$hashtag</a>";\n    }\n\n    public static function cleanURL($url) {\n        if ($url == '') {\n            return $url;\n        }\n        $url = preg_replace("|[^a-z0-9-~+_.?#=!&;,/:%@$*'()x80-xff]|i", '', $url);\n        $url = str_replace(array("%0d", "%0a"), '', $url);\n        $url = str_replace("//;", "://", $url);\n\n        if (strpos($url, ":") === false && substr($url, 0, 1) != "/" && !preg_match("|^[a-z0-9-]+?.php|i", $url)) {\n            $url = "http://{$url}";\n        }\n\n        $url = preg_replace("|&([^#])(?![a-z]{2,8};)|", "&#038;$1", $url);\n        $url = str_replace("'", "&#039;", $url);\n\n        return $url;\n    }\n\n    public function transform($text) {\n        $text = " {$text}";\n\n        // Link URLs\n        $text = preg_replace_callback(\n            '#(?<=[\s>])(\()?([\w]+?://(?:[\w\x80-\xff#$%&~/\-=?@\[\](+]|[.,;:](?![\s<])|(?(1)\)(?![\s<])|\)))*)#is',\n            array(__CLASS__, '_link_www'),\n            $text\n        );\n\n        // Link @replies\n        $text = preg_replace_callback('/@([A-Za-z0-9_]+)/', array($this, '_link_user_reply'), $text);\n\n        // Link #hashtags\n        $text = preg_replace_callback('/#(\w+)/', array($this, '_link_hashtag'), $text);\n\n        $text = preg_replace('#(<a( [^>]+?>|>))<a [^>]+?>([^>]+?)</a></a>#i', "$1$3</a>", $text);\n        $text = trim($text);\n\n        return $text;\n    }\n}