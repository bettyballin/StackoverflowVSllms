function buildHierarchy($flatArray) {\n    $result = [];\n\n    foreach ($flatArray as $key => $value) {\n        // Split key by hyphen to understand the hierarchy level.\n        $segments = explode('-', trim($key, '-'));\n        $currentLevel = &$result;\n\n        foreach ($segments as $i => $segment) {\n            if (!isset($currentLevel[$segment])) {\n                if ($i == count($segments) - 1) {\n                    // If this is the last segment, set its value.\n                    $currentLevel["{$segment}-title"] = $value;\n                    $currentLevel["{$segment}-sons"] = [];\n                } else {\n                    // Initialize a new level in hierarchy.\n                    $currentLevel[$segment] = ["{$segment}-sons" => []];\n                    $currentLevel = &$currentLevel[$segment]["{$segment}-sons"];\n                }\n            } else {\n                // Move to the next deeper level in the existing structure.\n                if ($i == count($segments) - 2) {\n                    // The next segment is the final one, so set its value and init sons.\n                    $currentLevel = &$currentLevel[$segment];\n                    $currentLevel["{$segments[$i + 1]}-title"] = $value;\n                    $currentLevel["{$segments[$i + 1]}-sons"] = [];\n                } else {\n                    // Move deeper into the existing structure.\n                    $currentLevel = &$currentLevel[$segment]["{$segment}-sons"];\n                }\n            }\n        }\n    }\n\n    return $result;\n}\n\n$flatArray = [\n    '1' => 'animal',\n    '1-1' => 'turtle',\n    '1-1-1' => 'sea turtle',\n    '1-1-2' => 'box turtle',\n    '1-1-3' => 'green turtle',\n    '1-1-3-1' => 'green turtle with brown tail'\n];\n\n$result = buildHierarchy($flatArray);\nprint_r($result);