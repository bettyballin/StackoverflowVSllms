<?php\ntry {\n    // Connect to the database with PDO\n    $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Safe way to get page number\n    $page = isset($_GET['page']) ? (int)$_GET['page'] : 1;\n    $max = 15; // number of rows to show per page\n\n    if ($page < 1) $page = 1;\n\n    $limit = ($page - 1) * $max;\n\n    // Prepared statement for fetching threads\n    $stmt = $pdo->prepare("SELECT * FROM threads LIMIT :limit, :max");\n    $stmt->bindParam(':limit', $limit, PDO::PARAM_INT);\n    $stmt->bindParam(':max', $max, PDO::PARAM_INT);\n    $stmt->execute();\n\n    while ($thread = $stmt->fetch(PDO::FETCH_ASSOC)) {\n        echo htmlspecialchars($thread['title']) . '<br>';\n    }\n\n    // Calculate total pages\n    $stmt = $pdo->query("SELECT COUNT(id) AS tot FROM threads");\n    $totalres = (int)$stmt->fetchColumn();\n    $totalpages = ceil($totalres / $max);\n\n    for ($i = 1; $i <= $totalpages; $i++) { \n        if ($i == $page) {\n            echo '<b>' . htmlspecialchars($i) . '</b> ';\n        } else {\n            echo '<a href="test.php?page=' . htmlspecialchars(urlencode($i)) . '">' . htmlspecialchars($i) . '</a> ';\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n?>