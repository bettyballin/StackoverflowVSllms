// Example entity mapping\n/**\n * @Entity\n */\nclass Video {\n    /**\n     * @Id\n     * @Column(type="integer")\n     * @GeneratedValue(strategy="AUTO")\n     */\n    private $id;\n\n    /** @Column(type="string") */\n    private $title;\n\n    /** @Column(type="text") */\n    private $description;\n\n    // getters and setters\n}\n\n// Example of indexing data into Elasticsearch\nfunction indexData() {\n    $entityManager = getEntityManager(); // assume this function exists to return an EntityManager instance\n    $videos = $entityManager->getRepository(Video::class)->findAll();\n\n    foreach ($videos as $video) {\n        $doc = [\n            'id' => $video->getId(),\n            'title' => $video->getTitle(),\n            'description' => $video->getDescription(),\n        ];\n        // Assuming an Elasticsearch client has been set up\n        $params['body'][] = [\n            'index' => ['_type' => '_doc', '_id' => $video->getId()],\n        ];\n        $params['body'][] = $doc;\n    }\n    \n    $this->client->bulk($params);\n}\n\n// Example of executing a search query in Elasticsearch\nfunction searchContent($query) {\n    $searchParams['index'] = 'videos';\n    $searchParams['type']  = '_doc';\n    $searchParams['body']['query']['multi_match']['query'] = $query;\n    $searchParams['body']['query']['multi_match']['fields'] = ['title', 'description'];\n\n    $response = $this->client->search($searchParams);\n\n    return handleSearchResponse($response);\n}\n\nfunction handleSearchResponse($response) {\n    $hits = [];\n    foreach ($response['hits']['hits'] as $hit) {\n        // Assuming you fetch the entity using some unique identifier like ID\n        $entity = $entityManager->find('Video', $hit['_source']['id']);\n        if ($entity) {\n            $hits[] = $entity;\n        }\n    }\n    return $hits;\n}