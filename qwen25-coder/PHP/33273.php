function makeThumbnail($sourcefile, $endfile, $thumbwidth, $thumbheight, $quality) {\n    // Create a new Imagick object from the source file.\n    $image = new \Imagick(realpath($sourcefile));\n\n    // Get original dimensions and calculate scaling factors\n    $originalWidth = $image->getImageWidth();\n    $originalHeight = $image->getImageHeight();\n\n    if ($originalWidth > $thumbwidth) {\n        $newWidth = $thumbwidth;\n        $scalingFactor = $originalWidth / $newWidth;\n        $newHeight = floor($originalHeight / $scalingFactor);\n    } else {\n        $newHeight = $thumbheight;\n        $scalingFactor = $originalHeight / $newHeight;\n        $newWidth = floor($originalWidth / $scalingFactor);\n    }\n\n    // Resize the image\n    $image->resizeImage($newWidth, $newHeight, \Imagick::FILTER_CATROM, 0.9);\n\n    // Set image compression quality\n    $image->setImageCompressionQuality($quality);\n\n    // Write the compressed image to a file.\n    $image->writeImage(realpath($endfile));\n\n    // Clean up: free resources associated with the Imagick object\n    $image->clear();\n    $image->destroy();\n}