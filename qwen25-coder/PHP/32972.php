<?php\n\nnamespace Drupal\my_module\Plugin\views\style;\n\nuse Drupal\views\Plugin\views\style\StylePluginBase;\nuse Drupal\Core\Form\FormStateInterface;\nuse Symfony\Component\HttpFoundation\Response;\n\n/**\n * Style plugin to render each item in XML format.\n *\n * @ViewsStyle(\n *   id = "custom_xml_style",\n *   title = @Translation("Custom XML"),\n *   help = @Translation("Render each item in custom XML."),\n *   display_types = {"data_export"}\n * )\n */\nclass XmlStyle extends StylePluginBase {\n\n  /**\n   * Does the style plugin allows to use style plugins.\n   *\n   * @var bool\n   */\n  protected $usesFields = TRUE;\n\n  /**\n   * {@inheritdoc}\n   */\n  public function buildOptionsForm(&$form, FormStateInterface $form_state) {\n    parent::buildOptionsForm($form, $form_state);\n    // Add your own settings here.\n    // For example, fields to be attributes.\n  }\n\n  /**\n   * {@inheritdoc}\n   */\n  public function render(ResultRow $values) {\n    // Collecting data into an array\n    $row = [];\n    foreach ($this->view->field as $id => $field) {\n      $row[$field->options['alias']] = $field->advancedRender($values);\n    }\n    return $row;\n  }\n\n  /**\n   * {@inheritdoc}\n   */\n  public function renderSet(array $rows, $output_mode) {\n    // Generate XML\n    $domxml = new \DOMDocument('1.0', 'utf-8');\n    $pictures = $domxml->appendChild($domxml->createElement('pictures'));\n\n    foreach ($rows as $row) {\n      $picture = $pictures->appendChild(\n        $domxml->createElement('picture')\n      );\n      \n      $picture->setAttribute('size', (string)$row['size']);\n      $picture->setAttribute('dimensions', (string)$row['dimensions']);\n\n      $title = $domxml->createElement('title');\n      $textNode = $domxml->createTextNode($row['title']);\n      $title->appendChild($textNode);\n      $picture->appendChild($title);\n\n      // Add other fields/attributes as needed\n    }\n\n    $output = $domxml->saveXML();\n\n    return new Response($output, 200, ['Content-type' => 'text/xml; charset=utf-8']);\n  }\n}