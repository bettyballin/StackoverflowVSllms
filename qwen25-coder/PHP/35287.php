<?php\n\n// Define an interface for the functionality\ninterface EncryptorInterface {\n    public function encrypt($data);\n}\n\n// PEAR/PECL based implementation (assuming mcrypt is available)\nclass PEAREncryptor implements EncryptorInterface {\n    public function encrypt($data) {\n        // Example encryption logic using a hypothetical PEAR/PECL extension\n        return base64_encode($data); // Placeholder for actual encryption\n    }\n}\n\n// Fallback implementation if PEAR/PECL is not available\nclass SimpleEncryptor implements EncryptorInterface {\n    public function encrypt($data) {\n        // Simple fallback encryption\n        return md5($data); // Not secure, only as an example\n    }\n}\n\n// Determine which class to use based on availability of PECL extension\nif (extension_loaded('mcrypt')) {\n    $encryptor = new PEAREncryptor();\n} else {\n    $encryptor = new SimpleEncryptor();\n}\n\n$data = "Sensitive data";\n$encryptedData = $encryptor->encrypt($data);\n\necho $encryptedData;\n?>