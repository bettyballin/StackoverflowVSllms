<?php\n\nfunction isGsmCharacter($char) {\n    $gsmCharset = ' @£$¥èéùìòÇ\nØø\rÅåΔ_ΦΓΛΩΠΨΣΘΗΞÄÖÑÜ§¡¿ÀÆæßÉÈÊÌÒÔÙÛÝÞßàäöñüàèêìòôùûýþ';\n    $gsmExtendedCharset = 'Œœ‘’“”•–—˜™ˆ°±²³¼½¾€';\n\n    // Check if the character is in the standard GSM 03.38 charset\n    if (strpos($gsmCharset, $char) !== false) {\n        return true;\n    }\n\n    // Check if the character is in the extended GSM 03.38 charset\n    if (strpos($gsmExtendedCharset, $char) !== false) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction needsUnicodeEncoding($text) {\n    for ($i = 0; $i < mb_strlen($text, 'UTF-8'); $i++) {\n        if (!isGsmCharacter(mb_substr($text, $i, 1, 'UTF-8'))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction encodeForSms($text) {\n    if (needsUnicodeEncoding($text)) {\n        // Convert to UTF-16 and split into chunks\n        $utf16le = mb_convert_encoding($text, 'UCS-2LE', 'UTF-8');\n        $length = strlen($utf16le);\n        $parts = [];\n        for ($i = 0; $i < $length; $i += 70) {\n            $parts[] = substr($utf16le, $i, 70);\n        }\n        return ['unicode', $parts];\n    } else {\n        // Convert to GSM 7-bit encoding if possible\n        $gsmEncoded = [];\n        for ($i = 0; $i < mb_strlen($text, 'UTF-8'); $i++) {\n            $char = mb_substr($text, $i, 1, 'UTF-8');\n            $pos = strpos(' @£$¥èéùìòÇ\nØø\rÅåΔ_ΦΓΛΩΠΨΣΘΗΞÄÖÑÜ§¡¿ÀÆæßÉÈÊÌÒÔÙÛÝÞßàäöñüàèêìòôùûýþ', $char);\n            if ($pos !== false) {\n                $gsmEncoded[] = decbin($pos);\n            } else {\n                // For extended characters, assume encoding (e.g., 0x1B for extended table)\n                $gsmEncoded[] = '00011011'; // ASCII representation of ESC\n                $charPos = strpos('Œœ‘’“”•–—˜™ˆ°±²³¼½¾€', $char);\n                $gsmEncoded[] = decbin($charPos);\n            }\n        }\n        return ['gsm', implode('', $gsmEncoded)];\n    }\n}\n\n// Example usage\n$text = "Let's test öäü éàè אני תמיכה בעברית";\n$result = encodeForSms($text);\n\nif ($result[0] === 'unicode') {\n    echo "Unicode message:\n";\n    foreach ($result[1] as $part) {\n        echo bin2hex($part) . "\n"; // Convert binary to hex for readability\n    }\n} else {\n    echo "GSM encoded message (binary):\n";\n    echo $result[1];\n}\n\n?>