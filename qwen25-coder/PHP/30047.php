<?php\n\n/*\n./index.php\n*/\n\nfunction Object($object)\n{\n    static $instance = array();\n    $args = func_get_args(); // Get all arguments passed to this function\n    array_shift($args);       // Remove the first argument which is the class name\n\n    if (is_file('./' . $object . '.php') === true)\n    {\n        $class = basename($object);\n\n        if (array_key_exists($class, $instance) === false)\n        {\n            if (class_exists($class, false) === false)\n            {\n                require('./' . $object . '.php');\n            }\n\n            // Use call_user_func_array to pass any number of arguments\n            $instance[$class] = call_user_func_array(function() use ($class, $args) {\n                return new $class(...$args);\n            }, []);\n        }\n\n        return $instance[$class];\n    }\n\n    return false;\n}\n\n/*\nHow do I make this work?\n*/\n\nObject('libraries/DB', 'DATABASE', 'USERNAME', 'PASSWORD')->Query(/* Some Query */);\n\n/*\n./libraries/DB.php\n*/\n\nclass DB\n{\n    public function __construct($database, $username, $password, $host = 'localhost', $port = 3306)\n    {\n        // do stuff here\n    }\n\n    public function Query($query) {\n        echo "Running query: $query";\n    }\n}\n\n?>