private function run_lengthy_job($command, $message) {\n    // Prepare the descriptors: stdin, stdout, and stderr.\n    $descriptorspec = array(\n        0 => array("pipe", "r"),  // stdin is a pipe that the child will read from\n        1 => array("pipe", "w"),  // stdout is a pipe that the child will write to\n        2 => array("pipe", "w")   // stderr is a pipe that the child will write to\n    );\n\n    // Start the process.\n    $process = proc_open($command, $descriptorspec, $pipes);\n\n    if (is_resource($process)) {\n        while (!feof($pipes[1])) {\n            printf("[%s]\t%s\n", time(), $message);\n            // Read from stdout line by line\n            if (($output = fgets($pipes[1], 1024)) !== false) {\n                exec(sprintf('logger "%s"', escapeshellarg(trim($output))));\n            }\n        }\n\n        // Close pipes.\n        fclose($pipes[0]);\n        fclose($pipes[1]);\n        fclose($pipes[2]);\n\n        // Get the exit code.\n        $return_value = proc_close($process);\n    } else {\n        echo "Failed to start process.";\n    }\n}