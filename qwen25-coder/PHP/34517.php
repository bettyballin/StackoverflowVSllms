class Person {\n    private $data = [];\n\n    public function __get($name) {\n        if (array_key_exists($name, $this->data)) {\n            return $this->data[$name];\n        }\n        throw new Exception("Property {$name} does not exist.");\n    }\n\n    public function __set($name, $value) {\n        $this->data[$name] = $value;\n    }\n\n    public function offsetSet($offset, $value) {\n        if (is_null($offset)) {\n            $this->data[] = $value;\n        } else {\n            $this->data[$offset] = $value;\n        }\n    }\n\n    public function offsetExists($offset) {\n        return isset($this->data[$offset]);\n    }\n\n    public function offsetUnset($offset) {\n        unset($this->data[$offset]);\n    }\n\n    public function offsetGet($offset) {\n        return isset($this->data[$offset]) ? $this->data[$offset] : null;\n    }\n}\n\n// Now you can do\n$person = new Person();\n$person->offsetSet('name', 'perro');\necho $person->offsetGet('name'); // Outputs: perro\n\n// Or, if you implement ArrayAccess interface in the class and make it iterable/array-like\nclass Person implements \ArrayAccess {\n    private $data = [];\n\n    public function __get($name) {\n        if (array_key_exists($name, $this->data)) {\n            return $this->data[$name];\n        }\n        throw new Exception("Property {$name} does not exist.");\n    }\n\n    public function __set($name, $value) {\n        $this->data[$name] = $value;\n    }\n\n    // Implement ArrayAccess\n    public function offsetSet($offset, $value) {\n        if (is_null($offset)) {\n            $this->data[] = $value;\n        } else {\n            $this->data[$offset] = $value;\n        }\n    }\n\n    public function offsetExists($offset) {\n        return isset($this->data[$offset]);\n    }\n\n    public function offsetUnset($offset) {\n        unset($this->data[$offset]);\n    }\n\n    public function offsetGet($offset) {\n        return isset($this->data[$offset]) ? $this->data[$offset] : null;\n    }\n}\n\n// Now you can do\n$person = new Person();\n$person['name'] = 'perro';\necho $person['name']; // Outputs: perro