const express = require('express');\nconst Queue = require('bull');\n\n// Set up Redis queue\nconst jobQueue = new Queue('data-processing-queue', 'redis://127.0.0.1:6379');\n\nconst app = express();\n\n// Start processing a job\napp.post('/process-data', async (req, res) => {\n    const jobId = await jobQueue.add({ dataYears: req.body.years });\n    res.json({ jobId });\n});\n\n// Check the status of a job\napp.get('/job-status/:id', async (req, res) => {\n    const id = parseInt(req.params.id);\n    const job = await jobQueue.getJob(id);\n    if (!job) {\n        return res.status(404).json({ error: 'Job not found' });\n    }\n    res.json({\n        status: job.finishedOn ? 'completed' : (job.failedReason ? 'failed' : 'processing'),\n        progress: job.progress()\n    });\n});\n\n// Set up Bull.js worker\njobQueue.process(async (job, done) => {\n    // Simulate a long-running task\n    await new Promise(resolve => setTimeout(resolve, 1200000)); // 20 minutes\n\n    // Update job progress and finalize it\n    job.progress(100);\n    done();\n});\n\napp.listen(3000, () => {\n    console.log('Server running on port 3000');\n});