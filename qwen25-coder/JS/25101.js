// Generate a unique identifier for this tab\nconst tabId = (Math.random() + 1).toString(36).substring(7);\n\n// Set this tab's ID in local storage with an expiration time\nlocalStorage.setItem('tabId', JSON.stringify({ id: tabId, expires: Date.now() + 2000 })); // expires in 2 seconds\n\n// Function to check for collisions\nfunction checkForCollisions() {\n    const currentTabs = JSON.parse(localStorage.getItem('tabs')) || {};\n\n    if (currentTabs[tabId]) {\n        alert("This page is already open in another tab!");\n        return;\n    }\n\n    // Add this tab's ID to the list of tabs\n    currentTabs[tabId] = Date.now();\n\n    // Save the updated tabs object back to local storage\n    localStorage.setItem('tabs', JSON.stringify(currentTabs));\n}\n\n// Function to clean up expired entries (should be run periodically)\nfunction cleanupExpiredTabs() {\n    const now = Date.now();\n    let tabs = JSON.parse(localStorage.getItem('tabs')) || {};\n    \n    for (const id in tabs) {\n        if (tabs[id] < now - 2000) { // 2 second old entries\n            delete tabs[id];\n        }\n    }\n\n    localStorage.setItem('tabs', JSON.stringify(tabs));\n}\n\n// Run functions when the page loads and periodically thereafter\nwindow.onload = function() {\n    checkForCollisions();\n    cleanupExpiredTabs(); // Clean up immediately\n    setInterval(checkForCollisions, 1000); // Check every second\n    setInterval(cleanupExpiredTabs, 5000); // Cleanup every 5 seconds\n};\n\n// Remove this tab's ID when the page is closed (optional)\nwindow.onbeforeunload = function() {\n    const tabs = JSON.parse(localStorage.getItem('tabs')) || {};\n    delete tabs[tabId];\n    localStorage.setItem('tabs', JSON.stringify(tabs));\n};