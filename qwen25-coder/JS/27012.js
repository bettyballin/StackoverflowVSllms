// Import CryptoJS library\nimport CryptoJS from 'crypto-js';\n\n// Derive key from user's password\nfunction deriveKey(password, salt) {\n    return CryptoJS.PBKDF2(password, salt, { keySize: 256 / 32 }).toString();\n}\n\n// Encrypt data\nfunction encryptData(data, masterKey) {\n    return CryptoJS.AES.encrypt(data, masterKey).toString();\n}\n\n// Decrypt data\nfunction decryptData(encryptedData, masterKey) {\n    const bytes = CryptoJS.AES.decrypt(encryptedData, masterKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n}\n\n// Example usage\nconst password = "userPassword";\nconst salt = CryptoJS.lib.WordArray.random(128/8).toString(); // Secure random salt\nconst masterKey = deriveKey(password, salt);\n\nconst originalText = "Sensitive User Information";\nconst encrypted = encryptData(originalText, masterKey);\nconsole.log("Encrypted:", encrypted);\n\nconst decrypted = decryptData(encrypted, masterKey);\nconsole.log("Decrypted:", decrypted);