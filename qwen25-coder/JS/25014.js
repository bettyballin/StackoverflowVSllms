function buildHeadingHierarchy() {\n    const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6'));\n    let currentList = document.createElement('ol');\n    const stack = [{ level: 0, list: currentList }];\n\n    headings.forEach(heading => {\n        const level = parseInt(heading.tagName.charAt(1), 10);\n\n        if (level > stack[stack.length - 1].level) {\n            // Create a new nested ordered list\n            const newList = document.createElement('ol');\n            const lastItem = document.querySelector('li:last-child', currentList);\n            lastItem.appendChild(newList);\n            stack.push({ level, list: newList });\n            currentList = newList;\n        } else if (level < stack[stack.length - 1].level) {\n            // Pop out of the necessary levels\n            while (stack[stack.length - 1].level >= level) {\n                stack.pop();\n            }\n            currentList = stack[stack.length - 1].list;\n        }\n\n        const listItem = document.createElement('li');\n        listItem.textContent = heading.textContent;\n        currentList.appendChild(listItem);\n    });\n\n    document.body.appendChild(currentList.firstElementChild);\n}\n\n// Call this function when the DOM is fully loaded\ndocument.addEventListener("DOMContentLoaded", buildHeadingHierarchy);