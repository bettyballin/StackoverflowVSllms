// In your Greasemonkey userscript\n\n(function() {\n  // Function to handle messages and perform GM_xmlhttpRequest\n  function handleMessage(event) {\n    if (event.origin !== "http://example.com") return; // Security check\n\n    const { method, url, headers } = event.data;\n\n    GM_xmlhttpRequest({\n      method: method,\n      url: url,\n      headers: headers,\n      onload: function(response) {\n        window.postMessage({ type: 'response', data: response }, event.origin);\n      }\n    });\n  }\n\n  // Listen for messages from the page\n  window.addEventListener('message', handleMessage, false);\n})();\n\n// In your injected script (page context)\n\nfunction secureAjax(method, url, headers) {\n  return new Promise((resolve, reject) => {\n    const handler = function(event) {\n      if (event.origin !== "http://example.com") return; // Security check\n      if (event.data.type === 'response') {\n        window.removeEventListener('message', handler);\n        resolve(event.data.data);\n      }\n    };\n\n    window.addEventListener('message', handler, false);\n\n    // Send a message to the Greasemonkey userscript\n    window.postMessage({ method: method, url: url, headers: headers }, "http://example.com");\n  });\n}\n\n// Usage example in your page context script\nsecureAjax('GET', 'http://www.example.net/', { "User-Agent": navigator.userAgent, "Accept": "text/html" })\n  .then(response => {\n    console.log("Response received:", response);\n    alert(JSON.stringify(response));\n  }).catch(error => {\n    console.error("Error:", error);\n  });