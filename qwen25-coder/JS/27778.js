function createRequestObject() {\n    var ro;\n    if (window.XMLHttpRequest) {\n        ro = new XMLHttpRequest();\n    } else if (window.ActiveXObject) { // IE6 and some older versions use this\n        ro = new ActiveXObject("Microsoft.XMLHTTP");\n    }\n    return ro;\n}\n\nvar req = null;\nfunction sendRequest(url, timeoutMillis) {\n    req = createRequestObject();\n    req.open('GET', url, true);\n    \n    var timerID = setTimeout(function() {\n        // Attempt to clear the request; this won't work with ActiveXObject\n        if (req) {\n            req.onreadystatechange = function() {}; // This resets the handler so nothing happens on return\n            try {\n                req.abort(); // This will not work in IE6, but it's safe to try\n            } catch(e) {}\n            alert("Request has timed out.");\n        }\n    }, timeoutMillis);\n    \n    req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n            clearTimeout(timerID); // Clear the timeout as soon as we get a response\n            if ((req.status >= 200 && req.status < 300) || req.status == 1223 ) { \n                // Successful request\n                alert("Response received: " + req.responseText);\n            } else {\n                alert("Error occurred with status code: " + req.status);\n            }\n        }\n    };\n    \n    try {\n        req.send(null);\n    } catch(e) {\n        clearTimeout(timerID); // Clear the timeout if an error occurs\n        alert("Request failed due to exception: " + e.message);\n    }\n}\n\n// Example usage: sendRequest('http://example.com/api', 5000);