const express = require('express');\nconst axios = require('axios');\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\n\napp.get('/download', async (req, res) => {\n    try {\n        // URL of the remote file\n        const fileUrl = 'http://other-server.com/file.zip';\n        \n        // Fetch the file from the other server\n        const response = await axios({\n            url: fileUrl,\n            method: 'GET',\n            responseType: 'stream' // Important: stream response\n        });\n\n        // Desired filename for the user\n        const desiredFilename = 'appropriate-name.zip';\n\n        // Pipe the file to a local path (this is optional if you just want to stream it)\n        const writer = fs.createWriteStream(path.join(__dirname, desiredFilename));\n        \n        response.data.pipe(writer);\n        \n        await new Promise((resolve, reject) => {\n            writer.on('finish', resolve);\n            writer.on('error', reject);\n        });\n\n        // Set the header to force download\n        res.setHeader('Content-disposition', `attachment; filename=${desiredFilename}`);\n\n        // Stream the file back to the user with the new name\n        fs.createReadStream(path.join(__dirname, desiredFilename)).pipe(res);\n\n        // Optionally delete the local copy after sending or keep for caching\n    } catch (error) {\n        res.status(500).send('Failed to download file.');\n    }\n});\n\napp.listen(3000, () => console.log('Server is running on port 3000'));