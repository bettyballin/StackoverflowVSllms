// Function to escape HTML special characters\nfunction escapeHtml(unsafe) {\n    return unsafe\n         .replace(/&/g, "&amp;")\n         .replace(/</g, "&lt;")\n         .replace(/>/g, "&gt;")\n         .replace(/"/g, "&quot;")\n         .replace(/'/g, "&#039;");\n}\n\n// Function to unescape HTML special characters (use with caution)\nfunction unescapeHtml(safe) {\n    return safe\n        .replace(/&amp;/g, '&')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '"')\n        .replace(/&#039;/g, "'");\n}\n\n// Example usage\nconst codeSnippet = '<textarea>This is some example code.</textarea>';\nconst escapedCodeSnippet = escapeHtml(codeSnippet);\nconsole.log('Escaped:', escapedCodeSnippet); // Output: &lt;textarea&gt;This is some example code.&lt;/textarea&gt;\n\n// When displaying, you can choose to leave it as is in your text editor/view\n// If you need to render the HTML safely for display purposes, use unescapeHtml