// Variable to store current version\nlet currentVersion = 0;\n\nfunction fetchData() {\n    // Fetch initial data and version on page load\n    fetch('data.xml')\n        .then(response => response.text())\n        .then(data => {\n            const parser = new DOMParser();\n            const xmlData = parser.parseFromString(data, "application/xml");\n            processData(xmlData);\n            \n            // Fetch the current version after fetching the initial data\n            fetchVersion();\n        })\n        .catch(error => console.log('Error fetching data:', error));\n}\n\nfunction fetchVersion() {\n    fetch('version.txt')\n        .then(response => response.text())\n        .then(version => {\n            if (parseInt(version) > currentVersion) {\n                // Update the version and fetch new data\n                currentVersion = parseInt(version);\n                fetchData();\n            }\n        })\n        .catch(error => console.log('Error fetching version:', error));\n}\n\nfunction processData(xmlData) {\n    // Process your XML data here\n}\n\n// Call fetchData on page load to initialize data\nfetchData();\n\n// Set interval to check for updates every 30 minutes (1800000 milliseconds)\nsetInterval(fetchVersion, 1800000);