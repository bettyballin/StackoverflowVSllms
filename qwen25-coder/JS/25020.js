$(document).ready(function() {\n    // Function to fetch data based on URL parameters\n    function fetchData(page, filter) {\n        $.ajax({\n            type: 'GET',\n            url: '/your-paging-url',  // replace with your URL endpoint\n            data: { page: page, filter: filter },\n            success: function(data) {\n                $('#results').html(data);  // update the DOM with new content\n            }\n        });\n    }\n\n    // Handle link clicks for pagination and filters\n    $(document).on('click', '.pagination-link, .filter-option', function(e) {\n        e.preventDefault();  // prevent default action (don't navigate)\n        var page = $(this).data('page');\n        var filter = $(this).data('filter');\n\n        // Update the URL with pushState\n        window.history.pushState({page: page, filter: filter}, '', '?page=' + page + '&filter=' + filter);\n\n        // Fetch and display the new content\n        fetchData(page, filter);\n    });\n\n    // Listen for popstate events (user clicks back/forward)\n    window.addEventListener('popstate', function(event) {\n        if (event.state) {\n            fetchData(event.state.page, event.state.filter);\n        } else {\n            // If no state object is present, you may want to fetch the default page\n            fetchData(1, '');  // or whatever your default values are\n        }\n    });\n\n    // Initial data fetch on page load\n    var urlParams = new URLSearchParams(window.location.search);\n    var currentPage = urlParams.get('page') || 1;\n    var currentFilter = urlParams.get('filter') || '';\n    fetchData(currentPage, currentFilter);\n});