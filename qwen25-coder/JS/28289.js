// Default error handler\nfunction defaultErrorHandler(XMLHttpRequest, textStatus, errorThrown) {\n    console.error("AJAX Error: " + textStatus + errorThrown);\n    alert('An error occurred. Please try again later.');\n}\n\n// Function factory to create AJAX calls with custom success handlers\nfunction createAjaxCall(successCallback) {\n    return function(data) {\n        // Preprocessing can go here if common across all calls, otherwise pass it as another parameter\n        const preprocessingData = preprocessData(data);\n\n        $.ajax({\n            url: 'your-api-endpoint', // specify the URL dynamically or pass as a parameter\n            method: 'POST',\n            data: preprocessingData,\n            success: function(result) {\n                if (successCallback && typeof successCallback === 'function') {\n                    successCallback(result);\n                } else {\n                    console.warn('No success callback was provided.');\n                }\n            },\n            error: defaultErrorHandler // Reuse the common error handler\n        });\n\n        return false; // Optional, depends on your specific use case\n    };\n}\n\n// Example of preprocessing function (can be made dynamic as well)\nfunction preprocessData(data) {\n    // Preprocess data here if necessary\n    return data;\n}\n\n// Usage:\nconst doSomething = createAjaxCall(function handleResponse(result) {\n    console.log('Successful response:', result);\n    // Handle the result specific to this call\n});\n\n// Call AJAX for specific action\ndoSomething({ key: 'value' });