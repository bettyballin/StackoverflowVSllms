const jwt = require('jsonwebtoken');\nconst express = require('express');\nconst app = express();\n\n// Secret key for JWT\nconst SECRET_KEY = 'your_secret_key';\n\n// Middleware to verify token\nfunction authenticateToken(req, res, next) {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    if (token == null) return res.sendStatus(401);\n\n    jwt.verify(token, SECRET_KEY, (err, user) => {\n        if (err) return res.sendStatus(403);\n        req.user = user;\n        next();\n    });\n}\n\n// Route to get a token\napp.post('/login', express.json(), (req, res) => {\n    // Authenticate user here (e.g., check username and password)\n    const username = req.body.username;\n    const user = { name: username }; // In real world, generate this object after verification\n\n    // Generate JWT\n    const accessToken = jwt.sign(user, SECRET_KEY);\n    res.json({ accessToken: accessToken });\n});\n\n// Protected route example\napp.get('/profile', authenticateToken, (req, res) => {\n    res.json(req.user);\n});\n\napp.listen(3000, () => console.log('Server running on port 3000'));