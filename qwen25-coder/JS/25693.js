const express = require('express');\nconst redis = require('redis');\n\nconst app = express();\nconst client = redis.createClient();\n\napp.get('/data', (req, res) => {\n    const key = 'mykey';\n    \n    // First try to fetch the value from Redis cache\n    client.get(key, (err, data) => {\n        if(err) throw err;\n        \n        if(data !== null){\n            console.log('Serving cached data');\n            return res.json(JSON.parse(data));\n        } else {\n            // Simulate a complex operation\n            const newValue = { value: 'Hello, world!' };\n            const ttlInSeconds = 30; // TTL for the cache entry\n            \n            client.setex(key, ttlInSeconds, JSON.stringify(newValue), (err) => {\n                if(err) throw err;\n                \n                console.log('Setting new data in cache');\n                return res.json(newValue);\n            });\n        }\n    });\n});\n\napp.listen(3000, () => console.log('App listening on port 3000!'));