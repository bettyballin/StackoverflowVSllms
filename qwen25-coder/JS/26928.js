async function fillAndSavePdf(templateBytes, formData) {\n    // Load an existing PDF document from bytes using pdf-lib\n    const pdfDoc = await PDFLib.PDFDocument.load(templateBytes);\n\n    // Get the form fields of the PDF\n    const form = pdfDoc.getForm();\n    const fields = form.getFields();\n\n    // Define your form data with matching field names to those in the PDF\n    for (let [fieldName, fieldValue] of Object.entries(formData)) {\n        const textField = fields.find(f => f.getName() === fieldName);\n        if (textField) {\n            textField.setText(fieldValue);\n        }\n    }\n\n    // Serialize the filled PDF to bytes (a Uint8Array)\n    const pdfBytes = await pdfDoc.save();\n\n    // Convert bytes to Blob for saving or printing\n    const blob = new Blob([pdfBytes], { type: "application/pdf" });\n\n    // Create a temporary URL and trigger download\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement("a");\n    a.href = url;\n    a.download = `filled_form.pdf`;\n    document.body.appendChild(a);\n    a.click();\n\n    // Clean up\n    setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n    }, 0);\n}