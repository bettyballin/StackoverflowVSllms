function gaussianElimination(matrix) {\n    const n = matrix.length;\n    \n    for (let i = 0; i < n; i++) {\n        // Find the pivot row and swap it to the ith position\n        let pivotRow = -1;\n        for (let j = i; j < n; j++) {\n            if (matrix[j][i] === 1) {\n                pivotRow = j;\n                break;\n            }\n        }\n\n        if (pivotRow === -1) continue;\n\n        // Swap rows\n        [matrix[i], matrix[pivotRow]] = [matrix[pivotRow], matrix[i]];\n\n        for (let k = i + 1; k < n; k++) {\n            if (matrix[k][i] === 1) {\n                // Eliminate the entry\n                for (let col = i; col <= n; col++) { // n is used because it includes RHS column as well\n                    matrix[k][col] ^= matrix[i][col];\n                }\n            }\n        }\n    }\n\n    // Back substitution\n    const solution = new Array(n).fill(0);\n\n    for (let i = n - 1; i >= 0; i--) {\n        let sum = matrix[i][n]; // Start with the right-hand side value\n\n        for (let j = i + 1; j < n; j++) {\n            sum ^= solution[j] & matrix[i][j];\n        }\n\n        if (matrix[i][i] === 1) { // Ensure there's no division by zero conceptually\n            solution[i] = sum;\n        }\n    }\n\n    return solution;\n}\n\n// Sample set of equations as augmented matrix\nconst systemOfEquations = [\n    [1, 1, 0, 1, 0, 0, 0, 0, 0, 1],\n    [0, 1, 0, 1, 1, 0, 0, 0, 0, 1],\n    [0, 1, 1, 0, 0, 1, 0, 0, 0, 1],\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n    [0, 1, 0, 1, 1, 0, 0, 0, 0, 1],\n    [0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n    [0, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    [0, 0, 0, 1, 1, 0, 1, 1, 0, 1],\n    [0, 0, 0, 0, 0, 1, 0, 0, 1, 1]\n];\n\nconsole.log(gaussianElimination(systemOfEquations));\n// Expected output:\n// [1, 0, 0, 0, 1, 1, 1, 1, 0] (x1 to x9)