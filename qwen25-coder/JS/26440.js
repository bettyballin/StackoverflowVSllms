function fitStringToSize(str, len) {\n    if (len <= 3) return '...'; // Minimum length for ellipsis\n\n    const f = document.createElement('span');\n    f.style.position = 'absolute'; // Use absolute positioning to avoid affecting layout\n    f.style.visibility = 'hidden'; // Visually hidden but affects layout\n    f.style.whiteSpace = 'nowrap'; // Prevents text from wrapping\n    document.body.appendChild(f);\n\n    function updateWidth(newStr) {\n        f.textContent = newStr;\n        return f.offsetWidth > len;\n    }\n\n    let shortStr = str;\n    if (updateWidth(str)) { // Check if it fits initially\n        let step = Math.ceil(str.length / 5);\n        while (shortStr.length > step && updateWidth(shortStr)) {\n            shortStr = shortStr.slice(0, -step) + '...';\n        }\n        // Fine-tune the string length\n        while (shortStr.length > 4 && updateWidth(shortStr)) { // Ensure room for ellipsis\n            shortStr = shortStr.slice(0, -1) + '...';\n        }\n    }\n\n    document.body.removeChild(f);\n\n    return shortStr.length < str.length ? `<abbr title="${encodeURIComponent(str)}">${shortStr}</abbr>` : str;\n}