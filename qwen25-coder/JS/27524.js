// Function to simulate AJAX call\nfunction makeAjaxCall(url) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => { // Simulated delay for AJAX operation\n            if (url === "failed") {\n                reject("Failed to fetch data");\n            } else {\n                resolve(`Data from ${url}`);\n            }\n        }, 1000);\n    });\n}\n\n// Two AJAX calls\nconst ajaxCall1 = makeAjaxCall('https://api.example.com/data1');\nconst ajaxCall2 = makeAjaxCall('https://api.example.com/data2');\n\n// Wait for both promises to resolve and then call the third function\nPromise.all([ajaxCall1, ajaxCall2])\n    .then(results => {\n        console.log("Both AJAX calls are done.");\n        console.log("Results:", results);\n        thirdFunction(results); // Call your third function here\n    })\n    .catch(error => {\n        console.error("One of the calls failed.", error);\n    });\n\n// Define your third function\nfunction thirdFunction(data) {\n    console.log("Executing third function with data:", data);\n}