app.get('/resource/:id', (req, res) => {\n    const resourceId = req.params.id;\n    const viewerRole = req.query.viewer; // 'buyer' or 'seller'\n\n    // Assume getCurrentUserRole is a function that retrieves the role of the currently authenticated user.\n    const currentUserRole = getCurrentUserRole(req);\n\n    if (viewerRole !== currentUserRole) {\n        return res.status(403).send('Forbidden: You are not authorized to view this resource in the requested format.');\n    }\n\n    // Fetch data based on viewer role, applying appropriate filters and returning relevant fields.\n    const resourceData = fetchResourceData(resourceId, viewerRole);\n    res.json(resourceData);\n});\n\nfunction getCurrentUserRole(req) {\n    // Logic to determine the user's role based on session or token\n    return req.user.role; // Assuming user information is available in `req`\n}\n\nfunction fetchResourceData(resourceId, viewerRole) {\n    // Logic to filter and retrieve resource data based on role\n    let data;\n    // Fetch full dataset first\n    if (viewerRole === 'buyer') {\n        data = { sharedInfo: '...', buyerSpecificInfo: '...' };\n    } else if (viewerRole === 'seller') {\n        data = { sharedInfo: '...', sellerSpecificInfo: '...' };\n    }\n    return data;\n}