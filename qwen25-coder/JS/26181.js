function createProxiedActiveXObject(progid) {\n    var obj = new ActiveXObject(progid);\n    \n    // Create a proxy for the object\n    return new Proxy(obj, {\n        get: function(target, property) {\n            if (typeof target[property] === 'function') {\n                return function(...args) {\n                    // Log the method call\n                    console.log(`Method "${property}" called with arguments:`, args);\n                    \n                    // Call the original method\n                    return target[property].apply(this, args);\n                };\n            }\n            return target[property];\n        }\n    });\n}\n\n// Usage example:\nvar tconn = createProxiedActiveXObject("Tconnector");\n\n// Now any call to methods on tconn will be logged\ntconn.open('some parameter'); // This should log the method call