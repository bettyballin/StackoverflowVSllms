Type.registerNamespace('Demo');\n\n    Demo.CustomTextBox = function(element) {\n        Demo.CustomTextBox.initializeBase(this, [element]);\n    }\n\n    Demo.CustomTextBox.prototype = {\n\n        initialize: function() {\n            Demo.CustomTextBox.callBaseMethod(this, 'initialize');\n\n            this._onblurHandler = Function.createDelegate(this, this._onBlur);\n\n            $addHandlers(this.get_element(), { 'blur': this._onBlur }, this);\n        },\n\n        dispose: function() {\n            $clearHandlers(this.get_element());\n\n            Demo.CustomTextBox.callBaseMethod(this, 'dispose');\n        },\n\n        _onBlur: function(e) {\n            if (this.get_element() && !this.get_element().disabled) {\n                var newValue = this.get_element().value;\n\n                // Using jQuery for simplicity\n                $.ajax({\n                    type: "POST",\n                    url: "YourPage.aspx/UpdateControl", // Make sure to update the URL\n                    data: JSON.stringify({ newValue: newValue }),\n                    contentType: "application/json; charset=utf-8",\n                    dataType: "json",\n                    success: function(response) {\n                        document.getElementById('TargetControlID').innerHTML = response.d;\n                    },\n                    error: function(error) {\n                        console.error("Error updating control:", error);\n                    }\n                });\n            }\n        }\n    }\n\n    Demo.CustomTextBox.registerClass('Demo.CustomTextBox', Sys.UI.Control);\n\n    if (typeof(Sys) !== 'undefined') Sys.Application.notifyScriptLoaded();