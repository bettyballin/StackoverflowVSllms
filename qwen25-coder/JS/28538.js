// A simple function\nfunction foo() { return 'Hello, I am a Function'; }\n\nconsole.log(typeof foo); // → "function"\nconsole.log({}.toString.call(foo)); // → "[object Function]"\nfoo(); // → "Hello, I am a Function"\n\n// A callable object using Proxy\nconst callableObject = new Proxy({}, {\n    apply: function(target, thisArg, argumentsList) {\n        return 'Hello, I am Callable';\n    }\n});\n\nconsole.log(typeof callableObject); // → "object"\nconsole.log({}.toString.call(callableObject)); // → "[object Object]"\ncallableObject(); // → "Hello, I am Callable"