form.submit(function(event) {\n    event.preventDefault(); // Prevent form submission until validation is complete\n\n    var validationResult = $.when(validateUsername(), validateEmail(), validatePassword());\n\n    validationResult.done(function(usernameValid, emailValid, passwordValid) {\n        if (usernameValid && emailValid && passwordValid) {\n            form.off('submit').submit(); // Re-submit the form after validations are done\n        }\n    });\n});\n\nfunction validateUsername() {\n    var deferred = $.Deferred();\n    usernameInfo.addClass("sign_up_drill");\n    usernameInfo.text("checking...");\n    var b = username.val();\n    var filter = /^[a-zA-Z0-9_]+$/;\n\n    $.post("../username_check.php", {su_username: username.val()}, function(data) {\n        if (data === 'yes') {\n            username.addClass("error");\n            usernameInfo.text("sorry, that one's taken");\n            usernameInfo.addClass("error");\n            deferred.resolve(false); // Resolve with false indicating validation failed\n        } else if (!filter.test(b)) {\n            username.addClass("error");\n            usernameInfo.text("no funny characters please");\n            usernameInfo.addClass("error");\n            deferred.resolve(false);\n        } else {\n            username.removeClass("error");\n            usernameInfo.text("ok");\n            usernameInfo.removeClass("error");\n            deferred.resolve(true); // Resolve with true indicating validation passed\n        }\n    });\n\n    return deferred.promise(); // Return the promise object to handle async operation\n}\n\n// Similarly, modify validateEmail and validatePassword functions to use Deferred and Promise.