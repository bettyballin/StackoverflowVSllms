// Sample data with state abbreviations and values\nconst data = {\n  "AL": 120,\n  "AK": 95,\n  "AZ": 160,\n  "AR": 80,\n  "CA": 240,\n  // Add more states as necessary...\n};\n\n// Width and height of the svg element\nconst width = 960;\nconst height = 600;\n\n// Create an SVG container for the map\nconst svg = d3.select("body").append("svg")\n    .attr("width", width)\n    .attr("height", height);\n\n// Set scale range\nconst color = d3.scaleQuantize()\n    .domain([100, 250]) // Min and max values in the data domain\n    .range(d3.schemeBlues[9]); // Use blue color scheme\n\n// Load TopoJSON file of USA states\nd3.json("https://d3js.org/us-10m.v1.json").then(function(us) {\n  svg.append("g")\n      .attr("class", "states")\n    .selectAll("path")\n      .data(topojson.feature(us, us.objects.states).features)\n    .enter().append("path")\n      .attr("fill", function(d) { return color(data[d.id]); }) // Set fill color\n      .attr("d", d3.geoPath())\n      .on("mouseover", function(event, d) {\n        d3.select(this).style("cursor", "pointer");\n        console.log(`State: ${d.properties.name}, Value: ${data[d.id] || 'N/A'}`);\n      })\n      .on("mouseout", function() {\n        d3.select(this).style("cursor", "default");\n      });\n\n  // Add state names if needed\n  svg.append("g")\n      .attr("class", "state-labels")\n    .selectAll("text")\n      .data(topojson.feature(us, us.objects.states).features)\n    .enter().append("text")\n      .attr("transform", function(d) {\n        return `translate(${d3.geoPath().centroid(d)})`;\n      })\n      .attr("dy", ".35em")\n      .text(function(d) { return d.properties.name[0]; });\n});