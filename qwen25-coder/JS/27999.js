var map;\nvar infowindow;\n\nfunction initMap() {\n    map = new google.maps.Map(document.getElementById('map'), {\n        center: {lat: 40.7128, lng: -74.0060}, // Default to New York City\n        zoom: 13\n    });\n    \n    infowindow = new google.maps.InfoWindow();\n    createAutocompleteSearch();\n}\n\nfunction createAutocompleteSearch() {\n    var input = document.getElementById('pac-input');\n    var searchBox = new google.maps.places.SearchBox(input);\n    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n    // Bias the SearchBox results towards current map's viewport.\n    map.addListener('bounds_changed', function() {\n        searchBox.setBounds(map.getBounds());\n    });\n\n    searchBox.addListener('places_changed', function() {\n        var places = searchBox.getPlaces();\n\n        if (places.length == 0) {\n            return;\n        }\n        \n        // Clear out the old markers, if any.\n        markers.forEach(function(marker) {\n            marker.setMap(null);\n        });\n        markers = [];\n\n        // For each place, get the icon, name and location.\n        var bounds = new google.maps.LatLngBounds();\n        places.forEach(function(place) {\n            if (!place.geometry) {\n                console.log("Returned place contains no geometry");\n                return;\n            }\n            \n            createMarkerAndCircle(place);\n        });\n    });\n}\n\nvar markers = [];\nfunction createMarkerAndCircle(place) {\n    // Create a marker for each place.\n    var marker = new google.maps.Marker({\n        map: map,\n        title: place.name,\n        position: place.geometry.location\n    });\n\n    markers.push(marker);\n\n    if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n    } else {\n        bounds.extend(place.geometry.location);\n    }\n\n    var distanceInKm = 5; // Set your desired distance here in kilometers\n\n    // Draw a circle showing the search radius.\n    new google.maps.Circle({\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map: map,\n        center: place.geometry.location,\n        radius: distanceInKm * 1000 // Radius in meters\n    });\n}\n\n// Ensure the API key is secure and not exposed in client-side code