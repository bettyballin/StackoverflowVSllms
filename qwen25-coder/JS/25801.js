const express = require('express');\nconst path = require('path');\nconst fs = require('fs');\nconst app = express();\nconst port = 3000;\n\n// Mock function to simulate database access\nasync function getImageFromDatabase(imageId) {\n    // This would contain logic to fetch blob from the DB using imageId\n    return Buffer.from('some base64 string of an image', 'base64');\n}\n\n// Directory to store cached images\nconst cacheDir = path.join(__dirname, 'cached_images');\n\nfs.existsSync(cacheDir) || fs.mkdirSync(cacheDir);\n\napp.get('/image/:id', async (req, res) => {\n    const imageId = req.params.id;\n    const imagePath = path.join(cacheDir, `${imageId}.png`);\n\n    // Try to serve the cached image\n    if (fs.existsSync(imagePath)) {\n        return res.sendFile(imagePath);\n    }\n\n    try {\n        // If not found in cache, fetch from database\n        const imageData = await getImageFromDatabase(imageId);\n\n        // Cache the fetched image\n        fs.writeFileSync(imagePath, imageData);\n\n        // Serve the newly cached image\n        res.type('png').send(imageData);\n    } catch (error) {\n        console.error("Error fetching image from database:", error);\n        res.status(500).send('Could not fetch image');\n    }\n});\n\napp.listen(port, () => {\n    console.log(`Server running at http://localhost:${port}`);\n});