// Simple in-memory cache object\nconst ajaxCache = {};\n\n$.ajaxSetup({\n    type: 'GET',\n    dataType: 'json', // Adjust according to your needs (e.g., xml, html, etc.)\n    cacheDuration: 60000, // Cache duration in milliseconds (1 minute)\n    beforeSend: function(jqXHR, settings) {\n        const url = settings.url;\n        if (!settings.cacheResponse && ajaxCache[url]) {\n            const cachedData = ajaxCache[url];\n            const currentTime = (new Date()).getTime();\n            if (currentTime - cachedData.timestamp < settings.cacheDuration) {\n                jqXHR.abort(); // Prevent the AJAX request\n                setTimeout(function() {\n                    settings.success(cachedData.data); // Call success callback with cached data\n                }, 0);\n                return false;\n            }\n        }\n    },\n    complete: function(jqXHR, textStatus, settings) {\n        const url = settings.url;\n        if (!settings.cacheResponse && textStatus === 'success') {\n            ajaxCache[url] = {\n                data: jqXHR.responseJSON,\n                timestamp: (new Date()).getTime()\n            };\n        }\n    }\n});\n\n// Usage example\nfunction fetchData(itemId) {\n    $.ajax({\n        url: `/api/items/${itemId}`,\n        cacheResponse: false, // Set this to true if you want to bypass cache for a specific request\n        success: function(data) {\n            console.log('Data retrieved:', data);\n            // Handle your UI update here\n        },\n        error: function(xhr, status, error) {\n            console.error('Error fetching data:', error);\n        }\n    });\n}