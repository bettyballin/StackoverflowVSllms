const acorn = require('acorn');\n\nfunction getNestedFunctionNames(fn) {\n    const source = fn.toString();\n    const ast = acorn.parse(source, { ecmaVersion: 12 });\n    \n    let nestedFunctions = [];\n    \n    for (let node of ast.body[0].body.body) {\n        if (node.type === 'FunctionDeclaration' && node.id !== null) {\n            nestedFunctions.push(node.id.name);\n        }\n    }\n    \n    return nestedFunctions;\n}\n\n// Example usage\nfunction someFn() {\n    /**\n     * Some comment\n     */\n    function fn1() {\n        alert("/*This is not a comment, it's a string literal*/");\n    }\n\n    function // keyword\n    fn2 // name\n    (x, y) // arguments\n    {\n        /*\n        body\n        */\n    }\n\n    var f = function () { // anonymous, ignore\n    };\n}\n\nconsole.log(getNestedFunctionNames(someFn)); // Output: [ 'fn1', 'fn2' ]