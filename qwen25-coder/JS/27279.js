function createCometXHR() {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState === 3) { // Receiving data\n            try {\n                var receivedData = xhr.responseText;\n                if (receivedData.length > 0) {\n                    // Process the incoming chunk of data\n                    processData(receivedData);\n                    \n                    // In order to "reset" responseText, we open a new connection with the same settings.\n                    xhr.abort(); // Abort current request but keep it clean\n                    createCometXHR(); // Re-establish the connection for more data\n                }\n            } catch (error) {\n                console.error('Error processing data: ', error);\n            }\n        }\n    };\n    \n    xhr.onerror = function() {\n        console.error('Connection error');\n        // Optionally, attempt to reconnect here\n    };\n\n    xhr.open("GET", "/your/data/endpoint", true);\n    xhr.send(null);\n}\n\nfunction processData(data) {\n    try {\n        // Example: parse as JSON and process each line separately if it's split by newline characters.\n        var lines = data.split('\n');\n        lines.forEach(function(line) {\n            if (line.trim()) { // Check for non-empty lines\n                var jsonData = JSON.parse(line);\n                handleJSONData(jsonData); // Implement your data handling logic here\n            }\n        });\n    } catch (e) {\n        console.error('Failed to parse data: ', e);\n    }\n}\n\nfunction handleJSONData(data) {\n    // Logic to handle the parsed data object goes here.\n    console.log("Received data:", data);\n}\n\n// Initial call to start the Comet connection\ncreateCometXHR();