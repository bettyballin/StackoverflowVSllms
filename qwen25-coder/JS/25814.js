function ioServer(request_data) {\n    return new Promise((resolve, reject) => {\n        $.ajax({\n            cache: false,\n            data: "request=" + request_data,\n            dataType: "json",\n            error: function(XMLHttpRequest, textStatus, errorThrown) {\n                reject(errorThrown);\n            },\n            success: function(response_data) {\n                resolve(response_data);\n            },\n            timeout: 5000,\n            type: "POST",\n            url: "/portal/index.php/async"\n        });\n    });\n}\n\nfunction processRequest(command, item, properties) {\n    var request = {};\n    request.command = command;\n    request.item = item;\n    request.properties = properties;\n    var toServer = JSON.stringify(request);\n\n    return ioServer(toServer).then(responseData => {\n        if (responseData.response == 1) {\n            return responseData.id;\n        } else {\n            throw new Error('Server did not allow the request');\n        }\n    }).catch(error => {\n        console.error('Error processing request:', error);\n        throw error; // Re-throw after logging\n    });\n}\n\n// Usage example:\nprocessRequest('commandValue', 'itemValue', { property: 'value' })\n    .then(id => {\n        $('#tabs').tabs('add', '#tab-' + id, 'New tab');\n    })\n    .catch(error => {\n        console.error('Failed to process request:', error);\n    });