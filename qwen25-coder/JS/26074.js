// Function to simulate starting and stopping a page load\nfunction managePageLoadState(start) {\n    if (start) {\n        // Simulate a new request starting\n        window.dispatchEvent(new Event('loadstart'));\n    } else {\n        // Simulate all requests ending\n        window.dispatchEvent(new Event('loadend'));\n    }\n}\n\n// Example usage with AJAX\nlet activeRequests = 0;\n\nfunction ajaxRequest(url, callback) {\n    const xhr = new XMLHttpRequest();\n    \n    // Increment the request counter when a request starts\n    managePageLoadState(true);\n    activeRequests++;\n\n    xhr.open('GET', url, true);\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status === 200) {\n                callback(xhr.responseText);\n            }\n            \n            // Decrement the request counter when a request ends\n            activeRequests--;\n            if (activeRequests <= 0) {\n                managePageLoadState(false);\n            }\n        }\n    };\n    xhr.send();\n}\n\n// Example of using the ajaxRequest function\najaxRequest('https://api.example.com/data', function(response) {\n    console.log('Response:', response);\n});