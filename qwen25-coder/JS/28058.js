function validateRegForm(reg) {\n    var isValidForm = true;\n    var warningIcon = ""; // for later in case we want to use an icon next to warning msg\n\n    with (reg) {\n        var regFormDiv = document.getElementById("registration_form");\n\n        // Check if dynamic div exist, if so, remove it\n        if (document.getElementById('disp_errors') != null) {\n            var dispErrorsDiv = document.getElementById('disp_errors');\n            document.getElementById('reg_form').removeChild(dispErrorsDiv);\n        }\n        // Dynamically create new 'div'\n        var errorDiv = document.createElement('div');\n        errorDiv.setAttribute('id', 'disp_errors');\n        errorDiv.setAttribute('style', 'background-color:pink;border:1px solid red;color:red;padding:10px;');\n        document.getElementById('reg_form').insertBefore(errorDiv, regFormDiv);\n\n        var xmlhttp = httpRequest();\n        var available = new Array();\n\n        xmlhttp.onreadystatechange = function () {\n            if (xmlhttp.readyState == 4) {\n                var response = xmlhttp.responseText;\n                if (response != "") {\n                    // Return values\n                    var newValue = response.split("|");\n                    available[0] = newValue[0];\n                    available[1] = newValue[1];\n\n                    if (available[1] == "taken") {\n                        errorDiv.innerHTML += warningIcon + 'Username is already taken!<br />';\n                        isValidForm = false;\n                    } else if (u_username.value.length < 4) {\n                        errorDiv.innerHTML += warningIcon + 'Username must be more than 4 characters long!<br />';\n                        isValidForm = false;\n                    } else if (u_username.value.length > 35) {\n                        errorDiv.innerHTML += warningIcon + 'Username must be less than 34 characters long!<br />';\n                        isValidForm = false;\n                    }\n\n                    if (available[0] == "taken") {\n                        errorDiv.innerHTML += warningIcon + 'Email address entered is already in use!<br />';\n                        isValidForm = false;\n                    } else if (u_email.value == "") {\n                        errorDiv.innerHTML += warningIcon + 'Email address is required!<br />';\n                        isValidForm = false;\n                    }\n\n                    // Add other validations here that do not depend on the AJAX response\n\n                    if (!isValidForm) {\n                        window.scroll(0, 0);\n                    }\n                } else {\n                    console.error("Response was empty or invalid");\n                }\n            }\n        };\n\n        xmlhttp.open('GET', 'your-url-here'); // Set your URL and method\n        xmlhttp.send();\n\n        // Other validations that do not depend on the AJAX response\n        if (u_password.value.length < 4) {\n            errorDiv.innerHTML += warningIcon + 'Password must be more than 4 characters long!<br />';\n            isValidForm = false;\n        } else if (u_password.value.length > 35) {\n            errorDiv.innerHTML += warningIcon + 'Password must be less than 34 characters long!<br />';\n            isValidForm = false;\n        } else if (u_password.value != u_password2.value) {\n            errorDiv.innerHTML += warningIcon + 'Password and re-typed password don\'t match!<br />';\n            isValidForm = false;\n        }\n\n        // ... rest of your validations\n\n        // Return true/false only after all validations, including those that depend on the AJAX response\n        return isValidForm; // This will not work as expected due to async nature. Instead, handle submission in onreadystatechange.\n    }\n}