const express = require('express');\nconst app = express();\nconst rateLimit = require("express-rate-limit");\n\nconst apiKeys = { // Replace with actual secure storage for keys\n    'web-app-key': true,\n    'desktop-app-key': true\n};\n\n// Enable if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx)\napp.set('trust proxy', 1);\n\nconst limiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 100 // limit each IP to 100 requests per windowMs\n});\n\n// Apply the rate limiting middleware to all requests\napp.use(limiter);\n\nfunction authenticateApiKey(req, res, next) {\n    const key = req.headers['x-api-key'];\n    if (!key || !apiKeys[key]) {\n        return res.status(403).json({ message: 'Invalid API key' });\n    }\n    next();\n}\n\napp.post('/your-web-service-endpoint', authenticateApiKey, (req, res) => {\n    // Handle the request\n    res.json({ success: true, data: {} });\n});\n\napp.listen(3000, () => {\n    console.log('Server is running on port 3000');\n});