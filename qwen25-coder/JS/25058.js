function loadGoogleMaps(callback, timeoutDuration = 10000) {\n    const timeoutId = setTimeout(() => {\n        clearTimeout(timeoutId);\n        callback('timeout', null); // Handle timeout case\n    }, timeoutDuration);\n\n    // Your Google Maps loading logic here\n    function initMap() {\n        const map = new google.maps.Map(document.getElementById('map'), {\n            center: { lat: -34.397, lng: 150.644 },\n            zoom: 8\n        });\n        clearTimeout(timeoutId);\n        callback(null, map); // Success case\n    }\n\n    if (window.google && window.google.maps) {\n        initMap();\n    } else {\n        const script = document.createElement('script');\n        script.src = 'https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap';\n        script.async = true;\n        script.defer = true;\n\n        window.initMap = initMap;\n        document.head.appendChild(script);\n    }\n}\n\n// Example usage\nloadGoogleMaps((err, map) => {\n    if (err === 'timeout') {\n        console.log('Google Maps request timed out. Displaying a useful message to the user.');\n        document.getElementById('map').innerHTML = '<p>Sorry, the map could not be loaded at this time.</p>';\n    } else if (err) {\n        console.error('Error loading Google Maps:', err);\n    } else {\n        console.log('Google Maps loaded successfully:', map);\n    }\n}, 10000); // Timeout after 10 seconds