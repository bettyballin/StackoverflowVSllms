function findAnagrams(words) {\n    const anagrams = {};\n\n    // Sort the characters in the word and use it as a key\n    words.forEach(word => {\n        const sortedWord = word.split('').sort().join('');\n        // Add the original word to the list of its anagram group\n        if (!anagrams[sortedWord]) {\n            anagrams[sortedWord] = [];\n        }\n        anagrams[sortedWord].push(word);\n    });\n\n    // Filter out groups with only one word (which are not anagrams)\n    const result = Object.values(anagrams).filter(group => group.length > 1);\n\n    // Format the output as required\n    return result.map((group, index) => `${index + 1}. ${group.join(', ')}`).join('\n');\n}\n\nconst words = ["monk", "konm", "nkom", "bbc", "cbb", "dell", "ledl", "llde"];\nconsole.log(findAnagrams(words));