// Use jQuery for simplicity\n$(document).ready(function() {\n    // Example function to fetch and display products based on filter options\n    function loadProducts(filters) {\n        $.ajax({\n            url: 'getProducts.php', // Your server-side script to handle requests\n            method: 'GET',\n            data: { filters: filters },\n            success: function(response) {\n                $('#productList').html(response);\n            }\n        });\n    }\n\n    // Listen for popstate event which is triggered when the active history entry changes\n    window.addEventListener('popstate', function(event) {\n        if (event.state && event.state.filters) {\n            loadProducts(event.state.filters);\n        } else {\n            loadProducts({}); // Initial state, no filters applied\n        }\n    });\n\n    // Example click handler for filter links\n    $('.filter-link').click(function(e) {\n        e.preventDefault();\n        var currentFilters = {}; // Assume this object holds the current filter state\n        // Update currentFilters based on user interactions\n\n        // Push new state to history stack\n        history.pushState({ filters: currentFilters }, '', '?' + $.param(currentFilters));\n\n        // Load products with updated filters\n        loadProducts(currentFilters);\n    });\n\n    // Initial page load, might need to parse query parameters if you are allowing deep linking\n    var initialFilters = {}; // Parse this from URL if needed\n    loadProducts(initialFilters);\n});