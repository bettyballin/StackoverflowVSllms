function validateForm(form) {\n    const validationRules = [\n        { condition: () => isNaN(form.currentValue), message: "The new value must be a number." },\n        { \n            condition: () => form.otherField > 0 && form.currentValue <= 0, \n            message: "If other field is greater than 0, current value must also be greater than 0."\n        },\n        { \n            condition: () => form.anotherField === 1 && form.currentValue !== 0,\n            message: "If another field is 1, current value must be 0."\n        },\n        {\n            condition: () => form.yetAnotherField === true && form.currentValue % form.modulusField !== 0,\n            message: "If yet another field is true, current value must be a multiple of modulus field."\n        }\n    ];\n\n    let errors = [];\n    validationRules.forEach(rule => {\n        if (rule.condition()) {\n            errors.push(rule.message);\n        }\n    });\n\n    if (errors.length > 0) {\n        alert(errors.join("\n"));\n        return false;\n    }\n\n    // If no errors, you can proceed with form submission or further actions\n    return true;\n}\n\n// Example usage:\nconst form = {\n    currentValue: 10,\n    otherField: 5,\n    anotherField: 1,\n    yetAnotherField: true,\n    modulusField: 2\n};\n\nvalidateForm(form);