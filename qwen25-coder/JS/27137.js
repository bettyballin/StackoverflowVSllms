// Define an object to handle XML operations\nconst xmlHandler = (function() {\n    let data; // Private variable to store XML data\n\n    // Public function to fetch XML data if not already fetched\n    const fetchData = () => {\n        return new Promise((resolve, reject) => {\n            if (!data) { // Check if data is already fetched\n                $.ajax({\n                    type: "GET",\n                    url: "test.xml",\n                    dataType: "xml",\n                    success : function(responseXml) {\n                        data = responseXml;\n                        resolve(data);\n                    },\n                    error: function(xhr, status, error) {\n                        reject(error);\n                    }\n                });\n            } else {\n                resolve(data); // Resolve with cached data\n            }\n        });\n    };\n\n    // Public function to get a specific attribute from the XML\n    const getAttribute = (selector, attrName) => {\n        return new Promise((resolve, reject) => {\n            fetchData().then(() => {\n                try {\n                    const value = $(data).find(selector).attr(attrName);\n                    resolve(value);\n                } catch (error) {\n                    reject(error);\n                }\n            }).catch(reject);\n        });\n    };\n\n    // Expose public methods\n    return {\n        getAttribute: getAttribute\n    };\n})();\n\n// Usage example\nxmlHandler.getAttribute('something', 'somethingElse').then((value) => {\n    console.log(value);\n}).catch((error) => {\n    console.error("Error fetching XML or processing data:", error);\n});