// Variable to hold the interval ID\nlet intervalId;\n\n// Function to start the periodic call\nfunction startPeriodicCall() {\n    if (!intervalId) { // Check if it's already running\n        intervalId = setInterval(function() {\n            if (document.getElementById('main_div')) {\n                // Perform your remote call here, e.g., using AJAX\n                console.log("Making remote call...");\n            } else {\n                // If main_div is not present, clear the interval\n                stopPeriodicCall();\n            }\n        }, 1000); // Update every second (1000 milliseconds)\n    }\n}\n\n// Function to stop the periodic call\nfunction stopPeriodicCall() {\n    if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = null; // Reset the interval ID so we know it's stopped\n        console.log("Stopped periodic calls.");\n    }\n}\n\n// Start the periodic calls when the page is loaded or when returning to this section of your app\ndocument.addEventListener('DOMContentLoaded', startPeriodicCall);\n\n// You can also stop the calls explicitly if needed, for example when navigating away from a certain part of the app\nwindow.onbeforeunload = function() {\n    stopPeriodicCall();\n};\n\n// Ensure to stop the calls if main_div is removed dynamically\ndocument.getElementById('main_div').addEventListener('DOMNodeRemoved', stopPeriodicCall);