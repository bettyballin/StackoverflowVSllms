// app/javascript/channels/consumer.js\nimport { createConsumer } from "@rails/actioncable"\n\nexport default createConsumer()\n\n// app/javascript/channels/chat_channel.js\nimport consumer from "./consumer"\n\nconsumer.subscriptions.create({ channel: "ChatChannel", room_id: gon.room_id }, {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    $('#messages').append(data['message'])\n    $('#chat-input').focus()\n  },\n\n  speak(message) {\n    return this.perform('speak', { message: message })\n  }\n})\n\n$(document).on('keypress', '#chat-input', function(e){\n  if (e && e.keyCode === 13 || event.which === 13 ) {\n    chatChannel.speak($(this).val());\n    $(this).val('');\n    return e.preventDefault();\n  }\n});\n\nconst chatChannel = consumer.subscriptions.create({ channel: "ChatChannel", room_id: gon.room_id });