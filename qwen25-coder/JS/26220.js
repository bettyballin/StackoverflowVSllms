const crypto = require('crypto');\n\nfunction createSignature(data, secretKey) {\n    return crypto.createHmac('sha256', secretKey)\n                .update(data)\n                .digest('hex');\n}\n\nfunction signRequest(username, requestData, userSecretKey, appPrivateKey) {\n    const timestamp = Date.now();\n    const message = `${requestData.method}:${requestData.path}:${timestamp}`;\n    \n    // Create user signature\n    const userSignature = createSignature(message + userSecretKey, userSecretKey);\n    \n    // Create application signature\n    const appSignature = crypto.sign(\n        'sha256',\n        Buffer.from(userSignature),\n        {\n            key: appPrivateKey,\n            padding: crypto.constants.RSA_PKCS1_PADDING\n        }\n    ).toString('base64');\n    \n    return `${username}:${userSignature},${appSignature}`;\n}\n\n// Example usage\nconst requestData = { method: 'GET', path: '/api/resource' };\nconst userSecretKey = 'someUserSecret';\nconst appPrivateKey = `-----BEGIN RSA PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END RSA PRIVATE KEY-----`;\n\nconsole.log(signRequest('user123', requestData, userSecretKey, appPrivateKey));