// Select the target node (the button you want to monitor)\nvar targetNode = document.getElementById('yourButtonId');\n\n// Options for the observer (which mutations to observe)\nconst config = { attributes: true, attributeFilter: ['disabled'] };\n\n// Callback function to execute when mutations are observed\nconst callback = function(mutationsList, observer) {\n    for(let mutation of mutationsList) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'disabled') {\n            // Check the current disabled state and act accordingly\n            const isDisabled = targetNode.hasAttribute('disabled');\n            console.log(`Button is now ${isDisabled ? 'disabled' : 'enabled'}`);\n            \n            // Trigger your custom event here\n            if (isDisabled) {\n                $(targetNode).trigger('myCustomEvent');\n            }\n        }\n    }\n};\n\n// Create an observer instance linked to the callback function\nconst observer = new MutationObserver(callback);\n\n// Start observing the target node for configured mutations\nobserver.observe(targetNode, config);