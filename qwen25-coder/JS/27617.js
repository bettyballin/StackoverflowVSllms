// Example using D3.js\n   const svg = d3.select("svg"),\n       width = +svg.attr("width"),\n       height = +svg.attr("height");\n\n   const simulation = d3.forceSimulation()\n       .force("link", d3.forceLink().id(d => d.id))\n       .force("charge", d3.forceManyBody())\n       .force("center", d3.forceCenter(width / 2, height / 2));\n\n   // Load your data\n   d3.json("data/multiple-parents-hierarchy.json").then(function(graph) {\n     const link = svg.append("g")\n         .attr("class", "links")\n       .selectAll("line")\n         .data(graph.links)\n       .enter().append("line");\n\n     const node = svg.append("g")\n         .attr("class", "nodes")\n       .selectAll("circle")\n         .data(graph.nodes)\n       .enter().append("circle")\n         .attr("r", 5)\n         .call(d3.drag()\n             .on("start", dragstarted)\n             .on("drag", dragged)\n             .on("end", dragended));\n\n     node.append("title")\n         .text(d => d.id);\n\n     simulation\n         .nodes(graph.nodes)\n         .on("tick", ticked);\n\n     simulation.force("link")\n         .links(graph.links);\n\n     function ticked() {\n       link\n           .attr("x1", d => d.source.x)\n           .attr("y1", d => d.source.y)\n           .attr("x2", d => d.target.x)\n           .attr("y2", d => d.target.y);\n\n       node\n           .attr("cx", d => d.x)\n           .attr("cy", d => d.y);\n     }\n\n     function dragstarted(d) {\n       if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n       d.fx = d.x;\n       d.fy = d.y;\n     }\n\n     function dragged(d) {\n       d.fx = d3.event.x;\n       d.fy = d3.event.y;\n     }\n\n     function dragended(d) {\n       if (!d3.event.active) simulation.alphaTarget(0);\n       d.fx = null;\n       d.fy = null;\n     }\n   });