function MergeTokens(leftString, rightString) {\n    // Split the strings into arrays of tokens\n    const leftTokens = leftString.split(';');\n    const rightTokens = rightString.split(';');\n\n    // Create an object to hold the final set of tokens (right overrides left)\n    const tokenMap = {};\n\n    // Populate the map with tokens from both sides, giving precedence to the right side\n    leftTokens.forEach(token => {\n        const [key, value] = token.split(':');\n        tokenMap[key] = value;\n    });\n\n    rightTokens.forEach(token => {\n        const [key, value] = token.split(':');\n        tokenMap[key] = value; // Overwrites any existing key's value\n    });\n\n    // Convert the map back into a string of tokens\n    const result = Object.entries(tokenMap)\n                         .map(([key, value]) => `${key}:${value}`)\n                         .join(';');\n\n    return result;\n}\n\nvar test = MergeTokens('test:1;hello:five;just:23', 'yes:23;test:567');\nconsole.log(test); // Output: "test:567;hello:five;just:23;yes:23"