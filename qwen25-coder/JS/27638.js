Type.registerNamespace('MyCustomControls');\n\nMyCustomControls.MyAjaxButton = function(element) {\n    MyCustomControls.MyAjaxButton.initializeBase(this, [element]);\n};\n\nMyCustomControls.MyAjaxButton.prototype =\n{\n    initialize: function() {\n        MyCustomControls.MyAjaxButton.callBaseMethod(this, 'initialize');\n        // Add event listeners or other initialization logic\n        var button = $get(this.get_id() + '_InnerButton');\n        if (button) {\n            $addHandler(button, "click", Function.createDelegate(this, this._onButtonClick));\n        }\n    },\n\n    _onButtonClick: function(e) {\n        Sys.CancelEventArgs eArgs = new Sys.CancelEventArgs();\n        this.raiseEvent('click', eArgs);\n        if (!eArgs.get_cancel()) {\n            this.sendRequest();\n        }\n\n        // Prevent the default action to avoid postback\n        e.preventDefault();\n    },\n\n    sendRequest: function() {\n        var requestManager = MyCustomControls.MyAjaxButton._requestManager;\n        requestManager.add_completed(this._onRequestCompleted);\n        requestManager.invoke('MyAjaxMethod', null, null, this.get_id());\n    },\n\n    _onRequestCompleted: function(sender, args) {\n        MyCustomControls.MyAjaxButton._requestManager.remove_completed(this._onRequestCompleted);\n\n        // Handle the response from the server if necessary\n        var result = args.get_result();\n        alert("Server said: " + result);\n    }\n};\n\nMyCustomControls.MyAjaxButton.registerClass('MyCustomControls.MyAjaxButton', MyCustomControls.ScriptControlBase, Sys.IDisposable);\n\nif (typeof (Sys) !== 'undefined') Sys.Application.notifyScriptLoaded();