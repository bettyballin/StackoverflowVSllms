<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">\n    <!-- Initialize variables to store scripts and stylesheets -->\n    <xsl:variable name="stylesheets" select="''"/>\n    <xsl:variable name="scripts" select="''"/>\n\n    <!-- Template that processes each module's content -->\n    <xsl:template match="/">\n        <html>\n            <head>\n                <!-- Output accumulated style-sheets -->\n                <xsl:copy-of select="$stylesheets"/>\n                <title>Example Page</title>\n            </head>\n            <body>\n                <xsl:apply-templates/>\n                \n                <!-- Output accumulated scripts before closing body tag -->\n                <xsl:copy-of select="$scripts"/>\n            </body>\n        </html>\n    </xsl:template>\n\n    <!-- Template for individual modules -->\n    <xsl:template match="module">\n        <!-- Check if module needs a stylesheet and append it to the list -->\n        <xsl:variable name="new-stylesheets">\n            <xsl:value-of select="$stylesheets"/>\n            <xsl:text>\n</xsl:text>\n            <link rel="stylesheet" type="text/css" href="{@css.href}"/>\n        </xsl:variable>\n\n        <!-- Check if module needs a script and append it to the list -->\n        <xsl:variable name="new-scripts">\n            <xsl:value-of select="$scripts"/>\n            <xsl:text>\n</xsl:text>\n            <script type="text/javascript" src="{@js.href}"></script>\n        </xsl:variable>\n\n        <!-- Process module content here -->\n        <div>\n            <p>Module Content Here</p>\n        </div>\n        \n        <!-- Recursively apply templates with new resource lists -->\n        <xsl:apply-templates select="child-elements">\n            <xsl:with-param name="stylesheets" select="$new-stylesheets"/>\n            <xsl:with-param name="scripts" select="$new-scripts"/>\n        </xsl:apply-templates>\n    </xsl:template>\n\n</xsl:stylesheet>