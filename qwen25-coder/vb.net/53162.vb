Imports System.Windows.Input\n\nPublic Class RelayCommand Implements ICommand\n    Private ReadOnly _execute As Action(Of Object)\n    Private ReadOnly _canExecute As Predicate(Of Object)\n\n    Public Sub New(execute As Action(Of Object), canExecute As Predicate(Of Object) = Nothing)\n        _execute = execute ?? Throw New ArgumentNullException("execute")\n        _canExecute = canExecute\n    End Sub\n\n    Public Event CanExecuteChanged As EventHandler Implements ICommand.CanExecuteChanged\n\n    Public Function CanExecute(parameter As Object) As Boolean Implements ICommand.CanExecute\n        Return _canExecute Is Nothing OrElse _canExecute(parameter)\n    End Function\n\n    Public Sub Execute(parameter As Object) Implements ICommand.Execute\n        _execute(parameter)\n    End Sub\n\n    Public Sub RaiseCanExecuteChanged()\n        RaiseEvent CanExecuteChanged(Me, EventArgs.Empty)\n    End Sub\nEnd Class