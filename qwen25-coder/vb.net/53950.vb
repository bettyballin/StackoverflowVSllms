' Procedural approach (old way)\nPublic Sub UpdateCustomerOrder(orderId As Integer, quantity As Integer)\n    Dim dbConnection As New SqlConnection("connectionString")\n    Dim command As New SqlCommand("UPDATE Orders SET Quantity = @Quantity WHERE Id = @OrderId", dbConnection)\n    command.Parameters.AddWithValue("@OrderId", orderId)\n    command.Parameters.AddWithValue("@Quantity", quantity)\n    dbConnection.Open()\n    command.ExecuteNonQuery()\nEnd Sub\n\n' Object-oriented approach (new way)\nPublic Class OrderRepository\n    Private _connectionString As String\n\n    Public Sub New(connectionString As String)\n        _connectionString = connectionString\n    End Sub\n\n    Public Sub UpdateOrder(orderId As Integer, quantity As Integer)\n        Using dbConnection As New SqlConnection(_connectionString)\n            Dim command As New SqlCommand("UPDATE Orders SET Quantity = @Quantity WHERE Id = @OrderId", dbConnection)\n            command.Parameters.AddWithValue("@OrderId", orderId)\n            command.Parameters.AddWithValue("@Quantity", quantity)\n            dbConnection.Open()\n            command.ExecuteNonQuery()\n        End Using\n    End Sub\nEnd Class\n\n' Usage\nDim orderRepository As New OrderRepository("connectionString")\norderRepository.UpdateOrder(1, 100)