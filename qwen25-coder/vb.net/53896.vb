Public Class TraceVariable(Of T)\n    Private mValue As T\n\n    ' Event declaration\n    Public Event ValueChanged(ByVal oldValue As T, ByVal newValue As T)\n\n    ' Property with custom event handling on set\n    Public Property Value() As T\n        Get\n            Return mValue\n        End Get\n        Set(ByVal value As T)\n            Dim oldValue = mValue\n            If Not EqualityComparer(Of T).Default.Equals(oldValue, value) Then\n                mValue = value\n                RaiseEvent ValueChanged(oldValue, value)\n            End If\n        End Set\n    End Property\nEnd Class\n\n' Usage Example:\nModule Module1\n    Sub Main()\n        Dim traceVar As New TraceVariable(Of Integer)()\n        AddHandler traceVar.ValueChanged, AddressOf traceVar_ValueChanged\n        traceVar.Value = 5 ' No output since it's the initial value\n        traceVar.Value = 10 ' This will trigger the ValueChanged event\n\n        Console.ReadLine() ' To prevent console close immediately in console app test\n    End Sub\n\n    Private Sub traceVar_ValueChanged(ByVal oldValue As Integer, ByVal newValue As Integer)\n        Trace.WriteLine($"Variable changed from {oldValue} to {newValue}")\n    End Sub\nEnd Module