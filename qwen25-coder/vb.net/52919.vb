Private Sub colInsp_NewInspector(ByVal Inspector As Microsoft.Office.Interop.Outlook.Inspector) Handles colInsp.NewInspector\n    Dim msg As Outlook.MailItem\n    Dim commandBar As Office.CommandBar\n    Dim encryptButton As Office.CommandBarButton\n    Dim sendButton As Office.CommandBarButton\n    Dim index As Integer = -1\n\n    ' Check if the current item is a MailItem\n    If TypeOf Inspector.CurrentItem Is Outlook.MailItem Then\n        msg = CType(Inspector.CurrentItem, Outlook.MailItem)\n        commandBar = Inspector.CommandBars("Standard")\n\n        ' Look for the Send button to find its index\n        For i As Integer = 1 To commandBar.Controls.Count\n            Dim control As Office.CommandBarButton = CType(commandBar.Controls(i), Office.CommandBarButton)\n            If control.Style = Office.MsoButtonStyle.msoButtonIcon And control.Caption = "&Send" Then\n                index = i\n                Exit For\n            End If\n        Next\n\n        ' If the Send button is found, insert the custom button right after it\n        If index <> -1 Then\n            encryptButton = CType(commandBar.Controls.Add(1, index + 1), Office.CommandBarButton)\n        Else\n            ' Otherwise, add it to the end\n            encryptButton = CType(commandBar.Controls.Add(1), Office.CommandBarButton)\n        End If\n\n        ' Configure the new button\n        encryptButton.Style = Office.MsoButtonStyle.msoButtonIconAndCaption\n        encryptButton.FaceId = 718\n        encryptButton.Caption = "Secure Email"\n        encryptButton.Tag = "EncryptMail"\n\n        ' Set button state based on item's sensitivity\n        If msg.Sensitivity = Outlook.OlSensitivity.olConfidential Then\n            encryptButton.State = Office.MsoButtonState.msoButtonDown\n        End If\n\n        ' Add click event handler\n        AddHandler encryptButton.Click, AddressOf encryptButton_Click\n    End If\n\n    ' Clean up\n    msg = Nothing\nEnd Sub