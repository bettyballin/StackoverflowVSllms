' Subroutine to handle BeforeUpdate logic\nPrivate Sub ValidateControl(ByVal ctl As Control, intCancel As Integer)\n    Select Case ctl.Name\n        Case "Date1"\n            ' Add validation logic for Date1\n            If IsNull(ctl.Value) Then\n                MsgBox "Date1 cannot be empty!"\n                intCancel = True\n            End If\n        Case "Textfield1"\n            ' Add validation logic for Textfield1\n            If IsNull(ctl.Value) Then\n                MsgBox "Textfield1 cannot be empty!"\n                intCancel = True\n            End If\n    End Select\nEnd Sub\n\n' Original BeforeUpdate event procedures can call ValidateControl\nPrivate Sub Date1_BeforeUpdate(Cancel As Integer)\n    Call ValidateControl(Me.Controls("Date1"), Cancel)\nEnd Sub\n\nPrivate Sub Textfield1_BeforeUpdate(Cancel As Integer)\n    Call ValidateControl(Me.Controls("Textfield1"), Cancel)\nEnd Sub\n\n' Custom procedure to clear controls and run validation\nPrivate Sub ExampleProc2(ParamArray Fields() As Variant)\n    Dim intCancel As Integer, varV As Variant\n    \n    For Each varV In Fields\n        Me.Controls(varV).Value = Null\n        intCancel = False\n        Call ValidateControl(Me.Controls(varV), intCancel)\n        \n        ' If intCancel is True here, you might want to handle it accordingly\n    Next\nEnd Sub