Imports System.Drawing\nImports System.Windows.Forms\n\nPublic Class FullTextBox\n    Inherits TextBox\n\n    Public Sub New()\n        Me.ScrollBars = ScrollBars.None ' Ensure scrollbars are never visible\n    End Sub\n\n    Protected Overrides Sub OnTextChanged(e As EventArgs)\n        MyBase.OnTextChanged(e)\n        CheckTextLengthAndSize()\n    End Sub\n\n    Private Sub CheckTextLengthAndSize()\n        Dim g As Graphics = Me.CreateGraphics()\n        Dim textFormat As New StringFormat(StringFormat.GenericDefault)\n        textFormat.Alignment = StringAlignment.Near\n        textFormat.LineAlignment = StringAlignment.Near\n        textFormat.Trimming = StringTrimming.None\n        textFormat.WordBreak = True\n        If Me.Multiline Then\n            textFormat.FormatFlags = textFormat.FormatFlags Or StringFormatFlags.MeasureTrailingSpaces\n\n            Dim availableSize As New SizeF(Me.ClientSize.Width, Single.PositiveInfinity)\n            Dim textSize As SizeF = g.MeasureString(Me.Text, Me.Font, availableSize, textFormat)\n\n            ' Check if the content exceeds the height or width of the textbox\n            If textSize.Height >= Me.ClientSize.Height Then\n                ' Block additional input by setting ReadOnly to True temporarily\n                ' You might need a better way to prevent adding more text\n                Me.ReadOnly = True\n            Else\n                Me.ReadOnly = False\n            End If\n        Else\n            Dim availableSize As New SizeF(Me.ClientSize.Width, Single.PositiveInfinity)\n            Dim textSize As SizeF = g.MeasureString(Me.Text + "W", Me.Font, availableSize) ' Add a dummy character to account for cursor position\n\n            ' Check if the content exceeds the width of the textbox\n            If textSize.Width >= Me.ClientSize.Width Then\n                ' Block additional input by setting ReadOnly to True temporarily\n                ' You might need a better way to prevent adding more text\n                Me.ReadOnly = True\n            Else\n                Me.ReadOnly = False\n            End If\n        End If\n\n        g.Dispose()\n    End Sub\nEnd Class