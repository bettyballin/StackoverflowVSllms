Imports System.Xml\n\nPublic Class W3CError\n    Public Property Line As Integer\n    Public Property Col As Integer\n    Public Property Message As String\n    Public Property MessageId As String\n    Public Property Explanation As String\n    Public Property Source As String\nEnd Class\n\nSub ProcessXml(responseStream As IO.Stream)\n    Dim xmlDoc As New XmlDocument()\n    xmlDoc.Load(responseStream)\n\n    ' Create a namespace manager and add the namespaces in your XML\n    Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(xmlDoc.NameTable)\n    nsmgr.AddNamespace("env", "http://www.w3.org/2003/05/soap-envelope")\n    nsmgr.AddNamespace("m", "http://www.w3.org/2005/10/markup-validator")\n\n    ' Extract values using XPath\n    Dim uri As String = xmlDoc.SelectSingleNode("//env:Envelope/env:Body/m:markupvalidationresponse/m:uri", nsmgr).InnerText\n    Dim checkedby As String = xmlDoc.SelectSingleNode("//env:Envelope/env:Body/m:markupvalidationresponse/m:checkedby", nsmgr).InnerText\n    Dim doctype As String = xmlDoc.SelectSingleNode("//env:Envelope/env:Body/m:markupvalidationresponse/m:doctype", nsmgr).InnerText\n    Dim charset As String = xmlDoc.SelectSingleNode("//env:Envelope/env:Body/m:markupvalidationresponse/m:charset", nsmgr).InnerText\n    Dim validity As Boolean = Convert.ToBoolean(xmlDoc.SelectSingleNode("//env:Envelope/env:Body/m:markupvalidationresponse/m:validity", nsmgr).InnerText)\n\n    ' Error and Warning Lists (assuming they are populated in your XML structure)\n    Dim errorListNodes As XmlNodeList = xmlDoc.SelectNodes("//env:Envelope/env:Body/m:markupvalidationresponse/m:errors/m:errorlist/*", nsmgr)\n    Dim warningListNodes As XmlNodeList = xmlDoc.SelectNodes("//env:Envelope/env:Body/m:markupvalidationresponse/m:warnings/m:warninglist/*", nsmgr)\n\n    Dim errorList As New List(Of W3CError)()\n    For Each node As XmlNode In errorListNodes\n        ' Assuming each <error> has Line, Col, Message, etc. as child nodes or attributes\n        Dim w3cError As New W3CError With {\n            .Line = Convert.ToInt32(node.SelectSingleNode("m:line", nsmgr).InnerText),\n            .Col = Convert.ToInt32(node.SelectSingleNode("m:col", nsmgr).InnerText),\n            .Message = node.SelectSingleNode("m:message", nsmgr).InnerText,\n            .MessageId = node.SelectSingleNode("m:messageid", nsmgr).InnerText,\n            .Explanation = node.SelectSingleNode("m:explanation", nsmgr).InnerText,\n            .Source = node.SelectSingleNode("m:source", nsmgr).InnerText\n        }\n        errorList.Add(w3cError)\n    Next\n\n    Dim warningList As New List(Of W3CError)()\n    For Each node As XmlNode In warningListNodes\n        ' Assuming each <warning> has Line, Col, Message, etc. as child nodes or attributes\n        Dim w3cWarning As New W3CError With {\n            .Line = Convert.ToInt32(node.SelectSingleNode("m:line", nsmgr).InnerText),\n            .Col = Convert.ToInt32(node.SelectSingleNode("m:col", nsmgr).InnerText),\n            .Message = node.SelectSingleNode("m:message", nsmgr).InnerText,\n            .MessageId = node.SelectSingleNode("m:messageid", nsmgr).InnerText,\n            .Explanation = node.SelectSingleNode("m:explanation", nsmgr).InnerText,\n            .Source = node.SelectSingleNode("m:source", nsmgr).InnerText\n        }\n        warningList.Add(w3cWarning)\n    Next\n\n    ' Use uri, checkedby, doctype, charset, validity, errorList, and warningList as needed\nEnd Sub