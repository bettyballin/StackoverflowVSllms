Imports System.Configuration\n\nPublic Class BasePage\n    Private m_DB As Database = Nothing\n    Private m_ErrHandler As ErrorHandler = Nothing\n    Protected ConnectionString As String = ""\n\n    Public ReadOnly Property DB() As Database\n        Get\n            If m_DB Is Nothing Then\n                ' Ensure connection string is not empty before opening database connection\n                If String.IsNullOrEmpty(ConnectionString) Then\n                    Throw New InvalidOperationException("ConnectionString has not been initialized.")\n                End If\n                m_DB = New Database\n                m_DB.Open(ConnectionString)\n            End If\n            Return m_DB\n        End Get\n    End Property\n\n    Public ReadOnly Property ErrHandler() As ErrorHandler\n        Get\n            If m_ErrHandler Is Nothing Then m_ErrHandler = New ErrorHandler(DB)\n            Return m_ErrHandler\n        End Get\n    End Property\n\n    Private Sub Page_PreInit(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreInit\n        ' Log the environment being used for deployment (if needed)\n        ' For example:\n        ' Trace.WriteLine($"Application is running in {Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT")} mode")\n\n        Try\n            ' Using "appSettings" section for connectionstring\n            ConnectionString = DBConnectionString.GetConnectionString(ConfigurationManager.AppSettings("ConnectionString"), ConfigurationManager.AppSettings("ConnectionStringUsername"), ConfigurationManager.AppSettings("ConnectionStringPassword"))\n\n            ' Alternatively, using the "connectionStrings" section\n            ' 'ConnectionString = DBConnectionString.GetConnectionString(ConnectionStrings.Item("ConnectionString").ConnectionString, AppSettings("ConnectionStringUsername"), AppSettings("ConnectionStringPassword"))'\n\n            ' Log the connection string (ensure sensitive information is not logged)\n            Trace.WriteLine($"Connection String for {Context.GetEnvironment()} is: [{ConnectionString}]")\n        Catch ex As Exception\n            ' Log the exception if it fails to retrieve the connectionstring\n            Trace.WriteLine($"Failed to initialize ConnectionString due to: [{ex.Message}]")\n        End Try\n    End Sub\nEnd Class