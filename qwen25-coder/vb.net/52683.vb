Private Declare Function OpenProcess Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As Long, ByVal dwProcessId As Long) As Long\nPrivate Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long\n\nPublic Const STILL_ACTIVE = &H103\nPublic Const SYNCHRONIZE = &H100000\n\nFunction RunExternalProgram(ByVal Path As String) As Long\n    Dim ProcessID As Long\n    Dim hProcess As Long\n    Dim ExitCode As Long\n    \n    ' Start the process and get its ID\n    ProcessID = Shell(Path, vbNormalFocus)\n    \n    If ProcessID <> 0 Then\n        ' Open the handle to the process with SYNCHRONIZE access right\n        hProcess = OpenProcess(SYNCHRONIZE, 0&, ProcessID)\n        \n        If hProcess <> 0 Then\n            ' Wait for the process to terminate\n            Do\n                Call GetExitCodeProcess(hProcess, ExitCode)\n            Loop While ExitCode = STILL_ACTIVE\n            \n            ' Close the handle\n            CloseHandle hProcess\n            \n            ' Return the exit code of the process\n            RunExternalProgram = ExitCode\n        Else\n            MsgBox "Failed to get process handle.", vbCritical\n        End If\n    Else\n        MsgBox "Shell failed", vbCritical\n    End If\n\nEnd Function\n\nPrivate Declare Sub CloseHandle Lib "kernel32" (ByVal hObject As Long)