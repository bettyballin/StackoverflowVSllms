Imports System.Runtime.InteropServices\n\nPublic Class NetworkFolderAccess\n    <DllImport("mpr.dll", CharSet:=CharSet.Unicode)>\n    Private Shared Function NetUseAdd(ByVal serverName As String, ByVal level As Integer, ByVal buf As IntPtr, ByRef parmErr As Int32) As Integer\n    End Function\n\n    <DllImport("mpr.dll")>\n    Private Shared Function NetUseDel(ByVal serverName As String, ByVal deviceName As String, ByVal flags As Int32) As Integer\n    End Function\n\n    Private Const RESOURCE_CONNECTED = &H1\n    Private Const CONNECT_UPDATE_PROFILE = &H4\n\n    Public Sub ConnectAndAccessNetworkFolder(uncPath As String, username As String, password As String)\n        Dim netResource As New NETRESOURCE()\n        netResource.dwType = 1 ' RESOURCETYPE_DISK = 1\n        netResource.lpRemoteName = uncPath\n\n        Dim result As Int32 = NetUseAdd(Nothing, 1, Marshal.AllocHGlobal(Marshal.SizeOf(netResource)), netResource.dwType)\n        If result <> 0 Then\n            Throw New Exception("Failed to connect")\n        End If\n\n        ' Assuming the credentials are correct and network folder is accessible now\n        Dim directories As String() = My.Computer.FileSystem.GetDirectories(uncPath)\n\n        ' Clean up the connection\n        NetUseDel(Nothing, uncPath, 0)\n    End Sub\nEnd Class\n\n<StructLayout(LayoutKind.Sequential)>\nPrivate Structure NETRESOURCE\n    Public dwScope As Integer\n    Public dwType As Integer\n    Public dwDisplayType As Integer\n    Public dwUsage As Integer\n    Public lpLocalName As String\n    Public lpRemoteName As String\n    Public lpComment As String\n    Public lpProvider As String\nEnd Structure