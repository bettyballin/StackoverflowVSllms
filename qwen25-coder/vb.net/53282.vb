Imports System\n\n' Define a new attribute called DescriptionAttribute\n<AttributeUsage(AttributeTargets.Property)>\nPublic Class DescriptionAttribute\n    Inherits Attribute\n\n    Public ReadOnly Property Description As String\n        Get\n            Return _description\n        End Get\n    End Property\n\n    Private _description As String\n\n    ' Constructor that takes the description\n    Public Sub New(description As String)\n        Me._description = description\n    End Sub\nEnd Class\n\n' Define a class with properties decorated by DescriptionAttribute\nPublic Class Product\n    <Description("A unique identifier for the product.")>\n    Public Property Id As Integer\n    \n    <Description("The name of the product.")>\n    Public Property Name As String\nEnd Class\n\nModule Module1\n    Sub Main()\n        ' Use reflection to read the Description attribute\n        Dim propertyInfos = GetType(Product).GetProperties()\n\n        For Each prop In propertyInfos\n            Dim attributes = prop.GetCustomAttributes(GetType(DescriptionAttribute), True)\n\n            If attributes.Length > 0 Then\n                Dim descAttr = DirectCast(attributes(0), DescriptionAttribute)\n                Console.WriteLine($"Property: {prop.Name}, Description: {descAttr.Description}")\n            End If\n        Next\n    End Sub\nEnd Module