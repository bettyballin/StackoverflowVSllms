Sub ListFunctionsAndParameters()\n    Dim VBProj As Object 'VBEProject\n    Dim VBComp As Object 'VBEComponent\n    Dim CodeMod As Object 'CodeModule\n    Dim LineNum As Long\n    Dim ProcName As String '* Function Name *\n    Dim ProcKind As Long '* Type of Procedure (Function, Sub etc.) *\n\n    If Not Application.VBE Is Nothing Then\n\n        Set VBProj = Application.VBE.ActiveVBProject\n        For Each VBComp In VBProj.VBComponents\n            \n            Set CodeMod = VBComp.CodeModule\n            \n            ' Get the first procedure in this module\n            LineNum = 1\n                \n            Do While (LineNum < CodeMod.CountOfLines)\n                ProcName = ""\n                ProcKind = vbext_pk_Proc\n        \n                ' Extract Procedure Info - Name and Type\n                If CodeMod.ProcCountLines(ProcName, ProcKind) > 0 Then\n                    \n                    ' Get the Procedure Body\n                    Dim procedureBody As String\n                    procedureBody = CodeMod.Lines(LineNum + 1, _\n                                                  CodeMod.ProcCountLines(ProcName, ProcKind) - 1)\n                    \n                    ' Check if it's a Function or Sub (ignore other types like Property Get/Set/Let)\n                    If ProcKind = vbext_pk_Function Or ProcKind = vbext_pk_Sub Then\n                        \n                        Dim paramList As String\n                        Dim startPos As Integer, endPos As Integer\n                        \n                        ' Find the position of "(" and ")" to capture parameters\n                        startPos = InStr(Trim$(CodeMod.Lines(LineNum, 1)), "(")\n                        endPos = InStr(Trim$(CodeMod.Lines(LineNum, 1)), ")")\n                        \n                        If startPos > 0 And endPos > 0 Then\n                            paramList = Mid(Trim$(CodeMod.Lines(LineNum, 1)), startPos + 1, endPos - startPos - 1)\n                        Else\n                            paramList = "No parameters"\n                        End If\n                        \n                        ' Output to Immediate Window (Ctrl+G in VBA Editor)\n                        Debug.Print VBComp.Name & "." & ProcName & " (" & paramList & ")"\n                        \n                    End If\n                    \n                    LineNum = LineNum + CodeMod.ProcCountLines(ProcName, ProcKind) + 1\n                Else\n                    Exit Do ' No more procedures\n                End If\n                \n            Loop ' While (LineNum < CodeMod.CountOfLines)\n\n        Next VBComp\n    End If\nEnd Sub