Private Sub addMetaphoneCharacter(ByVal primaryCharacter As String, ByVal alternateCharacter As String)\n    ' Is the primary character valid?\n    If primaryCharacter.Length > 0 Then\n        Dim idx As Integer = 0\n        While idx < primaryCharacter.Length\n            m_primaryKey.Append(primaryCharacter(idx))\n            m_primaryKeyLength += 1\n            idx += 1\n        End While\n    End If\n\n    ' Is the alternate character valid?\n    If alternateCharacter IsNot Nothing Then\n        ' Alternate character was provided. If it is not zero-length, append it, else\n        ' append the primary string as long as it wasn't zero length and isn't a space character\n        If alternateCharacter.Length > 0 Then\n            m_hasAlternate = True\n            If alternateCharacter(0) <> " "c Then\n                Dim idx As Integer = 0\n                While idx < alternateCharacter.Length\n                    m_alternateKey.Append(alternateCharacter(idx))\n                    m_alternateKeyLength += 1\n                    idx += 1\n                End While\n            End If\n        Else\n            ' No, but if the primary character is valid, add that instead\n            If primaryCharacter.Length > 0 AndAlso primaryCharacter(0) <> " "c Then\n                Dim idx As Integer = 0\n                While idx < primaryCharacter.Length\n                    m_alternateKey.Append(primaryCharacter(idx))\n                    m_alternateKeyLength += 1\n                    idx += 1\n                End While\n            End If\n        End If\n    ElseIf primaryCharacter.Length > 0 Then\n        ' Else, no alternate character was passed, but a primary was, so append the primary character to the alternate key\n        Dim idx As Integer = 0\n        While idx < primaryCharacter.Length\n            m_alternateKey.Append(primaryCharacter(idx))\n            m_alternateKeyLength += 1\n            idx += 1\n        End While\n    End If\nEnd Sub