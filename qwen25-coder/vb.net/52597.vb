' Function to save uploaded file to disk and return the path for storage in the DB\nPublic Function UploadFile(ByVal fileUploadControl As FileUpload) As String\n    ' Define the folder path where images are saved\n    Dim uploadPath As String = Server.MapPath("~/images/")\n    \n    ' Ensure directory exists\n    If Not Directory.Exists(uploadPath) Then\n        Directory.CreateDirectory(uploadPath)\n    End If\n    \n    ' Generate a unique file name (e.g., using GUID)\n    Dim fileName As String = Guid.NewGuid().ToString() & Path.GetExtension(fileUploadControl.FileName)\n    Dim completePath As String = uploadPath & fileName\n    \n    ' Save the file to disk\n    fileUploadControl.SaveAs(completePath)\n    \n    ' Return the relative path to store in DB\n    Return "~/images/" & fileName\nEnd Function\n\n' Example of saving the image path to a database\nPublic Sub SaveImagePathToDatabase(ByVal imagePath As String, ByVal companyId As Integer)\n    Using connection As New SqlConnection("YourConnectionStringHere")\n        Dim query As String = "UPDATE Companies SET LogoPath=@LogoPath WHERE CompanyId=@CompanyId"\n        Using command As New SqlCommand(query, connection)\n            command.Parameters.AddWithValue("@LogoPath", imagePath)\n            command.Parameters.AddWithValue("@CompanyId", companyId)\n            connection.Open()\n            command.ExecuteNonQuery()\n        End Using\n    End Using\nEnd Sub\n\n' Example of retrieving and displaying the image in an ASPX page\n<asp:Image ID="imgCompanyLogo" runat="server" ImageUrl='<%# GetImagePath(Eval("LogoPath").ToString()) %>' />