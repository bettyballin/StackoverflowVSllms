Public Sub ProcessRequest(ByVal context As HttpContext) Implements IHttpHandler.ProcessRequest\n    context.Response.ContentType = "image/png"\n    context.Response.Clear()\n    context.Response.BufferOutput = True\n\n    Try\n        Dim oText As String = context.Server.HtmlDecode(context.Request.QueryString("t"))\n        If String.IsNullOrEmpty(oText) Then oText = "Placeholder"\n        Dim oPType As String = context.Server.HtmlDecode(context.Request.QueryString("p"))\n        If String.IsNullOrEmpty(oPType) Then oPType = "none"\n\n        Dim imgPath As String = ""\n        Select Case oPType\n            Case "c"\n                imgPath = "img/banner_green.png"\n            Case "m"\n                imgPath = "img/banner_blue.png"\n            Case Else\n                Throw New Exception("no ptype")\n        End Select\n\n        Using oBitmap As Bitmap = New Bitmap(context.Server.MapPath(imgPath))\n            Using oGraphic As Graphics = Graphics.FromImage(oBitmap)\n                Dim frontColorBrush As New SolidBrush(Color.White)\n                Dim oFont As New Font(FONT_NAME, 30)\n\n                oGraphic.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias\n                oGraphic.DrawString(oText, oFont, frontColorBrush, New PointF(275.0F, (oBitmap.Height / 2) - (oFont.GetHeight() / 2) + 10))\n\n                Dim encoderParameters As EncoderParameters = New EncoderParameters(0)\n\n                ' Save the image to the Response OutputStream without additional parameters for PNG\n                oBitmap.Save(context.Response.OutputStream, System.Drawing.Imaging.ImageFormat.Png)\n            End Using\n        End Using\n\n        context.Response.Flush()\n    Catch ex As Exception\n        ' Handle exception appropriately\n        context.Response.StatusCode = 500\n        context.Response.Write("An error occurred: " & ex.Message)\n    End Try\nEnd Sub