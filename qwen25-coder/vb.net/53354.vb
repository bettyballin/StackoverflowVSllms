Imports System.Data.SqlClient\n\nPublic Function UserExists(ByVal userName As String) As Boolean\n    Try\n        ' Validate input\n        If String.IsNullOrEmpty(userName) Then\n            Throw New ArgumentException("Username cannot be null or empty", nameof(userName))\n        End If\n        \n        Using connection As New SqlConnection(ConnectionString)\n            Using command As New SqlCommand("dbo.aspnet_sprGetUserByUsername", connection)\n                command.CommandType = CommandType.StoredProcedure\n                \n                ' Add parameters\n                Dim paramUserName As New SqlParameter("@UserName", SqlDbType.NVarChar, 50) With {\n                    .Value = userName\n                }\n                command.Parameters.Add(paramUserName)\n\n                connection.Open()\n                \n                ' Check if a user exists based on the count of rows returned\n                Return Convert.ToInt32(command.ExecuteScalar()) > 0\n            End Using\n        End Using\n        \n    Catch ex As SqlException\n        ' Log SQL specific exceptions (avoid logging sensitive data)\n        Trace.WriteLine($"SQL error occurred: {ex.Message}")\n        Throw New DataAccessException("A database error occurred.", ex) ' Custom exception for data access issues\n    Catch ex As Exception\n        ' Handle other exceptions\n        Trace.WriteLine($"General error occurred: {ex.Message}")\n        Throw ' Re-throw the exception after logging it\n    End Try\nEnd Functio