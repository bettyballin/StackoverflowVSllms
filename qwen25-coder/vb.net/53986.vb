Imports System.Reflection\n\nPublic Class Foo\n    Private _Name As String\n    <ShowInDisplay()> _\n    Public Property Name() As String\n        Get\n            Return _Name\n        End Get\n        Set(ByVal value As String)\n            _Name = value\n        End Set\n    End Property\n\n    Private _Age As Integer ' Changed to Integer for better practice\n    Public Property Age() As Integer\n        Get\n            Return _Age\n        End Get\n        Set(ByVal value As Integer)\n            _Age = value\n        End Set\n    End Property\n\n    Private _ContactNumber As String\n    <ShowInDisplay()> _\n    Public Property ContactNumber() As String\n        Get\n            Return _ContactNumber\n        End Get\n        Set(ByVal value As String)\n            _ContactNumber = value\n        End Set\n    End Property\nEnd Class\n\n<AttributeUsage(AttributeTargets.Property)>\nPublic Class ShowInDisplayAttribute\n    Inherits Attribute\nEnd Class\n\nPublic Module Program\n    Public Sub DisplayOnlyPublic(ByVal SomeObject As Foo)\n        ' Get the type of the object\n        Dim objectType As Type = SomeObject.GetType()\n\n        ' Iterate through all public properties of the object\n        For Each propInfo As PropertyInfo In objectType.GetProperties()\n            ' Check if the property has the ShowInDisplay attribute\n            If Attribute.IsDefined(propInfo, GetType(ShowInDisplayAttribute)) Then\n                ' Get the value of the property\n                Dim value As Object = propInfo.GetValue(SomeObject)\n                ' Print the name and value of the property\n                Console.WriteLine(propInfo.Name & "=" & value.ToString())\n            End If\n        Next\n    End Sub\n\n    Public Sub Main()\n        Dim foo As New Foo With {\n            .Name = "John Doe",\n            .Age = 30,\n            .ContactNumber = "123-456-7890"\n        }\n\n        DisplayOnlyPublic(foo)\n    End Sub\nEnd Module