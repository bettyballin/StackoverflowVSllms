Imports System.IO\nImports System.Security.Cryptography\nImports System.Text\n\nFunction DecryptToMemory(ByVal sInputFilename As String, ByVal sKey As String) As MemoryStream\n    Dim DES As New DESCryptoServiceProvider()\n    ' A 64-bit key and an IV are required for this provider.\n    ' Set the secret key for the DES algorithm.\n    DES.Key = ASCIIEncoding.ASCII.GetBytes(sKey)\n    ' Set the initialization vector.\n    DES.IV = ASCIIEncoding.ASCII.GetBytes(sKey)\n\n    ' Create the file stream to read the encrypted file back.\n    Using fsread As New FileStream(sInputFilename, FileMode.Open, FileAccess.Read)\n        ' Create the DES decryptor from the DES instance.\n        Dim desdecrypt As ICryptoTransform = DES.CreateDecryptor()\n        ' Create the crypto stream set to read and do a DES decryption transform on incoming bytes.\n        Using cryptostreamDecr As New CryptoStream(fsread, desdecrypt, CryptoStreamMode.Read)\n            ' Read the decrypted data into a memory stream\n            Dim ms As New MemoryStream()\n            cryptostreamDecr.CopyTo(ms)\n            ms.Position = 0 ' Reset position to the beginning of the stream\n            Return ms\n        End Using\n    End Using\nEnd Function\n\n' Usage\nSub LoadEncryptedXmlIntoDataset(ByVal encryptedFilePath As String, ByVal schemaPath As String, ByVal key As String)\n    Dim ds As New DataSet()\n    ds.ReadXmlSchema(schemaPath)\n\n    Using decryptedStream As MemoryStream = DecryptToMemory(encryptedFilePath, key)\n        ds.ReadXml(decryptedStream, XmlReadMode.IgnoreSchema)\n    End Using\nEnd Sub