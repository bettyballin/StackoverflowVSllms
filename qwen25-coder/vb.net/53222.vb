Private Enum ValueType\n    Number\n    Boolean\n    DateType  ' Renamed from Date to avoid conflict with System.Date type\n    Text\nEnd Enum\n\nPrivate Function DataType(ByVal entry As Object) As ValueType\n    If entry Is Nothing Then\n        Return ValueType.Text\n    End If\n\n    Select Case GetType(entry)\n        Case GetType(Integer),\n             GetType(Short),\n             GetType(Byte),\n             GetType(Long),\n             GetType(Single),\n             GetType(Double),\n             GetType(Decimal)\n            Return ValueType.Number\n        Case GetType(Boolean)\n            Return ValueType.Boolean\n        Case GetType(Date)\n            Return ValueType.DateType\n        Case GetType(String)\n            Return ValueType.Text\n    End Select\n\n    ' Fallback for strings that can be parsed to the desired types\n    If TypeOf entry Is String Then\n        Dim strEntry As String = CType(entry, String)\n        If Integer.TryParse(strEntry, Nothing) OrElse _\n           Short.TryParse(strEntry, Nothing) OrElse _\n           Byte.TryParse(strEntry, Nothing) OrElse _\n           Long.TryParse(strEntry, Nothing) OrElse _\n           Single.TryParse(strEntry, Nothing) OrElse _\n           Double.TryParse(strEntry, Nothing) OrElse _\n           Decimal.TryParse(strEntry, Nothing) Then\n            Return ValueType.Number\n        End If\n\n        Dim boolResult As Boolean = False\n        If Boolean.TryParse(strEntry, boolResult) Then\n            Return ValueType.Boolean\n        End If\n\n        Dim dateResult As DateTime = Nothing\n        If DateTime.TryParse(strEntry, dateResult) Then\n            Return ValueType.DateType\n        End If\n    End If\n\n    ' Default to text if no other type matches\n    Return ValueType.Text\nEnd Functio