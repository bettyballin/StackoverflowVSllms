Public Function PostXml(ByVal XML As String) As Boolean\n    Try\n        Dim URL As String = My.Settings.NTSPostURL \n        Dim Bytes As Byte() = Encoding.UTF8.GetBytes(XML)\n        Dim HTTPRequest As HttpWebRequest = DirectCast(WebRequest.Create(URL), HttpWebRequest)\n        Dim Cred As New NetworkCredential("username", "password", "")\n\n        With HTTPRequest\n            .Method = "POST"\n            .ContentLength = Bytes.Length\n            .ContentType = "text/xml"\n            .Credentials = Cred\n            .Timeout = 120000\n            ' Set the User-Agent header (example, might need custom value)\n            .Headers.Add("User-Agent", "VB6CompatibilityAgent")\n            ' Add the X-Method header with value Submit\n            .Headers.Add("X-Method", "Submit")\n        End With\n\n        Using RequestStream As Stream = HTTPRequest.GetRequestStream()\n            RequestStream.Write(Bytes, 0, Bytes.Length)\n        End Using\n\n        Using Response As HttpWebResponse = DirectCast(HTTPRequest.GetResponse(), HttpWebResponse)\n            ' Assuming you want to capture the response text for success\n            Dim responseReader As New StreamReader(Response.GetResponseStream())\n            Dim responseData As String = responseReader.ReadToEnd()\n            \n            If Response.StatusCode <> HttpStatusCode.OK Then\n                Dim message As String = String.Format("POST failed. Received HTTP {0}", Response.StatusCode)\n                Throw New ApplicationException(message)\n            End If\n            \n            ' Set psResponseText if needed (use responseData)\n        End Using\n\n    Catch ex As WebException\n        Dim s As String = ex.Message & " " & ex.Status.ToString()\n        Throw New Exception(s, ex)\n    End Try\n    \n    Return True\nEnd Functio