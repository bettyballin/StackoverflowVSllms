Imports log4net\n\nPublic Class MyClassLogger\n    Private Shared ReadOnly log As ILog = LogManager.GetLogger(GetType(MyClassLogger))\n\n    ' Define the delegate\n    Public Delegate Sub LogDelegate(ByVal format As String, ByVal ParamArray args() As Object)\n\n    ' Field to hold the delegate\n    Private ReadOnly logMethod As LogDelegate\n\n    ' Constructor to initialize the delegate\n    Public Sub New(logMethod As LogDelegate)\n        Me.logMethod = logMethod\n    End Sub\n\n    Public Sub CheckDifference(ByVal A As Integer, ByVal B As Integer)\n        If (B - A) > 5 Then\n            ' Invoke the delegate with the message\n            logMethod.Invoke("Difference ({0}) is outside of acceptable range.", (B - A))\n        End If\n    End Sub\nEnd Class\n\n' Usage example:\nModule Module1\n    Sub Main()\n        Dim logger As New MyClassLogger(AddressOf log4net.LogManager.GetLogger("MyClassLogger").ErrorFormat)\n        ' Or for warnings:\n        ' Dim logger As New MyClassLogger(AddressOf log4net.LogManager.GetLogger("MyClassLogger").WarnFormat)\n\n        logger.CheckDifference(1, 7)\n    End Sub\nEnd Module