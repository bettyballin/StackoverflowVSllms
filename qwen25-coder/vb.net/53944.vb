' Using CType for conversion from Object to Integer in VB.NET\nDim obj As Object = 123\nDim intValue As Integer = CType(obj, Integer)\n\n' Equivalent using DirectCast when the type is known at compile time\nintValue = DirectCast(obj, Integer) ' Ensure obj is actually an Integer\n\n' Using Convert.ToInt32 for safe numeric conversion from Object\nintValue = Convert.ToInt32(obj) ' Handles various types and provides safer conversions\n\n' For interfaces or inheritance scenarios\nDim someObject As Object = GetSomeSpecificClass()\nDim specificTypeInstance As SpecificType = DirectCast(someObject, SpecificType)\n\n' Using TryCast to avoid exceptions when not sure about the actual type\nDim specificTypeNullableInstance As SpecificType = TryCast(someObject, SpecificType)\nIf specificTypeNullableInstance IsNot Nothing Then\n    ' Do something with specificTypeNullableInstance\nEnd If