Public Class Form1\n\n    ' Set up your DataGridViews in the form designer or here.\n    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\n        ' Example: Initialize your DataGridViews here if not done through Designer.\n        InitializeDataGridViews()\n    End Sub\n\n    ' Handle the Resize event of the form to scale DataGridViews dynamiclaly.\n    Private Sub Form1_Resize(sender As Object, e As EventArgs) Handles MyBase.Resize\n        ScaleDataGridViews()\n    End Sub\n\n    ' Method to initialize DataGridView properties.\n    Private Sub InitializeDataGridViews()\n        ' Configure columns for each DataGridView...\n        With DataGridView1\n            .Dock = DockStyle.Fill\n            ' ...additional configuration...\n        End With\n\n        With DataGridView2\n            .Dock = DockStyle.Top ' Or other appropriate docking as needed.\n            ' ...additional configuration...\n        End With\n\n        With DataGridView3\n            .Dock = DockStyle.Top ' Or other appropriate docking as needed.\n            ' ...additional configuration...\n        End With\n        \n        ' Optionally, set initial scaling here (especially if form size isn't the default on load)\n        ScaleDataGridViews()\n    End Sub\n\n    ' Method to scale DataGridViews when form is resized.\n    Private Sub ScaleDataGridViews()\n        Try\n            UpdateColumnsWidth(DataGridView1)\n            UpdateRowsHeight(DataGridView2) ' Adjust the row height based on the need and DataGridView used.\n            UpdateColumnsWidth(DataGridView2)\n            UpdateColumnsWidth(DataGridView3)\n\n            Dim fontSize As Single = Math.Min((Me.ClientRectangle.Height / 50), (Me.ClientRectangle.Width / 80))\n            SetFontForAllDataGridViews(New Font("Arial", fontSize))\n        Catch ex As Exception\n            ' Handle exceptions according to your application's error management strategy.\n        End Try\n    End Sub\n\n    ' Update each column width equally based on available space in DataGridView.\n    Private Sub UpdateColumnsWidth(dgv As DataGridView)\n        Dim totalColumnWidth As Integer = dgv.ClientSize.Width - 20 ' Padding, scrollbar width, etc.\n        For Each col As DataGridViewColumn In dgv.Columns\n            If col.Visible Then\n                ' Adjust the column width to fit proportionally within the available space.\n                Dim newWidth As Double = (col.Throughput / dgv.Columns.GetColumnsWidth(DataGridViewElementStates.Visible)) * totalColumnWidth\n                col.Width = CInt(newWidth)\n            End If\n        Next\n    End Sub\n\n    ' Update each row height in a DataGridView (if needed, based on your application).\n    Private Sub UpdateRowsHeight(dgv As DataGridView)\n        For Each row As DataGridViewRow In dgv.Rows\n            ' Adjust the row height as necessary, here it's set to default cell size for simplicity.\n            row.Height = DataGridViewTextBoxCell.GetPreferredSize(Graphics.FromHwnd(MyBase.Handle), New Size()).Height\n        Next\n    End Sub\n\n\n    ' Set a new font of specified size and type in all cells of all DataGridViews.\n    Private Sub SetFontForAllDataGridViews(newFont As Font)\n        For Each dgv As DataGridView In {DataGridView1, DataGridView2, DataGridView3}\n            dgv.Font = newFont\n        Next\n    End Sub\n\nEnd Class