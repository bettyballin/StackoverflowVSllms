Imports System.IO\n\nProtected Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)\n    ' Get the last error from the server.\n    Dim ex As Exception = Server.GetLastError()\n\n    ' Log the exception details.\n    LogException(ex)\n\n    ' Do not reinvoke Application_Error in an infinite loop by not clearing  \n    ' the exception context.\nEnd Sub\n\nPrivate Sub LogException(ByVal ex As Exception)\n    Try\n        ' Build an error message string to append and write to the log file. \n        Dim errorMessage As String = _\n            $"Date: {DateTime.Now.ToString()} -> Error in Path: {Request.Path}" & _\n            $"{ControlChars.CrLf}Message: {Server.HtmlEncode(ex.Message)}" & _\n            $"{ControlChars.CrLf}Stack Trace: {Server.HtmlEncode(ex.StackTrace)}" & _\n            $"{ControlChars.CrLf}"\n\n        ' Specify the path to the error file.\n        Dim path As String = Server.MapPath("~/App_Data/Errors.txt")\n\n        ' Write the exception details to a text file.\n        File.AppendAllText(path, errorMessage)\n    Catch\n        ' Handle any errors that occur during logging, \n        ' typically you might just ignore them and try to log this failure later.\n    Finally\n        ' Clear the last error from the server.\n        Server.ClearError()\n    End Try\nEnd Sub