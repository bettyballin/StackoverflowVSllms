Private writer As IndexWriter\n\n' Initialize the IndexWriter\nwriter = New IndexWriter(indexDirectory, New StandardAnalyzer(), False)\nwriter.SetUseCompoundFile(True)\n\n' Define a method to create a document from a file\nFunction CreateDocument(filePath As String) As Document\n    Dim doc As New Document()\n    ' Add fields to your document here, e.g.\n    ' doc.Add(New Field("path", filePath, Field.Store.YES, Field.Index.ANALYZED))\n    Return doc\nEnd Function\n\n' Method to update the index\nSub UpdateIndex(documentFolderPath As String)\n    ' Get all files in the directory\n    Dim files = System.IO.Directory.GetFiles(documentFolderPath)\n\n    ' Iterate over each file\n    For Each filePath In files\n        ' Create a term that identifies this document (e.g., using the file path)\n        Dim term As New Term("path", filePath)\n\n        ' Delete the old document matching the term\n        writer.DeleteDocuments(term)\n\n        ' Add the new document\n        Dim doc = CreateDocument(filePath)\n        writer.AddDocument(doc)\n    Next\n\n    ' Commit changes\n    writer.Commit()\nEnd Sub\n\n' Example usage\nUpdateIndex("C:\path\to\your\documents")\n\n' Optimize the index to reclaim space and improve performance\nwriter.Optimize()\n\n' Close the writer when done\nwriter.Close()