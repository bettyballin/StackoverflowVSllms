' Assuming Product is your custom class and it has fields like Name, Id etc.\nPublic Class Form1\n\n    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load\n        ' Set the DataSource of DataGridView to SortableBindingList(Of Product)\n        DataGridView1.DataSource = Services.Products.GetList()\n\n        ' Optionally set columns headers if you want custom column names instead of property names\n        With DataGridView1.Columns\n            .Item("Name").HeaderText = "Product Name"\n            .Item("Id").HeaderText = "Product ID"\n        End With\n\n        ' Bind SelectionChanged event\n        AddHandler DataGridView1.SelectionChanged, AddressOf DataGridView1_SelectionChanged\n    End Sub\n\n    Private Sub DataGridView1_SelectionChanged(ByVal sender As Object, ByVal e As EventArgs)\n        If DataGridView1.SelectedRows.Count > 0 AndAlso Not CType(DataGridView1.DataSource, BindingList(Of Product)).IsBindingSuspended Then\n            Dim selectedProduct As Product = TryCast(DataGridView1.SelectedRows(0).DataBoundItem, Product)\n\n            ' Now you have the selected product\n            Label1.Text = "Selected Product: " & selectedProduct.Name\n        End If\n    End Sub\nEnd Class