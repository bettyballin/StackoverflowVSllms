Public Sub Capture(ByVal MyImage As Canvas)\n    ' Desired output dimensions in pixels (300dpi conversion from inches if needed)\n    Dim targetWidthPixels As Integer = Width * 300 / 96.0\n    Dim targetHeightPixels As Integer = Height * 300 / 96.0\n\n    ' Determine the scale factor to fit within the desired dimensions while maintaining aspect ratio\n    Dim scale As Double = Math.Min(targetWidthPixels / MyImage.Width, targetHeightPixels / MyImage.Height)\n\n    ' Apply the transform to the canvas to scale it accordingly\n    Dim transform As New ScaleTransform(scale, scale)\n    MyImage.LayoutTransform = transform\n\n    ' Measure and arrange with unscaled dimensions (since we're using a layout transform for scaling)\n    MyImage.Measure(New Size(MyImage.Width, MyImage.Height))\n    MyImage.Arrange(New Rect(0, 0, MyImage.Width, MyImage.Height))\n\n    ' Create the target bitmap with the desired output size\n    Dim rtb As RenderTargetBitmap = New RenderTargetBitmap(targetWidthPixels, targetHeightPixels, 300, 300, PixelFormats.Pbgra32)\n\n    ' Prepare a drawing visual to draw into\n    Dim dv As New DrawingVisual()\n    Using ctx As DrawingContext = dv.RenderOpen()\n        Dim vb As New VisualBrush(MyImage)\n        ' Draw the scaled image onto the target bitmap\n        ctx.DrawRectangle(vb, Nothing, New Rect(New System.Windows.Point(), rtb.PixelWidth, rtb.PixelHeight))\n    End Using\n\n    ' Render the drawing visual to the render target bitmap\n    rtb.Render(dv)\n\n    ' Encode the bitmap as specified\n    Dim encoder As BitmapEncoder\n    Select Case Encoding.ToLower()\n        Case "jpg"\n            encoder = New JpegBitmapEncoder()\n        Case "png"\n            encoder = New PngBitmapEncoder()\n        Case "gif"\n            encoder = New GifBitmapEncoder()\n        Case "bmp"\n            encoder = New BmpBitmapEncoder()\n        Case "tif"\n            encoder = New TiffBitmapEncoder()\n        Case "wmp"\n            encoder = New WmpBitmapEncoder()\n    End Select\n    encoder.Frames.Add(BitmapFrame.Create(rtb))\n\n    ' Save the encoded image to a memory stream\n    retImageStream = New MemoryStream()\n    encoder.Save(retImageStream)\n    retImageStream.Flush()\n    retImageStream.Seek(0, SeekOrigin.Begin)\n\n    MyImage.LayoutTransform = Nothing ' Reset transform for further use if necessary\nEnd Sub