Imports Apache.NMS.ActiveMQ\n\nPublic Class MessageProcessor\n    Implements INMSConnectionDelegate\n\n    Private ReadOnly _connectionFactory As IConnectionFactory\n    Private _connection As IConnection\n    Private _session As ISession\n    Private _destination As IDestination\n    Private _consumer As IMessageConsumer\n    Private ReadOnly _prefetchLimit As Integer = 1000 ' Adjust as necessary\n\n    Public Sub New(ByVal brokerUri As String, ByVal queueName As String)\n        _connectionFactory = New ConnectionFactory(brokerUri)\n    End Sub\n\n    Public Async Sub StartProcessingAsync() Implements INMSConnectionDelegate.StartProcessing\n        _connection = _connectionFactory.CreateConnection()\n        _session = _connection.CreateSession(AcknowledgementMode.IndividualAcknowledge)\n        _destination = _session.GetQueue("YOUR_QUEUE_NAME")\n        _consumer = _session.CreateConsumer(_destination)\n\n        ' Set the prefetch limit\n        DirectCast(_consumer, MessageConsumer.Adapter).PrefetchSize = _prefetchLimit\n\n        ' Create multiple consumers or threads as necessary\n        For i As Integer = 0 To 4 ' Example of using 5 consumers\n            Dim consumerClone As IMessageConsumer = _session.CreateConsumer(_destination)\n            AddHandler consumerClone.Listener, AddressOf OnMessageReceivedAsync\n        Next\n\n        _connection.Start()\n    End Sub\n\n    Private Async Sub OnMessageReceivedAsync(ByVal message As NMS.IMessage)\n        Await Task.Run(Sub() ProcessMessage(message))\n        DirectCast(message, IMessage).Acknowledge()\n    End Sub\n\n    Private Sub ProcessMessage(ByVal message As NMS.IMessage)\n        ' Implement your message processing logic here\n        Console.WriteLine("Processing message: " & DirectCast(message, ITextMessage).Text)\n        Thread.Sleep(100) ' Simulate work being done; avoid in real application\n    End Sub\n\n    Public Sub StopProcessing()\n        _consumer.Close()\n        _session.Close()\n        _connection.Stop()\n        _connection.Close()\n    End Sub\n\nEnd Class