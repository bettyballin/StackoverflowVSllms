Imports System.Text.RegularExpressions\n\nPublic Class ContentAnalyzer\n    Private truePatterns As New List(Of String)()\n\n    Public Sub AddTrueCase(ByVal html As String)\n        ' Extract static parts and create a pattern\n        Dim staticPattern = ExtractStaticParts(html)\n        truePatterns.Add(staticPattern)\n    End Sub\n\n    Private Function ExtractStaticParts(ByVal html As String) As String\n        ' Simplified version: remove known dynamic sections based on keywords or regex\n        ' For example, remove datetime patterns\n        Return Regex.Replace(html, "\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}", "%%DATETIME%%")\n    End Function\n\n    Public Function IsThisTrue(ByVal unknownHtml As String) As Boolean\n        ' Clean the incoming response in the same way as stored templates\n        Dim cleanedHtml = ExtractStaticParts(unknownHtml)\n\n        ' Check if it matches any of the true patterns with tolerance\n        For Each pattern In truePatterns\n            If Regex.IsMatch(cleanedHtml, "^" & ReplaceEscaped(pattern) & "$")\n                Return True\n            End If\n        Next\n\n        Return False\n    End Function\n\n    Private Function ReplaceEscaped(ByVal pattern As String) As String\n        ' Create a regex pattern from the static template with .? for dynamic parts\n        Return Regex.Replace(pattern, "%%[^%]+%%", ".?")\n    End Function\nEnd Class