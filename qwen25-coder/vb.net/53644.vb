Imports System.Security.Principal\n\nPublic Shared Function ExecuteQueryWithImpersonation(uid As String, pwd As String, query As String) As DataTable\n    Dim domainName As String = My.User.Name.Substring(0, My.User.Name.IndexOf("\"))\n    Dim token As IntPtr\n    If LogonUser(uid, domainName, pwd, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, token) Then\n        Using impersonationContext As WindowsImpersonationContext = WindowsIdentity.Impersonate(token)\n            ' Here you should create a new connection with the impersonated context.\n            Dim connectionString As String = "Server=your_server;Database=your_db;Integrated Security=SSPI;"\n            Using con As New SqlConnection(connectionString)\n                Try\n                    con.Open()\n                    Using cmd As New SqlCommand(query, con)\n                        Using adapter As New SqlDataAdapter(cmd)\n                            Dim dt As New DataTable()\n                            adapter.Fill(dt)\n                            Return dt\n                        End Using\n                    End Using\n                Catch ex As Exception\n                    ' Handle exceptions here.\n                    Console.WriteLine(ex.Message)\n                    Return Nothing\n                Finally\n                    con.Close()\n                End Try\n            End Using\n            impersonationContext.Undo() ' Undo the impersonation if needed, or it ends at end of block.\n        End Using\n    Else\n        Throw New Exception("LogonUser failed.")\n    End If\nEnd Functio