Imports System.Collections.Generic\n\nModule Module1\n\n    Sub Main()\n        Dim list As New List(Of Integer)({1, 2, 3, 4})\n        Dim k As Integer = 2\n        Dim combinations As New List(Of List(Of Integer))()\n\n        GenerateCombinations(list, k, 0, New List(Of Integer)(), combinations)\n\n        For Each combo In combinations\n            Console.WriteLine(String.Join(", ", combo))\n        Next\n    End Sub\n\n    Sub GenerateCombinations[T](\n                             ByVal elements As IList(Of T),\n                             ByVal k As Integer,\n                             ByVal startIndex As Integer,\n                             ByVal currentCombination As List(Of T),\n                             ByRef allCombinations As List(Of List(Of T)))\n        \n        If currentCombination.Count = k Then\n            Dim combinationCopy As New List(Of T)(currentCombination)\n            allCombinations.Add(combinationCopy)\n            Return\n        End If\n\n        For i As Integer = startIndex To elements.Count - 1\n            currentCombination.Add(elements(i))\n            GenerateCombinations(elements, k, i + 1, currentCombination, allCombinations)\n            currentCombination.RemoveAt(currentCombination.Count - 1)\n        Next\n    End Sub\n\nEnd Module