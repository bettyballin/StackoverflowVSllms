Imports System\n\nModule RelativeTimeFormatter\n    Function GetRelativeTime(dateToCompare As DateTime) As String\n        Dim ts As TimeSpan = DateTime.Now - dateToCompare\n        Dim deltaDays As Integer = ts.Days\n        Dim deltaSeconds As Integer = Convert.ToInt32(ts.TotalSeconds)\n\n        If (deltaDays > 0)\n            If (deltaDays >= 365)\n                Return Math.Floor(deltaDays / 365) & " year" & (If(Math.Floor(deltaDays / 365) = 1, "", "s")) & " ago"\n            ElseIf (deltaDays >= 30)\n                Return Math.Floor(deltaDays / 30) & " month" & (If(Math.Floor(deltaDays / 30) = 1, "", "s")) & " ago"\n            ElseIf (deltaDays > 0)\n                Return deltaDays & " day" & (If(deltaDays = 1, "", "s")) & " ago"\n            End If\n        Else\n            If (deltaSeconds >= 86400)\n                Return Math.Floor(deltaSeconds / 86400) & " day" & (If(Math.Floor(deltaSeconds / 86400) = 1, "", "s")) & " ago"\n            ElseIf (deltaSeconds >= 3600)\n                Return Math.Floor(deltaSeconds / 3600) & " hour" & (If(Math.Floor(deltaSeconds / 3600) = 1, "", "s")) & " ago"\n            ElseIf (deltaSeconds >= 60)\n                Return Math.Floor(deltaSeconds / 60) & " minute" & (If(Math.Floor(deltaSeconds / 60) = 1, "", "s")) & " ago"\n            Else\n                Return deltaSeconds.ToString() & " second" & (If(deltaSeconds = 1, "", "s")) & " ago"\n            End If\n        End If\n\n        Throw New InvalidOperationException("Error in determining relative time")\n    End Function\n\n    Sub Main()\n        Dim dateToCompare As DateTime = DateTime.Now.AddHours(-5)\n        Console.WriteLine(GetRelativeTime(dateToCompare))\n    End Sub\nEnd Module