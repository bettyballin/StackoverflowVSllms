Imports System.Linq.Expressions\n\nPublic Function GetSortedAndPagedReports(returnReports As List(Of myObject), SortColumn As String, PageSize As Integer, PageNumber As Integer) As List(Of myObject)\n    If String.IsNullOrEmpty(SortColumn) Then\n        Return returnReports.Skip(PageSize * (PageNumber - 1)).Take(PageSize).ToList()\n    End If\n\n    Dim param = Expression.Parameter(GetType(myObject), "obj")\n    Dim propInfo = GetType(myObject).GetProperty(SortColumn)\n\n    If propInfo Is Nothing Then\n        Throw New ArgumentException("Property not found", SortColumn)\n    End If\n\n    Dim propAccess = Expression.MakeMemberAccess(param, propInfo)\n    Dim orderByExp = Expression.Lambda(propAccess, param)\n\n    Dim query As IOrderedEnumerable(Of myObject) = CType(Expression.Call(\n        GetType(Queryable),\n        "OrderBy",\n        New Type() {GetType(myObject), propInfo.PropertyType},\n        returnReports.AsQueryable().Expression,\n        Expression.Quote(orderByExp)\n    ), MethodCallExpression).Compile().DynamicInvoke()\n\n    Return query.Skip(PageSize * (PageNumber - 1)).Take(PageSize).ToList()\nEnd Functio