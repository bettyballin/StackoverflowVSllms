Imports System.Data.SqlClient\n\nPartial Class UpdatePage\n    Inherits System.Web.UI.Page\n\n    ' Define your connection string (replace with yours)\n    Private Shared ReadOnly connectionString As String = ConfigurationManager.ConnectionStrings("YourConnectionStringName").ConnectionString\n\n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load\n        If Not IsPostBack Then\n            ' Call a method to populate the textboxes when the page loads\n            PopulateTextBoxes()\n        End If\n    End Sub\n\n    Private Sub PopulateTextBoxes()\n        Dim con As New SqlConnection(connectionString)\n        Try\n            Dim cmd As New SqlCommand("SELECT ContactName, Email, Phone, Address FROM Contacts WHERE UserID = @UserID", con)\n            ' Assume you have a way to identify the current user, e.g., Session or QueryString\n            cmd.Parameters.AddWithValue("@UserID", GetCurrentUserId())\n\n            con.Open()\n            Dim reader As SqlDataReader = cmd.ExecuteReader()\n            If reader.Read() Then\n                TextBoxContactName.Text = reader("ContactName").ToString()\n                TextBoxEmail.Text = reader("Email").ToString()\n                TextBoxPhone.Text = reader("Phone").ToString()\n                TextBoxAddress.Text = reader("Address").ToString()\n            End If\n        Catch ex As Exception\n            ' Handle exception (log and alert user)\n        Finally\n            con.Close()\n        End Try\n    End Sub\n\n    Protected Sub ButtonSubmit_Click(ByVal sender As Object, ByVal e As EventArgs) Handles ButtonSubmit.Click\n        Dim con As New SqlConnection(connectionString)\n        Try\n            Dim cmd As New SqlCommand("UPDATE Contacts SET ContactName = @ContactName, Email = @Email, Phone = @Phone, Address = @Address WHERE UserID = @UserID", con)\n            ' Add parameters to avoid SQL injection\n            cmd.Parameters.AddWithValue("@ContactName", TextBoxContactName.Text)\n            cmd.Parameters.AddWithValue("@Email", TextBoxEmail.Text)\n            cmd.Parameters.AddWithValue("@Phone", TextBoxPhone.Text)\n            cmd.Parameters.AddWithValue("@Address", TextBoxAddress.Text)\n\n            ' Assume you have a way to identify the current user, e.g., Session or QueryString\n            cmd.Parameters.AddWithValue("@UserID", GetCurrentUserId())\n\n            con.Open()\n            Dim rowsAffected As Integer = cmd.ExecuteNonQuery()\n            If rowsAffected > 0 Then\n                LabelMessage.Text = "Update successful!"\n            Else\n                LabelMessage.Text = "No records were updated."\n            End If\n        Catch ex As Exception\n            ' Handle exception (log and alert user)\n            LabelMessage.Text = "An error occurred while updating the record: " & ex.Message\n        Finally\n            con.Close()\n        End Try\n    End Sub\n\n    ' Function to get current user ID, replace with your logic\n    Private Function GetCurrentUserId() As Integer\n        Return 1 ' Example value, replace with actual retrieval method\n    End Function\nEnd Class