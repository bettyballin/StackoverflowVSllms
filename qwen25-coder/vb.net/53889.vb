' Define the interface with a property having both Get and Set\nPublic Interface IFoo\n    Property MyMinimallyReadOnlyPropertyThatCanAlsoBeReadWrite As Boolean\nEnd Interface\n\n' Implement the interface with read-write access\nPublic Class FooWithReadWriteAccess\n    Implements IFoo\n    \n    Private _myMinimallyReadOnlyProperty As Boolean\n\n    Public Property MyMinimallyReadOnlyPropertyThatCanAlsoBeReadWrite() As Boolean Implements IFoo.MyMinimallyReadOnlyPropertyThatCanAlsoBeReadWrite\n        Get\n            Return _myMinimallyReadOnlyProperty\n        End Get\n        Set\n            _myMinimallyReadOnlyProperty = value\n        End Set\n    End Property\nEnd Class\n\n' Implement the interface with read-only access\nPublic Class FooWithReadOnlyAccess\n    Implements IFoo\n    \n    Private _myMinimallyReadOnlyProperty As Boolean\n\n    Public Property MyMinimallyReadOnlyPropertyThatCanAlsoBeReadWrite() As Boolean Implements IFoo.MyMinimallyReadOnlyPropertyThatCanAlsoBeReadWrite\n        Get\n            Return _myMinimallyReadOnlyProperty\n        End Get\n        Set(value As Boolean)\n            ' Empty setter does not allow modifications\n        End Set\n    End Property\n\n    Public Sub New(initialValue As Boolean)\n        _myMinimallyReadOnlyProperty = initialValue\n    End Sub\nEnd Class