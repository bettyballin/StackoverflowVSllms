Public Class BookRepository\n    Private Sub PopulateBookDetails(book As IBook)\n        ' Retrieve products for the book from the database\n        Dim products = GetProductsForBook(book.Somethingelse())\n        For Each product As Product In products\n            book.ProductList().Add(product)\n            PopulateProductDetails(product)\n        Next\n    End Sub\n\n    Private Sub PopulateProductDetails(product As IProduct)\n        ' Retrieve special options for the product from the database\n        Dim specialOptions = GetSpecialOptionsForProduct(product.Somethingelse())\n        For Each option As SpecialOption In specialOptions\n            product.SpecialOptionsList().Add(option)\n        Next\n    End Sub\n\n    Public Function GetAllBooks() As Collection(Of Book)\n        Dim books As New Collection(Of Book)()\n        ' Retrieve all books from the database\n        Dim bookData = GetAllBookDataFromDatabase()\n        For Each bookDataInfo In bookData\n            Dim book As New Book With {.Somethingelse = bookDataInfo.Somethingelse}\n            books.Add(book)\n            PopulateBookDetails(book)\n        Next\n\n        Return books\n    End Function\n\n    ' Mock methods for database access\n    Private Function GetProductsForBook(bookId As String) As Collection(Of Product)\n        ' Implementation to fetch products from the database\n    End Function\n\n    Private Function GetAllBookDataFromDatabase() As IEnumerable(Of BookInfo)\n        ' Implementation to fetch book data from the database\n    End Function\n\n    Private Function GetSpecialOptionsForProduct(productId As String) As Collection(Of SpecialOption)\n        ' Implementation to fetch special options from the database\n    End Function\nEnd Class