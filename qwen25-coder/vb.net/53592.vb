Function IsUserInADGroup(strUserName As String, strGroupName As String) As Boolean\n    Dim objLDAP As Object\n    Dim objConnection As Object\n    Dim objCommand As Object\n    Dim objRecordSet As Object\n    Dim strPathToAD As String\n    \n    On Error Resume Next\n    \n    ' Set the LDAP path for your domain controller or use a domain distinguished name (DN)\n    strPathToAD = "LDAP://DC=example,DC=com"\n    \n    ' Create necessary objects\n    Set objConnection = CreateObject("ADODB.Connection")\n    Set objCommand = CreateObject("ADODB.Command")\n    \n    ' Set the properties of the ADO connection\n    With objConnection\n        .Provider = "ADsDSOObject"\n        .Open "Active Directory Provider"\n    End With\n    \n    ' Define LDAP query to find if user is a member of specified group\n    With objCommand\n        Set .ActiveConnection = objConnection\n        .Properties("Page Size") = 1000\n        .CommandText = "SELECT * FROM '" & strPathToAD & "' WHERE objectCategory='user' AND sAMAccountName='" & strUserName & "'"\n    End With\n    \n    ' Execute the command and retrieve records\n    Set objRecordSet = objCommand.Execute\n   \n    ' Check if user is a member of the specified group\n    If Not objRecordSet.EOF Then\n        If IsNull(objRecordSet.Fields("memberOf")) Then\n            IsUserInADGroup = False\n        Else\n            Dim arrGroups As Variant\n            arrGroups = Split(Trim(CStr(objRecordSet.Fields("memberOf").Value)), vbCrLf)\n            \n            Dim intLoop As Integer\n            For intLoop = LBound(arrGroups) To UBound(arrGroups)\n                If InStr(1, arrGroups(intLoop), strGroupName, vbTextCompare) > 0 Then\n                    IsUserInADGroup = True\n                    Exit Function\n                End If\n            Next intLoop\n        End If\n    End If\n   \n    ' Cleanup objects\n    On Error Resume Next\n    Set objRecordSet = Nothing\n    Set objCommand = Nothing\n    Set objConnection = Nothing\n    \n    IsUserInADGroup = False\nEnd Functio