' POCO Model: Just data structure\nPublic Class Product\n    Public Property ProductID As Integer\n    Public Property Name As String\n    ' Other properties...\nEnd Class\n\n' Repository Interface for Data Access\nPublic Interface IProductRepository\n    Function GetProduct(id As Integer) As Product\n    Sub Save(product As Product)\n    Function GetRelatedProducts(productId As Integer) As IList(Of Product)\nEnd Interface\n\n' Service Interface for Business Logic\nPublic Interface IProductService\n    Function GetProduct(id As Integer) As Product\n    Sub SaveProduct(product As Product)\n    Function GetRelatedProducts(productId As Integer) As IList(Of Product)\nEnd Interface\n\n' Implementation of ProductService\nPublic Class ProductService\n    Implements IProductService\n\n    Private ReadOnly _productRepository As IProductRepository\n\n    ' Constructor for Dependency Injection\n    Public Sub New(ByVal productRepository As IProductRepository)\n        _productRepository = productRepository\n    End Sub\n\n    Public Function GetProduct(id As Integer) As Product Implements IProductService.GetProduct\n        Return _productRepository.GetProduct(id)\n    End Function\n\n    Public Sub SaveProduct(product As Product) Implements IProductService.SaveProduct\n        _productRepository.Save(product)\n    End Sub\n\n    Public Function GetRelatedProducts(productId As Integer) As IList(Of Product) Implements IProductService.GetRelatedProducts\n        Return _productRepository.GetRelatedProducts(productId)\n    End Function\nEnd Class\n\n' Usage Example\nDim prodSvc = ObjectFactory.GetInstance(Of IProductService)()\nDim prod = prodSvc.GetProduct(1)\nprod.Name = "New Name"\nprodSvc.SaveProduct(prod)\n\nDim relatedProds = prodSvc.GetRelatedProducts(prod.ProductID)