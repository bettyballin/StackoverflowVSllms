Sub GenerateDDL()\n    Dim db As DAO.Database\n    Dim tdf As DAO.TableDef\n    Dim fld As DAO.Field\n    Dim sql As String, tableName As String\n    \n    Set db = CurrentDb\n    \n    For Each tdf In db.TableDefs\n        If Left(tdf.Name, 4) <> "MSys" And Not tdf.IsConnected Then ' Skip system tables and linked tables\n            tableName = tdf.Name\n            sql = "CREATE TABLE [" & tableName & "] ("\n            \n            For Each fld In tdf.Fields\n                sql = sql & "[" & fld.Name & "] " & FieldTypeSQL(fld.Type)\n                \n                If Not IsNull(fld.DefaultValue) Then\n                    If fld.Type <> dbText And fld.Type <> dbMemo Then\n                        sql = sql & " DEFAULT " & fld.DefaultValue\n                    Else\n                        sql = sql & " DEFAULT '" & fld.DefaultValue & "'"\n                    End If\n                End If\n                \n                If fld.Required Then\n                    sql = sql & " NOT NULL"\n                End If\n                \n                sql = sql & ", "\n            Next fld\n            \n            If Right(sql, 2) = ", " Then ' Remove trailing comma and space\n                sql = Left(sql, Len(sql) - 2)\n            End If\n            \n            sql = sql & ");"\n            Debug.Print sql 'or print to a file or form\n        End If\n    Next tdf\n    \n    Set fld = Nothing\n    Set tdf = Nothing\n    Set db = Nothing\nEnd Sub\n\nFunction FieldTypeSQL(fldType As DAO.DataTypeEnum) As String\n    Select Case fldType\n        Case dbBoolean: FieldTypeSQL = "NUMBER(1,0)"\n        Case dbByte: FieldTypeSQL = "NUMBER(3,0)"\n        Case dbInteger: FieldTypeSQL = "NUMBER(5,0)"\n        Case dbLong: FieldTypeSQL = "NUMBER(9,0)"\n        Case dbCurrency: FieldTypeSQL = "NUMBER(19,4)"\n        Case dbSingle: FieldTypeSQL = "BINARY_FLOAT"\n        Case dbDouble: FieldTypeSQL = "BINARY_DOUBLE"\n        Case dbDate: FieldTypeSQL = "DATE"\n        Case dbText: FieldTypeSQL = "VARCHAR2(255)" ' Adjust size as needed\n        Case dbLongBinary, dbMemo: FieldTypeSQL = "CLOB"\n        Case Else: FieldTypeSQL = "UNKNOWN_TYPE" ' Adjust or handle accordingly\n    End Select\nEnd Functio