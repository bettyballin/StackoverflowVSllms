Public Class YourViewModel Implements IDataErrorInfo, INotifyPropertyChanged\n\n    Private _isFormValid As Boolean = True\n    Public ReadOnly Property IsFormValid As Boolean\n        Get\n            Return _isFormValid\n        End Get\n    End Property\n\n    Protected Sub OnPropertyChanged(propertyName As String)\n        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))\n    End Sub\n\n    Default Public ReadOnly Property Item(ByVal propertyName As String) As String Implements IDataErrorInfo.Item\n        Get\n            Dim valid As Boolean = True\n            If propertyName = "IncidentCategory" Then\n                valid = Not String.IsNullOrEmpty(IncidentCategory)\n                If Not valid Then\n                    Return "Incident category is required"\n                End If\n            End If\n\n            ' Update form validity\n            _isFormValid = GetAllPropertiesValid()\n            OnPropertyChanged(nameof(IsFormValid))\n            Return Nothing ' No error message if valid\n        End Get\n    End Property\n\n    Private Function GetAllPropertiesValid() As Boolean\n        ' Check all the fields and return true only if they are all valid\n        Return String.IsNullOrEmpty(Item("IncidentCategory"))\n    End Function\n\n    Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged\nEnd Class