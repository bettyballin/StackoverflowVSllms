Imports System.Configuration\n\nPublic Class ConnectionStringFactory\n    \n    ' This method should contain logic to determine which tenant's DB to connect to.\n    ' For simplicity, let's assume TenantId is passed as a parameter.\n    Public Shared Function GetConnectionString(tenantId As Integer) As String\n        ' For demonstration, we're using a simple mapping. In practice, this might involve querying a central config DB or cache.\n        Dim connectionStrings As Dictionary(Of Integer, String) = New Dictionary(Of Integer, String) From {\n            {1, "datasource=server1;database=db1;user id=user1;password=password1;"},\n            {2, "datasource=server2;database=db2;user id=user2;password=password2;"}\n        }\n        \n        Return connectionStrings(tenantId)\n    End Function\n    \nEnd Class\n\nPublic Module DataAccessModule\n    \n    ' Example function to demonstrate setting the correct connection string.\n    Public Sub PerformDataOperation(tenantId As Integer)\n        Dim connectionString As String = ConnectionStringFactory.GetConnectionString(tenantId)\n        \n        Using adapter As New YourXsdDataSetTableAdapters.YourTableAdapter()\n            adapter.Connection.ConnectionString = connectionString\n            ' Now perform your data operation, e.g., adapter.GetData(), adapter.Update(dataTable), etc.\n        End Using\n    End Sub\n    \nEnd Module