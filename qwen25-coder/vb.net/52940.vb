' Define a class to represent your site information\nPublic Class SiteInfo\n    Public Property SiteID As Integer\n    Public Property SiteName As String\nEnd Class\n\n' Create a custom equality comparer for SiteInfo based on SiteID\nPublic Class SiteComparer\n    Implements IEqualityComparer(Of SiteInfo)\n\n    Public Function Equals(x As SiteInfo, y As SiteInfo) As Boolean Implements IEqualityComparer(Of SiteInfo).Equals\n        If x Is Nothing AndAlso y Is Nothing Then\n            Return True\n        End If\n\n        If x Is Nothing OrElse y Is Nothing Then\n            Return False\n        End If\n\n        Return x.SiteID = y.SiteID\n    End Function\n\n    Public Function GetHashCode(obj As SiteInfo) As Integer Implements IEqualityComparer(Of SiteInfo).GetHashCode\n        If obj Is Nothing Then\n            Return 0\n        End If\n        Return obj.SiteID.GetHashCode()\n    End Function\nEnd Class\n\n' Usage in LINQ query\nDim List1 = (From i In db.Sites _\n             Where i.StatusID = published _\n             Select New SiteInfo() With {.SiteID = i.SiteID, .SiteName = i.SiteName}).ToList()\n\nDim insComparer As New SiteComparer()\nDim List2 = (From i In db.Sites _\n             Where i.StatusID = pending _\n             Select New SiteInfo() With {.SiteID = i.SiteID, .SiteName = i.SiteName}) _\n             .Except(List1, insComparer).ToList()