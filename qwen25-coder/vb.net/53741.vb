Imports System.IO.Ports\n\nPublic Class SerialPortManager\n    Private WithEvents _serialPort As New SerialPort()\n\n    Public Sub InitializeSerialPort(portName As String, baudRate As Integer)\n        Try\n            ' Configure the serial port\n            _serialPort.PortName = portName\n            _serialPort.BaudRate = baudRate\n            _serialPort.Parity = Parity.None\n            _serialPort.StopBits = StopBits.One\n            _serialPort.DataBits = 8\n            _serialPort.Handshake = Handshake.None\n\n            ' Open the serial port\n            If Not _serialPort.IsOpen Then\n                _serialPort.Open()\n            End If\n        Catch ex As UnauthorizedAccessException\n            Console.WriteLine("Access to the port is denied.")\n        Catch ex As IOException\n            Console.WriteLine("The specified port does not exist or is already in use.")\n        Catch ex As InvalidOperationException\n            Console.WriteLine("An invalid property was specified for the serial port.")\n        End Try\n    End Sub\n\n    Private Sub _serialPort_DataReceived(sender As Object, e As SerialDataReceivedEventArgs) Handles _serialPort.DataReceived\n        Dim dataReceived As String = _serialPort.ReadExisting()\n        ' Process your received data here\n        Console.WriteLine("Data Received: " & dataReceived)\n    End Sub\n\n    Public Sub CloseSerialPort()\n        If _serialPort.IsOpen Then\n            _serialPort.Close()\n        End If\n    End Sub\nEnd Class