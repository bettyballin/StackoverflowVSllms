Option Explicit\n\nPrivate Declare Function CreateToolhelp32Snapshot Lib "kernel32" (ByVal dwFlags As Long, ByVal th32ProcessID As Long) As Long\nPrivate Declare Function Process32First Lib "kernel32" (ByVal hSnapshot As Long, uProcess As PROCESSENTRY32) As Long\nPrivate Declare Function Process32Next Lib "kernel32" (ByVal hSnapshot As Long, uProcess As PROCESSENTRY32) As Long\n\nPrivate Const TH32CS_SNAPPROCESS = &H2\n\nPrivate Type PROCESSENTRY32\n    dwSize As Long\n    cntUsage As Long\n    th32ProcessID As Long\n    th32DefaultHeapID As Long\n    th32ModuleID As Long\n    cntThreads As Long\n    th32ParentProcessID As Long\n    pcPriClassBase As Long\n    dwFlags As Long\n    szExeFile As String * 260\nEnd Type\n\nPublic Sub ListProcesses()\n    Dim hSnapshot As Long\n    Dim hProcess As Long\n    Dim pe32 As PROCESSENTRY32\n    \n    ' Take a snapshot of all processes in the system.\n    hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0&)\n    \n    If hSnapshot <> -1 Then\n        pe32.dwSize = Len(pe32)\n        \n        ' Retrieve information about the first process,\n        ' and exit if unsuccessful\n        hProcess = Process32First(hSnapshot, pe32)\n        \n        Do While hProcess <> 0\n            MsgBox Left$(TrimNulls(pe32.szExeFile), InStr(1, TrimNulls(pe32.szExeFile), Chr(0)))\n            \n            ' Retrieve information about the next process,\n            ' and exit if unsuccessful\n            hProcess = Process32Next(hSnapshot, pe32)\n        Loop\n    End If\n    \nEnd Sub\n\nPrivate Function TrimNulls(ByVal sIn As String) As String\n    Dim dwPos As Long\n    dwPos = InStr(sIn, Chr$(0))\n    If dwPos <> 0 Then\n        TrimNulls = Left$(Text1.Text, dwPos - 1)\n    Else: TrimNulls = sIn\n    End If\nEnd Functio