Option Explicit\n\nPrivate Declare PtrSafe Sub GetStrings Lib "YourDLL.dll" (ByRef strings As LongPtr, ByRef count As Long)\nPrivate Declare PtrSafe Sub FreeBSTRStrings Lib "YourDLL.dll" (ByVal strings As LongPtr, ByVal count As Long)\n\nSub TestGetStringArray()\n    Dim stringPtrs() As LongPtr\n    Dim count As Long\n    Dim i As Long\n\n    ReDim stringPtrs(1 To 2) ' Adjust the size based on your knowledge of string count or dynamic resizing logic.\n\n    GetStrings VarPtr(stringPtrs(LBound(stringPtrs))), count\n\n    For i = LBound(stringPtrs) To UBound(stringPtrs)\n        Debug.Print PtrToStringBSTR(StringFromPtr(stringPtrs(i)))\n    Next i\n\n    FreeBSTRStrings VarPtr(stringPtrs(LBound(stringPtrs))), count\nEnd Sub\n\nFunction PtrToStringBSTR(ByVal strptr As LongPtr) As String\n    PtrToStringBSTR = StringFromBSTR(StrPtr(strptr))\nEnd Function\n\nFunction StringFromPtr(ByVal ptr As LongPtr) As String\n    Dim ret As String\n    If ptr <> 0 Then\n        Dim length As Long\n        length = LenB(Space$(SysStringByteLen(ptr) \ 2))\n        ret = Left$(Space$(length), length)\n        CopyMemory ByVal StrPtr(ret), ByVal ptr, length * 2\n    End If\n    StringFromPtr = ret\nEnd Functio