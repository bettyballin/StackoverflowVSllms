Imports System.Collections.Generic\n\nNamespace NerdDinner.Models\n\n    <System.ComponentModel.DataAnnotations.Bind(Include:="Title,Description,EventDate,Address,Country,ContactPhone,Latitude,Longitude")>\n    Partial Public Class Dinner\n\n        Public Function IsHostedBy(userName As String) As Boolean\n            Return HostedBy.Equals(userName, StringComparison.InvariantCultureIgnoreCase)\n        End Function\n\n        Public Function IsUserRegistered(userName As String) As Boolean\n            Return RSVPs.Any(Function(r) r.AttendeeName.Equals(userName, StringComparison.InvariantCultureIgnoreCase))\n        End Function\n\n        Public ReadOnly Property IsValid As Boolean\n            Get\n                Return (GetRuleViolations().Count() = 0)\n            End Get\n        End Property\n\n        Public Function GetRuleViolations() As IEnumerable(Of RuleViolation)\n\n            Dim violations As New List(Of RuleViolation)()\n\n            If String.IsNullOrEmpty(Title) Then\n                violations.Add(New RuleViolation("Title is required", "Title"))\n            End If\n\n            If String.IsNullOrEmpty(Description) Then\n                violations.Add(New RuleViolation("Description is required", "Description"))\n            End If\n\n            If String.IsNullOrEmpty(HostedBy) Then\n                violations.Add(New RuleViolation("HostedBy is required", "HostedBy"))\n            End If\n\n            If String.IsNullOrEmpty(Address) Then\n                violations.Add(New RuleViolation("Address is required", "Address"))\n            End If\n\n            If String.IsNullOrEmpty(Country) Then\n                violations.Add(New RuleViolation("Country is required", "Country")) ' Corrected field name here\n            End If\n\n            If String.IsNullOrEmpty(ContactPhone) Then\n                violations.Add(New RuleViolation("Phone# is required", "ContactPhone"))\n            End If\n\n            If Not PhoneValidator.IsValidNumber(ContactPhone, Country) Then\n                violations.Add(New RuleViolation("Phone# does not match country", "ContactPhone"))\n            End If\n\n            Return violations\n        End Function\n\n        Partial Private Sub OnValidate(action As ChangeAction)\n            If Not IsValid Then\n                Throw New ApplicationException("Rule violations prevent saving")\n            End If\n        End Sub\n\n    End Class\n\nEnd Namespace