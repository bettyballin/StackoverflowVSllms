' WebPartA.vb\nPartial Public Class WebPartA\n    Inherits System.Web.UI.WebControls.WebParts.WebPart\n\n    ' Define a delegate for the event\n    Public Delegate Sub RefreshListEventHandler(sender As Object, e As EventArgs)\n\n    ' Declare the actual event\n    Public Event RefreshList As RefreshListEventHandler\n\n    Protected Sub Button_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Button1.Click\n        ' Raise the event when the button is clicked\n        RaiseEvent RefreshList(Me, EventArgs.Empty)\n    End Sub\nEnd Class\n\n' WebPartB.vb\nPartial Public Class WebPartB\n    Inherits System.Web.UI.WebControls.WebParts.WebPart\n\n    Protected Overrides Sub OnInit(ByVal e As EventArgs)\n        MyBase.OnInit(e)\n        \n        ' Find WebPartA and subscribe to its event\n        Dim webPartA As WebPartA = CType(WebPartManager1.GetWebPart(Me.ZoneID, "WebPartA"), WebPartA)\n        If webPartA IsNot Nothing Then\n            AddHandler webPartA.RefreshList, AddressOf Me.FillList\n        End If\n    End Sub\n\n    Public Sub FillList(ByVal sender As Object, ByVal e As EventArgs)\n        ' Code to populate the ListBox and refresh UpdatePanel\n        ListBox1.Items.Clear()\n        ListBox1.Items.Add("Item 1")\n        ListBox1.Items.Add("Item 2")\n        UpdatePanel1.Update()\n    End Sub\nEnd Class\n\n' Default.aspx.vb (assuming you have access to WebPartManager)\nPartial Public Class _Default\n    Inherits System.Web.UI.Page\n\n    Protected Overrides Sub OnInit(ByVal e As EventArgs)\n        MyBase.OnInit(e)\n\n        ' Ensure both webparts are loaded before trying to subscribe to events.\n        Dim webPartA As WebPartA = CType(WebPartManager1.GetWebPart(Me.ZoneID, "WebPartA"), WebPartA)\n        Dim webPartB As WebPartB = CType(WebPartManager1.GetWebPart(Me.ZoneID, "WebPartB"), WebPartB)\n\n        If webPartA IsNot Nothing AndAlso webPartB IsNot Nothing Then\n            AddHandler webPartA.RefreshList, AddressOf webPartB.FillList\n        End If\n    End Sub\nEnd Class