Public Function CleanText(ByVal str As String) As String \n    ' removes HTML tags and other characters that title tags and descriptions don't like\n    If Not String.IsNullOrEmpty(str) Then\n        ' mini db of extended tags to get rid of\n        Dim indexChars() As String = {"<a", "<img", "<input type=""hidden"" name=""tax""", "<input type=""hidden"" name=""handling""", "<span", "<p", "<ul", "<div", "<embed", "<object", "<param"}\n        \n        For i As Integer = 0 To indexChars.GetUpperBound(0) ' loop through indexchars array\n            Dim indexOfInput As Integer = str.IndexOf(indexChars(i)) ' find first instance of indexChar\n            Do While indexOfInput <> -1 ' continue until no more instances are found\n                Dim indexNextLeftBracket As Integer = str.IndexOf("<", indexOfInput) + 1\n                Dim indexRightBracket As Integer = str.IndexOf(">", indexOfInput) + 1\n                \n                ' check to make sure a right bracket hasn't been left off a tag\n                If indexNextLeftBracket > indexRightBracket Then ' normal case\n                    str = str.Remove(indexOfInput, indexRightBracket - indexOfInput)\n                Else\n                    ' add the right bracket right before the next left bracket, just remove everything\n                    ' in the bad tag\n                    str = str.Insert(indexNextLeftBracket - 1, ">")\n                    indexRightBracket = str.IndexOf(">", indexOfInput) + 1\n                    str = str.Remove(indexOfInput, indexRightBracket - indexOfInput)\n                End If\n                \n                ' update indexOfInput to continue searching from the end of the last removed tag\n                indexOfInput = str.IndexOf(indexChars(i), indexOfInput + 1)\n            Loop\n        Next\n    End If\n    Return str\nEnd Functio