Imports System.Security.Cryptography\nImports System.Text\n\nModule RegistrationKeyGenerator\n    ' Function to generate a hash from a string (user identifier in this case)\n    Public Function GenerateRegistrationKey(userIdentifier As String) As String\n        Using md5 As MD5 = MD5.Create()\n            Dim inputBytes As Byte() = Encoding.ASCII.GetBytes(userIdentifier)\n            Dim hashBytes As Byte() = md5.ComputeHash(inputBytes)\n            Dim sb As New StringBuilder()\n\n            For Each b As Byte In hashBytes\n                sb.Append(b.ToString("x2"))\n            Next\n\n            Return sb.ToString().ToUpper()\n        End Using\n    End Function\n\n    ' Function to verify the entered key against a generated one\n    Public Function VerifyRegistrationKey(userIdentifier As String, providedKey As String) As Boolean\n        Dim expectedKey = GenerateRegistrationKey(userIdentifier)\n        Return (expectedKey = providedKey)\n    End Function\n\n    Sub Main()\n        ' Example usage\n        Dim userId = "user123"\n        Dim registrationKey = GenerateRegistrationKey(userId)\n\n        Console.WriteLine("Generated Registration Key: " & registrationKey)\n\n        Console.Write("Please enter your registration key: ")\n        Dim enteredKey = Console.ReadLine()\n\n        If VerifyRegistrationKey(userId, enteredKey) Then\n            Console.WriteLine("Registration successful.")\n        Else\n            Console.WriteLine("Invalid registration key.")\n        End If\n    End Sub\nEnd Module