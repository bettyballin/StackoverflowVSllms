Imports System.Xml\n\nPublic Function GetNodeIndexInString(xmlContent As String, xPathQuery As String) As Integer\n    Try\n        ' Load XML content into XmlDocument\n        Dim doc As New XmlDocument()\n        doc.LoadXml(xmlContent)\n\n        ' Select the node using XPath\n        Dim node As XmlNode = doc.SelectSingleNode(xPathQuery)\n        If node Is Nothing Then Return -1\n\n        ' Get the outer XML of the node as a string\n        Dim nodeAsString As String = node.OuterXml\n\n        ' Convert the entire XmlDocument to a single string for comparison\n        Dim fullDocAsString As String = doc.OuterXml\n\n        ' Replace any special characters created by OuterXml that might change index\n        ' (e.g., adding spaces or other formatting)\n        ' This step ensures accurate indexing, assuming no changes in formatting\n        fullDocAsString = fullDocAsString.Replace(vbCrLf, "").Replace(vbLf, "").Replace(vbCr, "")\n        nodeAsString = nodeAsString.Replace(vbCrLf, "").Replace(vbLf, "").Replace(vbCr, "")\n\n        ' Find the start index of the node's string within the whole document string\n        Dim startIndex As Integer = fullDocAsString.IndexOf(nodeAsString)\n\n        Return startIndex\n    Catch ex As Exception\n        Console.WriteLine("Error: " & ex.Message)\n        Return -1\n    End Try\nEnd Function\n\n' Usage example:\nSub Main()\n    Dim xmlContent As String = "<a><b>zyx</b><b>wvu</b><b>tsr</b><b>qpo</b></a>"\n    Dim xPathQuery As String = "a/b[.='tsr']"\n    \n    Dim index As Integer = GetNodeIndexInString(xmlContent, xPathQuery)\n    Console.WriteLine("Start Index: " & index) ' Output should be the correct string index\nEnd Sub