DLL_EXPORT(void) runUnitModel(const char **rateMaterialTypeNames, int sizeOfPortRatesArray) {\n    HRESULT hr = CoInitialize(NULL);\n    if (FAILED(hr)) {\n        return; // Handle error\n    }\n\n    // Create the interface pointer.\n    IUnitModelPtr pIUnit(__uuidof(BlastFurnaceUnitModel));\n    if (!pIUnit) {\n        CoUninitialize();\n        return; // Handle error\n    }\n\n    hr = pIUnit->initialiseUnitModel();\n    if (FAILED(hr)) {\n        CoUninitialize();\n        return; // Handle error\n    }\n\n    for (int i = 0; i < sizeOfPortRatesArray; ++i) {\n        const char* str = rateMaterialTypeNames[i];\n        \n        // Convert multi-byte string to wide-character string\n        int lenMultiByte = static_cast<int>(strlen(str));\n        int lenWideChar = MultiByteToWideChar(CP_UTF8, 0, str, lenMultiByte, NULL, 0);\n        wchar_t* wStr = new wchar_t[lenWideChar];\n        \n        MultiByteToWideChar(CP_UTF8, 0, str, lenMultiByte, wStr, lenWideChar);\n\n        // Allocate a BSTR from the wide-character string\n        BSTR bstr = SysAllocString(wStr);\n        if (bstr) {\n            hr = pIUnit->createPort(bstr);\n            if (FAILED(hr)) {\n                // Handle error\n            }\n            \n            // Free the BSTR\n            SysFreeString(bstr);\n        }\n\n        // Cleanup allocated wide-character string buffer\n        delete[] wStr;\n    }\n\n    CoUninitialize();\n}