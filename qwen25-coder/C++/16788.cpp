#include <windows.h>\n\n// Function declarations\nLRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);\n\n// Entry point for our application\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR pCmdLine, int nCmdShow) {\n\n    // Register the window class.\n    const wchar_t CLASS_NAME[] = L"Sample Window Class";\n\n    WNDCLASS wc = { };\n\n    wc.lpfnWndProc   = WindowProc;\n    wc.hInstance     = hInstance;\n    wc.lpszClassName = CLASS_NAME;\n\n    RegisterClass(&wc);\n\n    HWND hwnd = CreateWindowEx(\n        0,                              // Optional window styles.\n        CLASS_NAME,                     // Window class\n        L"Learn to Program Windows",    // Window text\n        WS_OVERLAPPEDWINDOW,            // Window style\n\n        CW_USEDEFAULT, CW_USEDEFAULT,   // x and y position \n        CW_USEDEFAULT, CW_USEDEFAULT,   // width and height\n\n        NULL,       // Parent window    \n        NULL,       // Menu\n        hInstance,  // Instance handle\n        NULL        // Additional application data\n        );\n\n    if (hwnd == NULL) {\n        return 0;\n    }\n\n    ShowWindow(hwnd, nCmdShow);\n\n    // Run the message loop.\n    MSG msg = { };\n    while (GetMessage(&msg, NULL, 0, 0)) {\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n\n    return 0;\n}\n\nLRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {\n\n    switch (uMsg) {\n    case WM_DESTROY:\n        PostQuitMessage(0);\n        return 0;\n\n    case WM_PAINT: {\n        PAINTSTRUCT ps;\n        HDC hdc = BeginPaint(hwnd, &ps);\n\n        // All painting occurs here, between BeginPaint and EndPaint.\n\n        FillRect(hdc, &ps.rcPaint, (HBRUSH) (COLOR_WINDOW+1));\n\n        // Draw text "Hello World" in the middle of the window\n        RECT rc;\n        GetClientRect(hwnd, &rc);\n        DrawText(hdc, L"Hello, World!", -1, &rc, DT_CENTER);\n\n        EndPaint(hwnd, &ps);\n    }\n    return 0;\n\n    }\n\n    return DefWindowProc(hwnd, uMsg, wParam, lParam);\n}