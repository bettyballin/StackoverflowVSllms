#include <iostream>\n#include <vector>\n#include <algorithm> // for std::binary_search\n\nbool linearSearch(const std::vector<int>& arr, int target) {\n    for (int num : arr) {\n        if (num == target) return true;\n    }\n    return false;\n}\n\nbool binarySearch(const std::vector<int>& arr, int target) {\n    auto it = std::lower_bound(arr.begin(), arr.end(), target);\n    return (it != arr.end() && *it == target);\n}\n\nint main() {\n    std::vector<int> data(100); // Example array size\n    for (int i = 0; i < 100; ++i) {\n        data[i] = i;\n    }\n\n    int target = 50;\n\n    // Linear search example\n    bool foundLinear = linearSearch(data, target);\n\n    // Binary search example\n    // Make sure the data is sorted before performing binary search\n    std::sort(data.begin(), data.end());\n    bool foundBinary = binarySearch(data, target);\n\n    std::cout << "Found using linear search: " << (foundLinear ? "Yes" : "No") << std::endl;\n    std::cout << "Found using binary search: " << (foundBinary ? "Yes" : "No") << std::endl;\n\n    return 0;\n}