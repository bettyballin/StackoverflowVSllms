#include <windows.h>\n#include <tchar.h>\n\nbool WaitForProcessToFinish(HINSTANCE hInst, LPCTSTR pBufLink) {\n    SHELLEXECUTEINFO sei = { sizeof(sei) };\n\n    // Set the necessary SEE_MASK flags.\n    sei.fMask = SEE_MASK_NOCLOSEPROCESS | SEE_MASK_INVOKEIDLIST;\n    sei.lpVerb = _T("open");\n    sei.lpFile = pBufLink;  // Path to the lnk file\n    sei.nShow = SW_SHOWNORMAL;\n\n    if (!ShellExecuteEx(&sei)) {\n        return false;\n    }\n\n    HANDLE hJob = CreateJobObject(NULL, NULL);\n    if (hJob == NULL) {\n        return false;\n    }\n\n    JOBOBJECT_EXTENDED_LIMIT_INFORMATION jeli = { 0 };\n    jeli.BasicLimitInformation.LimitFlags = JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE;\n\n    if (!SetInformationJobObject(hJob, JobObjectExtendedLimitInformation, &jeli, sizeof(jeli))) {\n        CloseHandle(hJob);\n        return false;\n    }\n\n    // Assign the process to the job object\n    if (!AssignProcessToJobObject(hJob, sei.hProcess)) {\n        DWORD dwError = GetLastError();\n        CloseHandle(sei.hProcess);\n        CloseHandle(hJob);\n        return false;  // Fails due to insufficient rights or other issues.\n    }\n\n    // Wait until all processes in the job have completed\n    WaitForSingleObject(hJob, INFINITE);\n\n    // Cleanup\n    CloseHandle(sei.hProcess);\n    CloseHandle(hJob);\n\n    return true;\n}