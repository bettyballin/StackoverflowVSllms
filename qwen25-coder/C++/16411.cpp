#include <windows.h>\n#include <wincrypt.h>\n#include <memory.h>\n#pragma comment(lib, "crypt32.lib")\n\nbool DecryptData(HCRYPTPROV hProv, const BYTE* pbyKey, DWORD keySize, const BYTE* pbyIV, const BYTE* pbyData, DWORD iDestLen, BYTE* pbyOutput, DWORD* plOutSize) {\n    bool bRet = false;\n    HCRYPTKEY hKey = 0;\n\n    BLOBHEADER bh;\n    DWORD dwBlobLen = sizeof(BLOBHEADER) + sizeof(DWORD) + keySize;\n    BYTE rgbKeyData[keySize];\n\n    memset(&bh, 0, sizeof(bh));\n    bh.bType = PLAINTEXTKEYBLOB;\n    bh.bVersion = CUR_BLOB_VERSION;\n    bh.reserved = 0;\n    bh.aiKeyAlg = CALG_AES_256;\n\n    memcpy(rgbKeyData, pbyKey, keySize);\n\n    if (CryptImportKey(hProv, (BYTE*)&bh, dwBlobLen, 0, CRYPT_EXPORTABLE, &hKey)) {\n        if (CryptSetKeyParam(hKey, KP_IV, (const BYTE*)pbyIV, 0)) {\n            DWORD dwDataLen = iDestLen;\n            if (CryptDecrypt(hKey, 0, TRUE, 0, (BYTE*)pbyData, &dwDataLen)) {\n                if (dwDataLen <= *plOutSize) {\n                    memcpy(pbyOutput, pbyData, dwDataLen);\n                    *plOutSize = dwDataLen;\n                    bRet = true;\n                }\n            } else {\n                // Log error\n                DWORD dwErr = GetLastError();\n                printf("Error decrypting data. Error code: %d\n", (int)dwErr);\n            }\n        }\n        CryptDestroyKey(hKey);\n    } else {\n        // Log error\n        DWORD dwErr = GetLastError();\n        printf("Error importing key. Error code: %d\n", (int)dwErr);\n    }\n\n    return bRet;\n}