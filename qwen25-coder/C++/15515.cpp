#include <windows.h>\n#include <setupapi.h>\n#include <devguid.h>\n#include <stdio.h>\n\nvoid GetDeviceInfo(HDEVINFO deviceInfoSet, PSP_DEVINFO_DATA devInfoData) {\n    DWORD size = 0;\n    DEVPROPKEY devPropKey = {DEVPKEY_Device_InstanceId};\n\n    CM_Get_DevNode_Property_Size(devInfoData->DevInst,\n                                   &devPropKey,\n                                   NULL,\n                                   &size,\n                                   0);\n\n    char* instanceIdBuffer = (char*)malloc(size);\n    if (!instanceIdBuffer) return;\n\n    CONFIGRET cr = CM_Get_DevNode_PropertyW(devInfoData->DevInst,\n                                            &devPropKey,\n                                            NULL,\n                                            (PBYTE)instanceIdBuffer,\n                                            &size,\n                                            0);\n    if (cr == CR_SUCCESS) {\n        wprintf(L"Device Instance ID: %s\n", instanceIdBuffer);\n    }\n\n    free(instanceIdBuffer);\n}\n\nint main() {\n    HDEVINFO deviceInfoSet = SetupDiGetClassDevs(&GUID_DEVCLASS_UNKNOWN, NULL, NULL, DIGCF_PRESENT | DIGCF_ALLCLASSES);\n\n    if (deviceInfoSet == INVALID_HANDLE_VALUE) {\n        wprintf(L"SetupDiGetClassDevs failed with error %d\n", GetLastError());\n        return 1;\n    }\n\n    SP_DEVINFO_DATA devInfoData = { sizeof(SP_DEVINFO_DATA) };\n    DWORD index = 0;\n\n    while (SetupDiEnumDeviceInfo(deviceInfoSet, index, &devInfoData)) {\n        GetDeviceInfo(deviceInfoSet, &devInfoData);\n        index++;\n    }\n\n    SetupDiDestroyDeviceInfoList(deviceInfoSet);\n    return 0;\n}