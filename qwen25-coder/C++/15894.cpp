// IScalar.h (Interface definition for CScalar)\n#ifdef __cplusplus\nextern "C" {\n#endif\n\ntypedef struct IScalar IScalar;\n\nIScalar* CreateScalar();\nvoid DestroyScalar(IScalar*);\n\n#ifdef __cplusplus\n}\n#endif\n\nclass CScalar;  // Actual implementation class\n\n#ifdef __cplusplus\nextern "C" {\n#endif\n\nstruct IScalar {\n    virtual ~IScalar() {}\n    virtual void SomeMethod() = 0;\n};\n\n#ifdef __cplusplus\n}\n\n// CScalar.cpp (Implementation of CScalar and factory functions)\n#include "IScalar.h"\n\nclass CScalar : public IScalar {\npublic:\n    void SomeMethod() override { /* implementation */ }\n};\n\nextern "C" {\n    IScalar* CreateScalar() { return new CScalar; }\n    void DestroyScalar(IScalar* scalar) { delete static_cast<CScalar*>(scalar); }\n}\n#endif