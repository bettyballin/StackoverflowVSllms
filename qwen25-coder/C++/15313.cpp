#include <windows.h>\n#include <gdiplus.h>\n#include <iostream>\n\n#pragma comment (lib,"Gdiplus.lib")\n\nint main() {\n    // Initialize GDI+\n    Gdiplus::GdiplusStartupInput gdiplusStartupInput;\n    ULONG_PTR gdiplusToken;\n    Gdiplus::GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);\n\n    // Load the image\n    Gdiplus::Image* pImage = new Gdiplus::Image(L"image.bmp"); // Replace with your image path\n\n    // Check if the image loaded successfully\n    if (pImage->GetLastStatus() != Gdiplus::Ok) {\n        std::cerr << "Failed to load image." << std::endl;\n        delete pImage;\n        Gdiplus::GdiplusShutdown(gdiplusToken);\n        return -1;\n    }\n\n    // Get the encoder class ID\n    CLSID clsid_encoder;\n    pImage->GetEncoderClassID(&clsid_encoder);\n\n    // Find and print codec name based on CLSID\n    UINT  num = 0;          // number of image encoders\n    UINT  size = 0;         // size, in bytes, of the image encoder array in bytes\n\n    Gdiplus::ImageCodecInfo* pImageCodecInfo = NULL;\n\n    Gdiplus::GetImageEncodersSize(&num, &size);\n    if (size == 0) {\n        std::cerr << "Cannot find any encoders." << std::endl;\n        delete pImage;\n        Gdiplus::GdiplusShutdown(gdiplusToken);\n        return -1;\n    }\n\n    pImageCodecInfo = (Gdiplus::ImageCodecInfo*)(malloc(size));\n    if (!pImageCodecInfo) {\n        std::cerr << "Failed to allocate memory for codec info." << std::endl;\n        delete pImage;\n        Gdiplus::GdiplusShutdown(gdiplusToken);\n        return -1;\n    }\n\n    Gdiplus::GetImageEncoders(num, size, pImageCodecInfo);\n\n    bool found = false;\n    for (UINT j = 0; j < num && !found; ++j) {\n        if (pImageCodecInfo[j].Clsid == clsid_encoder) {\n            std::wcout << L"Image format: " << pImageCodecInfo[j].MimeType << std::endl;\n            found = true;\n        }\n    }\n\n    // Clean up\n    free(pImageCodecInfo);\n    delete pImage;\n    Gdiplus::GdiplusShutdown(gdiplusToken);\n\n    return 0;\n}