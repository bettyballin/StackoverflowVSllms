template <typename DataType>\n    void BST<DataType>::insert(const DataType & item)\n    {\n       typename BST<DataType>::BinNodePointer \n          locptr = myRoot,   // search pointer\n          parent = 0;        // pointer to parent of current node\n       bool found = false;\n    \n       while (!found && locptr != 0)\n       {     \n           parent = locptr;\n        \n           if (item < locptr->data)             // descend left\n              locptr = locptr->left;\n           else if (locptr->data < item)      // descend right\n              locptr = locptr->right;\n           else                                 // item found\n              found = true;\n       }\n\n       if (!found)\n       {      // construct node containing item\n          locptr = new BST<DataType>::BinNode(item, 0, 0);\n        \n          if (parent == 0)                     // tree is empty\n             myRoot = locptr;\n          else if (item < parent->data )       // insert to left of parent\n              parent->left = locptr;\n          else                                   // insert to right of parent\n              parent->right = locptr;\n        }        \n    }