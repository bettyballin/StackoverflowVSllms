void LoadDLL(PVOID BaseAddress, HANDLE hFile) {\n    // Step 1: Parse PE Header\n    PIMAGE_DOS_HEADER dosHeader = (PIMAGE_DOS_HEADER)BaseAddress;\n    PIMAGE_NT_HEADERS ntHeaders = (PIMAGE_NT_HEADERS)((DWORD_PTR)dosHeader + dosHeader->e_lfanew);\n\n    // Step 2 & 3: Reserve and Commit Memory\n    PVOID moduleMem = VirtualAlloc(\n        NULL,                           // Let system decide location.\n        ntHeaders->OptionalHeader.SizeOfImage,\n        MEM_RESERVE | MEM_COMMIT,\n        PAGE_READWRITE\n    );\n\n    // Step 4: Load Sections into Memory\n    for (DWORD i = 0; i < ntHeaders->FileHeader.NumberOfSections; ++i) {\n        PIMAGE_SECTION_HEADER section = IMAGE_FIRST_SECTION(ntHeaders) + i;\n        if (section->SizeOfRawData > 0) {\n            RtlMoveMemory(\n                (PBYTE)moduleMem + section->VirtualAddress,\n                BaseAddress + section->PointerToRawData,\n                section->SizeOfRawData\n            );\n        }\n    }\n\n    // Step 5: Process Relocations\n    FixupImports(moduleMem);\n    PerformRelocations(moduleMem);\n\n    // Step 6 & 7: TLS and Initializer Execution\n    ExecuteTLSAndInitializers(moduleMem, ntHeaders);\n}