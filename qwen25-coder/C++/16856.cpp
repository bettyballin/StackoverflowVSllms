#include <windows.h>\n#include <setupapi.h>\n#include <hidsdi.h>\n#include <cfgmgr32.h>\n#include <iostream>\n\n#pragma comment(lib, "SetupAPI.lib")\n\nBOOL GetHIDDeviceSerialNumber(HDEVINFO hDevInfo, SP_DEVICE_INTERFACE_DATA& devInterfaceData) {\n    DWORD dataType = 0;\n    BYTE buffer[1024];\n    DWORD bufferSize = sizeof(buffer);\n    BOOL result = CM_Get_Device_Interface_Property(\n        devInterfaceData.InterfaceClassGuid,\n        (PWSTR)devInterfaceData.DevicePath,\n        &DEVPKEY_Device_SerialNumber, // Property key for serial number\n        &dataType,\n        buffer,\n        &bufferSize,\n        0);\n\n    if (result == CRM_RC_SUCCESS && dataType == REG_SZ) {\n        std::wcout << L"Serial Number: " << ((PWSTR)buffer) << std::endl;\n    } else {\n        std::wcout << L"Failed to get serial number for device." << std::endl;\n    }\n\n    return result == CRM_RC_SUCCESS;\n}\n\nint main() {\n    GUID hidGuid = { 0 };\n    HidD_GetHidGuid(&hidGuid);\n\n    HDEVINFO hDevInfo = SetupDiGetClassDevs(\n        &hidGuid,\n        NULL,\n        NULL,\n        DIGCF_PRESENT | DIGCF_DEVICEINTERFACE);\n\n    if (hDevInfo == INVALID_HANDLE_VALUE) {\n        std::cerr << "Failed to get device info set." << std::endl;\n        return 1;\n    }\n\n    SP_DEVICE_INTERFACE_DATA devInterfaceData = { 0 };\n    devInterfaceData.cbSize = sizeof(devInterfaceData);\n    DWORD index = 0;\n\n    while (SetupDiEnumDeviceInterfaces(hDevInfo, NULL, &hidGuid, index++, &devInterfaceData)) {\n        GetHIDDeviceSerialNumber(hDevInfo, devInterfaceData);\n        // You can also get Vendor ID and Product ID here\n    }\n\n    SetupDiDestroyDeviceInfoList(hDevInfo);\n    return 0;\n}