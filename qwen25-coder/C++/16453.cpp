#include <atlbase.h>\n#include <atlcom.h>\n\n// Define a single method in your interface\ninterface ISimpleObject : public IUnknown {\n    STDMETHOD_(void, SayHello)() = 0;\n};\n\n[object, uuid("4359D1C2-DA7F-4356-BD8B-D5B4DDA8734B"), dual, nonextensible, pointer_default(unique)]\n__interface IMySimpleObject {\n    [id(1), helpstring("method SayHello")] HRESULT SayHello();\n};\n\n// Define the class that implements the interface\nclass ATL_NO_VTABLE CSimpleObject :\n    public CComObjectRootEx<CComSingleThreadModel>,\n    public CComCoClass<CSimpleObject, &CLSID_SimpleObject>,\n    public IMySimpleObject {\npublic:\n    CSimpleObject() {}\n\nDECLARE_REGISTRY_RESOURCEID(IDR_SIMPLEOBJECT)\n\nBEGIN_COM_MAP(CSimpleObject)\n    COM_INTERFACE_ENTRY(IMySimpleObject)\nEND_COM_MAP()\n\nHRESULT FinalConstruct() { return S_OK; }\nvoid FinalRelease() {}\n\n// Implement the SayHello method\nIFACEMETHODIMP SayHello() {\n    MessageBox(NULL, L"Hello from COM!", L"COM Message", MB_OK);\n    return S_OK;\n}\n\nDECLARE_PROTECT_FINAL_CONSTRUCT()\n};\n\nOBJECT_ENTRY_AUTO(__uuidof(SimpleObject), CSimpleObject)