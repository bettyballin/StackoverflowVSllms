// Sender Example (Process for VendorLibA)\n#include <windows.h>\n#include <iostream>\n\nvoid sendMessage(HANDLE pipe, const std::string& message) {\n    DWORD bytesWritten;\n    if (!WriteFile(pipe, message.c_str(), message.size() + 1, &bytesWritten, NULL)) {\n        std::cerr << "Error writing to pipe" << std::endl;\n    }\n}\n\nint main() {\n    HANDLE hPipe = CreateNamedPipe(\n        TEXT("\\\\.\\pipe\\MyPipe"), \n        PIPE_ACCESS_OUTBOUND,\n        PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT,   \n        1,              \n        0,             \n        0,            \n        5000,           \n        NULL);            \n\n    if (hPipe == INVALID_HANDLE_VALUE) {\n        std::cerr << "Failed to create outbound pipe instance." << std::endl;\n        return 1;\n    }\n\n    std::cout << "Waiting for client connection..." << std::endl;\n    BOOL connectSuccess = ConnectNamedPipe(hPipe, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n    \n    if (!connectSuccess) {\n        std::cerr << "Failed to connect to pipe." << std::endl;\n        return 1;\n    }\n\n    sendMessage(hPipe, "Hello from VendorLibA");\n\n    DisconnectNamedPipe(hPipe);\n    CloseHandle(hPipe);\n\n    return 0;\n}