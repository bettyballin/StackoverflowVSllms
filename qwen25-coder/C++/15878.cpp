#include <windows.h>\n#include <iostream>\n\nvoid WatchDirectory(const std::wstring& path) {\n    HANDLE hDir = CreateFileW(\n        path.c_str(),\n        FILE_LIST_DIRECTORY,\n        FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n        NULL,\n        OPEN_EXISTING,\n        FILE_FLAG_BACKUP_SEMANTICS,\n        NULL);\n\n    if (hDir == INVALID_HANDLE_VALUE) {\n        std::cerr << "Failed to open directory: " << GetLastError() << std::endl;\n        return;\n    }\n\n    BYTE buffer[1024];\n    DWORD bytesReturned;\n\n    while (true) {\n        BOOL success = ReadDirectoryChangesW(\n            hDir,\n            buffer,\n            sizeof(buffer),\n            TRUE,      // Watch the subtree\n            FILE_LIST_DIRECTORY |\n            FILE_NOTIFY_CHANGE_FILE_NAME |\n            FILE_NOTIFY_CHANGE_DIR_NAME |\n            FILE_NOTIFY_CHANGE_ATTRIBUTES |\n            FILE_NOTIFY_CHANGE_SIZE |\n            FILE_NOTIFY_CHANGE_LAST_WRITE |\n            FILE_NOTIFY_CHANGE_CREATION |\n            FILE_NOTIFY_CHANGE_SECURITY,\n            &bytesReturned,\n            NULL,\n            NULL);\n\n        if (!success) {\n            std::cerr << "ReadDirectoryChangesW failed: " << GetLastError() << std::endl;\n            break;\n        }\n\n        DWORD offset = 0;\n        while (offset < bytesReturned) {\n            FILE_NOTIFY_INFORMATION* pNotifyInfo = reinterpret_cast<FILE_NOTIFY_INFORMATION*>(&buffer[offset]);\n            std::wcout << L"File changed: " << path + L"\\" + pNotifyInfo->FileName << std::endl;\n\n            if (pNotifyInfo->NextEntryOffset == 0)\n                break;\n\n            offset += pNotifyInfo->NextEntryOffset;\n        }\n    }\n\n    CloseHandle(hDir);\n}\n\nint main() {\n    std::wstring directoryPath = L"YOUR_DIRECTORY_PATH_HERE";\n    WatchDirectory(directoryPath);\n    return 0;\n}