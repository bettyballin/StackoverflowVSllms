#ifdef _WIN32\n#include <windows.h>\n#else\n#include <unistd.h>\n#endif\n\n#include <iostream>\n\nvoid printIds() {\n#ifdef _WIN32\n    std::cout << "Process ID: " << GetCurrentProcessId() << std::endl;\n    std::cout << "Thread ID: " << GetCurrentThreadId() << std::endl;\n#else\n    std::cout << "Process ID: " << getpid() << std::endl;\n    // Note: pthread_self() returns an opaque pthread_t, not directly castable to int.\n    std::cout << "Thread ID: " << pthread_self() << std::endl;\n#endif\n}\n\nint main() {\n    printIds();\n    return 0;\n}