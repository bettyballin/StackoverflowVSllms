#include <msxml6.h>\n#include <iostream>\n\n#pragma comment(lib, "msxml6.lib")\n\nvoid ValidateXML(const wchar_t* xmlPath, const wchar_t* xsdPath) {\n    IXMLDOMDocument2Ptr xmlDoc;\n    IXMLSchemaCollection2Ptr schemaCache;\n\n    try {\n        xmlDoc.CreateInstance(__uuidof(DOMDocument60));\n        schemaCache.CreateInstance(__uuidof(XMLSchemaCache60));\n\n        // Load the XSD into the schema cache\n        schemaCache->add(L"http://www.w3.org/2001/XMLSchema", xsdPath);\n\n        // Set the schemas on the document\n        xmlDoc->schemas = schemaCache;\n\n        // Validate the XML file\n        if (xmlDoc->load(xmlPath) == VARIANT_TRUE) {\n            if (xmlDoc->validate() != S_OK) {\n                std::cerr << "XML validation failed." << std::endl;\n                return;\n            }\n            std::cout << "XML is valid." << std::endl;\n        } else {\n            std::cerr << "Failed to load XML file." << std::endl;\n            return;\n        }\n\n        // Now you can iterate through the document and read it\n        IXMLDOMNodePtr root = xmlDoc->documentElement;\n        if (root != NULL) {\n            _bstr_t xmlStr = root->xml;\n            std::wcout << L"XML Content:\n" << xmlStr << L"\n";\n        }\n    } catch (_com_error& e) {\n        std::cerr << "Error: " << (const char*)e.ErrorMessage() << std::endl;\n    }\n}\n\nint main() {\n    const wchar_t* xmlPath = L"path_to_your_file.xml";\n    const wchar_t* xsdPath = L"path_to_your_schema.xsd";\n\n    ValidateXML(xmlPath, xsdPath);\n\n    return 0;\n}