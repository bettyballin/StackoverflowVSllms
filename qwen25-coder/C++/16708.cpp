constexpr struct WrappedInt {\n    int v;\n    explicit constexpr WrappedInt(int val) : v(val) {}\n    constexpr bool operator<=(const WrappedInt &rhs) const { return v <= rhs.v; }\n    constexpr bool operator==(const WrappedInt &rhs) const { return v == rhs.v; }\n    constexpr WrappedInt &operator++() { ++v; return *this; }\n    constexpr WrappedInt &operator+=(const WrappedInt &rhs) { v += rhs.v; return *this; }\n    constexpr WrappedInt operator%(const WrappedInt &rhs) const \n        { return WrappedInt(v%rhs.v); }\n} wrappedThree(3);