#include <windows.h>\n#include <iostream>\n\nvoid WatchDirectory(const std::wstring& path) {\n    LPCWSTR dirPath = path.c_str();\n    HANDLE hDir = CreateFile(\n        dirPath,\n        FILE_LIST_DIRECTORY,\n        FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n        NULL,\n        OPEN_EXISTING,\n        FILE_FLAG_BACKUP_SEMANTICS | FILE_FLAG_OVERLAPPED,\n        NULL);\n\n    if (hDir == INVALID_HANDLE_VALUE) {\n        std::cerr << "Error opening directory: " << GetLastError() << "\n";\n        return;\n    }\n\n    char buffer[1024];\n    DWORD bytesReturned = 0;\n    OVERLAPPED overlapped{ 0 };\n    BYTE* pBytesRead = (BYTE*)&bytesReturned;\n\n    while (true) {\n        BOOL success = ReadDirectoryChangesW(\n            hDir,\n            &buffer,\n            sizeof(buffer),\n            TRUE,  // Watch the directory tree\n            FILE_NOTIFY_CHANGE_FILE_NAME | FILE_NOTIFY_CHANGE_DIR_NAME |\n                FILE_NOTIFY_CHANGE_ATTRIBUTES | FILE_NOTIFY_CHANGE_SIZE |\n                FILE_NOTIFY_CHANGE_LAST_WRITE | FILE_NOTIFY_CHANGE_SECURITY,\n            pBytesRead,\n            &overlapped,\n            NULL);\n\n        if (!success) {\n            std::cerr << "Error monitoring directory: " << GetLastError() << "\n";\n            break;\n        }\n\n        DWORD result = WaitForSingleObject(overlapped.hEvent, INFINITE);\n        if (result != WAIT_OBJECT_0) {\n            continue; // Error or timeout\n        }\n\n        FILE_NOTIFY_INFORMATION* pNotifyInfo = (FILE_NOTIFY_INFORMATION*)buffer;\n\n        do {\n            wprintf(L"File: %s\nAction: ", pNotifyInfo->FileName);\n\n            switch (pNotifyInfo->Action) {\n            case FILE_ACTION_ADDED:\n                wprintf(L"Added\n");\n                break;\n            case FILE_ACTION_REMOVED:\n                wprintf(L"Removed\n");\n                break;\n            case FILE_ACTION_MODIFIED:\n                wprintf(L"Modified\n");\n                break;\n            case FILE_ACTION_RENAMED_OLD_NAME:\n                wprintf(L"Renamed (Old Name)\n");\n                break;\n            case FILE_ACTION_RENAMED_NEW_NAME:\n                wprintf(L"Renamed (New Name)\n");\n                break;\n            default: \n                wprintf(L"Unknown\n");\n                break;\n            }\n\n            pNotifyInfo = (FILE_NOTIFY_INFORMATION*)((BYTE*)pNotifyInfo + pNotifyInfo->NextEntryOffset);\n        } while (pNotifyInfo->NextEntryOffset != 0);\n\n    }\n\n    CloseHandle(hDir);\n}\n\nint main() {\n    std::wstring path = L"C:\\Path\\To\\Watch";\n    WatchDirectory(path);\n    return 0;\n}