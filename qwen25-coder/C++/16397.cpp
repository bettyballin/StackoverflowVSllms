#include <iostream>\n#include <windows.h>\n#include <lm.h>\n\n#pragma comment(lib, "netapi32.lib")\n\nvoid GetUserGroups() {\n    LPTSTR lpszUserName = nullptr; // Null means current user\n\n    DWORD dwLevel = 0;\n    LPLOCALGROUP_USERS_INFO_0 pBuf = nullptr;\n    NET_API_STATUS nStatus;\n    LPTSTR ptr;\n    DWORD dwEntriesRead = 0;\n    DWORD dwTotalEntries = 0;\n\n    nStatus = NetUserGetLocalGroups(\n        nullptr,          // local computer\n        lpszUserName,     // name of user\n        dwLevel,          // level of interest\n        LG_INCLUDE_INDIRECT_GROUPS,  // flags: include indirect groups\n        (LPBYTE*)&pBuf,\n        MAX_PREFERRED_LENGTH, // preferred buffer size\n        &dwEntriesRead,\n        &dwTotalEntries);\n\n    // Check if the call succeeded and process the data.\n    if ((nStatus == NERR_Success) || (nStatus == ERROR_MORE_DATA)) {\n        ptr = (LPTSTR)pBuf;\n\n        for (DWORD i = 0; i < dwEntriesRead; i++) {\n            std::wcout << L"Group: " << pBuf[i].lgrui0_name << std::endl;\n        }\n\n    }\n    else {\n        std::cerr << "Error occurred, call NetUserGetLocalGroups failed with error code: " << nStatus << std::endl;\n    }\n\n    // Free the memory allocated by NetWkstaUserEnum.\n    if (pBuf != nullptr) {\n        NetApiBufferFree(pBuf);\n    }\n}\n\nint main() {\n    GetUserGroups();\n    return 0;\n}