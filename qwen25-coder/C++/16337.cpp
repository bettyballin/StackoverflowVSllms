#include <iostream>\n#include <string>\n#include <filesystem>\n\n// Function to sanitize and validate file paths\nbool isValidPath(const std::string &baseDir, const std::string &requestedPath) {\n    namespace fs = std::filesystem;\n\n    // Create a path object for the requested file\n    fs::path base{baseDir};\n    fs::path req{requestedPath};\n\n    //Resolve the full path of the requested file relative to the base directory\n    fs::path fullPath = fs::canonical(base / req);\n\n    // Check if the resolved path is within the base directory\n    return fs::starts_with(fullPath, fs::canonical(base));\n}\n\nint main() {\n    std::string baseDir = "/safe/directory";\n    std::string requestedFile = "../../../../etc/passwd";\n\n    if (isValidPath(baseDir, requestedFile)) {\n        std::cout << "Access granted to: " << requestedFile << std::endl;\n        // Proceed with sending the file\n    } else {\n        std::cerr << "Access denied: " << requestedFile << std::endl;\n    }\n\n    return 0;\n}