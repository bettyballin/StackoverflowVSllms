#include <engexts.h>\n#include <dbgeng.h>\n\nHRESULT RunProfilingLoop(IDebugControl *pDebugControl) {\n    while (true) {\n        DEBUG_EVENT event;\n        ULONG returned;\n\n        HRESULT hr = pDebugControl->WaitForEvent(DEBUG_WAIT_DEFAULT, INFINITE);\n        if (FAILED(hr)) {\n            // Handle error properly\n            std::cerr << "Failed to wait for event: 0x" << std::hex << hr << std::endl;\n            break;\n        }\n\n        hr = pDebugControl->GetLastEventInformation(&event.DebugEventCode, NULL, nullptr, &event, sizeof(event), &returned);\n        if (FAILED(hr)) {\n            // Handle error properly\n            std::cerr << "Failed to get last event info: 0x" << std::hex << hr << std::endl;\n            break;\n        }\n\n        // Process event and output stack trace\n        pDebugControl->OutputStackTrace(0, -1, DEBUG_STACK_FRAME_DEFAULT | DEBUG_STACK_PARAMETERS);\n\n        // Continue execution after processing the event\n        hr = pDebugControl->SetExecutionStatus(DEBUG_STATUS_GO);\n        if (FAILED(hr)) {\n            // Handle error properly\n            std::cerr << "Failed to set execution status: 0x" << std::hex << hr << std::endl;\n            break;\n        }\n    }\n\n    return S_OK;\n}