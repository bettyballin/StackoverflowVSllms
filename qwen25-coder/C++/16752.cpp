#include "Base.h"\n\nclass DerivedA : public Base {\npublic:\n    void doSomething() const override { /* ... */ }\n};\n\n// Factory for DerivedA\n#include "BaseFactory.h"\n#include "DerivedA.h"\n\nextern "C" BaseFactory* createDerivedAFactory() {\n    class DerivedAFactory : public BaseFactory {\n    public:\n        std::unique_ptr<Base> createInstance() const override {\n            return std::make_unique<DerivedA>();\n        }\n    };\n    static DerivedAFactory factory;\n    return &factory;\n}