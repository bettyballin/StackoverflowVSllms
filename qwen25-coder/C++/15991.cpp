// AlgorithmInterface.h\n#ifndef ALGORITHMINTERFACE_H\n#define ALGORITHMINTERFACE_H\n\n#include <vector>\n#include <memory>\n\nclass AlgorithmInterface {\npublic:\n    virtual ~AlgorithmInterface() = default;\n    virtual std::vector<double> process(const std::vector<double>& data) const = 0;\n};\n\nusing AlgorithmPtr = std::shared_ptr<AlgorithmInterface>;\n\n#endif // ALGORITHMINTERFACE_H