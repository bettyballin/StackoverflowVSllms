using namespace System;\n\npublic ref class Geometry {\npublic:\n    double X;\n    double Y;\n\n    Geometry(double x, double y) : X(x), Y(y) {}\n\n    // Delegates for accessing members\n    delegate double MemberAccessor(Geometry^);\n\n    static array<MemberAccessor^>^ GetMemberAccessors() {\n        return { gcnew MemberAccessor([](Geometry^ g) { return g->X; }),\n                 gcnew MemberAccessor([](Geometry^ g) { return g->Y; }) };\n    }\n};\n\nint main(array<System::String ^> ^args) {\n    array<Geometry^>^ points = { gcnew Geometry(10.5, 20.3), gcnew Geometry(-5.0, 30.0) };\n\n    auto accessors = Geometry::GetMemberAccessors();\n\n    // Example: Finding max X\n    double maxX = Double::NegativeInfinity;\n    for each (auto point in points) {\n        maxX = Math::Max(maxX, accessors[0](point));\n    }\n    Console::WriteLine("Max X: {0}", maxX);\n\n    return 0;\n}