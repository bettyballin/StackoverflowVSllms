#include <iostream>\n#ifdef _WIN32\n    #include <windows.h> // Example of including Windows-specific header conditionally\n#else\n    #include <unistd.h>  // Example of including Linux/Unix-like specific header conditionally\n#endif\n\n// Function to get the current working directory\nstd::string getCurrentDirectory() {\n#ifdef _WIN32\n    char buffer[MAX_PATH];\n    GetModuleFileName( NULL, buffer, MAX_PATH );\n    std::string::size_type pos = buffer.find_last_of("\\/");\n    return buffer.substr(0, pos);\n#else\n    char result[ PATH_MAX ];\n    ssize_t count = readlink("/proc/self/exe", result, PATH_MAX);\n    std::string::size_type pos = std::string(result).find_last_of('/');\n    return std::string(result).substr(0, pos);\n#endif\n}\n\nint main() {\n    std::cout << "Current Directory: " << getCurrentDirectory() << std::endl;\n    // Cross-platform code here\n    return 0;\n}