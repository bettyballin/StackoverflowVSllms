#define NUM_BINS 32\n\nvoid colorHistogram(int *histogram, unsigned int *imageData, int width, int height) {\n    for (int i = 0; i < NUM_BINS*3 + 1; i++) histogram[i] = 0;\n    for (int y = 0; y < height; ++y) {\n        for (int x = 0; x < width; ++x) {\n            unsigned int pixel = imageData[y * width + x];\n            int rBin = ((pixel & 0xFF0000) >> 16) / (256 / NUM_BINS);\n            int gBin = ((pixel & 0xFF00) >> 8) / (256 / NUM_BINS);\n            int bBin = (pixel & 0xFF) / (256 / NUM_BINS);\n\n            histogram[rBin]++;\n            histogram[NUM_BINS + gBin]++;\n            histogram[2*NUM_BINS + bBin]++;\n        }\n    }\n\n    // Normalize\n    for (int i = 0; i < NUM_BINS * 3; ++i) {\n        histogram[i] = (histogram[i] * 1000) / (width * height); // Scale to avoid precision issues\n    }\n}