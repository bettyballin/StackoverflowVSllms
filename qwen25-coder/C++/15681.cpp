#include <vector>\n\nint* VecToArray(const std::vector<int>& Vec) {\n    int* ary = new int[Vec.size()]; // Allocate memory dynamically\n\n    for(int i = 0; i < Vec.size(); i++)\n        ary[i] = Vec[i];\n\n    return ary;\n}\n\ndouble* CFE(int density[], size_t size) {\n   double* Energy = new double[size]; // Allocate memory dynamically for new array\n   // Initialize or compute values for Energy here...\n\n   return Energy;\n}\n\ndouble ObjFunction(double* E_Array, int n) { // Pass the size of the array\n    double SumEnergy = 0;\n\n    for (int i = 0; i < n; i++)\n        SumEnergy += E_Array[i];\n\n    delete[] E_Array; // Free memory here once done using it\n\n    return SumEnergy;\n}\n\nint main() {\n    std::vector<int> VectorName(10, 5); // Example vector\n    int* array = VecToArray(VectorName);\n    double totalEnergy = ObjFunction(CFE(array, VectorName.size()), VectorName.size());\n    delete[] array; // Free memory for the original array\n\n    return 0;\n}