#include <comdef.h>\n#include <shlobj.h>\n#include <exdisp.h>\n#include <string>\n\nSHDocVw::IWebBrowser2Ptr findBrowserByHWND(HWND hwnd)\n{\n    SHDocVw::IShellWindowsPtr ptr;\n    ptr.CreateInstance(__uuidof(SHDocVw::ShellWindows));\n    if (ptr == NULL) {\n        return nullptr;\n    }\n\n    const long nCount = ptr->GetCount();\n\n    for (long i = 0; i < nCount; ++i) {\n        _variant_t va(i, VT_I4);\n        IDispatchPtr spDisp = ptr->Item(va);\n\n        SHDocVw::IWebBrowser2Ptr spBrowser(spDisp);\n        if (spBrowser != NULL) {\n            HWND browserWindow;\n            try {\n                browserWindow = (HWND)spBrowser->GetHWND();\n            } catch (const _com_error &e) {\n                continue;\n            }\n\n            if (browserWindow == hwnd) {\n                return spBrowser;\n            }\n        }\n    }\n    return nullptr;\n}\n\nSHDocVw::IWebBrowser2Ptr findBrowserByTitle(const std::wstring &title)\n{\n    SHDocVw::IShellWindowsPtr ptr;\n    ptr.CreateInstance(__uuidof(SHDocVw::ShellWindows));\n    if (ptr == NULL) {\n        return nullptr;\n    }\n\n    const long nCount = ptr->GetCount();\n\n    for (long i = 0; i < nCount; ++i) {\n        _variant_t va(i, VT_I4);\n        IDispatchPtr spDisp = ptr->Item(va);\n\n        SHDocVw::IWebBrowser2Ptr spBrowser(spDisp);\n        if (spBrowser != NULL) {\n            BSTR bstrTitle;\n            HRESULT hr = spBrowser->get_LocationName(&bstrTitle);\n            std::wstring currentTitle(bstrTitle ? bstrTitle : L"");\n            SysFreeString(bstrTitle);\n\n            if (hr == S_OK && currentTitle == title) {\n                return spBrowser;\n            }\n        }\n    }\n    return nullptr;\n}