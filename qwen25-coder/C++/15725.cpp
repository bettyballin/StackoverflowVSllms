#include "imgui.h"\n#include "imgui_impl_sdl2.h"\n#include "imgui_impl_opengl3.h"\n#include <SDL.h>\n\nint main(int, char**) {\n    // Setup SDL2\n    if (SDL_Init(SDL_INIT_VIDEO | SDL_INIT_TIMER | SDL_INIT_GAMECONTROLLER) != 0) {\n        fprintf(stderr, "Error: %s\n", SDL_GetError());\n        return -1;\n    }\n\n    SDL_WindowFlags window_flags = (SDL_WindowFlags)(SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE);\n    SDL_Window* window = SDL_CreateWindow("Text Editor", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 1280, 720, window_flags);\n\n    SDL_GLContext gl_context = SDL_GL_CreateContext(window);\n    SDL_GL_MakeCurrent(window, gl_context);\n    SDL_GL_SetSwapInterval(1); // Enable vsync\n\n    // Setup Dear ImGui context\n    IMGUI_CHECKVERSION();\n    ImGui::CreateContext();\n    ImGuiIO& io = ImGui::GetIO(); (void)io;\n    io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard;  // Enable Keyboard Controls\n\n    // Setup Dear ImGui style\n    ImGui::StyleColorsDark();\n\n    // Setup Platform/Renderer bindings\n    ImGui_ImplSDL2_InitForOpenGL(window, gl_context);\n    const char* glsl_version = "#version 130";\n    ImGui_ImplOpenGL3_Init(glsl_version);\n\n    bool running = true;\n    SDL_Event event;\n\n    while (running) {\n        while (SDL_PollEvent(&event)) {\n            ImGui_ImplSDL2_ProcessEvent(&event);\n            if (event.type == SDL_QUIT)\n                running = false;\n            if (event.type == SDL_WINDOWEVENT && event.window.event == SDL_WINDOWEVENT_CLOSE && event.window.windowID == SDL_GetWindowID(window))\n                running = false;\n        }\n\n        // Start the ImGui frame\n        ImGui_ImplOpenGL3_NewFrame();\n        ImGui_ImplSDL2_NewFrame(window);\n        ImGui::NewFrame();\n\n        ImGui::Begin("Text Editor");\n        static char text[1024] = "";\n        ImGui::InputTextMultiline("##multitext", text, IM_ARRAYSIZE(text), ImVec2(-FLT_MIN, -FLT_MIN));\n        ImGui::End();\n\n        // Rendering\n        ImGui::Render();\n        int display_w, display_h;\n        SDL_GL_GetDrawableSize(window, &display_w, &display_h);\n        glViewport(0, 0, display_w, display_h);\n        glClearColor(clear_color.x * clear_color.w, clear_color.y * clear_color.w, clear_color.z * clear_color.w, clear_color.w);\n        glClear(GL_COLOR_BUFFER_BIT);\n        ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());\n        SDL_GL_SwapWindow(window);\n    }\n\n    // Cleanup\n    ImGui_ImplOpenGL3_Shutdown();\n    ImGui_ImplSDL2_Shutdown();\n    ImGui::DestroyContext();\n\n    SDL_GL_DeleteContext(gl_context);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n\n    return 0;\n}