// mylib.h\n#ifdef __cplusplus\nextern "C" {\n#endif\n\ntypedef struct MyObject MyObject; // Opaque type for C\n\nMyObject* MyObject_create(); // Constructor\nvoid MyObject_destroy(MyObject*); // Destructor\nint MyObject_doSomething(MyObject*);\n\n#ifdef __cplusplus\n}\n#endif\n\n// mylib.cpp\n#include "mylib.h"\n\nclass InternalMyObject {\npublic:\n    void doSomething() { /* ... */ }\n};\n\nstruct MyObject {\n    InternalMyObject* internal;\n    ~MyObject() {\n        delete internal;\n    }\n};\n\nMyObject* MyObject_create() {\n    MyObject *obj = new MyObject();\n    obj->internal = new InternalMyObject();\n    return obj;\n}\n\nvoid MyObject_destroy(MyObject* obj) {\n    delete obj; // Calls destructor\n}\n\nint MyObject_doSomething(MyObject* obj) {\n    obj->internal->doSomething();\n    return 0; // Example return value\n}