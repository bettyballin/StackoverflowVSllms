#include <windows.h>\n#include <iostream>\n\nvoid WatchDirectory(PCWSTR path) {\n    HANDLE hDir = CreateFile(path,\n                             FILE_LIST_DIRECTORY,\n                             FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n                             NULL,\n                             OPEN_EXISTING,\n                             FILE_FLAG_BACKUP_SEMANTICS | FILE_FLAG_OVERLAPPED,\n                             NULL);\n\n    if (hDir == INVALID_HANDLE_VALUE) {\n        std::cerr << "CreateFile failed (" << GetLastError() << ").\n";\n        return;\n    }\n\n    char buffer[1024];\n    DWORD bytesReturned;\n    OVERLAPPED overlapped = { 0 };\n    BOOL pendingIO = FALSE;\n\n    do {\n        BYTE* pNextRecord = (BYTE*)buffer;\n        if (!ReadDirectoryChangesW(hDir, buffer, sizeof(buffer), TRUE,\n                                   FILE_NOTIFY_CHANGE_FILE_NAME | FILE_NOTIFY_CHANGE_DIR_NAME,\n                                   &bytesReturned, &overlapped, NULL)) {\n            DWORD err = GetLastError();\n            if (err != ERROR_IO_PENDING) {\n                std::cerr << "ReadDirectoryChangesW failed (" << err << ").\n";\n                break;\n            }\n        } else {\n            bytesReturned = 0;\n        }\n\n        pendingIO = TRUE;\n\n        while (true) {\n            DWORD waitingOnIO = WaitForSingleObject(overlapped.hEvent, INFINITE);\n            if (waitingOnIO == WAIT_OBJECT_0) { // operation complete\n                GetOverlappedResult(hDir, &overlapped, &bytesReturned, FALSE);\n                break;\n            }\n        }\n\n        do {\n            FILE_NOTIFY_INFORMATION* fni = (FILE_NOTIFY_INFORMATION*)pNextRecord;\n\n            switch (fni->Action) {\n            case FILE_ACTION_RENAMED_OLD_NAME:\n                std::wcout << L"RENAME OLD NAME: " << fni->FileName << std::endl;\n                break;\n            case FILE_ACTION_RENAMED_NEW_NAME:\n                std::wcout << L"RENAME NEW NAME: " << fni->FileName << std::endl;\n                // Here you can show your message box\n                if (MessageBox(NULL, L"Do you want to allow the rename?", L"File Rename", MB_YESNO) != IDYES) {\n                    // To cancel the operation would require more complex logic\n                    // involving a shell extension or other means.\n                    std::wcout << L"Operation cancelled." << std::endl;\n                }\n                break;\n            }\n\n            pNextRecord += fni->NextEntryOffset;\n\n        } while (fni->NextEntryOffset);\n\n    } while (bytesReturned != 0);\n\n    CloseHandle(hDir);\n}\n\nint main() {\n    PCWSTR path = L"C:\\test"; // Directory to watch\n    WatchDirectory(path);\n    return 0;\n}