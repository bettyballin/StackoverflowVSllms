#include <iostream>\n#include <comdef.h>\n#import "C:\Windows\System32\msxml6.dll"\n\nint main() {\n    ::CoInitialize(NULL);\n\n    try {\n        // Create a new MSXML DOMDocument instance\n        MSXML2::IXMLDOMDocumentPtr doc(__uuidof(MSXML2::DOMDocument60));\n\n        // Load XML from string, or you can load it from a file as well\n        BSTR xmlContent = \n            L"<Computer>"\n            L"  <HIVE Name=\"HKEY_CUREENT_USER\">"\n            L"    <Elements>"\n                L"      <element Name=\"(Default)\" Type=\"REG_SZ\" Data=\"(value not set)\" />"\n                L"      <element Name=\"SoftwareMicrosoftVisualStudio9.0ResourceEditorsPerformanceLoggingEnabled\" Type=\"REG_SZ\" Data=\"\" />"\n            L"    </Elements>"\n            L"    <KEYS>"\n                L"      <Key Name=\"Network\">"\n                        L"        <Elements>"\n                                L"          <element Name=\"(Default)\" Type=\"REG_SZ\" Data=\"(value not set)\" />"\n                        L"        </Elements>"\n                L"      </Key>"\n            L"    </KEYS>"\n            L"  </HIVE>"\n            L"</Computer>";\n\n        if (doc->loadXML(xmlContent) == VARIANT_FALSE) {\n            std::cerr << "Failed to load XML.\n";\n            return -1;\n        }\n\n        // Create a query using an XPath\n        BSTR xpath = L"/Computer/HIVE[@Name='HKEY_CUREENT_USER']/KEYS/Key[@Name='Network']";\n\n        // Select the node\n        MSXML2::IXMLDOMNodePtr node = doc->selectSingleNode(xpath);\n        if (node) {\n            std::wcout << L"Found node: " << node->nodeName << std::endl;\n        }\n        else {\n            std::cerr << "Node not found.\n";\n        }\n\n    } catch (_com_error& e) {\n        std::wcout << L"Error: " << e.ErrorMessage() << std::endl;\n    }\n\n    ::CoUninitialize();\n    return 0;\n}