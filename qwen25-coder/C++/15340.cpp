#include <comdef.h>\n#include <adoint.h>\n#include <iostream>\n\nvoid GetSchemaVersion(_ConnectionPtr& cnn) {\n    try {\n        // Create and initialize a command object.\n        _CommandPtr cmd(__uuidof(Command));\n        cmd->ActiveConnection = cnn;\n\n        // Set up the SQL command with NULL for default values\n        cmd->PutCommandText(L"SELECT value AS schemaVer "\n                            L"FROM fn_listextendedproperty(NULL, NULL, NULL, NULL, NULL, NULL, NULL) "\n                            L"WHERE name=N'schemaVersion'");\n\n        // Execute the query and get a recordset back.\n        _RecordsetPtr pRst(__uuidof(Recordset));\n        pRst = cmd->Execute(nullptr, nullptr, adCmdText);\n\n        // Check if we have records\n        if (!pRst->BOF && !pRst->EOF) {\n            // Output the value of schemaVersion if it exists.\n            _bstr_t schemaVerValue = pRst->GetFields()->GetItem("schemaVer")->GetValue();\n            std::wcout << L"Schema Version: " << (LPCTSTR)schemaVerValue << std::endl;\n        } else {\n            std::wcout << L"No 'schemaVersion' property found." << std::endl;\n        }\n\n    } catch (_com_error &e) {\n        // Handle errors here\n        _bstr_t errorMessage = e.ErrorMessage();\n        std::wcerr << L"Error: " << (LPCTSTR)errorMessage << std::endl;\n    }\n}