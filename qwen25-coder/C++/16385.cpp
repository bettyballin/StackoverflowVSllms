void HandleVolumeArrival(MSG *message)\n{\n    if(message->lParam == 0)\n    {\n        qDebug() << "lParam is 0 on Device Arrival";\n        return;\n    }\n\n    PDEV_BROADCAST_HDR pHdr = (PDEV_BROADCAST_HDR) message->lParam;\n    \n    // Check for volume device type\n    if(pHdr->dbch_devicetype == DBT_DEVTYP_VOLUME)\n    {\n        PDEV_BROADCAST_VOLUME pVol = (PDEV_BROADCAST_VOLUME) pHdr;\n        \n        // Handling of the volume is performed here\n        qDebug() << "Volume arrived:" << pVol->dbcv_name;\n    }\n    // Check for device interface type which might be reporting volumes as well\n    else if(pHdr->dbch_devicetype == DBT_DEVTYP_DEVICEINTERFACE)\n    {\n        PDEV_BROADCAST_DEVICEINTERFACE pdb = \n            (PDEV_BROADCAST_DEVICEINTERFACE)pHdr;\n\n        if(IsEqualGUID(GUID_DEVINTERFACE_VOLUME, pdb->dbcc_classguid))\n        {\n            // Handle the volume arrival for device interface notifications\n            qDebug() << "Volume arrived via DeviceInterface notification";\n            \n            // You may need to call some additional function here \n            // to get the actual volume information, as DEVICEINTERFACE might not directly provide volume details.\n        }\n    }\n\n} // end HandleVolumeArrival