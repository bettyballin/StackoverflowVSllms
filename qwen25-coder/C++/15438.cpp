#include <iostream>\n#include <map>\n#include <string>\n#include <sstream>\n\nclass InMemoryIniFile {\nprivate:\n    std::map<std::string, std::map<std::string, std::string>> data;\n\npublic:\n    void setValue(const std::string& section, const std::string& key, const std::string& value) {\n        data[section][key] = value;\n    }\n\n    std::string getValue(const std::string& section, const std::string& key) const {\n        auto secIt = data.find(section);\n        if (secIt != data.end()) {\n            auto valIt = secIt->second.find(key);\n            if (valIt != secIt->second.end()) {\n                return valIt->second;\n            }\n        }\n        return ""; // Return empty string if not found\n    }\n\n    std::string toString() const {\n        std::ostringstream oss;\n        for (const auto& section : data) {\n            oss << "[" << section.first << "]\n";\n            for (const auto& keyval : section.second) {\n                oss << keyval.first << "=" << keyval.second << "\n";\n            }\n            oss << "\n";\n        }\n        return oss.str();\n    }\n\n    void clear() {\n        data.clear();\n    }\n};\n\nint main() {\n    InMemoryIniFile ini;\n    ini.setValue("Section1", "Key1", "Value1");\n    ini.setValue("Section1", "Key2", "Value2");\n    ini.setValue("Section2", "Key3", "Value3");\n\n    std::cout << "Current INI file content:\n" << ini.toString();\n\n    // Example of getting a value\n    std::string value = ini.getValue("Section1", "Key2");\n    std::cout << "Value for Section1/Key2: " << value << "\n";\n\n    return 0;\n}