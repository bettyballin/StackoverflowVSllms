#include <windows.h>\n#include <tchar.h>\n#include <stdio.h>\n\n#define BUFSIZE 512\n\nint _tmain(int argc, TCHAR *argv[])\n{\n    BOOL bFlag;\n    TCHAR Buf[BUFSIZE];     // temporary buffer for volume name\n\n    if( argc != 3 ) \n    {\n        _tprintf( TEXT("Usage: %s <mount_point> <volume>\n"), argv[0] );\n        _tprintf( TEXT("For example, \"%s c:\\mnt\\fdrive\\ f:\\\"\n"), argv[0]);\n        return( -1 );\n    }\n\n    // Ensure mount point ends with a backslash\n    if (argv[1][_tcslen(argv[1]) - 1] != '\\') {\n        _tcscat_s(argv[1], BUFSIZE, TEXT("\\"));\n    }\n    \n    // Ensure volume path ends with a backslash\n    if (argv[2][_tcslen(argv[2]) - 1] != '\\') {\n        _tcscat_s(argv[2], BUFSIZE, TEXT("\\"));\n    }\n\n    bFlag = GetVolumeNameForVolumeMountPoint(\n               argv[2], // input volume mount point or directory\n                  Buf, // output volume name buffer\n              BUFSIZE  // size of volume name buffer\n           );\n\n    if (bFlag != TRUE) \n    {\n        _tprintf( TEXT("Retrieving volume name for %s failed.\n"), argv[2] );\n        return (-2);\n    }\n\n    _tprintf( TEXT("Volume name of %s is %s\n"), argv[2], Buf );\n    bFlag = SetVolumeMountPoint(\n               argv[1], // mount point\n                  Buf  // volume to be mounted\n           );\n\n    if (!bFlag)\n        _tprintf (TEXT("Attempt to mount %s at %s failed. Error: %d\n"), Buf, argv[1], GetLastError());\n\n    return (bFlag);\n}