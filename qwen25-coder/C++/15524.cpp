// Example of using a SIMD instruction that modern compilers optimize (e.g., AVX2)\n#include <immintrin.h>\nvoid example_avx2_operation(float *a, float *b, float *result, int n) {\n    for (int i = 0; i <= n - 8; i += 8) {\n        __m256 va = _mm256_loadu_ps(&a[i]); // Load 8 floats from array a\n        __m256 vb = _mm256_loadu_ps(&b[i]); // Load 8 floats from array b\n        __m256 vresult = _mm256_add_ps(va, vb); // Add vectors element-wise\n        _mm256_storeu_ps(&result[i], vresult); // Store the result in array result\n    }\n}