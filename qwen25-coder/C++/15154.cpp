// SimpleClass.h\n#pragma once\n#include "resource.h"       // main symbols\n\nusing namespace ATL;\n\nclass ATL_NO_VTABLE CSimpleObject :\n	public CComObjectRootEx<CComSingleThreadModel>,\n	public CComCoClass<CSimpleObject, &CLSID_SimpleObject>,\n	public IDispatchImpl<ISimpleObject, &IID_ISimpleObject>\n{\npublic:\n	CSimpleObject()\n	{\n	}\n\nDECLARE_REGISTRY_RESOURCEID(IDR_SIMPLEOBJECT)\n\nBEGIN_COM_MAP(CSimpleObject)\n	COM_INTERFACE_ENTRY(ISimpleObject)\n	COM_INTERFACE_ENTRY(IDispatch)\nEND_COM_MAP()\n\n	DECLARE_PROTECT_FINAL_CONSTRUCT()\n\n	HRESULT FinalConstruct()\n	{\n		return S_OK;\n	}\n	\n	void FinalRelease() \n	{\n	}\n\npublic:\n\n	STDMETHOD(SayHello)(BSTR* message);\n};\n\nOBJECT_ENTRY_AUTO(__uuidof(SimpleObject), CSimpleObject)\n\n// SimpleClass.cpp\n#include "pch.h"\n#include "SimpleObject.h"\n\nSTDMETHODIMP CSimpleObject::SayHello(BSTR* message)\n{\n	if (!message) return E_POINTER;\n	*message = SysAllocString(L"Hello, DCOM!");\n	if (!*message) return E_OUTOFMEMORY;\n	return S_OK;\n}