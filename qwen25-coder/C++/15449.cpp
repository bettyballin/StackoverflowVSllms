#include <winsock2.h>\n#include <wlanapi.h>\n#include <objbase.h>\n\n#pragma comment(lib, "Wlanapi.lib")\n#pragma comment(lib, "ole32.lib")\n\nvoid ListWirelessNetworks() {\n    PWLAN_INTERFACE_INFO_LIST pIfList = NULL;\n    DWORD dwMaxClient = 2; // Usually 2 is enough for a device\n    DWONCELOCK onceLock = INIT_ONCE_INIT;\n\n    if (InitOnceExecuteOnce(&onceLock, InitRasmanOnceCallback, NULL, NULL)) {\n        DWORD dwResult = WlanEnumInterfaces(NULL, &pIfList);\n        if (dwResult != ERROR_SUCCESS) {\n            wprintf(L"WlanEnumInterfaces failed with error: % u\n", dwResult);\n            goto Cleanup;\n        }\n\n        PWLAN_INTERFACE_INFO pIfInfo = NULL;\n\n        wprintf(L"Num Entries: % d\n", pIfList->dwNumberOfItems);\n\n        for (DWORD i = 0; i < pIfList->dwNumberOfItems; i++) {\n            pIfInfo = &pIfList->InterfaceInfo[i];\n\n            PWLAN_AVAILABLE_NETWORK_LIST pBssList = NULL;\n\n            dwResult = WlanGetAvailableNetworkList(NULL, \n                                                   &(pIfInfo->InterfaceGuid),\n                                                   0,\n                                                   NULL,\n                                                   &pBssList);\n\n            if (dwResult == ERROR_SUCCESS) {\n                wprintf(L"SSID of available networks:\n");\n                for (DWORD j = 0; j < pBssList->dwNumberOfItems; j++) {\n                    PWLAN_AVAILABLE_NETWORK pBssEntry = &(pBssList->Network[j]);\n                    wprintf(L"%ws\n", pBssEntry->dot11Ssid.ucSSID);\n                }\n            } else {\n                dwMaxClient--;\n                if (0 == dwMaxClient) {\n                    break;\n                }\n            }\n\n            WlanFreeMemory(pBssList);\n        }\n    }\n\nCleanup:\n    if (pIfList != NULL) {\n        WlanFreeMemory(pIfList);\n    }\n\n    return;\n}\n\nBOOL CALLBACK InitRasmanOnceCallback(\n    PINIT_ONCE initOnce,\n    PVOID Parameter,\n    PVOID *Context\n) {\n    DWORD dwResult = RasInitialize();\n\n    if (dwResult != ERROR_SUCCESS) {\n        wprintf(L"RasInitialize failed with error: % u\n", dwResult);\n        return FALSE;\n    }\n\n    return TRUE;\n}