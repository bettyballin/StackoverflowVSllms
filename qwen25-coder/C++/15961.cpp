#include <openssl/rsa.h>\n#include <openssl/engine.h>\n#include <iostream>\n\nint main() {\n    // Initialize OpenSSL\n    ERR_load_crypto_strings();\n    OpenSSL_add_all_algorithms();\n\n    // Generate RSA Key Pair (1024 bits for example)\n    int keyLength = 1024;\n    BIGNUM *bn = BN_new();\n    BN_set_word(bn, RSA_F4);  // commonly used public exponent\n    RSA *rsaKeyPair = RSA_generate_key(keyLength, bn, nullptr, nullptr);\n\n    if (!rsaKeyPair) {\n        std::cerr << "Failed to generate RSA key pair" << std::endl;\n    } else {\n        std::cout << "RSA Key Pair generated successfully" << std::endl;\n\n        // Use your rsaKeyPair...\n\n        // Clean up\n        RSA_free(rsaKeyPair);\n    }\n    BN_free(bn);\n\n    // Cleanup OpenSSL\n    EVP_cleanup();\n    ERR_free_strings();\n\n    return 0;\n}