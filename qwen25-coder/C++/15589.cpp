#include <windows.h>\n#include <iostream>\n\nLRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);\n\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {\n    const char* className = "BroadcastTestWindow";\n    WNDCLASSEX wcex = { sizeof(WNDCLASSEX), CS_HREDRAW | CS_VREDRAW, WndProc, 0, 0,\n                        hInstance, NULL, LoadCursor(NULL, IDC_ARROW),\n                        (HBRUSH)(COLOR_WINDOW + 1), NULL, className, NULL };\n\n    if (!RegisterClassEx(&wcex)) return 0;\n\n    HWND hwnd = CreateWindow(className, "Broadcast Test", WS_OVERLAPPEDWINDOW,\n                             CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, NULL, NULL, hInstance, NULL);\n\n    if (!hwnd) return 0;\n\n    ShowWindow(hwnd, nCmdShow);\n    UpdateWindow(hwnd);\n\n    // Broadcast a custom message\n    SendMessage(HWND_BROADCAST, WM_USER + 1, 0, (LPARAM)"Hello from broadcast!");\n\n    MSG msg;\n    while (GetMessage(&msg, NULL, 0, 0)) {\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n\n    return (int)msg.wParam;\n}\n\nLRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {\n    if (message == WM_USER + 1) {\n        std::cout << "Received broadcast: " << static_cast<const char*>(lParam) << std::endl;\n    }\n    return DefWindowProc(hWnd, message, wParam, lParam);\n}