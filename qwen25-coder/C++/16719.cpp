#include <podofo/podofo.h>\n\nvoid AppendPdfPages(const std::string& fromFile, const std::string& toFile) {\n    try {\n        // Load the existing PDF document where pages will be appended.\n        PoDoFo::PdfMemDocument docTo(toFile);\n        \n        // Open the PDF file with the pages you want to append.\n        PoDoFo::PdfMemDocument docFrom(fromFile);\n\n        // Append all pages from the source document to the target document\n        size_t pageCount = docFrom.GetPageCount();\n        for (size_t i = 0; i < pageCount; ++i) {\n            PoDoFo::PdfPage* pPage = docFrom.GetPage(i);\n            if (pPage != nullptr) {\n                // Create a new page in the target document and import content\n                PoDoFo::PdfPage* pNewPage = docTo.CreatePage(docTo.GetPageSize(pageCount));\n                PoDoFo::PdfPainter painter;\n                painter.SetDocument(&docTo);\n                painter.BeginPage(pNewPage);\n                painter.DrawPdfPage(0, 0, pPage);\n                painter.EndPage();\n            }\n        }\n\n        // Save the updated document\n        docTo.Write(toFile.c_str());\n    } catch (const PoDoFo::PdfError& e) {\n        std::cerr << "An error occurred: " << e.what() << std::endl;\n    }\n}\n\nint main() {\n    AppendPdfPages("source.pdf", "destination.pdf");\n    return 0;\n}