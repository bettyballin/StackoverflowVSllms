#include <windows.h>\n#include <wtsapi32.h>\n#include <iostream>\n\nint main() {\n    PWTS_SESSION_INFO pSessionInfo;\n    DWORD dwCount;\n\n    if (WTSEnumerateSessions(WTS_CURRENT_SERVER_HANDLE, 0, 1, &pSessionInfo, &dwCount) == FALSE) {\n        std::cerr << "Failed to enumerate sessions." << std::endl;\n        return 1;\n    }\n\n    HANDLE hToken = NULL, hDupedToken = NULL;\n\n    for (DWORD i = 0; i < dwCount; i++) {\n        if (pSessionInfo[i].State == WTSActive) {\n            if (WTSQueryUserToken(pSessionInfo[i].SessionId, &hToken)) {\n                DuplicateTokenEx(hToken, MAXIMUM_ALLOWED, NULL,\n                                 SecurityImpersonation, TokenPrimary, &hDupedToken);\n                break;\n            }\n        }\n    }\n\n    WTSCloseServer(WTS_CURRENT_SERVER_HANDLE);\n\n    if (!hDupedToken) {\n        std::cerr << "Failed to find active session." << std::endl;\n        return 1;\n    }\n\n    STARTUPINFO si = { sizeof(si), 0 };\n    PROCESS_INFORMATION pi;\n\n    bool success = CreateProcessAsUser(hDupedToken, NULL,\n                                       (LPSTR)"notepad.exe", NULL, NULL, FALSE,\n                                       0, NULL, NULL, &si, &pi) != 0;\n\n    CloseHandle(hDupedToken);\n    if (!success)\n        std::cerr << "Failed to create process as user." << std::endl;\n    else {\n        std::cout << "Notepad launched successfully." << std::endl;\n        WaitForSingleObject(pi.hProcess, INFINITE);\n        CloseHandle(pi.hThread); CloseHandle(pi.hProcess);\n    }\n\n    return 0;\n}