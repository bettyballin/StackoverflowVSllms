#include <gtkmm.h>\n#include <iostream>\n\nclass MyWindow : public Gtk::Window {\npublic:\n    MyWindow() {\n        // Prepare a drawing area or similar\n        drawing_area.set_events(Gdk::BUTTON_PRESS_MASK);\n        add(drawing_area);\n\n        // Connect the signal handler\n        drawing_area.signal_button_press_event().connect(\n            sigc::mem_fun(*this, &MyWindow::on_button_press));\n\n        show_all_children();\n    }\n\nprotected:\n    Gtk::DrawingArea drawing_area;\n\n    bool on_button_press(GdkEventButton* event) {\n        if (event->button == 1) { // Check for left mouse button\n            std::cout << "Left button pressed at (" \n                      << event->x << ", " << event->y << ")" << std::endl;\n            return true; // Event handled\n        }\n        return false; // Event not handled, pass to other handlers\n    }\n};\n\nint main(int argc, char* argv[]) {\n    auto app = Gtk::Application::create(argc, argv, "org.gtkmm.example");\n\n    MyWindow window;\n\n    // Show the window and start the application\n    return app->run(window);\n}