#include <mysql/mysql.h>\n#include <iostream>\n#include <vector>\n\nint main() {\n    MYSQL *sqlhnd = mysql_init(NULL);\n    if (!mysql_real_connect(sqlhnd, "server", "user", "pass", "database", 3306, NULL, 0)) {\n        std::cerr << "Failed to connect to MySQL: " << mysql_error(sqlhnd) << std::endl;\n        return 1;\n    }\n\n    if (mysql_query(sqlhnd, "SELECT * FROM `my_table`")) {\n        std::cerr << "Query failed: " << mysql_error(sqlhnd) << std::endl;\n        return 1;\n    }\n\n    MYSQL_RES *confres = mysql_store_result(sqlhnd);\n    if (!confres) {\n        std::cerr << "mysql_store_result() failed: " << mysql_error(sqlhnd) << std::endl;\n        return 1;\n    }\n\n    int numfields = mysql_num_fields(confres);\n    MYSQL_FIELD *mfield;\n\n    // Find the index of the column you want to fetch\n    int targetColumnIndex = -1;\n    for (int i = 0; i < numfields; i++) {\n        mfield = mysql_fetch_field_direct(confres, i);\n        if (strcmp(mfield->name, "columntobefetched") == 0) {\n            targetColumnIndex = i;\n            break;\n        }\n    }\n\n    // If the column was not found\n    if (targetColumnIndex == -1) {\n        std::cerr << "Column 'columntobefetched' not found." << std::endl;\n        mysql_free_result(confres);\n        return 1;\n    }\n\n    MYSQL_ROW row;\n    std::vector<std::string> data;\n\n    while ((row = mysql_fetch_row(confres))) {\n        if (row[targetColumnIndex]) { // Check if the field is not NULL\n            data.push_back(row[targetColumnIndex]);\n        }\n    }\n\n    // Output the fetched data\n    for (const auto &value : data) {\n        std::cout << value << std::endl;\n    }\n\n    mysql_free_result(confres);\n    mysql_close(sqlhnd);\n\n    return 0;\n}