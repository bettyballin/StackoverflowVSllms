#include <iostream>\nusing namespace std;\n\nstruct doh {\n    void operator()(bool b) {\n        cout << "operator()(bool b)" << endl;\n    }\n\n    template< typename T > void operator()(T t) {\n        cout << "template <typename T> void operator()(T t)" << endl;\n    }\n};\n\n// Correct specialization without the extra <>\ntemplate<> \nvoid doh::operator()(int i) {\n    cout << "template <> void operator()(int i)" << endl;\n}\n\n// Correct specialization\ntemplate<>\nvoid doh::operator()(bool b) {\n    cout << "template <> void operator()(bool b)" << endl;\n}\n\nint main() {\n    doh d;\n    int i = 0;\n    bool b = true;\n    d(b);\n    d(i);\n}