#include <vector>\n#include <string>\n\n// Assuming Excel and application are already defined and initialized\n\nExcel::_WorksheetPtr pSheet = application->ActiveSheet;\nExcel::RangePtr pRange = pSheet->Range[_bstr_t("A1:B1")]; // Define the range A1:B1\n\n// Use Value2 to get all values in the specified range\nVARIANT var = pRange->Value2;\n\nif (var.vt == (VT_ARRAY | VT_VARIANT)) {\n    SAFEARRAY FAR* psa = var.parray;\n    long lLbound, lUbound;\n\n    // Get dimensions of the array.\n    SafeArrayGetLBound(psa, 1, &lLbound);\n    SafeArrayGetUBound(psa, 1, &lUbound);\n\n    std::vector<std::string> cellData;\n\n    for (long i = lLbound; i <= lUbound; i++) {\n        VARIANT* pvTemp;\n        SafeArrayGetElement(psa, &i, reinterpret_cast<void*>(&pvTemp));\n\n        // Convert BSTR to std::string\n        if (pvTemp->vt == VT_BSTR) {\n            cellData.push_back(std::wstring_convert<std::codecvt_utf8<wchar_t>>().to_bytes(pvTemp->bstrVal));\n        }\n\n        VariantClear(pvTemp);\n    }\n\n    // Now cellData contains the values from A1 to B1\n}