// Example of using FakeIt for dependency injection and isolation in tests.\n#include "fakeit.hpp"\n#include <iostream>\n\nusing namespace fakeit;\n\nstruct Interface {\n    virtual int GetValue() const = 0;\n};\n\nclass Adder {\npublic:\n    explicit Adder(const Interface& valueProvider) : _valueProvider(valueProvider) {}\n\n    int Add(int v1, int v2) const { return v1 + v2 + _valueProvider.GetValue(); }\nprivate:\n    const Interface& _valueProvider;\n};\n\nTEST(AdderTestWithMocking, CheckAddMethod) {\n    Mock<Interface> mock;\n\n    // Configure the mock\n    When(Method(mock, GetValue)).Return(4);\n\n    Adder adder(mock.get());\n    int result = adder.Add(1, 2);\n    Assert::AreEqual(7, result);\n}