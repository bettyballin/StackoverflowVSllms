#include <openssl/aes.h>\n#include <iostream>\n#include <string>\n\nvoid Encrypt(const std::string& plaintext, unsigned char* key, unsigned char* iv, unsigned char* ciphertext) {\n    AES_KEY enc_key;\n    AES_set_encrypt_key(key, 256, &enc_key);\n    AES_cbc_encrypt((unsigned char*)plaintext.c_str(), ciphertext, plaintext.size() + 1, &enc_key, iv, AES_ENCRYPT);\n}\n\nvoid Decrypt(const std::string& ciphertext, unsigned char* key, unsigned char* iv, unsigned char* decryptedtext) {\n    AES_KEY dec_key;\n    AES_set_decrypt_key(key, 256, &dec_key);\n    AES_cbc_encrypt((unsigned char*)ciphertext.c_str(), decryptedtext, ciphertext.size() + 1, &dec_key, iv, AES_DECRYPT);\n}\n\nint main() {\n    std::string plaintext = "Here is some data to encrypt!";\n    unsigned char key[32]; // 256-bit key\n    for (size_t i = 0; i < sizeof(key); ++i) key[i] = 'k'; // example key\n    unsigned char iv[AES_BLOCK_SIZE]; // Initialization Vector\n    memset(iv, '0', AES_BLOCK_SIZE);\n    \n    unsigned char ciphertext[128];\n    Encrypt(plaintext, key, iv, ciphertext);\n\n    unsigned char decryptedtext[128];\n    Decrypt((const std::string&)ciphertext, key, iv, decryptedtext);\n\n    std::cout << "Decrypted text: " << decryptedtext << std::endl;\n    \n    return 0;\n}