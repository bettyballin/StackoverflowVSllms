#include <windows.h>\n#include <stdio.h>\n\nint main() {\n    HWND hWnd = FindWindow(NULL, "Untitled - Notepad");\n    if (hWnd == NULL) {\n        printf("Could not find Notepad window.\n");\n        return 1;\n    }\n\n    DWORD pid;\n    GetWindowThreadProcessId(hWnd, &pid);\n    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pid);\n\n    if (hProcess == NULL) {\n        printf("Failed to open process. Error: %d\n", GetLastError());\n        return 1;\n    }\n\n    const char *message = "Hello from injected code!";\n    void* pRemoteMessage = VirtualAllocEx(hProcess, NULL, strlen(message) + 1, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);\n    if (pRemoteMessage == NULL) {\n        printf("Failed to allocate memory in remote process. Error: %d\n", GetLastError());\n        CloseHandle(hProcess);\n        return 1;\n    }\n\n    BOOL success = WriteProcessMemory(hProcess, pRemoteMessage, message, strlen(message) + 1, NULL);\n    if (!success) {\n        printf("WriteProcessMemory failed. Error: %d\n", GetLastError());\n        VirtualFreeEx(hProcess, pRemoteMessage, 0, MEM_RELEASE);\n        CloseHandle(hProcess);\n        return 1;\n    }\n\n    CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)((void (*)())MessageBoxA), "Notepad", MB_OK | MB_ICONINFORMATION, (LPVOID)pRemoteMessage);\n\n    VirtualFreeEx(hProcess, pRemoteMessage, 0, MEM_RELEASE);\n    CloseHandle(hProcess);\n    return 0;\n}