#include <iostream>\n#include <unordered_set>\n#include <string>\n\nusing namespace std;\n\nbool isHappy(int n, unordered_set<int>& seen) {\n    while (n != 1 && seen.find(n) == seen.end()) {\n        seen.insert(n);\n        int sum = 0;\n        while (n > 0) {\n            int digit = n % 10;\n            sum += digit * digit;\n            n /= 10;\n        }\n        n = sum;\n    }\n    return n == 1;\n}\n\nvoid calcMain(int upperBound) {\n    for (int i = 0; i <= upperBound; ++i) {\n        unordered_set<int> seen;\n        if (isHappy(i, seen)) {\n            // cout << i << "\t";\n        }\n    }\n    // cout << "\n\n";\n}\n\nint main() {\n    while (true) {\n        int upperBound;\n        cout << "Pick an upper bound: ";\n        cin >> upperBound;\n        auto start = clock();\n        calcMain(upperBound);\n        auto end = clock();\n        double seconds = static_cast<double>(end - start) / CLOCKS_PER_SEC;\n        cout << seconds << " seconds." << endl << endl;\n    }\n    return 0;\n}