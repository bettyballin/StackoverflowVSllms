#include <windows.h>\n#include <iostream>\n\nbool ModifyRegistryWithMutex() {\n    HANDLE hMutex = CreateMutex(NULL, FALSE, TEXT("Global\\MyUniqueMutexName"));\n    if (hMutex == NULL) {\n        std::cerr << "Could not create mutex." << std::endl;\n        return false;\n    }\n\n    DWORD dwWaitResult = WaitForSingleObject(hMutex, INFINITE);\n    if (dwWaitResult != WAIT_OBJECT_0) {\n        CloseHandle(hMutex);\n        std::cerr << "Could not get mutex." << std::endl;\n        return false;\n    }\n\n    // Critical section: Modify the registry here\n    HKEY hKey;\n    LONG result = RegOpenKeyEx(HKEY_LOCAL_MACHINE, TEXT(" SOFTWARE\\MySoftware"), 0, KEY_WRITE, &hKey);\n    if (result == ERROR_SUCCESS) {\n        DWORD newValue = 1;\n        result = RegSetValueEx(hKey, TEXT("ValueName"), 0, REG_DWORD, reinterpret_cast<BYTE*>(&newValue), sizeof(newValue));\n        if (result != ERROR_SUCCESS) {\n            std::cerr << "Error setting registry value." << std::endl;\n        }\n        RegCloseKey(hKey);\n    } else {\n        std::cerr << "Error opening key." << std::endl;\n    }\n\n    ReleaseMutex(hMutex);\n    CloseHandle(hMutex);\n    return result == ERROR_SUCCESS;\n}