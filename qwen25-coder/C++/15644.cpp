#include "mex.h"\n#include <windows.h>\n\nvoid mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) {\n    HANDLE hMapFile;\n    LPCTSTR pBuf;\n\n    // Create a named file mapping object.\n    hMapFile = CreateFileMapping(\n                         INVALID_HANDLE_VALUE,    // use paging file\n                         NULL,                    // default security\n                         PAGE_READWRITE,          // read/write access\n                         0,                       // maximum object size (high-order DWORD)\n                         BUFSIZE,                 // maximum object size (low-order DWORD)\n                         szName);                 // name of mapping object\n\n    if (hMapFile == NULL) {\n        mexErrMsgIdAndTxt("MATLAB:memorymap","Could not create file map. Error %ld.\n", GetLastError());\n    }\n\n    // Get a pointer to the file-mapped shared memory.\n    pBuf = (LPTSTR) MapViewOfFile(hMapFile,   // handle to map object\n                                   FILE_MAP_ALL_ACCESS, // read/write permission\n                                   0,\n                                   0,\n                                   BUFSIZE);\n\n    if (pBuf == NULL) {\n        mexErrMsgIdAndTxt("MATLAB:memorymap","Could not map view of file. Error %ld.\n", GetLastError());\n       CloseHandle(hMapFile);\n    }\n\n    // Copy data to the shared memory\n    char *data = mxArrayToString(prhs[0]);\n    strncpy((char*)pBuf, data, strlen(data));\n\n    UnmapViewOfFile(pBuf);\n    CloseHandle(hMapFile);\n\n    mxFree(data); // Free allocated string by mxArrayToString.\n}