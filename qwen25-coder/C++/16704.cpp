template <typename T, bool isRawInt>\n    struct PolicyWrapper;\n\n    template <typename T>\n    struct PolicyWrapper<T, true> {\n        using type = T;\n        static T& get(T& t) { return t; }\n    };\n\n    template <typename T>\n    struct PolicyWrapper<T, false> {\n        WrappedInt w;\n        PolicyWrapper(int val) : w(val) {}\n        int value() const { return w.v; }\n    };