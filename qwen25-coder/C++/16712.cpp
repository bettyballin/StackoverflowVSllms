m_accept_fd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\nif (m_accept_fd == INVALID_SOCKET) {\n    int errCode = WSAGetLastError();\n    printf("Failed to create socket. Error Code: %d\n", errCode);\n    return false;\n}\n\nint optval = 1;\n\nif (setsockopt(m_accept_fd, SOL_SOCKET, SO_REUSEADDR,\n               (char*)&optval, sizeof(optval))) {\n    int errCode = WSAGetLastError();\n    printf("Failed to set socket options. Error Code: %d\n", errCode);\n    closesocket(m_accept_fd);\n    m_accept_fd = INVALID_SOCKET;\n    return false;\n}\n\nstruct sockaddr_in  local_addr;\nlocal_addr.sin_family = AF_INET;\nlocal_addr.sin_addr.s_addr = INADDR_ANY;\nlocal_addr.sin_port = htons(m_port);\n\nif (bind(m_accept_fd, (struct sockaddr *)&local_addr,\n         sizeof(struct sockaddr_in)) == SOCKET_ERROR) {\n    int errCode = WSAGetLastError();\n    printf("Failed to bind socket. Error Code: %d\n", errCode);\n    closesocket(m_accept_fd);\n    return false;\n}\n\nif (listen(m_accept_fd, 5) == SOCKET_ERROR) {\n    int errCode = WSAGetLastError();\n    printf("Failed to listen on socket. Error Code: %d\n", errCode);\n    closesocket(m_accept_fd);\n    return false;\n}