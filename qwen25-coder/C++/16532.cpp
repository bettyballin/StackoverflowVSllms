#include <iostream>\n#include <ctime>\n\nint getISOWeekNumber(int year, int month, int day) {\n    // Set up the tm structure with the provided date\n    std::tm timeInfo = {};\n    timeInfo.tm_year = year - 1900; // tm_year is years since 1900\n    timeInfo.tm_mon = month - 1;   // tm_mon is 0-based (0=January, ..., 11=December)\n    timeInfo.tm_mday = day;\n    \n    // Normalize the time structure after setting up to avoid issues\n    std::mktime(&timeInfo);\n\n    // Get the weekday and day of the year for the given date\n    int wday = timeInfo.tm_wday; // Day of week (0=Sunday, ..., 6=Saturday)\n    int dayOfYear = timeInfo.tm_yday + 1; // Day of year is zero-based\n\n    // Find Jan 4th of the same year (ISO week date years always start with a Thursday)\n    std::tm jan4th = timeInfo;\n    jan4th.tm_mon = 0; // January\n    jan4th.tm_mday = 4;\n    std::mktime(&jan4th);\n    int jan4thWeekDay = jan4th.tm_wday;\n\n    // Calculate the week number\n    int dayOfFirstThursday = (11 - jan4thWeekDay) % 7 + 4; // Find first Thursday of the year\n    if (dayOfYear >= dayOfFirstThursday) {\n        return ((dayOfYear - dayOfFirstThursday + 7) / 7) + 1;\n    } else { // Day is part of last week of previous year\n        return getISOWeekNumber(year - 1, 12, 31);\n    }\n}\n\nint main() {\n    int year = 2008;\n    int month = 1;\n    int day = 10;\n\n    int weekNumber = getISOWeekNumber(year, month, day);\n    std::cout << "The week number for " << year << "-" << month << "-" << day << " is: " << weekNumber << std::endl;\n\n    return 0;\n}