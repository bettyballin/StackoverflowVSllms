#include <Windows.h>\n\nint RunAsStandardUser(const std::wstring& appPath) {\n    STARTUPINFOW si = { sizeof(si) };\n    PROCESS_INFORMATION pi = {};\n    \n    // Define the user and domain if necessary (empty for current)\n    LPCWSTR username = L"";\n    LPCWSTR domain = NULL;\n    LPCWSTR password = L"";\n\n    // Create the process with limited rights\n    BOOL result = CreateProcessWithLogonW(\n        username,\n        domain,\n        password,\n        LOGON_WITH_PROFILE,\n        NULL,  // App path is part of lpCommandLine if lpApplicationName is NULL\n        const_cast<LPWSTR>(appPath.c_str()),\n        CREATE_UNICODE_ENVIRONMENT | NORMAL_PRIORITY_CLASS,\n        NULL,   // Environment\n        NULL,   // Current directory (NULL uses callerâ€™s)\n        &si,\n        &pi);\n\n    if (!result) {\n        DWORD error = GetLastError();\n        wprintf(L"Failed to start process with limited user rights. Error: %d\n", error);\n        return -1;\n    }\n\n    WaitForSingleObject(pi.hProcess, INFINITE);  // Wait for the app to complete\n    CloseHandle(pi.hThread);\n    CloseHandle(pi.hProcess);\n\n    return 0;  // Success\n}\n\nint main() {\n    std::wstring appPath = L"C:\\path\\to\\your\\application.exe";\n    \n    int result = RunAsStandardUser(appPath);\n    if (result == 0) {\n        wprintf(L"Application started successfully with limited rights.\n");\n    }\n\n    return result;\n}