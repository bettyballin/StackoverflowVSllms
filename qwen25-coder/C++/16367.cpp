#include <iostream>\n#include <vector>\n#include <cmath>\n\nstruct Point {\n    double x;\n    double y;\n};\n\ndouble distance(const Point& p1, const Point& p2) {\n    return std::sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));\n}\n\nint countPointsWithinRadius(const std::vector<Point>& points, const Point& target, double radius) {\n    int count = 0;\n    for (const auto& point : points) {\n        if (distance(point, target) <= radius) {\n            ++count;\n        }\n    }\n    return count;\n}\n\nint main() {\n    std::vector<Point> points = {{100, 200}, {150, 250}, {200, 300}, {300, 400}};\n    Point target = {150, 250};\n    double radius = 100.0;\n\n    int pointsInRadius = countPointsWithinRadius(points, target, radius);\n    std::cout << "Number of points within radius: " << pointsInRadius << std::endl;\n\n    return 0;\n}