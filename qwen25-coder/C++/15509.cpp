#include <windows.h>\n#include <stdio.h>\n\nvoid WatchDirectory(LPCWSTR path) {\n    HANDLE hDir = CreateFile(\n        path,\n        FILE_LIST_DIRECTORY,\n        FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n        NULL,\n        OPEN_EXISTING,\n        FILE_FLAG_BACKUP_SEMANTICS,\n        NULL\n    );\n\n    if (hDir == INVALID_HANDLE_VALUE) {\n        wprintf(L"CreateFile failed (%d)\n", GetLastError());\n        return;\n    }\n\n    char buffer[1024];\n    DWORD bytesReturned;\n\n    while (ReadDirectoryChangesW(\n        hDir,\n        buffer,\n        sizeof(buffer),\n        TRUE, // watch the directory tree\n        FILE_NOTIFY_CHANGE_FILE_NAME |\n        FILE_NOTIFY_CHANGE_DIR_NAME |\n        FILE_NOTIFY_CHANGE_ATTRIBUTES |\n        FILE_NOTIFY_CHANGE_SIZE |\n        FILE_NOTIFY_CHANGE_LAST_WRITE |\n        FILE_NOTIFY_CHANGE_LAST_ACCESS |\n        FILE_NOTIFY_CHANGE_CREATION |\n        FILE_NOTIFY_CHANGE_SECURITY,\n        &bytesReturned,\n        NULL,\n        NULL)) {\n\n        PFILE_NOTIFY_INFORMATION pNotify = \n            (PFILE_NOTIFY_INFORMATION)buffer;\n        \n        do {\n            wprintf(L"Action: 0x%.8X\n", pNotify->Action);\n            wprintf(L"FileName: %.*s\n", pNotify->FileNameLength / sizeof(WCHAR), pNotify->FileName);\n\n            pNotify = pNotify->NextEntryOffset \n                      ? (PFILE_NOTIFY_INFORMATION)((char *)pNotify + pNotify->NextEntryOffset) \n                      : 0;           \n        } while (pNotify);\n    }\n\n    CloseHandle(hDir);\n}\n\nint main() {\n    WatchDirectory(L"C:\\test");\n    return 0;\n}