#include <cstdio>\n\nclass FunctorA {};\nclass FunctorB {};\n\ntemplate <class ItemType, class Functor> class MyContainer {\npublic:\n    MyContainer() : _metaData(0) {/* empty */}\n\n    // Declare the templated friend\n    template<class OtherFunctor> friend class MyContainer;\n\n    template<class RHSFunctor> void CopyFrom(const MyContainer<ItemType, RHSFunctor>& copyFrom)\n    {\n        _metaData = copyFrom._metaData;\n        _item = copyFrom._item;\n    }\n\nprivate:\n    int _metaData;\n    ItemType _item;\n};\n\nint main(int argc, char **argv) {\n    MyContainer<void *, FunctorA> containerA;\n    MyContainer<void *, FunctorB> containerB;\n\n    containerA.CopyFrom(containerB);  // This will now work\n    return 0;\n}