#include <type_traits>\n\ntemplate<typename T>\nclass ObservableList {\n    // Static assert to ensure T is derived from List or is List itself\n    static_assert(std::is_base_of<std::list<int>, T>::value || std::is_same<std::list<int>, T>::value, \n                  "T must be a specialization of std::list");\n\n    /* ... */\n};\n\n// Example usage: This will compile\nusing MyList = std::list<int>;\nObservableList<MyList> myList;\n\n// Example usage: This will not compile due to static_assert failure\n// using WrongType = int;\n// ObservableList<WrongType> wrong;  // Static assertion failed!