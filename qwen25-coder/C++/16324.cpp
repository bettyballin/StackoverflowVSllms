#include <iostream>\n#include <string>\n#include <vector>\n\nstruct HTMLTag {\n    std::string tag;\n    std::vector<HTMLTag*> children;\n\n    HTMLTag(const std::string& t) : tag(t) {}\n\n    ~HTMLTag() {\n        for (auto child : children) {\n            delete child;\n        }\n    }\n\n    void addChild(HTMLTag* child) {\n        children.push_back(child);\n    }\n};\n\nvoid printTree(const HTMLTag* node, int level = 0) {\n    for (int i = 0; i < level; ++i) {\n        std::cout << "  ";\n    }\n    std::cout << node->tag << std::endl;\n    for (const auto& child : node->children) {\n        printTree(child, level + 1);\n    }\n}\n\nint main() {\n    HTMLTag* root = new HTMLTag("HTML");\n    HTMLTag* head = new HTMLTag("HEAD");\n    HTMLTag* body = new HTMLTag("BODY");\n    HTMLTag* scriptHead = new HTMLTag("SCRIPT");\n\n    // Insert child tags\n    root->addChild(head);\n    root->addChild(body);\n\n    // Insert script after HEAD\n    auto it = root->children.begin();\n    ++it;  // Move iterator to position after head\n    root->children.insert(it, scriptHead);\n\n    printTree(root);\n\n    delete root;\n    return 0;\n}