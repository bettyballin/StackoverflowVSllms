// a.cpp, compiled with g++\n#include <iostream>\n#include "interface.h"\n\nextern "C" IClass* CreateClass()\n{\n    class A : public IClass {\n        unsigned refCnt;\n    public:\n        A() : refCnt(1) {}\n        virtual ~A() override {\n            if(refCnt) throw "Object deleted while refCnt non-zero!";\n            std::cout << "Bye from A.\n";\n        }\n        virtual void AddRef() override {\n            ++refCnt;\n        }\n        virtual void Release() override {\n            if(!--refCnt)\n                delete this;\n        }\n\n        virtual void PrintSomething() override {\n            std::cout << "Hello World from A!" << std::endl;\n        }\n    };\n\n    return new A();\n}