#include <list>\n\n// Assuming item and CheckItemNotActive are defined elsewhere\n\nvoid updateAndRemoveInactiveItems(std::list<item*>& items) {\n    for (std::list<item*>::iterator i = items.begin(); i != items.end(); ) {\n        bool isActive = (*i)->update();\n        if (!isActive) {\n            // Erase the current element and get the next iterator\n            i = items.erase(i);\n        } else {\n            // Element is active, move to the next one\n            ++i;\n            other_code_involving(*i);\n        }\n    }\n}