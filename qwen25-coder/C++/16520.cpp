// dynamic_main.cpp\n   #include <iostream>\n   #include <windows.h>\n\n   typedef MyClass* (*CreateFunc)();\n   typedef void (*DestroyFunc)(MyClass*);\n\n   int main() {\n       HMODULE hModule = LoadLibrary("MyDll.dll");\n       if (!hModule) {\n           std::cerr << "Failed to load DLL" << std::endl;\n           return 1;\n       }\n\n       CreateFunc createFunc = (CreateFunc)GetProcAddress(hModule, "CreateMyClass");\n       DestroyFunc destroyFunc = (DestroyFunc)GetProcAddress(hModule, "DestroyMyClass");\n       if (!createFunc || !destroyFunc) {\n           std::cerr << "Failed to get function address" << std::endl;\n           FreeLibrary(hModule);\n           return 1;\n       }\n\n       MyClass* myObject = createFunc();\n       myObject->DoSomething();\n\n       destroyFunc(myObject);\n\n       FreeLibrary(hModule);\n       return 0;\n   }