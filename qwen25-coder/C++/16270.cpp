#include <iostream>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n\nint main() {\n    int client_fd;\n    struct sockaddr_in server_addr;\n\n    if ((client_fd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {\n        std::cerr << "Socket creation error" << std::endl;\n        return -1;\n    }\n\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(8000); // Replace with the port you configured for JDWP\n\n    if(inet_pton(AF_INET, "127.0.0.1", &server_addr.sin_addr) <= 0) {\n        std::cerr << "Invalid address/ Address not supported" << std::endl;\n        return -1;\n    }\n\n    if (connect(client_fd, (struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) {\n        std::cerr << "Connection Failed" << std::endl;\n        return -1;\n    }\n\n    char buffer[1024] = {0};\n    send(client_fd , "JDWP-Handshake", strlen("JDWP-Handshake"), 0);\n    read(client_fd, buffer, 1024);\n    std::cout << "Server response: " << buffer << std::endl;\n\n    close(client_fd);\n    return 0;\n}