#include <sqlite3.h>\n#include <iostream>\n\nstatic int callback(void* NotUsed, int argc, char** argv, char** azColName) {\n    for (int i = 0; i < argc; i++) {\n        std::cout << azColName[i] << " = " << (argv[i] ? argv[i] : "NULL") << std::endl;\n    }\n    std::cout << std::endl;\n    return 0;\n}\n\nint main() {\n    sqlite3* db;\n    char* errMsg = 0;\n    int rc;\n\n    // Open an in-memory database\n    rc = sqlite3_open(":memory:", &db);\n    if (rc) {\n        std::cerr << "Can't open database: " << sqlite3_errmsg(db) << std::endl;\n        return 1;\n    }\n\n    const char* sql = "CREATE TABLE Test(Id INT, Name TEXT); "\n                      "INSERT INTO Test VALUES(1, 'Sample');";\n\n    // Execute SQL commands\n    rc = sqlite3_exec(db, sql, callback, 0, &errMsg);\n    if (rc != SQLITE_OK) {\n        std::cerr << "SQL error: " << errMsg << std::endl;\n        sqlite3_free(errMsg);\n    }\n\n    // Query data\n    sql = "SELECT * FROM Test;";\n    rc = sqlite3_exec(db, sql, callback, 0, &errMsg);\n    if (rc != SQLITE_OK) {\n        std::cerr << "SQL error: " << errMsg << std::endl;\n        sqlite3_free(errMsg);\n    }\n\n    // Close the database\n    sqlite3_close(db);\n\n    return 0;\n}