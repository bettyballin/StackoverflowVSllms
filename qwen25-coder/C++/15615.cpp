#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nclass CFileInfo {\npublic:\n    std::string m_PackLine;\n    std::string m_FileDateTime;  // Ensure this format is consistent for accurate comparison\n    int m_NumDownloads;\n\n    // Constructor for convenience\n    CFileInfo(const std::string& line, const std::string& dateTime, int downloads)\n        : m_PackLine(line), m_FileDateTime(dateTime), m_NumDownloads(downloads) {}\n};\n\n// Comparator function to sort by `m_FileDateTime`\nbool compareByDateTime(const CFileInfo& a, const CFileInfo& b) {\n    return a.m_FileDateTime < b.m_FileDateTime; // Assumes lexicographical order is correct\n}\n\nint main() {\n    std::vector<CFileInfo> unsortedFiles;\n\n    // Sample data insertion\n    unsortedFiles.push_back(CFileInfo("Sample Line 1", "06/22/2008 04:34", 0));\n    unsortedFiles.push_back(CFileInfo("Sample Line 2", "12/05/2007 14:54", 1));\n\n    // Sorting\n    std::sort(unsortedFiles.begin(), unsortedFiles.end(), compareByDateTime);\n\n    // Output sorted data\n    for (const auto& packInfo : unsortedFiles) {\n        std::cout << "Pack Line: " << packInfo.m_PackLine \n                  << ", File DateTime: " << packInfo.m_FileDateTime \n                  << "\n";\n    }\n\n    return 0;\n}