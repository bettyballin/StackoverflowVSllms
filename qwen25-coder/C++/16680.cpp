#include <windows.h>\n#include <iostream>\n\nint main() {\n    STARTUPINFO si;\n    PROCESS_INFORMATION pi;\n\n    ZeroMemory(&si, sizeof(si));\n    si.cb = sizeof(si);\n    ZeroMemory(&pi, sizeof(pi));\n\n    // Command line to execute another executable, e.g., notepad.exe\n    if (!CreateProcess(NULL,   // No module name (use command line)\n                       "notepad.exe",        // Command line\n                       NULL,           // Process handle not inheritable\n                       NULL,           // Thread handle not inheritable\n                       FALSE,          // Set handle inheritance to FALSE\n                       0,              // No creation flags\n                       NULL,           // Use parent's environment block\n                       NULL,           // Use parent's starting directory \n                       &si,            // Pointer to STARTUPINFO structure\n                       &pi) )           // Pointer to PROCESS_INFORMATION structure\n    {\n        std::cerr << "CreateProcess failed (" << GetLastError() << ")." << std::endl;\n        return 1;\n    }\n\n    // Wait until child process exits.\n    WaitForSingleObject(pi.hProcess, INFINITE);\n\n    // Close process and thread handles. \n    CloseHandle(pi.hProcess);\n    CloseHandle(pi.hThread);\n\n    return 0;\n}