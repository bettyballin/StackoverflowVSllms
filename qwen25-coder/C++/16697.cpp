#include <iostream>\n#include <windows.h>\n\nvoid printSome(int i)\n{\n    std::cout << i << std::endl;\n}\n\nDWORD WINAPI ThreadFunction(LPVOID lpParam)\n{\n    int* param = static_cast<int*>(lpParam);\n    printSome(*param); // Call the function with the passed parameter\n    return 0;\n}\n\nvoid spawnThread(void (*threadFunc)(int), int param)\n{\n    HANDLE hThread;\n\n    // Allocate memory for the integer to be passed to the thread\n    int* threadData = new int(param);\n\n    // Create the thread and pass the address of the integer as the argument\n    hThread = CreateThread(\n        nullptr,          // default security attributes\n        0,                // use default stack size \n        ThreadFunction,   // thread function name\n        threadData,       // argument to thread function \n        0,                // use default creation flags \n        nullptr           // returns the thread identifier \n    );\n\n    if (hThread == nullptr)\n    {\n        std::cerr << "Failed to create thread" << std::endl;\n        delete threadData; // Clean up if thread was not created\n        return;\n    }\n\n    WaitForSingleObject(hThread, INFINITE); // Wait for the thread to finish\n    CloseHandle(hThread);\n    delete threadData; // Clean up after the thread has finished\n}\n\nint main()\n{\n    spawnThread(printSome, 155);\n}