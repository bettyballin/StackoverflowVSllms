#include <iostream>\n#include <curl/curl.h>\n\nint main(void) {\n    CURL *curl;\n    CURLcode res;\n\n    struct curl_httppost *formpost = NULL;\n    struct curl_httppost *lastptr = NULL;\n    struct curl_slist *headerlist = NULL;\n    static const char buf[] = "Expect:";\n\n    curl_formadd(&formpost,\n                 &lastptr,\n                 CURLFORM_COPYNAME, "sendfile",\n                 CURLFORM_FILE, "/path/to/your/file.txt",\n                 CURLFORM_END);\n\n    curl_formadd(&formpost,\n                 &lastptr,\n                 CURLFORM_COPYNAME, "filename",\n                 CURLFORM_COPYCONTENTS, "myfile.txt",\n                 CURLFORM_END);\n\n    headerlist = curl_slist_append(headerlist, buf);\n\n    curl_global_init(CURL_GLOBAL_ALL);\n    curl = curl_easy_init();\n    if(curl) {\n        curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/upload/");\n        curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);\n        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headerlist);\n\n        res = curl_easy_perform(curl);\n\n        /* Check for errors */\n        if(res != CURLE_OK)\n            fprintf(stderr, "curl_easy_perform() failed: %s\n", curl_easy_strerror(res));\n\n        /* always cleanup */\n        curl_easy_cleanup(curl);\n    }\n\n    /* then cleanup the formpost chain */\n    curl_formfree(formpost);\n\n    /* free slist */\n    curl_slist_free_all(headerlist);\n\n    return 0;\n}