class CustomAudioNotifications : public IAudioSessionNotification {\npublic:\n    CustomAudioNotifications() { m_nRefCount = 1; }\n    ~CustomAudioNotifications() {}\n\n    // IUnknown interface.\n    STDMETHODIMP QueryInterface(REFIID riid, void **ppv) {\n        if (IsEqualGUID(__uuidof(IUnknown), riid) || IsEqualGUID(__uuidof(IAudioSessionNotification), riid)) {\n            *ppv = static_cast<IAudioSessionNotification*>(this);\n        } else {\n            *ppv = NULL;\n            return E_NOINTERFACE;\n        }\n        AddRef();\n        return S_OK;\n    }\n\n    STDMETHODIMP_(ULONG) AddRef() {\n        return InterlockedIncrement(&m_nRefCount);\n    }\n\n    STDMETHODIMP_(ULONG) Release() {\n        ULONG refCount = InterlockedDecrement(&m_nRefCount);\n        if (!refCount) delete this;\n        return refCount;\n    }\n\n    // IAudioSessionNotifications interface.\n    STDMETHODIMP OnSessionCreated(IAudioSessionControl *NewSession) {\n        // Handle the new session notification\n        // For example, you could print a message or log it\n        OutputDebugString(L"Audio session created.\n");\n        return S_OK;\n    }\n\nprivate:\n    LONG m_nRefCount;\n};