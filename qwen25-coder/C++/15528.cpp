#include <windows.h>\n\nBOOL AdjustServicePrivileges() {\n    HANDLE hToken;\n    LUID luid;\n\n    // Open the access token for the current service process.\n    if (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken)) return FALSE;\n\n    // Get the LUID for SeIncreaseBasePriorityPrivilege.\n    if (!LookupPrivilegeValue(NULL, SE_INCREASE_BASE_PRIORITY_NAME, &luid)) {\n        CloseHandle(hToken);\n        return FALSE;\n    }\n\n    // Assign the privilege to this process token.\n    TOKEN_PRIVILEGES tp;\n    tp.PrivilegeCount = 1;\n    tp.Privileges[0].Luid = luid;\n    tp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\n    if (!AdjustTokenPrivileges(hToken, FALSE, &tp, sizeof(TOKEN_PRIVILEGES), NULL, NULL)) {\n        CloseHandle(hToken);\n        return FALSE;\n    }\n\n    CloseHandle(hToken);\n    return TRUE;\n}\n\nvoid SetProcessAndThreadPriority(PROCESS_INFORMATION pi) {\n    // Ensure the process and thread handles have the correct access rights.\n    HANDLE hProc = OpenProcess(PROCESS_SET_INFORMATION, FALSE, pi.dwProcessId);\n    HANDLE hThread = OpenThread(THREAD_SET_INFORMATION, FALSE, pi.dwThreadId);\n\n    if (hProc && hThread) {\n        if (!SetPriorityClass(hProc, BELOW_NORMAL_PRIORITY_CLASS)) {\n            // Handle error\n        }\n\n        if (!SetThreadPriority(hThread, THREAD_PRIORITY_BELOW_NORMAL)) {\n            // Handle error\n        }\n\n        CloseHandle(hProc);\n        CloseHandle(hThread);\n    }\n}