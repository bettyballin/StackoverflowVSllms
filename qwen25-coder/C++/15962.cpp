#include <iostream>\n#include <string>\n#include <sstream>\n\nclass SimpleInterpreter {\npublic:\n    int evaluate(const std::string& expression) {\n        std::istringstream iss(expression);\n        int lhs, rhs;\n        char operation;\n\n        if (!(iss >> lhs >> operation >> rhs)) {\n            throw std::invalid_argument("Invalid expression");\n        }\n\n        switch (operation) {\n            case '+':\n                return lhs + rhs;\n            case '-':\n                return lhs - rhs;\n            case '*':\n                return lhs * rhs;\n            case '/':\n                if (rhs == 0) throw std::runtime_error("Division by zero");\n                return lhs / rhs;\n            default:\n                throw std::invalid_argument("Unknown operation");\n        }\n    }\n};\n\nint main() {\n    SimpleInterpreter interpreter;\n\n    try {\n        std::string codeblock1 = "5 + 3";\n        int result = interpreter.evaluate(codeblock1);\n        std::cout << "Result: " << result << std::endl;\n    } catch (const std::exception& e) {\n        std::cerr << "Error: " << e.what() << std::endl;\n    }\n\n    return 0;\n}