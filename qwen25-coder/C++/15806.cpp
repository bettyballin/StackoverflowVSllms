#include <windows.h>\n#include <tchar.h>\n#include <iostream>\n\nvoid GetVersionNumbers(const TCHAR* fileName) {\n    DWORD dwLen = GetFileVersionInfoSize(fileName, NULL);\n    if (dwLen == 0) {\n        std::cerr << "Error: Could not get version info size" << std::endl;\n        return;\n    }\n\n    BYTE* lpData = new BYTE[dwLen];\n    if (!GetFileVersionInfo(fileName, 0, dwLen, lpData)) {\n        delete[] lpData;\n        std::cerr << "Error: Could not get version info" << std::endl;\n        return;\n    }\n\n    VS_FIXEDFILEINFO* pVsffi;\n    UINT uLen;\n    if (!VerQueryValue(lpData, L"\\", (LPVOID*)&pVsffi, &uLen)) {\n        delete[] lpData;\n        std::cerr << "Error: Could not read version information" << std::endl;\n        return;\n    }\n\n    DWORD majorVersion = HIWORD(pVsffi->dwFileVersionMS);\n    DWORD minorVersion = LOWORD(pVsffi->dwFileVersionMS);\n    DWORD buildNumber  = HIWORD(pVsffi->dwFileVersionLS);\n    DWORD revision     = LOWORD(pVsffi->dwFileVersionLS);\n\n    std::cout << "File Version: " << majorVersion << "." << minorVersion \n              << "." << buildNumber << "." << revision << std::endl;\n\n    TCHAR subblock[50];\n    memcpy(subblock, _T("\\StringFileInfo\\040904B0\\"), 28); // Assuming English (United States) language\n    memcpy(subblock + 13, _T("FileVersion"), 24);\n    LPTSTR lpszVer = NULL;\n    if (!VerQueryValue(lpData, subblock, (LPVOID*)&lpszVer, &uLen)) {\n        delete[] lpData;\n        std::cerr << "Error: Could not read 'FileVersion' from version information" << std::endl;\n        return;\n    }\n    std::wcout << L"File Version String: " << lpszVer << std::endl;\n\n    memcpy(subblock + 13, _T("ProductVersion"), 27);\n    if (!VerQueryValue(lpData, subblock, (LPVOID*)&lpszVer, &uLen)) {\n        delete[] lpData;\n        std::cerr << "Error: Could not read 'ProductVersion' from version information" << std::endl;\n        return;\n    }\n    std::wcout << L"Product Version String: " << lpszVer << std::endl;\n\n    delete[] lpData;\n}\n\nint main() {\n    TCHAR fileName[MAX_PATH];\n    GetModuleFileName(NULL, fileName, MAX_PATH);\n    GetVersionNumbers(fileName);\n\n    return 0;\n}