#include <iostream>\n#include <cpuid.h>\n\ntypedef void (*ProcessDataFunc)(int*, int);\n\nvoid processDataGeneric(int* data, int size) {\n    // Generic code path\n    std::cout << "Using generic code path." << std::endl;\n    for (int i = 0; i < size; ++i) {\n        data[i] *= 2;\n    }\n}\n\n#ifdef __SSE3__\nvoid processDataSSE3(int* data, int size) {\n    // SSE3-specific optimized code path\n    std::cout << "Using SSE3 optimized code path." << std::endl;\n    // Example: Use SSE instructions here\n}\n#endif\n\nProcessDataFunc ChooseFunction() {\n    unsigned int eax, ebx, ecx, edx;\n\n    __cpuid(1, eax, ebx, ecx, edx);\n\n#ifdef __SSE3__\n    if (ecx & 0x1) { // Check for SSE3 support\n        return processDataSSE3;\n    }\n#endif\n    return processDataGeneric;\n}\n\nint main() {\n    static ProcessDataFunc processFunction = ChooseFunction();\n    \n    int data[5] = {1, 2, 3, 4, 5};\n    processFunction(data, 5);\n\n    for (int i = 0; i < 5; ++i) {\n        std::cout << data[i] << " ";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}