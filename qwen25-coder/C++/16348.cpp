#include <iostream>\n#include <cstring>\n#include <cstdio>\n\n#define BUFFER_SIZE 1024\n\nvoid processLine(const char* line) {\n    std::cout << "Processing line: " << line << std::endl;\n}\n\nbool readAndProcessLines(int socketFd) {\n    static char buffer[BUFFER_SIZE];\n    static char leftover[1024]; // Buffer for leftover data\n    int leftoverLen = 0;\n\n    while (true) {\n        char tempBuffer[BUFFER_SIZE];\n        int bytesRead = recv(socketFd, tempBuffer, BUFFER_SIZE - 1, 0);\n        if (bytesRead <= 0) break; // Handle end of connection or error\n\n        // Append new data to leftover\n        memcpy(leftover + leftoverLen, tempBuffer, bytesRead);\n        leftoverLen += bytesRead;\n\n        int start = 0;\n        while (true) {\n            char* crlf = strstr(leftover + start, "\r\n");\n            if (!crlf) break; // No complete line found\n\n            // Null-terminate and process the line\n            *crlf = '\0';\n            processLine(leftover + start);\n\n            // Move start to after the CRLF\n            start = (crlf - leftover) + 2;\n        }\n\n        // Copy any remaining incomplete line back to the beginning of the leftover buffer\n        memmove(leftover, leftover + start, leftoverLen - start);\n        leftoverLen -= start;\n    }\n\n    return true; // or some other logic for success/failure\n}