class CNumberFactory : public CComObjectRootEx<CComSingleThreadModel>,\n                       public IDispatchImpl<INumberFactory>\n{\npublic:\n    BEGIN_COM_MAP(CNumberFactory)\n        COM_INTERFACE_ENTRY(INumberFactory)\n    END_COM_MAP()\n\n    STDMETHOD(GetNumber)(BSTR numberName, INumber** pVal)\n    {\n        HRESULT hr = S_OK;\n        if (pVal == nullptr) return E_POINTER;\n\n        try\n        {\n            *pVal = nullptr;\n\n            if (_wcsicmp(numberName, L"One") == 0)\n            {\n                CComObject<COne>* pNumber;\n                hr = CComObject<COne>::CreateInstance(&pNumber);\n                if (SUCCEEDED(hr))\n                {\n                    pNumber->AddRef();\n                    *pVal = pNumber;\n                }\n            }\n\n            // Add other numbers similarly...\n        }\n        catch(...)\n        {\n            return E_FAIL;\n        }\n\n        return hr;\n    }\n};\n\n// Internal implementation of One\nclass COne : public CComObjectRootEx<CComSingleThreadModel>,\n             public IDispatchImpl<INumber>\n{\npublic:\n    BEGIN_COM_MAP(COne)\n        COM_INTERFACE_ENTRY(INumber)\n    END_COM_MAP()\n\n    STDMETHOD(get_Value)(LONG* pVal) { *pVal = 1; return S_OK; }\n};