#include <comdef.h>\n#import "C:\\Program Files\\Common Files\\Microsoft Shared\\OFFICE16\\mso.dll" no_namespace rename("RGB", "MSORGB")  // Path may vary based on your Office installation\n#import "C:\\Program Files\\Microsoft Office\\root\\Office16\\Excel.exe" no_namespace\n\n// ... (previous code)\n\ntry {\n    // Get the active workbook and worksheet\n    _WorkbookPtr pWorkbooks = application->GetWorkbooks();\n    WorkbookPtr pWorkbook = pWorkbooks->Item[1];  // Assuming the first workbook is opened\n    _WorksheetPtr pSheet = pWorkbook->GetWorksheets()->Item[1];  // Assuming the first sheet\n\n    // Define the range and get the values\n    _RangePtr pRange = pSheet->GetRange("A4:C4", Missing);\n    VARIANT vData;\n    vData = pRange->Value2;\n\n    // Safearray to hold data\n    SAFEARRAY* psa = vData.parray;\n\n    // Lock the safearray and get pointer to memory\n    long* plLBound, *plUBound;\n    SafeArrayGetLBound(psa, 1, plLBound);\n    SafeArrayGetUBound(psa, 1, plUBound);\n\n    // Assuming single row with 3 columns (A4:C4)\n    _variant_t* pValues = NULL;\n    HRESULT hr = SafeArrayAccessData(psa, (void**)&pValues);\n    if (SUCCEEDED(hr)) {\n        std::vector<std::wstring> cellValues;\n        for (long i = *plLBound; i <= *plUBound; ++i) {\n            _bstr_t bstrValue(pValues[i]);\n            cellValues.push_back(bstrValue);\n        }\n        SafeArrayUnaccessData(psa);\n\n        // Now you can use the values in cellValues vector\n    }\n\n    // Clean up BSTR\n    SysFreeString(wcharFileName);\n} catch (_com_error &e) {\n    std::wcout << L"Error: " << e.ErrorMessage() << std::endl;\n}