#include "MyLibrary.h"\n   #include <iostream>\n\n   template<typename T>\n   class TemplatedImpl : public MyClass {\n   private:\n       T data;\n   public:\n       TemplatedImpl(T val) : data(val) {}\n       ~TemplatedImpl() override = default;\n\n       void doSomething() override {\n           std::cout << "Doing something with: " << data << std::endl;\n       }\n   };\n\n   extern "C" MYLIBRARY_API MyClass* createMyClass(int arg) {\n       return new TemplatedImpl<int>(arg);\n   }\n\n   extern "C" MYLIBRARY_API void destroyMyClass(MyClass* obj) {\n       delete obj;\n   }