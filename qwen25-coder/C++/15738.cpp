#include <QApplication>\n#include <QWidget>\n\n// Assuming a global or thread-safe static storage to hold your mappings.\nstatic QMap<HWND, QWidget*> hwndToQWidgetMap;\n\nLRESULT CALLBACK CBTProc(int nCode, WPARAM wParam, LPARAM lParam) {\n    if (nCode == HCBT_CREATEWND) {\n        CREATESTRUCT* createStruct = reinterpret_cast<CREATESTRUCT*>(lParam);\n        HWND hwnd = reinterpret_cast<HWND>(wParam);\n\n        // Check if the class name matches QWidget's\n        TCHAR className[MAX_PATH];\n        GetClassName(hwnd, className, MAX_PATH);\n        if (_tcscmp(className, _T("QWidget")) == 0) {\n            QApplication* app = qApp;\n            QWidgetList widgets = app->allWidgets();\n\n            // Find matching widget using Win API functions.\n            for (QWidget* widget : widgets) {\n                if (widget->winId() == hwnd) {\n                    hwndToQWidgetMap[hwnd] = widget;\n                    break;\n                }\n            }\n        }\n    }\n\n    return CallNextHookEx(NULL, nCode, wParam, lParam);\n}