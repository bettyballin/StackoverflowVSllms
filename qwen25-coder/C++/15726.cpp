#include <stack>\n#include <GL/gl.h>\n\nclass GLEnvironmentStack {\nprivate:\n    std::stack<GLenum> enabledStates;\n    struct BlendFuncSettings {\n        GLenum sfactor, dfactor;\n        BlendFuncSettings(GLenum s = 0, GLenum d = 0) : sfactor(s), dfactor(d) {}\n    };\n    BlendFuncSettings currentBlendFunc;\n\n    bool isDepthTestEnabled = true; // Default OpenGL state\n\npublic:\n    void pushEnv() {\n        enabledStates.push(isDepthTestEnabled ? GL_DEPTH_TEST : 0);\n        enabledStates.push(glIsEnabled(GL_BLEND) ? GL_BLEND : 0);\n        glGetIntegerv(GL_BLEND_SRC, &currentBlendFunc.sfactor);\n        glGetIntegerv(GL_BLEND_DST, &currentBlendFunc.dfactor);\n    }\n\n    void popEnv() {\n        if (!enabledStates.empty()) {\n            GLint blendState = enabledStates.top();\n            glDisable(GL_BLEND);\n            if (blendState == GL_BLEND) glEnable(GL_BLEND);\n\n            enabledStates.pop();\n\n            GLint depthTestState = enabledStates.top();\n            glDisable(GL_DEPTH_TEST);\n            if (depthTestState == GL_DEPTH_TEST) glEnable(GL_DEPTH_TEST);\n\n            enabledStates.pop();\n\n            if (currentBlendFunc.sfactor != 0 && currentBlendFunc.dfactor != 0)\n                glBlendFunc(currentBlendFunc.sfactor, currentBlendFunc.dfactor);\n        }\n    }\n\n    void enableDepthTest() {\n        glEnable(GL_DEPTH_TEST);\n        isDepthTestEnabled = true;\n    }\n\n    void disableDepthTest() {\n        glDisable(GL_DEPTH_TEST);\n        isDepthTestEnabled = false;\n    }\n\n    void enableBlend(GLenum sfactor, GLenum dfactor) {\n        glEnable(GL_BLEND);\n        glBlendFunc(sfactor, dfactor);\n        currentBlendFunc.sfactor = sfactor;\n        currentBlendFunc.dfactor = dfactor;\n    }\n\n    // Add other environment manipulation functions as needed\n};\n\n// Usage in your drawing code\nGLEnvironmentStack envStack;\n\nvoid drawScene() {\n    envStack.pushEnv();\n    envStack.enableBlend(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n    envStack.disableDepthTest();\n\n    // Draw operations go here\n\n    envStack.popEnv();  // Restore previous state\n}