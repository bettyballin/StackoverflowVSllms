#include <iostream>\n#include <string>\n#include <sys/types.h>\n#include <unistd.h>\n\nusing namespace std;\n\nint globalVariable = 2;\n\nmain()\n{\n   string sIdentifier;\n   int    iStackVariable = 20;\n\n   pid_t pID = vfork();\n   if (pID == 0)                // child\n   {\n      sIdentifier = "Child Process: ";\n      globalVariable++;\n      iStackVariable++;\n      printf("PROCESO NUMERO %d %s", getpid(), sIdentifier.c_str());\n      printf(" Global variable: %d Stack variable: %d\n", globalVariable, iStackVariable);\n      _exit(0); // Use _exit to avoid flushing buffers\n   }\n   else if (pID < 0)            // failed to fork\n   {\n        cerr << "Failed to fork" << endl;\n        return (1);\n   }\n   else                                   // parent\n   {\n      sIdentifier = "Parent Process: ";\n      printf("%s Global variable: %d Stack variable: %d\n", sIdentifier.c_str(), globalVariable, iStackVariable);\n   }\n\n   return (0);\n}