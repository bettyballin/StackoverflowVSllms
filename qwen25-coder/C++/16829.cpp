// dllheader.h\n#ifdef MYDLL_EXPORTS\n#define MYDLL_API __declspec(dllexport)\n#else\n#define MYDLL_API __declspec(dllimport)\n#endif\n\nextern "C" {\nMYDLL_API int CreateDllWindow();\nMYDLL_API void InitializeUserMain(void (*user_main)());\n}\n\nvoid MYDLL_API CreateMainWndProc(HWND, UINT, WPARAM, LPARAM);\nLRESULT CALLBACK MainWndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam);\n\nbool done = false;\n\n// dllmain.cpp\n#include <windows.h>\n#include "dllheader.h"\n\ntypedef void(*UserMainFunc)();\nstatic UserMainFunc user_main_func = nullptr;\n\nMYDLL_API void InitializeUserMain(void (*user_main)()) {\n    user_main_func = user_main;\n}\n\nMYDLL_API int CreateDllWindow() {\n    const char* className = "MyClass";\n    WNDCLASSEX wc = { sizeof(WNDCLASSEX), CS_HREDRAW | CS_VREDRAW, MainWndProc, 0, 0,\n                      GetModuleHandle(NULL), LoadIcon(NULL, IDI_APPLICATION),\n                      LoadCursor(NULL, IDC_ARROW), NULL, NULL, className, LoadIcon(NULL, IDI_APPLICATION) };\n    if (!RegisterClassEx(&wc)) return -1;\n\n    HWND hwnd = CreateWindow(className, "My Window", WS_OVERLAPPEDWINDOW,\n                             CW_USEDEFAULT, CW_USEDEFAULT, 800, 600,\n                             nullptr, nullptr, wc.hInstance, nullptr);\n    if (!hwnd) return -1;\n\n    ShowWindow(hwnd, SW_SHOW);\n\n    MSG msg;\n    while (!done && GetMessage(&msg, NULL, 0, 0)) {\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n    return (int)msg.wParam;\n}\n\nLRESULT CALLBACK MainWndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {\n    switch (msg) {\n    case WM_CREATE:\n        if (user_main_func) user_main_func(); // Call the user's main function\n        break;\n    case WM_DESTROY:\n        PostQuitMessage(0);\n        done = true;\n        return 0;\n    }\n    return DefWindowProc(hwnd, msg, wParam, lParam);\n}