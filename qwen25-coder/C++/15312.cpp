#include <windows.h>\n#include <wincrypt.h>\n#include <iostream>\n\n#pragma comment(lib, "advapi32.lib")\n\nstd::string CalculateMD5(const std::string& input) {\n    HCRYPTPROV hProv = 0;\n    HCRYPTHASH hHash = 0;\n    BYTE hash[16];\n    DWORD dataSize = sizeof(hash);\n    std::string output;\n\n    if (!CryptAcquireContext(&hProv, NULL, MS_DEF_PROV, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) return "";\n\n    if (!CryptCreateHash(hProv, CALG_MD5, 0, 0, &hHash)) {\n        CryptReleaseContext(hProv, 0);\n        return "";\n    }\n\n    if (!CryptHashData(hHash, (BYTE*)input.data(), input.size(), 0)) {\n        CryptDestroyHash(hHash);\n        CryptReleaseContext(hProv, 0);\n        return "";\n    }\n\n    if (!CryptGetHashParam(hHash, HP_HASHVAL, hash, &dataSize, 0)) {\n        CryptDestroyHash(hHash);\n        CryptReleaseContext(hProv, 0);\n        return "";\n    }\n\n    for (DWORD i = 0; i < dataSize; i++) {\n        char hex[3];\n        sprintf(hex, "%02x", hash[i]);\n        output.append(hex);\n    }\n\n    CryptDestroyHash(hHash);\n    CryptReleaseContext(hProv, 0);\n\n    return output;\n}\n\nint main() {\n    std::string input = "YourStringHere";\n    std::string md5 = CalculateMD5(input);\n    std::cout << "MD5: " << md5 << std::endl;\n\n    return 0;\n}