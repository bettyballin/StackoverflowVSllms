#include <Ogre.h>\n\ndouble getLightFactor(const Ogre::SceneManager* sceneManager, const Ogre::Vector3& position) {\n    double lightFactor = 0.0;\n    \n    // Iterate over all scene lights\n    for (unsigned int i = 0; i < sceneManager->getNumSceneNodes(); ++i) {\n        const Ogre::SceneNode *node = sceneManager->getSceneNode(i);\n        if (!node)\n            continue;\n\n        Ogre::Light* light = node->_getCreator()->getLight(node->getName());\n        if (light) {\n            float distanceToLight = position.distance(light->getPosition());\n\n            // Calculate attenuation\n            float attenuation = 1.0f;\n            switch (light->getType()) {\n                case Ogre::Light::LT_POINT:\n                    attenuation = 1 / (light->getAttenuationConstant() +\n                                      light->getAttenuationLinear() * distanceToLight +\n                                      light->getAttenuationQuadratic() * distanceToLight * distanceToLight);\n                    break;\n                // Add cases for other types of lights if needed\n            }\n\n            lightFactor += attenuation;\n        }\n    }\n\n    return lightFactor > 1.0 ? 1.0 : lightFactor; // Clamp between 0 and 1\n}\n\n// Example usage:\n// double factor = getLightFactor(sceneManager, character->getPosition());