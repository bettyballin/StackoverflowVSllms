#include <windows.h>\n#include <lmshare.h>\n#include <iostream>\n\n#pragma comment(lib, "netapi32.lib")\n\nint main() {\n    LPVOID pBuf = NULL;\n    NET_API_STATUS nStatus;\n    LPSHARE_INFO_2 p = NULL;\n    DWORD entriesRead = 0;\n    DWORD totalEntries = 0;\n    dwResumeHandle = 0;\n\n    // Define the server name\n    LPTSTR pszServerName = TEXT("\\\\1.2.3.4");\n\n    nStatus = NetShareEnum((LPWSTR)pszServerName,\n                           2, \n                           &pBuf, \n                           MAX_PREFERRED_LENGTH, \n                           &entriesRead, \n                           &totalEntries, \n                           (SDWORD *)&dwResumeHandle);\n\n    if ((nStatus == NERR_Success) || (nStatus == ERROR_MORE_DATA)) {\n        p = (LPSHARE_INFO_2)pBuf;\n\n        for (DWORD i = 0; i < entriesRead; i++) {\n            std::wcout << L"Share Name: " << p->shi2_netname << std::endl;\n            \n            // Optionally, print other fields\n            std::wcout << L"Type: " << p->shi2_type << std::endl;\n            std::wcout << L"Path: " << (p->shi2_path ? p->shi2_path : L"N/A") << std::endl;\n            std::wcout << L"Comment: " << (p->shi2_remark ? p->shi2_remark : L"N/A") << std::endl;\n\n            p++;\n        }\n    } else {\n        std::cerr << "Enum error: " << nStatus << std::endl;\n    }\n\n    // free the allocated buffer\n    if (pBuf != NULL) NetApiBufferFree(pBuf);\n\n    return 0;\n}