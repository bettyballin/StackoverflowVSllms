#include <iostream>\n#include <chrono>\n#include <thread>\n\n// Function to simulate a time-consuming task\nvoid heavyComputation() {\n    for (int i = 0; i < 1e8; ++i) {\n        // Some meaningless computation\n        double x = cos(i * 0.123456789);\n        (void)x; // Unused variable to prevent optimization\n    }\n}\n\n// Function that will call heavyComputation multiple times\nvoid performWork() {\n    std::this_thread::sleep_for(std::chrono::seconds(1)); // Sleep for a while\n    heavyComputation();\n    std::this_thread::sleep_for(std::chrono::seconds(2)); // Sleep again\n    heavyComputation();\n}\n\nint main() {\n    std::cout << "Starting work..." << std::endl;\n    performWork();\n    std::cout << "Finished work." << std::endl;\n\n    return 0;\n}