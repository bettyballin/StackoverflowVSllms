// dll1.h - Header file included by both DLLs\nclass internalclass {\npublic:\n    void method();\n    // Add new methods here, e.g.:\n    void newMethod(); \n};\n\n// Export macro for Windows (ensure this is defined appropriately in your project settings)\n#ifdef BUILDING_DLL1\n#define DLL_EXPORT __declspec(dllexport)\n#else\n#define DLL_EXPORT __declspec(dllimport)\n#endif\n\n// dll1.cpp - Source file of DLL 1\nclass internalclass m_class;\n\nextern "C" DLL_EXPORT internalclass* getInternalObject() {\n    return &m_class;\n}\n\nvoid internalclass::method() { /* Implementation */ }\nvoid internalclass::newMethod() { /* New functionality */ }\n\n// dll2.cpp - Source file of a calling DLL\n#include "dll1.h"\nDLL_EXPORT void useInternalClass() {\n    internalclass* classptr = getInternalObject();\n    classptr->method();      // Existing method call\n    classptr->newMethod();   // New method call\n}