#include <gtkmm/button.h>\n#include <gtkmm/window.h>\n\nclass HelloWorld : public Gtk::Window {\npublic:\n  HelloWorld();\n  \nprivate:\n  void on_button_clicked();\n\n  // Member widgets:\n  Gtk::Button m_button;\n};\n\n// Constructor of HelloWorld\nHelloWorld::HelloWorld()\n: m_button("Hello World")      // creates a new button with label "Hello World".\n{\n  set_border_width(10);\n  set_default_size(200, 200);\n  \n  add(m_button);                // Adds the button to this container.\n  m_button.show();              // Ensures that the button is shown onscreen.\n\n  m_button.signal_clicked().connect(\n      sigc::mem_fun(*this,\n                    &HelloWorld::on_button_clicked) );\n}\n\nvoid HelloWorld::on_button_clicked()\n{\n  std::cout << "Hello World! - Clicked." << std::endl;\n}\n\nint main(int argc, char *argv[])\n{\n  auto app = Gtk::Application::create(argc, argv, "org.gtkmm.example");\n\n  // Creates an instance of HelloWorld\n  HelloWorld hello;\n\n  // Shows the window and returns when it is closed.\n  return app->run(hello);\n}