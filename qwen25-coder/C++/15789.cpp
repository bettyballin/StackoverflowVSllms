#include <iostream>\n#include <functional>\n\n// A simple binder class that captures two parameters\ntemplate<typename Func, typename T1, typename T2>\nclass Binder {\nprivate:\n    Func func;\n    T1 arg1;\n    T2 arg2;\n\npublic:\n    Binder(Func f, T1 a1, T2 a2) : func(f), arg1(a1), arg2(a2) {}\n\n    void operator() () const {\n        func(arg1, arg2);\n    }\n};\n\nvoid exampleFunction(int x, int y) {\n    std::cout << "x: " << x << ", y: " << y << std::endl;\n}\n\nint main() {\n    Binder<void(*)(int, int), int, int> boundFunction(&exampleFunction, 5, 10);\n    boundFunction(); // Outputs: x: 5, y: 10\n    return 0;\n}