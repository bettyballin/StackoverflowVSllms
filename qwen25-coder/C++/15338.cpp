#include <afxwin.h>\n#include <vector>\n\nclass CLargeBitmapCreator {\nprivate:\n    HBITMAP hLargeBitmap;\n    HDC hdcMem;\n\npublic:\n    CLargeBitmapCreator() : hLargeBitmap(NULL), hdcMem(NULL) {}\n\n    ~CLargeBitmapCreator() {\n        if (hdcMem && hLargeBitmap)\n            SelectObject(hdcMem, GetStockObject(BLACK_BRUSH));\n\n        if (hLargeBitmap)\n            DeleteObject(hLargeBitmap);\n\n        if (hdcMem)\n            DeleteDC(hdcMem);\n    }\n\n    HDC CreateDIBSection(int width, int height) {\n        BITMAPINFO bmi = {0};\n        bmi.bmiHeader.biSize = sizeof(BITMAPINFOHEADER);\n        bmi.bmiHeader.biWidth = width;\n        bmi.bmiHeader.biHeight = -height; // Negative for top-down DIB\n        bmi.bmiHeader.biPlanes = 1;\n        bmi.bmiHeader.biBitCount = 32; // 32-bit pixel format\n\n        void* pBits = NULL;\n        hdcMem = CreateCompatibleDC(NULL);\n        hLargeBitmap = CreateDIBSection(hdcMem, &bmi, DIB_RGB_COLORS, &pBits, NULL, 0);\n\n        if (!hLargeBitmap || !SelectObject(hdcMem, hLargeBitmap))\n            return NULL;\n\n        // pBits can now be used to write pixel data directly\n        return hdcMem;\n    }\n\n    void DrawOnDIB(HDC hdc) {\n        // Example: Fill the bitmap with a blue color\n        HBRUSH hBrush = CreateSolidBrush(RGB(0, 0, 255));\n        RECT rc = {0, 0, 20000, 20000};\n        FillRect(hdc, &rc, hBrush);\n        DeleteObject(hBrush);\n    }\n};\n\nint main() {\n    CLargeBitmapCreator bitmapCreator;\n    HDC hdcMem = bitmapCreator.CreateDIBSection(20000, 20000);\n\n    if (hdcMem) {\n        bitmapCreator.DrawOnDIB(hdcMem);\n        // Further drawing/processing can be done here\n    }\n\n    return 0;\n}