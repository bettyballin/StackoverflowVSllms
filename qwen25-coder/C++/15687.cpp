class X {\npublic:\n    void foo(X& x) {}  // Can't take temporaries\n    void bar(const X& x) {}  // Can take const references to temporaries\n    void baz(X x) {}  // Can take any X, including temporaries by value\n};\n\nX makeTemp() { return X(); }\n\nvoid test() {\n    X x;\n    X& ref = x;  // Valid\n\n    x.foo(x);   // Valid\n//  x.foo(makeTemp());  // Invalid: cannot bind non-const lvalue reference to rvalue\n    x.bar(x);   // Valid\n    x.bar(makeTemp());  // Valid\n    x.baz(x);   // Valid\n    x.baz(makeTemp());  // Valid\n}