#include <iostream>\n#include <optional>\n\nclass Example {\npublic:\n    std::string GetComputedStuff() {\n        if (!computedStuff.has_value()) {\n            computedStuff = ComputeIntensiveTask();\n        }\n        return *computedStuff;\n    }\n\nprivate:\n    static std::string ComputeIntensiveTask() {\n        // Simulate a long computation\n        return "Expensive Computation Result";\n    }\n\n    std::optional<std::string> computedStuff;\n};\n\nint main() {\n    Example example;\n    std::cout << example.GetComputedStuff() << std::endl;\n    return 0;\n}