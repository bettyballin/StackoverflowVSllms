#include <windows.h>\n#include <aclapi.h>\n\nvoid GrantUsersWritePermissions(const std::wstring& folderPath) {\n    PSID pSID = NULL;\n    PACL pOldDACL, pNewDACL = NULL;\n    PSECURITY_DESCRIPTOR pSD = NULL;\n    EXPLICIT_ACCESS ea;\n\n    // Create a well-known SID for the Users group\n    SID_IDENTIFIER_AUTHORITY sidAuthWorld = SECURITY_NT_AUTHORITY;\n    if (!AllocateAndInitializeSid(&sidAuthWorld, 2,\n                                   SECURITY_BUILTIN_DOMAIN_RID,\n                                   DOMAIN_ALIAS_RID_USERS,\n                                   0, 0, 0, 0, 0, 0, &pSID)) {\n        goto Cleanup;\n    }\n\n    // Set up the new ACE to give write access to Users\n    ZeroMemory(&ea, sizeof(EXPLICIT_ACCESS));\n    ea.grfAccessPermissions = FILE_GENERIC_WRITE;\n    ea.grfAccessMode = GRANT_ACCESS;\n    ea.grfInheritance = FILE_OBJECT_CONTAINER_INHERIT | DIRECTORY_OBJECT_ADDFILE_INHERIT;\n    ea.Trustee.TrusteeForm = TRUSTEE_IS_SID;\n    ea.Trustee.TrusteeType = TRUSTEE_IS_WELL_KNOWN_GROUP;\n    ea.Trustee.ptstrName = (LPTSTR)pSID;\n\n    // Create a new ACL with the ACE\n    if (SetEntriesInAcl(1, &ea, NULL, &pNewDACL) != ERROR_SUCCESS)\n        goto Cleanup;\n\n    // Get current security descriptor for the object\n    if (GetNamedSecurityInfo(folderPath.c_str(), SE_FILE_OBJECT,\n                              DACL_SECURITY_INFORMATION, NULL, NULL, \n                              &pOldDACL, NULL, &pSD) == ERROR_SUCCESS) {\n        // Replace the old ACL with a new one that includes the ACE\n        PACL pDaclReplaced;\n        ULONG ulDaclSize = 0;\n        MergeAcls(pOldDACL, pNewDACL, &pDaclReplaced, TRUE);\n        LocalFree(pNewDACL); // No longer needed\n        pNewDACL = pDaclReplaced;\n\n        SetSecurityDescriptorDacl(pSD, TRUE, pNewDACL, FALSE);\n\n        // Write the modified security descriptor to the object\n        if (SetNamedSecurityInfo((LPWSTR)folderPath.c_str(), SE_FILE_OBJECT,\n                                 DACL_SECURITY_INFORMATION, NULL, NULL,\n                                 pNewDACL, NULL) != ERROR_SUCCESS)\n            goto Cleanup;\n    }\n\nCleanup:\n    if (pSID) FreeSid(pSID);\n    if (pOldDACL) LocalFree(pOldDACL);\n    if (pSD) LocalFree(pSD);\n    if (pNewDACL) LocalFree(pNewDACL);\n}