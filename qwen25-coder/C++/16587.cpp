#include <SDL.h>\n#include <SDL_ttf.h>\n#include <string>\n#include <list>\n\nclass Console {\npublic:\n    enum class Result {\n        NOTHING = 0,\n        ENTERED,\n        ESCAPED\n    };\n\n    static const std::string& GetInput() { return input; }\n\n    static Result Query(SDL_KeyboardEvent key) {\n        switch (key.keysym.sym) {\n            case SDLK_BACKSPACE:\n                if (!input.empty()) {\n                    input.pop_back();\n                }\n                break;\n            case SDLK_RETURN:\n                lastResult = Result::ENTERED;\n                // Call callback with the input string here, if needed\n                ClearInput();\n                break;\n            case SDLK_ESCAPE:\n                lastResult = Result::ESCAPED;\n                ClearInput();\n                break;\n            default: {\n                char ch = SDL_GetKeyFromName(SDL_GetKeyName(key.keysym.sym));\n                if (isprint(ch)) {\n                    input += ch;\n                }\n                break;\n            }\n        }\n        return lastResult;\n    }\n\n    static void RenderConsole(const std::string& buffer, SDL_Renderer* renderer) {\n        TTF_Font* font = TTF_OpenFont("path_to_font.ttf", 16);\n        if (!font) {\n            // Handle error\n        } else {\n            SDL_Color textColor = {255, 255, 255}; // White color\n            SDL_Surface* textSurface = TTF_RenderText_Solid(font, buffer.c_str(), textColor);\n            SDL_Texture* textTexture = SDL_CreateTextureFromSurface(renderer, textSurface);\n            if (textTexture) {\n                SDL_Rect textRect = {10, 760, textSurface->w, textSurface->h}; // Position console at the bottom\n                SDL_RenderCopy(renderer, textTexture, NULL, &textRect);\n                SDL_DestroyTexture(textTexture);  \n            }\n            SDL_FreeSurface(textSurface);\n            TTF_CloseFont(font);\n        }\n    }\n\nprotected:\n    static Result lastResult;\n    static std::string input;\n\n    static void ClearInput() {\n        input.clear();\n        lastResult = Result::NOTHING;\n    }\n};\n\n// Initialize static members\nConsole::Result Console::lastResult = Console::Result::NOTHING;\nstd::string Console::input = "";