#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct Employee {\n    string Name;\n    int Dept;\n};\n\nvoid stablePartition(vector<Employee>& employees) {\n    int left = 0;\n    int right = employees.size() - 1;\n    \n    while (left < right) {\n        // Move the left pointer until an employee with Dept == 1 is found\n        while (left < right && employees[left].Dept == 0) {\n            left++;\n        }\n        // Move the right pointer until an employee with Dept == 0 is found\n        while (left < right && employees[right].Dept == 1) {\n            right--;\n        }\n        // Swap if left has Dept == 1 and right has Dept == 0\n        if (left < right) {\n            swap(employees[left], employees[right]);\n        }\n    }\n}\n\nint main() {\n    vector<Employee> employees = {{"X1", 0}, {"X2", 1}, {"X3", 0}, {"X4", 1}, {"X5", 0}};\n    \n    stablePartition(employees);\n    \n    for (const auto& emp : employees) {\n        cout << emp.Name << " " << emp.Dept << endl;\n    }\n    \n    return 0;\n}