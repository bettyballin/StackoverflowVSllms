#include <iostream>\n#include <string>\n#include <thread>\n#include <atomic>\n\n// Atomic flag to indicate when to stop the program\nstd::atomic<bool> running(true);\n\nvoid readInput() {\n    while (running) {\n        std::string input;\n        if (std::getline(std::cin, input)) {\n            // Process input here\n            std::cout << "Command: " << input << std::endl;\n        }\n    }\n}\n\nvoid produceOutput() {\n    // Simulate ongoing events that output to the console\n    for (int i = 0; i < 50 && running; ++i) {\n        std::cout << "*Player killed Player2*" << std::endl;\n        std::this_thread::sleep_for(std::chrono::milliseconds(300)); // Simulate delay between events\n    }\n    running = false; // Stop the program after a while or condition is met\n}\n\nint main() {\n    std::thread inputThread(readInput);\n    std::thread outputThread(produceOutput);\n\n    inputThread.join();\n    outputThread.join();\n\n    return 0;\n}