// Assume pUnknown is your COM object that needs to access the DOM\nIUnknown* pUnknown = ...;\nIStream* pStm = nullptr;\n\nHRESULT hr = CreateStreamOnHGlobal(nullptr, TRUE, &pStm);\nif (SUCCEEDED(hr)) {\n    hr = CoMarshalInterThreadInterfaceInStream(IID_IUnknown, pUnknown, &pStm);\n    if (SUCCEEDED(hr)) {\n        // Post a message to the main thread with the handle of the stream\n        PostMessage(mainHwnd, WM_USER_THREAD_SAFE_CALL, 0, reinterpret_cast<LPARAM>(pStm));\n    } else {\n        pStm->Release();\n    }\n}\n\n// In your message handler for WM_USER_THREAD_SAFE_CALL:\nLRESULT CALLBACK MessageHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam) {\n    if (msg == WM_USER_THREAD_SAFE_CALL) {\n        IStream* pStm = reinterpret_cast<IStream*>(lParam);\n        IUnknown* pUnkMainThread = nullptr;\n        HRESULT hr = CoGetInterfaceAndReleaseStream(pStm, IID_IUnknown, reinterpret_cast<void**>(&pUnkMainThread));\n        if (SUCCEEDED(hr)) {\n            // Now you can safely use pUnkMainthread to access the DOM or perform other operations\n            IDispatch* pDisp;\n            hr = pUnkMainThread->QueryInterface(IID_IDispatch, reinterpret_cast<void**>(&pDisp));\n            if (SUCCEEDED(hr)) {\n                // Perform your DOM manipulation here using pDisp\n                pDisp->Release();\n            }\n            pUnkMainThread->Release();\n        }\n    }\n    return DefWindowProc(hwnd, msg, wParam, lParam);\n}