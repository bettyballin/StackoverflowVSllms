#include <dshow.h>\n#include <iostream>\nusing namespace std;\n\nvoid ListCodecs(const GUID& category) {\n    ICreateDevEnum *pSysDevEnum = NULL;\n    ICatInformation *pCatInfo2 = NULL;\n    HRESULT hr = CoCreateInstance(CLSID_SystemDeviceEnum, NULL, CLSCTX_INPROC_SERVER,\n                                  IID_ICreateDevEnum,(void **)&pSysDevEnum);\n    \n    if (SUCCEEDED(hr)) {\n        IEnumMoniker* pEnumMoniker;\n        hr = pSysDevEnum->CreateClassEnumerator(category, &pEnumMoniker, 0);\n\n        if(SUCCEEDED(hr) && pEnumMoniker != NULL){\n            IMoniker *pMoniker = NULL;\n            \n            while (pEnumMoniker->Next(1, &pMoniker, NULL) == S_OK) {\n                IPropertyBag *pPropBag;\n                hr = pMoniker->BindToStorage(0, 0, IID_IPropertyBag,(void**)&pPropBag );\n\n                if(SUCCEEDED(hr)){\n                    VARIANT varName;\n                    VariantInit(&varName);\n                    pPropBag->Read(L"FriendlyName", &varName, NULL);\n\n                    // Print the codec name\n                    wcout << L"Codec: " << varName.bstrVal << endl;\n\n                    VariantClear(&varName);\n                    pPropBag->Release();\n                }\n                pMoniker->Release();\n            }\n            \n            pEnumMoniker->Release();\n        }\n\n        pSysDevEnum->Release();\n    }\n\n    if(pCatInfo2) pCatInfo2->Release();\n}\n\nint main() {\n    CoInitialize(NULL);\n\n    cout << "\nAvailable Encoders\n";\n    ListCodecs(CLSID_VideoCompressorCategory);\n\n    cout << "\nAvailable Decoders\n";\n    ListCodecs(CLSID_VideoRendererCategory);\n\n    CoUninitialize();\n\n    return 0;\n}