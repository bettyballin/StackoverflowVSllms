#pragma pack(push, 8)\nstruct Statistics {\n    double Mean;\n    double StdDev;\n};\n#pragma pack(pop)\n\n// Register this struct with COM using uuid and typeinfo - example of how it should look\n// This is usually done using a MIDL file or tool to generate the appropriate definitions\n\nvoid PassStatsToManaged() {\n    SAFEARRAYBOUND rgsabound[] = { { 2, 0 } };\n    SAFEARRAY* psa = SafeArrayCreate(VT_RECORD /* or specific type code */, 1, rgsabound);\n\n    if (psa != nullptr) {\n        tagVARIANT v;\n        VariantInit(&v);\n        \n        Statistics stats[2] = {{1.0, 1.5}, {2.0, 2.5}};\n\n        for (long i = 0; i < 2; ++i) {\n            SafeArrayPutElement(psa, &i, &stats[i]);\n        }\n\n        v.vt = VT_ARRAY | VT_RECORD;\n        v.parray = psa;\n\n        // Assume pIStatisticsHandler is a pointer to the managed interface implemented in C#\n        if (pIStatisticsHandler != nullptr) {\n            pIStatisticsHandler->ProcessStats(v);\n        }\n\n        SafeArrayDestroy(psa);\n    }\n}