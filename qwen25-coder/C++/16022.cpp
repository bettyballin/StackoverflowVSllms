// Example of using OpenCV for swirl effect in C++\n   #include <opencv2/opencv.hpp>\n   #include <cmath>\n\n   cv::Mat applySwirlEffect(const cv::Mat &input, float strength) {\n       cv::Mat output = input.clone();\n       int width = input.cols;\n       int height = input.rows;\n       float centerX = width / 2.0f;\n       float centerY = height / 2.0f;\n\n       for (int y = 0; y < height; ++y) {\n           for (int x = 0; x < width; ++x) {\n               float dx = x - centerX;\n               float dy = y - centerY;\n               float distance = sqrt(dx * dx + dy * dy);\n               float angle = strength * pow(distance / ((width + height) / 4.0f), 2);\n\n               if (distance <= (width + height) / 5.0f) {\n                   int newX = centerX + cos(angle) * dx - sin(angle) * dy;\n                   int newY = centerY + sin(angle) * dx + cos(angle) * dy;\n                   if (newX >= 0 && newX < width && newY >= 0 && newY < height) {\n                       output.at<cv::Vec3b>(y, x) = input.at<cv::Vec3b>(newY, newX);\n                   }\n               } else {\n                   output.at<cv::Vec3b>(y, x) = input.at<cv::Vec3b>(y, x);\n               }\n           }\n       }\n       return output;\n   }