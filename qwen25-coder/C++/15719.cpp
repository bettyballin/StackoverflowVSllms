#include <iostream>\n#include <mutex>\n\nclass CriticalSection {\npublic:\n    void doSomething() {\n        std::cout << "Doing something in the critical section." << std::endl;\n    }\n};\n\nCriticalSection& getCriticalSection() {\n    static CriticalSection instance;\n    return instance;\n}\n\nvoid threadFunction() {\n    CriticalSection& cs = getCriticalSection();\n    // Simulate some operations\n    cs.doSomething();\n}\n\nint main() {\n    // Creating multiple threads to test the initialization\n    std::thread t1(threadFunction);\n    std::thread t2(threadFunction);\n\n    t1.join();\n    t2.join();\n\n    return 0;\n}