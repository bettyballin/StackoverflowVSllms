class ITest {\npublic:\n    virtual void doSomething() = 0;\n    virtual ~ITest() {} // Virtual, non-protected destructor\n\nprivate: // Prevent construction/destruction outside of derived classes if needed\n    ITest() {}\n    friend class DerivedClass; // Example of allowing a specific derived class to access the protected constructor\n};\n\nvoid someFunction(ITest* test) {\n    if (test != nullptr) { // Always check for null pointers\n        test->doSomething(); // ok\n        // Deleting object is allowed but should be done carefully\n        // delete test; \n    }\n}