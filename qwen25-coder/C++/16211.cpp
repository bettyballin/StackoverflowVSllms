#define _WIN32_WINNT 0x0500\n#include <cstdlib>\n#include <iostream>\n#include <windows.h>\n\nusing namespace std;\n\nvoid TerminateProcessesOnDesktop(HDESK hDesktop) {\n    DWORD aProcesses[1024], cbNeeded, cProcesses;\n    if (!EnumProcesses(aProcesses, sizeof(aProcesses), &cbNeeded)) {\n        return;\n    }\n\n    cProcesses = cbNeeded / sizeof(DWORD);\n\n    for (unsigned int i = 0; i < cProcesses; i++) {\n        if (aProcesses[i] != 0) {\n            HANDLE hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, aProcesses[i]);\n            if (hProcess == NULL) {\n                continue;\n            }\n\n            // Check if the process belongs to the desktop\n            HDESK hProcDesktop = GetThreadDesktop(GetWindowThreadProcessId(FindWindowEx(NULL, 0, NULL, NULL), NULL));\n            if (hProcDesktop != NULL && hProcDesktop == hDesktop) {\n                TerminateProcess(hProcess, 1);\n            }\n\n            CloseHandle(hProcess);\n        }\n    }\n}\n\nint main(int argc, char *argv[]) {\n    HDESK hOriginalThread = GetThreadDesktop(GetCurrentThreadId());\n    HDESK hOriginalInput = OpenInputDesktop(0, FALSE, DESKTOP_SWITCHDESKTOP);\n\n    HDESK hNewDesktop = CreateDesktop("BasicAppDesktopDesktop", NULL, NULL, 0, DELETE | READ_CONTROL | WRITE_DAC | WRITE_OWNER | GENERIC_ALL, NULL);\n    SetThreadDesktop(hNewDesktop);\n    SwitchDesktop(hNewDesktop);\n\n    STARTUPINFOA si = {0};\n    si.cb = sizeof(STARTUPINFO);\n    si.lpDesktop = "winsta0\\BasicAppDesktopDesktop";\n    PROCESS_INFORMATION infos;\n    CreateProcess(NULL, "explorer", NULL, NULL, false, NORMAL_PRIORITY_CLASS, NULL, NULL, &si, &infos);\n\n    while (!(GetAsyncKeyState(VK_F12) == -32767)) {\n        Sleep(50);\n    }\n\n    // Terminate all processes on the new desktop\n    TerminateProcessesOnDesktop(hNewDesktop);\n\n    CloseHandle(infos.hProcess);\n    CloseHandle(infos.hThread);\n\n    SwitchDesktop(hOriginalInput);\n    SetThreadDesktop(hOriginalThread);\n\n    CloseDesktop(hNewDesktop);\n    CloseDesktop(hOriginalInput);\n\n    return 0;\n}