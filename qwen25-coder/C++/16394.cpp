#include <windows.h>\n#include <iostream>\n\ntypedef void (*MyFunctionType)();  // Declare the type for the function in the DLL\n\nint main() {\n    HMODULE hModule = LoadLibrary(TEXT("C:\\YourPath\\YourDLL.dll"));  // Load DLL from specific path\n\n    if (hModule != NULL) {\n        MyFunctionType myFunction = (MyFunctionType)GetProcAddress(hModule, "MyFunctionName");  // Get function from DLL\n        if (myFunction != NULL) {\n            myFunction();  // Call the function\n        } else {\n            std::cerr << "Failed to get function address." << std::endl;\n        }\n        FreeLibrary(hModule);  // Unload the DLL\n    } else {\n        std::cerr << "Failed to load DLL." << std::endl;\n    }\n\n    return 0;\n}