#include <windows.h>\n#include <psapi.h>\n#include <tchar.h>\n\nHMODULE getCurrentModuleHandle() {\n    HMODULE hMod = NULL;\n    HANDLE hProcess = GetCurrentProcess();\n    DWORD cbNeeded;\n    HMODULE hMods[1024];\n\n    if (EnumProcessModules(hProcess, hMods, sizeof(hMods), &cbNeeded)) {\n        for (unsigned int i = 0; i < (cbNeeded / sizeof(HMODULE)); i++) {\n            TCHAR szModName[MAX_PATH];\n            // Get the full path to the module's file.\n            if (GetModuleFileNameEx(hProcess, hMods[i], szModName,\n                sizeof(szModName) / sizeof(TCHAR))) {\n                // Check if this is the current module\n                HMODULE self = NULL;\n                GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS |\n                                  GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT,\n                                  (LPCTSTR)getCurrentModuleHandle, &self);\n                if (self == hMods[i]) {\n                    hMod = hMods[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    CloseHandle(hProcess);\n\n    return hMod;\n}\n\nint main() {\n    HMODULE moduleHandle = getCurrentModuleHandle();\n    if (moduleHandle) {\n        TCHAR buffer[MAX_PATH];\n        GetModuleFileName(moduleHandle, buffer, MAX_PATH);\n        _tprintf(_T("The path to this DLL is: %s\n"), buffer);\n    } else {\n        _tprintf(_T("Failed to get module handle.\n"));\n    }\n\n    return 0;\n}