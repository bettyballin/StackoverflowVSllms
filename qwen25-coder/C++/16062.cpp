#include <windows.h>\n#include <iostream>\n\n// Assume OpenApi in DLL A and DLL B take same parameters and return type int\ntypedef int (*OpenApiFunc)(int param1, char* param2);\n\nHMODULE hLibA = NULL;\nHMODULE hLibB = NULL;\n\nint InitializeLibraries() {\n    // Load the DLLs\n    hLibA = LoadLibrary(TEXT("DllA.dll"));\n    if (!hLibA) return 1; \n\n    hLibB = LoadLibrary(TEXT("DllB.dll"));\n    if (!hLibB) return 2; \n\n    return 0;\n}\n\nvoid UnloadLibraries() {\n    if (hLibA) FreeLibrary(hLibA);\n    if (hLibB) FreeLibrary(hLibB);\n}\n\nint OpenApiFromDllA(int param1, char* param2) {\n    if (!hLibA) return -1; // Or handle error otherwise\n    OpenApiFunc pFunc = reinterpret_cast<OpenApiFunc>(GetProcAddress(hLibA, "OpenApi"));\n    if (!pFunc) return -1; // or handle error properly \n\n    return (*pFunc)(param1, param2);\n}\n\nint OpenApiFromDllB(int param1, char* param2) {\n    if (!hLibB) return -1; // Or handle error otherwise\n    OpenApiFunc pFunc = reinterpret_cast<OpenApiFunc>(GetProcAddress(hLibB, "OpenApi"));\n    if (!pFunc) return -1; // or handle error properly \n\n    return (*pFunc)(param1, param2);\n}\n\nint main() {\n    int err = InitializeLibraries();\n    if (err != 0) {\n        std::cerr << "Failed to load libraries with error code: " << err << std::endl;\n        return EXIT_FAILURE;\n    }\n\n    // Example usage\n    int resultA = OpenApiFromDllA(1, reinterpret_cast<char*>("Hello Dll A"));\n    int resultB = OpenApiFromDllB(2, reinterpret_cast<char*>("Greetings Dll B"));\n\n    UnloadLibraries();\n    return EXIT_SUCCESS;\n}