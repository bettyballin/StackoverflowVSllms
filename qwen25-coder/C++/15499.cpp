#include <emmintrin.h> // for SSE2 intrinsics\n\nint sse_memcmp(const char* s1, const char* s2, size_t n) {\n    __m128i *a = (__m128i*)s1;\n    __m128i *b = (__m128i*)s2;\n\n    while (n >= sizeof(__m128i)) {\n        __m128i vec_a = _mm_loadu_si128(a++);\n        __m128i vec_b = _mm_loadu_si128(b++);\n        __m128i eq_mask = _mm_cmpeq_epi8(vec_a, vec_b);\n        if (_mm_movemask_epi8(eq_mask) != 0xFFFF)\n            return -1;\n        n -= sizeof(__m128i);\n    }\n\n    // Handle remaining bytes\n    for (size_t i = 0; i < n; i++) {\n        if (s1[i] != s2[i])\n            return -1;\n    }\n    return 0;\n}